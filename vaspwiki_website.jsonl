{"file_name": "IBAND.md", "content": "IBAND= \\[integer array]   Default: **IBAND** \\= not setnDescription: IBAND sets a list of bands that contribute to calculating the partial charge density.  --- IBAND selects a subset of bands for which the partial charge density is calculated when LPARD \\= .TRUE..Partial charge densities are written to the PARCHG file, or one of its variants, depending on the setting of LSEPB and LSEPK. | **Mind:** Setting IBAND will automatically set NBMOD \\= N, where N is the number of bands passed to IBAND, regardless of the NBMOD setting in the INCAR file. || --- | E.g. if`IBAND = 20 21 22 23 45`the charge density will be calculated for the four bands 20 to 23 and band 45, and NBMOD will be set to 5\\."}
{"file_name": "Bethe-Salpeter_equations.md", "content": "The formalism of the Bethe\\-Salpeter equation (BSE) allows for calculating the polarizability with the electron\\-hole interaction and constitutes the state of the art for calculating absorption spectra in solids. Theory------ ### Bethe\\-Salpeter equation In the BSE, the excitation energies correspond to the eigenvalues   \u03c9  \u03bb {\\\\displaystyle \\\\omega \\_{\\\\lambda }}  of the following linear problem[\\[1]](#cite_note-sander:prb:15-1)  (  A  B  B  \u2217  A  \u2217  )  (  X  \u03bb  Y  \u03bb  )  \\=  \u03c9  \u03bb  (  1  0  0  \u2212  1  )  (  X  \u03bb  Y  \u03bb  )   . {\\\\displaystyle \\\\left({\\\\begin{array}{cc}\\\\mathbf {A} \\&\\\\mathbf {B} \\\\\\\\\\\\mathbf {B} ^{\\*}\\&\\\\mathbf {A} ^{\\*}\\\\end{array}}\\\\right)\\\\left({\\\\begin{array}{l}\\\\mathbf {X} \\_{\\\\lambda }\\\\\\\\\\\\mathbf {Y} \\_{\\\\lambda }\\\\end{array}}\\\\right)\\=\\\\omega \\_{\\\\lambda }\\\\left({\\\\begin{array}{cc}\\\\mathbf {1} \\&\\\\mathbf {0} \\\\\\\\\\\\mathbf {0} \\&\\-\\\\mathbf {1} \\\\end{array}}\\\\right)\\\\left({\\\\begin{array}{l}\\\\mathbf {X} \\_{\\\\lambda }\\\\\\\\\\\\mathbf {Y} \\_{\\\\lambda }\\\\end{array}}\\\\right)\\~.}   The matrices   A {\\\\displaystyle A}  and  A  \u2217 {\\\\displaystyle A^{\\*}}  describe the resonant and anti\\-resonant transitions between the occupied   v ,  v \u2032 {\\\\displaystyle v,v'}  and unoccupied   c ,  c \u2032 {\\\\displaystyle c,c'}  states  A  v c  v \u2032  c \u2032  \\= (  \u03b5  v  \u2212  \u03b5  c  )  \u03b4  v  v \u2032  \u03b4  c  c \u2032  \\+ \u27e8 c  v \u2032  \\|  V  \\|  v  c \u2032  \u27e9 \u2212 \u27e8 c  v \u2032  \\|  W  \\|  c \u2032  v \u27e9 . {\\\\displaystyle A\\_{vc}^{v'c'}\\=(\\\\varepsilon \\_{v}\\-\\\\varepsilon \\_{c})\\\\delta \\_{vv'}\\\\delta \\_{cc'}\\+\\\\langle cv'\\|V\\|vc'\\\\rangle \\-\\\\langle cv'\\|W\\|c'v\\\\rangle .} The energies and orbitals of these states are usually obtained in a   G  0  W  0 {\\\\displaystyle G\\_{0}W\\_{0}}  calculation, but DFT and Hybrid functional calculations can be used as well.The electron\\-electron interaction and electron\\-hole interaction are described via the bare Coulomb   V {\\\\displaystyle V}  and the screened potential   W {\\\\displaystyle W}  . The coupling between resonant and anti\\-resonant terms is described via terms   B {\\\\displaystyle B}  and  B  \u2217 {\\\\displaystyle B^{\\*}}  B  v c  v \u2032  c \u2032  \\= \u27e8 v  v \u2032  \\|  V  \\|  c  c \u2032  \u27e9 \u2212 \u27e8 v  v \u2032  \\|  W  \\|  c \u2032  c \u27e9 . {\\\\displaystyle B\\_{vc}^{v'c'}\\=\\\\langle vv'\\|V\\|cc'\\\\rangle \\-\\\\langle vv'\\|W\\|c'c\\\\rangle .} Due to the presence of this coupling, the Bethe\\-Salpeter Hamiltonian is non\\-Hermitian. ### Tamm\\-Dancoff approximation A common approximation to the BSE is the Tamm\\-Dancoff approximation (TDA), which neglects the coupling between resonant and anti\\-resonant terms, i.e.,   B {\\\\displaystyle B}  and  B  \u2217 {\\\\displaystyle B^{\\*}}  .Hence, the TDA reduces the BSE to a Hermitian problem  A  X  \u03bb  \\=  \u03c9  \u03bb  X  \u03bb   . {\\\\displaystyle AX\\_{\\\\lambda }\\=\\\\omega \\_{\\\\lambda }X\\_{\\\\lambda }\\~.} In reciprocal space, the matrix   A {\\\\displaystyle A}  is written as   A  v c  k  v \u2032  c \u2032  k  \u2032  \\= (  \u03b5  v  \u2212  \u03b5  c  )  \u03b4  v  v \u2032  \u03b4  c  c \u2032  \u03b4  k k  \u2032  \\+  2 \u03a9  \u2211  G  \u2260 0  V \u00af  G  (  q  ) \u27e8 c  k  \\|  e  i  G r  \\|  v  k  \u27e9 \u27e8  v \u2032  k  \u2032  \\|  e  \u2212 i  G r  \\|  c \u2032  k  \u2032  \u27e9 \u2212  2 \u03a9  \u2211  G , G  \u2032  W  G , G  \u2032  (  q  , \u03c9 )  \u03b4  q , k \u2212 k  \u2032  \u27e8 c  k  \\|  e  i (  q \\+ G  )  \\|  c \u2032  k  \u2032  \u27e9 \u27e8  v \u2032  k  \u2032  \\|  e  \u2212 i (  q \\+ G  )  \\|  v  k  \u27e9 , {\\\\displaystyle A\\_{vc\\\\mathbf {k} }^{v'c'\\\\mathbf {k} '}\\=(\\\\varepsilon \\_{v}\\-\\\\varepsilon \\_{c})\\\\delta \\_{vv'}\\\\delta \\_{cc'}\\\\delta \\_{\\\\mathbf {kk} '}\\+{\\\\frac {2}{\\\\Omega }}\\\\sum \\_{\\\\mathbf {G} \\\eq 0}{\\\\bar {V}}\\_{\\\\mathbf {G} }(\\\\mathbf {q} )\\\\langle c\\\\mathbf {k} \\|e^{i\\\\mathbf {Gr} }\\|v\\\\mathbf {k} \\\\rangle \\\\langle v'\\\\mathbf {k} '\\|e^{\\-i\\\\mathbf {Gr} }\\|c'\\\\mathbf {k} '\\\\rangle \\-{\\\\frac {2}{\\\\Omega }}\\\\sum \\_{\\\\mathbf {G,G} '}W\\_{\\\\mathbf {G,G} '}(\\\\mathbf {q} ,\\\\omega )\\\\delta \\_{\\\\mathbf {q,k\\-k} '}\\\\langle c\\\\mathbf {k} \\|e^{i(\\\\mathbf {q\\+G} )}\\|c'\\\\mathbf {k} '\\\\rangle \\\\langle v'\\\\mathbf {k} '\\|e^{\\-i(\\\\mathbf {q\\+G} )}\\|v\\\\mathbf {k} \\\\rangle ,} where   \u03a9 {\\\\displaystyle \\\\Omega }  is the cell volume,   V \u00af {\\\\displaystyle {\\\\bar {V}}}  is the bare Coulomb potential without the long\\-range part  V \u00af  G  (  q  ) \\=  {  0  if  G \\= 0  V  G  (  q  ) \\=  4 \u03c0  \\|  q  \\+  G  \\|  2 \u00a0else\u00a0   , {\\\\displaystyle {\\\\bar {V}}\\_{\\\\mathbf {G} }(\\\\mathbf {q} )\\={\\\\begin{cases}0\\&{\\\\text{ if }}G\\=0\\\\\\\\V\\_{\\\\mathbf {G} }(\\\\mathbf {q} )\\={\\\\frac {4\\\\pi }{\\|\\\\mathbf {q} \\+\\\\mathbf {G} \\|^{2}}}\\&{\\\\text{ else }}\\\\end{cases}}\\~,} and the screened Coulomb potential   W  G  ,  G  \u2032  (  q  , \u03c9 ) \\=  4 \u03c0  \u03f5  G  ,  G  \u2032  \u2212 1  (  q  , \u03c9 )  \\|  q  \\+  G  \\|  \\|  q  \\+  G  \u2032  \\|  . {\\\\displaystyle W\\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}(\\\\mathbf {q} ,\\\\omega )\\={\\\\frac {4\\\\pi \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}^{\\-1}(\\\\mathbf {q} ,\\\\omega )}{\\|\\\\mathbf {q} \\+\\\\mathbf {G} \\|\\\\left\\|\\\\mathbf {q} \\+\\\\mathbf {G} ^{\\\\prime }\\\\right\\|}}.} Here, the dielectric function   \u03f5  G ,  G \u2032  (  q  ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G,G'} }(\\\\mathbf {q} )}  describes the screening in   W {\\\\displaystyle W}  within the random\\-phase approximation (RPA)  \u03f5  G  ,  G  \u2032  \u2212 1  (  q  , \u03c9 ) \\=  \u03b4  G  ,  G  \u2032  \\+  4 \u03c0  \\|  q  \\+  G  \\|  2  \u03c7  G  ,  G  \u2032  R P A  (  q  , \u03c9 ) . {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}^{\\-1}(\\\\mathbf {q} ,\\\\omega )\\=\\\\delta \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}\\+{\\\\frac {4\\\\pi }{\\|\\\\mathbf {q} \\+\\\\mathbf {G} \\|^{2}}}\\\\chi \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}^{\\\\mathrm {RPA} }(\\\\mathbf {q} ,\\\\omega ).} Although the dielectric function is frequency\\-dependent, the static approximation   W  G  ,  G  \u2032  (  q  , \u03c9 \\= 0 ) {\\\\displaystyle W\\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}(\\\\mathbf {q} ,\\\\omega \\=0\\)}  is considered a standard for practical BSE calculations.    Scaling------- The scaling of the BSE equation strongly limits its application for large systems. The main limiting factor is the diagonalization of the BSE Hamiltonian. The rank of the Hamiltonian is   N  r a n k  \\=  N  k  \u00d7  N  c  \u00d7  N  v {\\\\displaystyle N\\_{\\\\rm {rank}}\\=N\\_{k}\\\\times N\\_{c}\\\\times N\\_{v}}  ,where   N  k {\\\\displaystyle N\\_{k}}  is the number of k\\-points in the Brillouin zone and   N  c {\\\\displaystyle N\\_{c}}  and  N  v {\\\\displaystyle N\\_{v}}  are the number of conduction and valence bands, respectively. The diagonalization of the matrix scales cubically with the matrix rank, i.e.,   N  r a n k  3 {\\\\displaystyle N\\_{\\\\rm {rank}}^{3}}  . Despite the fact that this matrix diagonalization is usually the bottleneck for bigger systems, the construction of the BSE Hamiltonian also scales unfavorably and can play a dominant role in big systems, i.e.,  N  k  \u00d7  N  q  \u00d7 (  N  v  \u00d7  N  v  \u00d7  N  G  \u00d7  N  c  \u00d7  N  c  ) {\\\\displaystyle N\\_{k}\\\\times N\\_{q}\\\\times (N\\_{v}\\\\times N\\_{v}\\\\times N\\_{G}\\\\times N\\_{c}\\\\times N\\_{c})}  ,where   N  q {\\\\displaystyle N\\_{q}}  is the number of q\\-points and   N  G {\\\\displaystyle N\\_{G}}  number of G\\-vectors. Exact diagonalization--------------------- The diagonalization of the BSE Hamiltonian can be perform using various eigensolvers provided in ScaLAPACK, ELPA, and cuSolver libraries. The advantage of this approach is that the eigenvectors can be directly obtained and used for the analysis of the excitons.Using the eigenvalues   \u03c9  \u03bb {\\\\displaystyle \\\\omega \\_{\\\\lambda }}  and eigenvectors   X  \u03bb {\\\\displaystyle X\\_{\\\\lambda }}  of the BSE Hamiltonian, the macroscopic dielectric which accounts for the excitonic effects can be found   \u03f5  M  (  q  , \u03c9 ) \\= 1 \\+ 2  lim  q  \u2192 0  v ( q )  \u2211  \u03bb  \\|  \u2211  c , v , k  \u27e8 c  k  \\|  e  i  q r  \\|  v  k  \u27e9  X  \u03bb  c v  k  \\|  2  \u00d7  (  1  \u03c9  \u03bb  \u2212 \u03c9 \u2212 i \u03b4  )   . {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\=1\\+2\\\\lim \\_{\\\\mathbf {q} \\\\rightarrow 0}v(q)\\\\sum \\_{\\\\lambda }\\\\left\\|\\\\sum \\_{c,v,k}\\\\langle c\\\\mathbf {k} \\|e^{i\\\\mathbf {qr} }\\|v\\\\mathbf {k} \\\\rangle X\\_{\\\\lambda }^{cv\\\\mathbf {k} }\\\\right\\|^{2}\\\\times \\\\left({\\\\frac {1}{\\\\omega \\_{\\\\lambda }\\-\\\\omega \\-i\\\\delta }}\\\\right)\\~.} The following features are currently supported: * Calculating the dielectric function and eigenvectors* Calculations beyond Tamm\\-Dancoff approximation* Calculations of   \u03b5 (  q  , \u03c9 ) {\\\\displaystyle \\\\varepsilon (\\\\mathbf {q} ,\\\\omega )}  for  q  \u2260 0 {\\\\displaystyle \\\\mathbf {q} \\\eq 0} * Fatband plot Time evolution-------------- Alternatively, it is possible to use the time\\-evolution algorithm which applies a short Dirac delta pulse of electric field and then follows the evolution of the dipole moments. The dielectric function is found via a Fourier transform [\\[2]](#cite_note-sander:jcp:2017-2)  \u03f5  M  ( \u03c9 ) \\= 1 \u2212  4 \u03c0  \u03a9  \u222b  0  \u221e  d  t  \u2211  c , v ,  k  (  \u27e8  \u03bc  c v  k  \\|  \u03be  c v  k  ( t ) \u27e9 \\+ c . c .  )  e  \u2212 i ( \u03c9 \u2212 i \u03b4 ) t {\\\\displaystyle \\\\epsilon \\_{M}(\\\\omega )\\=1\\-{\\\\frac {4\\\\pi }{\\\\Omega }}\\\\int \\_{0}^{\\\\infty }\\\\mathrm {d} t\\\\sum \\_{c,v,\\\\mathbf {k} }\\\\left(\\\\langle \\\\mu \\_{cv\\\\mathbf {k} }\\|\\\\xi \\_{cv\\\\mathbf {k} }(t)\\\\rangle \\+c.c.\\\\right)e^{\\-i(\\\\omega \\-i\\\\delta )t}}  ,where   \u03bc {\\\\displaystyle \\\\mu }  and  \u03be ( t ) {\\\\displaystyle \\\\xi (t)}  are the dipole moments.  The solution found this way is strictly equivalent to the same solution as the exact diagonalization and can be used for obtaining the absorption spectrum, but does not yield the eigenvectors, which can be limiting for the analysis of the excitons. The advantage of this approach is the quadratic scaling with the size of the BSE Hamiltonian   N  r a n k  2 {\\\\displaystyle N\\_{rank}^{2}}  . The time\\-evolution algorithm can be selected by setting IBSE \\= 1 in a BSE calculation. The required number of steps in the time\\-evolution calculation depends on the broadening CSHIFT and the maximum energy OMEGAMAX. The precision can be selected via tag BSEPREC. | **Mind:** The required number of steps does not depend on the size of the Hamiltonian || --- | The following features are currently supported: * Calculating the dielectric function* Calculations beyond the Tamm\\-Dancoff approximation How to------ * Practical guide for solving the Bethe\\-Salpeter equation via diagonalization BSE calculations* Practical guide for solving the Casida equation via diagonalization TDDFT calculations"}
{"file_name": "OSZICAR.md", "content": "Information about convergence speed and about the current step is written to stdout and to the OSZICAR file. Always keep a copy of the OSZICAR file, it might give important information. Typically you will get something similar to the following lines:  ``` reading files WARNING: wrap around errors must be expected entering main loop      N     E                dE          d eps    ncg  rms     rms(c)CG\u00a0:  1   -.13238703E+04   -.132E+04   -.934E+02  56  .28E+02CG\u00a0:  2   -.13391360E+04   -.152E+02   -.982E+01  82  .54E+01CG\u00a0:  3   -.13397892E+04   -.653E+00   -.553E+00  72  .13E+01  .14E+00CG\u00a0:  4   -.13400939E+04   -.304E+00   -.287E+00  84  .48E+00  .39E-01CG\u00a0:  5   -.13401306E+04   -.366E-01   -.322E-01  69  .35E+00  .17E-01CG\u00a0:  6   -.13401489E+04   -.183E-01   -.169E-01  75  .74E-01  .66E-02CG\u00a0:  7   -.13401516E+04   -.267E-02   -.250E-02  68  .47E-01  .37E-02CG\u00a0:  8   -.13401522E+04   -.567E-03   -.489E-03  53  .15E-01  .90E-03   1 F= -.13401522E+04 E0= -.13397340E+04  d E = -.13402E+04 trial: gam=  .00000 g(F)=   .153E+01 g(S)=   .000E+00 ort =  .000E+00 charge predicted from atoms charge from overlapping atoms      N     E                dE          d eps    ncg   rms    rms(c)CG\u00a0:  1   -.13400357E+04   -.134E+04   -.926E+01   56   .97E+01  ``` *N* is the number of electronic steps, *E* the current free energy, *dE* the change in the free energy from the last to the current step and *d eps* the change in the bandstructure energy. Furthermore *ncg* is the number of evaluations of the Hamiltonian acting on a wavefunction, *rms* is the norm of the residuum (  R \\= H \u2212 \u03f5 S  \\|  \u03d5 \u27e9 {\\\\displaystyle R\\=H\\-\\\\epsilon S\\|\\\\phi \\\\rangle } ) of the trial wave functions (i.e. their approximate error) and *rms(c)* is the difference between input and output charge density. The next line (after the *N*\\+1 lines) gives information about the total energy after obtaining convergence. The first values is the total free energy *F* (at this point the energy of the reference atom has been subtracted), *E0* is the energy for   \u03c3 \u2192 0 {\\\\displaystyle \\\\sigma \\\\to 0}  (see also Partial occupancies\")) and *dE* is the change in the total energy between the current and the last step; for a static run *dE* is the entropy multiplied by   s i g m a {\\\\displaystyle sigma} . For a molecular dynamics calculation (IBRION\\=0\\) this line looks a little bit different:  ```   1 T= 1873.0 E= -.13382154E+04 F= -.13401522E+04 E0= -.13397340E+04     EK=   .19368E+01 SP=  .00E+00 SK=  .00E+00  ``` *T* corresponds to the current temperature and *E* to the total free energy (including the kinetic energy of the ions and the energy of the Nos\u00e9 thermostat). *F* and *E0* are the same as above. *EK* is the kinetic energy, *SP* is the potential energy of the Nos\u00e9 thermostat and *SK* the corresponding kinetic energy. Additional technical parameters and some status reports are written to stdout. The ouput to the OSZICAR file is also written for force\\-field only steps when machine learning force fields are used. In that case the *E0* entry contains the same as the *F* entry since the entropy cannot be calculated in this method. The rest is analogous to the ab initio output.  ---"}
{"file_name": "ML_CTIFOR.md", "content": "ML\\_CTIFOR= \\[real]   Default: **ML\\_CTIFOR** \\=  0\\.002 {\\\\displaystyle 0\\.002}   Description: This flag sets the threshold for the Bayesian error estimation on the force within the machine learning force field method.  --- The use of this tag in combination with the learning algorithms is described here: here. Generally, first principles calculations are only performed if the Bayesian error estimate of one force exceeds the threshold.  The initial threshold is set to the value provided by the tag ML\\_CTIFOR (the unit is eV/Angstrom). This threshold can be updated dynamically during ML. The details of the update are controlled by ML\\_ICRITERIA. Typically, after extensive training, attainable values for ML\\_CTIFOR are 0\\.02 around 300\\-500 K, and 0\\.06 around 1000\\-2000 K, so temperature but also system dependent. The initial default 0\\.002 is only sensible, if ML\\_CTIFOR is automatically updated (ML\\_ICRITERIA \\= 1 or 2\\). If ML\\_ICRITERIA \\= 0 is used, it is necessary to use significantly larger values around 0\\.02\\-0\\.06 for ML\\_CTIFOR. The related tag ML\\_SCLC\\_CTIFOR determines how many local reference configurations are chosen from each first principles calculations."}
{"file_name": "QMAXFOCKAE.md", "content": "QMAXFOCKAE= \\[real array]nDescription: The parameter QMAXFOCKAE controls at which wave vectors the local augmentation charges are fitted to obtain an accurate charge augmentation on the plane wave grid.   --- We do not recommend setting these tags manually, except after careful inspectionof the VASP code (fast\\_aug.F). The default values are 6\\.0 \u00c5\\-1 if NMAXFOCKAE\\=1 (corresponding to 140 eV), and 5\\.0 and 10 \u00c5\\-1 (corresponding to 95 eV and 380 eV)for NMAXFOCKAE\\=2\\."}
{"file_name": "LIBXC1.md", "content": "LIBXC1= \\[string] or \\[integer]nDescription: LIBXC1 specifies the exchange or exchange\\-correlation functional from the library of exchange\\-correlation functionals Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3).  --- | **Important:** This feature is available from VASP.6\\.3\\.0 onwards that needs to be compiled with \\-DUSELIBXC. || --- | LIBXC1 and LIBXC2 can be set to a label (string) or number (integer) associated with a functional listed on the Libxc website[\\[4]](#cite_note-libxc_list-4), e.g., `GGA_X_PBE` and `101` for PBE exchange. The label indicates if this is an exchange (X), correlation (C), or exchange\\-correlation (XC) functional, and which family it belongs to, namely LDA (LDA or HYB\\_LDA), GGA (GGA or HYB\\_GGA) or meta\\-GGA (MGGA or HYB\\_MGGA). If LIBXC1 corresponds to an exchange functional, then it can be used in combination with LIBXC2 for the correlation functional. Libxc is a separate library package that has to be downloaded[\\[3]](#cite_note-libxc-3) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries. Calculations with Laplacian\\-dependent meta\\-GGA functionals and meta\\-GGA\\-based hybrid functionals are possible since VASP.6\\.4\\.0\\. | **Warning:** Do not use the Libxc functionals that are hybrid\\-MGGA\\-exchange\\-only, i.e., those whose label starts with HYB\\_MGGA\\_X, since the results will be wrong. || --- | | **Important:** To get correct results with meta\\-GGA functionals (see discussion at LTBOUNDLIBXC), it is necessary to use Libxc from version 5\\.2\\.0 onwards (or the master version for the latest implemented functionals) and to compile it with the option `--disable-fhc`. || --- | How to------ The allowed possibilities for LIBXC1 and LIBXC2 are the following: * Both LIBXC1\u00a0 and LIBXC2 are specified and correspond to exchange and correlation functionals, respectively.* Only LIBXC1\u00a0 is specified and corresponds to an exchange or exchange\\-correlation functional. | **Warning:** If LIBXC1\u00a0 is an exchange\\-correlation functional, then LIBXC2\u00a0 can not be used. || --- | * LIBXC1\u00a0 and LIBXC2 can correspond to functionals of different families, e.g., a meta\\-GGA and a GGA, respectively. Regarding other tags in INCAR related to Libxc: * One also has to specify GGA \\= LIBXC for LDA, GGA and GGA\\-based hybrid functionals or METAGGA \\= LIBXC for meta\\-GGA functionals and meta\\-GGA\\-based hybrid functionals. Note that if one of the tags (LIBXC1\u00a0 or LIBXC2\u00a0) corresponds to a meta\\-GGA, while the other corresponds to a GGA or LDA, then METAGGA \\= LIBXC (and not GGA \\= LIBXC) has to be specified.* Many of the functionals implemented in Libxc have parameters that can be modified. This can be done via the tags LIBXC1\\_Pn and LIBXC2\\_Pn, where   n \\= 1 , 2 , \u2026 {\\\\displaystyle n\\=1,2,\\\\ldots }  .* The tag LTBOUNDLIBXC, which is .FALSE. by default, allows to enforce the lower bound on the kinetic\\-energy density (  \u03c4  \u03c3  W  \\<  \u03c4  \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }^{\\\\mathrm {W} }\\<\\\\tau \\_{\\\\sigma }} ) with   \u03c4  \u03c3  \\= max (  \u03c4  \u03c3  ,  \u03c4  \u03c3  W  ) {\\\\displaystyle \\\\tau \\_{\\\\sigma }\\=\\\\max(\\\\tau \\_{\\\\sigma },\\\\tau \\_{\\\\sigma }^{\\\\mathrm {W} })}  before   \u03c4  \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }}  is used in a meta\\-GGA functional from Libxc. For calculations with hybrid functionals (LHFCALC\\=True), the following provides some explanations: * The Libxc functionals whose tag starts with HYB already include the mixing parameter. Therefore, for them, the ALDAX, ALDAC, AGGAX, AGGAC, AMGGAX, and AMGGAC tags can not be used (more information on how to modify the mixing and screening parameters can be found at LIBXC1\\_Pn).* If the semilocal component of the hybrid functional is constructed using Libxc functionals that do not contain HYB in the tag, then ALDAX, AGGAX, ALDAC, and AGGAC will be used and multiply  E  x  L D A  \\= \u222b  \u03f5  x  L D A  ( n )  d  3  r {\\\\displaystyle E\\_{\\\\mathrm {x} }^{\\\\mathrm {LDA} }\\=\\\\int \\\\epsilon \\_{\\\\mathrm {x} }^{\\\\mathrm {LDA} }(n)d^{3}r}  \u0394  E  x  G G A  \\= \u222b  (  \u03f5  x  G G A  ( n , \u2207 n ) \u2212  \u03f5  x  L D A  ( n )  )  d  3  r {\\\\displaystyle \\\\Delta E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA} }\\=\\\\int \\\\left(\\\\epsilon \\_{\\\\mathrm {x} }^{\\\\mathrm {GGA} }(n,\\\abla n)\\-\\\\epsilon \\_{\\\\mathrm {x} }^{\\\\mathrm {LDA} }(n)\\\\right)d^{3}r}  E  c  L D A  \\= \u222b  \u03f5  c  L D A  ( n )  d  3  r {\\\\displaystyle E\\_{\\\\mathrm {c} }^{\\\\mathrm {LDA} }\\=\\\\int \\\\epsilon \\_{\\\\mathrm {c} }^{\\\\mathrm {LDA} }(n)d^{3}r}  \u0394  E  c  G G A  \\= \u222b  (  \u03f5  c  G G A  ( n , \u2207 n ) \u2212  \u03f5  c  L D A  ( n )  )  d  3  r {\\\\displaystyle \\\\Delta E\\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} }\\=\\\\int \\\\left(\\\\epsilon \\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} }(n,\\\abla n)\\-\\\\epsilon \\_{\\\\mathrm {c} }^{\\\\mathrm {LDA} }(n)\\\\right)d^{3}r} respectively, where   \u03f5  x  L D A  ( n ) \\= \u2212  (  3  /  4  )  (  3  /  \u03c0  )  1  /  3  n  4  /  3 {\\\\displaystyle \\\\epsilon \\_{\\\\mathrm {x} }^{\\\\mathrm {LDA} }(n)\\=\\-\\\\left(3/4\\\\right)\\\\left(3/\\\\pi \\\\right)^{1/3}n^{4/3}}  and  \u03f5  c  L D A  ( n ) \\=  \u03f5  c  G G A  ( n , \u2207 n \\= 0 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathrm {c} }^{\\\\mathrm {LDA} }(n)\\=\\\\epsilon \\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} }(n,\\\abla n\\=0\\)}  .Examples of INCAR--------------------------------------- * PBE[\\[5]](#cite_note-perdew:prl:1996-5)  ```GGA = LIBXCLIBXC1 = GGA_X_PBE # or 101LIBXC2 = GGA_C_PBE # or 130  ``` * SCAN[\\[6]](#cite_note-sun:prl:15-6)  ```METAGGA = LIBXCLIBXC1 = MGGA_X_SCAN # or 263LIBXC2 = MGGA_C_SCAN # or 267  ``` * PBEh (PBE0\\)[\\[7]](#cite_note-adamo:jcp:1999-7)  ```LHFCALC = .TRUE.AEXX = 0.25GGA = LIBXCLIBXC1 = HYB_GGA_XC_PBEH # or 406  ``` * SCAN0  ```LHFCALC = .TRUE.AEXX = 0.25METAGGA = LIBXCLIBXC1 = MGGA_X_SCAN # or 263LIBXC1 = MGGA_C_SCAN # or 267  ```"}
{"file_name": "IMAGES.md", "content": "IMAGES= \\[integer]   Default: **IMAGES** \\= 0nDescription: Defines the number of VASP calculations in separate directories, (e.g., 01, 02, 03, etc.) for nudged elastic band calculations, parallel tempering, and thermodynamic integration.  --- IMAGES sets the number of independent VASP calculations in separate directories. The primary INCAR file should be located in the root directory.Other files such as KPOINTS, POTCAR, and POSCAR can be placed in subdirectories, e.g., 01, 02, 03, etc., or in the root directory. Files in subdirectories take precedence over those in the root directory. See use cases described below. File handling------------- When VASP starts, it reads the file INCAR in the root directory.Subsequently, VASP splits the MPI communicator into subgroups for each image.If an INCAR file is present in the subdirectories 01, 02, 03, ..., VASP will process those afterward.Otherwise, VASP continues reading from the root INCAR file. You can also provide image\\-specific data in the root INCAR file if the files are very similar  ``` # general INCAR tags IMAGES = 4 TEBEG = 600  # INCAR tags only on IMAGE 1 IMAGE_1 {   TEBEG = 400 }  # INCAR tags only on IMAGE 2 IMAGE_2 {   TEBEG = 500 }  ``` Here, images 3 and 4 would use TEBEG\\=600 because the value is not specified for the image.The files KPOINTS and POTCAR will be read from the subdirectory if available and from the root directory otherwise.The POSCAR file and all other input files are always read from the subdirectories.All output files (including OUTCAR and OSZICAR) are always written to the subdirectories. To summarize, to run a calculation with IMAGES, you provide: * an INCAR file in the root directory* optionally an overwriting INCAR file in the subdirectories* POSCAR files in the subdirectories* KPOINTS and POTCAR either in the root or in the subdirectories Use cases--------- Nudged elastic bandsIf IMAGES is set without any other tag, an elastic\\-band calculation is performed. This defaults to the recommended nudged\\-elastic\\-band method, but other options are available by modifying the SPRING tag. Please consider the nudged\\-elastic\\-bands how\\-to and the SPRING tag for more information.Thermodynamic coupling\\-constant integrationsWhen VCAIMAGES is set in the INCAR file, VASP computes a thermodynamic coupling\\-constant integration. This, in turn, sets IMAGES\\=2, running two VASP calculations in the subdirectories 01 and 02\\. Since this is a special case where the two calculations may have different computational costs, NCORE\\_IN\\_IMAGE1 can be set to force an unequal split of the processes across the two images. The tag VCAIMAGES describes in more detail how to set up these calculations.Parallel tempering/replica\\-exchange method and performing independent calculationsIf the tag LTEMPER\\=.TRUE. is set in the INCAR file, VASP will perform parallel tempering calculations. In this case, it is necessary to provide different POSCAR files in each subdirectory and modify the TEBEG either by separate INCAR files or nested IMAGE\\_*X*/TEBEG definitions in the root INCAR file. For further details, refer to the description of the LTEMPER tag. The combination LTEMPER\\=.TRUE. and NTEMPER\\=0, also allows to run entirely independent calculations in the individual subdirectories. This might be helpful to make better use of nodes with many cores."}
{"file_name": "Time-dependent_density-functional_theory_calculations.md", "content": "VASP offers a powerful module for performing time\\-dependent density\\-functional theory (TDDFT) or time\\-dependent Hartree\\-Fock (TDHF) calculations by solving the Casida equation . This approach can be used for obtaining the frequency\\-dependent dielectric function with the excitonic effects and can be based on the ground\\-state electronic structure in the DFT, hybrid\\-functional or even *GW* approximations.  Solving Casida equation----------------------- The algorithm for solving the Casida equation can be selected by setting ALGO \\= TDHF. This approach is very similar to BSE but differs in the way the screening of the Coulomb potential is approximated. The TDHF approach uses the exchange\\-correlation kernel   f  x c {\\\\displaystyle f\\_{\\\\rm {xc}}} , whereas BSE requires the   W ( \u03c9 \u2192 0 ) {\\\\displaystyle W(\\\\omega \\\\to 0\\)}  from a preceding *GW*  calculation. Thus, in order to perform a TDHF calculation, one only needs to provide the ground\\-state orbitals (WAVECAR) and the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  (WAVEDER). | **Mind:** Unlike BSE, TDHF calculations do **not** require     W ( \u03c9 \u2192 0 )   {\\\\displaystyle W(\\\\omega \\\\to 0\\)}  W(\\omega \\to 0), i.e., Wxxxx.tmp || --- | In summary, both TDHF and BSE approaches require a preceding ground\\-state calculation, however, the TDHF does not need the preceding *GW* and can be performed with the DFT or hybrid\\-functional orbitals and energies. Time\\-dependent Hartree\\-Fock----------------------------- The TDHF calculations can be performed in two steps:  1. ground\\-state calculation2. optical absorption calculation For example, an optical absorption calculation of bulk Si can be performed using a dielectric\\-dependent hybrid\\-functional described in Refs.[\\[1]](#cite_note-chen2018nonempirical-1)[\\[2]](#cite_note-cui2018doubly-2)[\\[3]](#cite_note-liu2019assessing-3).  ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     \u00a0! or any larger desired valueALGO      = D      \u00a0! Damped algorithm often required for HF type calculations, ALGO = Normal might work as wellLHFCALC   = .TRUE. LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22LOPTICS   = .TRUE. \u00a0! can also be done in an additional intermediate step  ``` In the second step, the dielectric function is evaluated by solving the Casida equation   ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     ALGO      = TDHFIBSE      = 0NBANDSO   = 4      \u00a0! number of occupied bandsNBANDSV   = 8      \u00a0! number of unoccupied bandsLHARTREE  = .TRUE.LADDER    = .TRUE.LFXC      = .TRUE.LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22  ``` THDF calculations can be performed for non\\-spin\\-polarized, spin\\-polarized, and noncollinear cases, as well as the case with spin\\-orbit coupling. There is, however, one caveat. The local exchange\\-correlation kernel is approximated by the density\\-density part only. This makes predictions for spin\\-polarized systems less accurate than for non\\-spin\\-polarized systems. Time\\-dependent DFT calculation------------------------------- The TDDFT calculation using the PBE exchange\\-correlation kernel can be performed by disabling the ladder diagrams LADDER \\= .FALSE., i.e., only the PBE exchange\\-correlation kernel is present in the Hamiltonian.  ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     ALGO      = TDHFIBSE      = 0NBANDSO   = 4      \u00a0! determines how many occupied bands are usedNBANDSV   = 8      \u00a0! determines how many unoccupied (virtual) bands are usedLFXC      = .TRUE.LHARTREE  = .TRUE.LADDER    = .FALSE.  ``` | **Mind:** In TDDFT calculation, where the ladder diagrams are not included (LADDER\\=.FALSE.) or the fraction of exact exchange in the kernel is zero (AEXX\\=0\\), the resulting dielectric function lacks the excitonic effects. || --- | VASP tries to use sensible defaults, but it is highly recommended to check the OUTCAR file and make sure that the right bands are included. The tag OMEGAMAX specifies the maximum excitation energy of included electron\\-hole pairs and the pairs with the one\\-electron energy difference beyond this limit are not included in the Hamiltonian.  The calculated frequency\\-dependent dielectric function, transition energies and oscillator strength values are stored in the vasprun.xml\") file. Calculations beyond Tamm\\-Dancoff approximation----------------------------------------------- Calculations beyond Tamm\\-Dancoff approximation can be performed in the same manner as in the BSE. Calculations at finite wavevectors---------------------------------- Calculations at finite wavevectors can be performed in the same manner as in the BSE."}
{"file_name": "Improved_dimer_method.md", "content": "The dimer method[\\[1]](#cite_note-henkelman:jpc:1999-1) is a technique for the optimization of transition states. In VASP, the improved dimer method (IDM) by Heyden et al. is implemented, and a detailed presentation of the method can be found in their paper[\\[2]](#cite_note-heyden:jpc:2005-2). The algorithm for IDM consists of the following cyclically repeated steps: * The curvature along the dimer axis is computed using finite differences. The initial dimer direction must be provided (see below).* The dimer is rotated such that its axis is parallel with the direction of the maximal negative curvature.* An optimization step is taken, and the potential energy is maximized along the unstable direction, (i.e., dimer axis) while it is minimized in all other directions. The method is invoked by setting IBRION\\=44 in the INCAR file. Furthermore, the user must specify the direction of the unstable mode. The corresponding   3 N {\\\\displaystyle 3N}  dimensional vector is defined in the POSCAR file after the lines with atomic coordinates and a separating blank line. Note that the dimer direction is automatically normalized, i.e., the norm of the dimer axis is irrelevant. An example of a POSCAR file for a simulation with the dimer method is given in the following:  ```ammonia flipping 1.6. 0. 0.0. 7. 0.0. 0. 8. H N 3 1cart       -0.872954        0.000000       -0.504000       \u00a0! coordinates for atom 1        0.000000        0.000000        1.008000        0.872954        0.000000       -0.504000        0.000000        0.000000        0.000000       \u00a0! coordinates for atom N      \u00a0! here we define trial unstable direction:        0.000001    0.522103   -0.000009       \u00a0! components for atom 1       -0.000006    0.530068    0.000000       -0.000005    0.522067   -0.000007        0.000001   -0.111442    0.000001       \u00a0! components for atom N  ``` As in the other structural optimization algorithms in VASP, convergence is controlled through the EDIFFG tag. Experienced users can affect the performance of the dimer method by modifying the numerical values of the following parameters (the given example values are the default values): * FINDIFF\\=1 Use a forward (FINDIFF\\=1\\) or central (FINDIFF\\=2\\) difference formula for the numerical differentiation to compute the curvature along the dimer direction* DIMER\\_DIST\\=0\\.01 The step size for a numerical differentiation (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  )* MINROT\\=0\\.01 Dimer is rotated only if the predicted rotation angle is greater than MINROT (rad.)* STEP\\_SIZE\\=0\\.01 Trial step size for optimization step (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  )* STEP\\_MAX\\=0\\.1 Trust radius (upper limit) for the optimization step (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ) Important information about the progress of optimization is written in the OUTCAR file after the expression *DIMER METHOD*. In particular, it is useful to check the curvature along the dimer direction, which should be a negative number (a long sequence of positive numbers usually indicates that the algorithm fails to converge to the correct transition state). | **Mind:** The current implementation does not support lattice optimizations (ISIF\\>2\\) and can be used only for the relaxation of atomic positions. || --- | Initial dimer axis------------------ The direction of an unstable vibrational mode can be obtained by performing the vibrational analysis (IBRION\\=5\\) and taking the x\\-, y\\-, and z\\- components of the imaginary vibrational mode (after division by   m {\\\\displaystyle {\\\\sqrt {m}}} !) parallel with the reaction coordinate. Note that in order to plot \"Eigenvectors after division by SQRT(mass)\", NWRITE\\=3 should be used. Practical example----------------- In this example, the transition state for the ammonia flipping is computed. All calculations discussed here were performed using the PBE functional, Brillouin zone sampling was restricted to the gamma point. This practical example can be completed in a few seconds on a standard desktop PC. The starting structure for the IDM simulation should be a reasonable guess for the transition state. A POSCAR file with the initial guess for the ammonia flipping looks like this:  ```ammonia flipping 1.6. 0. 0.0. 7. 0.0. 0. 8. H N 3 1cart       -0.872954        0.000000       -0.504000        0.000000        0.000000        1.008000        0.872954        0.000000       -0.504000        0.000000        0.000000        0.000000  ``` As an input for the dimer method, the direction of the unstable mode (dimer axis) is needed. This can be obtained by performing vibrational analysis. The INCAR file should contain the following lines:  ```NSW = 1Prec\") = NormalIBRION = 5                \u00a0! perform vibrational analysisNFREE = 2                 \u00a0! select central differences algorithmPOTIM = 0.02              \u00a0! step for the numerical differenciation NWRITE = 3                \u00a0! write down eigenvectors of dynamical matrix after division by SQRT(mass)  ``` After completing the vibrational analysis, we look up the hardest imaginary mode (Eigenvectors after division by SQRT(mass)!) in the OUTCAR file:  ``` 12 f/i=   23.224372 THz   145.923033 2PiTHz  774.681641 cm-1    96.048317 meV             X         Y         Z           dx          dy          dz      5.127046  0.000000  7.496000     0.000001    0.522103   -0.000009      0.000000  0.000000  1.008000    -0.000006    0.530068    0.000000      0.872954  0.000000  7.496000    -0.000005    0.522067   -0.000007      0.000000  0.000000  0.000000     0.000001   -0.111442    0.000001  ``` and use the last three columns to define the dimer axis in the POSCAR file:  ```ammonia flipping 1.6. 0. 0.0. 7. 0.0. 0. 8. H N 3 1cart       -0.872954        0.000000       -0.504000       \u00a0! coordinates for atom 1        0.000000        0.000000        1.008000        0.872954        0.000000       -0.504000        0.000000        0.000000        0.000000       \u00a0! coordinates for atom N       \u00a0! here we define trial unstable direction:        0.000001    0.522103   -0.000009       \u00a0! components for atom 1       -0.000006    0.530068    0.000000       -0.000005    0.522067   -0.000007        0.000001   -0.111442    0.000001       \u00a0! components for atom N  ``` In order to perform IDM calculation, the INCAR file should contain the following lines:  ```NSW = 100           Prec\")=NormalIBRION=44          \u00a0!  use the dimer method as optimization engineEDIFFG=-0.03  ``` With this setting, the algorithm converges in just a few relaxation steps. Further vibrational analysis can be performed to prove that the relaxed structure is indeed a first\\-order saddle point (one imaginary frequency)."}
{"file_name": "CHGCAR.md", "content": "The CHGCAR file stores the charge density and the PAW one\\-center occupancies. It is written by default, but it can be avoided (LCHARG) or redirected to vaspwave.h5 (LH5).The CHGCAR file can be read to restart a calculation (ICHARG). | **Tip:** We recommend starting from the CHGCAR file when repeatedly restarting with small changes in the input parameters, e.g., the **k**\\-point mesh (KPOINTS). || --- | The CHG file also stores the charge density without the PAW one\\-center occupancies and is intended for visualization and post\\-processing. Format------ The CHGCAR consists of the following blocks: * Structure in POSCAR format* FFT\\-grid dimensions NGXF, NGYF, NGZF* Charge times FFT\\-grid volume is written with multiple real numbers per line until all NGXF\\*NGYF\\*NGZF values of the block are written.* Augmentation occupancies The real\\-space mesh (NX,NY,NZ) is uniform and is spanned by the lattice vectors   a \u2192  ,  b \u2192  ,  c \u2192 {\\\\displaystyle {\\\\vec {a}},{\\\\vec {b}},{\\\\vec {c}}}  defined in the structure block. The coordinates of the mesh points can be restored via  (  N  x  ,  N  y  ,  N  z  )  \\= ^  N  x  \u2212 1  N  G X F  a  \\+  N  y  \u2212 1  N  G Y F  b  \\+  N  z  \u2212 1  N  G Z F  c {\\\\displaystyle (N\\_{x},N\\_{y},N\\_{z}){\\\\hat {\\=}}{\\\\frac {N\\_{x}\\-1}{N\\_{GXF}}}\\\\mathbf {a} \\+{\\\\frac {N\\_{y}\\-1}{N\\_{GYF}}}\\\\mathbf {b} \\+{\\\\frac {N\\_{z}\\-1}{N\\_{GZF}}}\\\\mathbf {c} }  .The dimensions can be increased by increasing the cutoff energy (ENCUT) or explicitly by setting the fine FFT\\-grid dimensions (NGXF, NGYF, NGZF). To arrange the data on the real\\-space grid in the unit cell, mind that the data runs fastest over NX and slowest over NZ. To be more explicit, the density is written using the following command in Fortran  `WRITE(IU,FORM) (((C(NX,NY,NZ),NX=1,NGXF),NY=1,NGYF),NZ=1,NGZF)` . | **Important:** Remember that the values must be divided by the FFT\\-grid volume and the cell volume to obtain the charge density     n ( r )   {\\\\displaystyle n(r)}   in units 1/\u00c5       3     {\\\\displaystyle ^{3}}  }. || --- | Hence,  n ( r ) \\= d a t a ( r )  /  (  V  g r i d  \u2217  V  c e l l  ) , {\\\\displaystyle n(r)\\=data(r)/(V\\_{grid}\\*V\\_{cell}),}  V  g r i d  \\=  N  G X F  \u2217  N  G Y F  \u2217  N  G Z F  , {\\\\displaystyle V\\_{grid}\\=N\\_{GXF}\\*N\\_{GYF}\\*N\\_{GZF},}  V  c e l l  \\=  \\|  a  \u22c5 (  b  \u00d7  c  )  \\| {\\\\displaystyle V\\_{cell}\\=\\|\\\\mathbf {a} \\\\cdot (\\\\mathbf {b} \\\\times \\\\mathbf {c} )\\|}  ,where   n ( r ) {\\\\displaystyle n(r)}  is the charge density in units 1/\u00c5  3 {\\\\displaystyle ^{3}} . Sanity check: The integral of   n ( r ) {\\\\displaystyle n(r)}  over the unit cell yields the number of valence electrons (NELECT), NELECT  \\=  \u222b  V  c e l l  n (  r  )  d  3  r  \\=  \u2211  N  X  ,  N  Y  ,  N  Z  d a t a (  N  X  ,  N  Y  ,  N  Z  )  /  (  N  G X F  \u2217  N  G Y F  \u2217  N  G Z F  ) {\\\\displaystyle {\\\\text{NELECT}}\\=\\\\int \\_{V\\_{cell}}n(\\\\mathbf {r} )d^{3}\\\\mathbf {r} \\=\\\\sum \\_{N\\_{X},N\\_{Y},N\\_{Z}}data(N\\_{X},N\\_{Y},N\\_{Z})/(N\\_{GXF}\\*N\\_{GYF}\\*N\\_{GZF})}  .By our convention, the charge density   n ( r ) {\\\\displaystyle n(r)}  is in units 1/\u00c5  3 {\\\\displaystyle ^{3}}  and \\*\\*not\\*\\* e/\u00c5  3 {\\\\displaystyle ^{3}}  because the potential (e.g. LOCPOT, WRT\\_POTENTIAL) is assumed to be in eV. However, e  \\= 1 {\\\\displaystyle \\=1} , so while this convention makes the sign of   n ( r ) {\\\\displaystyle n(r)}  less ambiguous, it has no effect on the numerical values. | **Warning:** The augmentation occupancies are written up to the *l*\\-quantum number set by the LMAXMIX. || --- | Restarting calculations without one\\-center PAW occupancy matrices up to the appropriate *l*\\-quantum number leads to loss of information. This is particularly problematic for calculations with fixed charge density, e.g., band\\-structure calculations. See LMAXMIX for more details. ### Magnetic calculations For magnetic calculations, the CHGCAR file contains additional data blocks for the magnetization. In particular, for spin\\-polarized calculations (ISPIN\\=2\\), the first set contains the total charge density (spin up \\+ spin down) and the second one is the magnetization density (spin up \\- spin down): * Structure* FFT\\-grid dimensions* Charge density times FFT\\-grid volume (spin up \\+ spin down)* Augmentation occupancies* FFT\\-grid dimensions* Magnetization density (spin up \\- spin down)* Augmentation occupancies For noncollinear calculation (LNONCOLLINEAR\\=T), contains the total charge density and the magnetization density in the spinor basis set by SAXIS: * Structure* FFT\\-grid dimensions* Charge density times FFT\\-grid volume* Augmentation occupancies* Augmentation occupancies (imaginary part)* FFT\\-grid dimensions* Magnetization density times FFT\\-grid volume \\*\\*in   \u03c3  1 {\\\\displaystyle \\\\sigma \\_{1}}  direction\\*\\** Augmentation occupancies* Augmentation occupancies (imaginary part)* FFT\\-grid dimensions* Magnetization density times FFT\\-grid volume in   \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  direction* ...* FFT\\-grid dimensions* Magnetization density times FFT\\-grid volume in   \u03c3  3 {\\\\displaystyle \\\\sigma \\_{3}}  direction* .... Molecular dynamics and structure relaxation (IBRION)---------------------------------------------------------------------------- In the case of molecular\\-dynamics (MD) simulations (IBRION\\=0\\), CHGCAR contains the extrapolated charge density for the next step, which corresponds to the atomic structure in the CONTCAR file. Although it makes the charge density incompatible with the last atomic coordinates in the OUTCAR file, it allows one to use the CHGCAR and the CONTCAR files consistently for continuing the MD simulation.  | **Warning:** In MD simulations, the charge density in CHGCAR is not the self\\-consistent charge density for the structure in the CONTCAR file. Hence, one should not perform a band\\-structure calculation directly after the MD simulation. || --- | For static and relaxation calculations (IBRION\\=\\-1,1,2\\), the charge density in CHGCAR is the self\\-consistent charge density for the last iteration. Hence, it can be used for accurate band structure calculations."}
{"file_name": "IRC_DIRECTION.md", "content": "IRC\\_DIRECTION= \\-1 \\| 1   Default: **IRC\\_DIRECTION** \\= 1nDescription: Defines the direction of the initial displacement of the initial transition\\-state structure in IRC calculations.   --- Defines the direction of the initial displacement of the initial transition\\-state structure along the unstable direction (corresponding to Hesse matrix eigenmode with negative force constant) used in IRC calculations. Only the values 1 and \\-1 are allowed, corresponding to the parallel and the antiparallel directions, respectively."}
{"file_name": "LIBMBD_K_GRID.md", "content": "LIBMBD\\_K\\_GRID= \\[array of three integers]   Default: **LIBMBD\\_K\\_GRID** \\= determined in libMBD according to the cell shapenDescription: LIBMBD\\_K\\_GRID sets the k\\-mesh of the collective oscillations defined in the methods available in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_K\\_GRID allows to choose the k\\-mesh of the collective oscillations defined in the methods available in the library libMBD of many\\-body dispersion methods. The three integers correspond to the number of k\\-points along the axes of the cell in the reciprocal space. The values are internally passed to the libMBD input **k\\_grid** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "BANDGAP.md", "content": "BANDGAP= COMPACT \\| WEIGHT \\| KPOINT   Default: **BANDGAP** \\= COMPACTnDescription: BANDGAP determines the verbosity for reporting the bandgap to the OUTCAR file.Only the first character is significant.  --- [](File_Bandgap-2.html) For semiconductors, the direct and fundamental bandgap have a clear definition. For semimetals, the Fermi energy cuts through bands so depending on the method one defines either a zero or a negative fundamental bandgap. For metals, defining a bandgap is not meaningful. The bandgap of the system separates the occupied valence bands from the unoccupied conduction bands.Of particular interest are the fundamental bandgap between valence band maximum (VBM) and conduction band minimum (CBM) and the direct bandgap at a single **k** point. BANDGAP controls how VASP reports the bandgap information.The following options exist: * BANDGAP\\=COMPACT Uses Fermi weights to decide what valence and conduction bands are. Reports the VBM, CBM, and fundamental gap to the OUTCAR file.* BANDGAP\\=WEIGHT Uses Fermi weights to decide what valence and conduction bands are. Provides a comprehensive report of all band extrema.* BANDGAP\\=KPOINT Considers each **k** point individually to decide what valence and conduction bands are. Provides a comprehensive report of all band extrema.Difference between WEIGHT and KPOINT------------------------------------ The figure illustrates different possible properties of electronic band structures.For semiconductors, the bandgap is well defined so that the choice of BANDGAP only affects whether the output is compact or verbose.For metals, there is no straightforward definition of a bandgap so the default of BANDGAP\\=COMPACT is sufficient.A semimetal shares properties with metals (Fermi energy crosses bands) and with semiconductors (visible bandgap in the band structure). BANDGAP\\=WEIGHT interprets systems like a metal; valence (conduction) states are more (less) than half\\-filled.In this case, the bandgap of a semimetal converges to zero with an increasing number of **k** points similar to a metal.For N number of electrons, the number of valence states is not in general equal to N for all **k** points.Hence, the direct bandgap is not necessarily between the N\\-th and the (N \\+ 1\\)\\-th state. BANDGAP\\=KPOINT considers systems like a semiconductor where every **k** point may be treated individually.The number of valence bands is equal to the number of electrons N for all **k** points and the direct bandgap is equal to the smallest difference between the N\\-th and (N \\+ 1\\)\\-th state.In a semimetal, this approach produces a negative bandgap because the Fermi energy crosses the bands.For collinear calculations (ISPIN\\=2\\), this method will allow for a different number of up and down electrons at every **k** point. | **Mind:** Setting BANDGAP\\=KPOINT only impacts the output of VASP. It is not considered when evaluating the occupations of different bands. If you want to enforce certain occupations, please consider the tags NUPDOWN, FERWE, and FERDO. || --- | Example of the verbose output-----------------------------  ```Band structure--------------                       spin independent             spin component 1             spin component 2val. band max:               9.679953                     9.679953                     5.987917cond. band min:              9.148387                    10.409707                     9.148387fundamental gap:            -0.531566                     0.729754                     3.160470VBM @ kpoint:       0.2949   0.4423   0.1474     0.2949   0.4423   0.1474     0.0000  -0.0000   0.0000CBM @ kpoint:       0.5000   0.5000   0.0000     0.0000   0.0000   0.0000     0.5000   0.5000   0.0000 lower band:                  8.126216                     7.283444                     5.087674upper band:                  9.386102                    10.916258                     9.148387direct gap:                  1.259885                     3.632813                     4.060713@ kpoint:           0.3846   0.3846   0.0000     0.0641   0.0962   0.0321     0.5000   0.5000   0.0000  ``` The column *spin independent* is always present and reports the bandgap ignoring the spin of the electron.The other two columns are only visible for ISPIN\\=2 and describe the bandgap for a given spin of the electron.The first block of rows show the band edges of the fundamental bandgap and their corresponding **k**\\-point coordinates.The second block reports analogous values for the direct gap.In each case the energy difference of the band edges is computed and printed as fundamental and direct gap, respectively."}
{"file_name": "ODDONLYGW.md", "content": "ODDONLYGW= \\[logical]   Default: **ODDONLYGW** \\= .FALSE.nDescription: ODDONLYGW allows to avoid the inclusion of the   \u0393 {\\\\displaystyle \\\\Gamma }  point in the evaluation of response functions (in GW calculations).  --- The independent particle polarizability   \u03c7  q  0  (  G  ,  G  \u2032  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\mathbf {q} }^{0}({\\\\mathbf {G} },{\\\\mathbf {G} }',\\\\omega )}  is given by:  \u03c7  q  0  (  G  ,  G  \u2032  , \u03c9 ) \\=  1 \u03a9  \u2211  n ,  n \u2032  ,  k  2  w  k  (  f  n \u2032  k  \\+  q  \u2212  f  n  k  ) \u00d7  \u27e8  \u03c8  n  k  \\|  e  \u2212 i (  q  \\+  G  )  r  \\|  \u03c8  n \u2032  k  \\+  q  \u27e9 \u27e8  \u03c8  n \u2032  k  \\+  q  \\|  e  i (  q  \\+  G  \u2032  )  r \u2032  \\|  \u03c8  n  k  \u27e9  \u03f5  n \u2032  k  \\+  q  \u2212  \u03f5  n  k  \u2212 \u03c9 \u2212 i \u03b7 {\\\\displaystyle \\\\chi \\_{\\\\mathbf {q} }^{0}({\\\\mathbf {G} },{\\\\mathbf {G} }',\\\\omega )\\={\\\\frac {1}{\\\\Omega }}\\\\sum \\_{n,n',{\\\\mathbf {k} }}2w\\_{\\\\mathbf {k} }(f\\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\-f\\_{n{\\\\mathbf {k} }})\\\\times {\\\\frac {\\\\langle \\\\psi \\_{n{\\\\mathbf {k} }}\\|e^{\\-i({\\\\mathbf {q} }\\+{\\\\mathbf {G} }){\\\\mathbf {r} }}\\|\\\\psi \\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\\\rangle \\\\langle \\\\psi \\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\|e^{i({\\\\mathbf {q} }\\+{\\\\mathbf {G} }'){\\\\mathbf {r'} }}\\|\\\\psi \\_{n{\\\\mathbf {k} }}\\\\rangle }{\\\\epsilon \\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\-\\\\epsilon \\_{n{\\\\mathbf {k} }}\\-\\\\omega \\-i\\\\eta }}} If the   \u0393 {\\\\displaystyle \\\\Gamma }  point is included in the summation over   k {\\\\displaystyle \\\\mathbf {k} } , convergence is very slow for some materials (e.g. GaAs). To deal with this problem the flag ODDONLYGW has been included.In the automatic mode, the   k {\\\\displaystyle \\\\mathbf {k} } \\-grid is given by (see Sec. \\\\ref{sec:autok}):   ```        k \u2192    =     b \u2192     1      n  1    N  1     +     b \u2192     2      n  2    N  2     +     b \u2192     3      n  3    N  3     ,   n  1   =        0... ,  N  1   \u2212 1   n  2   =        0... ,  N  2   \u2212 1   n  3   =        0... ,  N  3   \u2212 1.      }={\\vec {b}}_{1}{\\frac {n_{1}}{N_{1}}}+{\\vec {b}}_{2}{\\frac {n_{2}}{N_{2}}}+{\\vec {b}}_{3}{\\frac {n_{3}}{N_{3}}},\\qquad n_{1}=0...,N_{1}-1\\quad n_{2}=0...,N_{2}-1\\quad n_{3}=0...,N_{3}-1.}   ```"}
{"file_name": "Adsorption_of_H2O_on_TiO2.md", "content": "Task---- In this example you will investigate the adsorption of H2O on a TiO2 surface by means of standard geometry optimisation (\"relaxation\") and by means of constrained molecular dynamics. Download--------  Adsorption of H2 on TiO2: A guide to this example.  h2o\\_on\\_tio2\\.tgz Back to the main page."}
{"file_name": "Ensemble.md", "content": "### Introduction A central concept of statistical mechanics is the ensemble. An ensemble consists of a large number of virtual copies of the system of interest. An ensemble will always depend on three thermodynamic state variables, as for example particle number N, temperature T and pressure p. These three variables determine the type of ensemble that is studied. Depending on these three variables there is a thermodynamic potential associated with the ensemble, which would be the Gibbs free energy in the case of N,T and p. Therefore, the concept of the ensemble gives access to any thermodynamic quantity. The configurations of your system building up the ensemble can be obtained from molecular dynamics simulations. The molecular\\-dynamics approach generates the configurations for the ensemble by integrating Newton's equations of motion. ### Theory In this section various ensembles will be introduced. To describe an ensemble mathematically the partition function will be used. The partition function is the central mathematical entity in statistical mechanics. As the wave function in quantum mechanics it contains all the information about a statistical system. The partition function depends on three thermodynamic state variables such as N,T and volume V.   **Microcanonical ensemble (N,V,E)** To start, the three controlled external parameters have to be defined. In the case of the microcanonical ensemble these are the particle number, the volume and the total energy E of the system.The total energy is the sum of the kinetic energy and potential energy of the particle system. Therefore the total energy depends on the momenta and the positions of the system.Furthermore, the energy is an extensive variable depending on the particle number and the volume of the system.The partition function is written as a sum over all microstates in agreement with the NVE constraints  \u03a9 ( N , V , E ) \\=  \u2211  E \u2212 \u03b4 E \\< E ( N , V , {  r  i  } , {  p  i  } ) \\< E \\+ \u03b4 E  1\\. {\\\\displaystyle \\\\Omega (N,V,E)\\=\\\\sum \\_{E\\-\\\\delta E\\<E(N,V,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})\\<E\\+\\\\delta E}1\\.} In this equation   \u03b4 E {\\\\displaystyle \\\\delta E}  denotes a infinitesimal energy.   {  r  i  } {\\\\displaystyle \\\\{\\\\mathbf {r} \\_{i}\\\\}}  denotes the set of particle positions and   {  p  i  } {\\\\displaystyle \\\\{\\\\mathbf {p} \\_{i}\\\\}}  are the conjugate momenta.The sum is over all particle positions and momenta giving an energy in agreement with the energy constraint.Therefore,   \u03a9 ( N , V , E ) {\\\\displaystyle \\\\Omega (N,V,E)}  is the number of microstates under the given conditions.From the microcanonical partition function it is possible to obtain the entropy by  S ( N , V , E ) \\=  k  B  l o g \u03a9 ( N , V , E ) , {\\\\displaystyle S(N,V,E)\\=k\\_{B}log\\\\Omega (N,V,E),} where   k  B {\\\\displaystyle k\\_{B}}  is the Boltzmann constant. The probabilities for the different micro states (r) are given by  P  r  ( N , V , E ) \\=  {  1  \u03a9 ( N , V , E )   f o r  E \u2212 \u03b4 E \\< E \\< E \\+ \u03b4 E  0  e l s e {\\\\displaystyle P\\_{r}(N,V,E)\\={\\\\begin{cases}{\\\\frac {1}{\\\\Omega (N,V,E)}}\\\\ for\\\\ E\\-\\\\delta E\\<E\\<E\\+\\\\delta E\\\\\\\\0\\\\ else\\\\end{cases}}}  . The microcanonical ensemble is a theoretical realization of a N particle system which is placed in a box with fixed volume and fully isolated from its surroundings. Therefore, no energy exchange with the rest of the universe is possible. In VASP this ensemble can be approximated by sampling the configurations in a molecular\\-dynamics run.  **Canonical ensemble ensemble (N,V,T)** In the canonical ensemble the controlled thermodynamic state variables are the particle number, the volume and the temperature. The ensemble consists of all configurations accessible to the system at the given (N,V,T) conditions. The canonical partition function can be derived to be  Z ( N , V , T ) \\=  \u2211  r  e  \u2212 \u03b2 E ( N , V , {  r  r  } , {  p  r  } )  1 {\\\\displaystyle Z(N,V,T)\\=\\\\sum \\_{r}e^{\\-\\\\beta E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}1}  , where   \u03b2 {\\\\displaystyle \\\\beta }  is the inverse temperature   1  k  B  T {\\\\displaystyle {\\\\frac {1}{k\\_{B}T}}}  .The probability for a single microstate r is  P  r  ( N , V , T ) \\=  1  Z ( N , V , T )  e  \u2212 \u03b2 E ( N , V , {  r  i  } , {  p  i  } ) {\\\\displaystyle P\\_{r}(N,V,T)\\={\\\\frac {1}{Z(N,V,T)}}e^{\\-\\\\beta E(N,V,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})}}  . The canonical partition function is related to the Helmholtz free energy by  F ( N , V , T ) \\= \u2212  k  B  l o g Z ( N , V , T ) {\\\\displaystyle F(N,V,T)\\=\\-k\\_{B}logZ(N,V,T)} and the average energy of the system under canonical conditions can be computed as  \u27e8 E \u27e9 \\= \u2212  k  B  T  \u2202 F ( N , V , T )  \u2202 \u03b2  \\=  \u2211  r  e  \u2212 \u03b2 E ( N , V , {  r  r  } , {  p  r  } )  E ( N , V , {  r  r  } , {  p  r  } )  Z {\\\\displaystyle \\\\langle E\\\\rangle \\=\\-k\\_{B}T{\\\\frac {\\\\partial F(N,V,T)}{\\\\partial \\\\beta }}\\=\\\\sum \\_{r}{\\\\frac {e^{\\-\\\\beta E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}{Z}}}  . The canonical ensemble can be visualized as N particle system in a fixed volume box which is allowed to exchange thermal energy with a huge heat bath surrounding it. Therefore, in equilibrium the instantaneous temperature (temperature derived from kinetic energy) is fluctuating around the heat bath temperature. Temperature fluctuations are proportional to   N  \u2212 1  /  2 {\\\\displaystyle N^{\\-1/2}} . Hence, in the thermodynamic limit (  N \u2192 \u221e {\\\\displaystyle N\\\\rightarrow \\\\infty } ) temperature fluctuations vanish. There are several techniques to realize the canonical ensemble in a computer simulation. The configurations in a NVT ensemble can be sampled from a molecular\\-dynamics run.  **Isothermal\u2013isobaric ensemble (NpT)**  In the isothermal\u2013isobaric ensemble the controlled thermodynamic state variables are the particle number, the pressure p and the temperature. The ensemble consists of all configurations accessible to the system at the given (N,p,T) conditions. The isothermal\u2013isobaric partition function can be derived to be  Y ( N , p , T ) \\=  \u2211  r  e  \u2212 \u03b2  (  E ( N , V , {  r  r  } , {  p  r  } ) \\+ p  V  r  ) {\\\\displaystyle Y(N,p,T)\\=\\\\sum \\_{r}e^{\\-\\\\beta \\\\left(E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})\\+pV\\_{r}\\\\right)}}  , where   \u03b2 {\\\\displaystyle \\\\beta }  is the inverse temperature   1  k  B  T {\\\\displaystyle {\\\\frac {1}{k\\_{B}T}}}  and pVis the contribution to the energy due to volume work.The probability for a single microstate r is  P  r  ( N , p , T ) \\=  1  Y ( N p , T )  e  \u2212 \u03b2  (  E ( N , p , {  r  i  } , {  p  i  } ) \\+ p  V  r  ) {\\\\displaystyle P\\_{r}(N,p,T)\\={\\\\frac {1}{Y(Np,T)}}e^{\\-\\\\beta \\\\left(E(N,p,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})\\+pV\\_{r}\\\\right)}}  . The isothermal\u2013isobaric partition function is related to the Gibbs free energy by  G ( N , p , T ) \\= \u2212  k  B  l o g Y ( N p , T ) {\\\\displaystyle G(N,p,T)\\=\\-k\\_{B}logY(Np,T)} and the average internal energy of the system under isothermal\u2013isobaric conditions can be computed as  \u27e8 E \u27e9 \\= \u2212  k  B  T  \u2202 G ( N , p , T )  \u2202 \u03b2  \\=  \u2211  r  e  \u2212 \u03b2  (  E ( N , p , {  r  r  } , {  p  r  } ) \\+ p  V  r  )  E ( N , p , {  r  r  } , {  p  r  } )  Y {\\\\displaystyle \\\\langle E\\\\rangle \\=\\-k\\_{B}T{\\\\frac {\\\\partial G(N,p,T)}{\\\\partial \\\\beta }}\\=\\\\sum \\_{r}{\\\\frac {e^{\\-\\\\beta \\\\left(E(N,p,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})\\+pV\\_{r}\\\\right)}E(N,p,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}{Y}}}  . The isothermal\u2013isobaric ensemble can be visualized as N particle system in a box without rigid boundaries which is allowed to exchange thermal energy with a huge heat bath surrounding it. Because the box has no rigid sides the volume and shape will change according to the pressure difference within and outside the box. In the isothermal\u2013isobaric ensemble both the instantaneous temperature and pressure will fluctuate around the desired temperature (heat bath) and pressure (volume reservoir), respectively. As in the canonical ensemble these fluctuations vanish in the thermodynamic limit. There are several techniques to realize the isothermal\u2013isobaric ensemble in a computer simulation. The configurations in a NpT ensemble can be sampled from a molecular\\-dynamics run.  **Isoenthalpic\u2013isobaric ensemble (NpH)** In the isoenthalpic\u2013isobaric ensemble the controlled thermodynamic state variables are the particle number, the pressure and the enthalpy H. The ensemble consists of all configurations accessible to the system at the given (N,p,H) conditions. The isoenthalpic\u2013isobaric partition function can be derived to be  X ( N , p , H ) \\=  \u2211  H \u2212 \u03b4 H \\< H ( N , p , {  r  i  } , {  p  i  } ) \\< H \\+ \u03b4 H  1 {\\\\displaystyle X(N,p,H)\\=\\\\sum \\_{H\\-\\\\delta H\\<H(N,p,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})\\<H\\+\\\\delta H}1}  . The probability for a single microstate r is  P  r  ( N , p , H ) \\=  {  1  X ( N , p , H )   f o r  H \u2212 \u03b4 H \\< H \\< E \\+ \u03b4 H  0  e l s e {\\\\displaystyle P\\_{r}(N,p,H)\\={\\\\begin{cases}{\\\\frac {1}{X(N,p,H)}}\\\\ for\\\\ H\\-\\\\delta H\\<H\\<E\\+\\\\delta H\\\\\\\\0\\\\ else\\\\end{cases}}}  . The isoenthalpic\u2013isobaric ensemble can be visualized as N particle system in a box without rigid boundaries which is thermally isolated from its surroundings. Because the box has no rigid sides the volume and shape will change according to the pressure difference within and outside the box. In the isoenthalpic\u2013isobaric ensemble the instantaneous pressure will fluctuate around the desired pressure value. The configurations in a NpH ensemble can be sampled from a molecular\\-dynamics run. ### How To The following table gives an overview of the possible combinations of ensembles and thermostats in VASP: |  | Thermostat | | | || --- | --- | --- | --- | --- || Ensemble | Andersen | Nose\\-Hoover | Langevin | Multiple Andersen || Microcanonical (NVE) | MDALGO\\=1, ANDERSEN\\_PROB\\=0\\.0 | | | || Canonical (NVT) | MDALGO\\=1 | MDALGO\\=2 | MDALGO\\=3 | MDALGO\\=13 || ISIF\\=2 | ISIF\\=2 | ISIF\\=2 | ISIF\\=2 || Isobaric\\-isothermal (NpT) | not available | not available | MDALGO\\=3 | not available || ISIF\\=3 || Isoenthalpic\\-isobaric (NpH) | MDALGO\\=3, ISIF\\=3, LANGEVIN\\_GAMMA\\=LANGEVIN\\_GAMMA\\_L\\=0\\.0 | | | | Pages in category \"Ensembles\"----------------------------- The following 5 pages are in this category, out of 5 total. ### N * NpH ensemble* NpT ensemble* NVE ensemble* NVT ensemble### P * PSTRESS"}
{"file_name": "Groundstate_in_the_Random_Phase_Approximation.md", "content": "ACFDT stands for the adiabatic connection fluctuation dissipation theorem and is an alternative way to derive the energy expression for the correlation energy in the random phase approximation. In the following the diagrammatic description is presented. For the ACFDT formulation the reader is referred to the literature.[\\[1]](#cite_note-harl:2008-1) Diagrammatic approach to the correlation energy----------------------------------------------- The correlation energy   E  c {\\\\displaystyle E\\_{c}}  is defined as the missing piece of the Hartree\\-Fock energy   E  x {\\\\displaystyle E\\_{x}}  to the total energy, that is   E  t o t  \\=  E  x  \\+  E  c {\\\\displaystyle E\\_{tot}\\=E\\_{x}\\+E\\_{c}} . The exact form of   E  c {\\\\displaystyle E\\_{c}}  is unknown and can be calculated only approximately for a realistic system. The Random Phase Approximation (RPA) is such an approximation that provides access to   E  c {\\\\displaystyle E\\_{c}} . The RPA was first studied by Bohm and Pines for the homogeneous electron gas and was later recognized by Gell\\-Mann and Brueckner as an approximation of   E  c {\\\\displaystyle E\\_{c}}  that can be expressed in the same language as Feynman used a few years earlier to describe the positron.[\\[2]](#cite_note-bohm:pr:82-2)[\\[3]](#cite_note-gell-mann:pr:106-3)[\\[4]](#cite_note-feynman:pr:76-4) Feynman's diagrammatic approach is based on quantum field theory (QFT), which in turn is based on the Gell\\-Mann and Low theorem. This theorem states that the eigenstate of an interacting Hamiltonian can be expressed in terms of the eigenstates of the non\\-interacting one.[\\[5]](#cite_note-gell-mann:pr:84-5) For this reason, each diagrammatic calculation, like the RPA or GW, requires the solution of the non\\-interacting Hamiltonian   H  0 {\\\\displaystyle H\\_{0}}  of the system, like for instance the Hartree\\-Fock energies and orbitals or the solutions of the Kohn\\-Sham Hamiltonian   \u03f5  n  k  ,  \u03d5  n  k {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}},\\\\phi \\_{n{\\\\bf {k}}}}  . QFT is commonly formulated in the Dirac (also known as interaction) picture, where dynamics described by the interaction part   V ^ {\\\\displaystyle {\\\\hat {V}}}  of the fully interacting Hamiltonian   H ^  \\=  H ^  0  \\+  V ^ {\\\\displaystyle {\\\\hat {H}}\\={\\\\hat {H}}\\_{0}\\+{\\\\hat {V}}}  are singled out via time\\-dependent operators like  V ^  ( t ) \\=  e  i  H ^  0  t  V ^  e  \u2212 i  H ^  0  t {\\\\displaystyle {\\\\hat {V}}(t)\\=e^{i{\\\\hat {H}}\\_{0}t}{\\\\hat {V}}e^{\\-i{\\\\hat {H}}\\_{0}t}} . These operators act on states like the non\\-interacting groundstate of the system   \\|  \u03a8  0  \u27e9 {\\\\displaystyle \\|\\\\Psi \\_{0}\\\\rangle }  causing fluctuations at a specific point in time. The main idea of QFT is to understand observations, which can be measured by an observer, as a collective phenomenon of all possible fluctuations.[\\[6]](#cite_note-mattuck:2012-6) Thereby, fluctuations are understood as the creation of virtual electrons (and holes) that interact with each other and are annihilated after some time. Formally this is achieved by introducing creation   \u03c8 ^  \u2020  (  r  , t ) {\\\\displaystyle {\\\\hat {\\\\psi }}^{\\\\dagger }({\\\\bf {r}},t)}  and annihilation operators   \u03c8 ^  (  r  , t ) {\\\\displaystyle {\\\\hat {\\\\psi }}({\\\\bf {r}},t)}  that satisfy following relations  \u03c8 ^  (  r  , t )  \\|  \u03a8  0  \u27e9 \\= 0 \\= \u27e8  \u03a8  0  \\|  \u03c8 ^  (  r  , t ) {\\\\displaystyle {\\\\hat {\\\\psi }}({\\\\bf {r}},t)\\|\\\\Psi \\_{0}\\\\rangle \\=0\\=\\\\langle \\\\Psi \\_{0}\\|{\\\\hat {\\\\psi }}({\\\\bf {r}},t)}  { \u03c8 (  r  , t ) ,  \u03c8  \u2020  (  r  , t ) } \\=  \u03c8  \u2020  (  r  , t )  \u03c8  \u2020  (  r  , t ) \\+  \u03c8  \u2020  (  r  , t ) , \u03c8 (  r  , t ) \\= i \u03b4 (  r  \u2212  r  \u2032  ) {\\\\displaystyle \\\\lbrace \\\\psi ({\\\\bf {r}},t),\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\\\rbrace \\=\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\+\\\\psi ^{\\\\dagger }({\\\\bf {r}},t),\\\\psi ({\\\\bf {r}},t)\\=i\\\\delta ({\\\\bf {r}}\\-{\\\\bf {r}}')}  {  \u03c8  \u2020  (  r  , t ) ,  \u03c8  \u2020  (  r  , t ) } \\= 0 \\= { \u03c8 (  r  , t ) , \u03c8 (  r  , t ) } . {\\\\displaystyle \\\\lbrace \\\\psi ^{\\\\dagger }({\\\\bf {r}},t),\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\\\rbrace \\=0\\=\\\\lbrace \\\\psi ({\\\\bf {r}},t),\\\\psi ({\\\\bf {r}},t)\\\\rbrace .} The first relation defines the non\\-interacting groundstate   \\|  \u03a8  0  \u27e9 {\\\\displaystyle \\|\\\\Psi \\_{0}\\\\rangle }  as the Fermi vacuum (the groundstate in the absence of any fluctuations), while the second and third anti\\-commutator relations are a consequence of the Pauli principle. In fact, all operators that describe measurable quantities of a system of interacting electrons can be represented in terms of   \u03c8  \u2020  (  r  , t ) {\\\\displaystyle \\\\psi ^{\\\\dagger }({\\\\bf {r}},t)}  and  \u03c8 (  r  , t ) {\\\\displaystyle \\\\psi ({\\\\bf {r}},t)}  alone; additional objects are not necessary. However, the time\\-ordering operator  T ^  A ^  ( t )  B ^  (  t \u2032  ) \\= \u0398 ( t \u2212  t \u2032  )  A ^  ( t )  B ^  (  t \u2032  ) \u2212 \u0398 (  t \u2032  \u2212 t )  B ^  (  t \u2032  )  A ^  ( t ) , {\\\\displaystyle {\\\\hat {T}}{\\\\hat {A}}(t){\\\\hat {B}}(t')\\=\\\\Theta (t\\-t'){\\\\hat {A}}(t){\\\\hat {B}}(t')\\-\\\\Theta (t'\\-t){\\\\hat {B}}(t'){\\\\hat {A}}(t),} where   \u0398 ( t ) {\\\\displaystyle \\\\Theta (t)}  is the unit step function, and the time\\-evolution operator  S ^  ( t ,  t  0  ) \\=  T ^  e  \u2212 i  \u222b  t  0  t  V ^  (  t \u2032  )  d  t \u2032 {\\\\displaystyle {\\\\hat {S}}(t,t\\_{0})\\={\\\\hat {T}}e^{\\-i\\\\int \\_{t\\_{0}}^{t}{\\\\hat {V}}(t'){\\\\rm {d}}t'}} are helpful quantities, since they allow to formulate the Gell\\-Mann and Low theorem as follows.  ### Gell\\-Mann and Low theorem Using adiabatic coupling of the interaction   V ^  ( t ) \u2192  V ^  \u03b7  ( t ) \\=  e  \u2212 \u03b7  \\|  t  \\|  V ^ {\\\\displaystyle {\\\\hat {V}}(t)\\\\to {\\\\hat {V}}\\_{\\\\eta }(t)\\=e^{\\-\\\\eta \\|t\\|}{\\\\hat {V}}} , Gell\\-Mann and Low proved that the vectors  \\|  \u03a9  \u03bd  \u27e9  \u27e8  \u03a9  \u03bd  \\|  \u03a8  \u03bd  \u27e9  \\=  lim  \u03b7 \u2192 0  S ^  \u03b7  ( 0 , \u2212 \u221e )  \\|  \u03a8  \u03bd  \u27e9  \u27e8  \u03a9  \u03bd  \\|  \u03a8  \u03bd  \u27e9 {\\\\displaystyle {\\\\frac {\\|\\\\Omega \\_{\\\u }\\\\rangle }{\\\\langle \\\\Omega \\_{\\\u }\\|\\\\Psi \\_{\\\u }\\\\rangle }}\\=\\\\lim \\_{\\\\eta \\\\to 0}{\\\\frac {{\\\\hat {S}}\\_{\\\\eta }(0,\\-\\\\infty )\\|\\\\Psi \\_{\\\u }\\\\rangle }{\\\\langle \\\\Omega \\_{\\\u }\\|\\\\Psi \\_{\\\u }\\\\rangle }}} are the eigenstates of the interacting Hamiltonian.[\\[5]](#cite_note-gell-mann:pr:84-5) We follow the common literature and suppress the infinitesimal   \u03b7 {\\\\displaystyle \\\\eta }  in the following bearing in mind that the limit   \u03b7 \u2192 0 {\\\\displaystyle \\\\eta \\\\to 0}  is performed at the very end of the calculation.[\\[7]](#cite_note-negele:1988-7)[\\[8]](#cite_note-fetter:2003-8) ### Diagrammatic perturbation theory A consequence of the Gell\\-Mann and Low theorem, is the following form of the interacting groundstate energy[\\[8]](#cite_note-fetter:2003-8)  E  t o t  \\=  E  0  \\= \u27e8  \u03a9  0  \\|  H ^  \\|  \u03a9  0  \u27e9 \\=  \u27e8  \u03a8  0  \\|  S ^  ( \u221e , \u2212 \u221e )  H ^  \\|  \u03a8  0  \u27e9  \u27e8  \u03a8  0  \\|  S ^  ( \u221e , \u2212 \u221e )  \\|  \u03a8  0  \u27e9  , {\\\\displaystyle E\\_{tot}\\=E\\_{0}\\=\\\\langle \\\\Omega \\_{0}\\|{\\\\hat {H}}\\|\\\\Omega \\_{0}\\\\rangle \\={\\\\frac {\\\\langle \\\\Psi \\_{0}\\|{\\\\hat {S}}(\\\\infty ,\\-\\\\infty ){\\\\hat {H}}\\|\\\\Psi \\_{0}\\\\rangle }{\\\\langle \\\\Psi \\_{0}\\|{\\\\hat {S}}(\\\\infty ,\\-\\\\infty )\\|\\\\Psi \\_{0}\\\\rangle }},} which can be seen as starting point of diagrammatic perturbation theory. The expression above is used to derive all possible approximations by expanding the time\\-evolution operator   S ^ {\\\\displaystyle {\\\\hat {S}}}  into a series. The resulting matrix\\-elements of creation and annihilation operators are evaluated term by term using the canonical anti\\-commutator relations defined above (Wick's theorem[\\[9]](#cite_note-wick:1950-9)). It follows that all terms in perturbation theory are expressed by only two quantities, the non\\-interacting Feynman propagator   G  0  ( 1 , 2 ) \\= \u2212 i  \u2211  n  k  \u03d5 (  r  2  )  \u03d5  \u2217  (  r  1  )  e  \u2212 i (  \u03f5  n  k  \u2212  \u03f5  F  ) (  t  2  \u2212  t  1  )  \\[  f  n  k  \u0398 (  t  2  \u2212  t  1  ) \u2212 ( 1 \u2212  f  n  k  ) \u0398 (  t  1  \u2212  t  2  )  ]  ,  1 \\= (  r  1  ,  t  1  ) , 2 \\= (  r  2  ,  t  2  ) {\\\\displaystyle G\\_{0}(1,2\\)\\=\\-i\\\\sum \\_{n{\\\\bf {k}}}\\\\phi ({\\\\bf {r}}\\_{2})\\\\phi ^{\\*}({\\\\bf {r}}\\_{1})e^{\\-i(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{F})(t\\_{2}\\-t\\_{1})}\\\\left\\[f\\_{n{\\\\bf {k}}}\\\\Theta (t\\_{2}\\-t\\_{1})\\-(1\\-f\\_{n{\\\\bf {k}}})\\\\Theta (t\\_{1}\\-t\\_{2})\\\\right],\\\\quad 1\\=({\\\\bf {r}}\\_{1},t\\_{1}),2\\=({\\\\bf {r}}\\_{2},t\\_{2})} and the Coulomb interaction  V ( 1 , 2 ) \\=  \u03b4 (  t  1  \u2212  t  2  )  \\|  r  1  \u2212  r  2  \\|  . {\\\\displaystyle V(1,2\\)\\={\\\\frac {\\\\delta (t\\_{1}\\-t\\_{2})}{\\|{\\\\bf {r}}\\_{1}\\-{\\\\bf {r}}\\_{2}\\|}}.} Then, each term in the series corresponds to an integral over space\\-time coordinates   (  r  , t ) {\\\\displaystyle ({\\\\bf {r}},t)}  . Feynman diagrams are used to illustrate which terms are considered in the perturbation series. The illustration is usually achieved with so\\-called Feynman rules that map a specific diagram to an integral (and vice versa). For instance the second order diagram  [](File_DMP2.html) is also known as the direct M\u00f8ller\\-Plessett term and stands for following integral  E  d M P  ( 2 )  \\= \u222b  d  ( 1 , 2 , 3 , 4 )  G  0  ( 1 , 2 )  G  0  ( 2 , 1 ) V ( 1 , 3 ) V ( 2 , 4 )  G  0  ( 3 , 4 )  G  0  ( 4 , 3 ) ,  d  ( 1 , \u22ef , 4 ) \\=  d  r  1  d  t  1  \u22ef  d  r  4  d  t  4 {\\\\displaystyle E\\_{\\\\rm {dMP}}^{(2\\)}\\=\\\\int {\\\\rm {d}}(1,2,3,4\\)G\\_{0}(1,2\\)G\\_{0}(2,1\\)V(1,3\\)V(2,4\\)G\\_{0}(3,4\\)G\\_{0}(4,3\\),\\\\quad {\\\\rm {d}}(1,\\\\cdots ,4\\)\\={\\\\rm {d}}{\\\\bf {r}}\\_{1}{\\\\rm {d}}t\\_{1}\\\\cdots {\\\\rm {d}}{\\\\bf {r}}\\_{4}{\\\\rm {d}}t\\_{4}} All Feynman rules can be found in the book of Negele and Orland or elsewhere.[\\[7]](#cite_note-negele:1988-7)[\\[8]](#cite_note-fetter:2003-8) The random\\-phase approximation------------------------------- The RPA is obtained from neglecting all second and higher order terms in the perturbation series of the groundstate energy, except of those which can be expressed soley in terms of the independent particle polarizability   \u03c7  0  ( 1 , 2 ) \\= \u2212 i  G  0  ( 1 , 2 )  G  0  ( 2 , 1 ) {\\\\displaystyle \\\\chi \\_{0}(1,2\\)\\=\\-iG\\_{0}(1,2\\)G\\_{0}(2,1\\)} corresponding to the \"bubble\" diagram  [](File_Chi.html) Because of the symmetric time property   \u03c7  0  (  t  2  \u2212  t  1  ) \\=  \u03c7  0  (  t  1  \u2212  t  2  ) {\\\\displaystyle \\\\chi \\_{0}(t\\_{2}\\-t\\_{1})\\=\\\\chi \\_{0}(t\\_{1}\\-t\\_{2})} , the independent particle polarizability is of bosonic character. Because the RPA neglects all non\\-bosonic terms in the perturbation series, it corresponds essentially to a \"bosonization\" of the many\\-body problem for which the n\\-th order term can be written analytically as[\\[7]](#cite_note-negele:1988-7)  E  d M P  ( n )  \\=  1  2 n  \u222b  \u2212 \u221e  \u221e  d  \u03c9  2 \u03c0  T r  \\[  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  ]  n  . {\\\\displaystyle E\\_{\\\\rm {dMP}}^{(n)}\\={\\\\frac {1}{2n}}\\\\int \\_{\\-\\\\infty }^{\\\\infty }{\\\\frac {{\\\\rm {d}}\\\\omega }{2\\\\pi }}{\\\\rm {Tr}}\\\\left\\[{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right]^{n}.} Here, the trace of the matrix product is most effectively done in reciprocal space   \\[  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  ]  (  q \\+ G  1  ,  q \\+ G  2  ) \\=  \u2211  G  \u03c7 \\~  0  (  q \\+ G  1  ,  G  , \u03c9 ) V (  q \\+ G  ,  q \\+ G  2  ) {\\\\displaystyle \\\\left\\{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right\\=\\\\sum \\_{\\\\bf {G}}{\\\\tilde {\\\\chi }}\\_{0}({\\\\bf {q\\+G}}\\_{1},{\\\\bf {G}},\\\\omega )V({\\\\bf {q\\+G}},{\\\\bf {q\\+G}}\\_{2})} =\\sum _{{{\\bf {G}}}}{\\tilde  \\chi }_{0}({{\\bf {q+G}}}_{1},{{\\bf {G}}},\\omega )V({{\\bf {q+G}}},{{\\bf {q+G}}}_{2})](https://www.vasp.at/wiki/restbase/vasp.at/v1/media/math/render/svg/aa39e4b45a4a83746043c6f38d64d75c536966f8) using the Fourier transformed polarizability   \u03c7 \\~  0  (  q \\+ G  1  ,  q \\+ G  2  , \u03c9 ) {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{0}({\\\\bf {q\\+G}}\\_{1},{\\\\bf {q\\+G}}\\_{2},\\\\omega )} , the diagonal Coulomb potential   V (  q \\+ G  1  ,  q \\+ G  2  ) \\=  \u03b4  G  1  G  2  \\|  q \\+ G  1  \\| {\\\\displaystyle V({\\\\bf {q\\+G}}\\_{1},{\\\\bf {q\\+G}}\\_{2})\\={\\\\frac {\\\\delta \\_{{\\\\bf {G}}\\_{1}{\\\\bf {G}}\\_{2}}}{\\|{\\\\bf {q\\+G}}\\_{1}\\|}}}  and the conserved crystal momentum   q {\\\\displaystyle {\\\\bf {q}}}  in the first Brillouin zone.  All bubble terms of order   n \u2265 2 {\\\\displaystyle n\\\\geq 2}  can be written in a closed form using the series for the logarithm   ln \u2061 ( 1 \u2212 x ) \\+ x \\= \u2212  \u2211  n \\= 2  \u221e  x  n  n {\\\\displaystyle \\\\ln(1\\-x)\\+x\\=\\-\\\\sum \\_{n\\=2}^{\\\\infty }{\\\\frac {x^{n}}{n}}}  and define the correlation part of the RPA energy  E  c  R P A  \\= \u222b  d  \u03c9  2 \u03c0  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  ]  \\+  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  }  . {\\\\displaystyle E\\_{c}^{\\\\rm {RPA}}\\=\\\\int {\\\\frac {{\\\\rm {d}}\\\\omega }{2\\\\pi }}{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right]\\+{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right\\\\rbrace .} There are two first order contributions to the total energy that yield the exact exchange energy   E  x  \\= T \\+  V  e x t  \\+  V  h  \\+  V  x {\\\\displaystyle E\\_{x}\\=T\\+V\\_{ext}\\+V\\_{h}\\+V\\_{x}} , which is usually determined separately. Computational Complexity------------------------ The calculation of the RPA integral requires the determination of the independent particle polarizability matrix   \u03c7 \\~  G  G \u2032  0  (  q  ,  \u03c9  n  ) \\=  \u03c7 \\~  0  (  q \\+ G  ,  q \\+ G  \u2032  ,  \u03c9  n  ) {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{\\\\bf {GG'}}^{0}({\\\\bf {q}},\\\\omega \\_{n})\\={\\\\tilde {\\\\chi }}\\_{0}({\\\\bf {q\\+G}},{\\\\bf {q\\+G}}',\\\\omega \\_{n})}  on each of the   N  q {\\\\displaystyle N\\_{\\\\bf {q}}}  sampling points of the first Brillouin zone for   N  \u03c9 {\\\\displaystyle N\\_{\\\\omega }}  frequency points. The number of frequency points is reduced drastically, by performing the integration over the imaginary frequency axis   \u03c9 \u2192 i \u03c9 {\\\\displaystyle \\\\omega \\\\to i\\\\omega } .[\\[10]](#cite_note-kaltak:2014-10) The independent particle polarizability on the imaginary axis can be determined with two alternative methods.  ### Quartic scaling RPA: Direct calculation Direct calculation of   \u03c7 \\~  0 {\\\\displaystyle {\\\\tilde {\\\\chi }}^{0}}  using the formula of Adler and Wiser[\\[11]](#cite_note-adler:1962-11)[\\[12]](#cite_note-wiser:1963-12)  \u03c7 \\~  G G  \u2032  0  (  q  , i \u03c9 ) \\=  \u2211  k  \u2208 B Z  \u2211  n ,  n \u2032  f  n  k  ( 1 \u2212  f  n  k \u2212 q  )  \u03f5  n  k \u2212 q  \u2212  \u03f5  n  k  \u2212 i \u03c9  \u27e8  \u03d5  n  k \u2212 q  \\|  e  i  G r  \\|  \u03d5  n \u2032  k  \u27e9 \u27e8  \u03d5  n \u2032  k  \\|  e  \u2212 i  G \u2032  r \u2032  \\|  \u03d5  n \u2032  k \u2212 q  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {GG}}'}^{0}({\\\\bf {q}},i\\\\omega )\\=\\\\sum \\\\limits \\_{{\\\\bf {k}}\\\\in BZ}\\\\sum \\\\limits \\_{n,n'}{\\\\frac {f\\_{n{\\\\bf {k}}}(1\\-f\\_{n{\\\\bf {k\\-q}}})}{\\\\epsilon \\_{n{\\\\bf {k\\-q}}}\\-\\\\epsilon \\_{n{\\\\bf {k}}}\\-i\\\\omega }}\\\\langle \\\\phi \\_{n{\\\\bf {k\\-q}}}\\|e^{i{\\\\bf {Gr}}}\\|\\\\phi \\_{n'{\\\\bf {k}}}\\\\rangle \\\\langle \\\\phi \\_{n'{\\\\bf {k}}}\\|e^{\\-i{\\\\bf {G'r'}}}\\|\\\\phi \\_{n'{\\\\bf {k\\-q}}}\\\\rangle } yields an RPA algorithm that has a computational cost of   N  \u03c9  N  k  2  N  G  4 {\\\\displaystyle N\\_{\\\\omega }N\\_{\\\\bf {k}}^{2}N\\_{\\\\bf {G}}^{4}} . Because the number of plane waves   N  G {\\\\displaystyle N\\_{\\\\bf {G}}}  scales linearly with the system size (number of electrons in the unit cell), the direct calculation of the polarizability is unfavourable for large system sizes, e.g. for more than \\~20 atoms in the unit cell.  ### Cubic scaling RPA: Contraction of imaginary time Green's functions An alternative way to determine   \u03c7 \\~  0 {\\\\displaystyle {\\\\tilde {\\\\chi }}^{0}}  is to frist determine imaginary time Green's functions of the form[\\[13]](#cite_note-rojas:prl:1995-13)  G  0  (  r ,  r \u2032  , i \u03c4 ) \\=  \u2211  k  \u2208 B Z  \u2211  n  \u03d5  n  k  (  r  )  \u03d5  n  k  \u2217  (  r \u2032  )  e  \u2212 (  \u03f5  n  k  \u2212  \u03f5  F  ) \u03c4  \\[  \u0398 ( \u2212 \u03c4 )  f  n  k  \u2212 \u0398 ( \u03c4 ) ( 1 \u2212  f  n  k  )  ] {\\\\displaystyle G\\_{0}({\\\\bf {r,r'}},i\\\\tau )\\=\\\\sum \\\\limits \\_{{\\\\bf {k}}\\\\in BZ}\\\\sum \\\\limits \\_{n}\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{\\*}({\\\\bf {r'}})e^{\\-(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{F})\\\\tau }\\\\left\\[\\\\Theta (\\-\\\\tau )f\\_{n{\\\\bf {k}}}\\-\\\\Theta (\\\\tau )(1\\-f\\_{n{\\\\bf {k}}})\\\\right]} and to perform afterwards a Fourier transformation into reciprocal and imaginary frequency space of   \u03c7  0  (  r ,  r \u2032  , i \u03c4 ) \\= \u2212  G  0  (  r ,  r \u2032  , i \u03c4 )  G  0  (  r \u2032  , r  , \u2212 i \u03c4 ) . {\\\\displaystyle \\\\chi \\_{0}({\\\\bf {r,r'}},i\\\\tau )\\=\\-G\\_{0}({\\\\bf {r,r'}},i\\\\tau )G\\_{0}({\\\\bf {r',r}},\\-i\\\\tau ).} Although more evolved, this approach has the advantage that the computational cost for the determination of   \u03c7 \\~  0 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{0}}  scales with   N  \u03c9  N  k  N  G  3 {\\\\displaystyle N\\_{\\\\omega }N\\_{\\\\bf {k}}N\\_{\\\\bf {G}}^{3}}  and is essentially only cubic in system size. The space\\-time method allows to study relatively large systems with the RPA.[\\[14]](#cite_note-kaltak:prb:2014-14) Basis set convergence of RPA\\-ACFDT calculations------------------------------------------------ The expression for the ACFDT\\-RPA correlation energy written in terms of reciprocal lattice vectors reads:  E  c  R P A  \\=  \u222b  0  \u221e  d  \u03c9  2 \u03c0  \u2211  q  \u2208  B Z  \u2211  G  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle E\\_{\\\\rm {c}}^{\\\\rm {RPA}}\\=\\\\int \\_{0}^{\\\\infty }{\\\\frac {\\\\mathrm {d} \\\\omega }{2\\\\pi }}\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }\\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}}  . The sum over reciprocal lattice vectors has to be truncated at some   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\mathrm {max} }} , determined by   \u210f  2  \\|  G  \\+  q  \\|  2  2  m  e {\\\\displaystyle {\\\\frac {\\\\hbar ^{2}\\|{\\\\mathbf {G} }\\+{\\\\mathbf {q} }\\|^{2}}{2\\\\mathrm {m} \\_{e}}}}  \\< ENCUTGW, which can be set in the INCAR file. The default value is   2 3  \u00d7 {\\\\displaystyle {\\\\frac {2}{3}}\\\\times }  ENCUT, which experience has taught us not to change. For systematic convergence tests, instead increase ENCUT and repeat steps 1 to 4, but be aware that the \"maximum number of plane\\-waves\" changes when ENCUT is increased. Note that it is virtually impossible, to converge absolute correlation energies. Rather concentrate on relative energies (e.g. energy differences between two solids, or between a solid and the constituent atoms). Since correlation energies converge very slowly with respect to   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\rm {max}}} , VASP automatically extrapolates to the infinite basis set limit using a linear regression to the equation: [\\[1]](#cite_note-harl:2008-1)[\\[15]](#cite_note-harl:2010-15)[\\[16]](#cite_note-klimes:2014-16)  E  c  (  G  ) \\=  E  c  ( \u221e ) \\+  A  G  3 {\\\\displaystyle E\\_{\\\\mathrm {c} }({\\\\mathbf {G} })\\=E\\_{\\\\mathrm {c} }(\\\\infty )\\+{\\\\frac {A}{{\\\\mathbf {G} }^{3}}}}  . Furthermore, the Coulomb kernel is smoothly truncated between ENCUTGWSOFT and ENCUTGW using a simple cosine like window function (Hann window function). Alternatively, the basis set extrapolation can be performed by setting LSCK\\=.TRUE., using the squeezed Coulomb kernel method.[\\[17]](#cite_note-riemelmoser:jcp:2020-17) The default for ENCUTGWSOFT is 0\\.8  \u00d7 {\\\\displaystyle \\\\times } ENCUTGW (again we do not recommend to change this default).  The integral over   \u03c9 {\\\\displaystyle \\\\omega }  is evaluated by means of a highly accurate minimax integration.[\\[10]](#cite_note-kaltak:2014-10) The number of   \u03c9 {\\\\displaystyle \\\\omega }  points is determined by the flag NOMEGA, whereas the energy range of transitions is determined by the band gap and the energy difference between the lowest occupied and highest unoccupied one\\-electron orbital. VASP determines these values automatically (from vasp.5\\.4\\.1 on), and the user should only carefully converge with respect to the number of frequency points NOMEGA. A good choice is usually NOMEGA\\=12, however, for large gap systems one might obtain   \u03bc {\\\\displaystyle \\\\mu } eV convergence per atom already using 8 points, whereas for metals up to NOMEGA\\=24 frequency points are sometimes necessary, in particular, for large unit cells. Strictly adhere to the steps outlines above. Specifically, be aware that steps two and three require the WAVECAR file generated in step one, whereas step four requires the WAVECAR and WAVEDER file generated in step three (generated by setting LOPTICS\\=*.TRUE.*).   Matsubara Formalism: Metallic systems at finite Temperature----------------------------------------------------------- The zero\\-temperature formalism of many\\-body perturbation theory breaks down for metals (systems with zero energy band\\-gap) as pointed out by Kohn and Luttinger.[\\[18]](#cite_note-KohnLuttinger:PR:1960-18) This conundrum is lifted by considering diagrammatic perturbation theory at finite temperature   T \\> 0 {\\\\displaystyle T\\>0} , which may be understood by an analytical continuation of the real\\-time   t {\\\\displaystyle t}  to the imaginary time axis   \u2212 i \u03c4 {\\\\displaystyle \\-i\\\\tau } . Matsubara has shown that this Wick rotation in time   t \u2192 \u2212 i \u03c4 {\\\\displaystyle t\\\\to \\-i\\\\tau }  reveals an intriguing connection to the inverse temperature   \u03b2 \\= 1  /  T {\\\\displaystyle \\\\beta \\=1/T}  of the system.[\\[19]](#cite_note-Matsubara:PTP:1955-19) More precisely, Matsubara has shown that all terms in perturbation theory at finite temperature can be expressed as integrals of imaginary time quantities (such as the polarizability   \u03c7 ( \u2212 i \u03c4 ) {\\\\displaystyle \\\\chi (\\-i\\\\tau )} ) over the fundamental interval   \u2212 \u03b2 \u2264 \u03c4 \u2264 \u03b2 {\\\\displaystyle \\-\\\\beta \\\\leq \\\\tau \\\\leq \\\\beta }  . As a consequence, one decomposes imaginary time quantities into a Fourier series with period   \u03b2 {\\\\displaystyle \\\\beta } that determines the spacing of the Fourier modes. For instance the imaginary polarizability can be written as  \u03c7 ( \u2212 i \u03c4 ) \\=  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  \u03c7 \\~  ( i  \u03bd  m  )  e  \u2212 i  \u03bd  m  \u03c4  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\chi (\\-i\\\\tau )\\={\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\tilde {\\\\chi }}(i\\\u \\_{m})e^{\\-i\\\u \\_{m}\\\\tau },\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } and the corresponding random\\-phase approximation of the correlation energy at finite temperature becomes a series over (in this case, bosonic) Matsubara frequencies  \u03a9  c  R P A  \\=  1 2  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  ]  \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  }  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\Omega \\_{c}^{\\\\rm {RPA}}\\={\\\\frac {1}{2}}{\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right]\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right\\\\rbrace ,\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } The Matsubara formalism has the advantage that all contributions to the Green's function and the polarizability are mathematically well\\-defined, including contributions from states close to the chemical potential   \u03f5  n  k  \u2248 \u03bc {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\approx \\\\mu } , such that Matsubara series also converge for metallic systems. Although formally convenient, the Matsubara series converges poorly with the number of considered terms in practice. VASP, therefore, uses a compressed representation of the Fourier modes by employing the Minimax\\-Isometry method.[\\[20]](#cite_note-Kaltak:PRB:2020-20) This approach converges exponentially with the number of considered frequency points."}
{"file_name": "ML_LSPARSDES.md", "content": "ML\\_LSPARSDES= \\[logical]   Default: **ML\\_LSPARSDES** \\= .FALSE.nDescription: Specifies whether angular\\-descriptor sparsification is enabled within the machine learning force field method. | **Mind:** This tag is only available as of VASP 6\\.4\\.3\\. || --- |  --- | **Warning:** This tag only works for ML\\_MODE\\=*refit* or *reftbayesian*! || --- | To use the sparsification of angular descriptors set the following tags: * ML\\_LSPARSDES\\=*.TRUE.*.* The ratio of the selected descriptors to the total number of descriptors: ML\\_RDES\\_SPARSDES. This tag controls the extent of the sparsification.* The number of the highest eigenvalues   k {\\\\displaystyle k}  to which the correlation is measured via the leverage scoring: ML\\_NRANK\\_SPARSDES. This parameter usually does not need to be changed. We advise the user to adjust this parameter carefully and test it individually for each system. This means e.g. plotting the accuracy of the calculation against the computational speed (Pareto curves) for different values of ML\\_RDES\\_SPARSDES. The user can then choose a tradeoff between efficiency and accuracy. The behavior is system dependent, however, we have experienced the following trends for our test cases: For ML\\_DESC\\_TYPE\\=0 a descriptor sparsification of 50 percent ML\\_RDES\\_SPARSDES\\=0\\.5 leaves the accuracy almost untouched. If more spars descriptors are used such as e.g. ML\\_DESC\\_TYPE\\=1, which already contain much fewer descriptors than the standard descriptor ML\\_DESC\\_TYPE\\=0, a 50 percent sparsification for ML\\_DESC\\_TYPE\\=1 results in noticeable accuracy loss."}
{"file_name": "Atoms_and_Molecules_-_Tutorial.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorialsThe tutorial is made of the following parts: 1. O atom2. O atom spinpolarized3. O atom spinpolarized low symmetry4. O dimer5. CO6. CO vibration7. CO partial DOS8. H2O9. H2O vibration10. H2O molecular dynamics11. Further things to try"}
{"file_name": "DFT-D3.md", "content": "In the DFT\\-D3 method of Grimme et al.[\\[1]](#cite_note-grimme:jcp:10-1), the following expression for the vdW\\-dispersion energy\\-correction term is used:  \\= \u2212  1 2  \u2211  i \\= 1  N  a t  \u2211  j \\= 1  N  a t  \u2211  L  \u2032  (  f  d , 6  (  r  i j , L  )  C  6 i j  r  i j ,  L  6  \\+  f  d , 8  (  r  i j , L  )  C  8 i j  r  i j , L  8  )  . {\\\\displaystyle E\\_{\\\\mathrm {disp} }\\=\\-{\\\\frac {1}{2}}\\\\sum \\_{i\\=1}^{N\\_{at}}\\\\sum \\_{j\\=1}^{N\\_{at}}\\\\sum \\_{\\\\mathbf {L} }{}^{\\\\prime }\\\\left(f\\_{d,6}(r\\_{ij,L})\\\\,{\\\\frac {C\\_{6ij}}{r\\_{ij,{L}}^{6}}}\\+f\\_{d,8}(r\\_{ij,L})\\\\,{\\\\frac {C\\_{8ij}}{r\\_{ij,L}^{8}}}\\\\right).} Unlike in the method DFT\\-D2, the dispersion coefficients   C  6 i j {\\\\displaystyle C\\_{6ij}}  are geometry\\-dependent as they are adjusted on the basis of the local geometry (coordination number) around atoms   i {\\\\displaystyle i}  and  j {\\\\displaystyle j} . In the zero\\-damping variant of the DFT\\-D3 method (DFT\\-D3(zero)), the damping function reads:  f  d , n  (  r  i j  ) \\=  s  n  1 \\+ 6 (  r  i j  /  (  s  R , n  R  0 i j  )  )  \u2212  \u03b1  n {\\\\displaystyle f\\_{d,n}(r\\_{ij})\\={\\\\frac {s\\_{n}}{1\\+6(r\\_{ij}/(s\\_{R,n}R\\_{0ij}))^{\\-\\\\alpha \\_{n}}}}} where   R  0 i j  \\=  C  8 i j  C  6 i j {\\\\displaystyle R\\_{0ij}\\={\\\\sqrt {\\\\frac {C\\_{8ij}}{C\\_{6ij}}}}} , the parameters   \u03b1  6 {\\\\displaystyle \\\\alpha \\_{6}}  ,  \u03b1  8 {\\\\displaystyle \\\\alpha \\_{8}}  ,  s  R , 8 {\\\\displaystyle s\\_{R,8}}  and  s  6 {\\\\displaystyle s\\_{6}}  are fixed at values of 14, 16, 1, and 1, respectively, while   s  8 {\\\\displaystyle s\\_{8}}  and  s  R , 6 {\\\\displaystyle s\\_{R,6}}  are adjustable parameters whose values depend on the choice of the exchange\\-correlation functional. The DFT\\-D3(zero) method is invoked by setting IVDW\\=11\\. Optionally, the following parameters can be user\\-defined (the given values are the default ones): * VDW\\_RADIUS\\=50\\.2\u00a0: cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for pair interactions considered in the equation of  {\\\\displaystyle E\\_{\\\\mathrm {disp} }} * VDW\\_CNRADIUS\\=20\\.0\u00a0: cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for the calculation of the coordination numbers* VDW\\_S8\\=\\[real]\u00a0: damping function parameter   s  8 {\\\\displaystyle s\\_{8}} * VDW\\_SR\\=\\[real]\u00a0: damping function parameter   s  R , 6 {\\\\displaystyle s\\_{R,6}} Alternatively, the Becke\\-Johnson (BJ) damping can be used in the DFT\\-D3 method[\\[2]](#cite_note-grimme:jcc:11-2):  f  d , n  (  r  i j  ) \\=  s  n  r  i j  n  r  i j  n  \\+ (  a  1  R  0 i j  \\+  a  2  )  n {\\\\displaystyle f\\_{d,n}(r\\_{ij})\\={\\\\frac {s\\_{n}\\\\,r\\_{ij}^{n}}{r\\_{ij}^{n}\\+(a\\_{1}\\\\,R\\_{0ij}\\+a\\_{2})^{n}}}} with   s  6  \\= 1 {\\\\displaystyle s\\_{6}\\=1}  and  a  1 {\\\\displaystyle a\\_{1}}  ,  a  2 {\\\\displaystyle a\\_{2}} , and   s  8 {\\\\displaystyle s\\_{8}}  being adjustable parameters.This variant of DFT\\-D3 method (DFT\\-D3(BJ)) is invoked by setting IVDW\\=12\\. As before, the parameters VDW\\_RADIUS and VDW\\_CNRADIUS can be used to change the default values for the cutoff radii. The parameters of the damping function can be controlled using the following tags: * VDW\\_S8\\=\\[real]* VDW\\_A1\\=\\[real]* VDW\\_A2\\=\\[real]   | **Mind:*** The default values for the damping function parameters are available for several GGA (PBE, RPBE, revPBE and PBEsol), METAGGA (TPSS, M06L and SCAN) and hybrid (B3LYP and PBEh/PBE0\\) functionals, as well as Hartree\\-Fock. If another functional is used, the user has to define these parameters via the corresponding tags in the INCAR file. The up\\-to\\-date list of parametrized DFT functionals with recommended values of damping function parameters can be found on the webpage https://www.chemie.uni\\-bonn.de/grimme/de/software/dft\\-d3/ and follow the link \"List of parametrized functionals\"). * The DFT\\-D3 method has been implemented in VASP by Jonas Moellmann based on the dftd3 program written by Stefan Grimme, Stephan Ehrlich and Helge Krieg. If you make use of the DFT\\-D3 method, please cite reference [\\[1]](#cite_note-grimme:jcp:10-1). When using DFT\\-D3(BJ)"}
{"file_name": "NBANDS_WAVE.md", "content": "NBANDS\\_WAVE= \\[integer]n| Default: **NBANDS\\_WAVE** | \\= NBANDSGW | for LALL\\_IN\\_ONE\\=.TRUE. and NBANDS\\<1 || --- | --- | --- ||  | \\= NBANDS | for LALL\\_IN\\_ONE\\=.TRUE. and NBANDS\\>0 ||  | \\= NBANDSEXACT | for LALL\\_IN\\_ONE\\=.FALSE. and NBANDS\\<1 ||  | \\= NBANDS | for LALL\\_IN\\_ONE\\=.FALSE. and NBANDS\\>0 | Description: NBANDS\\_WAVE specifies the number of bands written to WAVECAR in the all\\-in\\-one mode of many\\-body perturbation theory calculations,i.e., ALGO\\=[ACFDT\\[R]](ACFDT/RPA_calculations.html \"ACFDT/RPA calculations\"), [\\[EV]GW0\\[R]](Practical_guide_to_GW_calculations.html \"Practical guide to GW calculations\"), GWR.  | **Mind:** available as of VASP.6\\.4\\.0 || --- |  --- In the all\\-in\\-one mode, VASP automatically performs the necessary DFT steps prior to the many\\-body perturbation theory (MBPT) calculation, i.e. a DFT calculation with NBANDS, followed by an exact diagonalization of the Kohn\\-Sham Hamiltonian with NBANDSEXACT bands. Note, NBANDSEXACT is set by default to the maximum number of plane\\-waves given by the chosen energy cutoff for the orbitals ENCUT. In the all\\-in\\-one mode, the actual GW/RPA calculation is also performed with NBANDSEXACT bands. If NBANDS\\_WAVE is not set, all orbitals are written to WAVECAR, which potentially becomes huge in file size. | **Tip:** The NBANDS\\_WAVE tag can be used to limit the number of bands written to WAVECAR if LALL\\_IN\\_ONE\\=.TRUE. || --- | The all\\-in\\-one mode is automatically enabled for ALGO\\=\\[EV]GW\\[0]R, RPA\\[R],ACFDT\\[R] if NBANDS is not set."}
{"file_name": "GW_approximation_of_Hedin's_equations.md", "content": "Green's functions----------------- The GW method can be understood in terms of the following eigenvalue equation[\\[1]](#cite_note-HybertsenLouie-1)  ( T \\+  V  e x t  \\+  V  h  )  \u03d5  n  k  (  r  ) \\+ \u222b d  r  \u03a3 (  r  ,  r  \u2032  , \u03c9 \\=  E  n  k  )  \u03d5  n  k  (  r  \u2032  ) \\=  E  n  k  \u03d5  n  k  (  r  ) {\\\\displaystyle (T\\+V\\_{ext}\\+V\\_{h})\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})\\+\\\\int d{\\\\bf {r}}\\\\Sigma ({\\\\bf {r}},{\\\\bf {r}}',\\\\omega \\=E\\_{n{\\\\bf {k}}})\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}}')\\=E\\_{n{\\\\bf {k}}}\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})} Here   T {\\\\displaystyle T}  is the kinetic energy,   V  e x t {\\\\displaystyle V\\_{ext}}  the external potential of the nuclei,   V  h {\\\\displaystyle V\\_{h}}  the Hartree potential and   E  n  k {\\\\displaystyle E\\_{n{\\\\bf {k}}}}  the quasiparticle energies with orbitals   \u03d5  n  k {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}} . In contrast to DFT, the exchange\\-correlation potential is replaced by the many\\-body self\\-energy   \u03a3 {\\\\displaystyle \\\\Sigma }  and should be obtained together with the Green's function   G {\\\\displaystyle G} , the irreducible polarizability   \u03c7 {\\\\displaystyle \\\\chi } , the screened Coulomb interaction   W {\\\\displaystyle W}  and the irreducible vertex function   \u0393 {\\\\displaystyle \\\\Gamma }  in a self\\-consistent procedure. For completeness, these equations are[\\[2]](#cite_note-Hedin-2)  G ( 1 , 2 ) \\=  G  0  ( 1 , 2 ) \\+ \u222b d ( 3 , 4 )  G  0  ( 1 , 3 ) \u03a3 ( 3 , 4 ) G ( 4 , 2 ) {\\\\displaystyle G(1,2\\)\\=G\\_{0}(1,2\\)\\+\\\\int d(3,4\\)G\\_{0}(1,3\\)\\\\Sigma (3,4\\)G(4,2\\)}  \u03c7 ( 1 , 2 ) \\= \u222b d ( 3 , 4 ) G ( 1 , 3 ) G ( 4 , 1 ) \u0393 ( 3 , 4 ; 2 ) {\\\\displaystyle \\\\chi (1,2\\)\\=\\\\int d(3,4\\)G(1,3\\)G(4,1\\)\\\\Gamma (3,4;2\\)}  W ( 1 , 2 ) \\= V ( 1 , 2 ) \\+ \u222b d ( 3 , 4 ) V ( 1 , 3 ) \u03c7 ( 3 , 4 ) W ( 4 , 2 ) {\\\\displaystyle W(1,2\\)\\=V(1,2\\)\\+\\\\int d(3,4\\)V(1,3\\)\\\\chi (3,4\\)W(4,2\\)}  \u03a3 ( 1 , 2 ) \\= \u222b d ( 3 , 4 ) G ( 1 , 3 ) \u0393 ( 3 , 2 ; 4 ) W ( 4 , 1 ) {\\\\displaystyle \\\\Sigma (1,2\\)\\=\\\\int d(3,4\\)G(1,3\\)\\\\Gamma (3,2;4\\)W(4,1\\)}  \u0393 ( 1 , 2 ; 3 ) \\= \u03b4 ( 1 , 2 ) \u03b4 ( 1 , 3 ) \\+ \u222b d ( 4 , 5 , 6 , 7 )  \u03b4 \u03a3 ( 1 , 2 )  \u03b4 G ( 4 , 5 )  G ( 4 , 6 ) G ( 7 , 5 ) \u0393 ( 6 , 7 ; 3 ) {\\\\displaystyle \\\\Gamma (1,2;3\\)\\=\\\\delta (1,2\\)\\\\delta (1,3\\)\\+\\\\int d(4,5,6,7\\){\\\\frac {\\\\delta \\\\Sigma (1,2\\)}{\\\\delta G(4,5\\)}}G(4,6\\)G(7,5\\)\\\\Gamma (6,7;3\\)} Here the common notation   1 \\= (  r  1  ,  t  1  ) {\\\\displaystyle 1\\=({\\\\bf {r}}\\_{1},t\\_{1})}  was adopted and   V {\\\\displaystyle V}  denotes the bare Coulomb interaction. Note, that these equations are exact and provide an alternative to the Schr\u00f6dinger equation for the many\\-body problem. Nevertheless, approximations are necessary for realistic systems. The most popular one is the GW approximation and is obtained by neglecting the equation for the vertex function and using the bare vertex instead:  \u0393 ( 1 , 2 ; 3 ) \\= \u03b4 ( 1 , 2 ) \u03b4 ( 1 , 3 ) {\\\\displaystyle \\\\Gamma (1,2;3\\)\\=\\\\delta (1,2\\)\\\\delta (1,3\\)} This means that the equations for the polarizability and self\\-energy reduce to   \u03c7 ( 1 , 2 ) \\= G ( 1 , 2 ) G ( 2 , 1 ) {\\\\displaystyle \\\\chi (1,2\\)\\=G(1,2\\)G(2,1\\)}  \u03a3 ( 1 , 2 ) \\= G ( 1 , 2 ) W ( 2 , 1 ) {\\\\displaystyle \\\\Sigma (1,2\\)\\=G(1,2\\)W(2,1\\)} while the equations for the Green's function and the screened potential remain the same.  However, in practice, these equations are usually solved in reciprocal space in the frequency domain  W  G  G  \u2032  (  q  , \u03c9 ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  (  q  , \u03c9 )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})}  G  G  G  \u2032  (  q  , \u03c9 ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03a3  G  G  \u2032  (  q  , \u03c9 )  G  G  G  \u2032  ( 0 )  (  q  )  ]  \u2212 1  G  G  G  \u2032  ( 0 )  (  q  ) {\\\\displaystyle G\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\Sigma \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )G\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(0\\)}({\\\\bf {q}})\\\\right]^{\\-1}G\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(0\\)}({\\\\bf {q}})} In principle Hedin's equations have to be solved self\\-consistently, where in the first iteration   G  ( 0 ) {\\\\displaystyle G^{(0\\)}}  is the non\\-interacting Green's function   G  ( 0 )  (  r  ,  r  \u2032  , \u03c9 ) \\=  \u2211  n  k  \u03d5  n  k  \u2217 ( 0 )  (  r  )  \u03d5  n  k  ( 0 )  (  r  \u2032  )  \u03c9 \u2212  E  n  k  ( 0 ) {\\\\displaystyle G^{(0\\)}({\\\\bf {r}},{\\\\bf {r}}',\\\\omega )\\=\\\\sum \\_{n{\\\\bf {k}}}{\\\\frac {\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}}')}{\\\\omega \\-E\\_{n{\\\\bf {k}}}^{(0\\)}}}} with   \u03d5  n  k  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}}  being a set of one\\-electron orbitals and   E  n  k  ( 0 ) {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(0\\)}}  the corresponding energies. Afterwards the polarizability   \u03c7  ( 0 ) {\\\\displaystyle \\\\chi ^{(0\\)}}  is determined, followed by the screened potential   W  ( 0 ) {\\\\displaystyle W^{(0\\)}}  and the self\\-energy   \u03a3  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}} . This means that GW calculations require a first guess for the one\\-electron eigensystem, which is usually taken from a preceding DFT step.  In principle, one has to repeat all steps by the updating the Green's function with the Dyson equation given above in each iteration cycle until self\\-consistency is reached. In practice, this is hardly ever done due to computational complexity on the one hand (in fact fully self\\-consistent GW calculations are available as of VASP 6 only).  On the other hand, one observes that by keeping the screened potential   W {\\\\displaystyle W}  in the first iteration to the DFT level one benefits from error cancelling,[\\[3]](#cite_note-shishkin:prl:07-3) which is the reason why often the screening is kept on the DFT level and one aims at self\\-consistency in Green's function only.  Following possible approaches are applied in practice and selectable within VASP with the ALGO tag.  Single Shot: G0W0----------------- Performing only one GW iteration step is commonly referred to the G0W0 method. Here the self\\-energy   \u03a3  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}}  is determined and the corresponding eigenvalue equation is solved.[\\[1]](#cite_note-HybertsenLouie-1) Formally, this is a five step precedure * Determine the independent particle polarizability   \u03c7  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )} * Determine the screened Coulomb potential   W  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle W\\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )} * Determine the self\\-energy   \u03a3  ( 0 )  (  r ,  r \u2032  , \u03c9 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}({\\\\bf {r,r'}},\\\\omega )} * Solve the eigenvalue equation   ( T \\+  V  e x t  \\+  V  h  )  \u03d5  n  k  (  r  ) \\+ \u222b d  r  \u03a3  ( 0 )  (  r  ,  r  \u2032  , \u03c9 \\=  E  n  k  ( 1 )  )  \u03d5  n  k  (  r  \u2032  ) \\=  E  n  k  ( 1 )  \u03d5  n  k  (  r  ) {\\\\displaystyle (T\\+V\\_{ext}\\+V\\_{h})\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})\\+\\\\int d{\\\\bf {r}}\\\\Sigma ^{(0\\)}\\\\left({\\\\bf {r}},{\\\\bf {r}}',\\\\omega \\=E\\_{n{\\\\bf {k}}}^{(1\\)}\\\\right)\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}}')\\=E\\_{n{\\\\bf {k}}}^{(1\\)}\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})}  for the quasi\\-particle energies   E  n  k  ( 1 ) {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(1\\)}}  . To save further computation time, the self\\-energy is linearized with a series expansion around the Kohn\\-Sham eigenvalues   \u03f5  n  k {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}}  \u03a3  ( 0 )  (  r ,  r \u2032  , \u03c9 ) \u2248  \u03a3  ( 0 )  (  r ,  r \u2032  ,  \u03f5  n  k  ) \\+  \u2202  \u03a3  ( 0 )  \u2202 \u03c9  (  r ,  r \u2032  , \u03c9 )  \\|  \u03c9 \\=  \u03f5  n  k  ( \u03c9 \u2212  \u03f5  n  k  ) {\\\\displaystyle \\\\Sigma ^{(0\\)}({\\\\bf {r,r'}},\\\\omega )\\\\approx \\\\Sigma ^{(0\\)}({\\\\bf {r,r'}},\\\\epsilon \\_{n{\\\\bf {k}}})\\+\\\\left.{\\\\frac {\\\\partial \\\\Sigma ^{(0\\)}}{\\\\partial \\\\omega }}({\\\\bf {r,r'}},\\\\omega )\\\\right\\|\\_{\\\\omega \\=\\\\epsilon \\_{n{\\\\bf {k}}}}(\\\\omega \\-\\\\epsilon \\_{n{\\\\bf {k}}})} and the renormalization factor   Z  n  k  ( 0 )  \\=  \\[  1 \u2212  R e  (  \u2202  \u03a3  ( 0 )  \u2202 \u03c9  (  r ,  r \u2032  , \u03c9 )  \\|  \u03c9 \\=  \u03f5  n  k  )  ]  \u2212 1 {\\\\displaystyle Z\\_{n{\\\\bf {k}}}^{(0\\)}\\=\\\\left\\[1\\-{\\\\rm {Re}}\\\\left(\\\\left.{\\\\frac {\\\\partial \\\\Sigma ^{(0\\)}}{\\\\partial \\\\omega }}({\\\\bf {r,r'}},\\\\omega )\\\\right\\|\\_{\\\\omega \\=\\\\epsilon \\_{n{\\\\bf {k}}}}\\\\right)\\\\right]^{\\-1}}  is introduced. This allows to obtain the G0W0 quasi\\-particle energies from following equation[\\[1]](#cite_note-HybertsenLouie-1)  E  n  k  ( 1 )  \\=  \u03f5  n  k  \\+  Z  n  k  ( 0 )  R e  \\[  \u27e8  \u03d5  n  k  \\|  \u2212  \u0394 2  \\+  V  e x t  \\+  V  h  \\+  \u03a3  ( 0 )  ( \u03c9 \\=  \u03f5  n  k  ) \u2212  \u03f5  n  k  \\|  \u03d5  n  k  \u27e9  ] {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(1\\)}\\=\\\\epsilon \\_{n{\\\\bf {k}}}\\+Z\\_{n{\\\\bf {k}}}^{(0\\)}{\\\\rm {Re}}\\\\left\\[\\\\langle \\\\phi \\_{n{\\\\bf {k}}}\\|\\-{\\\\frac {\\\\Delta }{2}}\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma ^{(0\\)}(\\\\omega \\=\\\\epsilon \\_{n{\\\\bf {k}}})\\-\\\\epsilon \\_{n{\\\\bf {k}}}\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\rangle \\\\right]} The G0W0 method avoids the direct computation of the Green's function and neglects self\\-consistency in   G {\\\\displaystyle G}  completely. In fact, only the Kohn\\-Sham energies are updated from   \u03f5  n  k  \u2192  E  n  k  ( 1 ) {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\to E\\_{n{\\\\bf {k}}}^{(1\\)}} , while the orbitals remain unchanged. This is the reason why the G0W0 method is internally selected as of VASP6 with ALGO \\=EVGW0 (\"eigenvalue GW\") in combination with NELM\\=1 to indicate one single iteration, even though the method is commonly known as the G0W0 approach. To keep backwards\\-compatibility, however, ALGO\\=G0W0 is still supported in VASP6\\. Note that avoiding self\\-consistency might seem a drastic step at first sight. However, the G0W0 method often yields satisfactory results with band\\-gaps close to experimental measurements and is often employed for realistic band gap calculations.[\\[4]](#cite_note-shishkin-PRB74-4)[\\[5]](#cite_note-shishkin-PRB75-5) Partially self\\-consistent: GW0 or EVGW0---------------------------------------- The G0W0 quasi\\-particle energies can be used to update the poles of the Green's function in the spectral representation  G  ( i )  (  r  ,  r  \u2032  , \u03c9 ) \\=  \u2211  n  k  \u03d5  n  k  \u2217 ( 0 )  (  r  )  \u03d5  n  k  ( 0 )  (  r  \u2032  )  \u03c9 \u2212  E  n  k  ( i ) {\\\\displaystyle G^{(i)}({\\\\bf {r}},{\\\\bf {r}}',\\\\omega )\\=\\\\sum \\_{n{\\\\bf {k}}}{\\\\frac {\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}}')}{\\\\omega \\-E\\_{n{\\\\bf {k}}}^{(i)}}}} which in turn can be used to update the self\\-energy via   \u03a3  ( 0 )  \\=  G  ( i )  W  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}\\=G^{(i)}W^{(0\\)}} . This allows to form a partial self\\-consistency loop, where the screening is kept on the DFT level. The method is commonly known as GW0, even though only eigenvalues are updated: * Determine the independent particle polarizability   \u03c7  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )} * Determine the screened Coulomb potential   W  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle W\\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )}  and keep it fixed in the following* Determine the self\\-energy   \u03a3  ( j )  (  r ,  r \u2032  , \u03c9 ) \\=  G  ( j )  W  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(j)}({\\\\bf {r,r'}},\\\\omega )\\=G^{(j)}W^{(0\\)}}  .* Update quasi\\-particle energies   E  n  k  ( j \\+ 1 )  \\=  \u03f5  n  k  \\+  Z  n  k  ( j )  R e  \\[  \u27e8  \u03d5  n  k  \\|  \u2212  \u0394 2  \\+  V  e x t  \\+  V  h  \\+  \u03a3  ( j )  ( \u03c9 \\=  E  n  k  ( j )  ) \u2212  \u03f5  n  k  \\|  \u03d5  n  k  \u27e9  ] {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\=\\\\epsilon \\_{n{\\\\bf {k}}}\\+Z\\_{n{\\\\bf {k}}}^{(j)}{\\\\rm {Re}}\\\\left\\[\\\\langle \\\\phi \\_{n{\\\\bf {k}}}\\|\\-{\\\\frac {\\\\Delta }{2}}\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma ^{(j)}(\\\\omega \\=E\\_{n{\\\\bf {k}}}^{(j)})\\-\\\\epsilon \\_{n{\\\\bf {k}}}\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\rangle \\\\right]} . In the first iteration use   E  n  k  ( 0 )  \\=  \u03f5  n  k {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(0\\)}\\=\\\\epsilon \\_{n{\\\\bf {k}}}} The last two steps are repeated until self\\-consistency is reached. The GW0 method is computationally slightly more expensive than the single\\-shot approach, but yields often excellent agreement with experimentally measured band gaps while being computationally affordable at the same time.[\\[4]](#cite_note-shishkin-PRB74-4)[\\[5]](#cite_note-shishkin-PRB75-5) Note that the GW0 and its single\\-shot approach do not allow for updates in the Kohn\\-Sham orbitals   \u03d5  n  k {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}} , merely the eigenvalues are updated. Furthermore, the name GW0 indicates an update in the Green's function as a solution of the Dyson equation, while the used spectral representation of the Green's function above is strictly speaking correct only in the single\\-shot approach. Since VASP6 allows to update the Green's function from the solution of the corresponding Dyson equation, the commonly known GW0 method is also selectable with ALGO\\=EVGW0 (\"eigenvalue GW\") and the number of iteration is set with NELM. Self\\-consistent Quasi\\-particle approximation: scQPGW0------------------------------------------------------- In addition to eigenvalues one can use the self\\-consistent Quasi\\-particle GW0 approach (scQPGW0\\) to update the orbitals   \u03d5  n  k  \u2192  \u03c8  n  k  ( j ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}\\\\to \\\\psi \\_{n{\\\\bf {k}}}^{(j)}}  as well. This approach was presented first by Faleev et. al,[\\[6]](#cite_note-Faleev-6) and used a hermitized self\\-energy   \u03a3  h e r m  \\=  \u03a3 \\+  \u03a3  \u2020  2 {\\\\displaystyle \\\\Sigma ^{\\\\rm {herm}}\\={\\\\frac {\\\\Sigma \\+\\\\Sigma ^{\\\\dagger }}{2}}}  in the eigenvalue equation to determine both, quasi\\-particle energies   E  n  k {\\\\displaystyle E\\_{n{\\\\bf {k}}}}  and corresponding orbitals   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n{\\\\bf {k}}}}  . In contrast to the Faleev approach one may consider a generalized eigenvalue problem instead that is obtained consistently from the linearization of the self\\-energy   \u03a3 (  E  ( j \\+ 1 )  ) \u2248 \u03a3 (  E  ( j )  ) \\+ \u03be (  E  ( j )  ) (  E  ( j \\+ 1 )  \u2212  E  ( j )  ) {\\\\displaystyle \\\\Sigma (E^{(j\\+1\\)})\\\\approx \\\\Sigma (E^{(j)})\\+\\\\xi (E^{(j)})(E^{(j\\+1\\)}\\-E^{(j)})}  (where   \u03be (  E  ( j )  ) \\= \u2202 \u03a3 (  E  ( j )  )  /  \u2202  E  ( j ) {\\\\displaystyle \\\\xi (E^{(j)})\\=\\\\partial \\\\Sigma (E^{(j)})/\\\\partial E^{(j)}} ) and reads[\\[3]](#cite_note-shishkin:prl:07-3)  \\[  T \\+  V  e x t  \\+  V  h  \\+ \u03a3  (  E  n  k  ( j )  )  \u2212 \u03be  (  E  n  k  ( j )  )  E  n  k  ( j )  ]  \u23df  H  (  E  n  k  ( j )  )  \\|  \u03c8  n  k  ( j \\+ 1 )  \u27e9  \\=  E  n  k  ( j \\+ 1 )  \\[  1 \u2212 \u03be (  E  n  k  ( j )  )  ]  \u23df  S  (  E  n  k  ( j )  )  \\|  \u03c8  n  k  ( j \\+ 1 )  \u27e9 {\\\\displaystyle \\\\underbrace {\\\\left\\[T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma \\\\left(E\\_{n{\\\\bf {k}}}^{(j)}\\\\right)\\-\\\\xi \\\\left(E\\_{n{\\\\bf {k}}}^{(j)}\\\\right)E\\_{n{\\\\bf {k}}}^{(j)}\\\\right]} \\_{{\\\\bf {H}}(E\\_{n{\\\\bf {k}}}^{(j)})}\\\\left\\|\\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\right\\\\rangle \\=E\\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\underbrace {\\\\left\\[1\\-\\\\xi (E\\_{n{\\\\bf {k}}}^{(j)})\\\\right]} \\_{{\\\\bf {S}}(E\\_{n{\\\\bf {k}}}^{(j)})}\\\\left\\|\\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\right\\\\rangle } The resulting Hamiltonian   H {\\\\displaystyle {\\\\bf {H}}}  and overlap matrix   H {\\\\displaystyle {\\\\bf {H}}}  are non\\-hermitian in general, implying that the resulting orbitals   \\|  \u03c8  n  k  ( j \\+ 1 )  \u27e9 {\\\\displaystyle \\\\left\\|\\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\right\\\\rangle }  are not normalized to 1\\. Therefore, VASP determines the hermitian parts   H \\=  H  \\+  H  \u2020  2  , S \\=  S  \\+  S  \u2020  2 {\\\\displaystyle H\\={\\\\frac {{\\\\bf {H}}\\+{\\\\bf {H}}^{\\\\dagger }}{2}},S\\={\\\\frac {{\\\\bf {S}}\\+{\\\\bf {S}}^{\\\\dagger }}{2}}}  and diagonalizes following matrix instead  S  \u2212 1  /  2  H  S  \u2212 1  /  2  \\= U \u039b  U  \u2020 {\\\\displaystyle S^{\\-1/2}HS^{\\-1/2}\\=U\\\\Lambda U^{\\\\dagger }} The resulting diagonal matrix   \u039b {\\\\displaystyle \\\\Lambda }  contains the new quasi\\-particles, while the unitary matrix   U {\\\\displaystyle U}  determine the new orbitals   \u03c8  n  k  ( j \\+ 1 )  \\=  \u2211  m  U  n m  \u03c8  m  k  ( j \\+ 1 ) {\\\\displaystyle \\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\=\\\\sum \\_{m}U\\_{nm}\\\\psi \\_{m{\\\\bf {k}}}^{(j\\+1\\)}}  .The method can be selected in VASP with ALGO\\=QPGW0\\. See here for more information. Low\\-scaling GW: The Space\\-time Formalism------------------------------------------ Available as of VASP.6 are low\\-scaling algorithms for ACFDT/RPA.[\\[7]](#cite_note-kaltak:prb:2014-7) This page describes the formalism of the corresponding low\\-scaling GW approach.[\\[8]](#cite_note-liu:prb:2016-8) A theoretical description of the ACFDT/RPA total energies is found here. A brief summary regarding GW theory is given below, while a practical guide can be found here.  Theory------ The GW implementations in VASP described in the papers of Shishkin *et al.*[\\[9]](#cite_note-shishkin:prb:2006-9)[\\[10]](#cite_note-shishkin:prb:2007-10) avoid storage of the Green's function   G {\\\\displaystyle G}  as well as Fourier transformations between time and frequency domain entirely. That is, all calculations are performed solely on the real frequency axis using Kramers\\-Kronig transformations for convolutions in the equation of   \u03c7 {\\\\displaystyle \\\\chi }  and  \u03a3 {\\\\displaystyle \\\\Sigma }  in reciprocal space and results in a relatively high computational cost that scales with   N  4 {\\\\displaystyle N^{4}}  (number of electrons). The scaling with system size can, however, be reduced to   N  3 {\\\\displaystyle N^{3}}  by performing a so\\-called Wick\\-rotation to imaginary time   t \u2192 i \u03c4 {\\\\displaystyle t\\\\to i\\\\tau } .[\\[11]](#cite_note-rojas:prl:1995-11) Following the  low scaling ACFDT/RPA algorithms the space\\-time implementation determines first, the non\\-interacting Green's function on the imaginary time axis in real space   G (  r  ,  r  \u2032  , i \u03c4 ) \\= \u2212  \u2211  n  k  \u03d5  n  k  ( 0 )  (  r  )  \u03d5  n  k  \u2217 ( 0 )  (  r  \u2032  )  e  \u2212 (  \u03f5  n  k  \u2212 \u03bc ) \u03c4  \\[  \u0398 ( \u03c4 ) ( 1 \u2212  f  n  k  ) \u2212 \u0398 ( \u2212 \u03c4 )  f  n  k  ] {\\\\displaystyle G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau )\\=\\-\\\\sum \\_{n{\\\\bf {k}}}\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}}')e^{\\-(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\mu )\\\\tau }\\\\left\\[\\\\Theta (\\\\tau )(1\\-f\\_{n{\\\\bf {k}}})\\-\\\\Theta (\\-\\\\tau )f\\_{n{\\\\bf {k}}}\\\\right]} Here   \u0398 {\\\\displaystyle \\\\Theta }  is the step function and   f  n  k {\\\\displaystyle f\\_{n{\\\\bf {k}}}}  the occupation number of the state   \u03d5  n  k  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}} . Because the Green's function is non\\-oscillatory on the imaginary time axis it can be represented on a coarse grid   \u03c4  m {\\\\displaystyle \\\\tau \\_{m}} , where the number of time points can be selected in VASP via the NOMEGA tag. Usually 12 to 16 points are sufficient for insulators and small band gap systems.[\\[12]](#cite_note-kaltak:2014-12) Subsequently, the irreducible polarizability is calculated from a contraction of two imaginary time Green's functions   \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212 G (  r  ,  r  \u2032  , i  \u03c4  m  ) G (  r  \u2032  ,  r  , \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})G({\\\\bf {r}}',{\\\\bf {r}},\\-i\\\\tau \\_{m})} Afterwards, the same compressed Fourier transformation as for the  low scaling ACFDT/RPA algorithms is employed to obtain the irreducible polarizability in reciprocal space on the imaginary frequency axis   \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) \u2192  \u03c7  G  G  \u2032  (  q  , i  \u03c9  n  ) {\\\\displaystyle \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\\\to \\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{n})} .[\\[12]](#cite_note-kaltak:2014-12)[\\[8]](#cite_note-liu:prb:2016-8) The next step is the computation of the screened potential  W  G  G  \u2032  (  q  , i  \u03c9  m  ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  (  q  , i  \u03c9  m  )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{m})\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{m})V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})}   followed by the inverse Fourier transform   W  G  G  \u2032  (  q  , i  \u03c9  n  ) \u2192 \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{n})\\\\to \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})}  and the calculation of the self\\-energy   \u03a3 (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212 G (  r  ,  r  \u2032  , i  \u03c4  m  ) W (  r  \u2032  ,  r  , i  \u03c4  m  ) {\\\\displaystyle \\\\Sigma ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})W({\\\\bf {r}}',{\\\\bf {r}},i\\\\tau \\_{m})} From here, several routes are possible including all approximations mentioned above, that is the single\\-shot, EVG0 and QPEVG0 approximation. All approximations have one point in common.  In contrast to the real\\-frequency implementation, the low\\-scaling GW algorithms require an analytical continuation of the self\\-energy from the imaginary frequency axis to the real axis. In general, this is an ill\\-defined problem and usually prone to errors, since the self\\-energy is known on a finite set of points. VASP determines internally a Pad\u00e9 approximation of the self\\-energy   \u03a3 ( z ) {\\\\displaystyle \\\\Sigma (z)}  from the calculated set of NOMEGA points   \u03a3 ( i  \u03c9  n  ) {\\\\displaystyle \\\\Sigma (i\\\\omega \\_{n})}  and solves the non\\-linear eigenvalue problem   \\[  T \\+  V  e x t  \\+  V  h  \\+ \u03a3 ( z )  ]  \\|  \u03d5  n  k  \u27e9  \\= z  \\|  \u03d5  n  k  \u27e9 {\\\\displaystyle \\\\left\\[T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma (z)\\\\right]\\\\left\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\right\\\\rangle \\=z\\\\left\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\right\\\\rangle } on the real frequency axis   z \\= \u03c9 {\\\\displaystyle z\\=\\\\omega }  . Because preceding Fourier transformations have been carried out with exponentially suppressed errors, the analytical continuation   \u03a3 ( z ) {\\\\displaystyle \\\\Sigma (z)}  of the self\\-energy can be determined with high accuracy. The analytical continuation typically yields energies that differ less than 20 meV from quasi\\-particle energies obtained from the real\\-frequency calculation.[\\[8]](#cite_note-liu:prb:2016-8) In addition, the space\\-time formulation allows to solve the full Dyson equation for   G (  r ,  r \u2032  , i \u03c4 ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau )}  with decent computational cost.[\\[13]](#cite_note-grumet:prb:2018-13) This approach is known as the self\\-consistent GW approach (scGW) and is available as of VASP6\\. Limitations of GW----------------- From a physical point of view, the scGW method yields mostly unsatisfactory results compared to experiment. Notably, the band gaps are significantly overestimated compared to experiment, and plasmonic satellites are entirely missing in the spectral function.[\\[14]](#cite_note-grumet-14) The fact that \"sloppier\" GW flavours, such as EVGW0 or even the single\\-shot approach yield more accurate results is due to fortuitous error cancelling and can be understood in terms of the band\\-gap   \u0394 {\\\\displaystyle \\\\Delta }  of a system. The DFT gap is typically smaller than the GW band gap and yields, therefore, a larger dielectric function   \u03f5 ( \u03c9 ) \\= 1 \u2212 \u03c7 ( \u03c9 ) V {\\\\displaystyle \\\\epsilon (\\\\omega )\\=1\\-\\\\chi (\\\\omega )V}  (the polarizability is inverse proportional to the band gap of the system). Although the band gap is corrected by GW, at the same time the screening of the Coulomb interaction is weakened. Forcing self\\-consistency only increases the effect and deteriorates the agreement with experimental band gaps.The rather disappointing results of the self\\-consistent GW approximation shows the general limitations of Hedin's equations in the absence of vertex corrections. It can be shown that inclusion of vertex corrections yields band gaps that are again in agreement with experiment.[\\[3]](#cite_note-shishkin:prl:07-3)"}
{"file_name": "CMBJA.md", "content": "CMBJA= \\[real]n| Default: **CMBJA** | \\= \u22120\\.012 | if METAGGA\\=MBJ || --- | --- | --- ||  | \\= 0\\.488 | if METAGGA\\=LMBJ | Description: sets the   \u03b1 {\\\\displaystyle \\\\alpha }  parameter in the MBJ and LMBJ potentials.  --- See the description of the METAGGA tag."}
{"file_name": "PARAM1.md", "content": "PARAM1= \\[real]   Default: **PARAM1** \\= 0\\.1234nDescription:   \u03bc {\\\\displaystyle \\\\mu }  for GGA\\=MK,   \u03b2 {\\\\displaystyle \\\\beta }  for GGA\\=BO.   --- The PARAM1 tag determines the value corresponding to different parameters depending on the GGA functional that is chosen:  * \u03bc {\\\\displaystyle \\\\mu }  in the optB86b[\\[1]](#cite_note-klimes:prb:2011-1), B86R[\\[2]](#cite_note-hamada:prb:2014-2), and DF3\\-opt2[\\[3]](#cite_note-chakraborty:jctc:2020-3) exchange functionals, which have the same analytical form and correspond to GGA\\=MK. PARAM1 should in principle be set to 0\\.1234 for the optB86b\\-vdW nonlocal functional[\\[1]](#cite_note-klimes:prb:2011-1) or to   10  /  81 \u22480\\.1234568 {\\\\displaystyle 10/81\\\\approx 0\\.1234568}  for the rev\\-vdW\\-DF2[\\[2]](#cite_note-hamada:prb:2014-2) and vdW\\-DF3\\-opt2[\\[3]](#cite_note-chakraborty:jctc:2020-3) nonlocal functionals. * \u03b2 {\\\\displaystyle \\\\beta }  in the optB88[\\[4]](#cite_note-klimes:jpcm:2010-4) exchange functional or   \u03bc  /  \u03ba {\\\\displaystyle \\\\mu /\\\\kappa }  in the DF3\\-opt1[\\[3]](#cite_note-chakraborty:jctc:2020-3) exchange functional, which have the same analytical form and correspond to GGA\\=BO. PARAM1 should in principle be set to  0\\.22  / 1\\.2 \u22480\\.1833333333 {\\\\displaystyle 0\\.22/1\\.2\\\\approx 0\\.1833333333}  for the optB88\\-vdW nonlocal functional[\\[4]](#cite_note-klimes:jpcm:2010-4) or to   ( 10  /  81 )  / 1\\.1 \u22480\\.1122334456 {\\\\displaystyle (10/81\\)/1\\.1\\\\approx 0\\.1122334456}  for the vdW\\-DF3\\-opt1[\\[3]](#cite_note-chakraborty:jctc:2020-3) nonlocal functional. The complete INCAR file for the nonlocal van der Waals functionals mentioned above can be found at Nonlocal vdW\\-DF functionals."}
{"file_name": "Input.md", "content": "Overview> Input> Preparing a Super Cell>Output> List of tutorials VASP basically needs 4 input files for standard production runs: INCAR--------------------------- The INCAR file holds the input parameters which \"steer\" the calculation. * The default values set by VASP itself are a clever choice to do standard calculations.* These standard settings can be modified to specify:\t+ What do you want to do? (SCF calculation, DOS, dielectric properties ...)\t+ You can give parameters to fulfill your requirements concerning required precision, requested convergence, calculation time ...   POSCAR------------------------------ The POSCAR file contains the information on the structure. * A simple POSCAR file may look like this:  ```fcc:  Ni3.530.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 Ni 1Selective DynCartesian0 0 0  T T T  ``` * The description of each line is given as follows:\t+ 1: Header (comment).\t+ 2: Overall scaling constant.\t+ 3\\-6: Bravais matrix.\t+ 4: Name(s) of the atom(s).\t+ 5: Number of the atoms (of each atom type).\t+ 6: (optional: selective dynamics).\t+ 7: Specifies which coordinate system is used (\"cartesian\" or \"direct\").\t+ 8\\-x: Positions of the atoms.   KPOINTS--------------------------------- The KPOINTS file determines the sampling of the 1st Brillouin zone. * A typical KPOINTS file:  ```Automatic mesh 0G (M)4 4 40.  0.  0.  ``` * The description of each line is given as follows:\t+ 1: Header (comment).\t+ 2: Specifies the k mesh generation type.      N   k \u2192    \\= 0  \t{\\\\displaystyle N\\_{\\\\overrightarrow {k}}\\=0} \t: automatic generation scheme.\t+ 3:     \u0393  \t{\\\\displaystyle \\\\Gamma } \t\\-centered (Monkhorst\\-Pack) grid.\t+ 4: Number of subdivisions in each direction.\t+ 5: Optional shift of the mesh.   POTCAR------------------------------ The POTCAR file contains the relevant information concerning the pseudopotentials that are necessary to run the calculation: * Data that was required for generating the pseudopotentials.* Number of valence electrons.* Atomic mass.* Energy cut\\-off. If the cell contains different atomic species, the corresponding POTCAR files have to be concatenated, in the same order as the atomic species are given in the POSCAR file. **N.B.**: Different XC\\-types must not be mixed. Overview> Input> Preparing a Super Cell>Output> List of tutorials Back to the main page."}
{"file_name": "ML_IAFILT2.md", "content": "ML\\_IAFILT2= \\[integer]   Default: **ML\\_IAFILT2** \\= 2nDescription: This tag specifies the type of angular filtering used in the machine learning force field method.  --- [](File_Angular_filtering_MLFF_cropped.html) Fig. 1: Square of filtering function. This tag is only used if ML\\_LAFILT2\\=*.TRUE.* is set. Following cases are possible for the angular filtering function   \u03b7 {\\\\displaystyle \\\\eta }  (see also here): * ML\\_IAFILT2\\=1: The angular filtering function is described as   \u03b7  l  \\=  1  ( 2 l \\+ 1  )  1  /  4 {\\\\displaystyle \\\\eta \\_{l}\\={\\\\frac {1}{(2l\\+1\\)^{1/4}}}}  .* ML\\_IAFILT2\\=2: The angular filtering function[\\[1]](#cite_note-boyd:book:2000-1) is described as   \u03b7  l ,  a  F I L T  \\=  1  1 \\+  a  F I L T  \\[ l ( l \\+ 1 )  ]  2 {\\\\displaystyle \\\\eta \\_{l,a\\_{\\\\mathrm {FILT} }}\\={\\\\frac {1}{1\\+a\\_{\\\\mathrm {FILT} }\\[l(l\\+1\\)]^{2}}}} . Using this function the parameter   a  F I L T {\\\\displaystyle a\\_{\\\\mathrm {FILT} }}  has to be defined too. It is set in the INCAR file by setting ML\\_AFILT2. This option is the default. In the case of the angular descriptor two radial basis functions are multiplied by each other (see here). Both basis functions use the same filtering function and hence the filtering is done by the square of the filtering function. This is plotted in Fig. 1 for the two different functions used for ML\\_IAFILT2\\=1 and 2 (labeled as TYPE1 and TYPE2, respectively). In the case of ML\\_IAFILT2\\=2 it can be seen that for the filtering parameter ML\\_AFILT2\\=0\\.002 and   l {\\\\displaystyle l} \\=5 the function has only a contribution of 0\\.15\\. Using this filtering parameter the maximum cut\\-off for the angular quantum number can be reduced to ML\\_LMAX2\\=4\\."}
{"file_name": "Computing_the_phonon_dispersion_and_DOS.md", "content": "After computing the force constants using the finite differences or density\\-functional\\-perturbation theory (DFPT) approaches, it is possible to compute the phonon dispersion relation as well as the phonon density of states (DOS).This is accomplished by Fourier interpolating the interatomic force constants from a supercell calculation to the primitive cell. Phonon dispersion: Step\\-by\\-step instructions---------------------------------------------- ### Step 1: Compute the force constants There are two possible approaches for computing the force constants and then building the dynamical matrix: 1. Using finite differences with `IBRION = 5, 6`.2. Using DFPT with `IBRION = 7, 8`. These calculations must be performed in a supercell so that the force constants vanish at large distances. | **Important:** The phonon frequencies need to be converged with respect to the supercell size. || --- | ### Step 2: Provide **q**\\-points along a high\\-symmetry path Create a QPOINTS file containing a **q**\\-points path at which the phonon dispersion is computed.This is accomplished using the line mode of the KPOINTS\\-file format. ### Step 3: Compute the phonon dispersion To compute the phonon dispersion, set `LPHON_DISPERSION = true` in the INCAR file.The amount of information written to the OUTCAR file can be tuned using the PHON\\_NWRITE tag. ### Reading of force constants Steps 1\\-3 can be performed in one VASP calculation.However, generating the finite displacements in the supercell to compute force constants is time\\-consuming.It is possible to skip that step by providing force constants from a previous run.Rename the vaspout.h5 output file from the previous calculation to vaspin.h5, set   ``` LPHON_READ_FORCE_CONSTANTS = True  LPHON_DISPERSION = True  ``` and provide a QPOINTS file. Phonon DOS: Step\\-by\\-step instructions--------------------------------------- ### Step 1: Compute the force constants Same as above.This can be skipped by providing force constants in vaspin.h5 and setting `LPHON_READ_FORCE_CONSTANTS = True`. ### Step 2: Specify a uniform **q**\\-point mesh Create a QPOINTS file that specifies a sufficiently dense, uniform **q**\\-point mesh. ### Step 3: Compute the DOS Set `PHON_DOS > 0` in the INCAR file. The DOS is computed between   \\[  \u03c9  min  \u2212 5 \u03c3 ,  \u03c9  max  \\+ 5 \u03c3 ] {\\\\displaystyle \\[\\\\omega \\_{\\\\text{min}}\\-5\\\\sigma ,\\\\omega \\_{\\\\text{max}}\\+5\\\\sigma ]}  with   \u03c9  min {\\\\displaystyle \\\\omega \\_{\\\\text{min}}}  and  \u03c9  max {\\\\displaystyle \\\\omega \\_{\\\\text{max}}}  the lowest and highest phonon frequency and   \u03c3 {\\\\displaystyle \\\\sigma }  the broadening (PHON\\_SIGMA).  The number of energy points in this energy range is specified by the PHON\\_NEDOS tag. To use a Gaussian\\-smearing method for the computation of the DOS set `PHON_DOS = 1` or to use the tetrahedron method set `PHON_DOS = 2`. Polar materials--------------- If the material is polar, i.e., two or more atoms in the unit cell carry non\\-zero Born effective charge tensors, the long\\-range dipole\\-dipole interaction has to be treated by Ewald summation.This is achieved by setting `LPHON_POLAR = True`, supplying the static dielectric tensor (PHON\\_DIELECTRIC) and the Born\\-effective charges (PHON\\_BORN\\_CHARGES).The values for these dielectric properties have to be obtained from a separate VASP calculation in the unit cell setting LEPSILON or LCALCEPS. | **Important:** Make sure to properly converge this unit\\-cell calculation with respect to the k\\-point mesh (KPOINTS) and the electronic cutoff energy (ENCUT) since the optical phonon frequencies depend strongly on the dielectric properties. || --- | Optionally, specify a reciprocal space cutoff radius (PHON\\_G\\_CUTOFF) for the Ewald summation. ### Obtaining the dielectric properties After a successful linear\\-response calculation using either LEPSILON or LCALCEPS, VASP writes the Born effective charge tensor and the ion\\-clamped static dielectric tensor to OUTCAR, vasprun.xml\") and vaspout.h5. | **Mind:** The vaspout.h5 file is only available if VASP is compiled with HDF5 support. || --- | Here is an example output for a system consisting of two atoms per cell (MgO) in the OUTCAR file:  ``` MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in DFT) ------------------------------------------------------           3.130368    -0.000000    -0.000000           0.000000     3.130368     0.000000          -0.000000     0.000000     3.130368  ```  and  ``` BORN EFFECTIVE CHARGES (including local field effects) (in |e|, cummulative output) --------------------------------------------------------------------------------- ion    1    1     1.97026     0.00000    -0.00000    2    -0.00000     1.97026     0.00000    3    -0.00000     0.00000     1.97026 ion    2    1    -1.97026    -0.00000     0.00000    2     0.00000    -1.97026    -0.00000    3     0.00000    -0.00000    -1.97026  ``` The corresponding XML entries in the vasprun.xml\") file can be queried with the following XPath queries:  ```/modeling/calculation/array[@name=\"born_charges\"]/modeling/calculation/varray[@name=\"dielectric_dft\"]  ``` Finally, the same information is also available in the vaspout.h5 binary file at the following dataset locations:  ```results/born_charges/born_chargesresults/dielectric/dielectric_dft  ``` ### Specifying the dielectric properties as input Once the Born effective charges and the ion\\-clamped static dielectric tensor have been retrieved, they need to be specified in the INCAR file of the supercell calculation via their respective tags (PHON\\_BORN\\_CHARGES and PHON\\_DIELECTRIC).Each tensor is specified row by row as a list of real numbers.Line breaks can optionally be inserted using the \"\\\\\" character to improve readability.For example, the values from the MgO calculation above could be specified as follows:  ```PHON_DIELECTRIC = \\  3.13036840     -0.00000000     -0.00000000 \\  0.00000000      3.13036840      0.00000000 \\ -0.00000000      0.00000000      3.13036840 PHON_BORN_CHARGES = \\    1.97025920     -0.00000000     -0.00000000 \\    0.00000000      1.97025920      0.00000000 \\   -0.00000000      0.00000000      1.97025920 \\ \\   -1.97025920      0.00000000      0.00000000 \\   -0.00000000     -1.97025920     -0.00000000 \\    0.00000000     -0.00000000     -1.97025920  ``` ### LO\\-TO splitting [](File_MgO-phonons-LR-comparison.html) Phonon dispersion relation of MgO (rock\\-salt) comparing calculations with and without long\\-range (LR) dipole corrections. Notice the strong splitting of frequencies at the \u0393\\-point. [](File_AlN-phonons-LR-comparison.html) Phonon dispersion relation of AlN (wurtzite) comparing calculations with and without long\\-range (LR) dipole corrections. Notice the discontinuities around the \u0393\\-point. As described on the theory page, the presence of long\\-range electrostatic interactions leads to the splitting of the longitudinal optical (LO) from the transverse optical (TO) phonon modes.Once the required dielectric properties are provided and `LPHON_POLAR = True` is set, VASP automatically considers the long\\-range dipole\\-dipole contributions to the interatomic force constants for phonon calculations. To illustrate the importance of long\\-range dipole corrections, we show two calculations of phonons in polar materials with strong LO\\-TO splitting.First is MgO, which forms an ionic rock\\-salt crystal structure (face\\-centered cubic).The corresponding figure shows a comparison against a calculation that does not include the long\\-range dipole corrections.Both calculations were performed in a 4x4x4 supercell with only the \u0393\\-point in the k\\-point mesh.In the case of MgO, the magnitude of the LO\\-TO splitting is considerably large, on the same order of magnitude as the LO phonon frequencies.Notice also the improved smoothness of the phonon bands when long\\-range corrections are included.Otherwise the interpolation procedure is prone to overshooting, resulting in unwanted oscillations. The second example is AlN in the hexagonal wurtzite structure.This structure is less isotropic than the rock\\-salt structure of MgO.In this case, the Born effective charges and dielectric constants associated with different spatial directions can be different.The phonon frequencies obtained by including the long\\-range dipole corrections are therefore more dependent on the direction of the phonon wave vector,   q {\\\\displaystyle \\\\mathbf {q} }  .This results in discontinuities around the \u0393\\-point when   q  \u2192  0 {\\\\displaystyle \\\\mathbf {q} \\\\to \\\\mathbf {0} } , as shown in the accompanying figure."}
{"file_name": "Liquid_Si.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example, the goal is to simulate the freezing of liquid Si. Input----- ### POSCAR  ``` Si15.12409564534287297131     0.5000000000000000    0.5000000000000000    0.0000000000000000     0.0000000000000000    0.5000000000000000    0.5000000000000000     0.5000000000000000    0.0000000000000000    0.5000000000000000 48Direct  0.8550657259653851  0.3204575801875221  0.6180363868822553  0.6045454476433229  0.0546379652195404  0.1629680405553871  0.4803889256776521  0.2999635319377835  0.0131251454718051  0.8413504226620471  0.7598095803296524  0.1917781560970181  0.9754163118144437  0.6134171268457649  0.7421364242876367  0.2668229391055025  0.0066502741664650  0.0031140604380929  0.8935777664000575  0.3324172908647429  0.9535738516718881  0.0527608886321274  0.5249316429131962  0.5293744880144071  0.4396089233132741  0.7564833235979471  0.5665855438788387  0.5907859878830199  0.5198033580597228  0.3581725847640679  0.2120832721474721  0.4042899613004446  0.7921535013319151  0.0225803885096466  0.8414911198321031  0.1209255489569852  0.0992500701525566  0.3917384466892963  0.3612433325214984  0.9673794138223195  0.5206425706394114  0.1719623236201897  0.2774602656926126  0.8480860088162007  0.2673309412777037  0.0196991774214161  0.8282178425383616  0.6986213756952502  0.3570927152895376  0.2951488295546784  0.2651851032568589  0.1663829731894614  0.9766237917413699  0.6051764245375237  0.4931841331696695  0.8689890620771937  0.2612357008392290  0.8006473407426477  0.1033419073227807  0.4706563716777467  0.0161340851939779  0.9953827418297991  0.8853439845676159  0.7827740166661069  0.1821830067208054  0.9399555168314748  0.0720651739141343  0.2539424963694544  0.6857919074323433  0.4443385370769313  0.0486404637002326  0.4180706114402839  0.7055263679666055  0.6802623819082319  0.7983614866719116  0.2237125282521105  0.4055474352416297  0.0077044950891134  0.2963682069847125  0.5771265542042112  0.2019757061665083  0.2782449529809642  0.0451513130915826  0.7644934848784113  0.9312079203181675  0.9090938018377080  0.3429249881187518  0.6341882597200124  0.2969253226419481  0.3227590981305088  0.3587691103780569  0.1061057273904179  0.0931868777500710  0.8710437838676732  0.6541301230631744  0.4261617089364881  0.6784300588817769  0.3263889355408940  0.5560491395978739  0.5597052314845080  0.0174390112509929  0.6129003207931863  0.0595962318875451  0.1019295953521402  0.3340999072062676  0.7689671766774326  0.1768870209149794  0.1604177484299765  0.9603661624482890  0.3311649224573259  0.1439224909303592  0.3792868784787023  0.2806150985211180  0.4921541531665999  0.8079860889823454  0.9194188799048340  0.9131036494263627  0.3002081239026374  0.7834053620019006  0.8650323716139056  0.4704528574512951  0.7221628305989689  0.9746107190983403  0.2886552568292480  0.5927625600330780  0.4239421203107919  0.4116743942942291  0.2198943758058664  0.7072597030225044  0.2104494234814825  0.6457654201409418  0.8275863924787099  0.6784628197745537  0.7205455185203838  0.1093053357228383  0.6344130299021448  0.1650970001101275  0.8037018707797643  0.3965793440603315  0.5364088146415013  0.6064549771969059  0.6686412136025504  0.7848666926903073  0.5681234351534038  ``` ### INCAR  ```SYSTEM =  Si# electronic degrees                                                            LREAL = A                      # real space projectionPREC  = Normal                 # chose Low only after testsEDIFF = 1E-5                   # do not use default (too large drift)ISMEAR = -1\u00a0; SIGMA = 0.130    # Fermi smearing: 1500 K 0.086 10-3ALGO = Very Fast               # recommended for MD (fall back ALGO = Fast)MAXMIX = 40                    # reuse mixer from one MD step to nextISYM = 0                       # no symmetry                                    NELMIN = 4                     # minimum 4 steps per time step, avoid breaking after 2 steps# MD (do little writing to save disc space)IBRION = 0                     # main molecular dynamics tagNSW = 400                      # number of MD stepsPOTIM = 3                      # time step of MDNWRITE = 0                     # controls outputNBLOCK = 10                    # after ten steps pair correlation function is written outLCHARG = .FALSE.               # no charge density written outLWAVE = .FALSE.                # no wave function coefficients written outTEBEG = $i                     # starting temperature for MDTEEND = $i                     # end temperature for MD# canonic (Nose) MD with XDATCAR updated every 10 stepsMDALGO = 2                     \u00e4 switch to select thermostatSMASS =  3                     # Nose massISIF = 2                       # this tag selects the ensemble in combination with the thermostat  ``` * Most of the tags here are very similar to the tags used in the previous example (Liquid Si \\- Standard MD).* A stepwise cooling will be applied in this example via a script where $i for TEBEG and TEEND will be replaced in each calculation (see below). ### KPOINTS  ```Si-freezing0 0 0Gamma 1 1 1 0 0 0  ``` * A single k\\-point is sufficient in this example. Calculation----------- We will execute the cooling stepwise so several calculations at different temperatures are required in this calculation. The INCAR is created with a script for each temperature and run separately. After each step the important files are saved to file.$i, where $i are the temperatures ranging from 2000 to 800 K in steps of 100 K. The script running the calculations looks like the following:   ```for i in 2000 1900 1800 1700 1600 1500 1400 1300 1200 1100 1000 900 800 docat >INCAR <<!SYSTEM =  Si# electronic degrees                                                            LREAL = A                      # real space projectionPREC  = Normal                 # chose Low only after testsEDIFF = 1E-5                   # do not use default (too large drift)ISMEAR = -1\u00a0; SIGMA = 0.130    # Fermi smearing: 1500 K 0.086 10-3ALGO = Very Fast               # recommended for MD (fall back ALGO = Fast)MAXMIX = 40                    # reuse mixer from one MD step to nextISYM = 0                       # no symmetry                                    NELMIN = 4                     # minimum 4 steps per time step, avoid breaking after 2 steps# MD (do little writing to save disc space)IBRION = 0                     # main molecular dynamics tagNSW = 400                      # number of MD stepsPOTIM = 3                      # time step of MDNWRITE = 0                     # controls outputNBLOCK = 10                    # after ten steps pair correlation function is written outLCHARG = .FALSE.               # no charge density written outLWAVE = .FALSE.                # no wave function coefficients written outTEBEG = $i                     # starting temperature for MDTEEND = $i                     # end temperature for MD# canonic (Nose) MD with XDATCAR updated every 10 stepsMDALGO = 2                     \u00e4 switch to select thermostatSMASS =  3                     # Nose massISIF = 2                       # this tag selects the ensemble in combination with the thermostat !mpirun -np 2 /path/to/your/vasp/executablecp XDATCAR XDATCAR.$icp OUTCAR OUTCAR.$icp PCDAT PCDAT.$icp CONTCAR CONTCAR.$icp POSCAR POSCAR.$icp OSZICAR OSZICAR.$icp CONTCAR POSCARdone  ``` * Before running the script one has to replace \"'/path/to/your/vasp/executable'\" by the path to his \"'vasp\\_gam'\" executable. The script is then simply starte by typing the following command in the command line:  ```bash ./script  ``` ### Diffusion The diffusion coefficient in 3 dimensions is given as  D \\=  \u27e8  x  2  \u27e9  6 t {\\\\displaystyle D\\={\\\\frac {\\\\langle x^{2}\\\\rangle }{6t}}} where t defines time and   \u27e8  x  2  \u27e9 {\\\\displaystyle \\\\langle x^{2}\\\\rangle } . The 6 in the denominator contains a factor of 3 accounting for the 3 spatial dimensions (usually the diffusion coefficient is written with a 2 in the denominator in literature corresponding to only one dimension). In our case, we calculate the above equation as follows  D \\=  \u27e8  \u2211  i  N  \\[  x  i  ( t ) \u2212  x  i  ( 0 )  ]  2  \u27e9  6 \u0394 t {\\\\displaystyle D\\={\\\\frac {\\\\langle \\\\sum \\_{i}^{N}\\[x\\_{i}(t)\\-x\\_{i}(0\\)]^{2}\\\\rangle }{6\\\\Delta t}}}  . Here the diffusion coefficient is calculated over an ensemble average to get better statistics. Our calculations were carried out for 1200 fs for each temperature. We will average in our case over the last 900 fs regarding the first 300 fs as equilibration of each temperature. The following python script (*diffusion\\_coefficient.py*) calculates the diffusion coefficient at a given temperature:  **Click to show/*diffusion\\_coefficient.py***  ```#!/usr/bin/python import sysimport reimport math #setting grid for histogram potim = 3                               #timestep from INCAR filereadfile = open(sys.argv[1],\"r\")        #input XDATCAR file in format XDATCAR.TEMPtemp=re.sub(\"XDATCAR.\",,sys.argv[1])  #extracts temperature from input file namez=0                                     #counternatoms=0                                #number of atoms in XDATCAR fileposion = []                             #atom positions in Cartesian coordinatesconfcount = 0                           #number of structures in XDATCAR filedirect=[]                               #number of time steps for each structure in XDATCAR filea=[]                                    #lattice parameter in 1st dimensionb=[]                                    #lattice parameter in 2nd dimensionc=[]                                    #lattice parameter in 3rd dimension#read in XDATCAR fileline=readfile.readline()while (line):  z=z+1  line.strip()  line=re.sub('^',' ',line)  y=line.split()  if (z==2):     scale=float(y[0])  if (z==3):     a.append(float(y[0]))     a.append(float(y[1]))     a.append(float(y[2]))     a_len=(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])**0.5  if (z==4):     b.append(float(y[0]))     b.append(float(y[1]))     b.append(float(y[2]))     b_len=(b[0]*b[0]+b[1]*b[1]+b[2]*b[2])**0.5  if (z==5):     c.append(float(y[0]))     c.append(float(y[1]))     c.append(float(y[2]))     c_len=(c[0]*c[0]+c[1]*c[1]+c[2]*c[2])**0.5  if (z==7):     natoms=int(y[0])  if (y[0]==\"Direct\"):     direct.append(int(y[2]))     posion.append([])     for i in range(0,natoms):        line=readfile.readline()        line.strip()        line=re.sub('^',' ',line)        f=line.split()        cartpos_x=a[0]*float(f[0])+a[1]*float(f[1])+a[2]*float(f[2])        cartpos_y=b[0]*float(f[0])+b[1]*float(f[1])+b[2]*float(f[2])        cartpos_z=c[0]*float(f[0])+c[1]*float(f[1])+c[2]*float(f[2])        #positions of ions for each structure are obtained here        posion[confcount].append([cartpos_x,cartpos_y,cartpos_z])     confcount=confcount+1  line=readfile.readline()readfile.close #calculate diffusion coefficient#skip first 10 configurations corresponding to 300 fsd=0.0for i in range(10,confcount):   for j in range(0,natoms):      x_diff=posion[i][j][0]-posion[0][j][0]      #if length is larger than 0.5 (in crystallographic coordinates) then we have to shift atom      #due to periodic image to obtain the shortest distance.      if (abs(x_diff)>(0.5*a_len)):         if (x_diff<0):            x_diff=x_diff+a_len         elif (x_diff>0):            x_diff=x_diff-a_len      y_diff=posion[i][j][1]-posion[0][j][1]      if (abs(y_diff)>(0.5*b_len)):         if (y_diff<0):            y_diff=y_diff+b_len         elif (y_diff>0):            y_diff=y_diff-b_len      z_diff=posion[i][j][2]-posion[0][j][2]      if (abs(z_diff)>(0.5*c_len)):         if (z_diff<0):            z_diff=z_diff+c_len         elif (x_diff>0):            z_diff=z_diff-c_len      d=d+x_diff**2.0+y_diff**2.0+z_diff**2.0  #print diffusion coefficient (in Ang^2/ps) vs temperature (in K)d=d/(confcount-1-10)/natoms/6.0time=(direct[confcount-1]-direct[10])*potim/10**3.0 #conversion to psprint temp,d/time  ```   Since the atoms can move such that the distance between old and new positions becomes larger than 0\\.5 (in crystallographic or fractional coordinates). Let us take for example the movement of atom 0 in the   x {\\\\displaystyle x}  direction from 0 to \\-0\\.25, which would be output in the CONTCAR as 0\\.75\\. The distance corresponding to that would be then calculated as 0\\.75 which is wrong since we have periodic images and the real shortest distance would be 0\\.25\\. Hence all distances larger than 0\\.5 have to be shifted by \\-1\\.0\\. This is taken care of in the script. We will use a short bash script (*dscript.sh*) to calculate the diffusion coefficient at different temperatures and plot them in a file (diff\\_coeff.jpg):   ```#!/bin/bash if test -f \"diff_coeff.dat\"; then   rm diff_coeff.dat fi touch diff_coeff.dat for i in 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000; do   diffusion_coefficient.py XDATCAR.$i >>  diff_coeff.datdone gnuplot -e \"set terminal jpeg; set key left; set xlabel 'temperature (K)'; set ylabel 'D (Ang^2/ps)'; set style data lines; plot 'diff_coeff.dat' \" > diff_coeff.jpg  ```   To execute it just type the following command:  ```bash ./dscript.sh  ``` The data for the diffusion coefficient at each temperature is output to *diff\\_coeff.dat* and plotted in *diff\\_coeff.jpg* which should look like the following: [](File_Diff_coeff.html) **Exercise**: Interpret Fig. 1 yourself! **Click to show/Solution****Solution**:For a given phase the diffusion coefficient depends directly on the temperature by  D \\= \u03bc  k  B  T {\\\\displaystyle D\\=\\\\mu k\\_{B}T} where   k  B {\\\\displaystyle k\\_{B}}  is the Boltzmann constant and   \u03bc {\\\\displaystyle \\\\mu }  is the mobility of the particle. Evidently, this relation is approximately fulfilled in Fig. 1\\. At approximately 1400 K we see a peak. This temperature should correspond to the phase transition temperature. Close to the phase transition point the scaling with respect to the reduced temperature   T  r e d {\\\\displaystyle T\\_{\\\\mathrm {red} }}  becomes   \u27e8  x  2  \u27e9 \u221d  T  r e d  1 \u2212 \u03b1  ,  T  r e d  \\=  T \u2212  T  c  T  c {\\\\displaystyle \\\\langle x^{2}\\\\rangle \\\\propto T\\_{\\\\mathrm {red} }^{1\\-\\\\alpha },\\\\qquad \\\\qquad \\\\qquad T\\_{\\\\mathrm {red} }\\={\\\\frac {T\\-T\\_{c}}{T\\_{c}}}} where   \u03b1 {\\\\displaystyle \\\\alpha }  is an anomalous dimension (it may be positive or negative) and   T  c {\\\\displaystyle T\\_{c}}  is the critical temperature. For infinite large systems and infinite time, this would lead to a singularity in the plot, but since we are dealing with a finite\\-sized system it results in a finite peak at the phase transition point. ### Pair correlation function The pair\\-correlation function provides information about the probability of finding two atoms at a given distance   r {\\\\displaystyle r}  .The pair\\-correlation function is save for each temperature under *PCDAT.T*. The following script will plot the pair correlation functions at different temperatures in one figure:  ```#!/bin/bash for i in 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000; do   awk <PCDAT.$i >pair.$i ' NR==8 {pcskal=$1} NR==9 {pcfein=$1} NR>=10036 {line=line+1; print (line-0.5)*pcfein/pcskal,$1} 'done gnuplot -e \"set terminal jpeg; set key left; set xlabel 'r (Ang)'; set ylabel 'PCF'; set style data lines; plot 'pair.2000','pair.1400','pair.800' \" > pair.jpg  ``` To execute it type the following command:  ```bash ./pair.sh  ``` The plot should look like the following: [](File_Pair_liquid_Si_freezing.html) **Exercise:** Interpret the figure yourself! **Click to show/Solution****Solution**:Crystalline structures usually have less diffuse pair correlation functions since the atoms are usually vibrating around high symmetry points. In liquids, the average positions are smeared out over a wider range of distances. With decreasing temperature, the pair correlation function in the plot gets more structured. This indicates that crystallization is happening.   Download--------  Si\\_Liquid\\_Freezing.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "Optical_properties_and_dielectric_response.md", "content": "Overview> dielectric properties of SiC> dielectric properties of Si > Ionic contributions to the frequency dependent dielectric function of NaCl > List of tutorialsThe tutorial is made of the following parts: 1. dielectric properties of SiC2. dielectric properties of Si3. ionic contributions to the frequency dependent dielectric function of NaCl"}
{"file_name": "NTEMPER.md", "content": "NTEMPER= \\[integer]   Default: **NTEMPER** \\= 200nDescription: NTEMPER specifies how often temperature swaps are attempted during parallel tempering. The flag must be used in combination with IMAGES and LTEMPER. NTEMPER\\=0, allows to perform several completely independent calculations.  --- NTEMPER must be a positive integer or zero. Swaps are on average attempted after NTEMPER molecular dynamics steps.Specifically, a random number   r {\\\\displaystyle r}  between \\0,1\\[ is drawn. The next temperature swaps are attempted after NTEMPER   \u00d7 2  r \u2212 1 {\\\\displaystyle \\\\times 2\\~r\\-1}  steps. Obviously, for NTEMPER\\=1 swaps are attempted at every MD step. In the present code version, temperature swaps are alternatively performed between images 1,2 and 3,4 and 5,6 etc., or upon the next swap between images 2,3 and 4,5 and 6,7 etc.This implies that many swaps are attempted at the same time. Furthermore, no temperature swapping is attempted for NTEMPER\\=0\\. This allows many independent calculations to be performed in directories 01, 02, 03, ... which can be useful when performing many similar calculations for small systems or using machine\\-learned force fields on many\\-core machines (strong scaling is sometimes not particularly good for small systems). A final note is in place. If INCAR files exist in the subdirectories, the tag NTEMPER must be set in all [INCAR files of the subdirectories 01, 02, 03, and NTEMPER must be identical. Failure to observe this rule can lead to unexpected behavior."}
{"file_name": "ML_OUTPUT_MODE.md", "content": "ML\\_OUTPUT\\_MODE= \\[integer]   Default: **ML\\_OUTPUT\\_MODE** \\= 1nDescription: This tag allows to disable certain file output which helps to increase performance in molecular\\-dynamics simulations with machine\\-learned force fields in prediction\\-only mode (`ML_MODE = run`). | **Mind:** This tag is only available as of VASP.6\\.4\\.0\\. || --- |  --- This tag is useful in combination with ML\\_OUTBLOCK to further reduce per\\-time\\-step calculations and file output. The following options exist for this tag: * `ML_OUTPUT_MODE = 1`: **Normal operation**, output is written as usual in ab\\-initio molecular\\-dynamics simulations.* `ML_OUTPUT_MODE = 0`: **Reduced file output mode**, in contrast to normal operation the following changes apply:\t+ Pair\\-correlation functions are not computed.\t+ No output to PCDAT file.\t+ No `pair_correlation` output section in vaspout.h5.\t+ No `structure`, `varray name=\"forces\"` and `varray name=\"stress\"` output sections in vasprun.xml\")."}
{"file_name": "NMAXFOCKAE.md", "content": "**NMAXFOCKAE**= 1\\|2n| Default: **NMAXFOCKAE** | \\= 1 |  || --- | --- | --- |   **LMAXFOCKAE**= \\[integer]n| Default: **LMAXFOCKAE** | \\= \\-1 | for Hartree\\-Fock and hybrid functionals || --- | --- | --- ||  | \\= 4 | for post DFT methods | Description: **NMAXFOCKAE** and **LMAXFOCKAE** determine whether the overlap densities in the Fock exchange and correlated wave function methods are accurately reconstructed on the plane wave grid (shape restoration). This flag generally only applies to the Fock\\-exchange part as well as many\\-bodypost DFT methods (GW, RPA, MP2, etc.).  --- Detailed Discussion------------------- In the PAW method, the difference between the charge density of the all\\-electron partial waves   \u03d5  \u03b2 {\\\\displaystyle \\\\phi \\_{\\\\beta }}  andthe pseudo partial waves   \u03d5 \\~  \u03b2 {\\\\displaystyle {\\\\tilde {\\\\phi }}\\_{\\\\beta }}  Q  \u03b1 \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\*}({\\\\mathbf {r} })\\\\phi \\_{\\\\beta }({\\\\mathbf {r} })\\-{\\\\tilde {\\\\phi }}\\_{\\\\alpha }^{\\*}({\\\\mathbf {r} }){\\\\tilde {\\\\phi }}\\_{\\\\beta }({\\\\mathbf {r} })} is usually treated on spherical grids centered at each atom(one\\-center terms inside the PAW spheres, see PAW method and more detailed description for LMAXFOCK). To describe long range electrostatic effects, the *moments* of the differences of the all\\-electron and pseudo charge density also need to be added on the plane wave grid (compensation density, see PAW method).These compensation charges exactly restore the moments of the all\\-electron density on the plane wavegrid. For the Fock exchange the maximum *L* quantum number up to which the augmentation is done is controlled by LMAXFOCK. For the RPA, GW, and most post DFT methods, the one\\-center terms are, however, presentlynot implemented. Depending on the material, this can cause sizable errorsin particular for 3d and (to a lesser extent) 2p, 4d and 5d elements.To correct for this error, an alternative treatment is implementedon the plane wave grid for the exchange and correlation contributions. This allows to restore the all\\-electron densities accurately already on the plane wave gridby specifying the flags **LMAXFOCKAE** and **NMAXFOCKAE**. This improvedtreatment\u2014 termed shape restoration \u2014is available for exchange as well as many body correlation contributions.For exchange, the exact one\\-center terms are also implemented. This means shape restoration is not required and should not change the results. To achieve the improved treatment on the plane wave grid,   Q  \u03b1 \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })}  is Fourier transformed to reciprocal space   Q  \u03b1 \u03b2  ( q ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }(q)}  and then expandedin a set of orthogonal functions localized at each atomic site. These augmentation chargesare then added to the pseudo charge densities on the plane wave grid. Shape restoration is only accurate up to a certain plane wave cutoff, typically about 150 eV for **NMAXFOCKAE** \\=1, and 400 eV for **NMAXFOCKAE** \\= 2\\. Experience shows that **NMAXFOCKAE** \\=1 is sufficient to predict very accurate energy differences and quite accurate quasiparticle energies.    For **LMAXFOCKAE**\\=\\-1 (the default for DFT and Hartree\\-Fock calculations), only the moments of the all\\-electron charge densities are restored on the plane wave grid. This is the default for Hartree\\-Fock calculations, and the setting is very precise since for Hartree\\-Fock the one\\-center terms are implemented in radial grids as for DFT.  If **LMAXFOCKAE** is set to values larger than \\-1 (and **NMAXFOCKAE**\\=1\\), not only the moments of the all\\-electron charge density are restored on the plane wave grid, but also the all\\-electron charge density is restored up to a typical plane wave energy of 150 eV (controlled by QMAXFOCKAE). This setting yields very accurate results for post DFT methods (MP2, RPA, GW, etc.) for most sp bonded materials. **LMAXFOCKAE** is used to specify the maximum spherical (*L*) quantum number up to which this more accurate treatment is used. The default is **LMAXFOCKAE**\\=4 for post DFT methods.If no accurate augmentation is desired by the user, simply set **LMAXFOCKAE**\\=\\-1 in the INCAR file. If **LMAXFOCKAE** is set to values larger than \\-1 and **NMAXFOCKAE**\\=2, the charge density is restored accurately on the plane wave grid up to a typical plane wave energy of 400 eV. As before, **LMAXFOCKAE** can be used to specify the maximum spherical (*L*) quantum number up to which this more accurate treatment is used. **NMAXFOCKAE**\\=2 yields very accurate results for post DFT methods (MP2, RPA, GW) even for difficult 3d elements. For RPA and MP2 total energy calculations, differences between **NMAXFOCKAE**\\=1 and **NMAXFOCKAE**\\=2 are usually tiny for total energy differences. Since the absolute correlation energies might change, it is, however, vital to use the same setting for**NMAXFOCKAE** and **LMAXFOCKAE**, if energy differences are calculated. For GW calculations, increasing **NMAXFOCKAE** from 1 to 2 might change QP energies by 100\\-200 meV for 3d and late 4d and 5d elements. Despite the improve precision, **NMAXFOCKAE**\\=2 should be used with great caution. Specifically, noise and egg\\-box effects are introduced as **NMAXFOCKAE** is increased. So usethis flag only after extensive tests. The setting for **LMAXFOCKAE** should be also considered carefully. Generally, it suffices to set **LMAXFOCKAE** to twice the maximum *l* quantum number found in the POTCAR file.For instance for sp elements, **LMAXFOCKAE**\\= 2 suffices. For d elements, **LMAXFOCKAE**\\= 4 suffices(a d electron can create charge densities with *L*\\-quantum numbers up to 4\\), whereas for f elements, usersshould test whether **LMAXFOCKAE**\\= 6 is required. More details on shape restoration are explained in Ref.[\\[1]](#cite_note-shishkin:prb:2006-1) and [\\[2]](#cite_note-unzog:prb:2022-2). Usefull Settings---------------- In summary, useful manual settings of **NMAXFOCKAE** and **LMAXFOCKAE** are: * **LMAXFOCKAE**\\=\\-1, to switch off the accurate augmentation altogether (reduces noise in correlation energies).* **LMAXFOCKAE**\\=4 (or larger) to force an accurate treatment for the charge augmentation on the plane wave grid (can be selected even in Hartree\\-Fock type calculations, but causes some additional noise).* **NMAXFOCKAE**\\=2, to select the very accurate augmentation on the plane wave grid. Please check whether the VASP default setting for **LMAXFOCKAE** suffices (OUTCAR file). Use this setting only with care, as it can result in very noisy data for coarse FFT grids."}
{"file_name": "IMIX.md", "content": "IMIX= 0 \\| 1 \\| 2 \\| 4   Default: **IMIX** \\= 4nDescription: IMIX specifies the type of density mixing.  --- IMIX\\=0: No mixing------------------  \u03c1  m i x  \\=  \u03c1  o u t {\\\\displaystyle \\\\rho \\_{\\\\rm {mix}}\\=\\\\rho \\_{\\\\rm {out}}\\\\,} IMIX\\=1: Kerker mixing---------------------- For Kerker mixing[\\[1]](#cite_note-kerker:prb:81-1), the mixed density is given by  \u03c1  m i x  ( G )  \\=  \u03c1  i n  ( G )  \\+ A  G  2  G  2  \\+  B  2  (  \u03c1  o u t  ( G )  \u2212  \u03c1  i n  ( G )  ) {\\\\displaystyle \\\\rho \\_{\\\\rm {mix}}\\\\left(G\\\\right)\\=\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right)\\+A{\\\\frac {G^{2}}{G^{2}\\+B^{2}}}{\\\\Bigl (}\\\\rho \\_{\\\\rm {out}}\\\\left(G\\\\right)\\-\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right){\\\\Bigr )}} with   A {\\\\displaystyle A} \\=AMIX and   B {\\\\displaystyle B} \\=BMIX. If BMIX is very small, e.g., BMIX\\=0\\.0001, a straight mixing is obtained. | **Mind:** BMIX\\=0 might cause floating\\-point exceptions on some platforms. || --- | IMIX\\=2: Variant of Tchebycheff mixing-------------------------------------- VASP uses a variant of the popular Tchebycheff\\-mixing scheme[\\[2]](#cite_note-akai:jpc:85-2). Here, the following second order equation of motion is used:  \u03c1 \u00a8  i n  ( G )  \\= 2 \u2217 A  G  2  G  2  \\+  B  2  (  \u03c1  o u t  ( G )  \u2212  \u03c1  i n  ( G )  )  \u2212 \u03bc  \u03c1 \u02d9  i n  ( G ) {\\\\displaystyle {\\\\ddot {\\\\rho }}\\_{\\\\rm {in}}\\\\left(G\\\\right)\\=2\\*A{\\\\frac {G^{2}}{G^{2}\\+B^{2}}}{\\\\Bigl (}\\\\rho \\_{\\\\rm {out}}\\\\left(G\\\\right)\\-\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right){\\\\Bigr )}\\-\\\\mu {\\\\dot {\\\\rho }}\\_{\\\\rm {in}}\\\\left(G\\\\right)} with   A {\\\\displaystyle A} \\=AMIX,   B {\\\\displaystyle B} \\=BMIX, and   \u03bc {\\\\displaystyle \\\\mu } \\=AMIN. A velocity Verlet algorithm is used to integrate this equation. The discretized equation reads:  \u03c1 \u02d9  N \\+ 1  /  2  \\=  (  (  1 \u2212 \u03bc  /  2  )  \u03c1 \u02d9  N \u2212 1  /  2  \\+ 2 \u2217  F  N  )  /  (  1 \\+ \u03bc  /  2  ) {\\\\displaystyle {\\\\dot {\\\\rho }}\\_{N\\+1/2}\\={\\\\Bigl (}\\\\left(1\\-\\\\mu /2\\\\right){\\\\dot {\\\\rho }}\\_{N\\-1/2}\\+2\\*F\\_{N}{\\\\Bigr )}/\\\\left(1\\+\\\\mu /2\\\\right)} where  F  ( G )  \\= A  G  2  G  2  \\+  B  2  (  \u03c1  o u t  ( G )  \u2212  \u03c1  i n  ( G )  ) {\\\\displaystyle F\\\\left(G\\\\right)\\=A{\\\\frac {G^{2}}{G^{2}\\+B^{2}}}{\\\\Bigl (}\\\\rho \\_{\\\\rm {out}}\\\\left(G\\\\right)\\-\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right){\\\\Bigr )}}  and  \u03c1  N \\+ 1  \\=  \u03c1  N \\+ 1  \\+  \u03c1 \u02d9  N \\+ 1  /  2 {\\\\displaystyle \\\\rho \\_{N\\+1}\\=\\\\rho \\_{N\\+1}\\+{\\\\dot {\\\\rho }}\\_{N\\+1/2}}  ,where the index *N* is the electronic iteration, and *F* is the force acting on the charge.For BMIX\u22480, no model for the dielectric matrix is used. For   \u03bc \\= 2 {\\\\displaystyle \\\\mu \\=2}  a simple straight mixing is obtained. Therefore,   \u03bc \\= 2 {\\\\displaystyle \\\\mu \\=2}  corresponds to maximal damping, while   \u03bc \\= 0 {\\\\displaystyle \\\\mu \\=0}  implies no damping. To determine the optimal parameters for   \u03bc {\\\\displaystyle \\\\mu }  and AMIX, first converge to the ground state with the Pulay mixer (IMIX\\=4\\). Then, search for the the eigenvalues of the charge\\-dielectric matrix in the OUTCAR file at the last occurrence of  ```eigenvalues of (default mixing * dielectric matrix)  ``` The optimal parameters are then given by: | AMIX |  | \\=   A M I X   (   a s  u s e d  i n  P u l a y  r u n   ) \u2217   s m a l l e s t  e i g e n v a l u e     {\\\\displaystyle \\={\\\\rm {AMIX}}({\\\\rm {as\\\\;used\\\\;in\\\\;Pulay\\\\;run}})\\*{\\\\rm {smallest\\\\;eigenvalue}}}  ={{\\rm {AMIX}}}({{\\rm {as\\;used\\;in\\;Pulay\\;run}}})*{{\\rm {smallest\\;eigenvalue}}} || --- | --- | --- || AMIN |  | \\= \u03bc \\= 2     s m a l l e s t  e i g e n v a l u e    /    l a r g e s t  e i g e n v a l u e       {\\\\displaystyle \\=\\\\mu \\=2{\\\\sqrt {{\\\\rm {smallest\\\\;eigenvalue}}/{\\\\rm {largest\\\\;eigenvalue}}}}}  =\\mu =2{\\sqrt  {{{\\rm {smallest\\;eigenvalue}}}/{{\\rm {largest\\;eigenvalue}}}}} | IMIX\\=4: Broyden's 2nd method and Pulay\\-mixing method (default)---------------------------------------------------------------- For WC\\=0, VASP uses Broyden's 2nd method,[\\[3]](#cite_note-bluegel:thesis:88-3)[\\[4]](#cite_note-johnson:prb:88-4) and, for WC\\>0, VASP uses Pulay\\-mixing method[\\[5]](#cite_note-pulay:cpl:80-5).The default is a Pulay mixer with an initial approximation for the charge\\-dielectric function according to Kerker[\\[1]](#cite_note-kerker:prb:81-1)  A \u00d7 max  (  G  2  G  2  \\+  B  2  ,  A  m i n  ) {\\\\displaystyle A\\\\times \\\\max \\\\left({\\\\frac {G^{2}}{G^{2}\\+B^{2}}},A\\_{\\\\rm {min}}\\\\right)} where   A {\\\\displaystyle A} \\=AMIX,   B {\\\\displaystyle B} \\=BMIX, and   A  m i n {\\\\displaystyle A\\_{\\\\rm {min}}} \\=AMIN.AMIN\\=0\\.4 usually yields good convergence. AMIX strongly depends on the system, for instance, it should be small, e.g., AMIX\\= 0\\.02, for metals.In the Broyden scheme, the functional form of the initial mixing matrix is determined by AMIX and BMIX or the INIMIX tag. The metric used in the Broyden scheme is specified through MIXPRE."}
{"file_name": "ML_FF.md", "content": "This file contains the machine\\-learned force field, necessary for prediction\\-only mode (`ML_MODE = run`). Its format is identical to the ML\\_FFN file written out during training, for further details please have a look at the documentation there.  ---"}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_BM.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example the nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl is simulated using blue\\-moon sampling. Input----- ### POSCAR In the blue\\-moon sampling method several POSCAR files are used for different values of the collective variable. **Click to show/POSCARs**  ```BM - POSCAR1 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.5871322375157908 0.55301018027835513 0.679714066771391010.62447012741721697 0.62816585397463176 0.664385741508173530.61071464532701736 0.47956072579783432 0.643246191817216540.51527571900478364 0.5538828554036046 0.738660221520994750.44165342598948132 0.58799096227020642 0.555548781335975070.7183326999654791 0.52000018063420794 0.8193619682794645 BM - POSCAR2 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.5799711358435562 0.55476678237160515 0.672945699447619840.62447012741721697 0.62816585397463176 0.664385741508173530.61071464532701736 0.47956072579783432 0.643246191817216540.51527571900478364 0.5538828554036046 0.738660221520994750.44165342598948132 0.58799096227020642 0.555548781335975070.72173007151589497 0.51914707229594526 0.82294649849296753 BM - POSCAR3 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.5728100341713217 0.55652338446485516 0.666177332123848780.62447012741721697 0.62816585397463176 0.664385741508173530.61071464532701736 0.47956072579783432 0.643246191817216540.51527571900478364 0.5538828554036046 0.738660221520994750.44165342598948132 0.58799096227020642 0.555548781335975070.72512744306631094 0.51829396395768246 0.82653102870647066 BM - POSCAR4 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.59507047500290222 0.57244270557313315 0.667462068513916430.54049944202575662 0.60714565557876798 0.729740891563106510.66455173208019991 0.53195474180779956 0.703931499500629390.55747027889637368 0.53034945501598485 0.598483404375080630.65618532162250798 0.69708568471255838 0.576386133917597080.5000409863126819 0.4022456289304116 0.80922741395305486 BM - POSCAR5 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.59887853190304419 0.57974515358235179 0.66178422509210810.54049944202575662 0.60714565557876798 0.729740891563106510.66455173208019991 0.53195474180779956 0.703931499500629390.55747027889637368 0.53034945501598485 0.598483404375080630.65618532162250798 0.69708568471255838 0.576386133917597080.4980707241384853 0.3987068989373313 0.8121665955404771 BM - POSCAR6 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.60268658880318615 0.58704760159157043 0.656106381670299670.54049944202575662 0.60714565557876798 0.729740891563106510.66455173208019991 0.53195474180779956 0.703931499500629390.55747027889637368 0.53034945501598485 0.598483404375080630.65618532162250798 0.69708568471255838 0.576386133917597080.4961004619642887 0.395168168944251 0.81510577712789944 BM - POSCAR7 1.012.0 0.0 0.00.0 12.0 0.00.0 0.0 12.0 C    H    Cl 1 3 2direct0.60649464570332823 0.59435004960078897 0.650428538248491340.54049944202575662 0.60714565557876798 0.729740891563106510.66455173208019991 0.53195474180779956 0.703931499500629390.55747027889637368 0.53034945501598485 0.598483404375080630.65618532162250798 0.69708568471255838 0.576386133917597080.4941301997900921 0.39162943895117058 0.81804495871532179  ``` ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting ##################################IBRION=0                                 # MD simulationNSW=1000                                 # number of stepsPOTIM=1                                  # integration stepTEBEG=600                                # simulation temperatureMDALGO=11                                # Andersen thermostatANDERSEN_PROB=0.10                       # collision probabilityLBLUEOUT=.TRUE.                          # write down output needed to                                          # compute free-energy gradient##############################################################################  ```   * The setting LBLUEOUT\\=*.TRUE.* tells VASP to write out the information needed for the computation of free energies. Calculation----------- In the blue\\-moon sampling, the free energy difference is computed by integration of the free energy gradients computed for several points differing in the value of the collective variable distributed between known inital and final states. The gradients for each point are computed within a constrained molecular dynamics simulation (note the value of *STATUS*\\=0 for the collective variable defined in the ICONST file).  ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD (note that the free energy is independent of the masses of atoms). The simulation for each of the points along the reaction coordinate is performed in a separate directory called *1, 2, ..., 7*. These are created automatically by the run script. For practical reasons, we split our (presumably long) blue\\-moon calculation into shorter runs of length of 1000 fs (NSW\\=1000; POTIM\\=1\\). This is done automatically in the script *run* which looks as follows:  ```#!/bin/bash drct=$(pwd) runvasp=\"mpirun -np x executable_path\" # ensure that this sequence of MD runs is reproducible - not needed# in a real-world applicationrseed=\"RANDOM_SEED =         311137787                0                0\" #c loop over \"points\" (i.e. structures #c with difference value of CV)for j in 1 2 3 4 5 6 7 do  cd $drct  mkdir ${j}  cp POSCAR.$j ${j}/POSCAR  cp POTCAR KPOINTS ICONST $j  cd $j   #c here we perform sequence of MD runs  #c for each point   step=1  while [ $step -le 7 ] do    if\u00a0! test -f report.${step}    then       # ensure that this sequence of MD runs is reproducible      cp ${drct}/INCAR .      echo $rseed >> INCAR       cp POSCAR POSCAR.$step      $runvasp       # ensure that this sequence of MD runs is reproducible      rseed=$(grep RANDOM_SEED REPORT |tail -1)       #c backup some important files      cp CONTCAR POSCAR      cp REPORT report.$step      grep F OSZICAR > osz.$step      cp vasprun.xml vasprun.xml.$step fi    let step=step+1  donedone  ``` ### Free\\-energy profile The free energy gradient is obtained as a ratio of two averages (see Constrained molecular dynamics). This is done by the script *fgradBM.sh*, which writes the free energy gradient vs. the collective variable to the file *grad.dat*: **Click to show/fgradBM.sh**  ```#!/bin/bash #c equilibration periodequil=2000 if [ -f \"grad.dat\" ]; then   rm grad.dat fi touch grad.dat for i in  1 2 3 4 5 6 7 do  rm rep.* j=1  while [ $j -le 100 ] do    if test -f $i/report.$j    then      grep b_m $i/report.$j >> rep.$i.1 fi    let j=j+1  done   #c obtain ingredients for FE-gradfient calculation  #c (cf. eq. 12 in JPCM 20, 064211 (2008))  if test -f $i/report.1  then    #c value of the constrained coordinate    x1=$(grep cc $i/report.1|head -1|awk '{print $3}')     nlines=$(wc -l rep.$i.1|awk '{print $1}')    let prod=nlines-equil     #c calculation of the FE-gradfient     #c (cf. eq. 12 in JPCM 20, 064211 (2008))    zet=$(grep b_m rep.$i.1|tail -$prod |awk 'BEGIN {a=0.} {a+=$3} END {print a/NR}')     g1=$(grep b_m rep.$i.1|tail -$prod |awk 'BEGIN {a=0.} {a+=$5} END {print a/NR/\"'${zet}'\"}')     echo $x1 $g1 >> grad.dat fi done  ``` To execute that script type:  ```bash ./fgradBM.sh  ``` For our purposes, a simple trapezoidal rule can be used for the integration of gradients. For accurate calculations, more sohpisticated integration schemes should be considered.The free energy vs. collective variable is obtained by forward integration using the script *integrateForward.py*: **Click to show/integrateForward.py**  ```#!/usr/bin/python import stringimport sys f=sys.argv[1] f=open(f,'r') r=[]g=[] for line in f.readlines():  line=string.split(line)  num=len(line)  if len(line)==2:    r.append(float(line[0]))    g.append(float(line[1])) f.close() tg=0.0print r[0],tgfor i in range(1,len(r)):  gg=0.5*(r[i]-r[i-1])*(g[i]+g[i-1])  tg+=gg  print r[i],tg  ``` To execute that script type and write to the file *free\\_energy.dat*:  ```python integrateForward.py grad.dat > free_energy.dat  ``` Finally to plot that file type:  ```gnuplot -e \"set terminal jpeg; set xlabel 'Collective variable (Ang)'; set ylabel 'Free energy (eV)'; set style data lines; plot 'free_energy.dat'\" > free_energy.jpg  ``` The free energy profile should look like the following: [](File_Free_energy_CH3Cl_BM.html) Note that much longer simulations should be performed (typically a few tens or hundreds of ps) in order to achieve well converged averages needed in accurate calculations. Download--------  CH3Cl\\_BM.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "HFSCREEN.md", "content": "HFSCREEN= \\[real]   Default: **HFSCREEN** \\= 0 (none)nDescription: HFSCREEN (in \u00c5\\-1) specifies the range\\-separation parameter in range\\-separated hybrid functionals.  --- In case LHFCALC\\=.TRUE., in combination with PBE potentials (or GGA\\=PE), attributing a value to HFSCREEN will switch from the PBE0 functional to, e.g., the closely related HSE03 (HFSCREEN\\=0\\.3\\) or HSE06 (HFSCREEN\\=0\\.2\\) functionals. It also needs to be set for dielectric\\-dependent hybrid functionals (DDH) and doubly screened hybrid (DSH) functionals, see LMODELHF."}
{"file_name": "SPRING.md", "content": "SPRING= \\[integer]   Default: **SPRING** \\= \\-5nDescription: SPRING gives the *spring constant* between the images as used in the elastic band method.  --- SPRING has to be set together with IMAGES if the elastic band method is used to calculate energy barriers between two ionic configurations of a system. For SPRING \\= 0, each image is only allowedto move into the direction perpendicular to the currenthyper\\-tangent, which is calculated as the normal vectorbetween two neighboring images.This algorithm keeps the distance between the imagesconstant to *first order*. It is therefore possible to startwith a dense image spacing around the saddle point to obtaina finer resolution around this point. The nudged elastic band method[\\[1]](#cite_note-jons95-1)[\\[2]](#cite_note-jons98-2)is applied when SPRING is set to a negative value e.g.  ```SPRING= -5  ``` This is also the recommended setting.Compared to the previous case, additional tangential springsare introduced to keep the images equidistantduring the relaxation (remember the constraint is onlyconserved to first order otherwise). Do not use too large values,because this can slow down convergence. The default valueusually works quite reliably. One problem of the nudged elastic band method isthat the constraint (i.e movements onlyin the hyper\\-plane perpendicular to the current tangent) isnon linear. Therefore, the CG algorithm usually failsto converge, and we recommended to usethe RMM\\-DIIS algorithm (IBRION\\=1\\) or the quick\\-min algorithm (IBRION\\=3\\).Additionally,the non\\-linear constraint (equidistant images) tends to be violatedsignificantly during the first few steps (it is only enforced to first order).If this problem isencountered, a very low dimensionality parameter (IBRION\\=1, NFREE\\=2\\)should be applied in the first we steps, or a steepestdescent minimization without line optimization (IBRION\\=3, SMASS\\=2\\).should be used, to pre\\-converge the images."}
{"file_name": "POSCAR-2.md", "content": "The POSCAR.prim file contains the structural information of the primitive cell required for the k\\-point projection scheme\"). The format of this file is similar to the POSCAR file. Related Tags and Sections------------------------- PRJCAR, LKPROJ, POSCAR  ---"}
{"file_name": "ICORELEVEL.md", "content": "ICORELEVEL= 0 \\| 1 \\| 2   Default: **ICORELEVEL** \\= 0nDescription: ICORELEVEL controls whether the core energies are explicitly calculated or not and how they are calculated.  --- The binding energy of core electrons   E  C L {\\\\displaystyle E\\_{CL}}  is given as   E  C L  \\= E (  n  c  \u2212 1 ) \u2212 E (  n  c  ) {\\\\displaystyle E\\_{CL}\\=E(n\\_{c}\\-1\\)\\-E(n\\_{c})}  .Here,   E (  n  c  ) {\\\\displaystyle E(n\\_{c})}  is the energy from a standard density\\-functional calculation in which the number of core electrons corresponds to the unexcited ground state.   E (  n  c  \u2212 1 ) {\\\\displaystyle E(n\\_{c}\\-1\\)}  is the energy of a calculation where one electron is removed from the core of one particular atom and added to the valence or conduction band. The core\\-level binding energies can be calculated either in the initial\\-state approximation or the final\\-state approximation. In the initial\\-state approximation, a core electron is removed from the core states and added to the valence/conduction bands but no change of the potential (by e.g. relaxation of the valence electrons) is allowed. The core\\-level binding energy can then be directly calculated by the Kohn\\-Sham eigenvalues[\\[1]](#cite_note-koehler:prb:04-1)[\\[2]](#cite_note-lizzit:prb:2001-2) of the core level   \u03f5  c {\\\\displaystyle \\\\epsilon \\_{c}}  and the Fermi energy   \u03f5  F {\\\\displaystyle \\\\epsilon \\_{F}}  E  C L  i  \\=  \u03f5  c  \u2212  \u03f5  F {\\\\displaystyle E\\_{CL}^{\\\\mathrm {i} }\\=\\\\epsilon \\_{c}\\-\\\\epsilon \\_{F}}  .In the final\\-state approximation, the electrons (valence electrons in the frozen\\-core approximation) are allowed to relax, so that the local hole is screened. In other words, a fully self\\-consistent electronic calculation is carried out with a core hole and an additional electron in the valence/conduction bands. The following options are available in VASP: * ICORELEVEL\\=0: The core energies are not calculated (default).* ICORELEVEL\\=1: The initial\\-state approximation is used. This just involves recalculating the KS eigenvalues of the core states after a self\\-consistent calculation of the valence charge density. ICORELEVEL\\=1 is a little bit more involved than the calculations usingLVTOT\\=*.TRUE.*, since the Kohn\\-Sham energy of each core state is recalculated. This adds very little extra cost to the calculations. Usually,the shifts correspond very closely to the change of the electrostatic potential at the lattice sites (calculated using LVTOT\\=*.TRUE.*). * ICORELEVEL\\=2: The final\\-state approximation is used. Electrons are removed from the core and placed into the valence (effectively increasing NELECT). The VASP implementation excites all selected core electrons for all atoms of one species. The species, as well as the selected electrons, are specified using  ```CLNT = species CLN =  main quantum number of excited core electron CLL =  l quantum number of excited core electronCLZ =  electron count  ``` The electron count CLZ specifies how many electrons are excitedfrom the core. Usually, 1 or 0\\.5 (Slater's transition state) are sensible choices.CLNT selects for which species in the POTCAR file the electronsare excited. Usually one would like to excite the electrons foronly one atom, this requires changing the POSCAR and POTCAR file,such that the selected atom corresponds to one species in the POTCAR file.i.e. if the calculation invokes a supercell with 64 atoms of one type,the selected atom needs to be singled out, and the POSCAR file willthen contain 63 \"standard\" atoms as well as one special species,at which the excited core hole will be placed(the POTCAR file will hold two identical PAW datasets in this case). Several caveats apply to this mode.First, the excited electron is always spherical and multipole splittingsare not available. Second, the other core electrons are not allowedto relax, which might cause a slight error in the calculatedenergies.Third, absolute energies are not meaningful, since VASP usuallyreports valence energies only. Only relativeshifts of the core electron binding energies are relevant(in some cases, the VASP total energies might become even positive). Super\\-cell core\\-hole method----------------------------- ICORELEVEL\\=2 and itss related tags are necessary for the calculation of X\\-ray absorption spectra (XAS) using the super\\-cell core\\-hole method. A description of how to set up super\\-cell core\\-hole calculations is given here. A tutorial for the calculation of XAS is given here."}
{"file_name": "FBIAS_D.md", "content": "FBIAS\\_D= \\[real (array)]nDescription: Sets the slope of the bias potential.  --- FBIAS\\_D defines the parameter   D  \u03bc {\\\\displaystyle D\\_{\\\\mu }} , which controls the slope of the central part of the Fermi\\-like step\\-shaped bias potential of the following form:  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  4  ) \\=  \u2211  \u03bc \\= 1  M  4  A  \u03bc  1 \\+  exp  \\[  \u2212  D  \u03bc  (  \u03be ( q )  \u03be  0 \u03bc  \u2212 1 )  ]  , {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{4}})\\=\\\\sum \\_{\\\\mu \\=1}^{M\\_{4}}{\\\\frac {A\\_{\\\\mu }}{1\\+{\\\\text{exp}}\\\\left\\[\\-D\\_{\\\\mu }({\\\\frac {\\\\xi (q)}{\\\\xi \\_{0\\\\mu }}}\\-1\\)\\\\right]}},\\\\;} where the sum runs over all (  M  4 {\\\\displaystyle M\\_{4}} ) coordinates the potential acts upon, which are defined in the ICONST\\-file by setting the `status` to 4\\.The parameters   D  \u03bc {\\\\displaystyle D\\_{\\\\mu }}  are dimensionless.The number of items defined via FBIAS\\_D must equal to   M  4 {\\\\displaystyle M\\_{4}} , otherwise the calculation terminates with an error message."}
{"file_name": "PARCHG.0001.md", "content": "PARCHG is an output file created when partial charge densities are calculated by setting LPARD \\= .TRUE..The file has the same structure as the CHG file, containing the structure followed by the charge density on the fine FFT grid, but missing the augmentation occupancies that are written to CHGCAR. The units are also equivalent to CHG and CHGCAR. The partial density written to PARCHG is part of the valence electron density that was converged selfconsistently in a previous run. The bands and **k** points that contribute to the partial charges are selected by the IBAND, NBMOD, EINT and KPUSE tags, allowing for fine control of the contributions to the partial charge density. PARCHG.nb.nk files------------------ If LSEPB and/or LSEPK are set to .TRUE. variants of the PARCHG file are written, separating the contributing bands and **k** points respectively. The units and format of the files stay the same. * If `LSEPB = .TRUE.`, **PARCHG.nb.ALLK** files are written, where nb is an index over all bands contributing to the partial charge density. * If `LSEPK = .TRUE.`, **PARCHG.ALLB.nk** files are created, where nk runs over all **k** points in KPUSE or all **k** points if KPUSE is not set. * For `LSEPB = .TRUE.` and `LSEPK = .TRUE.`, all combinations are written to **PARCHG.nb.nk** files. Format------ The PARCHG consists of the following blocks: * Structure in POSCAR format* FFT\\-grid dimensions NGXF, NGYF, NGZF* Partial charge density times FFT\\-grid volume is written with multiple real numbers per line until all NGXF\\*NGYF\\*NGZF values of the block are written. The real\\-space mesh (NX,NY,NZ) is uniform and is spanned by the lattice vectors   a \u2192  ,  b \u2192  ,  c \u2192 {\\\\displaystyle {\\\\vec {a}},{\\\\vec {b}},{\\\\vec {c}}}  defined in the structure block. The coordinates of the mesh points can be restored via  (  N  x  ,  N  y  ,  N  z  )  \\= ^  N  x  \u2212 1  N  G X F  a  \\+  N  y  \u2212 1  N  G Y F  b  \\+  N  z  \u2212 1  N  G Z F  c {\\\\displaystyle (N\\_{x},N\\_{y},N\\_{z}){\\\\hat {\\=}}{\\\\frac {N\\_{x}\\-1}{N\\_{GXF}}}\\\\mathbf {a} \\+{\\\\frac {N\\_{y}\\-1}{N\\_{GYF}}}\\\\mathbf {b} \\+{\\\\frac {N\\_{z}\\-1}{N\\_{GZF}}}\\\\mathbf {c} }  .The dimensions can be increased by increasing the cutoff energy (ENCUT) or explicitly by setting the fine FFT\\-grid dimensions (NGXF, NGYF, NGZF). To arrange the data on the real\\-space grid in the unit cell, mind that the data runs fastest over NX and slowest over NZ. To be more explicit, the density is written using the following command in Fortran  `WRITE(IU,FORM) (((C(NX,NY,NZ),NX=1,NGXF),NY=1,NGYF),NZ=1,NGZF)` . | **Important:** Remember that the values must be divided by the FFT\\-grid volume and the cell volume to obtain the partial charge density     n ( r )   {\\\\displaystyle n(r)}   in units     1  /     \u00c5    3     {\\\\displaystyle 1/\\\\mathrm {\\\\AA} ^{3}}   ^{3}}. || --- | Hence,  n ( r ) \\= d a t a ( r )  /  (  V  g r i d  \u2217  V  c e l l  ) , {\\\\displaystyle n(r)\\=data(r)/(V\\_{grid}\\*V\\_{cell}),}  V  g r i d  \\=  N  G X F  \u2217  N  G Y F  \u2217  N  G Z F  , {\\\\displaystyle V\\_{grid}\\=N\\_{GXF}\\*N\\_{GYF}\\*N\\_{GZF},}  V  c e l l  \\=  \\|  a  \u22c5 (  b  \u00d7  c  )  \\| {\\\\displaystyle V\\_{cell}\\=\\|\\\\mathbf {a} \\\\cdot (\\\\mathbf {b} \\\\times \\\\mathbf {c} )\\|}  ,where   n ( r ) {\\\\displaystyle n(r)}  is the partial charge density in units 1/\u00c5  3 {\\\\displaystyle ^{3}}  . ### Spin\\-polarized calculation In spin\\-polarized calculations, two data sets are stored in the PARCHG file.The first set contains the total partial density (spin up \\+ spin down), and the second is the magnetization density (spin up \\- spin down). Each block is separated by a blank line and a line containing the fine FFT grid dimensions NGXF NGYF NGZF. * Structure* FFT\\-grid dimensions* Partial charge density times FFT\\-grid volume (spin up \\+ spin down)* FFT\\-grid dimensions* Partial magnetization density (spin up \\- spin down)"}
{"file_name": "ML_MCONF.md", "content": "ML\\_MCONF= \\[integer]   Default: **ML\\_MCONF** \\= see belownDescription: This tag sets the maximum number of structures stored in memory that are used for training in the machine learning force field method.  --- The defaults for ML\\_MCONF are different for each different ML\\_MODE setting. Here are the defaults for each mode: * ML\\_MODE\\='TRAIN':\t+ No ML\\_AB present (learning from scratch): min(1500, max(1,NSW))\t+ ML\\_AB present (continuation of learning): MCONF\\_AB \\+ min(1500, max(1,NSW))* ML\\_MODE\\='SELECT': MCONF\\_AB \\+ 1* ML\\_MODE\\='REFIT': MCONF\\_AB \\+ 1* ML\\_MODE\\='REFITBAYESIAN': MCONF\\_AB \\+ 1* ML\\_MODE\\='RUN': 1 using the following definition: * MCONF\\_AB \\= Number of training structures read from the ML\\_AB file.   The default value for ML\\_MODE\\=*TRAIN* is usually a safe value for solids and easy\\-to\\-learn liquids but should be set to a higher value as soon as it is reached. When this happens the code stops and gives an error instructing to increase ML\\_MCONF.  This flag sets also the maximum number of rows for the design matrix, which is usually a huge matrix. The design matrix is to be allocated statically at the beginning of the program since several parts of the code use MPI shared memory and dynamic reallocation of these arrays can cause severe problems on some systems. So most of the main arrays are statically allocated in the code.  An estimate of the design matrix and all other large arrays are printed out to the ML\\_LOGFILE before allocation. The design matrix is fully distributed in a block cyclic fashion for scaLAPACK and should almost perfectly linearly scale with the number of used processors."}
{"file_name": "ML_MODE.md", "content": "ML\\_MODE= train \\| select \\| refit \\| refitbayesian \\| run \\| none   Default: **ML\\_MODE** \\= nonenDescription: String\\-based tag selecting operation mode for machine learning force fields. | **Mind:** This tag is only available as of VASP.6\\.4\\.0\\. || --- |  --- This tag acts as a \"super tag\" and selects the operation mode by selecting the defaults for all other tags. Every tag that is affected by this \"super tag\" can be overwritten by the user by simply specifying the value for that tag.The following options are available for this tag: * `ML_MODE = train`**: On\\-the\\-fly training**Force predictions from the machine learning force field are used to drive the molecular dynamics (MD) simulation. However, if the error estimation performed in each time step indicates a high force error an ab initio calculation is performed instead and the collected energy, forces, and stress are used to improve the machine learning force field. There are two possible cases depending on, whether an ML\\_AB is present in the calculation folder or not: \t1. No ML\\_AB file found:\tOn\\-the\\-fly training is starting from scratch. Note that at the beginning of the MD run, when there is no force field available or it is still poorly trained, *ab initio* calculations will happen frequently. For VASP versions prior to 6\\.4\\.0 this corresponds to `ML_ISTART = 0`.\t2. ML\\_AB file present:\tRestart on\\-the\\-fly training from existing training database. Before the MD run starts the ML\\_AB file (a copy of the ML\\_ABN from a previous training run!) is read and the *ab initio* data (energies, forces, and stresses) and local reference configurations it contains are used to generate an initial force field. Subsequently, the on\\-the\\-fly training MD is started. For VASP versions prior to 6\\.4\\.0 this corresponds to `ML_ISTART = 1`.   \t| **Tip:** None of the structures in the ML\\_AB file need to match he POSCAR file for the current MD training run in terms of the simulation box, elements, or number of atoms. However, if the same elements appear the initial force field is used for predictions in the current MD run. The training data contained in the ML\\_AB file is included in the final machine learning force field, i.e., the ML\\_FFN file will define a force field applicable to both the structures on the ML\\_AB file as well as to the current MD simulation. This means that by restarting repeatedly with `ML_MODE = train`, and copying the ML\\_ABN file from the previous run to ML\\_AB(!), it is possible to iteratively extend the applicability of the a machine learning force field, e.g., by exploring different temperature ranges or element compositions. |\t| --- | * `ML_MODE = select`**: Re\\-selection of local reference configurations**A new machine learning force field is generated from the *ab initio* data provided in the ML\\_AB file. The structures are read and processed one by one as if harvested in an MD simulation. In other words, the same steps are performed as in on\\-the\\-fly training but the source of the data are not actual *ab initio* calculations in an MD run but the series of structures available in the ML\\_AB file. The list of local reference configurations on the ML\\_AB file will be ignored. Instead a new collection of local reference configurations is determined and written to the resulting ML\\_ABN file. | **Important:** This operation mode allows to generate a VASP machine learning force field from pre\\-computed or external *ab initio* data sets. In contrast to `ML_MODE = refit` also the local reference configurations are selected from the entire data set. For example, an ML\\_AB file created manually by extracting *ab initio* data (energies, forces, stresses) from OUTCAR files (or even other external sources) can be processed in this mode without prior knowledge of local reference configurations (only a dummy section must be added to the ML\\_AB file, see its documentation). Similar to on\\-the\\-fly training this mode generates ML\\_FFN files and ML\\_ABN **with** local reference configurations. || --- | A new iteration through the training structures can lead to a frequent update of the force field. This is quite time\\-consuming. Hence, for this mode the default value of ML\\_CDOUB is automatically increased from 2 to 4 which will result in a much less frequent update of the force field. This leads to much more efficient calculations while practically not changing the results. | **Tip:** If calculations for `ML_MODE = select` are too time\\-consuming, it is useful to increase ML\\_MCONF\\_NEW to values around 10\\-16\\. Together with `ML_CDOUB = 4`, this often accelerates the calculations by a factor of 2\\-4\\. || --- | The ML\\_AB file may contain values for CTIFOR for each training structure. These are the thresholds used to sample that structure from the previous training. The thresholds found on the ML\\_AB will be re\\-used unless a threshold is explicitly specified in the INCAR file, by means of the ML\\_CTIFOR tag. In the latter case the thresholds from the ML\\_AB file are ignored. In case the ML\\_AB contains **no** CTIFOR information and **no** threshold is specified in the INCAR file, the default value for ML\\_CTIFOR is used. This mode automatically sets `NSW = 1` and `ML_CDOUB = 4`.For VASP versions prior to 6\\.4\\.0 this corresponds to `ML_ISTART = 3`. | **Warning:** `ML_MODE = select` ignores the structure in the POSCAR and hence no error, force and stress predictions are made at the end of this calculation (instead zeros are written to stdout, OSZICAR and OUTCAR). || --- | * `ML_MODE = refit`**: Refit a force field for \"fast\" evaluation**Similar to `ML_MODE = select`, refitting is done based on an existing ML\\_AB file, but the number of local reference configurations for each species is taken from the ML\\_AB file. Sparsification is performed on the local reference configurations, so the resulting ML\\_ABN file will contain the same number or fewer local reference configurations than the ML\\_AB file. By default the resulting force field is geared towards \"fast\" evaluation to speed up production runs (`ML_LFAST = .TRUE.`). This comes at the cost of not being able to evaluate Bayesian error estimates. | **Warning:** We strongly advise to use `ML_MODE = refit` if no Bayesian error estimates are required during production runs. || --- | This mode automatically sets `ML_LFAST = .TRUE.`, `NSW = 1`, `ML_IALGO_LINREG = 4`, `ML_SIGW0 = 1E-7`, `ML_SIGV0 = 1` and `ML_EPS_LOW = 1E-11`. For VASP versions prior to 6\\.4\\.0 this corresponds to `ML_ISTART = 4`. * `ML_MODE = refitbayesian`**: Refit a force field with Bayesian regression (deprecated)**Same as `ML_MODE = refit`, but Bayesian regression is employed. This results in lower accuracy and much slower force fields than using `ML_MODE = refit` and should be used with caution. On the other hand, this mode allows the generation of ML\\_FFN files that can calculate Bayesian error estimates in addition to predictions. This modes sets `NSW = 1`, `ML_IALGO_LINREG = 1` and `ML_LFAST = .FALSE.`. For VASP versions prior to 6\\.4\\.0 this corresponds to `ML_ISTART = 4`. * `ML_MODE = run`**: Perform only force field predictions**A previously trained machine learning force field is read from the ML\\_FF file, and the MD simulation is driven with predictions from the force field only. **No** *ab initio* calculations are performed and **no** learning is executed. This setting is typically used when the machine learning force field is considered mature and ready for production runs. Optionally, if the force field was refitted using `ML_MODE = refitbayesian`, the Bayesian error estimate of the energies, forces, and stress can be computed and logged in the ML\\_LOGFILE. The output frequency of the Bayesian errors can be set via the ML\\_IERR tag, the default is 0\\. For VASP versions prior to 6\\.4\\.0 this corresponds to `ML_ISTART = 2`. * `ML_MODE = none`**: The tag is ignored**   | **Warning:** If any option other than the above is chosen or there is a spelling error (be careful to write everything in upper case or lower case letters) the code will exit with an error. || --- | | **Tip:** Some choices of ML\\_MODE will automatically set other machine\\-learned force field tags. However, it is still possible to overwrite the defaults by specifying the corresponding tags in the INCAR file. || --- |"}
{"file_name": "Constructing_Wannier_orbitals.md", "content": "Wannier orbitals are an important tool to study chemical bonding.They also form the basis of various interpolation techniques.As a quick summary, a Wannier orbital   \\|  w  m  R  \u27e9 {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle }  is a function obtained from a linear combination of the Bloch (Kohn\\-Sham) orbitals   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  :  \\|  w  m  R  \u27e9 \\=  \u2211  n  k  e  \u2212 i  k  \u22c5  R  U  m n  k  \\|  \u03c8  n  k  \u27e9 , {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle \\=\\\\sum \\_{n\\\\mathbf {k} }e^{\\-i\\\\mathbf {k} \\\\cdot \\\\mathbf {R} }U\\_{mn\\\\mathbf {k} }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle ,} where the unitary matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is chosen such that the Wannier orbitals are localized in real space.The process of finding a suitable Wannier transformation matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is known as Wannierization.This page guides you through the steps required to perform Wannierization using the approaches available in VASP. One\\-shot Wannierization using a singular\\-value decomposition-------------------------------------------------------------- The two main Wannierization methods are projections onto local functions using the LOCPROJ tag and the Selected\\-Columns\\-of\\-the\\-Density\\-Matrix (SCDM) method using the LSCDM tag.The LOCPROJ approach offers fine\\-grained control over the Wannierization process but is also more involved for electronically complex systems.In this case, projection targets have to be chosen and placed manually using the LOCPROJ tag.In contrast, the SCDM approach offers very little control and instead generates Wannier orbitals automatically from a small set of input parameters[\\[1]](#cite_note-damle:mms:2018-1).This is convenient for systems where the electronic character of the band structure is complicated or unknown. Both approaches produce as output a matrix   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  .In the case of the LOCPROJ tag, this is the projection matrix between the Bloch orbitals and the local functions,   \u03b2  m {\\\\displaystyle \\\\beta \\_{m}}  :  A  m n ,  k  \u2261 \u27e8  \u03b2  m  \\|  S \\~  \\|  \u03a8  n  k  \u27e9 . {\\\\displaystyle A\\_{mn,{\\\\bf {k}}}\\\\equiv \\\\langle \\\\beta \\_{m}\\|{\\\\tilde {S}}\\|\\\\Psi \\_{n{\\\\bf {k}}}\\\\rangle .} The operator   S \\~ {\\\\displaystyle {\\\\tilde {S}}}  is the overlap operator in the projector\\-augmented\\-wave method.In the case of the SCDM method, the matrix   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is the result of an iterative process that extracts local functions from the information contained in the electronic one\\-particle density matrix. In general,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is not going to be a unitary matrix.It could, in principle, be used to transform the Bloch orbitals into a set of non\\-orthogonal Wannier orbitals.However, for many applications, it is desirable to have orthonormal Wannier orbitals, such as for Wannier interpolation.Therefore,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  needs first to be orthonormalized. In VASP, we employ a one\\-shot orthonormalization procedure that uses the singular\\-value decomposition (SVD) of   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  :  A  m n  k  \\= \\[ D \u03a3  V  \u2020  ]  m n  k  , {\\\\displaystyle A\\_{mn\\\\mathbf {k} }\\=\\[D\\\\Sigma V^{\\\\dagger }]\\_{mn\\\\mathbf {k} },} which is then used to construct the unitary matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  :  U  m n  k  \\= \\[ D  V  \u2020  ]  m n  k  . {\\\\displaystyle U\\_{mn\\\\mathbf {k} }\\=\\[DV^{\\\\dagger }]\\_{mn\\\\mathbf {k} }.} In contrast to iterative methods (e.g., Gram\\-Schmidt orthogonalization), the SVD orthogonalization operates simultaneously on all local functions.This ensures that the symmetry properties of the local functions encoded in   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  are preserved during the orthonormalization procedure. LOCPROJ method-------------- To generate Wannier orbitals using local projections, it is sufficient to specify the LOCPROJ tag with suitable projection targets.VASP will then apply the one\\-shot orthonormalization internally to obtain the Wannier transformation matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  .The number of Wannier orbitals is the same as the total number of local functions. | **Tip:** You can write the Wannier transformation matrix to disk by setting `LWRITE_WANPROJ = true`. || --- | This information can then be used to perform Wannier interpolation of the electronic band structure (for example, using the KPOINTS\\_WAN file).It can also be passed to Wannier90 (more on that later). To find a good representation of the electronic band structure in terms of Wannier orbitals, it is important to choose suitable projection targets.In general, this can be a difficult task as some bands hybridize and disperse, changing electronic character as a function of the Bloch vector   k {\\\\displaystyle \\\\mathbf {k} }  .It is thus expedient to understand the relevant electronic bands before attempting a Wannierization using LOCPROJ. To gain insight into the electronic character of certain bands, you can use the LORBIT tag.This decomposes the bands into local contributions either in terms of spherical harmonics (`LORBIT < 10`) or in terms of PAW projector functions (`LORBIT \u2265 10`).The relevant information is written to the PROCAR file and can be used to determine suitable projection targets for LOCPROJ. ### Example \\- diamond Let us examine a small example to highlight the procedure of determining projection targets.Here, we aim to Wannierize the four highest\\-lying valence bands of diamond.This is a group of bands that is energetically isolated (they are surrounded by band gaps).Since there is no mixing with any other states, the Wannierization process of these four bands is relatively simple.With the standard C POTCAR distributed with VASP, we can conveniently set `NBANDS = 4` to only consider those states. First, let us run a calculation with `LORBIT = 1` and `RWIGS = 1.1`.This decomposes the bands into   l {\\\\displaystyle l}  and  m {\\\\displaystyle m}  quantum numbers in terms of spherical harmonics.We get information on each k\\-point in the PROCAR file.Here is the start of the file, which contains information about the \u0393\\-point:  ```PROCAR lm decomposed# of k-points:    8         # of bands:    4         # of ions:    2  k-point     1\u00a0:    0.00000000 0.00000000 0.00000000     weight = 0.01562500 band     1 # energy  -11.73066124 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.508  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.508    2  0.508  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.508tot    1.016  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  1.016 band     2 # energy    9.78016466 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.000  0.173  0.173  0.173  0.032  0.032  0.000  0.032  0.000  0.613    2  0.000  0.173  0.173  0.173  0.032  0.032  0.000  0.032  0.000  0.613tot    0.000  0.346  0.345  0.346  0.063  0.063  0.000  0.063  0.000  1.226 band     3 # energy    9.78126079 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.000  0.305  0.011  0.202  0.002  0.037  0.000  0.056  0.000  0.613    2  0.000  0.305  0.011  0.202  0.002  0.037  0.000  0.056  0.000  0.613tot    0.000  0.610  0.023  0.404  0.004  0.074  0.000  0.112  0.000  1.226 band     4 # energy    9.78126093 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.000  0.041  0.334  0.143  0.061  0.026  0.000  0.007  0.000  0.613    2  0.000  0.041  0.334  0.143  0.061  0.026  0.000  0.007  0.000  0.613tot    0.000  0.081  0.668  0.287  0.122  0.052  0.000  0.015  0.000  1.226  ``` From this, we learn that the four valence bands are predominantly s\\-like and p\\-like (make sure that this is true also at the other k\\-points).This was to be expected since carbon forms hybridized sp\\-3 bonds in diamond. With this information, we can now specify projection targets.We seek to map the four bands in the simulation to four Wannier orbitals, so we choose to setup four sp\\-3 hybrids on one atom.The minimal INCAR file used in this example looks like this:  ``` ISMEAR = 0                  \u00a0! use Gaussian smearing for insulator SIGMA = 0.01                \u00a0! use small smearing NBANDS = 4                  \u00a0! use only 4 bands LOCPROJ = 1\u00a0: sp3\u00a0: Hy 1 4. \u00a0! ... to map onto 4 sp-3 functions  ``` The last part of the LOCPROJ setting (Hy 1 4\\.) specifies that we want Hyrdogen\\-like atomic orbitals (spherical harmonics) with main quantum number   n \\= 1 {\\\\displaystyle n\\=1}  and a diffusivity of   \u03b1 \\= 4 {\\\\displaystyle \\\\alpha \\=4}  .The diffusivity influences the spread of the local function.A higher value generally results in a higher degree of localization.This is beneficial for Wannier interpolation and yields Wannier orbitals of higher quality in that regard. | **Tip:** You may also choose to use the PAW information to specify local orbitals with LOCPROJ. In this case, you should use `LORBIT = 11` to extract the relevant information from the basis. || --- | For this example calculation, we use a relatively course \u0393\\-centered regular mesh of 4x4x4 k\\-points. To gauge the quality of the generated Wannier orbitals, we can plot the electronic band structure using Wannier interpolation and compare it against the ab\\-initio data.As of VASP 6\\.3\\.0, this can conveniently be done all in one run by providing the KPOINTS\\_OPT and the KPOINTS\\_WAN file.These files are automatically read from disk and provide a way to calculate the electronic eigenvalues at specific k\\-points. * KPOINTS\\_OPT: Charge density is kept fixed and the Hamiltonian is diagonalized at each provided k\\-point.* KPOINTS\\_WAN: Hamiltonian is constructed, interpolated and diagonalized using the Wannier orbitals. Importantly, these k\\-points can be different from those specified in the KPOINTS file. Here, we specify a k\\-point path through the first Brillouin zone using the line mode for both files.The results can then be read from the vaspout.h5 at the following locations:  ```results/electron_eigenvalues_kpoints_opt/results/electron_eigenvalues_kpoints_wan/  ``` The results can be seen in the following band\\-structure plot: [](File_Locproj-c-4.html) Electronic band structure of diamond. Comparison between ab\\-initio data and Wannier interpolation using LOCPROJ method. The agreement between both methods is already very good.The remaining differences can be systematically decreased by increasing the k\\-point density in the initial KPOINTS file or by choosing a more suitable local basis. SCDM method----------- In contrast to the LOCPROJ method, the SCDM method does not rely on the specification of a local basis.To activate the SCDM method, set `LSCDM = true`.This will use the information contained in the electronic one\\-particle density matrix to construct localized functions from the original Bloch (Kohn\\-Sham) orbitals.These localized functions are then orthonormalized using the one\\-shot SVD approach to obtain orthonormal Wannier orbitals. The number of Wannier orbitals obtained is controlled via the NUM\\_WANN tag. | **Mind:** You must ensure that `NUM_WANN \u2264 NBANDS` in order to have enough information to construct the Wannier orbitals. || --- | ### Example \\- diamond Let us repeat the example calculation shown earlier to obtain Wannier orbitals in diamond using the SCDM method.Once again, we choose `NBANDS = 4` and we set `NUM_WANN = 4` as well.The minimal INCAR file for this example looks like this:  ``` ISMEAR = 0     \u00a0! use Gaussian smearing for insulator SIGMA = 0.01   \u00a0! use small smearing NBANDS = 4     \u00a0! use only 4 bands NUM_WANN = 4   \u00a0! ... to map onto 4 Wannier orbitals LSCDM = true   \u00a0! ... using the SCDM method  ``` For this example calculation, we use the same course \u0393\\-centered regular mesh of 4x4x4 k\\-points as before.We also specify the same k\\-point path for KPOINTS\\_OPT and KPOINTS\\_WAN to perform band\\-structure calculations.The results can be seen in the following band\\-structure plot: [](File_Scdm-bands-c-5.html) Electronic band structure of diamond. Comparison between ab\\-initio data and Wannier interpolation using SCDM method. Also in this case, the agreement between both methods is very good. ### Comparison with LOCPROJ The diamond example shows that a Wannierization of good quality can be achieved with both the LOCPROJ as well as the SCDM approach.However, the bands considered in that example are fully isolated from the rest of the band structure and their electronic character is well known. In general, finding suitable projection targets can be a difficult and arduous task.This is where the more automatic SCDM method has a clear advantage over the LOCPROJ approach.The SCDM method extracts the electronic character of the bands directly from the density matrix.On the other hand, the LOCPROJ approach requires the user to have a good understanding of the band structure of the material. However, specifying local functions via LOCPROJ also has advantages over the SCDM method.First, there is very little control over the orbitals that the SCDM method generates because the number of calculational parameters is so small.This can be undesirable if the location, shape or symmetry of the Wannier orbital is important.With LOCPROJ, you can choose the kind of orbital much more freely, for example, to study chemical bonding.Second, SCDM orbitals do not generally obey the same symmetries as the crystal or as molecular bonds.This is because the SCDM procedure employs an iterative scheme for choosing \"optimal\" localized functions one after the other (this is based on a rank\\-revealing QR decomposition).As such, orbitals that should be symmetrically equivalent such as the hybridized sp\\-3 orbitals in the case of diamond end up being slightly different from each other.Consequently, the Wannier interpolation of the electronic band structure using SCDM orbitals will not be able to perfectly reproduce degeneracies since the underlying symmetries are broken.Usually, this difference is comparatively small but it is something to keep in mind. Disentanglement--------------- When `NBANDS > NUM_WANN` or when the bands are not energetically isolated, Wannierization becomes more involved.The difficulty lies in determining which electronic states to select when transforming the initial Bloch orbitals to the Wannier orbitals.This process is known as disentanglement. When using the LOCPROJ or SCDM methods, disentanglement can be achieved by applying a smooth cutoff or weight function to the electronic states during the Wannierization process.Loosely speaking, electronic states with a larger weight will be fitted more accurately.In VASP, we currently support three types of cutoff functions that can be selected via CUTOFF\\_TYPE, `erfc`, `gaussian` and `fermi`.The tags CUTOFF\\_MU and CUTOFF\\_SIGMA control the position,   \u03bc {\\\\displaystyle \\\\mu } , and width,   \u03c3 {\\\\displaystyle \\\\sigma } , of these cutoff functions, respectively. The complementary error function and Fermi function are particularly useful in scenarios where the band structure does not have a gap above the relevant energies, such as in metals.The Gaussian function is useful for extracting a Wannier representation from a group of bands that is not surrounded by any gaps, below or above. ### Example \\- SCDM Wannierization of LiF [](File_Scdm-bands-lif-disentangle.html) Electronic band structure of LiF. Comparison between ab\\-initio data and Wannier interpolation using SCDM method. LiF is an insulator with a wide band gap.The Wannierization of the valence states in isolation is as simple as shown earlier.However, the lowest\\-lying conduction states are relatively dispersive and hybridize with higher\\-lying states.This renders the Wannierization of these conduction bands difficult without disentanglement. To obtain the lowest lying conduction bands of LiF, we choose the `erfc` cutoff function with an appropriate   \u03bc {\\\\displaystyle \\\\mu }  and  \u03c3 {\\\\displaystyle \\\\sigma }  .By default, VASP chooses reasonable default values for these parameters.However, in order to get a good Wannier fit of the band structure, both   \u03bc {\\\\displaystyle \\\\mu }  and  \u03c3 {\\\\displaystyle \\\\sigma }  should be chosen carefully by the user through trial and error.As a rule of thumb, the smooth edge of the complementary error function should be positioned such that states below it are to be fitted more accurately.For this example, we have chosen   \u03bc \\= 10  eV {\\\\displaystyle \\\\mu \\=10{\\\\text{eV}}}  and  \u03c3 \\=0\\.1  eV {\\\\displaystyle \\\\sigma \\=0\\.1{\\\\text{eV}}} , which places the edge of the cutoff function amidst the lowest\\-lying conduction bands with a relatively sharp edge. The minimal INCAR file for this example is provided below:  ``` ISMEAR = 0          \u00a0! use Gaussian smearing for insulator SIGMA = 0.01        \u00a0! use small smearing NBANDS = 16         \u00a0! use 16 bands, including unoccupied states NUM_WANN = 9        \u00a0! ... to map to 9 Wannier orbitals LSCDM = true        \u00a0! ... using the SCDM method CUTOFF_TYPE = erfc  \u00a0! choose erfc cutoff function CUTOFF_MU = 10      \u00a0! ... and place it at 10 eV CUTOFF_SIGMA = 0.1  \u00a0! ... with a width of 0.1 eV  ``` The initial k\\-point mesh is chosen to be 8x8x8 \u0393\\-centered. The Wannier\\-interpolated band structure compares favorably against the ab\\-initio data below   \u03bc {\\\\displaystyle \\\\mu }  and starts to diverge from it more and more above   \u03bc {\\\\displaystyle \\\\mu }  .This is a general trend with these kinds of calculations and is an unavoidable side effect of the disentanglement procedure.The alternative would be a much higher and sharper cutoff that requires more Wannier states to be constructed.This is however not generally advisable as it can negatively affect the quality of the Wannierization. | **Tip:** A hard cutoff can be achieved by specifying a tiny CUTOFF\\_SIGMA. || --- | | **Mind:** The quality of the Wannierization can depend strongly on the choice of CUTOFF\\_MU and CUTOFF\\_SIGMA. It will often take some trial and error to find reasonable parameters. || --- | Wannier90--------- Wannier orbitals obtained inside VASP via the LOCPROJ or SCDM methods can be passed to Wannier90 for further processing.Wannier90 employs an iterative algorithm that generates so\\-called maximally\\-localized Wannier functions (MLWF).MLWFs are usually superior in terms of quality for band structure calculations.However, even though they are generated from an iterative procedure, Wannier90 still relies on good first guesses for the localized functions.This is where the SCDM method can provide a suitable set of initial functions for the MLWF procedure.In the case of the LOCPROJ tag, the projection matrix   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is passed directly to Wannier90 where the Wannier transformation is constructed.VASP handles the communication of the projection targets and matrix dimensions automatically. To generate MLWFs from VASP orbitals, you can add the following lines to your INCAR file:  ``` LWANNIER90 = true   # or lwannier90_run = true WANNIER90_WIN = \"   dis_num_iter = 100   num_iter = 100 \"  ``` where dis\\_num\\_iter specifies the number of iteration during Wannier90's disentanglement procedure and num\\_iter the number of iteration during the MLWF procedure. | **Important:** Make sure that VASP is compiled with the VASP2WANNIER90 precompiler option. || --- | | **Important:** When using the SCDM method together with Wannier90, it is recommended to set `dis_num_iter = 0` via WANNIER90\\_WIN or in the Wannier90 input file. || --- | LWANNIER90 activates the interface between VASP and Wannier90 and writes a wannier90\\.win input file that can then be read by Wannier90\\.In addition to the basic input parameters, VASP also writes the overlap matrices   M  m n {\\\\displaystyle M\\_{mn}}  and  A  m n {\\\\displaystyle A\\_{mn}}  to the corresponding files, wannier90\\.mmn and wannier90\\.amn.  M  m n {\\\\displaystyle M\\_{mn}}  contains the overlaps between all pairs of Bloch orbitals.Meanwhile,   A  m n {\\\\displaystyle A\\_{mn}}  contains the overlaps between the Bloch orbitals and the projection targets (in this case, the SCDM orbitals obtained from VASP). | **Tip:** The wannier90\\.mmn and wannier90\\.amn files can be explicitly written via `LWRITE_MMN_AMN = true`. This is switched on by default when `LWANNIER90 = true`. It is unnecessary to write these files when `LWANNIER90_RUN = true` as they are directly passed to Wannier90\\. || --- | Run VASP with the above INCAR tags to generate Wannier orbitals via SCDM or LOCPROJ and to generate the required Wannier90 input files.Afterwards, run Wannier90 to generate MLWFs (all of this can be done in one run when setting `LWANNIER90_RUN = true`).At this point, you can use the functionality available in Wannier90 to plot the band structure, the orbitals, etc. When plotting orbitals using Wannier90, in addition to `LWRITE_MMN_AMN = true`, it may also be necessary to set `LWRITE_UNK = true`.This writes the cell\\-periodic part of the Bloch orbitals to disk."}
{"file_name": "Si_HSE_bandstructure.md", "content": "Description: Bandstructure for Si within DFT\\+HF  Bandstructure in VASP can be obtained following three different procedures. The standard procedure (procedure 1\\), applicable at PBE level, is also described in Fcc Si bandstructure example. Within Hybrid functional theory it is possible to plot bandstructure using procedure 2 or 3\\. Procedure 1: Standard procedure (suitable for DFT calculations)--------------------------------------------------------------- Only possible within DFT. Described in Fcc Si bandstructure example: ### Standard self\\-consistent (SC) run * POSCAR  ```system Si5.4300.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.000.25 0.25 0.25  ``` * INCAR (see INCAR.dft)  ```ISMEAR =  0SIGMA  =  0.01NBANDS = 8  ``` * KPOINTS (see KPOINTS.6\\)  ```6x6x6 0 G 6 6 6 0 0 0  ``` ### Non\\-SC calculation (ICHARG\\=11\\) Use preconverged CHGCAR file and a suitable KPOINTS file * INCAR  ```ISMEAR =  0SIGMA  =  0.01NBANDS = 8 ICHARG = 11 #read charge from CHGCAR and keep fixedLORBIT = 11  ``` * KPOINTS (see KPOINTS\\_PBE\\_bands)  ```k-points for bandstructure L-G-X-U K-G 10linereciprocal  0.50000  0.50000  0.50000    1  0.00000  0.00000  0.00000    1   0.00000  0.00000  0.00000    1  0.00000  0.50000  0.50000    1   0.00000  0.50000  0.50000    1  0.25000  0.62500  0.62500    1   0.37500  0.7500   0.37500    1  0.00000  0.00000  0.00000    1  ``` ### Plot using p4v P4VASP: p4v Procedure 2: 0\\-weight (Fake) SC procedure (works DFT \\& hybrid functionals)---------------------------------------------------------------------------- This procedure can be applied to compute bandstructure at hybrid functionals and DFT level(see the HSE\\_bandstructure.sh script). ### Standard DFT run Just as before * INCAR (see INCAR.dft)  ```ISMEAR =  0SIGMA  =  0.01NBANDS = 8  ``` * KPOINTS (see KPOINST.6\\)  ```6x6x6 0 G 6 6 6 0 0 0  ``` ### Hybrid calculation using a suitably modified KPOINTS file * INCAR (see INCAR.hse)  ```ISMEAR =  0SIGMA  =  0.01 LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX = 0.25ALGO = D\u00a0; TIME = 0.4\u00a0; LDIAG = .TRUE.  EDIFF = 1.E-6 NBANDS = 8  ``` * KPOINTS (see KPOINTS\\_HSE\\_bands.6 and README.txt)  ```Automatically generated mesh 26Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.16666666666667    0.00000000000000    0.00000000000000             8    0.33333333333333    0.00000000000000    0.00000000000000             8    0.50000000000000    0.00000000000000    0.00000000000000             4    0.16666666666667    0.16666666666667    0.00000000000000             6    0.33333333333333    0.16666666666667    0.00000000000000            24    0.50000000000000    0.16666666666667    0.00000000000000            24   -0.33333333333333    0.16666666666667    0.00000000000000            24   -0.16666666666667    0.16666666666667    0.00000000000000            12    0.33333333333333    0.33333333333333    0.00000000000000             6    0.50000000000000    0.33333333333333    0.00000000000000            24   -0.33333333333333    0.33333333333333    0.00000000000000            12    0.50000000000000    0.50000000000000    0.00000000000000             3    0.50000000000000    0.33333333333333    0.16666666666667            24   -0.33333333333333    0.33333333333333    0.16666666666667            24   -0.33333333333333    0.50000000000000    0.16666666666667            120.00000000 0.00000000 0.00000000 0.0000.00000000 0.05555556 0.05555556 0.0000.00000000 0.11111111 0.11111111 0.0000.00000000 0.16666667 0.16666667 0.0000.00000000 0.22222222 0.22222222 0.0000.00000000 0.27777778 0.27777778 0.0000.00000000 0.33333333 0.33333333 0.0000.00000000 0.38888889 0.38888889 0.0000.00000000 0.44444444 0.44444444 0.0000.00000000 0.50000000 0.50000000 0.000  ``` Please note that step two requires a WAVECAR obtained from a standard DFT run (not an HSE calculation),otherwise the resulting conduction bands often have a zig\\-zag structure.    ### Plot using p4v P4VASP: p4v **Mind**: Zoom in on the right\\-side part of the bandstructure plot. Procedure 3: VASP2WANNIER90 (works for DFT, hybrid functionals, and GW)----------------------------------------------------------------------- Wannier function interpolation using the VASP2WANNIER90 interface: this procedure is applicable to DFT, hybrid functionals, and GW bandstructure calculations.Here we apply it for a hybrid functional.For GW see the Bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\") and bandstructure of SrVO3 in GW examples. To see a summary of the workflow below, have a look at the HSE\\_bandstructure\\_with\\_wannier90\\.sh. ### Standard DFT run Just as before * INCAR (see INCAR.dft)  ```ISMEAR =  0SIGMA  =  0.01NBANDS = 8  ``` * KPOINTS (see KPOINST.6\\)  ```6x6x6 0 G 6 6 6 0 0 0  ``` ### Increase the number of states to 24 This step is optional. * INCAR (see INCAR.diag)  ```ISMEAR =  0SIGMA  =  0.01 ALGO = ExactNELM = 1 NBANDS = 24  ``` ### HSE \\+ LWANNIER90 run Run the hybrid functional calculation and call wannier90 (see LWANNIER90\\_RUN). . * INCAR (see INCAR.hse\\_with\\_wannier90\\)  ```ISMEAR =  0SIGMA  =  0.01 LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX = 0.25ALGO = D\u00a0; TIME = 0.4\u00a0; LDIAG = .TRUE. NKRED = 2 EDIFF = 1.E-6 NBANDS = 24 LWANNIER90_RUN = .TRUE.  ``` You will have to provide some instructions for wannier90 as well: * wannier90\\.win (see wannier90\\.win\\_start)  ```num_wann=18num_bands=24 Begin ProjectionsSi:s\u00a0; p\u00a0; dEnd Projections #dis_froz_max=9dis_num_iter=100 #guiding_centres=true bands_plot      =  truebegin kpoint_pathL 0.50000  0.50000 0.5000 G 0.00000  0.00000 0.0000G 0.00000  0.00000 0.0000 X 0.50000  0.00000 0.5000X 0.50000  0.00000 0.5000 K 0.37500 -0.37500 0.0000K 0.37500 -0.37500 0.0000 G 0.00000  0.00000 0.0000end kpoint_pathbands_num_points 40bands_plot_format gnuplot xmgrace  ```   **Mind**: If the wannier90\\.win file does not exist VASP will create a default wannier90\\.win compatible withthe POSCAR and INCAR files, which needs to be suitably modified by including the proper instruction required to generate the maximally localized wannier functions (refer to the WANNIER90 manual). ### Plot bandstructure (Wannier interpolation) using XMGRACE or GNUPLOT If all went well, wannier90 will have generated the following bandstructure files which can be visualized using xmgrace or gnuplot: * wannier90\\_band.agr  ```xmgrace ./wannier90_band.agr  ``` * wannier90\\_band.dat * wannier90\\_band.gnu  ```gnuplot -persist ./wannier90_band.gnu  ``` **N.B.:** Most modern versions of gnuplot will respond with an error message unless you remove the first line of wannier90\\_band.gnu (some deprecated syntax issue).Download--------  Si\\_HSE\\_band.tgz  ---"}
{"file_name": "EFERMI.md", "content": "EFERMI= MIDGAP \\| LEGACY \\| \\[real]   Default: **EFERMI** \\= LEGACYnDescription: Defines how the Fermi energy is calculated in VASP. It is recommended to use EFERMI \\= MIDGAP.  --- Fermi energy in semiconductors------------------------------ For semiconducting materials, the Fermi energy is not uniquely defined in the bandgap of the material.Any value that produces the correct number of electrons (NELECT) is allowed.By default, VASP places the Fermi energy at a somewhat arbitrary value within the bandgap.The precise value depends on values chosen for the smearing (ISMEAR and SIGMA) and the density of states (EMIN, EMAX, and NEDOS).Typically, this places the Fermi energy towards the bottom of the bandgap. You can change this behavior by setting EFERMI \\= MIDGAP (recommended).VASP will then put the Fermi energy in the middle of the gap because this is the most consistent with increasing the smearing SIGMA.This algorithm to determine the Fermi energy was introduced in VASP.6\\.4\\.The value of the Fermi energy should not affect the outcome of the calculation. Fermi energy in metals---------------------- MIDGAP and LEGACY should yield the same value when your system does not have a gap.The Fermi energy is placed precisely at the value so that underneath are enough states to accommodate NELECT electrons. The evaluation of the Fermi energy involves an integral over the 1\\. BZ.Therefore, the Fermi energy in metals needs to be converged with respect to the KPOINTS mesh and smearing (ISMEAR, SIGMA). | **Tip:** If you are interested in the properties at the Fermi energy (e.g., for transport calculations), you should compute the Fermi energy with a very dense **k**\\-point mesh. To save computational time, you can fix the charge density (ICHARG \\= 11\\) once the Kohn\\-Sham states have converged with respect to the **k**\\-point density and increase the number of **k**\\-point further to converge the value of the Fermi energy. || --- | Fixed Fermi energy------------------ Occasionally, you want to compute systems with fixed Fermi energy for a given charge density.To this end, set EFERMI to a numeric value and ICHARG \\= 11\\.A possible use case is to set EFERMI to the converged Fermi energy in a band\\-structure calculation.You may use this to introduce electron doping/depletion to a system. | **Warning:** The Fermi energy cannot be computed based on **k** points along a path. || --- | This is, in particular, important for band\\-structure calculation of metallic systems because for gaped systems the Fermi energy often still ends up at a valid value within the gap despite the inaccurate computation. Hence, to plot a band structure the band energies should be taken from the calculation with fixed charge density based on **k**\\-points along a path, but the Fermi energy should be taken from the calculation based on a **k** mesh (e.g., the scf calculation by which the charge density was obtained or a more precisely converged Fermi energy based on the same fixed charge density). EFERMI can fix the Fermi energy to the proper value during the band\\-structure calculation."}
{"file_name": "NSTORB.md", "content": "NSTORB= \\[integer]n| Default: **NSTORB** | \\= \\-1 |  || --- | --- | --- | Description: NSTORB specifies the number of stochastic orbitals per cycle in the stochastic MP2 algorithm.  --- NSTORB defines the number of stochastic orbitals per cycle, i.e., the number of stochastic orbitals that define one stochastic sample. If the sample is not large enough, the calculations are repeated until the accuracy, defined by ESTOP, is reached. As a rule of thumb, we recommend setting NSTORB  \\= NBANDS  . {\\\\displaystyle {\\\\texttt {NSTORB}}\\={\\\\sqrt {\\\\texttt {NBANDS}}}\\\\;.} See here for a small tutorial on stochastic Laplace transformed MP2 calculations."}
{"file_name": "Wxxxx.md", "content": "These files store only the diagonal elements of the screened exchange   W {\\\\displaystyle W}  needed for BSE calculations and are therefore fairly small compared to the WFULLxxxx.tmp files which store the full matrix. The *xxxx* in the name corresponds to integer values labeling the k\\-point index. During the BSE calculations, VASP will first try to read the WFULLxxxx.tmp files, and then, if these are missing, the Wxxxx.tmp files. For small isotropic (jellium\\-like) bulk systems, results with the Wxxxx.tmp might be similar to the results obtained using the WFULLxxxx.tmp files. However, for molecules and atoms as well as surfaces it is strictly required to use the full\\-screened Coulomb kernel   W {\\\\displaystyle W}  .  ---"}
{"file_name": "AMIX_MAG.md", "content": "AMIX\\_MAG= \\[real]   Default: **AMIX\\_MAG** \\= 1\\.6nDescription: AMIX\\_MAG linear mixing parameter for the magnetization density.  --- The default mixing parameters for spinpolarized calculations are: IMIX\\=4, AMIX\\=0\\.4, AMIN\\=min(0\\.1,AMIX,AMIX\\_MAG), BMIX\\=1\\.0, AMIX\\_MAG\\=1\\.6, and BMIX\\_MAG\\=1\\.0\\.These settings are consistent with an (initial) spin enhancement factor of 4, which is usually a reasonable approximation. There are only a few other parameter combinations that can be tried if convergence turns out to be very slow. In particular, for slabs, magnetic systems, and insulating systems (e.g. molecules and clusters), an initial \"linear mixing\" can result in faster convergence than the Kerker model function.[\\[1]](#cite_note-kerker:prb:1981-1) One can therefore try to use the following setting   ```AMIX     = 0.2BMIX     = 0.0001\u00a0! almost zero, but 0 will crash some versionsAMIX_MAG = 0.8BMIX_MAG = 0.0001\u00a0! almost zero, but 0 will crash some versions  ``` **Mind**: For spinpolarized calculations the defaults for the mixing parameters AMIX and BMIX are different than for the non\\-spinpolarized case."}
{"file_name": "NELMGW.md", "content": "NELMGW= \\[integer]   Default: **NELMGW** \\= 1nDescription: NELMGW sets the number of self\\-consistent GW steps.Available as of 6\\.3\\.0\\.  --- This tag is effective for ALGO\\=EVGW\\[0] \\| QPGW\\[0] \\| GW\\[0]\\[R]\\[K] and ignored otherwise.For instance  ```ALGO = EVGW0NELMGW = 4  ``` performs a  partially self\\-consistent GW calculations, where   G {\\\\displaystyle G}  is updated four times.  Omit NBANDS and NELM to select the single\\-step GW procedure."}
{"file_name": "ENCUTGW.md", "content": "ENCUTGW= \\[real]   Default: **ENCUTGW** \\= 2/3 ENCUT\u00a0   Description: The tag ENCUTGW sets the energy cutoff for the response function. It controls the basis set for the response functionsin exactly the same manner as ENCUT does for the orbitals.    --- In GW and random\\-phase\\-approximation (RPA) calculations, storing and manipulating the response function dominates the computational work load:  \u03c7  q  0  (  G  ,  G  \u2032  , \u03c9 ) \\=  1 \u03a9  \u2211  n ,  n \u2032  ,  k  2  w  k  (  f  n \u2032  k  \\+  q  \u2212  f  n  k  ) \u00d7  \u27e8  \u03c8  n  k  \\|  e  \u2212 i (  q  \\+  G  )  r  \\|  \u03c8  n \u2032  k  \\+  q  \u27e9 \u27e8  \u03c8  n \u2032  k  \\+  q  \\|  e  i (  q  \\+  G  \u2032  )  r \u2032  \\|  \u03c8  n  k  \u27e9  \u03f5  n \u2032  k  \\+  q  \u2212  \u03f5  n  k  \u2212 \u03c9 \u2212 i \u03b7  . {\\\\displaystyle \\\\chi \\_{\\\\mathbf {q} }^{0}({\\\\mathbf {G} },{\\\\mathbf {G} }',\\\\omega )\\={\\\\frac {1}{\\\\Omega }}\\\\sum \\_{n,n',{\\\\mathbf {k} }}2w\\_{\\\\mathbf {k} }(f\\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\-f\\_{n{\\\\mathbf {k} }})\\\\times {\\\\frac {\\\\langle \\\\psi \\_{n{\\\\mathbf {k} }}\\|e^{\\-i({\\\\mathbf {q} }\\+{\\\\mathbf {G} }){\\\\mathbf {r} }}\\|\\\\psi \\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\\\rangle \\\\langle \\\\psi \\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\|e^{i({\\\\mathbf {q} }\\+{\\\\mathbf {G} }'){\\\\mathbf {r'} }}\\|\\\\psi \\_{n{\\\\mathbf {k} }}\\\\rangle }{\\\\epsilon \\_{n'{\\\\mathbf {k} }\\+{\\\\mathbf {q} }}\\-\\\\epsilon \\_{n{\\\\mathbf {k} }}\\-\\\\omega \\-i\\\\eta }}.} ENCUTGW controls how many   G {\\\\displaystyle \\\\mathbf {G} }  vectors are included in the the response function   \u03c7  q  0  (  G  ,  G  \u2032  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\mathbf {q} }^{0}({\\\\mathbf {G} },{\\\\mathbf {G} }',\\\\omega )}  . Our experience suggests that choosing ENCUTGW\\= 2/3 ENCUT yields reasonable results at fairly modest computational cost, although, the response function contains contributions up to twice the plane wave cutoff   G  c u t {\\\\displaystyle G\\_{\\\\rm {cut}}} , see ALGO tag. Furthermore, RPA correlation energies are reported using an internal extrapolation of the correlation energy by varying the value of ENCUTGW inside VASP between the largest value given in the INCAR file and smaller values [\\[1]](#cite_note-harl:prb:08-1). Mind: The extrapolated value is only reliable, if ENCUTGW is smaller then ENCUT. The cutoff extrapolation with respect to ENCUTGW would be precise if the plane wave basis for the orbitals were infinite. Again, the VASP defaults yield very reasonable values for the extrapolated correlation energy. In fact, it is unwise to increase ENCUTGW only, without increasing ENCUT. To converge RPA correlation energies, simply increase ENCUT and the number of orbitals, and use the VASP default for ENCUTGW. | **Mind:** More details on how the infinite basis set limit is extrapolated in RPA/ACFDT can be found here. || --- | For quasiparticle (QP) bandgaps, it is sometimes possible to set ENCUTGW to values between 150 to 200 eV, and even 100 eV can yieldgaps that are accurate to within a few tens of an eV for main group elements. Be aware, however, that the absolute values of the QP energies depend inverse proportionally on the number of plane waves. Thus, the convergence of absolute QP energies is very slow, although QP gaps might seem converged. The recommended procedure to obtain accurate QP energies is discussed in the reference below. Specifically, for reference type calculations we recommend the following procedure:  * Use the default for ENCUTGW, or even decrease ENCUTGW to half the value of ENCUT.* Calculate all orbitals that the plane\\-wave basis set allows to calculate. This number can be determined by searching for \"maximum number of plane\\-waves\" in the ground\\-state DFT OUTCAR file, and setting NBANDS to this value.* Increase ENCUT systematically and plot the QP energies versus the number of plane\\-wave coefficients, which equals the number of orbitals. This means ENCUTGW and NBANDS increase as ENCUT increases. This procedure can be carried out using few k points. Other commonly applied methods can yield less accurate results and are not considered to be reliable. FFT grid and PRECFOCK------------------------------------------------- The PRECFOCK tag determines the fast Fourier transformation (FFT) grid in all GW (and Hartree\\-Fock) related routines. For small systems, the computational time is often dominated by FFT operations. Therefore, the PRECFOCK tag can have a significant impact on the compute time for QP calculations. For large systems, the FFT's usually do not dominate the computational workload, and savings are expected to be small for PRECFOCK \\= *fast*. QP shifts are usually not very sensitive to the setting of PRECFOCK and therefore there is no harm in setting PRECFOCK \\= *fast*), whereas for RPA calculations we recommend to set PRECFOCK \\= *normal* to avoid numerical errors."}
{"file_name": "Vibrational_Analysis_of_the_TS.md", "content": "Description: the Improved Dimer Method needs an educated guess of the decay path, which is extimated from the hardest vibration mode with imaginary frequency of the TS geometry(which is a planar NH3 molecule):  --- * INCAR  ```SYSTEM = Ammonia flippingIBRION = 5NSW = 1ALGO = FPOTIM = 0.015EDIFF = 1e-8EDIFFG = -0.01NWRITE = 3  ``` * KPOINTS  ```k-points 0 G 1 1 1  ```   * POSCAR  ```ammonia flipping  1.00000000000000    6.000000    0.000000    0.000000    0.000000    7.000000    0.000000    0.000000    0.000000    8.000000  H    N    3     1Direct 0.6462   0.5736   0.5000 0.5000   0.3547   0.5000 0.3538   0.5736   0.5000 0.5000   0.5000   0.5000  ``` Download-------- ammonia\\_flipping.tgz, sub\\-folder TS\\_vib  --- To the list of examples\") or to the main page"}
{"file_name": "STM_of_graphite.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Generation of an STM image of a graphite surface. Input----- ### POSCAR  ```C: Graphite Lattice 1.0 +2.4410462393  +0.0000000000  +0.0000000000  -1.2205231197  +2.1140080551  +0.0000000000  +0.0000000000  +0.0000000000 +22.0000000000  10Cartesian +0.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.4093387034  +0.0000000000  +0.0000000000  +1.4093387034  +3.3070243927  +1.2205231197  +0.7046693517  +3.3070243927  +0.0000000000  +0.0000000000  +6.6140487854  +0.0000000000  +1.4093387034  +6.6140487854  +0.0000000000  +1.4093387034  +9.9210731781  +1.2205231197  +0.7046693517  +9.9210731781  +0.0000000000  +0.0000000000 +13.2280975708  +0.0000000000  +1.4093387034 +13.2280975708  ``` ### INCAR  ```general:  SYSTEM = Graphite surface slap  ENMAX  = 400  ISMEAR =    2 \u00a0; SIGMA = 0.2  ALGO = Fast  ```  ```partial charge densities:  LPARD = .TRUE.  LSEPK = .FALSE.  LSEPB = .FALSE.  NBMOD = -3  EINT = -0.1 0.1 # DOS:#   ISTART = 0#   ICHARG = 2#   LORBIT = 11  ``` ### KPOINTS  ```K-Points 0Monkhorst-Pack9 9 10 0 0  ``` * Only one k point in z direction since we have a surface. Calculation----------- * First copy INCAR.DOS to INCAR to get the lm\\-decomposed DOS. * Second copy INCAR.par to INCAR and run VASP for the preliminary calculation. * To get an STM image use p4vasp: [](File_Fig_graphite_STM_1.html) Download--------  Graphite\\_STM.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "LSORBIT.md", "content": "LSORBIT= .TRUE. \\| .FALSE.   Default: **LSORBIT** \\= .FALSE.nDescription: Switch on spin\\-orbit coupling.  --- LSORBIT \\= True switches on spin\\-orbit coupling (SOC)[\\[1]](#cite_note-Steiner:2016-1) and automatically sets LNONCOLLINEAR \\= True. It requires using `vasp_ncl`. SOC couples the spin degrees of freedom with the lattice degrees of freedom. We recommend carefully checking the symmetry and convergence of your results when using SOC; see below. LSORBIT only works for PAW potentials and is not supported by ultrasoft pseudopotentials. It is supported as of VASP.4\\.5\\.  Assumptions and output---------------------- * Switching on spin\\-orbit coupling (SOC) adds an additional term   H  s o c  \u03b1 \u03b2  \u221d  \u03c3  \u22c5  L {\\\\displaystyle H\\_{soc}^{\\\\alpha \\\\beta }\\\\propto \\\\mathbf {\\\\sigma } \\\\cdot \\\\mathbf {L} }  to the Hamiltonian that couples the Pauli\\-spin operator   \u03c3 {\\\\displaystyle \\\\mathbf {\\\\sigma } }  with the angular momentum operator   L {\\\\displaystyle \\\\mathbf {L} } .[\\[1]](#cite_note-Steiner:2016-1) As a relativistic correction, SOC acts predominantly in the immediate vicinity of the nuclei. Therefore, it is assumed that contributions of   H  s o c {\\\\displaystyle H\\_{soc}}  outside the PAW spheres are negligible. Hence, VASP calculates the matrix elements of   H  s o c {\\\\displaystyle H\\_{soc}}  only for the all\\-electron one\\-center contributions  E  s o c  i j  \\=  \u03b4  R  i  R  j  \u03b4  l  i  l  j  \u2211  n  k  w  k  f  n  k  \u2211  \u03b1 \u03b2  \u27e8  \u03c8 \\~  n  k  \u03b1  \\|  p \\~  i  \u27e9 \u27e8  \u03d5  i  \\|  H  s o c  \u03b1 \u03b2  \\|  \u03d5  j  \u27e9 \u27e8  p \\~  j  \\|  \u03c8 \\~  n  k  \u03b2  \u27e9 {\\\\displaystyle E\\_{soc}^{ij}\\=\\\\delta \\_{{\\\\bf {R}}\\_{i}{\\\\bf {R}}\\_{j}}\\\\delta \\_{l\\_{i}l\\_{j}}\\\\sum \\_{n{\\\\bf {k}}}w\\_{\\\\bf {k}}f\\_{n{\\\\bf {k}}}\\\\sum \\_{\\\\alpha \\\\beta }\\\\langle {\\\\tilde {\\\\psi }}\\_{n{\\\\bf {k}}}^{\\\\alpha }\\|{\\\\tilde {p}}\\_{i}\\\\rangle \\\\langle \\\\phi \\_{i}\\|H\\_{soc}^{\\\\alpha \\\\beta }\\|\\\\phi \\_{j}\\\\rangle \\\\langle {\\\\tilde {p}}\\_{j}\\|{\\\\tilde {\\\\psi }}\\_{n{\\\\bf {k}}}^{\\\\beta }\\\\rangle } where   \u03d5  i  (  r  ) \\=  R  i  (  \\|  r  \u2212  R  i  \\|  )  Y  l  i  m  i  ( \u03b8 , \u03c6 ) {\\\\displaystyle \\\\phi \\_{i}({\\\\bf {r}})\\=R\\_{i}(\\|{\\\\bf {r}}\\-{\\\\bf {R}}\\_{i}\\|)Y\\_{l\\_{i}m\\_{i}}(\\\\theta ,\\\\varphi )}  are the partial waves of an atom centered at   R  i {\\\\displaystyle {\\\\bf {R}}\\_{i}}  ,  \u03c8 \\~  n  k  \u03b1 {\\\\displaystyle {\\\\tilde {\\\\psi }}\\_{n{\\\\bf {k}}}^{\\\\alpha }}  is the spinor\\-component   \u03b1 \\=\u2191 , \u2193 {\\\\displaystyle \\\\alpha \\=\\\\uparrow ,\\\\downarrow }  of the pseudo\\-orbital with band\\-index *n* and Bloch vector **k**, and   f  n  k {\\\\displaystyle f\\_{n{\\\\bf {k}}}}  and  w  k {\\\\displaystyle w\\_{\\\\bf {k}}}  are the Fermi\\- and **k**\\-point weights, respectively.[\\[1]](#cite_note-Steiner:2016-1)* It is possible to write the partial magnetization by setting LORBIT, i.e., the site\\- and orbital\\-resolved expectation value of the Pauli\\-spin operator   \u03c3 {\\\\displaystyle \\\\mathbf {\\\\sigma } } . And the partial orbital angular momentum by setting LORBMOM, i.e., the site\\- and orbital\\-resolved expectation value of the orbital angular momentum operator   L {\\\\displaystyle \\\\mathbf {L} }  . | **Mind:** The orbital angular momentum (vector\\-like quantity) is written to the OUTCAR file in Cartesian coordinates, while the magnetic moments (spinor\\-like quantity) are read and written in the basis specified by SAXIS (spinor space). || --- | The default orientation of spinor space is   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}} . Hence, the bases agree by default, and no transformation is required.* After a successful calculation including SOC, VASP writes the following results to the OUTCAR file:  ```Spin-Orbit-Coupling matrix elements Ion:    1  E_soc:     -0.0984080l=   1    0.0000000    -0.0134381    -0.0134381   -0.0134381     0.0000000    -0.0134381   -0.0134381    -0.0134381     0.0000000l=   2    0.0000000    -0.0005072     0.0000000    -0.0005072    -0.0024560   -0.0005072     0.0000000    -0.0018420    -0.0005072    -0.0006140    0.0000000    -0.0018420     0.0000000    -0.0018420     0.0000000   -0.0005072    -0.0005072    -0.0018420     0.0000000    -0.0006140   -0.0024560    -0.0006140     0.0000000    -0.0006140     0.0000000l=   3    0.0000000    -0.0000000     0.0000000     0.0000000     0.0000000    -0.0000000    -0.0000000   -0.0000000     0.0000000    -0.0000000     0.0000000    -0.0000000    -0.0000000    -0.0000000    0.0000000    -0.0000000     0.0000000    -0.0000000    -0.0000000    -0.0000000     0.0000000    0.0000000     0.0000000    -0.0000000     0.0000000    -0.0000000     0.0000000     0.0000000    0.0000000    -0.0000000    -0.0000000    -0.0000000     0.0000000    -0.0000000     0.0000000   -0.0000000    -0.0000000    -0.0000000     0.0000000    -0.0000000     0.0000000    -0.0000000   -0.0000000    -0.0000000     0.0000000     0.0000000     0.0000000    -0.0000000     0.0000000  ``` Here, `1 E_soc` represents the accumulated energy contribution   E  s o c  \\=  \u2211  i j  E  s o c  i j {\\\\displaystyle E\\_{soc}\\=\\\\sum \\_{ij}E\\_{soc}^{ij}}  inside the augmentation sphere that is centered at   R  1 {\\\\displaystyle {\\\\bf {R}}\\_{1}}  (position of ion 1\\), while the following entries correspond to the matrix elements   E  s o c  i j {\\\\displaystyle E\\_{soc}^{ij}}  for the angular momentum   l {\\\\displaystyle l}  .Symmetry and convergence------------------------ In any spin\\-polarized (ISPIN\\=2\\) or noncollinear (LNONCOLLINEAR\\=T) calculation, even without SOC, the total energy depends on the relative orientation of magnetic moments. For instance, two magnetic sites may couple ferromagnetically or antiferromagnetically. On the other hand, the total energy is independent of the orientation of the magnetic moments with respect to the lattice without SOC. For instance, in\\-plane and out\\-of\\-plane moments on a surface would yield the same energy in the absence of SOC. Switching on SOC couples the spin degrees of freedom that live in spinor space and the lattice degrees of freedom that live in real space, see SAXIS. Therefore, the in\\-plane and out\\-of\\-plane magnetic moments on a surface would yield different energies, when including SOC. Similarly, the ferromagnetically or antiferromagnetically ordered magnetic moments may additionally align with, e.g., the third lattice vector by setting LSORBIT \\= True. Generally, be extremely diligent when using SOC: The energy differences can be of the order of few   \u03bc {\\\\displaystyle \\\\mu } eV/atom, k\\-point convergence is tedious and slow, and the required compute time might be huge, even for small cells. | **Warning:** When SOC is included, we recommend testing whether switching off symmetry (ISYM\\=\\-1\\) changes the results. || --- |  Often, the k\\-point set changes from one to the other spin orientation, thus worsening the transferability of the results. Note that the WAVECAR file cannot be reread properly if the number of k\\-points changes. Hence, restart the calculation without symmetry from a converged charge density by setting ICHARG\\=1! Also, consider the setting of LMAXMIX. We recommend setting GGA\\_COMPAT \\= False for noncollinear calculations since this improves the numerical precision of GGA calculations. Please check the sections on LNONCOLLINEAR, SAXIS, LMAXMIX, and GGA\\_COMPAT."}
{"file_name": "ZAB_VDW.md", "content": "ZAB\\_VDW= \\[real]   Default: **ZAB\\_VDW** \\= \\-0\\.8491nDescription: The tag ZAB\\_VDW specifies the value of the parameter   Z  a b {\\\\displaystyle Z\\_{ab}}  in the kernel of the nonlocal vdW\\-DF functional of Dion *et al*.[\\[1]](#cite_note-dion:prl:2004-1)  --- In a revised version of the vdW correlation functional from Lee *et al*.[\\[2]](#cite_note-lee:prb:2010-2),   Z  a b  \\= \u22121\\.8867 {\\\\displaystyle Z\\_{ab}\\=\\-1\\.8867}  ."}
{"file_name": "ML_IALGO_LINREG.md", "content": "ML\\_IALGO\\_LINREG= \\[integer]   Default: **ML\\_IALGO\\_LINREG** \\= 1nDescription: This tag determines the algorithm that is employed to solve the system of linear equations in the ridge regression method for machine learning.  --- In the ridge regression method for machine learning one needs to solve for the unknown weights   w {\\\\displaystyle \\\\mathbf {w} }  minimizing  \\|  \\|  Y  \u2212  \u03a6  w  \\|  \\|  \u2192  min  . {\\\\displaystyle \\|\\|\\\\mathbf {Y} \\-\\\\mathbf {\\\\Phi } \\\\mathbf {w} \\|\\|\\\\rightarrow {\\\\mbox{min}}.} For the theory of the available methods please see here. The following options are available to solve for   w {\\\\displaystyle \\\\mathbf {w} }  : * ML\\_IALGO\\_LINREG\\=1: Bayesian linear regression (see here). Recommended for NSW  \u2265 {\\\\displaystyle \\\\geq } 1\\. Usable with ML\\_MODE \\= *TRAIN*, *SELECT*, and *REFITBAYESIAN*.* ML\\_IALGO\\_LINREG\\=2: QR factorization. Usable with ML\\_MODE \\= *REFIT* and *REFITBAYESIAN*.* ML\\_IALGO\\_LINREG\\=3: Singular value decomposition. Usable with ML\\_MODE \\= *REFIT* and *REFITBAYESIAN*.* ML\\_IALGO\\_LINREG\\=4: Singular value decomposition with Tikhonov regularization. The regularization can be controlled via ML\\_SIGW0. Usable with ML\\_MODE \\= *REFIT* and *REFITBAYESIAN*. For on the fly learning ML\\_MODE \\= *TRAIN* and reselection of local reference configurations ML\\_MODE \\= *SELECT*, it is strictly necessary to use Bayesian regression (ML\\_IALGO\\_LINREG\\=1\\), since uncertainty estimates are only available for Bayesian regression.  **Refitting**:Although the above modes result in an ML\\_FFN file that could be used for production runs, we strongly advise to refit the ML\\_ABN files. For that copy the ML\\_ABN file to the ML\\_AB file and use ML\\_MODE\\= *REFIT* (if Bayesian error estimation is required during production runs ML\\_MODE\\= *REFITBAYESIAN* is an option, but at the cost of significatnly slower calculation time). ML\\_MODE\\= *REFIT* employs ML\\_IALGO\\_LINREG\\=4 by default. For ML\\_IALGO\\_LINREG\\>1, ML\\_IALGO\\_LINREG\\=3 and 4 are the most tested approaches and we use ML\\_IALGO\\_LINREG\\=4 routinely before employing a machine learned force field. ML\\_IALGO\\_LINREG\\=4 gives more stable force fields and better fitting accuracy than ML\\_IALGO\\_LINREG\\=3, due to the regularization term employed (for details please see here).  ML\\_IALGO\\_LINREG\\=4 dramatically improves the condition number of the fitting compared to ML\\_IALGO\\_LINREG\\=1 since it directly uses the design matrix. In contrast ML\\_IALGO\\_LINREG\\=1 requires to use the covariance matrix (square of the design matrix), which effectively doubles the condition number.However, ML\\_IALGO\\_LINREG\\=4 needs significantly more memory than ML\\_IALGO\\_LINREG\\=1 (at least twice that much). Please always monitor the memory estimates in the ML\\_LOGFILE! It should be also noted that ML\\_IALGO\\_LINREG\\=4 is computationally somewhat more demanding than ML\\_IALGO\\_LINREG\\=1, but it typically requires between a few minutes and an hour. So usually the extra cost is negligible compared to the original training."}
{"file_name": "SPRING_K.md", "content": "SPRING\\_K= \\[real (array)]nDescription: Force constant for harmonic bias potential.  --- The parameter SPRING\\_K defines force constants (  \u03ba  \u03bc {\\\\displaystyle \\\\kappa \\_{\\\\mu }} ) for the harmonic bias of the following form:  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  8  ) \\=  \u2211  \u03bc \\= 1  M  1 2  \u03ba  \u03bc  (  \u03be  \u03bc  ( q ) \u2212  \u03be  0 \u03bc  )  2 {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{8}})\\=\\\\sum \\_{\\\\mu \\=1}^{M}{\\\\frac {1}{2}}\\\\kappa \\_{\\\\mu }(\\\\xi \\_{\\\\mu }(q)\\-\\\\xi \\_{0\\\\mu })^{2}\\\\;} where the sum runs over all (  M  8 {\\\\displaystyle M\\_{8}} ) coordinates the potential acts upon (  \u03be  \u03bc  ( q ) {\\\\displaystyle \\\\xi \\_{\\\\mu }(q)} ), which are defined in the ICONST file by setting the `status` to 8\\.The units of   \u03ba  \u03bc {\\\\displaystyle \\\\kappa \\_{\\\\mu }}  are  e V  /  u c {\\\\displaystyle eV/uc}  where   u c {\\\\displaystyle uc}  units of coordinate the potential acts upon (e.g.,   \u00c5 {\\\\displaystyle {\\\\mathrm {\\\\AA} }}  for coordinates with `flag` R,   r a d . {\\\\displaystyle rad.}  for coordinates with `flag` A, dimensionless for coordinates with `flag` W, etc...)The number of items defined via SPRING\\_K must be equal to   M  8 {\\\\displaystyle M\\_{8}} , otherwise the calculation terminates with an error message."}
{"file_name": "NTAUPAR.md", "content": "NTAUPAR= \\[integer]n| Default: **NTAUPAR** | \\= depends on MAXMEM | used in low scaling GW and RPA/ACFDT calculations. || --- | --- | --- | Description: NTAUPAR available as of VASP.6, specifies the number of MPI groups sharing same imaginary time grid points. The default value of NTAUPAR is set to the largest possible value supported on the compute nodes to speed up the GW or RPA calculation.  --- NTAUPAR has the biggest impact on memory usage as well as total runtime for low\\-scaling GW and RPA calculations. If not found in the INCAR, NTAUPAR is set automatically based on the value of MAXMEM (the available memory for each rank on each compute node), such that the GW and RPA job fits in the RAM on each compute node.  If MAXMEM is not set, VASP looks in \"/proc/meminfo\" for \"MemAvailable\" to set MAXMEM internally, otherwise the code uses the value provided in the INCAR.  NTAUPAR\\=NOMEGA is the maximum value possible, while NTAUPAR\\=1 is the smallest possible value."}
{"file_name": "ML_IERR.md", "content": "| Default: **ML\\_IERR** | \\= 0 | if ML\\_MODE\\=RUN || --- | --- | --- ||  | \\= 1 | otherwise | Description: Calculation and output frequency of Bayesian error estimate. | **Mind:** This tag is only available as of VASP.6\\.4\\.0\\. || --- |  --- This tag sets the distance in units of molecular\\-dynamics steps at which the energies, forces, stresses, etc. are written to the corresponding files (OUTCAR, OSZICAR, ML\\_LOGFILE, etc.). If learning is activated (ML\\_MODE\\=*TRAIN*, *SELECT*, *REFIT* or *REFITBAYESIAN*) the only allowed option is that Bayesian error estimation is \"on\" at every molecular\\-dynamics step (ML\\_IERR\\=1 is required). The interval can only be freely chosen via ML\\_IERR for ML\\_MODE\\=*RUN*, if an ML\\_FF file, that was previously trained using ML\\_MODE\\=*REFITBAYESIAN*, is used. The Bayesian error estimates are written to the logfile with the entry *BEEF*. For ML\\_IERR\\=0 the Bayesian error is never calculated (and also no corresponding log file line is written out. This is the default since for ML\\_MODE\\=*RUN* the Bayesian error estimation takes up a significant amount of the total calculation time. | **Warning:** ML\\_IERR\\>0 can never be used with the fast execution mode (force field refitted with ML\\_MODE\\=*REFIT* or ML\\_LFAST\\=*.TRUE.*). || --- |"}
{"file_name": "Constrained_MD_using_a_microcanonical_ensemble.md", "content": "**Description**:Compare adsoption of H2O on TiO2\\[110] using a simple model structure: the model surface consists of 2 layers TiO2, (1x1\\) * The bottom layer of the slab will be kept frozen* 2 setups will be tested:\t+ Standard relaxation, minimizing the Hellmann\\-Feyman forces\t+ Constrained MD, fixing the bond lengths and angle of H2O, the system is coupled to an ANDERSEN thermostat:\t\t- Microcanonical NVE ensemble (no collisions with the thermostat)\t\t- Canonical ensembe at T\\= 10K, to be close to the standard relaxation (0K) To keep the computing time reasonable, the number of steps in the MD is limited to 100 (100 fs) which implies that the MD is NOT CONVERGED. * INCAR for standard relaxation  ```SYSTEM = H2O_TiO2ENMAX = 400ISMEAR =  2SIGMA = 0.05EDIFF = 1e-6EDIFFG = -0.05IBRION = 2POTIM = 0.5NSW = 200  ```   * INCAR for constrained MD using a microcanonical ensemble  ```SYSTEM = H2O_TiO2ENMAX = 400ISMEAR = 2SIGMA = 0.05ISMEAR = 0EDIFF = 1e-6EDIFFG = -0.05IBRION = 0POTIM = 1.MDALGO = 1    # Andersen ThermostatTEBEG = 10; TEEND = 10NSW = 100      ``` * ICONST for constrained MD using a microcanonical ensemble  ```R 7 8 0R 7 9 0A 8 7 9 0  ```   * INCAR for constrained MD using a canonical ensemble  ```SYSTEM = H2O_TiO2ENMAX = 400ISMEAR = 2SIGMA = 0.05ISMEAR = 0EDIFF = 1e-6EDIFFG = -0.05IBRION = 0POTIM = 1.MDALGO = 1    # Andersen ThermostatANDERSEN_PROB = 0.9TEBEG = 10; TEEND = 10NSW = 100  ``` * ICONST for constrained MD using a canonical ensemble  ```R 7 8 0R 7 9 0A 8 7 9 0  ```   * POSCAR  ```TiO2+H2O                                       1.00000000000000          4.61949   0.00000    0.00000     0.00000   4.61949    0.00000     0.00000   0.00000   14.7788   Ti   O  H     2     5     2SelectiveDirect  0.00000  0.00000  0.00000    F F F  0.50000  0.50000  0.10000    T T T  0.30374  0.30374  0.00000    F F F  0.69625  0.69625  0.00000    F F F  0.19625  0.80374  0.10000    T T T  0.80374  0.19625  0.10000    T T T  0.50000  0.50000  0.31500    T T T  0.37720  0.62280  0.35881    T T T  0.62280  0.37720  0.35881    T T T  ```   * KPOINTS  ```Automatically generated mesh 0Gamma 5 5 1  ``` * run.sh  ``` ## To run VASP this script calls $vasp_std# (or posibly $vasp_gam and/or $vasp_ncl).# These variables can be defined by sourcing vaspcmd. vaspcmd 2> /dev/null  ## When vaspcmd is not available and $vasp_std,# $vasp_gam, and/or $vasp_ncl are not set as environment# variables, you can specify them here[ -z \"`echo $vasp_std`\" ] && vasp_std=\"mpirun -np 8 /path-to-your-vasp/vasp_std\"[ -z \"`echo $vasp_gam`\" ] && vasp_gam=\"mpirun -np 8 /path-to-your-vasp/vasp_gam\"[ -z \"`echo $vasp_ncl`\" ] && vasp_ncl=\"mpirun -np 8 /path-to-your-vasp/vasp_ncl\"  ## The real work starts here # rm results.dat  drct=$(pwd) for i in std_relaxation constrMD_microcanonical constr_MD_canonical do  cd $drct/$i  ln -s ../POTCAR .  ln -s ../POSCAR .  ln -s ../KPOINTS .  $vasp_std/bin/rm CHG* WAVECARdone  ``` Tor run the calculations use (and modify if necessary) the run.sh script Download-------- h2o\\_on\\_tio2\\.tgz, sub\\-folder constrMD\\_microcanonical  --- To the list of examples\") or to the main page"}
{"file_name": "PAW_formalism.md", "content": "Basics of the PAW formalism--------------------------- The PAW formalism is a generalization of ideas of both Vanderbilt\\-type[\\[1]](#cite_note-vander:90-1)ultrasoft\\-pseudopotentials[\\[2]](#cite_note-kresshaf:94-2) (USPP) and the linearized augmented\\-plane\\-wave[\\[3]](#cite_note-andersen:75-3) (LAPW) method. The method was first proposed and implemented by Bl\u00f6chl[\\[4]](#cite_note-bloechl:94-4). The formal relationship between Vanderbilt\\-typeultrasoft pseudopotentials and the PAW method has been derived by Kresse and Joubert[\\[5]](#cite_note-kressjoub:99-5), and the generalization of the PAW method to noncollinear magnetism has beendiscussed by Hobbs, Kresse and Hafner[\\[6]](#cite_note-hobbs:00-6). We briefly summarize the basics of the PAW method below (following Refs. [\\[4]](#cite_note-bloechl:94-4) and [\\[5]](#cite_note-kressjoub:99-5)).  In the PAW method the one electron wavefunctions   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }} , in the following simply called orbitals, arederived from the pseudo orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }}  by means of a linear transformation:  \\|  \u03c8  n  k  \u27e9 \\=  \\|  \u03c8 \\~  n  k  \u27e9 \\+  \u2211  i  (  \\|  \u03d5  i  \u27e9 \u2212  \\|  \u03d5 \\~  i  \u27e9 ) \u27e8  p \\~  i  \\|  \u03c8 \\~  n  k  \u27e9 . {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{i}(\\|\\\\phi \\_{i}\\\\rangle \\-\\|{\\\\widetilde {\\\\phi }}\\_{i}\\\\rangle )\\\\langle {\\\\widetilde {p}}\\_{i}\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle .} The pseudo orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }} , where   n k {\\\\displaystyle nk}  is the band index and k\\-point index, are the variational quantities and expanded in plane waves (see below). In the interstitial region between the PAW spheres,the orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }}  are identical to the exact orbitals   \u03c8  n  k {\\\\displaystyle {\\\\psi }\\_{n\\\\mathbf {k} }}  .Inside the spheres, the pseudo\\-orbitals are however only a computationaltool and an inaccurateapproximation to the true orbitals, since even thenorm of the all\\-electron wave function is not reproduced. The last equation is required to map the auxiliary quantities   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }} onto the corresponding exact orbitals. The PAW method implemented in VASP exploits the frozen core (FC) approximation, which is not an inherent characteristic of the PAW method, but has been made in all implementations so far.In the present case, the core electrons are also kept frozen in the configuration for which the PAW dataset was generated. The index   \u03b1 {\\\\displaystyle \\\\alpha }  is a shorthand for the atomic site   R  \u03b1 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }} , the angular momentumquantum numbers   l  \u03b1  ,  m  \u03b1 {\\\\displaystyle l\\_{\\\\alpha },m\\_{\\\\alpha }}  and an additional index   \u03b5  \u03b1 {\\\\displaystyle \\\\varepsilon \\_{\\\\alpha }}  referring tothe referenceenergy. The pseudo orbitals are expanded in the reciprocal space using plane waves  \u27e8  r  \\|  \u03c8 \\~  n  k  \u27e9 \\=  1  \u03a9  1  /  2  \u2211  G  C  n  k G  e  i (  G  \\+  k  ) \u22c5  r  , {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\={\\\\frac {1}{\\\\Omega ^{1/2}}}\\\\sum \\_{\\\\mathbf {G} }C\\_{n\\\\mathbf {kG} }e^{i(\\\\mathbf {G} \\+\\\\mathbf {k} )\\\\cdot \\\\mathbf {r} },} where   \u03a9 {\\\\displaystyle \\\\Omega }  is the volume of the Wigner\\-Seitz cell. The all\\-electron (AE) partial waves  \u03d5  \u03b1 {\\\\displaystyle \\\\phi \\_{\\\\alpha }}  are solutions of the radial Schr\u00f6dinger equation for a non\\-spinpolarized reference atom at a specific energy   \u03b5  \u03b1 {\\\\displaystyle \\\\varepsilon \\_{\\\\alpha }}  and for a specific angular momentum   l  \u03b1 {\\\\displaystyle l\\_{\\\\alpha }}  :  \u27e8  r  \\|  \u03d5  \u03b1  \u27e9 \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  \u03b1  (  r  \u2212  R  \u03b1  ^  ) \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u  l  \u03b1  \u03b5  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  l  \u03b1  m  \u03b1  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|\\\\phi \\_{\\\\alpha }\\\\rangle \\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}u\\_{\\\\alpha }(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)Y\\_{\\\\alpha }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}u\\_{l\\_{\\\\alpha }\\\\varepsilon \\_{\\\\alpha }}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)\\\\,Y\\_{l\\_{\\\\alpha }m\\_{\\\\alpha }}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The notation   r  \u2212  R  \u03b1  ^ {\\\\displaystyle {\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}}  is used to clarify thatthe spherical harmonics   Y {\\\\displaystyle Y}  depends on the orientation but not onthe length of the vector   r  \u2212  R  \u03b1 {\\\\displaystyle \\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}  .Note that the radial component of the partial wave   u  \u03b1 {\\\\displaystyle u\\_{\\\\alpha }}  is independent of   m  \u03b1 {\\\\displaystyle m\\_{\\\\alpha }} , since the partial waves are calculated for a spherical atom. Furthermore, the spherical harmonics depend on the angular quantum numbers onlyand not on the reference energy. The pseudo partialwaves   \u03d5 \\~  \u03b1 {\\\\displaystyle {\\\\widetilde {\\\\phi }}\\_{\\\\alpha }}  are equivalent to the AE partial waves outside a coreradius   r  c {\\\\displaystyle r\\_{c}}  and match continuously onto   \u03d5  \u03b1 {\\\\displaystyle \\\\phi \\_{\\\\alpha }}  inside the core radius:  \u27e8  r  \\|  \u03d5 \\~  \u03b1  \u27e9 \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u \\~  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  \u03b1  (  r  \u2212  R  \u03b1  ^  ) \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u \\~  l  \u03b1  \u03b5  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  l  \u03b1  m  \u03b1  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }\\\\rangle \\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}{\\\\widetilde {u}}\\_{\\\\alpha }(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)Y\\_{\\\\alpha }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}{\\\\widetilde {u}}\\_{l\\_{\\\\alpha }\\\\varepsilon \\_{\\\\alpha }}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)\\\\,Y\\_{l\\_{\\\\alpha }m\\_{\\\\alpha }}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The core radius   r  c {\\\\displaystyle r\\_{c}}  is usually chosen approximately around half the nearestneighbor distance. The projector functions   p \\~  \u03b1 {\\\\displaystyle {\\\\widetilde {p}}\\_{\\\\alpha }}  are dual to the partialwaves:  \u27e8  p \\~  i  \\|  \u03d5 \\~  j  \u27e9 \\=  \u03b4  i j  . {\\\\displaystyle \\\\langle {\\\\widetilde {p}}\\_{i}\\|{\\\\widetilde {\\\\phi }}\\_{j}\\\\rangle \\=\\\\delta \\_{ij}.} Charge and overlap densities---------------------------- Starting from the completeness relations it is possible to show that, in the PAW method, the total charge density (or more precisely the overlap density) related to two orbitals   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  and  \u03c8  m  k {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {k} }}  n (  r  ) \\=  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  k  (  r  ) {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\psi \\_{n\\\\mathbf {k} }^{\\\\ast }(\\\\mathbf {r} )\\\\,\\\\psi \\_{m\\\\mathbf {k} }(\\\\mathbf {r} )} can be rewritten as (for details we refer to Ref. [\\[4]](#cite_note-bloechl:94-4)):  n (  r  ) \\=  n \\~  (  r  ) \u2212  n \\~  1  (  r  ) \\+  n  1  (  r  ) . {\\\\displaystyle n(\\\\mathbf {r} )\\={\\\\widetilde {n}}(\\\\mathbf {r} )\\-{\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\+n^{1}(\\\\mathbf {r} ).} Here, the constituent charge densities are defined as:  n \\~  (  r  ) \\= \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle {\\\\widetilde {n}}(\\\\mathbf {r} )\\=\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle }  n \\~  1  (  r  ) \\=  \u2211  \u03b1 , \u03b2  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle {\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta }{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} )\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle }  n  1  (  r  ) \\=  \u2211  \u03b1 , \u03b2  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 . {\\\\displaystyle n^{1}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta }\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle .} The quantities with a superscript 1 are one\\-center quantities andare usually only evaluated on radial grids. Furthermore, one can usuallydrop the complex conjugation for the partial waves, since they are real\\-valued. The indices   \u03b1 {\\\\displaystyle \\\\alpha }  and  \u03b2 {\\\\displaystyle \\\\beta }  are restricted to those pairs that correspond to one atom   R  \u03b1  \\=  R  \u03b2 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }\\=\\\\mathbf {R} \\_{\\\\beta }}  .For a complete set of projectors the one\\-centre pseudo charge density   n \\~  1 {\\\\displaystyle {\\\\widetilde {n}}^{1}}  is exactlyidentical to   n \\~ {\\\\displaystyle {\\\\widetilde {n}}}  within the augmentation spheres.Furthermore, it is often necessary to define   \u03c1  \u03b1 \u03b2 {\\\\displaystyle \\\\rho \\_{\\\\alpha \\\\beta }} , the occupancies of eachaugmentation channel   ( \u03b1 , \u03b2 ) {\\\\displaystyle (\\\\alpha ,\\\\beta )}  inside each PAW sphere. These are calculated from the pseudo orbitals applying the projector functions and summing over all bands  \u03c1  \u03b1 \u03b2  \\=  \u2211  n  k  f  n  k  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  n  k  \u27e9 , {\\\\displaystyle \\\\rho \\_{\\\\alpha \\\\beta }\\=\\\\sum \\_{n\\\\mathbf {k} }f\\_{n\\\\mathbf {k} }\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle ,} where the occupancy   f  n  k {\\\\displaystyle f\\_{n\\\\mathbf {k} }}  is one for occupied orbitalsand zero for unoccupied one electron orbitals. The compensation or augmentation density---------------------------------------- The PAW method would yield exact overlap densities on the plane wave gridif the density were calculated as  n (  r  ) \\= \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  m  k  \u27e9 \\+  \u2211  \u03b1 , \u03b2  (  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{\\\\alpha ,\\\\beta }(\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ))\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle } In practice, the second term changes far too rapidly in real spaceto be represented on a plane wave grid. Since even the normof the pseudo\\-orbitals does not agree with the norm of the all\\-electron orbitals, it does not suffice to calculateHartree or exchange energies from the pseudo densities only. Hence, in order to treat the long\\-range electrostatic interactions in the Hartree and exchange term an additional quantity, the compensation density   n ^ {\\\\displaystyle {\\\\widehat {n}}} , is introduced. Its purpose is to approximate   Q  \u03b1 , \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) . {\\\\displaystyle Q\\_{\\\\alpha ,\\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ).} This compensation density (sometimes also referred to as augmentation density) is chosen such that the sum of the pseudo charge densityand the compensation density  n \\~  1  \\+  n ^ {\\\\displaystyle {\\\\widetilde {n}}^{1}\\+{\\\\widehat {n}}}  has exactly the same moments as the exact density   n  1 {\\\\displaystyle n^{1}}  within each augmentation sphere centered at the position   R  \u03b1 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }} . This requires that   \u222b  \u03a9  r  \\[  n  1  (  r  ) \u2212  n \\~  1  (  r  ) \u2212  n ^  (  r  ) ]  \\|  r  \u2212  R  \u03b1  \\|  L  Y  L M  \u2217  (  r  \u2212  R  \u03b1  ^  )  d  r  \\= 0  \u2200  R  \u03b1  , L , M . {\\\\displaystyle \\\\int \\_{\\\\Omega \\_{r}}\\[n^{1}(\\\\mathbf {r} )\\-{\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\-{\\\\widehat {n}}(\\\\mathbf {r} )]\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|^{L}Y\\_{LM}^{\\\\ast }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\\\,d\\\\mathbf {r} \\=0\\\\quad \\\\forall \\\\quad \\\\mathbf {R} \\_{\\\\alpha },L,M.} This implies that the electrostatic potential originating from   n  1 {\\\\displaystyle n^{1}} is identical to that of   n \\~  1  \\+  n ^ {\\\\displaystyle {\\\\widetilde {n}}^{1}\\+{\\\\widehat {n}}}  outsidethe augmentation sphere.Details on the construction of the compensation charge density in the VASP program have been published elsewhere[\\[5]](#cite_note-kressjoub:99-5). The compensation charge density is written in the formof a one\\-center multipole expansion  n ^  (  r  ) \\=  \u2211  \u03b1 , \u03b2 , L M  Q ^  \u03b1 , \u03b2  L M  (  r  )  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 , {\\\\displaystyle {\\\\widehat {n}}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta ,LM}{\\\\widehat {Q}}\\_{\\\\alpha ,\\\\beta }^{LM}(\\\\mathbf {r} )\\\\,\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle ,} where the functions   Q ^  \u03b1 \u03b2  L M  (  r  ) {\\\\displaystyle {\\\\widehat {Q}}\\_{\\\\alpha \\\\beta }^{LM}(\\\\mathbf {r} )}  are given by  Q ^  \u03b1 \u03b2  L M  (  r  ) \\=  q  \u03b1 \u03b2  L M  g  L  (  \\|  r  \u2212  R  i  \\|  )  Y  L M  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle {\\\\widehat {Q}}\\_{\\\\alpha \\\\beta }^{LM}(\\\\mathbf {r} )\\=q\\_{\\\\alpha \\\\beta }^{LM}\\\\,g\\_{L}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{i}\\|)Y\\_{LM}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The moment   L {\\\\displaystyle L}  of the function   g  L  ( r ) {\\\\displaystyle g\\_{L}(r)}  is equal to 1\\. The quantity   q  \u03b1 \u03b2  L M {\\\\displaystyle q\\_{\\\\alpha \\\\beta }^{LM}} is defined in Eq. (25\\) of Ref. [\\[5]](#cite_note-kressjoub:99-5)."}
{"file_name": "CONSTUCTION_LSEPK.md", "content": "Redirect to: * Construction:LSEPK\")"}
{"file_name": "TEEND.md", "content": "TEEND= \\[real]   Default: **TEEND** \\= TEBEGnDescription: TEEND sets the final temperature (in K) for an ab\\-initio molecular\\-dynamics run (IBRION\\=0; SMASS\\=\u22121\\).  ---"}
{"file_name": "ADDGRID.md", "content": "ADDGRID= .TRUE. \\| .FALSE.   Default: **ADDGRID** \\= .FALSE.nDescription: ADDGRID determines whether an additional support grid is used for the evaluation of the augmentation charges.  --- When ADDGRID\\=.TRUE. VASP uses an additional support grid for the evaluation of the augmentation charges. This grid contains 8 times more points than the standard \"fine\" grid (NGXF\u00d7NGYF\u00d7NGZF). Whenever terms involving augmentation charges are evaluated, this additional grid is used. For instance: The augmentation charge is evaluated first in real space on this additional grid, FFT\\-transformed to reciprocal space, and then added to the total charge density on the standard \"fine\" grid (NGXF\u00d7NGYF\u00d7NGZF). The additional grid often helps to reduce the noise in the forces. In some cases, it even allows to perform calculations with NGXF\\=NGX.  Caveat:If there is any contribution in the density or potential at the highest Fourier component   G {\\\\displaystyle G}  ofthe conventional fine grid (given by NGXF\u00d7NGYF\u00d7NGZF), then Fourier interpolation to twice the grid density leads tooscillations in real space. These oscillations correspond to the largest wave vector   G  c u t {\\\\displaystyle G\\_{cut}}  i.e.   e  i  G  c u t  r {\\\\displaystyle e^{iG\\_{cut}r}}  .In real space, the charge density or potential will therefore alternate between positive and negativevalues on the ultra\\-fine grid, in particular, in regions where the density or potential are small.The terminus techniques is \"termination wiggles\".Although this is a somewhat oversimplified presentation, it is fairly straightforward to derive more rigorous results in 1D. The upshot is that Fourier\\-interpolation can lead to termination wiggles with oscillations   e  i  G  c u t  r {\\\\displaystyle e^{iG\\_{cut}r}}  in the interpolated potential (where   G  c u t {\\\\displaystyle G\\_{cut}}  corresponds tothe largest Fourier components on the fine grid). Fourier smoothing, which is in essence used for the augmentation densities, is generally less problematic, but it can also result in negative density in real space.Therefore, we recommend performing careful tests, on whether ADDGRID works as desired; please do not use this tag as default in all your calculations!"}
{"file_name": "CLL.md", "content": "CLL= \\[integer]nDescription: CLL selects the angular (l) quantum number of the excited electron when using ICORELEVEL.  --- This option is only used if ICORELEVEL\\=2 is set."}
{"file_name": "The_VASP_Manual.md", "content": "| Take a tour | Install VASP | Get a license || --- | --- | --- || Release notes | VASP website and news | Forum || Learn, examples, Wiki tutorials | py4vasp | Portal | Featured topics--------------- | **Category** | *subtopics (amongst others)* || --- | --- || Theoretical background | Pseudopotentials,  PAW formalism, phonons, machine learning force fields, hybrid functionals, GW approximation, etc. || Calculation setup | Installation, input files, pseudopotentials, output files, INCAR tags, How to's, etc. || Electronic minimization | Self\\-consistency cycle, blocked\\-Davidson algorithm, RMM\\-DIIS, direct optimization of the orbitals, preconditioning, density mixing, etc. || Electronic ground\\-state properties | Band structure, density of states, partial DOS and on\\-site charge and magnetization (LORBIT), electrostatics, charge density, potential, etc. || Spin degree of freedom | Spin\\-orbit coupling, noncollinear magnetism, spin spirals, constrained magnetism, etc. || Exchange\\-correlation functionals | LDA, GGA, meta\\-GGA, DFT\\+U, hybrid functionals, van der Waals functionals. || Symmetry and structure | Crystal symmetry, reciprocal space, surfaces, pair\\-correlation function for liquids, etc. || Ionic mimimization | Structure optimization, ionic\\-mimimization methods, forces, transition states, etc. || Molecular dynamics | Barostats, thermostats, ensembles, etc. || Ensemble properties | Monitoring geometric parameters, pair\\-correlation function, thermal conductivity, diffusion, etc. || Advanced molecular\\-dynamics sampling | Interface pinning, constrained molecular dynamics, metadynamics, thermodynamic integration, etc. || Machine\\-learned force fields | Training and application of force fields. || Phonons | Lattice vibrations,  electron\\-phonon interactions. || Response theory | Static and frequency\\-dependent dielectric properties, Berry phases, spectroscopy (UV, VIS, X\\-ray), phonons, etc. || Many\\-body perturbation theory | ACFDT, BSE, GW, MP2, CRPA. || Localized basis and projection | Obtaining Wannier functions, SCDM, partial DOS and on\\-site charge and magnetization (LORBIT), Constrained\\-random\\-phase approximation || Performance | Parallelization, memory management, profiling, etc. | Support------- If you have questions or run into trouble, please have a look at the known issues and/or post a question on the VASP Forum. | **Mind:** We offer support on a courtesy basis only, not as a contractual service. || --- |  --- Back to the top"}
{"file_name": "KPOINTS.md", "content": "The KPOINTS file specifies the Bloch vectors (**k** points) used to sample the Brillouin zone.Converging this sampling is one of the essential tasks in many calculations concerning the electronic minimization.A regular mesh is the most common choice to select **k** points:  ```Regular 4 x 4 x 4 mesh centered at Gamma  0Gamma4 4 4  ``` | **Tip:** Choose the number of points along each direction approximately inversely proportional to the corresponding length of the unit cell. || --- | A  band structure is often visualized along high\\-symmetry paths.Some external tools[\\[1]](#cite_note-bilbao:kvec-1)[\\[2]](#cite_note-seekpath-2) help to identify these points for materials of any symmetry.Use the template below to setup band\\-structure calculations.Alternatively, use a KPOINTS\\_OPT file to get the band structure as a postprocessing step after the regular calculation.  ```k points along high symmetry lines 40             \u00a0! number of points per lineline modefractional  0    0    0    \u0393  0.5  0.5  0    X   0.5  0.5  0    X  0.5  0.75 0.25 W   0.5  0.75 0.25 W  0    0    0    \u0393  ``` | **Tip:** If the KPOINTS file is not present, the tag KSPACING determines the **k**\\-point sampling. Use that option for a quick first run but prefer generating a regular mesh for production calculations. || --- | Coordinate system----------------- When specifying coordinates in the KPOINTS file, use one of the following coordinate systems: Fractional coordinate systemThe **k** points are linear combinations of the reciprocal lattice vectors   b  1 \u2026 3 {\\\\displaystyle {\\\\mathbf {b} }\\_{1\\\\ldots 3}}  k  \\=  x  1  b  1  \\+  x  2  b  2  \\+  x  3  b  3   . {\\\\displaystyle {\\\\mathbf {k} }\\=x\\_{1}{\\\\mathbf {b} }\\_{1}\\+x\\_{2}{\\\\mathbf {b} }\\_{2}\\+x\\_{3}{\\\\mathbf {b} }\\_{3}\\~.} Use the factors   x  1 \u2026 3 {\\\\displaystyle x\\_{1\\\\ldots 3}}  as the coordinates in KPOINTS.Cartesian coordinate systemThe coordinates   x  1 \u2026 3 {\\\\displaystyle x\\_{1\\\\ldots 3}}  directly correspond to the **k** point  k  \\=  2 \u03c0  a  (  x  1  ,  x  2  ,  x  3  )  . {\\\\displaystyle {\\\\mathbf {k} }\\={\\\\frac {2\\\\pi }{a}}(x\\_{1},x\\_{2},x\\_{3})\\~.} up to the scaling factor   2 \u03c0  /  a {\\\\displaystyle 2\\\\pi /a} . Here,   a {\\\\displaystyle a}  is the scaling parameter specified on the second line of the POSCAR file.**Example: face\\-centered\\-cubic (fcc) lattice** The following lattice vectors   a  i {\\\\displaystyle \\\\mathbf {a} \\_{i}}  span the unit cell:  a  1  \\= a  (  0  1  /  2  1  /  2  )  a  2  \\= a  (  1  /  2  0  1  /  2  )  a  3  \\= a  (  1  /  2  1  /  2  0  ) {\\\\displaystyle \\\\mathbf {a} \\_{1}\\=a{\\\\begin{pmatrix}0\\\\\\\\1/2\\\\\\\\1/2\\\\end{pmatrix}}\\\\qquad \\\\mathbf {a} \\_{2}\\=a{\\\\begin{pmatrix}1/2\\\\\\\\0\\\\\\\\1/2\\\\end{pmatrix}}\\\\qquad \\\\mathbf {a} \\_{3}\\=a{\\\\begin{pmatrix}1/2\\\\\\\\1/2\\\\\\\\0\\\\end{pmatrix}}} The corresponding reciprocal lattice vectors   b  i {\\\\displaystyle \\\\mathbf {b} \\_{i}}  are  b  1  \\=  2 \u03c0  a  (  \u2212 1  1  1  )  b  2  \\=  2 \u03c0  a  (  1  \u2212 1  1  )  b  3  \\=  2 \u03c0  a  (  1  1  \u2212 1  )   . {\\\\displaystyle \\\\mathbf {b} \\_{1}\\={\\\\frac {2\\\\pi }{a}}{\\\\begin{pmatrix}\\-1\\\\\\\\1\\\\\\\\1\\\\end{pmatrix}}\\\\qquad \\\\mathbf {b} \\_{2}\\={\\\\frac {2\\\\pi }{a}}{\\\\begin{pmatrix}1\\\\\\\\\\-1\\\\\\\\1\\\\end{pmatrix}}\\\\qquad \\\\mathbf {b} \\_{3}\\={\\\\frac {2\\\\pi }{a}}{\\\\begin{pmatrix}1\\\\\\\\1\\\\\\\\\\-1\\\\end{pmatrix}}\\~.} The following table shows several high\\-symmetry points of the fcc lattice expressed in Cartesian and fractional coordinates, respectively:  ```Point     Cartesian coordinates     Fractional coordinates            (units of 2pi/a)         (units of b1,b2,b3)----------------------------------------------------------  \u0393         (  0    0    0  )         (  0    0    0  )  X         (  0    0    1  )         ( 1/2  1/2   0  )  W         ( 1/2   0    1  )         ( 1/2  3/4  1/4 )  K         ( 3/4  3/4   0  )         ( 3/8  3/8  3/4 )  L         ( 1/2  1/2  1/2 )         ( 1/2  1/2  1/2 )  ``` Explicit **k**\\-point mesh-------------------------- When an explicit **k**\\-point mesh is provided, VASP uses exactly the provided points.The primary use case of this mode is to look at particular features in the band structure, e.g., for effective mass calculations.For regular meshes and band structures, we recommend using the automatic generation to avoid mistakes.Nevertheless, all other modes write the processed input in this format to the IBZKPT file, so understanding this format helps analyze mistakes in setting up the KPOINTS file.A typical example has the following format:  ```Explicit k-point list 4Cartesian0.0  0.0  0.0   10.0  0.0  0.5   10.0  0.5  0.5   20.5  0.5  0.5   4  ``` * The first line is treated as a comment line.* Provide the number of **k** points on the second line.* The first character on the third line specifies the coordinate system. Use *C*, *c*, *K*, or *k* to indicate Cartesian coordinates. Any other character is interpreted as fractional/reciprocal coordinates but we advise writing *fractional* or *reciprocal* to make this clear.* Each following line contains the coordinates and weight of one **k** point. VASP takes care that weights are properly normalized so only relative weight is important. Typically the weights correspond to the symmetry degeneracy of a **k** point. Use the explicit mode for * a (small) number of **k** points not forming a regular mesh.* the calculation of band structure when the line mode is not suitable (example: hybrid functionals).* the irreducible part of the genereralized regular meshes generated for a particular target sampling density.[\\[3]](#cite_note-wisesa:prb:2016-3)[\\[4]](#cite_note-morgan:cms:2020-4) Generate the corresponding KPOINTS files with KpLib[\\[5]](#cite_note-kplib-5) or autoGR[\\[6]](#cite_note-auto_gr-6). **Tetrahedron method** When using the tetrahedron method (see ISMEAR), extend the list of **k** points by a list of all tetrahedra.  ```Explicit k-point list 4Cartesian0.0  0.0  0.0   10.0  0.0  0.5   10.0  0.5  0.5   20.5  0.5  0.5   4Tetrahedra1  0.1833333333333336    1 2 3 4  ``` The line following the list of **k** point coordinates and weights must start with 'T' or 't'. On the next line, enter the number of tetrahedra and the volume weight common to all the tetrahedra. The volume weight is simply the ratio between the volume of a tetrahedron and the volume of the first Brillouin zone.Subsequently, list the symmetry\\-degeneration weight and the four corner points of each tetrahedron. The four integers represent the indices of the corners of the tetrahedron in the **k**\\-point list given above. Here, the counter starts at 1 and corresponds to the **k** point specified in the fourth line. | **Warning:** VASP does not renormalize the weights of the tetrahedra. Make sure they are appropriately normalized. || --- | | **Important:** Explicitly listing all the **k** points is not very convenient, especially in the context of the tetrahedron method. Keep in mind that the automatic modes generate the IBZKPT file in this format. For any nontrivial case, preferably modify an automatically\\-generated IBZKPT instead of building an explicit list from scratch. || --- | Regular **k**\\-point mesh------------------------- This mode will automatically generate a mesh where each lattice vector is subdivided into an explicitly defined number of subdivisions.It offers sufficient flexibility and stability and should be preferred for most production calculations.Choose the number of subdivisions   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}}  and  N  3 {\\\\displaystyle N\\_{3}}  in the KPOINTS file like this  ```Regular k-point mesh0             \u00a0! 0 -> determine number of k points automaticallyGamma         \u00a0! generate a Gamma centered mesh4  4  4       \u00a0! subdivisions N_1, N_2 and N_3 along the reciprocal lattice vectors0  0  0       \u00a0! optional shift of the mesh (s_1, s_2, s_3)  ``` * The first line is a comment line.* In the second line, set the number of **k** points to 0 to indicate an automatic mesh generation.* The first nonblank character of the third line determines the center of the mesh. The possible choice are \u0393\\-centered (*G*, *g*) or the Monkhorst\\-Pack scheme (*M*, *m*).[\\[7]](#cite_note-monkhorst:prb:1976-7)* Specify the desired number of subdivisions   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}}  and  N  3 {\\\\displaystyle N\\_{3}}  in the fourth line.* Optionally add a fifth line to shift the mesh by   (  s  1  ,  s  2  ,  s  3  ) {\\\\displaystyle (s\\_{1},s\\_{2},s\\_{3})}  with respect to the default. \u0393\\-centered meshThe following **k** points sample the Brillouin zone  k  \\=  \u2211  i \\= 1  3  n  i  \\+  s  i  N  i  b  i  \u2200  n  i  \u2208 \\ 0 ,  N  i  \\[ {\\\\displaystyle {\\\\mathbf {k} }\\=\\\\sum \\_{i\\=1}^{3}{\\\\frac {n\\_{i}\\+s\\_{i}}{N\\_{i}}}{\\\\mathbf {b} }\\_{i}\\\\qquad \\\\forall {n\\_{i}\\\\in \\[0,N\\_{i}\\[}} Monkhorst\\-Pack meshThe **k** point mesh results from this definition  k  \\=  \u2211  i \\= 1  3  n  i  \\+  s  i  \\+  1 \u2212  N  i  2  N  i  b  i  \u2200  n  i  \u2208 \\[ 0 ,  N  i  \\[ {\\\\displaystyle {\\\\mathbf {k} }\\=\\\\sum \\_{i\\=1}^{3}{\\\\frac {n\\_{i}\\+s\\_{i}\\+{\\\\frac {1\\-N\\_{i}}{2}}}{N\\_{i}}}{\\\\mathbf {b} }\\_{i}\\\\qquad \\\\forall {n\\_{i}\\\\in \\[0,N\\_{i}\\[}} The spacing between the points is the same for both meshes.The only difference is the shift   ( 1 \u2212  N  i  )  /  2 {\\\\displaystyle (1\\-N\\_{i})/2}  in the numerator of the Monkhorst\\-Pack mesh.For an odd number of subdivisions, this term is an integer, and therefore the two meshes agree due to periodic boundaries.When the number of subdivisions is even the \u0393\\-centered mesh is shifted by   s  i  \\= 1  /  2 {\\\\displaystyle s\\_{i}\\=1/2}  compared to the Monkhorst\\-Pack one. | **Important:** Monkhorst\\-Pack meshes may converge faster than the \u0393\\-centered ones. However, carefully read the [section on symmetry considerations to avoid breaking the symmetry with a Monkhorst\\-Pack mesh. || --- | **Guidelines for the choice of the subdivisions** As a rule of thumb, choose   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}} , and   N  3 {\\\\displaystyle N\\_{3}}  such that  N  1  :  N  2  :  N  3  \u2248  \\|  b  1  \\|  :  \\|  b  2  \\|  :  \\|  b  3  \\|   . {\\\\displaystyle N\\_{1}:N\\_{2}:N\\_{3}\\\\approx \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|\\~.} This guideline is also implemented for the automatic **k**\\-point generation using KSPACING.Nevertheless, specifying the   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}} , and   N  3 {\\\\displaystyle N\\_{3}}  manually ensures that changes in the lattice vectors do not affect the **k**\\-point mesh.When the primitive cell has (nearly) perpendicular axes (cubic, tetragonal, orthorhombic), this is equivalent to:  N  1  :  N  2  :  N  3  \u2248  1  \\|  a  1  \\|  :  1  \\|  a  2  \\|  :  1  \\|  a  3  \\|   . {\\\\displaystyle N\\_{1}:N\\_{2}:N\\_{3}\\\\approx {\\\\frac {1}{\\|\\\\mathbf {a} \\_{1}\\|}}:{\\\\frac {1}{\\|\\\\mathbf {a} \\_{2}\\|}}:{\\\\frac {1}{\\|\\\\mathbf {a} \\_{3}\\|}}\\~.} Of course, this only provides a guide for the ratios between the subsections. The actual density of the **k** point mesh has to be increased until some relevant output quantity of the calculation is converged. Symmetry reduction of the mesh------------------------------ VASP determines the symmetry of the system.For ISYM   \u2265 {\\\\displaystyle \\\\geq }  0, the automatically generated **k**\\-point meshes are reduced to the irreducible subset.Every **k** point acquires a weight following their symmetry multiplicity.This can significantly reduce the total number of **k** points. | **Important:** To enable an efficient symmetry reduction, the (shifted) regular mesh of **k** points should conserve the point\\-group symmetry of the reciprocal lattice. Specifically, the generating lattice (      g   i   \\=   k   i    /   N  i     {\\\\displaystyle \\\\mathbf {g} \\_{i}\\=\\\\mathbf {k} \\_{i}/N\\_{i}}   _{i}=\\mathbf {k} _{i}/N_{i}}) should belong to the same class of Bravais lattice as the reciprocal lattice. || --- | Consequently, refrain from using a shifted regular mesh for some Bravais lattices, see table.Importantly, this includes the default Monkhorst\\-Pack mesh for even numbers of subdivisions.Furthermore, the reciprocal lattice vectors do not in general align with lattice vectors.There is typically a difference in the subdivisions obtained from the inverse of the lattice vectors or the reciprocal lattice vectors.  1  \\|  a  1  \\|  :  1  \\|  a  2  \\|  :  1  \\|  a  3  \\|  \u2260  \\|  b  1  \\|  :  \\|  b  2  \\|  :  \\|  b  3  \\| in general {\\\\displaystyle {\\\\frac {1}{\\|\\\\mathbf {a} \\_{1}\\|}}:{\\\\frac {1}{\\|\\\\mathbf {a} \\_{2}\\|}}:{\\\\frac {1}{\\|\\\\mathbf {a} \\_{3}\\|}}\\\eq \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|\\\\qquad {\\\\text{in general}}} In some special cases, the two options are equal, e.g., when the length of all vectors is the same, or they are mutually perpendicular.Unfortunately, either choice yields incompatible **k** point meshes for some of the Bravais lattices.Consult the table below to make an informed choice depending on the symmetry of the system. | Bravais lattice | variant | mesh choices | subsection choices || --- | --- | --- | --- || triclinic | primitive | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || monoclinic | primitive | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || base\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || orthorhombic | primitive | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || base\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || body\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}} || face\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered | \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || tetragonal | primitive | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || body\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}} || hexagonal | rhombohedral | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || hexagonal | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || cubic | primitive | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || body\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered, Monkhorst Pack | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} || face\\-centered | \u0393   {\\\\displaystyle \\\\Gamma }  \\Gamma \\-centered | \\|    a   1     \\|   \u2212 1   :  \\|    a   2     \\|   \u2212 1   :  \\|    a   3     \\|   \u2212 1     {\\\\displaystyle \\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}   _{1}|^{-1}:|\\mathbf {a} _{2}|^{-1}:|\\mathbf {a} _{3}|^{-1}},      \\|    b   1    \\|  :  \\|    b   2    \\|  :  \\|    b   3    \\|    {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}   _{1}|:|\\mathbf {b} _{2}|:|\\mathbf {b} _{3}|} | | **Tip:** VASP issues an error when it detects an incompatible **k**\\-point mesh. The specific error message depends on the particular setup but includes the name of the routine *IBZKPT*, some warning about the *generating k\\-lattice*, and some suggestions to overcome the problem. || --- | Summarizing the information in the table above * Use **only**   \u0393 {\\\\displaystyle \\\\Gamma } \\-centered meshes for face\\-centered cubic (fcc), hexagonal, and fcc\\-orthorhombic crystalline lattices.* Choose the ratios of the subdivisions   N  1  :  N  2  :  N  3  \\=  \\|  a  1  \\|  \u2212 1  :  \\|  a  2  \\|  \u2212 1  :  \\|  a  3  \\|  \u2212 1 {\\\\displaystyle N\\_{1}:N\\_{2}:N\\_{3}\\=\\|\\\\mathbf {a} \\_{1}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{2}\\|^{\\-1}:\\|\\\\mathbf {a} \\_{3}\\|^{\\-1}}  for *body\\-centered tetragonal* and *body\\-centered orthorhombic* lattices. Keep in mind that the KSPACING uses the reciprocal lattice vectors so may not be suitable for these symmetries.* For *face\\-centered orthorhombic* crystal structures, choose subdivisions according to   N  1  :  N  2  :  N  3  \\=  \\|  b  1  \\|  :  \\|  b  2  \\|  :  \\|  b  3  \\| {\\\\displaystyle N\\_{1}:N\\_{2}:N\\_{3}\\=\\|\\\\mathbf {b} \\_{1}\\|:\\|\\\\mathbf {b} \\_{2}\\|:\\|\\\\mathbf {b} \\_{3}\\|}  .* For any other symmetry, all combinations should work but a change to other subdivisions or meshes may overcome possible issues. Solve problems with the primitive cells of the body\\-centered tetragonal and body/face\\-centered orthorhombic Bravais lattices with one of these options: 1. Choose   N  1  \\=  N  2  \\=  N  3 {\\\\displaystyle N\\_{1}\\=N\\_{2}\\=N\\_{3}} . For   N \u00d7 N \u00d7 N {\\\\displaystyle N\\\\times N\\\\times N}  Monkhorst\\-Pack meshes the reciprocal lattice is always of the same Bravais lattice as the generating lattice. For body\\-centered tetragonal and face\\-centered orthorhombic primitive cells, the reciprocal lattices are body\\-centered tetragonal and body\\-centered orthorhombic, respectively. Therefore, choosing equal subdivisions is justified because the length of all reciprocal lattice vectors is the same   \\|  b  1  \\|  \\=  \\|  b  2  \\|  \\=  \\|  b  3  \\| {\\\\displaystyle \\|\\\\mathbf {b} \\_{1}\\|\\=\\|\\\\mathbf {b} \\_{2}\\|\\=\\|\\\\mathbf {b} \\_{3}\\|}  .2. A simple but computationally\\-expensive option is to change to the conventional cell of the structure. For the body\\-centered tetragonal/orthorhombic structure, the conventional cell is two times bigger than the primitive cell.3. Alternatively, define the **k**\\-point mesh for the conventional cell. This approach requires a generalized regular mesh introduced in the next section and is demonstrated for the example of a body\\-centered orthorhombic lattice. Generalized regular meshes-------------------------- When more control about the generated mesh is desired, one can specify the generating vectors explicitly.A typical use case would be to generate the mesh for the *conventional* unit cell and apply it to the *primitive* one.Build a KPOINTS file for this mode starting from this template  ```Automatic generation 0Cartesian0.25 0.00 0.000.00 0.25 0.000.00 0.00 0.250.00 0.00 0.00  ``` The mode is activated by specifying the coordinate system with the first nonblank character in line 3\\.A *C*, *c*, *K* or *k* character determines that the generating basis vectors are in Cartesian coordinates.Use *r* or *R* to select the reciprocal coordinate system instead.The latter is also the default used if VASP cannot interpret the provided character but we recommend not relying on this behavior.Otherwise, the introduction of further automatic modes in the future versions of VASP may change the interpretation of the KPOINTS file.  VASP generates three vectors   g  1 {\\\\displaystyle \\\\mathbf {g} \\_{1}}  ,  g  2 {\\\\displaystyle \\\\mathbf {g} \\_{2}} , and   g  3 {\\\\displaystyle \\\\mathbf {g} \\_{3}}  from the coefficients   x  i {\\\\displaystyle x\\_{i}}  given in line 4\u20136\\.Depending on the selected coordinate system these vectors are either multiples of the reciprocal lattice vectors  b  i {\\\\displaystyle \\\\mathbf {b} \\_{i}}  (reciprocal) or simply multiplying the coefficients by   2 \u03c0  /  a {\\\\displaystyle 2\\\\pi /a}  (Cartesian).Here   a {\\\\displaystyle a}  is the scaling parameter you have specified on the second line of the POSCAR file. | **Important:** The generating vectors       g   1     {\\\\displaystyle \\\\mathbf {g} \\_{1}}   _{1}},       g   2     {\\\\displaystyle \\\\mathbf {g} \\_{2}}   _{2}}, and       g   3     {\\\\displaystyle \\\\mathbf {g} \\_{3}}   _{3}} must be commensurate with the reciprocal lattice. This means       b   i   \\=   \u2211  j    M  i j     g   j      {\\\\displaystyle \\\\mathbf {b} \\_{i}\\=\\\\textstyle \\\\sum \\_{j}M\\_{ij}\\\\mathbf {g} \\_{j}}   _{i}=\\textstyle \\sum _{j}M_{ij}\\mathbf {g} _{j}} where the matrix     M   {\\\\displaystyle M}  M contains only integer entries. If this is not the case the code will exit in error. || --- | Combined with the shift (  s  1 {\\\\displaystyle s\\_{1}}  ,  s  2 {\\\\displaystyle s\\_{2}}  ,  s  3 {\\\\displaystyle s\\_{3}} ) specified in the last line, VASP uses the generating vectors   g  i {\\\\displaystyle \\\\mathbf {g} \\_{i}}  to construct the **k**\\-point mesh  k  \\=  \u2211  i  g  i  (  n  i  \\+  s  i  )  n  i  \u2208 \\ 0 ,  N  i  \\[ {\\\\displaystyle {\\\\mathbf {k} }\\=\\\\sum \\_{i}{\\\\mathbf {g} }\\_{i}(n\\_{i}\\+s\\_{i})\\\\qquad n\\_{i}\\\\in \\[0,N\\_{i}\\[} where VASP chooses the   N  i {\\\\displaystyle N\\_{i}}  to include all possible points of the generating mesh in the first Brillouin zone. The [regular **k**\\-point meshes are a subset of the generalized regular meshes, for which  g  i  \\=  b  i  /  N  i   . {\\\\displaystyle \\\\mathbf {g} \\_{i}\\=\\\\mathbf {b} \\_{i}/N\\_{i}\\~.} Here, the generating lattice vectors are integer subdivisions of the reciprocal lattice vectors according to the   N  i {\\\\displaystyle N\\_{i}}  defined in the KPOINTS file. For instance, the generalized regular mesh given by  ```Automatic generation 0Reciprocal 0.25 0.00 0.00 0.00 0.25 0.00 0.00 0.00 0.25 0.50 0.50 0.50  ``` is equivalent to the Monkhorst\\-Pack mesh specified by  ```Automatic generation 0Monkhorst-pack 4 4 4 0 0 0  ```   A typical use\\-case for generalized regular meshes is to generate a **k**\\-point mesh based on the *conventional* cell of a particular Bravais lattice to be used with the *primitive* cell of that lattice (see the subsection on symmetry considerations).As an example, consider the primitive cell of a *body\\-centered orthorhombic* lattice:  A \\= a  (  \u2212 1  /  2  b  /  2 a  c  /  2 a  1  /  2  \u2212 b  /  2 a  c  /  2 a  1  /  2  b  /  2 a  \u2212 c  /  2 a  ) {\\\\displaystyle A\\=a\\\\left({\\\\begin{array}{rrr}\\-1/2\\&b/2a\\&c/2a\\\\\\\\1/2\\&\\-b/2a\\&c/2a\\\\\\\\1/2\\&b/2a\\&\\-c/2a\\\\\\\\\\\\end{array}}\\\\right)} where the rows of   A {\\\\displaystyle A}  represent the lattice vector of the primitive cell.The corresponding conventional cell is given by  A \\= a  (  1  0  0  0  b  /  a  0  0  0  c  /  a  ) {\\\\displaystyle A\\=a\\\\left({\\\\begin{array}{rrr}1\\&0\\&0\\\\\\\\0\\&b/a\\&0\\\\\\\\0\\&0\\&c/a\\\\\\\\\\\\end{array}}\\\\right)} and its reciprocal lattice by  B \\=  2 \u03c0  a  (  1  0  0  0  a  /  b  0  0  0  a  /  c  )   . {\\\\displaystyle B\\={\\\\frac {2\\\\pi }{a}}\\\\left({\\\\begin{array}{rrr}1\\&0\\&0\\\\\\\\0\\&a/b\\&0\\\\\\\\0\\&0\\&a/c\\\\\\\\\\\\end{array}}\\\\right)\\~.} Then the following generating lattice based on the reciprocal lattice of the conventional cell   G \\=  2 \u03c0  a  (  1  /  N  1  0  0  0  a  /  b  N  2  0  0  0  a  /  c  N  3  ) {\\\\displaystyle G\\={\\\\frac {2\\\\pi }{a}}\\\\left({\\\\begin{array}{rrr}1/N\\_{1}\\&0\\&0\\\\\\\\0\\&a/bN\\_{2}\\&0\\\\\\\\0\\&0\\&a/cN\\_{3}\\\\\\\\\\\\end{array}}\\\\right)} yields a roughly uniform sampling of the Brillouin zone when   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}} , and   N  3 {\\\\displaystyle N\\_{3}}  are chosen such that:  N  1  :  N  2  :  N  3  \u2248 1 :  a b  :  a c {\\\\displaystyle N\\_{1}:N\\_{2}:N\\_{3}\\\\approx 1:{\\\\frac {a}{b}}:{\\\\frac {a}{c}}} For instance, for a body\\-centered orthorhombic primitive cell with   a \\= 5 ,  b  /  a \\=1\\.2  c  /  a \\=0\\.5 {\\\\displaystyle a\\=5,\\\\;b/a\\=1\\.2\\\\;c/a\\=0\\.5} , here given in POSCAR file format:  ```body-centered orthorhombic primitive cell 5.0-0.500000  0.600000  0.250000 0.500000 -0.600000  0.250000 0.500000  0.600000 -0.250000 1direct0.000000 0.000000 0.000000  ``` this following KPOINTS file  ```Generalized regular mesh 0Cartesian 0.50000000  0.00000000  0.00000000 0.00000000  0.41666667  0.00000000 0.00000000  0.00000000  0.50000000 0.00000000  0.00000000  0.00000000  ``` corresponds to the aforementioned generating lattice for   N  1  \\= 2 {\\\\displaystyle N\\_{1}\\=2}  ,  N  2  \\= 2 {\\\\displaystyle N\\_{2}\\=2} , and   N  3  \\= 4 {\\\\displaystyle N\\_{3}\\=4}  . Furthermore, using generalized regular meshes potentially requires fewer **k** points compared to Monkhorst\\-Pack meshes to converge total energy calculations.[\\[3]](#cite_note-wisesa:prb:2016-3)[\\[4]](#cite_note-morgan:cms:2020-4)Specifically this statement applies to the number of **k** points in the irreducible part of the Brillouin zone after symmetry reduction.For the moment, however, VASP does not automatically construct optimal generalized regular **k**\\-point meshes.But external tools[\\[5]](#cite_note-kplib-5)[\\[6]](#cite_note-auto_gr-6) construct meshes with certain target sampling density in the spirit of the aforementioned publications. Band\\-structure calculations---------------------------- When properties depend on the **k** vector, it is often convenient to visualize the property along high\\-symmetry lines.The line mode generates **k** points between user\\-defined points in the Brillouin zone.The most common use case is analyzing the electronic band structure. | **Warning:** The mesh generated by this mode is not suitable for self\\-consistent calculations. Please set ICHARG \\= 11 to avoid updating the density. || --- | | **Mind:** For meta\\-GGA and hybrid functionals, a regular mesh must always be provided. Refer to band\\-structure calculations using meta\\-GGA functionals *or* using hybrid functionals, respectively. || --- | Build the KPOINTS based on this template  ```k points along high symmetry lines 40             \u00a0! number of points per lineline modefractional  0    0    0    \u0393  0.5  0.5  0    X   0.5  0.5  0    X  0.5  0.75 0.25 W   0.5  0.75 0.25 W  0    0    0    \u0393  ``` * The first line is a comment line.* Specify the number of points per line segment on the second line.* The line mode activates when the first nonblank character on the third line is an *L* or *l* (for *line mode*)* The fourth line defines the coordinate system. Use Cartesian (*C*, *c*, *K*, or *k*) or fractional (any other character) coordinates.* Afterwards, any pair of lines define one path through the Brillouin zone. The empty lines and the label of the high\\-symmetry points are not required but simplify understanding the KPOINTS file. py4vasp uses the labels for the band structure plots. The generated **k**\\-point mesh depends on the selected coordinate system.VASP produces equidistant **k** points for each segment such that the total of points including the endpoints equals the required number.Specifically for the template above, 40 points from   \u0393 {\\\\displaystyle \\\\Gamma }  to X, 40 points from X to W, and 40 points from W to   \u0393 {\\\\displaystyle \\\\Gamma }  .Because the endpoints are included every time, this generates two X and W points. Transforming the same template to Cartesian coordinates produces  ```k points along high symmetry lines 40             \u00a0! number of points per lineline modeCartesian  0   0   0   \u0393  0   0   1   X   0   0   1   X  0.5 0   1   W   0.5 0   1   W  0   0   1   \u0393  ``` External tools[\\[1]](#cite_note-bilbao:kvec-1)[\\[2]](#cite_note-seekpath-2) are useful to decide which paths in the Brillouin zone to include.The tools provide the coordinates and the labels for a given structure.Because these paths depend on the symmetry, take special care that the analysis is not tainted by finite precision or rounding.Also, keep in mind that the primitive and the conventional unit cell have different reciprocal coordinate systems. Here is an example of a hexagonal structure  ```k-points along high symmetry lines for hexagonal structure 40linereciprocal0.000    0.000    0.500  A0.000    0.000    0.000  Gamma 0.000    0.000    0.000  Gamma 0.500    0.000    0.000  M 0.500    0.000    0.000  M0.333333 0.333333 0.000  K  0.333333 0.333333 0.000  K0.000    0.000    0.000  Gamma  ``` | **Mind:** The primary use of this particular mode of **k**\\-point generation is the calculation of DFT band structures. Because the mesh does not yield a good electronic density, it should only be used on a converged density. Therefore, run a calculation using a regular **k**\\-point mesh first. Freeze this density by setting ICHARG \\= 11 and run a non\\-self\\-consistent calculation with the line\\-mode **k**\\-point mesh afterward. As of VASP.6\\.3, the KPOINTS\\_OPT file runs these two steps in a single calculation. It uses the same format and its presence triggers the postprocessing step. Use it for band\\-structure calculations with hybrid functionals to avoid the more cumbersome manual specification. || --- | Automatic **k**\\-point mesh--------------------------- | **Deprecated:** The KSPACING tag provides almost the same functionality. Preferably use that method instead. || --- | The following KPOINTS file generates a regular   \u0393 {\\\\displaystyle \\\\Gamma } \\-centered **k**\\-point.The subdivisions   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}} , and   N  3 {\\\\displaystyle N\\_{3}}  are along the reciprocal lattice vectors   b  1 {\\\\displaystyle \\\\mathbf {b} \\_{1}}  ,  b  2 {\\\\displaystyle \\\\mathbf {b} \\_{2}} , and   b  3 {\\\\displaystyle \\\\mathbf {b} \\_{3}} , respectively.  ```Fully automatic mesh0             \u00a0! 0 -> automatic generation scheme Auto          \u00a0! fully automatic  10          \u00a0! length (R_k)  ``` * The first line is a comment line.* Automatically determine the number of **k** points by setting '0' on the second line.* The first nonblank character in the third line is *A* or *a* activating the fully\\-automatic mode.* The fourth line defines a length (  R  k {\\\\displaystyle R\\_{k}} ) that determines the subdivisions   N  1 {\\\\displaystyle N\\_{1}}  ,  N  2 {\\\\displaystyle N\\_{2}} , and   N  3 {\\\\displaystyle N\\_{3}}  . For every lattice vector   b  i {\\\\displaystyle \\\\mathbf {b} \\_{i}}  the number of subdivisions is calculated as  N  i  \\=  int  (  max ( 1 ,  R  k  \\|  b  i  \\|  \\+0\\.5 )  )   . {\\\\displaystyle N\\_{i}\\={\\\\text{int}}\\\\left(\\\\max(1,R\\_{k}\\|{\\\\mathbf {b} }\\_{i}\\|\\+0\\.5\\)\\\\right)\\~.} Note that this similar to the KSPACING tag, when the length   R  k  \\= 2 \u03c0  / KSPACING {\\\\displaystyle R\\_{k}\\=2\\\\pi /{\\\\text{KSPACING}}}  .The generated mesh is centered at   \u0393 {\\\\displaystyle \\\\Gamma }  k  \\=  \u2211  i \\= 1  3  b  i  n  i  N  i  \u2200  n  i  \u2208 \\ 0 ,  N  i  \\[ {\\\\displaystyle {\\\\mathbf {k} }\\=\\\\sum \\_{i\\=1}^{3}{\\\\mathbf {b} }\\_{i}{\\\\frac {n\\_{i}}{N\\_{i}}}\\\\qquad \\\\forall n\\_{i}\\\\in \\[0,N\\_{i}\\[} Useful values for the length vary between   R  k  \\= 10 {\\\\displaystyle R\\_{k}\\=10}  (large gap insulators) and   R  k  \\= 100 {\\\\displaystyle R\\_{k}\\=100}  (*d* metals).Please verify that changes to   R  k {\\\\displaystyle R\\_{k}}  do not affect the quantity of interest.For production calculations, preferably specify the mesh dimensions explicitly to avoid discontinuities between different cell sizes. Related tags and sections------------------------- [KSPACING, KPOINTS\\_OPT, IBZKPT, Number of k points and method for smearing"}
{"file_name": "Calculate_U_for_LSDA+U.md", "content": "Task---- In this exercise, you will calculate the U parameter for the DFT\\+U treatment of Ni *d*\\-electrons in NiO using the linear response *ansatz* of Cococcioni *et al.*.[\\[1]](#cite_note-cococcioni:2005-1) POSCAR------------------------------ For this calculation we will use a 2\u00d72\u00d72 supercell of AFM\\-II NiO:  ```AFM  NiO   4.03500000  2.0000000000   1.0000000000   1.0000000000  1.0000000000   2.0000000000   1.0000000000  1.0000000000   1.0000000000   2.0000000000   1 15   16 Direct 0.0000000000   0.0000000000   0.0000000000  0.2500000000   0.2500000000   0.2500000000  0.0000000000   0.0000000000   0.5000000000  0.2500000000   0.2500000000   0.7500000000  0.0000000000   0.5000000000   0.0000000000  0.2500000000   0.7500000000   0.2500000000  0.0000000000   0.5000000000   0.5000000000  0.2500000000   0.7500000000   0.7500000000  0.5000000000   0.0000000000   0.0000000000  0.7500000000   0.2500000000   0.2500000000  0.5000000000   0.0000000000   0.5000000000  0.7500000000   0.2500000000   0.7500000000  0.5000000000   0.5000000000   0.0000000000  0.7500000000   0.7500000000   0.2500000000  0.5000000000   0.5000000000   0.5000000000  0.7500000000   0.7500000000   0.7500000000  0.1250000000   0.1250000000   0.1250000000  0.3750000000   0.3750000000   0.3750000000  0.1250000000   0.1250000000   0.6250000000  0.3750000000   0.3750000000   0.8750000000  0.1250000000   0.6250000000   0.1250000000  0.3750000000   0.8750000000   0.3750000000  0.1250000000   0.6250000000   0.6250000000  0.3750000000   0.8750000000   0.8750000000  0.6250000000   0.1250000000   0.1250000000  0.8750000000   0.3750000000   0.3750000000  0.6250000000   0.1250000000   0.6250000000  0.8750000000   0.3750000000   0.8750000000  0.6250000000   0.6250000000   0.1250000000  0.8750000000   0.8750000000   0.3750000000  0.6250000000   0.6250000000   0.6250000000  0.8750000000   0.8750000000   0.8750000000  ``` Atoms 1\\-16 are Ni, and atoms 17\\-32 are O. Note that the Ni atoms are split into two groups: atom 1, and atom 2\\-15\\.This trick breaks the symmetry of the Ni sub\\-lattice and allows us to treat atom 1 differently from atom 2\\-15\\.Our POTCAR file has to reflect the fact that we now formally have 3 \"species\" (2 \u00d7Ni \\+ 1\u00d7O),*i.e.*, we concatenate two Ni POTCAR files and one O POTCAR file:  ```cat Ni/POTCAR Ni/POTCAR O/POTCAR > POTCAR  ``` To check whether you have a suitable POTCAR type:  ```grep TITEL POTCAR  ``` This should yield something like:  ```   TITEL  = PAW Ni 02Aug2007   TITEL  = PAW Ni 02Aug2007   TITEL  = PAW O 22Mar2012  ``` *i.e.*, two Ni entries followed by one O entry. KPOINTS---------------------------------  ```Gamma only 0Monkhorst 1 1 1  0 0 0  ``` The DFT groudstate------------------ We will calculate the DFT ground state of our NiO system with the following INCAR:  ```SYSTEM       = NiO AFM  PREC         = A EDIFF        = 1E-6 ISMEAR       = 0SIGMA        = 0.2 ISPIN        = 2MAGMOM       = 1.0 -1.0  1.0 -1.0  \\               1.0 -1.0  1.0 -1.0  \\               1.0 -1.0  1.0 -1.0  \\               1.0 -1.0  1.0 -1.0  \\               16*0.0 LORBIT       = 11 LMAXMIX      = 4   ``` Instrumental here is that we correctly specify the initial magnetic moments (by means of MAGMOM\\-tag).The setting above is consistent with the AFM\\-II magnetic structure: alternating ferromagnetic Ni (111\\)\\-layers. Secondly, we set LORBIT\\=11: at the end of the OUTCAR file, VASP will write the number of (*d*\\-) electrons per site. This information we will need to compute the *U*\\-parameter. Last but not least, we set LMAXMIX\\=4: this is needed to be able to perform non\\-selfconsistent (ICHARG\\=11) DFT\\+U calculations (LDAUTYPE\\=3) in the following.For this reason we will keep a copy of the CHGCAR file (and the WAVECAR file as well):  ```cp CHGCAR  CHGCAR.0cp WAVECAR WAVECAR.0  ```   The information most relevant to the task at hand you will find near the end of the OUTCAR file:  ``` total charge # of ion       s       p       d       tot  ------------------------------------------    1        0.342   0.490   8.439   9.270    2        0.342   0.490   8.438   9.269    3        0.342   0.490   8.438   9.270    4        0.342   0.490   8.438   9.269    5        0.342   0.490   8.438   9.270    6        0.342   0.490   8.438   9.269    7        0.342   0.490   8.438   9.269    8        0.342   0.490   8.438   9.269    9        0.342   0.490   8.438   9.270   10        0.342   0.490   8.438   9.269   11        0.342   0.490   8.438   9.269   12        0.342   0.490   8.438   9.269   13        0.342   0.490   8.438   9.269   14        0.342   0.490   8.438   9.269   15        0.342   0.490   8.438   9.269   16        0.342   0.490   8.438   9.269   17        1.564   3.455   0.000   5.019   18        1.564   3.455   0.000   5.019 . . . magnetization (x) # of ion       s       p       d       tot------------------------------------------    1        0.001  -0.020   1.098   1.079    2       -0.001   0.020  -1.098  -1.080    3        0.001  -0.020   1.098   1.079    4       -0.001   0.020  -1.098  -1.080    5        0.001  -0.020   1.098   1.079    6       -0.001   0.020  -1.098  -1.080    7        0.001  -0.020   1.098   1.080    8       -0.001   0.020  -1.098  -1.080    9        0.001  -0.020   1.098   1.079   10       -0.001   0.020  -1.098  -1.080   11        0.001  -0.020   1.098   1.080   12       -0.001   0.020  -1.098  -1.080   13        0.001  -0.020   1.098   1.080   14       -0.001   0.020  -1.098  -1.080   15        0.001  -0.020   1.098   1.080   16       -0.001   0.020  -1.098  -1.080   17       -0.000   0.000   0.000   0.000   18        0.000  -0.000   0.000  -0.000   19        0.000  -0.000   0.000  -0.000  . . .  ``` This shows that in the DFT grounstate mostly*d*\\-electrons are attributed to atomic sites 1\\-16 with anti\\-ferromagnetic ordering. Non\\-selfconsistent response---------------------------- The next step is to calculate the following response function:  \u03c7  I J  0  \\=  \u2202  N  I  N S C F  \u2202  V  J {\\\\displaystyle \\\\chi \\_{IJ}^{0}\\={\\\\frac {\\\\partial N\\_{I}^{\\\\rm {NSCF}}}{\\\\partial V\\_{J}}}} This is the change in the number of *d*\\-electrons on site *I* due to an additional spherical potential acting on the *d*\\-manifold on site *J*.In the following we will assume this response to be zero unless *I\\=J*. To add an additional spherical potential on the site of atom 1 that acts on the *d*\\-manifold we specify the following:  ```LDAU         = .TRUE.LDAUTYPE     =  3LDAUL        =  2 -1 -1LDAUU        =  0.10 0.00 0.00LDAUJ        =  0.10 0.00 0.00  ``` Note that for LDAUTYPE\\=3 the LDAUU and LDAUJ tags specify the strength (in *eV*) of the spherical potential acting on the spin\\-up and spin\\-down *d*\\-manifolds, respectively. In the present step, we want to calculate the *non\\-selfconsistent* response to this additional potential.This is done by reading the charge density from the previous DFT ground\\-state calculations and by keeping it fixed during the electronic minimization procedure:  ```ICHARG       = 11  ``` N.B.: be sure to use the charge density of the DFT groundstate calculation:  ```cp CHGCAR.0  CHGCARcp WAVECAR.0 WAVECAR  ``` After running this calculation, you will notice that due to the additional potential, the number of *d*\\-electrons on atom 1 has changed w.r.t. the DFT groundstate (check the OUTCAR file again):  ``` total charge # of ion       s       p       d       tot------------------------------------------    1        0.342   0.490   8.488   9.319    2        0.342   0.489   8.432   9.263    3        0.342   0.490   8.438   9.269    4        0.342   0.490   8.438   9.269    5        0.342   0.490   8.438   9.269    6        0.342   0.490   8.438   9.269    7        0.342   0.490   8.435   9.266    8        0.342   0.490   8.438   9.269    9        0.342   0.490   8.438   9.269   10        0.342   0.490   8.438   9.269   11        0.342   0.490   8.435   9.266   12        0.342   0.490   8.438   9.269   13        0.342   0.490   8.435   9.266   14        0.342   0.490   8.438   9.269   15        0.342   0.490   8.430   9.261   16        0.342   0.489   8.432   9.263   17        1.564   3.455   0.000   5.019   18        1.564   3.455   0.000   5.018   19        1.564   3.454   0.000   5.018   20        1.564   3.454   0.000   5.018   21        1.564   3.454   0.000   5.018   22        1.564   3.454   0.000   5.018   23        1.564   3.454   0.000   5.018   24        1.564   3.454   0.000   5.018   25        1.564   3.454   0.000   5.018   26        1.564   3.454   0.000   5.018   27        1.564   3.454   0.000   5.018   28        1.564   3.454   0.000   5.018   29        1.564   3.454   0.000   5.018   30        1.564   3.454   0.000   5.018   31        1.564   3.455   0.000   5.018   32        1.564   3.455   0.000   5.019--------------------------------------------------tot         30.488  63.101 135.027 228.617  ``` The change in the number of *d*\\-electrons on atomic site 1 is found to be:  \u0394  N  1  N S C F  \\=4\\.488 \u22124\\.438 \\=0\\.050 {\\\\displaystyle \\\\Delta N\\_{1}^{\\\\rm {NSCF}}\\=4\\.488\\-4\\.438\\=0\\.050} and hence  \u03c7  11  0  \\= 0\\.0500\\.1  \\=0\\.50  ( e V  )  \u2212 1 {\\\\displaystyle \\\\chi \\_{11}^{0}\\={\\\\frac {0\\.050}{0\\.1}}\\=0\\.50\\\\;(eV)^{\\-1}} Selfconsistent response----------------------- The *selfconsistent* reponse function:  \u03c7  I J  \\=  \u2202  N  I  S C F  \u2202  V  J {\\\\displaystyle \\\\chi \\_{IJ}\\={\\\\frac {\\\\partial N\\_{I}^{\\\\rm {SCF}}}{\\\\partial V\\_{J}}}} is computed similarly:  ```LDAU         = .TRUE.LDAUTYPE     =  3LDAUL        =  2 -1 -1LDAUU        =  0.10 0.00 0.00LDAUJ        =  0.10 0.00 0.00  ``` **N.B.I**: The only difference between this calculation and the previous calculation of the *non\\-selfconsistent* response is that now we **do not set** ICHARG\\=11, *i.e*, now the charge density may change. **N.B.II**: To speed things up, it is a good idea to restart this calculation from the WAVECAR file of the previous non\\-selfconsistent response calculation. After this calculation has finished, you should again inspect the number of *d*\\-electrons on atomic site 1:  ``` total charge # of ion       s       p       d       tot------------------------------------------    1        0.341   0.488   8.452   9.281    2        0.342   0.490   8.438   9.269    3        0.342   0.490   8.438   9.269    4        0.342   0.490   8.438   9.269    5        0.342   0.490   8.438   9.269    6        0.342   0.490   8.438   9.269    7        0.342   0.490   8.438   9.269    8        0.342   0.490   8.438   9.269    9        0.342   0.490   8.438   9.269   10        0.342   0.490   8.438   9.269   11        0.342   0.490   8.438   9.269   12        0.342   0.490   8.438   9.269   13        0.342   0.490   8.438   9.269   14        0.342   0.490   8.438   9.269   15        0.342   0.490   8.438   9.269   16        0.342   0.490   8.438   9.269   17        1.564   3.455   0.000   5.019   18        1.564   3.455   0.000   5.019   19        1.564   3.455   0.000   5.018   20        1.564   3.455   0.000   5.019   21        1.564   3.455   0.000   5.018   22        1.564   3.455   0.000   5.019   23        1.564   3.455   0.000   5.019   24        1.564   3.455   0.000   5.018   25        1.564   3.455   0.000   5.018   26        1.564   3.455   0.000   5.019   27        1.564   3.455   0.000   5.019   28        1.564   3.455   0.000   5.018   29        1.564   3.455   0.000   5.019   30        1.564   3.455   0.000   5.018   31        1.564   3.455   0.000   5.019   32        1.564   3.455   0.000   5.019--------------------------------------------------tot         30.488  63.107 135.022 228.617  ``` The change in the number of *d*\\-electrons on atomic site 1 is found to be:  \u0394  N  1  N S C F  \\=4\\.452 \u22124\\.438 \\=0\\.012 {\\\\displaystyle \\\\Delta N\\_{1}^{\\\\rm {NSCF}}\\=4\\.452\\-4\\.438\\=0\\.012} and hence  \u03c7  11  \\= 0\\.0120\\.1  \\=0\\.12  ( e V  )  \u2212 1 {\\\\displaystyle \\\\chi \\_{11}\\={\\\\frac {0\\.012}{0\\.1}}\\=0\\.12\\\\;(eV)^{\\-1}} The final result---------------- After we have computed both the non\\-selfconsistent as well as the selfconsistent response functions,the U parameter for the DFT\\+U treatment of Ni *d*\\-electrons in NiO is found from:  U \\=  \u03c7  \u2212 1  \u2212  \u03c7  0  \u2212 1  \u2248  (  \u2202  N  I  S C F  \u2202  V  I  )  \u2212 1  \u2212  (  \u2202  N  I  N S C F  \u2202  V  I  )  \u2212 1  \\=  10\\.12  \u2212  10\\.5  \\=6\\.33  e V {\\\\displaystyle U\\=\\\\chi ^{\\-1}\\-\\\\chi \\_{0}^{\\-1}\\\\approx \\\\left({\\\\frac {\\\\partial N\\_{I}^{\\\\rm {SCF}}}{\\\\partial V\\_{I}}}\\\\right)^{\\-1}\\-\\\\left({\\\\frac {\\\\partial N\\_{I}^{\\\\rm {NSCF}}}{\\\\partial V\\_{I}}}\\\\right)^{\\-1}\\={\\\\frac {1}{0\\.12}}\\-{\\\\frac {1}{0\\.5}}\\=6\\.33\\\\;eV}   To get a more accurate result, one should repeat the previous calculations for a series of different additional potentials (for instance, LDAUU \\= LDAUJ \\= \\-0\\.2, \\-0\\.15, \\-0\\.10, \\-0\\.05, 0\\.05, 0\\.10 ,0\\.15, and 0\\.20 eV). All necessary steps are scripted in `doall.sh` in the tgz\\-file below. The relevant response functions are then easily found from a linear fit of the number of *d*\\-electrons on atomic site 1 as a function of the additional potential *V*: [](File_NiOLDAU3.html) From the above, we then have:  U \\=  \u03c7  \u2212 1  \u2212  \u03c7  0  \u2212 1  \u2248  (  \u2202  N  I  S C F  \u2202  V  I  )  \u2212 1  \u2212  (  \u2202  N  I  N S C F  \u2202  V  I  )  \u2212 1  \\=  10\\.131333  \u2212  10\\.492333  \\=5\\.58  e V {\\\\displaystyle U\\=\\\\chi ^{\\-1}\\-\\\\chi \\_{0}^{\\-1}\\\\approx \\\\left({\\\\frac {\\\\partial N\\_{I}^{\\\\rm {SCF}}}{\\\\partial V\\_{I}}}\\\\right)^{\\-1}\\-\\\\left({\\\\frac {\\\\partial N\\_{I}^{\\\\rm {NSCF}}}{\\\\partial V\\_{I}}}\\\\right)^{\\-1}\\={\\\\frac {1}{0\\.131333}}\\-{\\\\frac {1}{0\\.492333}}\\=5\\.58\\\\;eV} Download--------  NiO\\_calcU.tgz"}
{"file_name": "CMBJE.md", "content": "CMBJE= \\[real]   Default: **CMBJE** \\= 0\\.5nDescription: sets the   e {\\\\displaystyle e}  parameter in the MBJ and local MBJ potentials.  --- See the description of the METAGGA tag."}
{"file_name": "Available_potentials.md", "content": "Redirect to: * Available pseudopotentials"}
{"file_name": "ENMAX.md", "content": "ENCUT= \\[real]n| Default: **ENCUT** | \\= largest ENMAX in the POTCAR file |  || --- | --- | --- | Description: ENCUT specifies the energy cutoff for the plane\\-wave basis set in eV.  --- All plane waves with a kinetic energy smaller than   E  c u t {\\\\displaystyle E\\_{\\\\mathrm {cut} }}  are included in the basis set, i.e.,  \\|  G  \\+  k  \\|  \\<  G  c u t {\\\\displaystyle \\|\\\\mathbf {G} \\+\\\\mathbf {k} \\|\\<G\\_{\\\\mathrm {cut} }}  with   E  c u t  \\=  \u210f  2  2 m  G  c u t  2 {\\\\displaystyle E\\_{\\\\mathrm {cut} }\\={\\\\frac {\\\\hbar ^{2}}{2m}}G\\_{\\\\mathrm {cut} }^{2}} With this energy cutoff, the number of plane waves included in the basis set depends on the **k**\\-point, leading to a superior behavior. For instance, for energy\\-volume calculations the total number of plane waves changes fairly smoothly according to the volume, while the criterion   \\|  G  \\|  \\<  G  c u t {\\\\displaystyle \\|\\\\mathbf {G} \\|\\<G\\_{\\\\mathrm {cut} }}  (i.e. same number of plane waves for all **k**\\-points) would lead to a very rough energy\\-volume curve and, generally, to a slower energy convergence with respect to the basis set size. The POTCAR files contain a default ENMAX (and ENMIN). Therefore, it is, in principle, not necessary to specify ENCUT in the INCAR file.For calculations with more than one species, the maximum cutoff ENMAX (or ENMIN) value is used for the calculation (see PREC). | **Important:*** The convergence of the quantity of interest with respect to the energy cutoff ENCUT should always be checked. * We strongly recommend specifying the energy cutoff ENCUT always manually in the INCAR file to ensure the same accuracy between calculations. Otherwise, the default ENCUT may differ among the different calculations (e.g., for the calculation of the cohesive energy), with the consequence that the total energies, for instance, can not be compared. || --- |"}
{"file_name": "LELF.md", "content": "LELF= .TRUE. \\| .FALSE.   Default: **LELF** \\= .FALSE.nDescription: LELF determines whether to create anELFCAR file or not.  --- This file contains the so\\-called ELF (electron localizationfunction) [\\[1]](#cite_note-silvi:nature:371-1) If LELF is set, NPAR\\=1 has to be set explicitely inthe INCAR file in addition"}
{"file_name": "HITOLER.md", "content": "HITOLER= \\[real]   Default: **HITOLER** \\=   5 \u00d7  10  \u2212 5 {\\\\displaystyle 5\\\\times 10^{\\-5}}   Description: HITOLER specifies the convergence parameter for the iterative Hirschfeld partitioning in the Tkatchenko\\-Scheffler method.  ---"}
{"file_name": "Constrained_random-phase_approximation.md", "content": "The **constrained random\\-phase approximation** (CRPA) is a method that allows the calculation of the effective interaction parameter   U {\\\\displaystyle U}  ,  J {\\\\displaystyle J} , and   J \u2032 {\\\\displaystyle J'}  for model Hamiltonians. The main idea is to neglect the screening effects of specific target states in the screened Coulomb interaction   W {\\\\displaystyle W}  of the GW method. The resulting partially screened Coulomb interaction is evaluated in a localized basis that spans the target space and is described by the model Hamiltonian. The target space is usually low\\-dimensional and therefore allows for the application of a higher\\-level theory, such as dynamical\\-mean\\-field theory (DMFT). More information about CRPA is found on the following page: Constrained\u2013random\\-phase\u2013approximation\\_formalism Pages in category \"Constrained\\-random\\-phase approximation\"------------------------------------------------------------ The following 7 pages are in this category, out of 7 total. ### C * Constrained\u2013random\\-phase\u2013approximation formalism* CRPA of SrVO3### L * LDISENTANGLED* LWEIGHTED### N * NCRPA BANDS* NTARGET STATES### V * VCUTOFF"}
{"file_name": "MAXMIX.md", "content": "MAXMIX= \\[integer]   Default: **MAXMIX** \\= \\-45nDescription: MAXMIX specifies the maximum number of steps stored in the Broyden mixer (IMIX\\=4\\).  --- MAXMIX specifies the maximum number of vectors stored in the Broyden/Pulay mixer, in other words, it corresponds to the maximal rank of the approximation of the charge\\-dielectric function build up by the mixer. MAXMIX can be either negative or positive: * MAXMIX\\<0 The mixer is reset after each ionic step or if the number of electronic steps exceeds \\|MAXMIX\\| (this is the default and similar to the behavior of VASP.4\\.3 and VASP.3\\.2\\).* MAXMIX\\>0 The charge density mixer is only reset if the storage capabilities are exceeded. The reset is done \"smoothly\" by removing the five oldest vectors from the iteration history. Therefore, if MAXMIX is positive, the approximation for the charge dielectric function which was obtained in previous ionic steps is \"reused\" in the current ionic step, and this, in turn, can reduce the number of electronic steps during relaxations and MD's. Especially for relaxations that start from a good ionic starting guess and for systems with a strong charge sloshing behavior the speedup can be significant. We found that for a 12 \u00c5 long box containing 16 Fe atoms the number of electronic iterations decreased from 8 to 2\\-3 when MAXMIX was set to 40\\. For a carbon surface the number of iterations decreased from 7 to 3\\. At the same time, the energy stability increased significantly. But be careful, this option increases the memory requirements for the mixer considerably, and thus the option is not recommended for systems where charge sloshing is negligible anyway (like bulk simple metals). The optimal setting for MAXMIX is usually around three times the number of electronic steps required in the first iteration. Too large values for MAXMIX might cause the code to crash (because linear dependencies between input vectors might develop). Too small values for MAXMIX can slow your convergence significantly. For instance, if you need 50 self\\-consistency cycles, and set MAXMIX to 20, you force the mixer to remove iteration history continuously, which can cause divergence and at least a slow down of the convergence.* Caution: do not set MAXMIX\\>0 in the following cases. (i) If your initial positions in the POSCAR file are far from the fully relaxed positions, the ions might move considerably during relaxation. In this case, it is not expedient to \"reuse\" charge mixing information from the previous ionic steps. (ii) During machine learning, the first\\-principles calculations are often bypassed for hundreds or even thousands of ionic steps, and the ions might move considerably between first\\-principles calculations. In these cases using MAXMIX will very often lead to electronic divergence or strange errors during the self\\-consistency cycle. In general, whenever the column RMS(c) in the OSZICAR files shows a sudden increase in the norm of the charge density residual vector, try to remove the tag MAXMIX from the INCAR file.   | **Mind:** MAXMIX is only available in VASP.4\\.4 and newer versions, and it is strongly recommended to use this option for molecular dynamics and relaxations. || --- |"}
{"file_name": "ISTART.md", "content": "ISTART= 0 \\| 1 \\| 2 \\| 3n| Default: **ISTART** | \\= 1 | if a WAVECAR file exists || --- | --- | --- ||  | \\= 0 | else | Description: ISTART determines whether or not to read the WAVECAR file.  --- * ISTART\\=0 Start job: \"begin from scratch\". Initialize the orbitals according to the flag INIWAV.* ISTART\\=1 Continuation job: \"restart with constant energy cut\\-off\". Orbitals are read from the WAVECAR file (usage is restricted in the parallel version). The set of plane waves will be redefined and re\\-padded according to the new cell size/shape (POSCAR) and the new plane wave cut\\-off (INCAR). These values might differ from the old values, that are stored in the WAVECAR file. If the WAVECAR file is missing or if the WAVECAR file contains an inappropriate number of bands and/or k\\-points the flag ISTART will revert to ISTART\\=0 (see above).The usage of ISTART\\=1 is recommended if the size/shape of the supercell (see section on volume relaxations) or the cut\\-off energy changed with respect to the last run and if one wishes to redefine the set of plane waves according to a new setting.ISTART\\=1 is the usual setting for convergence tests with respect to the cut\\-off energy and for all jobs where the volume/cell\\-shape varies (e.g. to calculate binding energy curves looping over a set of volumes).* ISTART\\=2 Continuation job: \"restart with constant basis set\". Orbitals are read from the WAVECAR file.The set of plane waves will **not** be changed even if the cut\\-off energy or the cell size/shape given on the INCAR and POSCAR files are different from the values stored on the WAVECAR file. If the WAVECAR file is missing or if the WAVECAR file contains an inappropriate number of bands and/or k\\-points the ISTART will revert to ISTART\\=0 (see above).If the cell shape has not changed then ISTART\\=1 and ISTART\\=2 lead to the same result.ISTART\\=2 is usually used if one wishes to restart with the same basis set used in the previous run. | **Mind:** Due to Pulay stresses, there is a difference between evaluating the equilibrium volume with a constant basis set and a constant energy cut\\-off (unless absolute convergence with respect to the basis set is achieved!). || --- | If you are looking for the equilibrium volume, calculations with a constant energy cut\\-off are preferable to calculations with a constant basis set, therefore always restart with ISTART\\=1 unless you really know what you are looking for (see the section on volume relaxations).There is only one exception to this general rule: all volume/cell shape relaxation algorithms implemented in VASP work with a constant basis set, so continuing such jobs requires to set ISTART\\=2 to get a 'consistent restart' with respect to the previous runs (see section volume relaxations)! This menas that that number of plane waves is consistent with the previous run but the energy cut\\-off is not (see section Pulay stress).* ISTART\\=3 Continuation job: \"full restart including orbitals and charge prediction\".Same as ISTART\\=2 but in addition a valid TMPCAR file must exist, containing the positions and orbitals at time steps   t ( N \u2212 1 ) {\\\\displaystyle t(N\\-1\\)}  and  t ( N \u2212 2 ) {\\\\displaystyle t(N\\-2\\)} , which are needed for the orbtial and charge prediction scheme (used for MD\\-runs).ISTART\\=3 is generally not recommended unless an operating system imposes a serious restriction on the CPU time per job: if you continue with ISTART\\=1 or 2, a relatively large number of electronic iterations might be necessary to reach convergence of the orbitals in the second and third molecular\\-dynamics steps. ISTART\\=3 therefore saves time and is important if a molecular\\-dynamics run is split into very small pieces (e.g., NSW\\<10\\).Nevertheless, we have found that it is safer to restart the orbital prediction after 100 to 200 steps. If NSW\\>30, ISTART\\=1 or 2 is strongly recommended. | **Mind:** If ISTART\\=3, a non\\-existing WAVECAR or TMPCAR file or any inconsistency of input data will immediately stop execution. || --- | Examples that use this tag  ---"}
{"file_name": "OFIELD_A.md", "content": "OFIELD\\_A= \\[real]nDescription: The tag OFIELD\\_A sets the desired order parameter   Q  6 {\\\\displaystyle Q\\_{6}}  in the Interface pinning method.   --- The bias potential in the Interface pinning method is written as  U bias  (  R  ) \\=  \u03ba 2  (  Q  6  (  R  ) \u2212 A  )  2 {\\\\displaystyle U\\_{\\\\text{bias}}(\\\\mathbf {R} )\\={\\\\frac {\\\\kappa }{2}}\\\\left(Q\\_{6}(\\\\mathbf {R} )\\-A\\\\right)^{2}}  .The tag OFIELD\\_A sets the desired value of the order parameter   A {\\\\displaystyle A}  ."}
{"file_name": "Electron-phonon_interactions_theory.md", "content": "Electron\\-phonon interactions from statistical sampling------------------------------------------------------- The probability distribution of finding an atom within the coordinates   \u03ba \\+ d \u03ba {\\\\displaystyle \\\\kappa \\+d\\\\kappa }  (where   \u03ba {\\\\displaystyle \\\\kappa }  denotes the Cartesian coordinates as well as the atom number) at temperature   T {\\\\displaystyle T}  in the harmonic approximation is given by the following expression[\\[1]](#cite_note-bloch:zfp:1932-1)[\\[2]](#cite_note-landau:ctp:1959-2)  d  W  \u03bd  ( \u03ba , T ) \\=  1  2 \u03c0 \u27e8  u  \u03bd \u03ba  2  \u27e9  e  \u2212  \u03ba  2  /  ( 2 \u27e8  u  \u03bd \u03ba  2  \u27e9 )  d \u03ba , {\\\\displaystyle dW\\_{\\\u }(\\\\kappa ,T)\\={\\\\frac {1}{2\\\\pi \\\\langle u\\_{\\\u \\\\kappa }^{2}\\\\rangle }}e^{\\-\\\\kappa ^{2}/(2\\\\langle u\\_{\\\u \\\\kappa }^{2}\\\\rangle )}d\\\\kappa ,} where the mean\\-square displacement of the harmonic oscillator is given as  \u27e8  u  \u03bd \u03ba  2  \u27e9 \\=  \u210f  2  M  \u03ba  \u03c9  \u03bd coth \u2061  \u210f  \u03c9  \u03bd  2  k  B  T  . {\\\\displaystyle \\\\langle u\\_{\\\u \\\\kappa }^{2}\\\\rangle \\={\\\\frac {\\\\hbar }{2M\\_{\\\\kappa }\\\\omega \\_{\\\u }}}\\\\coth {\\\\frac {\\\\hbar \\\\omega \\_{\\\u }}{2k\\_{B}T}}.} Here   M  \u03ba {\\\\displaystyle M\\_{\\\\kappa }}  ,  \u03bd {\\\\displaystyle \\\u }  and  \u03c9  \u03bd {\\\\displaystyle \\\\omega \\_{\\\u }}  denote the mass, phonon eigenmode and phonon eigenfrequency, respectively.The equation for   d W {\\\\displaystyle dW}  is valid at any temperature and the high (Maxwell\\-\\-Boltzmann distribution) and low temperature limits are easily regained.In order to obtain an observable   O ( T ) {\\\\displaystyle O(T)}  at a given temperature   T {\\\\displaystyle T} , the average of the observable sampled at different coordinate sets   x  T  MC  , i {\\\\displaystyle x\\_{T}^{{\\\\textrm {MC}},i}}  with sample size   n {\\\\displaystyle n}  is taken  \u27e8 O ( T ) \u27e9 \\=  1 n  \u2211  i \\= 1  n  O (  x  T MC,i  ) . {\\\\displaystyle \\\\langle O(T)\\\\rangle \\={\\\\frac {1}{n}}\\\\sum \\\\limits \\_{i\\=1}^{n}O(x\\_{T}^{\\\\textrm {MC,i}}).}   ### Full Monte\\-Carlo sampling Each set   i {\\\\displaystyle i}  is obtained from the equilibrium atomic positions   x  eq {\\\\displaystyle x\\_{\\\\textrm {eq}}}  as  x  T MC,i  \\=  x  eq  \\+ \u0394  \u03c4 MC,i {\\\\displaystyle x\\_{T}^{\\\\textrm {MC,i}}\\=x\\_{\\\\textrm {eq}}\\+\\\\Delta \\\\tau ^{\\\\textrm {MC,i}}} with the displacement  \u0394  \u03c4 MC,i  \\=  1  M  \u03ba  \u2211  \u03bd  3 ( N \u2212 1 )  \u03b5  \u03ba , \u03bd  N  . {\\\\displaystyle \\\\Delta \\\\tau ^{\\\\textrm {MC,i}}\\={\\\\sqrt {\\\\frac {1}{M\\_{\\\\kappa }}}}\\\\sum \\\\limits \\_{\\\u }^{3(N\\-1\\)}\\\\varepsilon \\_{\\\\kappa ,\\\u }{\\\\mathcal {N}}.} Here   \u03b5  \u03ba , \u03bd {\\\\displaystyle \\\\varepsilon \\_{\\\\kappa ,\\\u }}  denotes the unit vector of eigenmode   \u03bd {\\\\displaystyle \\\u }  on atom   \u03ba {\\\\displaystyle \\\\kappa } . The magnitude of the displacement in each Cartesian direction is obtained from the normal\\-distributed random variable   N {\\\\displaystyle {\\\\mathcal {N}}}  with a probability distribution according to   d W {\\\\displaystyle dW}  .   ### ZG configuration (one\\-shot method) Motivated by the empirical observation that for increasing super\\-cell sizes the number of required structures in the MC method can be decreased, M. Zacharias and F. Giustino[\\[3]](#cite_note-zacharias:prb:2016-3) proposed a one\\-shot method where only a single set of displacements is used  \u0394  \u03c4  OS  \\=  1  M  \u03ba  \u2211  \u03bd  3 ( N \u2212 1 )  ( \u2212 1  )  \u03bd \u2212 1  \u03b5  \u03ba , \u03bd  \u03c3  \u03bd , T  , {\\\\displaystyle \\\\Delta \\\\tau ^{\\\\textrm {OS}}\\={\\\\sqrt {\\\\frac {1}{M\\_{\\\\kappa }}}}\\\\sum \\\\limits \\_{\\\u }^{3(N\\-1\\)}(\\-1\\)^{\\\u \\-1}\\\\varepsilon \\_{\\\\kappa ,\\\u }\\\\sigma \\_{\\\u ,T},} where the summation over the eigenmodes runs in an ascending order with respect to the values of the eigenfrequencies, and the magnitude of each displacement is given by  \u03c3  \u03bd , T  \\=  ( 2  n  \u03bd , T  \\+ 1 )  \u210f  2  \u03c9  \u03bd  . {\\\\displaystyle \\\\sigma \\_{\\\u ,T}\\={\\\\sqrt {(2n\\_{\\\u ,T}\\+1\\){\\\\frac {\\\\hbar }{2\\\\omega \\_{\\\u }}}}}.} Here   n  \u03bd , T  \\= \\[  e x p  ( \u210f  \u03c9  \u03bd  /  k  B  T ) \u2212 1  ]  \u2212 1 {\\\\displaystyle n\\_{\\\u ,T}\\=\\[\\\\mathrm {exp} (\\\\hbar \\\\omega \\_{\\\u }/k\\_{B}T)\\-1]^{\\-1}}  denotes the Bose\\-Einstein occupation number.In this way the sum for the observable   \u27e8 O ( T ) \u27e9 {\\\\displaystyle \\\\langle O(T)\\\\rangle }  is reduced to a single calculation. In Ref. [\\[3]](#cite_note-zacharias:prb:2016-3) it was shown that for super\\-cell sizes   N \u2192 \u221e {\\\\displaystyle N\\\\rightarrow \\\\infty }  the structural configuration obtained using the ZG configuration should lead to equivalent results as fully converged MC calculations. In practice, it was shown that already relatively small super\\-cell sizes are sufficient to achieve good accuracy, but the convergence with respect to the cell size can vary between different materials. In Ref. [\\[4]](#cite_note-karsai:njp:2018-4) we have also used a slightly modified approach, in which the signs of the displacements are chosen randomly instead of   \u00b1 1 {\\\\displaystyle \\\\pm 1} . This was only necessary, when calculating volume dependent ZPR, since the modes sometimes change the order as the volume changes. Using alternating signs for the displacement then causes small discontinuities in the ZPR volume curve of the order of 5 meV for carbon diamond. By averaging over many random phases this problem can be eliminated. Nevertheless 5 meV difference between the ZG configuration and full MC is considered as accurate enough in most calculations."}
{"file_name": "PHON_G_CUTOFF.md", "content": "PHON\\_G\\_CUTOFF= \\[real]n| Default: **PHON\\_G\\_CUTOFF** | \\= 8\\.0 |  || --- | --- | --- | Description: PHON\\_G\\_CUTOFF sets the cutoff radius in reciprocal space used to determine the number of   G {\\\\displaystyle \\\\mathbf {G} }  vectors involved in the Ewald sum in polar phonon calculations.  --- The Ewald sum that accounts for the long\\-range electrostatic interactions in phonon calculations runs over all G\\-vectors inside a cutoff sphere.The radius of this sphere is given by PHON\\_G\\_CUTOFF as a multiple of the longest reciprocal lattice vector of the primitive cell (as detected by VASP).Specifying the cutoff this way (as opposed to an absolute length or energy) ensures a default value that is relatively system\\-independent. The default value of PHON\\_G\\_CUTOFF is a safe choice in most cases.Lowering PHON\\_G\\_CUTOFF can result in faster phonon calculations.However, ensure that the phonon spectrum is properly converged.If you run into convergence problems, try raising the value until the phonon dispersion converges. For more information on polar phonon calculations, see LPHON\\_POLAR. | **Mind:** Only available as of VASP 6\\.3\\.2\\. || --- |"}
{"file_name": "Charge_sloshing.md", "content": "[](File_Sloshing1.html) Fig. 1: A handwaving illustration of charge sloshing. A very handwaving illustration of the phenomenon of charge sloshing during the electronic optimization is shown in Fig. 1: * Suppose we have a system with two chemically identical sites (Site 1 and 2\\), and suppose that in step *N* of the electronic optimization the situation is as follows: At the beginning of iteration *N*, Site 1 is occupied by 2 electrons, Site 2 is empty. After the refinement of the one\\-electron orbitals, however, the lowest eigenstate associated with Site 2 lies below the occupied state at Site 1\\.* In step *N\\+1* the situation is reversed: the two electrons that were on Site 1 now are on Site 2, and after the refinement of the one\\-electron orbitals the lowest lying state at Site 1 will lie below the occupied state at Site 2\\. * In subsequent steps the situation will bounce back\\-and\\-forth between the two aforementioned states, without ever reaching the \"groundstate\" depicted on the right in Fig. 1, where both Site 1 as well as Site 2 are occupied by a single electron.   A bit more mathematical explanation for the occurrence of charge sloshing goes as follows: * Consider a metal, with \"free electron\"\\-like states at the Fermi\\-level, and consider a very large supercell, in which a single **k**\\-point suffices to sample the Brillouin zone, and hence all states are folded back to this point in the Brillouin zone. The state just below the Fermi\\-level is approximately given by   \u03c8  n  \\=  e  i (  k  F  \u2212 \u03b4  k  )  r {\\\\displaystyle \\\\psi \\_{n}\\=e^{i({\\\\bf {k}}\\_{F}\\-\\\\delta {\\\\bf {k}}){\\\\bf {r}}}} , and the one above the Fermi\\-level by   \u03c8  m  \\=  e  i (  k  F  \\+ \u03b4  k  )  r {\\\\displaystyle \\\\psi \\_{m}\\=e^{i({\\\\bf {k}}\\_{F}\\+\\\\delta {\\\\bf {k}}){\\\\bf {r}}}} . The former is occupied and the latter is not.* During the electronic optimization, orbitals   \u03c8  n {\\\\displaystyle \\\\psi \\_{n}}  and  \u03c8  m {\\\\displaystyle \\\\psi \\_{m}}  will hybridize. This happens because the gradient of the total energy with respect to the orbitals has a so\\-called *subspace rotational* component:  \\|  s  n  \u27e9 \\=  \u2211  m \\= 1  N  1 2  H  n m  (  f  n  \u2212  f  m  )  S ^  \\|  \u03c8  m  \u27e9 {\\\\displaystyle \\|s\\_{n}\\\\rangle \\=\\\\sum \\_{m\\=1}^{N}{\\\\frac {1}{2}}{\\\\bf {H}}\\_{nm}(f\\_{n}\\-f\\_{m}){\\\\hat {S}}\\\\vert \\\\psi \\_{m}\\\\rangle } where   {  f  i  \\|  i \\= 1 , . . , N } {\\\\displaystyle \\\\{f\\_{i}\\|i\\=1,..,N\\\\}}  are the partial occupancies, and  H  n m  \\= \u27e8  \u03c8  m  \\|  H ^  \\|  \u03c8  n  \u27e9 {\\\\displaystyle {\\\\bf {H}}\\_{nm}\\=\\\\langle \\\\psi \\_{m}\\\\vert {\\\\hat {H}}\\\\vert \\\\psi \\_{n}\\\\rangle } is the Hamiltonian expressed within the subspace spanned by the current orbitals   {  \u03c8  i  \\|  i \\= 1 , . . , N } {\\\\displaystyle \\\\{\\\\psi \\_{i}\\|i\\=1,..,N\\\\}}  .A suitable search direction along the subspace rotational part of the gradient is given by a small unitary rotation between orbitals   \u03c8  n {\\\\displaystyle \\\\psi \\_{n}}  and  \u03c8  m {\\\\displaystyle \\\\psi \\_{m}}  :  \\|  \u03c8  n  \u2032  \u27e9 \\=  \\|  \u03c8  n  \u27e9 \\+ \u0394  \\|  \u03c8  m  \u27e9  \\|  \u03c8  m  \u2032  \u27e9 \\=  \\|  \u03c8  m  \u27e9 \u2212 \u0394  \\|  \u03c8  n  \u27e9 {\\\\displaystyle \\|\\\\psi '\\_{n}\\\\rangle \\=\\|\\\\psi \\_{n}\\\\rangle \\+\\\\Delta \\|\\\\psi \\_{m}\\\\rangle \\\\qquad \\|\\\\psi '\\_{m}\\\\rangle \\=\\|\\\\psi \\_{m}\\\\rangle \\-\\\\Delta \\|\\\\psi \\_{n}\\\\rangle } where   \u0394 {\\\\displaystyle \\\\Delta }  denotes the stepsize.* The aformentioned change in the orbitals leads to a *long\\-wavelength* change in the charge density:  \u03b4 \u03c1 (  r  ) \\= 2 \u0394  R e  e  i 2 \u03b4  k  \u22c5  r {\\\\displaystyle \\\\delta \\\\rho ({\\\\bf {r}})\\=2\\\\Delta {\\\\rm {Re}}\\\\,e^{i2\\\\delta {\\\\bf {k}}\\\\cdot {\\\\bf {r}}}} and the consequent change in the Hartree potential due to this long\\-wavelength change in the density is given by:  \u03b4  V  H  (  r  ) \\= 2 \u0394  4 \u03c0  e  2  \\|  2 \u03b4  k  \\|  2  R e  e  i 2 \u03b4  k  \u22c5  r  . {\\\\displaystyle \\\\delta V\\_{\\\\rm {H}}({\\\\bf {r}})\\=2\\\\Delta {\\\\frac {4\\\\pi e^{2}}{\\|2\\\\delta {\\\\bf {k}}\\|^{2}}}{\\\\rm {Re}}\\\\,e^{i2\\\\delta {\\\\bf {k}}\\\\cdot {\\\\bf {r}}}.} The factor   1  /  \\|  \u03b4  k  \\|  2 {\\\\displaystyle 1/\\|\\\\delta {\\\\bf {k}}\\|^{2}}  in the above is in fact the principal origin of charge sloshing: *a long\\-wavelength change in the charge density leads to a strongly amplified change in the electrostatic potential.** In our example, the smallest possible   \\|  \u03b4  k  \\| {\\\\displaystyle \\|\\\\delta {\\\\bf {k}}\\|}  is proportional to *L*, the maximum extent of the supercell:  \\|  \u03b4  k  \\|  \u221d 2 \u03c0  /  L {\\\\displaystyle \\|\\\\delta {\\\\bf {k}}\\|\\\\propto 2\\\\pi /L}  ,and thus the response in the potential increases with *L*2, the square of the maximum extent of the supercell.Consequently, the maximum stable step size in a  direct optimization algorithm decreases inversely proportional to the square of the maximum extent of the supercell (  \u0394 \\= 1  /  L  2 {\\\\displaystyle \\\\Delta \\=1/L^{2}}  ).  The reasoning above elucidates two important aspects of charge sloshing: * Metals and systems with a small gap are more prone to charge sloshing than wide\\-gap insulators. * Problems due to charge sloshing increase with increasing (super)cell size.   To prevent charge sloshing VASP uses  density mixing in the self\\-consistency cycle."}
{"file_name": "LSEPK.md", "content": "LSEPK= \\[logical]   Default: **LSEPK** \\= .FALSE.nDescription: Specifies whether the partial charge density is summed up for all selected **k** points or separated and printed out in different files. | **Mind:** If the **k** points are separated, each **k** point weight is set to 1\\. To get the correct results in this case it is necessary to turn off symmetry (ISYM \\= \\-1\\) for the initial ground state calculation and the post\\-processing partial charge calculation in most cases. However, the correct weight of each **k** point is determined from the KPOINTS file if all contributions are summed up. || --- |  --- If LPARD \\= .TRUE. the partial charge density is calculated for a subset of bands and **k** points depending on the setting of the tags IBAND, KPUSE, NBMOD, and EINT. If LSEPK is set to .TRUE., separate PARCHG.ALLB.nk or PARCHG.nb.nk files are created, dependent on the LSEPB tag. If LSEPK \\= .FALSE., the output is written to PARCHG or PARCHG.nb.ALLK, again depending on LSEPB. Here are four examples to illustrate the interplay of LSEPB and LSEPK. in all cases, the following settings apply, selecting three specific bands and two **k** points `IBAND = 9 10 11`, `NBMOD = 3`, and `KPUSE = 1 34`: * `LSEPB = .FALSE.`, `LSEPK = .FALSE.` | **output files:** PARCHG || --- | * `LSEPB = .TRUE.`, `LSEPK = .FALSE.` | **output files:** PARCHG.0009\\.ALLK, PARCHG.0010\\.ALLK, PARCHG.0011\\.ALLK || --- | * `LSEPB = .FALSE.`, `LSEPK = .TRUE.` | **output files:** PARCHG.ALLB.0001, PARCHG.ALLB.0034 || --- | * `LSEPB = .TRUE.`, `LSEPK = .TRUE.` | **output files:** PARCHG.0009\\.0001, PARCHG.0009\\.0034, PARCHG.0010\\.0001, PARCHG.0010\\.0034, PARCHG.0011\\.0001, PARCHG.0011\\.0034 || --- |"}
{"file_name": "Input_file.md", "content": "As a minimal setup, VASP requires the following **input files**:  * the INCAR file,* the POSCAR file, and* the POTCAR file. However, there are more optional **input files**, e.g., the KPOINTS file, the KPOINTS\\_OPT file, the ICONST file, etc. A complete list is provided below. VASP calculations are often continued on top of a previous VASP calculation. So, in case a calculation is restated, the output files of the previous calculation can be **input files** for the next calculation. For instance, the CHGCAR file, the WAVECAR file, the CONTCAR file copied to POSCAR, the ML\\_ABN file copied to ML\\_AB, etc. When HDF5 support is enabled, the vaspin.h5 file can contain the same information and replace the INCAR, POSCAR, KPOINTS and POTCAR files. Finally, there is a special **input file** to induce a *soft stop* of the calculation: the STOPCAR file. It is not used in a standard workflow, but it might be convenient to stop a calculation manually when it takes too long or a technical issue on the compute engine arises. Pages in category \"Input files\"------------------------------- The following 20 pages are in this category, out of 20 total. ### A * Available pseudopotentials### C * CHGCAR### D * DYNMATFULL### I * ICONST* INCAR### K * KPOINTS* KPOINTS OPT* KPOINTS WAN### M * ML AB* ML FF### P * PENALTYPOT* POSCAR* POTCAR* Construction:Potcar.h5### Q * QPOINTS### V * Vaspin.h5### W * WAVECAR* WAVEDER* WFULLxxxx.tmp* Wxxxx.tmp"}
{"file_name": "GW.md", "content": "Theory------ The GW approximation goes hand in hand with the RPA, since the very same diagrammatic contributions are taken into account in the screened Coulomb interaction of a system often denoted as W. However, in contrast to the RPA/ACFDT, the GW method provides access to the spectral properties of the system by means of determining the energies of the quasi\\-particles of a system using a screened exchange\\-like contribution to the self\\-energy. The GW approximation is currently one of the most accurate many\\-body methods to calculate band\\-gaps. More information about the GW method can be found on the following page: GW approximation of Hedin's equations Practical guides---------------- While more recent versions of VASP (6\\.0 and newer) support GW calculations in one go, older versions require two steps. First, a groundstate DFT calculation is performed, followed by the actual GW step.  More detailed guides for the GW method are bound below. How to------ * Practical guide to GW calculations.* Practical guide to GW calculations for large systems.* Using the GW routines for the determination of frequency\\-dependent dielectric matrix: GW and dielectric matrix.  --- Pages in category \"GW\"---------------------- The following 39 pages are in this category, out of 39 total. ### A * ALGO### C * CSHIFT### E * ENCUTGW* ENCUTGWSOFT* EVENONLYGW### G * GW and dielectric matrix### I * IALL IN ONE### L * LALL IN ONE* LFINITE TEMPERATURE* LFOCKAEDFT* LMAXFOCKAE* LRPAFORCE* LSCK* LSELFENERGY* LSINGLES* LSPECTRAL* LSPECTRALGW### M * MAXMEM### N * NATURALO* NBANDS WAVE* NBANDSEXACT* NBANDSGW* NCSHMEM* NELMGW* NKRED* NMAXFOCKAE* NMAXFOCKAE and LMAXFOCKAE* NOMEGA* NOMEGA DUMP* NOMEGAPAR* NOMEGAR* NTAUPAR### O * ODDONLY* ODDONLYGW* OMEGAMAX* OMEGAMIN* OMEGATL### P * Practical guide to GW calculations### S * SCISSOR"}
{"file_name": "Electric_Field_Gradient.md", "content": "Electric field gradients at the positions of the atomic nuclei can be calculated by VASP using the method described in reference [\\[1]](#cite_note-petrilli1998-1). The following flags control the behaviour of VASP (the given value is the default value): * LEFG\\=.TRUE. This tag switches on the calculation of the electric field gradient tensors. The EFG tensors are symmetric. The principal components   V  i i {\\\\displaystyle V\\_{ii}}  and asymmetry parameter   \u03b7 {\\\\displaystyle \\\\eta }  are printed out for each atom. Following convention is made for the principal components   V  i i {\\\\displaystyle V\\_{ii}}  :  \\|  V  z z  \\|  \\>  \\|  V  x x  \\|  \\>  \\|  V  y y  \\| {\\\\displaystyle \\|V\\_{zz}\\|\\>\\|V\\_{xx}\\|\\>\\|V\\_{yy}\\|} The asymmetry parameter   \u03b7 \\=  (  V  y y  \u2212  V  x x  )  /  V  z z {\\\\displaystyle \\\\eta \\={(V\\_{yy}\\-V\\_{xx})}/V\\_{zz}} . For so\\-called \"quadrupolar nuclei\", i.e. nuclei with nuclear spin   I \\> 1  /  2 {\\\\displaystyle I\\>1/2} , NMR experiments can access   V  z z {\\\\displaystyle V\\_{zz}}  and  \u03b7 {\\\\displaystyle \\\\eta }  . Beware: Attaining convergence can require somewhat smaller EDIFF parameters than the default of EDIFF\\=*1\\.e\\-4* and a somewhat larger cutoff ENCUT than the default one with PREC\\=*A*. Moreover, the calculation of EFGs typically requires high quality PAW data sets. Semi\\-core electrons can be important (check the POSCAR files with *\\*\\_pv* or *\\*\\_sv*) as well as explicit inclusion of augmentation channels with   d {\\\\displaystyle d} \\-projectors. * QUAD\\_EFG\\=1 This tag allows the conversion by VASP of the   V  z z {\\\\displaystyle V\\_{zz}}  values into the   C  q {\\\\displaystyle C\\_{q}}  often encountered in NMR literature. The conversion formula is given as follows(  Q {\\\\displaystyle Q}  is the element and isotope specific quadrupole moment):  C  q  \\=  e Q  V  z z  h {\\\\displaystyle C\\_{q}\\={\\\\frac {eQV\\_{zz}}{h}}} The QUAD\\_EFG tag consists of the nuclear quadrupole moment in millibarns for each atomic species, in the same order as in the POTCAR file. The output of   C  q {\\\\displaystyle C\\_{q}}  is in MHz. See"}
{"file_name": "Ompi+omp.md", "content": "``` ## define the commands that run vasp_std, vasp_ncl, and vasp_gam #kmp=\"-x KMP_AFFINITY=verbose,granularity=fine,compact,1,0 -x KMP_STACKSIZE=512m\" nthrds=4nranks=2 mpi=\"--map-by node:PE=$nthrds --bind-to core\"omp=\"-x OMP_NUM_THREADS=$nthrds\" export VASP_TESTSUITE_EXE_STD=\"mpirun -np $nranks $kmp $mpi $omp $PWD/../bin/vasp_std\"export VASP_TESTSUITE_EXE_NCL=\"mpirun -np $nranks $kmp $mpi $omp $PWD/../bin/vasp_ncl\"export VASP_TESTSUITE_EXE_GAM=\"mpirun -np $nranks $kmp $mpi $omp $PWD/../bin/vasp_gam\"  ```"}
{"file_name": "Wrap-around_errors.md", "content": "In this section we will discuss wrap around errors.Wrap around errors arise if the FFT meshes are notsufficiently large. It can be shown that no errors existif the FFT meshes contain all   G {\\\\displaystyle {\\\\mathbf {G}}}  vectors up to   2  G  c u t {\\\\displaystyle 2G\\_{\\\\rm {cut}}}  . [](File_Wrap_errors_spheres.html) Fig. 1: Sphere intersections for   G  c u t {\\\\displaystyle G\\_{\\\\mathrm {cut} }} It can be shown that the charge density containscomponents up to   2  G  c u t {\\\\displaystyle 2G\\_{\\\\mathrm {cut} }} , where   2  G  c u t {\\\\displaystyle 2G\\_{\\\\mathrm {cut} }}  isthe \"longest\" plane wave in the basis set: The wavefunction is defined as  \\|  \u03d5  n  k  \u27e9 \\=  \u2211  G  C  G  n  k  \\|  k  \\+  G  \u27e9 , {\\\\displaystyle \\|\\\\phi \\_{n{\\\\mathbf {k}}}\\\\rangle \\=\\\\sum \\_{\\\\mathbf {G}}C\\_{{\\\\mathbf {G}}n{\\\\mathbf {k}}}\\|{\\\\mathbf {k}}\\+{\\\\mathbf {G}}\\\\rangle ,} and in real space it is given by  \u27e8  r  \\|  \u03d5  n  k  \u27e9 \\=  \u2211  G  \u27e8  r  \\|  k  \\+  G  \u27e9 \u27e8  k  \\+  G  \\|  \u03d5  n  k  \u27e9 \\=  1  \u03a9  1  /  2  \u2211  G  e  i (  k  \\+  G  )  r  C  G  n  k  . {\\\\displaystyle \\\\langle {\\\\mathbf {r}}\\|\\\\phi \\_{n{\\\\mathbf {k}}}\\\\rangle \\=\\\\sum \\_{\\\\mathbf {G}}\\\\langle {\\\\mathbf {r}}\\|{\\\\mathbf {k}}\\+{\\\\mathbf {G}}\\\\rangle \\\\langle {\\\\mathbf {k}}\\+{\\\\mathbf {G}}\\|\\\\phi \\_{n{\\\\mathbf {k}}}\\\\rangle \\={\\\\frac {1}{\\\\Omega ^{1/2}}}\\\\sum \\_{\\\\mathbf {G}}e^{i({\\\\mathbf {k}}\\+{\\\\mathbf {G}}){\\\\mathbf {r}}}C\\_{{\\\\mathbf {G}}n{\\\\mathbf {k}}}.} Using Fast Fourier transformations one can define  C  r  n  k  \\=  \u2211  G  C  G  n  k  e  i  G  r  C  G  n  k  \\=  1  N  F F T  \u2211  r  C  r  n  k  e  \u2212 i  G  r  . {\\\\displaystyle C\\_{{\\\\mathbf {r}}n{\\\\mathbf {k}}}\\=\\\\sum \\_{\\\\mathbf {G}}C\\_{{\\\\mathbf {G}}n{\\\\mathbf {k}}}e^{i{\\\\mathbf {G}}{\\\\mathbf {r}}}\\\\qquad \\\\qquad \\\\qquad C\\_{{\\\\mathbf {G}}n{\\\\mathbf {k}}}\\={\\\\frac {1}{N\\_{\\\\mathrm {FFT} }}}\\\\sum \\_{\\\\mathbf {r}}C\\_{{\\\\mathbf {r}}n{\\\\mathbf {k}}}e^{\\-i{\\\\mathbf {G}}{\\\\mathbf {r}}}.} Therefore the wavefunction can be written in real space as  \u27e8  r  \\|  \u03d5  n  k  \u27e9 \\=  \u03d5  n  k  ( r ) \\=  1  \u03a9  1  /  2  C  r  n  k  e  i  k  r  . {\\\\displaystyle \\\\langle {\\\\mathbf {r}}\\|\\\\phi \\_{n{\\\\mathbf {k}}}\\\\rangle \\=\\\\phi \\_{n{\\\\mathbf {k}}}(r)\\={\\\\frac {1}{\\\\Omega ^{1/2}}}C\\_{{\\\\mathbf {r}}n{\\\\mathbf {k}}}e^{i{\\\\mathbf {k}}{\\\\mathbf {r}}}.} The charge density is simply given by  \u03c1  r  p s  \u2261 \u27e8  r  \\|  \u03c1  p s  \\|  r  \u27e9 \\=  \u2211  k  w  k  \u2211  n  f  n  k  \u03d5  n  k  ( r )  \u03d5  n  k  \u2217  ( r ) , {\\\\displaystyle \\\\rho \\_{\\\\mathbf {r}}^{\\\\mathrm {ps} }\\\\equiv \\\\langle {\\\\mathbf {r}}\\|\\\\rho ^{\\\\mathrm {ps} }\\|{\\\\mathbf {r}}\\\\rangle \\=\\\\sum \\_{\\\\mathbf {k}}w\\_{\\\\mathbf {k}}\\\\sum \\_{n}f\\_{n{\\\\mathbf {k}}}\\\\phi \\_{n{\\\\mathbf {k}}}(r)\\\\phi \\_{n{\\\\mathbf {k}}}^{\\*}(r),} and in the reciprocal mesh it can be written as  \u03c1  G  p s  \u2261  1 \u03a9  \u222b \u27e8  r  \\|  \u03c1  p s  \\|  r  \u27e9  e  \u2212 i  G  r  d  r  \u2192  1  N  F F T  \u2211  r  \u03c1  r  p s  e  \u2212 i  G  r  . {\\\\displaystyle \\\\rho \\_{\\\\mathbf {G}}^{\\\\mathrm {ps} }\\\\equiv {\\\\frac {1}{\\\\Omega }}\\\\int \\\\langle {\\\\mathbf {r}}\\|\\\\rho ^{\\\\mathrm {ps} }\\|{\\\\mathbf {r}}\\\\rangle e^{\\-i{\\\\mathbf {G}}{\\\\mathbf {r}}}\\\\,d{\\\\mathbf {r}}\\\\to {\\\\frac {1}{N\\_{\\\\mathrm {FFT} }}}\\\\sum \\_{\\\\mathbf {r}}\\\\rho \\_{\\\\mathbf {r}}^{\\\\mathrm {ps} }e^{\\-i{\\\\mathbf {G}}{\\\\mathbf {r}}}.} Using the above equations for   \u03c1  r  p s {\\\\displaystyle \\\\rho \\_{\\\\mathbf {r}}^{\\\\mathrm {ps} }}  and  C  r  n  k {\\\\displaystyle C\\_{{\\\\mathbf {r}}n{\\\\mathbf {k}}}}  itis very easy to show that   \u03c1  r  p s {\\\\displaystyle \\\\rho \\_{\\\\mathbf {r}}^{\\\\mathrm {ps} }}  contains Fourier\\-components up to  2  G  c u t {\\\\displaystyle 2G\\_{\\\\mathrm {cut} }}  . Generally it can be shown thata the convolution   f  r  \\=  f  r  1  f  r  2 {\\\\displaystyle f\\_{r}\\=f\\_{r}^{1}f\\_{r}^{2}} of two functions   f  r  1 {\\\\displaystyle f\\_{r}^{1}}  with Fourier\\-componentsup to   G  1 {\\\\displaystyle G\\_{1}}  and  f  r  2 {\\\\displaystyle f\\_{r}^{2}}  with Fourier\\-componentsup to   G  2 {\\\\displaystyle G\\_{2}}  contains Fourier\\-components up to   G  1  \\+  G  2 {\\\\displaystyle G\\_{1}\\+G\\_{2}}  . The property of the convolution comes once again into play,when the action of the Hamiltonian onto a wavefunction iscalculated. The action of the local\\-potential is given by  a  r  \\=  V  r  C  r  n  k  . {\\\\displaystyle a\\_{\\\\mathbf {r}}\\=V\\_{\\\\mathbf {r}}C\\_{{\\\\mathbf {r}}n{\\\\mathbf {k}}}.} Only the components   a  G {\\\\displaystyle a\\_{\\\\mathbf {G}}}  with   \\|  G  \\|  \\<  G  c u t {\\\\displaystyle \\|{\\\\mathbf {G}}\\|\\<G\\_{\\\\mathrm {cut} }}  are taken intoaccount (see section ALGO:   a  G {\\\\displaystyle a\\_{\\\\mathbf {G}}}  is added to the wavefunctionduring the iterative refinement of the wavefunctions   C  G  n  k {\\\\displaystyle C\\_{{\\\\mathbf {G}}n{\\\\mathbf {k}}}}  , and  C  G  n  k {\\\\displaystyle C\\_{{\\\\mathbf {G}}n{\\\\mathbf {k}}}}  contains only components up to   G  c u t {\\\\displaystyle G\\_{\\\\mathrm {cut} }}  ).From the previous theorem we see that   a  r {\\\\displaystyle a\\_{\\\\mathbf {r}}}  containscomponents up to   3  G  c u t {\\\\displaystyle 3G\\_{\\\\mathrm {cut} }}  (  V  r {\\\\displaystyle V\\_{\\\\mathbf {r}}}  contains components up to  2  G  c u t {\\\\displaystyle 2G\\_{\\\\mathrm {cut} }}  ). If the FFT\\-mesh contains all components up to   2  G  c  u t {\\\\displaystyle 2G\\_{\\\\mathrm {c} ut}} the resulting wrap\\-around error is once again 0\\. This canbe easily seen in Fig. 1\\. Here we see that the small sphere contains all plane waves included in the basis set   G \\<  G  c u t {\\\\displaystyle G\\<G\\_{\\\\mathrm {cut} }}  .The charge density contains components up to   2  G  c u t {\\\\displaystyle 2G\\_{\\\\mathrm {cut} }}  (second sphere), andthe acceleration   a {\\\\displaystyle a}  components up to   3  G  c u t {\\\\displaystyle 3G\\_{\\\\mathrm {cut} }} , which are reflectedin (third sphere) because of the finite size of the FFT\\-mesh. Neverthelessthe components   a  G {\\\\displaystyle a\\_{\\\\mathbf {G}}}  with   \\|  G  \\|  \\<  G  c u t {\\\\displaystyle \\|{\\\\mathbf {G}}\\|\\<G\\_{\\\\mathrm {cut} }}  are correct i.e.the small sphere does not intersect with the third large sphere}  ---"}
{"file_name": "LBONE.md", "content": "LBONE= .TRUE. \\| .FALSE.   Default: **LBONE** \\= .FALSE.nDescription: LBONE adds the small *B*\\-component to the chemical shift tensor.  --- LBONE restores the small *B*\\-component of the wave function insidethe PAW spheres in the linear\\-response calculation of the NMR chemical shifttensor. The POTCARs used in VASP are scalar\\-relativistic and theAE\\-partial waves are solutions of the scalar\\-relativistic Kohn\\-Shamequation for the spherical atom. These have a large (*A*) and a small (*B*) component.The latter is not retained on the POTCAR, but approximately restored when LBONE\\=.TRUE.[\\[1]](#cite_note-dewijs:jcp:17-1)LBONE only affects the one\\-center valence contributions to the chemical shift. The contribution of the core electrons includes the *B*\\-component by default."}
{"file_name": "PCDAT.md", "content": "The PCDAT file contains the pair correlation function. For dynamic simulations (IBRION  \u2265 {\\\\displaystyle \\\\geq } 0\\) an averaged pair correlation is written to the file (see also NBLOCK, KBLOCK, NPACO and APACO). A sample output of the PCDAT file for a system containing two element types looks as follows:  ```  1   8   1   0  0.8163705E+01  0.1000000E+04 CAR structure name   0   0   0   1   1 350 350 350 350  0.1000000E-09  0.2857143E-11 1  0.1000000E-14  0.4027100E-09  0.4027100E-09  0.4027100E-09  0.2410163E+04  0.2410163E+04  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000 ...  0.000  0.000  0.000  0.000  0.165  0.000  0.331  0.000  0.000  0.000  0.000  0.000  0.152  0.000  0.304  0.000  0.293  0.000  0.585  0.000  0.844  0.000  1.688  0.000  1.218  0.000  2.436  0.000  1.173  0.000  2.346  0.000  1.256  0.000  2.512  0.000  1.453  0.000  2.906  0.000  1.168  0.000  2.337  0.000  1.918  0.000  3.836  0.000  0.981  0.000  1.962  0.000  1.580  0.000  3.161  0.000  0.917  0.000  1.834  0.000  0.986  0.000  1.972  0.000  1.528  0.000  3.056  0.000  1.203  0.000  2.405  0.000  0.538  0.000  1.076  0.000  0.869  0.000  1.739  0.000  0.759  0.000  1.518  0.000  ...  ``` Here is the description of each line: * Line 1: 1 (fixed output), number of ions, 1 (fixed output), 0 (fixed output), unit cell volume divided by number of atoms, temperature.* Line 2: CAR (fixed output).* Line 3: Header of INCAR file (the tag SYSTEM).* Line 4: 0, 0, 0 (all fixed output).* Line 5: 1 (fixed output), NBLOCK.* Line 6: NPACO, NPACO, NPACO.* Line 7: NPACO.* Line 8: 0\\.1\\*10\\-9 (fixed output).* Line 9: APACO  \u00d7 {\\\\displaystyle \\\\times } 10\\-10/NPACO.* Line 10: NSW/NBLOCK/KBLOCK.* Line 11: POTIM  \u00d7 {\\\\displaystyle \\\\times } 10\\-15, norm of lattice vector 1 times 10\\-10, norm of lattice vector 2 times 10\\-10, norm of lattice vector 3 times 10\\-10.* Line 12\\-(12\\+NPACO): Input mean temperature/(NBLOCK  \u00d7 {\\\\displaystyle \\\\times } KBLOCK), actual mean temperature.* Following that the next NPACO lines show the pair correlation function for each species combination.* Optional (KBLOCK  \u00d7 {\\\\displaystyle \\\\times } NBLOCK/NSW)  \u00d7 {\\\\displaystyle \\\\times } NPACO\\+1 lines: The above is repeated KBLOCK  \u00d7 {\\\\displaystyle \\\\times } NBLOCK/NSW times. The order of species combinations (columns of the pair correlation function) follows column\\-wise the lower triangle of the species correlation matrix. That means for 3 species the order is the following:  ```total 1-1  1-2  1-3  2-2  2-3  3-3  ``` The numbers listed above corresponds to the species as encountered in the POSCAR/POTCAR file. The first column (total) reports the total pair correlation function. The PCDAT file contains no abscissa. To obtain the pair correlation functions with the corresponding abscissa the following 'bash/awk' script can be used: **Click to show/*pair\\_correlation\\_xny.sh***  ```file=PCDATawk <$file >PCDAT.xy 'NR==8 { pcskal=$1}NR==9 { pcfein=$1}NR==7 { npaco=$1}NR>=13 {    line=line+1  if (line==1) s=s+1  if (line==(npaco+1))  {     print \" \"     line=0 }  else  {     a1[line]=  a1[line] + $1     a2[line]=  a2[line] + $2     a3[line]=  a3[line] + $3     a4[line]=  a4[line] + $4     print (line-0.5)*pcfein/pcskal,$1,$2, $3, $4, $5 } }END { print \"final sets=\", s for (line=1\u00a0; line<=npaco\u00a0; line++)     print (line-0.5)*pcfein/pcskal,a1[line]/s,a2[line]/s,a3[line]/s,a4[line]/s } '  ``` To use this script, in your folder with the PCDAT file, please copy the content to *pair\\_correlation\\_xny.sh* and type the following:  ```bash pair_correlation_xny.sh   ``` The resulting pair correlation function is written to   ```PCDAT.xy  ```"}
{"file_name": "NSW.md", "content": "NSW= \\[integer]   Default: **NSW** \\= 0nDescription: NSW sets the maximum number of ionic steps.  --- IBRION \\= 0: NSW gives the number of steps in all molecular dynamics runs. It *has* to be supplied, otherwise VASP exits immediately after having started. We recommend splitting long MD runs containing ab\\-initio calculations into multiple calculations with NSW\u2a8520000\\. For ML\\_MODE\\=run larger values of NSW should be possible, but consider setting ML\\_OUTBLOCK.IBRION\u00a0!\\= 0:  In all minimization algorithms (quasi\\-Newton, conjugate gradient, and damped molecular dynamics) NSW defines the maximum number of ionic steps.Within each ionic step at most NELM electronic steps are performed. It is fewer if the convergence criterium set by EDIFF is met before. Forces and stresses are calculated according to the setting of ISIF for each ionic step."}
{"file_name": "DIPOL.md", "content": "DIPOL= \\[real array]nDescription: specifies the center of the cell in direct lattice coordinates with respect to which the total dipole\\-moment in the cell is calculated.  --- The center of the cell w.r.t. which the total dipole\\-moment in the cell is calculated is specified as  ```DIPOL=Rx Ry Rz  ``` where **R**x, **R**y and **R**z are given in direct lattice coordinates. Calculations using the dipole correction, i.e. using tags IDIPOL or LDIPOL, require a definition of the center of the cell. Results of the computed dipole moment might differ for different positions. The reason for this difference is that the definition of the dipole 'destroys' the translational symmetry, i.e., the dipole is defined as  \u222b (  r  \u2212  R  c e n t e r  )  \u03c1  i o n s \\+ v a l e n c e  (  r  )  d  3  r  . {\\\\displaystyle \\\\int ({\\\\mathbf {r} }\\-{\\\\mathbf {R} }\\_{\\\\rm {center}})\\\\rho \\_{\\\\rm {ions\\+valence}}({\\\\mathbf {r} })d^{3}{\\\\mathbf {r} }.} This measure will provide consistent values only if   \u03c1  i o n s \\+ v a l e n c e {\\\\displaystyle \\\\rho \\_{\\\\rm {ions\\+valence}}}  drops to zero at some distance from   R  c e n t e r {\\\\displaystyle \\\\mathbf {R} \\_{\\\\rm {center}}} . If this is not the case, the values are extremely sensitive with respect to changes in   R  c e n t e r {\\\\displaystyle \\\\mathbf {R} \\_{\\\\rm {center}}} . In such cases, it might be beneficial to increase the size of the cell along the vacuum dimension (for surfaces) or for the entire cell (for isolated molecules). | **Mind:** If the flag is not set, VASP determines where the charge density averaged over one plane drops to a minimum and calculates the center of the charge distribution by adding half of the lattice vector perpendicular to the plane where the charge density has a minimum (this is a rather reliable approach for orthorhombic cells) || --- | | **Tip:** For calculations of isolated molecules and surfaces with the dipole correction, use DIPOL as the center of mass of the atoms in your cell. Additionally, note that for surfaces, only the component normal to the surface is meaningful. || --- |"}
{"file_name": "Hybrid_functionals_-_Tutorial.md", "content": "Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorialsThe tutorial is made of the following parts: 1. bandgap of Si using different DFT\\+HF methods2. MgO optimum mixing3. fcc Ni DOS with hybrid functional4. Si bandstructure"}
{"file_name": "Plotting_exciton_wavefunction.md", "content": "[](File_HBN_exciton.html) Charge density of the first bright exciton in hBN. Plotting the wavefunction or charge density corresponding to an exciton can be instrumental in analyzing the excitonic state's symmetry, position, and localization. The exciton wavefunction is written as a function of coordinates of two particles (one hole and one electron)   \u03c8  \u03bb  (  r  e  ,  r  h  ) \\=  \u2211  v c  A  v c  \u03bb  \u03d5  v  \u2217  (  r  h  )  \u03d5  c  (  r  e  ) {\\\\displaystyle \\\\psi \\_{\\\\lambda }(\\\\mathbf {r} \\_{e},\\\\mathbf {r} \\_{h})\\=\\\\sum \\_{vc}A\\_{vc}^{\\\\lambda }\\\\phi \\_{v}^{\\*}(\\\\mathbf {r} \\_{h})\\\\phi \\_{c}(\\\\mathbf {r} \\_{e})}  . In order to visualize such a function in 3D space, we need to \"fix\" one of the coordinates: the position of the electron   \u03c8  \u03bb  (  r  e  ,  r  h  ) {\\\\displaystyle \\\\psi \\_{\\\\lambda }(r\\_{e},\\\\mathbf {r} \\_{h})}  or the position of the hole   \u03c8  \u03bb  (  r  e  ,  r  h  ) {\\\\displaystyle \\\\psi \\_{\\\\lambda }(\\\\mathbf {r} \\_{e},r\\_{h})}  . ### How to fix the position of the particle The position of the fixed particle is provided in direct (fractional) coordinates by the tags BSEHOLE or BSEELECTRON for a hole or an electron, respectively. The tag NBSEEIG sets the number of exciton wavefunctions that need to be computed. When fixing the position of the particle, ensure that it is not fixed exactly at the center of an atom or coincides with a node of the wavefunction. To avoid that, shift the fixed coordinate slightly away from the center of the atom. Furthermore, the wavefunction of the fixed particle is taken at the nearest   G {\\\\displaystyle \\\\mathbf {G} } \\-vector, whose exact position is written in the OUTCAR file   ```hole position is fixed at:  ```  or  ```electron position is fixed at:  ``` ### How to plot the exciton wavefunction VASP computes the charge density of a particular excitonic state, i.e.,   \u03c1  \u03bb  (  r  ) \\=  \\|  \u03c8  \u03bb  (  r  e  ,  r  h  )  \\|  2 {\\\\displaystyle \\\\rho \\_{\\\\lambda }(\\\\mathbf {r} )\\=\\|\\\\psi \\_{\\\\lambda }(r\\_{e},\\\\mathbf {r} \\_{h})\\|^{2}}  or  \u03c1  \u03bb  (  r  ) \\=  \\|  \u03c8  \u03bb  (  r  e  ,  r  h  )  \\|  2 {\\\\displaystyle \\\\rho \\_{\\\\lambda }(\\\\mathbf {r} )\\=\\|\\\\psi \\_{\\\\lambda }(\\\\mathbf {r} \\_{e},r\\_{h})\\|^{2}} , and writes the resulting charge density into CHG.XX files, which can be visualized using standard tools like VESTA, ASE, etc. Here, XX stands for the index   \u03bb {\\\\displaystyle \\\\lambda }  of the state. VASP computes the charge density by transforming the unit cell with k\\-points into a supercell. Thus, the exciton charge density is written for a supercell of dimensions   N K X  \u00d7  N K X  \u00d7  N K X {\\\\displaystyle {\\\\rm {NKX}}\\\\times {\\\\rm {NKX}}\\\\times {\\\\rm {NKX}}}  .The size of the supercell is written in the OUTCAR file  ```FFT grid for supercell:  ``` | **Mind:** The size of CHG.XX files can get very large. Estimate the CHG.XX file size as follows     (  N G X \u2217 N K X  ) \u00d7 (  N G X \u2217 N K X  ) \u00d7 (  N G X \u2217 N K X  ) \u2217 12   {\\\\displaystyle (\\\\mathrm {NGX\\*NKX} )\\\\times (\\\\mathrm {NGX\\*NKX} )\\\\times (\\\\mathrm {NGX\\*NKX} )\\*12}   )\\times (\\mathrm {NGX*NKX} )\\times (\\mathrm {NGX*NKX} )*12} bytes. Here, NG{X,Y,Z} is the number of grid points and NK{X,Y,Z} is the number of k\\-points along the axis. || --- | | **Warning:** The exciton charge density only accounts for the plane\\-wave part of the wavefunction, and the augmentation terms are neglected. || --- | ### Degeneracy The calculated excitonic states can be degenerate, i.e., multiple eigenvectors have the same energy. For the correct analysis, the degenerate states should be added together. | **Mind:** Calculation of the exciton wavefunction is only supported with IBSE\\=0 and ANTIRES\\=0\\. || --- | Related tags and sections------------------------- CHG, NBSEEIG, BSEHOLE, BSEELECTRON, BSE"}
{"file_name": "Linking_to_libraries.md", "content": "The link is specified by linker variables and then the linker is invoked as:  ```$(FCL) -o vasp  ..all-objects.. $(LLIBS)  ``` It is mandatory to link VASP to a library for Fast\\-Fourier transformations (FFT), the lib library, the parser library, and the linear algebra libraries BLAS, LAPACK, and scaLAPACK, as well as for the OpenACC GPU port NVIDIA HPC\\-SDK (\u226721\\.2\\). Other libraries, e.g., the HDF5 library and Wannier90, are optional. Linker variables================ ### FCL The command that invokes the linker. In most cases:  ```FCL=$(FC) [+ some options] ``` * Using the Intel Composer suite (Fortran compiler \\+ MKL libraries), typically:  ```FCL=$(FC) -mkl=sequential ``` ### LLIBS Specify libraries and/or objects to be linked against, in the usual way:  ```LLIBS=[-L/path/to/installation/lib -llibrary] [/path/to/file/library.a] [/path/to/file/object.o] ``` One has to specify several numerical libraries (BLAS, LAPACK or scaLAPACK, etc).For instance, using the Intel Composer suite (and compiling with `CPP_OPTIONS= .. -DscaLAPACK ..`) this yields: > ```> MKL_PATH   = $(MKLROOT)/lib/intel64> BLACS      = -lmkl_blacs_intelmpi_lp64> SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS)> LLIBS      += $(SCALAPACK) >> ``` The list of default objects required to compile VASP is given by the variable `SOURCE` in the `/path/to/vasp.X.X.X/src/.objects` file.Objects to be added to this list can be specified in `makefile.include` by means of:  ```OBJECTS= .. your list of objects .. ``` In practice, several objects *must* be added in this manner, e.g., FFT libraries). Libraries for linear algebra (mandatory)======================================== To build VASP, you need to link against BLAS, LAPACK, and scaLAPACK. Some compiler suites, e.g., the Intel Composer suite, pre\\-package these libraries, so there is no need to download and build them yourself. * Using the Intel Composer suite, linking against the BLAS, LAPACK, and scaLAPACK libraries that are part of MKL is done as follows: > ```> FCL        = mpiifort -mkl=sequential >> MKL_PATH   = $(MKLROOT)/lib/intel64> BLAS       => LAPACK     => BLACS      = -lmkl_blacs_intelmpi_lp64> SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS) >> LLIBS     += $(SCALAPACK) $(LAPACK) $(BLAS) >> ``` In case you use Intel's compilers with OpenMPI instead of Intel\\-MPI replace the `BLACS` line above by:  ```BLACS       = -lmkl_blacs_openmpi_lp64 ``` * For NVIDIA HPC\\-SDK (\\>\\=21\\.2\\) that is: > ```> BLAS       = -lblas> LAPACK     = -llapack> SCALAPACK  = -Mscalapack >> LLIBS     += $(SCALAPACK) $(LAPACK) $(BLAS) >> ``` * When you have built BLAS, LAPACK, and scaLAPACK yourself, you should link against the corresponding shared\\-objects (`lib*.so`) as follows: > ```> LIBDIR     = /path/to/my/libs/> BLAS       = -L$(LIBDIR) -lrefblas> LAPACK     = -L$(LIBDIR) -ltmglib -llapack> SCALAPACK  = -L$(LIBDIR) -lscalapack >> LLIBS     += $(SCALAPACK) $(LAPACK) $(BLAS) >> ``` To link against a static library object (`*.a`), for instance for scaLAPACK, replace the `SCALAPACK` line above by:  ```SCALAPACK  = $(LIBDIR)/libscalapack.a ``` fftw library (mandatory)======================== This library provides routines to perform Fast Fourier transformations (FFTs). ### OBJECTS Add the objects to be compiled (or linked against) that provide the FFTs (may include static libraries of objects `*.a`).Most probably you are building with `-DMPI` and want use the FFTs from some fftw library (recommended). In that case:  ```OBJECTS = fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o ``` ### INCS For the fftw library, i.e.,  ```OBJECTS= .. fftw3d.o fftmpiw.o .. ``` the variable `INCS` must be set to include the directory that holds `fftw3.f`:  ```INCS+=-I/path/to/fftw/installation ``` This is needed because `fftw3d.F` and `fftmpiw.F` include `fftw3.f`. | **Mind:** If `INCS` for fftw library is not set, then `fftw3.f` has to be present in `/path/to/vasp.X.X.X/src`. || --- | Common choices are: * When building with the Intel Composer suite it is best to link against the MKL fftw wrappers of Intel's FFTs: > ```> FCL = $(FC) -mkl=sequential >> OBJECTS = fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o> INCS   += -I$(MKLROOT)/include/fftw >> ``` * To explicitly link against an fftw library (in this case fftw\\-3\\.3\\.4): > ```> OBJECTS = fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o> FFTW      \u00a0?= /path/to/your/fftw-3.3.4> LLIBS      += -L$(FFTW)/lib -lfftw3> INCS       += -I$(FFTW)/include >> ``` * For other configurations, please take lead from the `makefile.include.your_choice` files in /path/to/vasp.x.x.x/arch or look at the makefile.include. Special rules for the optimization level of FFT related objects--------------------------------------------------------------- Based on past experience the optimization level for the compilation of the FFT\\-related objects is set explicitly.This is done as follows:  ```OBJECTS_O1 += fft3dfurth.o fftw3d.o fftmpi.o fftmpiw.oOBJECTS_O2 += fft3dlib.o  ``` lib library (mandatory)======================= The source of this library is included in the VASP distribution. The following variables are related to its configuration: ### CPP\\_LIB The command to invoke the precompiler. In most cases, it is set to:  ```CPP_LIB=$(CPP) ``` ### FC\\_LIB The command to invoke your Fortran compiler. Usually, set to:  ```FC_LIB=$(FC) ``` | **Mind:** The library can be compiled without MPI support, i.e., when `FC=mpif90`, FC\\_LIB may specify a Fortran compiler without MPI support, e.g.,`FC_LIB=ifort`. || --- | ### FFLAGS\\_LIB Fortran compiler flags, including a specification of the level of optimization. In most cases:  ```FFLAGS_LIB=-O1 ``` ### FREE\\_LIB Specifies the options that the Fortran compiler requires to accept free\\-form source layout, without line\\-length limitation. In most cases, it will suffise to set:  ```FREE_LIB=$(FREE) ``` ### CC\\_LIB The command to invoke your C compiler, e.g., gcc, icc, etc. | **Mind:** The lib library can be compiled without MPI support. || --- | ### CFLAGS\\_LIB C compiler flags, including a specification of the level of optimization. In most cases:  ```CFLAGS_LIB=-O ``` ### OBJECTS\\_LIB List of \"non\\-standard\" objects to be added to the library. In most cases:  ```OBJECTS_LIB= linpack_double.o ``` When compiling VASP with \\-Duse\\_shmem, one has to add `getshmem.o` as well, i.e., add the following line:  ```OBJECTS_LIB+= getshmem.o ``` parser library (mandatory)========================== The source of this library is included in the VASP distribution. The following variables are related to its configuration: ### CXX\\_PARS The command to invoke your C\\+\\+ compiler, e.g., g\\+\\+, icpc, etc.The parser needs to be linked against a *C\\+\\+ Standard* library.If this is not already part of the definition of `FCL` it can be added to the compiler option `LLIBS`.When using the Intel Composer suite this would amount to:  ```LLIBS += -lstdc++  ``` QD library========== The QD library is included in NVIDIA HPC SDK \u2267 21\\.2 and supports quadruple precision arithmetic.Add the following lines to your makefile.include:  ```NVROOT    \u00a0?= /path/to/nvidia/hpc_sdk/Linux_x86_64/versionQD        \u00a0?= $(NVROOT)/compilers/extras/qdLLIBS      += -L$(QD)/lib -lqdmod -lqdINCS       += -I$(QD)/include/qd  ``` | **Tip:** The following line might help to find the NVIDIA root: || --- |  ```NVROOT      =$(shell which nvfortran | awk -F /compilers/bin/nvfortran '{ print $$1 }')  ``` | **Important:** As of NVIDIA HPC SDK \\= 21\\.2, the library path of the QD library needs to be added manually to the system environment: || --- |  ```export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(NVROOT)/compilers/extras/qd/lib  ``` Optional libraries================== See how to customize the makefile.include file to find an overview of optional libraries. Related articles---------------- Installing VASP.6\\.X.X,makefile.include,Compiler options,Precompiler options,OpenACC GPU port of VASP,Toolchains,Validation tests,Known issues  ---"}
{"file_name": "CRPA_formalism.md", "content": "The constrained random\\-phase approximation (CRPA) is a method that allows to calculate the effective interaction parameter U, J and J' for model Hamiltonians. The main idea is to neglect screening effects of specific **target states** in the screened Coulomb interaction W of the GW method. The resulting partially screened Coulomb interaction is usually evaluated in a localized basis that spans the target space and is described by the model Hamiltonian. Usually, the target space is low\\-dimensional (up to 5 states) and therefore allows for the application of a higher level theory, such as dynamical mean field theory (DMFT).   Model Hamiltonians------------------ A model Hamiltonian describes a small subset of electrons around the chemical potential and has, in second quantization, following form  H \\=  \u2211  \u03c3  \u2211  \\< i j \\>  t  i j  \u03c3  c  i \u03c3  \u2020  c  j \u03c3  \\+  \u2211  \u03c3  \u03c3 \u2032  \u2211  \\< i j k l \\>  U  i j k l  \u03c3  \u03c3 \u2032  c  i \u03c3  \u2020  c  k  \u03c3 \u2032  \u2020  c  j \u03c3  c  l  \u03c3 \u2032 {\\\\displaystyle H\\=\\\\sum \\_{\\\\sigma }\\\\sum \\_{\\<ij\\>}t\\_{ij}^{\\\\sigma }c\\_{i\\\\sigma }^{\\\\dagger }c\\_{j\\\\sigma }\\+\\\\sum \\_{\\\\sigma \\\\sigma '}\\\\sum \\_{\\<ijkl\\>}U\\_{ijkl}^{\\\\sigma \\\\sigma '}c\\_{i\\\\sigma }^{\\\\dagger }c\\_{k\\\\sigma '}^{\\\\dagger }c\\_{j\\\\sigma }c\\_{l\\\\sigma '}} Here,   i , j , k , l {\\\\displaystyle i,j,k,l}  are site and   \u03c3 ,  \u03c3 \u2032 {\\\\displaystyle \\\\sigma ,\\\\sigma '}  spin indices, respectively and the symbol   \\< \u22ef \\> {\\\\displaystyle \\<\\\\cdots \\>}  indicates summation over nearest neighbors. The hopping matrix elements   t  i j  \u03c3 {\\\\displaystyle t\\_{ij}^{\\\\sigma }}  describe the hopping of electrons (of same spin) between site   i {\\\\displaystyle i}  and  j {\\\\displaystyle j} , while the effective Coulomb matrix elements   U  i j k l  \u03c3  \u03c3 \u2032 {\\\\displaystyle U\\_{ijkl}^{\\\\sigma \\\\sigma '}}  describe the interaction of electrons between sites.  ### Wannier basis and target space To use model Hamiltonians successfully a localized basis set is chosen. In most applications this basis set consists of Wannier states that are connected with the Bloch functions   \u03c8  n  k  \u03c3  (  r  ) \\=  e  i  k r  u  n  k  (  r  ) {\\\\displaystyle \\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }({\\\\bf {r}})\\=e^{i{\\\\bf {kr}}}u\\_{n{\\\\bf {k}}}({r})}  of band   n {\\\\displaystyle n}  at k\\-point   k {\\\\displaystyle k}  with spin   \u03c3 {\\\\displaystyle \\\\sigma }  via  \\|  w  i  R  \u03c3  \u27e9 \\=  1  N  k  \u2211  n  k  e  \u2212 i  k R  T  i n  \u03c3 (  k  )  \\|  \u03c8  n  k  \u03c3  \u27e9 {\\\\displaystyle \\|w\\_{i{\\\\bf {R}}}^{\\\\sigma }\\\\rangle \\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{n{\\\\bf {k}}}e^{\\-i{\\\\bf {kR}}}T\\_{in}^{\\\\sigma ({\\\\bf {k}})}\\|\\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } Usually, the basis set is localized such that the interaction between periodic images can be neglected. This allows to work with the Wannier functions in the unit cell at   R \\= 0 {\\\\displaystyle {\\\\bf {R\\=0}}}  :  \\|  w  i  \u03c3  \u27e9 \\=  1  N  k  \u2211  n  k  T  i n  \u03c3 (  k  )  \\|  \u03c8  n  k  \u03c3  \u27e9 {\\\\displaystyle \\|w\\_{i}^{\\\\sigma }\\\\rangle \\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{n{\\\\bf {k}}}T\\_{in}^{\\\\sigma ({\\\\bf {k}})}\\|\\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } | **Mind:** Here, T instead of the widely used U notation for the transformation matrix is used to avoid confusion with the Hubbard parameter. || --- | In practice, one builds a model Hamiltonian only for a small subset of Bloch functions. These **target states** are typically centered around the chemical potential (or Fermi energy) and are strongly localized around ions. The model Hamiltonian can be solved successfully only if the target states are well represented by the Wannier basis. As a measure of the Wannier representation, one usually compares the original band structure with the Wannier interpolated one.  In the following example (SrVO3\\), the target space consists of three Bloch bands (red bands) that may be represented well by three Wannier states: [](File_SrVO3_t2g_bands.html) The complete target space is spanned by a certain number of Bloch bands. These bands can be selected with the NCRPA\\_BANDS tag.  More often, however, one has delocalized states that mix with the target space of the model. Without including these additional states in the Wannier basis, a good representation of the band structure is not possible. Below is an example (face\\-centered\\-cubic Ni), where the delocalized s\\-band (blue) crosses the five target d\\-states (red): [](File_Ni_d_s_bands.html) This system requires at least six Wannier states to represent the electronic structure of five target states well. The selection of target states in the Wannier basis is done with the NTARGET\\_STATES.  If a modification of the band structure is acceptable within an energy window, these five target states might be **disentangled** from the remaining ones, and one arrives at the following picture: [](File_Ni_d_bands_decoupled.html) Here the original Bloch bands (gray lines) are projected to five non\\-crossing Wannier states. In the following   T {\\\\displaystyle {\\\\cal {T}}}  denotes the **target space**, that is, the states described by the model Hamiltonian. ### Parameter definitions | **Mind:** The calculation of the hopping matrix     t   {\\\\displaystyle t}  t depends on the theory that is used to solve the effective model. || --- | For instance, in DFT\\+DMFT (often termed LDA\\+DMFT) one calculates the hopping matrix from Kohn\\-Sham energies, while in GW\\+DMFT GW quasi\\-particle energies are used.  If  \u03f5  n  k  \u03c3 {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}^{\\\\sigma }}  denotes these one\\-electron energies and   \u03bc  \u03c3 {\\\\displaystyle \\\\mu ^{\\\\sigma }}  is the corresponding Fermi energy, the hopping matrix elements are calculated with following formula  t  i j  \u03c3  \\=  1  N  k  \u2211  n  k  T  i n  \u2217 \u03c3 (  k  )  (  \u03f5  n  k  \u03c3  \u2212  \u03bc  \u03c3  )  T  j n  \u03c3 (  k  ) {\\\\displaystyle t\\_{ij}^{\\\\sigma }\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{n{\\\\bf {k}}}T\\_{in}^{\\*\\\\sigma ({\\\\bf {k}})}(\\\\epsilon \\_{n{\\\\bf {k}}}^{\\\\sigma }\\-\\\\mu ^{\\\\sigma })T\\_{jn}^{\\\\sigma ({\\\\bf {k}})}} Similarly, Coulomb matrix elements are evaluated from the Bloch representation of the effective Coulomb kernel   U  G G  \u2032  (  q  ) {\\\\displaystyle U\\_{{\\\\bf {GG}}'}({\\\\bf {q}})}  via  U  i j k l  \u03c3  \u03c3 \u2032  \\=  1  N  k  3  \u2211  k k q  \u2211  n  1  n  2  n  3  n  4  T  i  n  1  \u2217 (  k  )  T  j  n  2  (  k \u2212 q  )  \u27e8  u  n  1  k  \\|  e  \u2212 i (  q \\+ G  ) \u22c5  r  \\|  u  n  2  k \u2212 q  \u27e9  U  G G  \u2032  (  q  ) \u27e8  u  n  3  k \u2032  \u2212 q  \\|  e  i (  q \u2212  G \u2032  ) \u22c5  r \u2032  \\|  u  n  4  k \u2032  \u27e9  T  k  n  3  \u2217 (  k \u2032  \u2212 q  )  T  l  n  4  (  k \u2032  ) {\\\\displaystyle U\\_{ijkl}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N\\_{k}^{3}}}\\\\sum \\_{\\\\bf {kkq}}\\\\sum \\_{n\\_{1}n\\_{2}n\\_{3}n\\_{4}}T\\_{in\\_{1}}^{\\*({\\\\bf {k}})}T\\_{jn\\_{2}}^{({\\\\bf {k\\-q}})}\\\\langle u\\_{n\\_{1}{\\\\bf {k}}}\\|e^{\\-i({\\\\bf {q\\+G}})\\\\cdot {\\\\bf {r}}}\\|u\\_{n\\_{2}{\\\\bf {k\\-q}}}\\\\rangle U\\_{{\\\\bf {GG}}'}({\\\\bf {q}})\\\\langle u\\_{n\\_{3}{\\\\bf {k'\\-q}}}\\|e^{i({\\\\bf {q\\-G'}})\\\\cdot {\\\\bf {r'}}}\\|u\\_{n\\_{4}{\\\\bf {k'}}}\\\\rangle T\\_{kn\\_{3}}^{\\*({\\\\bf {k'\\-q}})}T\\_{ln\\_{4}}^{({\\\\bf {k'}})}} | **Mind:** The effective Coulomb kernel is frequency dependent and thus the effective interaction in the model as well. || --- | In most applications, however, one considers the static limit   U \\= U ( \u03c9 \u2192 0 ) {\\\\displaystyle U\\=U(\\\\omega \\\\to 0\\)}  . In practice one often, simplifies the model Hamiltonian further and works with the Hubbard\\-Kanamori parameters:[\\[1]](#cite_note-vaugier:prb:86-1)  U  \u03c3  \u03c3 \u2032  \\=  1 N  \u2211  i \u2208  T  U  i i i i  \u03c3  \u03c3 \u2032 {\\\\displaystyle {\\\\cal {U}}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N}}\\\\sum \\_{i\\\\in {\\\\cal {T}}}U\\_{iiii}^{\\\\sigma \\\\sigma '}}  U \u2032  \u03c3  \u03c3 \u2032  \\=  1  N ( N \u2212 1 )  \u2211  i , j \u2208  T  , i \u2260 j  N  U  i j j i  \u03c3  \u03c3 \u2032 {\\\\displaystyle {\\\\cal {U'}}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N(N\\-1\\)}}\\\\sum \\_{i,j\\\\in {\\\\cal {T}},i\\\eq j}^{N}U\\_{ijji}^{\\\\sigma \\\\sigma '}}  J  \u03c3  \u03c3 \u2032  \\=  1  N ( N \u2212 1 )  \u2211  i , j \u2208  T  , i \u2260 j  N  U  i j i j  \u03c3  \u03c3 \u2032 {\\\\displaystyle {\\\\cal {J}}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N(N\\-1\\)}}\\\\sum \\_{i,j\\\\in {\\\\cal {T}},i\\\eq j}^{N}U\\_{ijij}^{\\\\sigma \\\\sigma '}} Here   N {\\\\displaystyle N}  specifies the number of Wannier functions in the target space   T {\\\\displaystyle {\\\\cal {T}}}  . Effective Coulomb kernel in constrained random\\-phase approximation------------------------------------------------------------------- In analogy to the screened Coulomb kernel in GW, the effective coulomb kernel is calculated as   U  G  G  \u2032  \u03c3  \u03c3 \u2032  (  q  , i \u03c9 ) \\=  \\[  \u03b4  G  G  \u2032  \u2212 (  \u03c7  G  G  \u2032  \u03c3  \u03c3 \u2032  (  q  , i \u03c9 ) \u2212  \u03c7 \\~  G  G  \u2032  \u03c3  \u03c3 \u2032  (  q  , i \u03c9 ) ) \u22c5  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle U\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{\\\\sigma \\\\sigma '}({\\\\bf {q}},i\\\\omega )\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-(\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}^{\\\\sigma \\\\sigma '}({\\\\bf {q}},i\\\\omega )\\-{\\\\tilde {\\\\chi }}\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{\\\\sigma \\\\sigma '}({\\\\bf {q}},i\\\\omega ))\\\\cdot V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})} In contrast to the GW method, however, the polarizability contains all RPA screening effects except those from the target space. These effects are described by   \u03c7 \\~ {\\\\displaystyle {\\\\tilde {\\\\chi }}} . In the following four methods are presented for the calculation of   \u03c7 \\~ {\\\\displaystyle {\\\\tilde {\\\\chi }}}  . | **Mind:** All methods below reduce to the **band method** if the target space forms an isolated set of bands. || --- |   | **Tip:** Select cRPA methods with ALGO \\= CRPA. || --- | ### Band method The simplest way to define the target polarizability is to use the expression of Adler and Wiser[\\[2]](#cite_note-adler:1962-2)[\\[3]](#cite_note-wiser:1963-3)[\\[4]](#cite_note-aryasetiawan:prb70-4)  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  k  \u2211  n  n \u2032  \u2208  T  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  \u27e8  u  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  n  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{\\\\bf {k}}\\\\sum \\_{nn'\\\\in {\\\\cal {T}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\langle u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } This approach is most accurate for an isolated target space   T {\\\\displaystyle {\\\\cal {T}}}  as depicted in the first example above.  | **Mind:** Target bands can be selected with NCRPA\\_BANDS. || --- | | **Warning:** This method is not suited for systems with entangled target states. || --- | ### Disentanglement method Miyake, Aryasetiawan, and Imada[\\[5]](#cite_note-miyake:prb:80-5) propose to disentangle the target space from the full space by diagonalizing the Hamiltonian in both spaces independently. This yields a band disentangled band structures similar to the one shown in the third example above. The corresponding target polarizability reduces to a constrained Alder and Wiser expression[\\[2]](#cite_note-adler:1962-2)[\\[3]](#cite_note-wiser:1963-3)  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  k  \u2211  n  n \u2032  \u2208  T  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5 \\~  n  k  \u2212  \u03f5 \\~  n \u2032  k \u2212 q  \u2212 i \u03c9  \u27e8  u \\~  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u \\~  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u \\~  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u \\~  n  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{\\\\bf {k}}\\\\sum \\_{nn'\\\\in {\\\\cal {T}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{{\\\\tilde {\\\\epsilon }}\\_{n{\\\\bf {k}}}\\-{\\\\tilde {\\\\epsilon }}\\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\langle {\\\\tilde {u}}\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|{\\\\tilde {u}}\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle {\\\\tilde {u}}\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|{\\\\tilde {u}}\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle }  ,where   \u03f5 \\~  n  k  \u03c3 {\\\\displaystyle {\\\\tilde {\\\\epsilon }}\\_{n{\\\\bf {k}}}^{\\\\sigma }}  is the disentangled band structure. The resulting Hubbard\\-Kanamori interactions depend on the chosen energy window of the Wannier functions. | **Mind:** Typically, this method yields the largest Hubbard\\-Kanamori interactions and is selected with LDISENTANGLED tag. || --- | ### Weighted method Sasioglu, Friedrich and Bl\u00fcgel propose an alternative approach.[\\[6]](#cite_note-sasioglu:prb:83-6) They calculate the screening effects within the target space as follows:  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \u2248  1  N  k  \u2211  n  n \u2032  k  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  p  n  k  \u03c3  p  n \u2032  k \u2212 p  \u03c3 \u2032  \u27e8  u  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  n \u2032  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\\\approx {\\\\frac {1}{N\\_{k}}}\\\\sum \\_{nn'{\\\\bf {k}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}p\\_{n{\\\\bf {k}}}^{\\\\sigma }p\\_{n'{\\\\bf {k\\-p}}}^{\\\\sigma '}\\\\langle u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{n'{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } Here the weighting factors  p  n  k  \u03c3  \\=  \u2211  i \u2208  T  \\|  T  i n  \u03c3 (  k  )  \\|  2  ,  0 \u2264  p  n  k  \u03c3  \u2264 1 {\\\\displaystyle p\\_{n{\\\\bf {k}}}^{\\\\sigma }\\=\\\\sum \\_{i\\\\in {\\\\cal {T}}}\\|T\\_{in}^{\\\\sigma ({\\\\bf {k}})}\\|^{2},\\\\quad 0\\\\leq p\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\leq 1} measure the probability for   \\|  \u03c8  n  k  \u03c3  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle }  being in the target space. This method does not alter the band structure, however, neglects screening effects within the target space as shown in next section. Typically, the weighted cRPA method yields the smallest Hubbard\\-Kanamori interactions. | **Mind:** This method is selected with the LWEIGHTED tag. || --- | ### Projector method A consistent expression for the target polarizability gives rise to the projector\\-cRPA method. The main goal is to subdivide the target from the full Fock space in a Wannier basis. To this end, we work with the target projectors  P  m n  \u03c3 (  k  )  \\=  \u2211  i \u2208  T  T  i m  \u2217 \u03c3 (  k  )  T  i n  \u03c3 (  k  ) {\\\\displaystyle P\\_{mn}^{\\\\sigma ({\\\\bf {k}})}\\=\\\\sum \\_{i\\\\in {\\\\cal {T}}}T\\_{im}^{\\*\\\\sigma ({\\\\bf {k}})}T\\_{in}^{\\\\sigma ({\\\\bf {k}})}} that filter out target space contributions to each Bloch state. Using these projectors,the target polarizability for the projector method reads[\\[7]](#cite_note-kaltak:thesis2015-7)  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  n  n \u2032  k  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  \u00d7  \u2211  m  1  m  2  \u2032  P  m  1  n  \u2217 \u03c3 (  k  )  \u27e8  u  m  1  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  m  2  \u2032  k \u2212 q  \u03c3 \u2032  \u27e9  P  m  2  \u2032  n \u2032  \u03c3 \u2032  (  k \u2212 q  )  \u00d7  \u2211  m  1  \u2032  m  2  P  m  2  n \u2032  \u2217  \u03c3 \u2032  (  k \u2212 q  )  \u27e8  u  m  2  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  m  1  \u2032  k  \u03c3  \u27e9  P  m  1  \u2032  n  \u03c3 (  k  ) {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{nn'{\\\\bf {k}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\times \\\\sum \\_{m\\_{1}m\\_{2}'}P\\_{m\\_{1}n}^{\\*\\\\sigma ({\\\\bf {k}})}\\\\langle u\\_{m\\_{1}{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{m\\_{2}'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle P\\_{m\\_{2}'n'}^{\\\\sigma '({\\\\bf {k\\-q}})}\\\\times \\\\sum \\_{m\\_{1}'m\\_{2}}P\\_{m\\_{2}n'}^{\\*\\\\sigma '({\\\\bf {k\\-q}})}\\\\langle u\\_{m\\_{2}{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{m\\_{1}'{\\\\bf {k}}}^{\\\\sigma }\\\\rangle P\\_{m\\_{1}'n}^{\\\\sigma ({\\\\bf {k}})}} The projector method usually results in larger (smaller) Hubbard\\-Kanamori interactions than the weighted (disentanglement) method. | **Mind:** The projector method is the default cRPA method. || --- | Caveats------- The cRPA method is usually applied to systems with a zero\\-band gap (metallic system) and, thus, suffers from slow k\\-point convergence. Most reliably, the usage of k\\-p perturbation theory should be avoided. That is, LOPTICS\\=.FALSE. should be set in the preceding DFT step and/or the WAVEDER should be deleted before the cRPA step. | **Tip:** If NCRPA\\_BANDS is set in the INCAR and includes all partially occupied bands, one can use WAVEDER in cRPA calculations to accelerate k\\-point convergence. || --- |"}
{"file_name": "Plotting_the_BSE_fatband_structure.md", "content": "Redirect to: * Plot BSE fatbands"}
{"file_name": "LPEAD.md", "content": "LPEAD= .TRUE. \\| .FALSE   Default: **LPEAD** \\= .FALSE.nDescription: for LPEAD\\=.TRUE., the derivative of the cell\\-periodic part of the orbitals w.r.t. **k**, \\|\u2207**k**un**k**\u27e9, is calculated using finite differences.  --- The derivative of the cell\\-periodic part of the orbitals w.r.t. **k**, **k**, \\|\u2207**k**un**k**\u27e9, may be written as:  \\|  \u2207  k  u \\~  n  k  \u27e9 \\=  \u2211  n \u2260  n \u2032  \\|  u \\~  n \u2032  k  \u27e9 \u27e8  u \\~  n \u2032  k  \\|  \u2202  \\[  H (  k  ) \u2212  \u03f5  n  k  S (  k  )  ]  \u2202  k  \\|  u \\~  n  k  \u27e9  \u03f5  n  k  \u2212  \u03f5  n \u2032  k {\\\\displaystyle \\|\\\\mathbf {\\\abla \\_{k}} {\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle \\=\\\\sum \\_{n\\\eq n'}{\\\\frac {\\|{\\\\tilde {u}}\\_{n'\\\\mathbf {k} }\\\\rangle \\\\langle {\\\\tilde {u}}\\_{n'\\\\mathbf {k} }\\|{\\\\frac {\\\\partial \\\\left\\[H(\\\\mathbf {k} )\\-\\\\epsilon \\_{n\\\\mathbf {k} }S(\\\\mathbf {k} )\\\\right]}{\\\\partial \\\\mathbf {k} }}\\|{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle }{\\\\epsilon \\_{n\\\\mathbf {k} }\\-\\\\epsilon \\_{n'\\\\mathbf {k} }}}} where H(**k**) and S(**k**) are the Hamiltonian and overlap operator for the cell\\-periodic part of the orbitals, and the sum over *n*\u00b4 must include a sufficiently large number of unoccupied states. It may also be found as the solution to the following linear Sternheimer equation (see LEPSILON):  \\[  H (  k  ) \u2212  \u03f5  n  k  S (  k  )  ]  \\|  \u2207  k  u \\~  n  k  \u27e9 \\= \u2212  \u2202  \\[  H (  k  ) \u2212  \u03f5  n  k  S (  k  )  ]  \u2202  k  \\|  u \\~  n  k  \u27e9 {\\\\displaystyle \\\\left\\[H(\\\\mathbf {k} )\\-\\\\epsilon \\_{n\\\\mathbf {k} }S(\\\\mathbf {k} )\\\\right]\\|\\\\mathbf {\\\abla \\_{k}} {\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle \\=\\-{\\\\frac {\\\\partial \\\\left\\[H(\\\\mathbf {k} )\\-\\\\epsilon \\_{n\\\\mathbf {k} }S(\\\\mathbf {k} )\\\\right]}{\\\\partial \\\\mathbf {k} }}\\|{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle } Alternatively one may compute   \u2207  k  u \\~  n  k {\\\\displaystyle \\\abla \\_{\\\\mathbf {k} }{\\\\tilde {u}}\\_{n\\\\mathbf {k} }}  from finite differences:  \u2202  \\|  u \\~  n  k  j  \u27e9  \u2202 k  \\=  i e  2 \u0394 k  \u2211  m \\= 1  N  \\[  \\|  u \\~  m  k  j \\+ 1  \u27e9  S  m n  \u2212 1  (  k  j  ,  k  j \\+ 1  ) \u27e9 \u2212  \\|  u \\~  m  k  j \u2212 1  \u27e9  S  m n  \u2212 1  (  k  j  ,  k  j \u2212 1  ) \u27e9  ] {\\\\displaystyle {\\\\frac {\\\\partial \\|{\\\\tilde {u}}\\_{n\\\\mathbf {k} \\_{j}}\\\\rangle }{\\\\partial k}}\\={\\\\frac {ie}{2\\\\Delta k}}\\\\sum \\_{m\\=1}^{N}\\\\left\\[\\|{\\\\tilde {u}}\\_{m\\\\mathbf {k} \\_{j\\+1}}\\\\rangle S\\_{mn}^{\\-1}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\+1})\\\\rangle \\-\\|{\\\\tilde {u}}\\_{m\\\\mathbf {k} \\_{j\\-1}}\\\\rangle S\\_{mn}^{\\-1}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\-1})\\\\rangle \\\\right]} where *m* runs over the *N* occupied bands of the system, \u0394*k*\\=**k**j\\+1\\-**k**j, and  S  n m  (  k  j  ,  k  j \\+ 1  ) \\= \u27e8  u \\~  n  k  j  \\|  u \\~  m  k  j \\+ 1  \u27e9 {\\\\displaystyle S\\_{nm}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\+1})\\=\\\\langle {\\\\tilde {u}}\\_{n\\\\mathbf {k} \\_{j}}\\|{\\\\tilde {u}}\\_{m\\\\mathbf {k} \\_{j\\+1}}\\\\rangle }  .As mentioned in the context of the self\\-consistent response to finite electric fields one may derive analoguous expressions for \\|\u2207**k**un**k**\u27e9 using higher\\-order finite difference approximations. When LPEAD\\=.TRUE., VASP will compute \\|\u2207**k**un**k**\u27e9 using the aforementioned finite difference scheme. The order of the finite difference approximation can be specified by means of the IPEAD\\-tag (default: IPEAD\\=4\\). These tags may be used in combination with LOPTICS\\=.TRUE. and LEPSILON\\=.TRUE..  --- * N.B. Please note that LPEAD \\= .TRUE. **is not supported for metallic systems**."}
{"file_name": "Monopole_Dipole_and_Quadrupole_Corrections.md", "content": "For charged cells or for calculations of molecules and surfaces with a large dipole moment, the energy converges very slowly with respect to the size   L {\\\\displaystyle L}  of the supercell. Using methods discussed by Makov *et al.*[\\[1]](#cite_note-Makov95-1) and Neugebauer *et al.*[\\[2]](#cite_note-Neugebauer92-2), VASP can correct for the leading errors (in many details, we have taken a more general approach, though).  Suggested combination of tags for electrostatic corrections----------------------------------------------------------- In cases where the system has no net charge and no net dipole moment, no specific tags need to be set and this section can be skipped. ### Bulk If the system has a net dipole or net charge, please follow the recommendations of this wiki page. ### Surfaces If the system has a net dipole moment, a combination of IDIPOL\\=1,2,3 and LDIPOL tags may be used. The former corrects the energies, while the latter corrects the potential and forces. Optionally, DIPOL may be set. The following options may be used to improve convergence for this case. 1\\. Use any of these tags only after pre\\-converging the orbitals without the LDIPOL tag 2\\. The center of charge should be set in the INCAR file (DIPOL\\= center of mass)  3\\. Ensure that the cell is sufficiently large to determine the dipole moment with sufficient accuracy (see DIPOL). If the cell is too small, the charge might slash through the vacuum, causing very slow convergence. Often convergence improves with the size of the supercell. | **Warning:** Surface calculations with a net charge result in total energies that do not converge. Relative energies may still be useful. || --- | ### Wires Not implemented. ### Molecules If the system has a net dipole moment, use the LDIPOL tag. The former corrects the energies, while the latter corrects the potential and forces. Optionally, DIPOL may be set. Current limitations------------------- For the current implementation, there are several restrictions; please read carefully: * Charged systems: Quadrupole corrections are only correct for cubic supercells (this means that the calculated 1/*L*3 corrections are wrong for charged supercells if the supercell is non\\-cubic). In addition, we have found empirically that for charged systems with excess electrons (NELECT\\>NELECTneutral) more reliable results can be obtained if the energy after correction of the linear error (1/*L*) is plotted against 1/*L*3 to extrapolate results manually for *L*\u2192\u221e. This is due to the uncertainties in extracting the quadrupole moment of systems with excess electrons.* Potential corrections are only possible for orthorhombic cells (at least the direction in which the potential is corrected must be orthogonal to the other two directions). Step\\-by\\-step instructions--------------------------- ### Using the dipole correction for slab calculations In this section, we discuss step\\-by\\-step instructions to use the dipole corrections for slab calculations.  **Step 1:** Create a system which has enough vacuum on either side of the surface normal. An example for such a structure is shown below, for an fcc\\-Aluminium with a carbon adsorbed on one of its surface terminations.   ```Al3C1.0000000000000000   2.8637824638055176    0.0000000000000000    0.0000000000000000   1.4318912319027588    2.4801083645679673    0.0000000000000000   0.0000000000000000    0.0000000000000000   20.0000000000000000Al C 3 1Direct   0.8333333333333333    0.5000000000000000    0.3380865704891008   0.1666666666666666    0.8333333333333334    0.4550000000000000   0.4999999999999999    0.1666666666666667    0.5719134295108992   0.4999999999999999    0.1666666666666667    0.6619134295108993  ``` Note that the system has plenty of vacuum on either side. This empty space is important for the potential corrections needed for the LDIPOL tag. **Step 2:** Switch on the dipole corrections to the energy, potential and forces. Optionally set the DIPOL  ```LDIPOL    = TIDIPOL    = 3DIPOL     = 0.5 0.5 0.5  ``` **Step 3 (Optional):** View the dipole moment for the system using the following bash command,  ```grep dipolmoment OUTCAR | tail -1  ``` In this example, we get the following output:  ``` dipolmoment           0.000000      0.000000      0.128389 electrons x Angstroem  ``` which refers to the dipole moment along the three axes. Consistent with the POSCAR used in this example, only the last axis has a non\\-zero dipole moment. Related Tags and Sections------------------------- NELECT,EPSILON,DIPOL,IDIPOL,LDIPOL,LMONO,EFIELD Examples that use this tag"}
{"file_name": "PAW_method.md", "content": "Basics of the PAW formalism--------------------------- The PAW formalism is a generalization of ideas of both Vanderbilt\\-type[\\[1]](#cite_note-vander:90-1)ultrasoft\\-pseudopotentials[\\[2]](#cite_note-kresshaf:94-2) (USPP) and the linearized augmented\\-plane\\-wave[\\[3]](#cite_note-andersen:75-3) (LAPW) method. The method was first proposed and implemented by Bl\u00f6chl[\\[4]](#cite_note-bloechl:94-4). The formal relationship between Vanderbilt\\-typeultrasoft pseudopotentials and the PAW method has been derived by Kresse and Joubert[\\[5]](#cite_note-kressjoub:99-5), and the generalization of the PAW method to noncollinear magnetism has beendiscussed by Hobbs, Kresse and Hafner[\\[6]](#cite_note-hobbs:00-6). We briefly summarize the basics of the PAW method below (following Refs. [\\[4]](#cite_note-bloechl:94-4) and [\\[5]](#cite_note-kressjoub:99-5)).  In the PAW method the one electron wavefunctions   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }} , in the following simply called orbitals, arederived from the pseudo orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }}  by means of a linear transformation:  \\|  \u03c8  n  k  \u27e9 \\=  \\|  \u03c8 \\~  n  k  \u27e9 \\+  \u2211  i  (  \\|  \u03d5  i  \u27e9 \u2212  \\|  \u03d5 \\~  i  \u27e9 ) \u27e8  p \\~  i  \\|  \u03c8 \\~  n  k  \u27e9 . {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{i}(\\|\\\\phi \\_{i}\\\\rangle \\-\\|{\\\\widetilde {\\\\phi }}\\_{i}\\\\rangle )\\\\langle {\\\\widetilde {p}}\\_{i}\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle .} The pseudo orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }} , where   n k {\\\\displaystyle nk}  is the band index and k\\-point index, are the variational quantities and expanded in plane waves (see below). In the interstitial region between the PAW spheres,the orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }}  are identical to the exact orbitals   \u03c8  n  k {\\\\displaystyle {\\\\psi }\\_{n\\\\mathbf {k} }}  .Inside the spheres, the pseudo\\-orbitals are however only a computationaltool and an inaccurateapproximation to the true orbitals, since even thenorm of the all\\-electron wave function is not reproduced. The last equation is required to map the auxiliary quantities   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }} onto the corresponding exact orbitals. The PAW method implemented in VASP exploits the frozen core (FC) approximation, which is not an inherent characteristic of the PAW method, but has been made in all implementations so far.In the present case, the core electrons are also kept frozen in the configuration for which the PAW dataset was generated. The index   \u03b1 {\\\\displaystyle \\\\alpha }  is a shorthand for the atomic site   R  \u03b1 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }} , the angular momentumquantum numbers   l  \u03b1  ,  m  \u03b1 {\\\\displaystyle l\\_{\\\\alpha },m\\_{\\\\alpha }}  and an additional index   \u03b5  \u03b1 {\\\\displaystyle \\\\varepsilon \\_{\\\\alpha }}  referring tothe referenceenergy. The pseudo orbitals are expanded in the reciprocal space using plane waves  \u27e8  r  \\|  \u03c8 \\~  n  k  \u27e9 \\=  1  \u03a9  1  /  2  \u2211  G  C  n  k G  e  i (  G  \\+  k  ) \u22c5  r  , {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\={\\\\frac {1}{\\\\Omega ^{1/2}}}\\\\sum \\_{\\\\mathbf {G} }C\\_{n\\\\mathbf {kG} }e^{i(\\\\mathbf {G} \\+\\\\mathbf {k} )\\\\cdot \\\\mathbf {r} },} where   \u03a9 {\\\\displaystyle \\\\Omega }  is the volume of the Wigner\\-Seitz cell. The all\\-electron (AE) partial waves  \u03d5  \u03b1 {\\\\displaystyle \\\\phi \\_{\\\\alpha }}  are solutions of the radial Schr\u00f6dinger equation for a non\\-spinpolarized reference atom at a specific energy   \u03b5  \u03b1 {\\\\displaystyle \\\\varepsilon \\_{\\\\alpha }}  and for a specific angular momentum   l  \u03b1 {\\\\displaystyle l\\_{\\\\alpha }}  :  \u27e8  r  \\|  \u03d5  \u03b1  \u27e9 \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  \u03b1  (  r  \u2212  R  \u03b1  ^  ) \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u  l  \u03b1  \u03b5  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  l  \u03b1  m  \u03b1  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|\\\\phi \\_{\\\\alpha }\\\\rangle \\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}u\\_{\\\\alpha }(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)Y\\_{\\\\alpha }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}u\\_{l\\_{\\\\alpha }\\\\varepsilon \\_{\\\\alpha }}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)\\\\,Y\\_{l\\_{\\\\alpha }m\\_{\\\\alpha }}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The notation   r  \u2212  R  \u03b1  ^ {\\\\displaystyle {\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}}  is used to clarify thatthe spherical harmonics   Y {\\\\displaystyle Y}  depends on the orientation but not onthe length of the vector   r  \u2212  R  \u03b1 {\\\\displaystyle \\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}  .Note that the radial component of the partial wave   u  \u03b1 {\\\\displaystyle u\\_{\\\\alpha }}  is independent of   m  \u03b1 {\\\\displaystyle m\\_{\\\\alpha }} , since the partial waves are calculated for a spherical atom. Furthermore, the spherical harmonics depend on the angular quantum numbers onlyand not on the reference energy. The pseudo partialwaves   \u03d5 \\~  \u03b1 {\\\\displaystyle {\\\\widetilde {\\\\phi }}\\_{\\\\alpha }}  are equivalent to the AE partial waves outside a coreradius   r  c {\\\\displaystyle r\\_{c}}  and match continuously onto   \u03d5  \u03b1 {\\\\displaystyle \\\\phi \\_{\\\\alpha }}  inside the core radius:  \u27e8  r  \\|  \u03d5 \\~  \u03b1  \u27e9 \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u \\~  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  \u03b1  (  r  \u2212  R  \u03b1  ^  ) \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u \\~  l  \u03b1  \u03b5  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  l  \u03b1  m  \u03b1  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }\\\\rangle \\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}{\\\\widetilde {u}}\\_{\\\\alpha }(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)Y\\_{\\\\alpha }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}{\\\\widetilde {u}}\\_{l\\_{\\\\alpha }\\\\varepsilon \\_{\\\\alpha }}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)\\\\,Y\\_{l\\_{\\\\alpha }m\\_{\\\\alpha }}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The core radius   r  c {\\\\displaystyle r\\_{c}}  is usually chosen approximately around half the nearestneighbor distance. The projector functions   p \\~  \u03b1 {\\\\displaystyle {\\\\widetilde {p}}\\_{\\\\alpha }}  are dual to the partialwaves:  \u27e8  p \\~  i  \\|  \u03d5 \\~  j  \u27e9 \\=  \u03b4  i j  . {\\\\displaystyle \\\\langle {\\\\widetilde {p}}\\_{i}\\|{\\\\widetilde {\\\\phi }}\\_{j}\\\\rangle \\=\\\\delta \\_{ij}.} Charge and overlap densities---------------------------- Starting from the completeness relations it is possible to show that, in the PAW method, the total charge density (or more precisely the overlap density) related to two orbitals   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  and  \u03c8  m  k {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {k} }}  n (  r  ) \\=  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  k  (  r  ) {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\psi \\_{n\\\\mathbf {k} }^{\\\\ast }(\\\\mathbf {r} )\\\\,\\\\psi \\_{m\\\\mathbf {k} }(\\\\mathbf {r} )} can be rewritten as (for details we refer to Ref. [\\[4]](#cite_note-bloechl:94-4)):  n (  r  ) \\=  n \\~  (  r  ) \u2212  n \\~  1  (  r  ) \\+  n  1  (  r  ) . {\\\\displaystyle n(\\\\mathbf {r} )\\={\\\\widetilde {n}}(\\\\mathbf {r} )\\-{\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\+n^{1}(\\\\mathbf {r} ).} Here, the constituent charge densities are defined as:  n \\~  (  r  ) \\= \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle {\\\\widetilde {n}}(\\\\mathbf {r} )\\=\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle }  n \\~  1  (  r  ) \\=  \u2211  \u03b1 , \u03b2  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle {\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta }{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} )\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle }  n  1  (  r  ) \\=  \u2211  \u03b1 , \u03b2  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 . {\\\\displaystyle n^{1}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta }\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle .} The quantities with a superscript 1 are one\\-center quantities andare usually only evaluated on radial grids. Furthermore, one can usuallydrop the complex conjugation for the partial waves, since they are real\\-valued. The indices   \u03b1 {\\\\displaystyle \\\\alpha }  and  \u03b2 {\\\\displaystyle \\\\beta }  are restricted to those pairs that correspond to one atom   R  \u03b1  \\=  R  \u03b2 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }\\=\\\\mathbf {R} \\_{\\\\beta }}  .For a complete set of projectors the one\\-centre pseudo charge density   n \\~  1 {\\\\displaystyle {\\\\widetilde {n}}^{1}}  is exactlyidentical to   n \\~ {\\\\displaystyle {\\\\widetilde {n}}}  within the augmentation spheres.Furthermore, it is often necessary to define   \u03c1  \u03b1 \u03b2 {\\\\displaystyle \\\\rho \\_{\\\\alpha \\\\beta }} , the occupancies of eachaugmentation channel   ( \u03b1 , \u03b2 ) {\\\\displaystyle (\\\\alpha ,\\\\beta )}  inside each PAW sphere. These are calculated from the pseudo orbitals applying the projector functions and summing over all bands  \u03c1  \u03b1 \u03b2  \\=  \u2211  n  k  f  n  k  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  n  k  \u27e9 , {\\\\displaystyle \\\\rho \\_{\\\\alpha \\\\beta }\\=\\\\sum \\_{n\\\\mathbf {k} }f\\_{n\\\\mathbf {k} }\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle ,} where the occupancy   f  n  k {\\\\displaystyle f\\_{n\\\\mathbf {k} }}  is one for occupied orbitalsand zero for unoccupied one electron orbitals. The compensation or augmentation density---------------------------------------- The PAW method would yield exact overlap densities on the plane wave gridif the density were calculated as  n (  r  ) \\= \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  m  k  \u27e9 \\+  \u2211  \u03b1 , \u03b2  (  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{\\\\alpha ,\\\\beta }(\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ))\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle } In practice, the second term changes far too rapidly in real spaceto be represented on a plane wave grid. Since even the normof the pseudo\\-orbitals does not agree with the norm of the all\\-electron orbitals, it does not suffice to calculateHartree or exchange energies from the pseudo densities only. Hence, in order to treat the long\\-range electrostatic interactions in the Hartree and exchange term an additional quantity, the compensation density   n ^ {\\\\displaystyle {\\\\widehat {n}}} , is introduced. Its purpose is to approximate   Q  \u03b1 , \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) . {\\\\displaystyle Q\\_{\\\\alpha ,\\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ).} This compensation density (sometimes also referred to as augmentation density) is chosen such that the sum of the pseudo charge densityand the compensation density  n \\~  1  \\+  n ^ {\\\\displaystyle {\\\\widetilde {n}}^{1}\\+{\\\\widehat {n}}}  has exactly the same moments as the exact density   n  1 {\\\\displaystyle n^{1}}  within each augmentation sphere centered at the position   R  \u03b1 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }} . This requires that   \u222b  \u03a9  r  \\[  n  1  (  r  ) \u2212  n \\~  1  (  r  ) \u2212  n ^  (  r  ) ]  \\|  r  \u2212  R  \u03b1  \\|  L  Y  L M  \u2217  (  r  \u2212  R  \u03b1  ^  )  d  r  \\= 0  \u2200  R  \u03b1  , L , M . {\\\\displaystyle \\\\int \\_{\\\\Omega \\_{r}}\\[n^{1}(\\\\mathbf {r} )\\-{\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\-{\\\\widehat {n}}(\\\\mathbf {r} )]\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|^{L}Y\\_{LM}^{\\\\ast }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\\\,d\\\\mathbf {r} \\=0\\\\quad \\\\forall \\\\quad \\\\mathbf {R} \\_{\\\\alpha },L,M.} This implies that the electrostatic potential originating from   n  1 {\\\\displaystyle n^{1}} is identical to that of   n \\~  1  \\+  n ^ {\\\\displaystyle {\\\\widetilde {n}}^{1}\\+{\\\\widehat {n}}}  outsidethe augmentation sphere.Details on the construction of the compensation charge density in the VASP program have been published elsewhere[\\[5]](#cite_note-kressjoub:99-5). The compensation charge density is written in the formof a one\\-center multipole expansion  n ^  (  r  ) \\=  \u2211  \u03b1 , \u03b2 , L M  Q ^  \u03b1 , \u03b2  L M  (  r  )  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 , {\\\\displaystyle {\\\\widehat {n}}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta ,LM}{\\\\widehat {Q}}\\_{\\\\alpha ,\\\\beta }^{LM}(\\\\mathbf {r} )\\\\,\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle ,} where the functions   Q ^  \u03b1 \u03b2  L M  (  r  ) {\\\\displaystyle {\\\\widehat {Q}}\\_{\\\\alpha \\\\beta }^{LM}(\\\\mathbf {r} )}  are given by  Q ^  \u03b1 \u03b2  L M  (  r  ) \\=  q  \u03b1 \u03b2  L M  g  L  (  \\|  r  \u2212  R  i  \\|  )  Y  L M  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle {\\\\widehat {Q}}\\_{\\\\alpha \\\\beta }^{LM}(\\\\mathbf {r} )\\=q\\_{\\\\alpha \\\\beta }^{LM}\\\\,g\\_{L}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{i}\\|)Y\\_{LM}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The moment   L {\\\\displaystyle L}  of the function   g  L  ( r ) {\\\\displaystyle g\\_{L}(r)}  is equal to 1\\. The quantity   q  \u03b1 \u03b2  L M {\\\\displaystyle q\\_{\\\\alpha \\\\beta }^{LM}} is defined in Eq. (25\\) of Ref. [\\[5]](#cite_note-kressjoub:99-5)."}
{"file_name": "KPAR.md", "content": "KPAR= \\[integer]   Default: **KPAR** \\= 1nDescription: KPAR determines the number of **k**\\-points that are to be treated in parallel (available as of VASP.5\\.3\\.2\\). Also, KPAR is used as parallelization tag for Laplace transformed MP2 calculations.   --- VASP currently offers parallelization and data distribution over bands and/or over plane wave coefficients (see NCORE and NPAR), and as of VASP.5\\.3\\.2, parallelization over **k**\\-points.To obtain high efficiency on massively parallel systems or modern multi\\-core machines, it is strongly recommended to use all at the same time. Most algorithms work with any data distribution (except for the single band conjugated gradient, which is considered to be obsolete). The set of **k**\\-points is distributed over KPAR groups of compute cores, in a round\\-robin fashion.This means that a group of *N*\\=(\\# of cores/KPAR) compute cores together work on an individual **k**\\-point (choose KPAR such that it is an integer divisor of the total number of cores).Within this group of *N* cores that share the work on an individual **k**\\-point, the usual parallelism over bands and/or plane wave coefficients applies (as set by means of the NCORE and NPAR tags). **Note**: the data is not distributed additionally over **k**\\-points. **Note**: KPAR becomes obsolete if LMP2LT or LSMP2LT are set and specifies the number of plane\\-waves treated in parallel, see here for more information."}
{"file_name": "ML_LEATOM.md", "content": "ML\\_LEATOM= \\[logical]   Default: **ML\\_LEATOM** \\= .FALSE.nDescription: This term specifies whether the total atomic energy is written out or not.   --- This tag specifies whether the total atomic energy (potential energy plus kinetic energy) for each MD step is written out to the ML\\_EATOM file. It also writes the atomic positions and lattice parameters at every MD step to this file."}
{"file_name": "XC_functional.md", "content": "In the Kohn\\-Sham (KS) formulation of density\\-functional theory (DFT)[\\[1]](#cite_note-hohenberg:pr:1964-1)[\\[2]](#cite_note-kohn:pr:1965-2), the total energy is given by  E  t o t  K S \u2212 D F T  \\= \u2212  1 2  \u2211  i  \u222b  \u03c8  i  \u2217  (  r  )  \u2207  2  \u03c8  i  (  r  )  d  3  r \u2212  \u2211  A  \u222b  Z  A  \\|  r  \u2212  R  A  \\|  n (  r  )  d  3  r \\+  1 2  \u222b \u222b  n (  r  ) n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r  d  3  r \u2032  \\+  E  x c  \\+  1 2  \u2211  A \u2260 B  Z  A  Z  B  \\|  R  A  \u2212  R  B  \\| {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}\\=\\-{\\\\frac {1}{2}}\\\\sum \\_{i}\\\\int \\\\psi \\_{i}^{\\*}({\\\\bf {r}})\\\abla ^{2}\\\\psi \\_{i}({\\\\bf {r}})d^{3}r\\-\\\\sum \\_{A}\\\\int {\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}n({\\\\bf {r}})d^{3}r\\+{\\\\frac {1}{2}}\\\\int \\\\int {\\\\frac {n({\\\\bf {r}})n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}rd^{3}r'\\+E\\_{\\\\rm {xc}}\\+{\\\\frac {1}{2}}\\\\sum \\_{A\\\eq B}{\\\\frac {Z\\_{A}Z\\_{B}}{\\\\left\\\\vert {\\\\bf {R}}\\_{A}\\-{\\\\bf {R}}\\_{B}\\\\right\\\\vert }}} where the terms on the right\\-hand side represent the non\\-interacting kinetic energy of the electrons, the electrons\\-nuclei attraction energy, the classical Coulomb electron\\-electron repulsive energy, the exchange\\-correlation energy, and the nuclei\\-nuclei repulsion energy, respectively. The KS orbitals   \u03c8  i {\\\\displaystyle \\\\psi \\_{i}}  and the electronic density   n \\=  \u2211  i  \\|  \u03c8  i  \\|  2 {\\\\displaystyle n\\=\\\\sum \\_{i}\\\\left\\\\vert \\\\psi \\_{i}\\\\right\\\\vert ^{2}}  that are used to evaluate   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  are obtained by solving self\\-consistently the KS equations  (  \u2212  1 2  \u2207  2  \u2212  \u2211  A  Z  A  \\|  r  \u2212  R  A  \\|  \\+ \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r \u2032  \\+  v  x c  (  r  )  )  \u03c8  i  (  r  ) \\=  \u03f5  i  \u03c8  i  (  r  ) . {\\\\displaystyle \\\\left(\\-{\\\\frac {1}{2}}\\\abla ^{2}\\-\\\\sum \\_{A}{\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}\\+\\\\int {\\\\frac {n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}r'\\+v\\_{\\\\rm {xc}}({\\\\bf {r}})\\\\right)\\\\psi \\_{i}({\\\\bf {r}})\\=\\\\epsilon \\_{i}\\\\psi \\_{i}({\\\\bf {r}}).} The only terms in   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  and in the KS equations that are not known exactly are the **exchange\\-correlation energy functional**   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and potential   v  x c  \\= \u03b4  E  x c  /  \u03b4 n {\\\\displaystyle v\\_{\\\\rm {xc}}\\=\\\\delta E\\_{\\\\rm {xc}}/\\\\delta n} . Therefore, the accuracy of the calculated properties depends strongly on the approximations used for   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and  v  x c {\\\\displaystyle v\\_{\\\\rm {xc}}}  . Several hundreds of approximations for the **exchange and correlation** have been proposed[\\[3]](#cite_note-libxc_list-3). They can be classified into families: the local density approximation (LDA), generalized gradient approximation (GGA), meta\\-GGA, and hybrid. There is also the possibility to include van der Waals corrections or an on\\-site Coulomb repulsion using DFT\\+U on top of another functional. More details on the different types of approximations available in VASP and how to use them can be found in the pages and subcategories listed below. How to------ * Semilocal functionals:\t+ LDA and GGA: GGA\t+ Meta\\-GGA: METAGGA* Hybrids: LHFCALC, AEXX, HFSCREEN and list of hybrid functionals* DFT\\+U: LDAU and LDAUTYPE* Atom\\-pairwise and many\\-body methods for van der Waals interactions (selected with the IVDW tag):\t+ Methods from Grimme et al.:\t\t- DFT\\-D2[\\[4]](#cite_note-grimme:jcc:06-4)\t\t- DFT\\-D3[\\[5]](#cite_note-grimme:jcp:10-5)[\\[6]](#cite_note-grimme:jcc:11-6)\t\t- DFT\\-D4[\\[7]](#cite_note-caldeweyher:jcp:2019-7) (available as of VASP.6\\.2 as external package)\t+ Methods from Tkatchenko, Scheffler et al.:\t\t- Tkatchenko\\-Scheffler method[\\[8]](#cite_note-tkatchenko:prl:09-8)\t\t- Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning[\\[9]](#cite_note-bucko:jctc:13-9)[\\[10]](#cite_note-bucko:jcp:14-10)\t\t- Self\\-consistent screening in Tkatchenko\\-Scheffler method[\\[11]](#cite_note-tkatchenko:prl:12-11)\t\t- Many\\-body dispersion energy[\\[11]](#cite_note-tkatchenko:prl:12-11)[\\[12]](#cite_note-ambrosetti:jcp:14-12)\t\t- Many\\-body\\_dispersion\\_energy\\_with\\_fractionally\\_ionic\\_model\\_for\\_polarizability[\\[13]](#cite_note-gould:jctc:2016_a-13)[\\[14]](#cite_note-gould:jctc:2016_b-14)\t\t- Library libMBD of many\\-body dispersion methods[\\[15]](#cite_note-libmbd_1-15)[\\[16]](#cite_note-libmbd_2-16)[\\[17]](#cite_note-hermann:jcp:2023-17)\t+ dDsC dispersion correction[\\[18]](#cite_note-steinmann:jcp:11-18)[\\[19]](#cite_note-steinmann:jctc:11-19)\t+ DFT\\-ulg[\\[20]](#cite_note-kim:jpcl:2012-20)* Nonlocal vdW\\-DF functionals for van der Waals interactions: LUSE\\_VDW and IVDW\\_NL"}
{"file_name": "SCH_calculations.md", "content": "SCH stands for super\\-cell core\\-hole calculations. The calculations consist in principle of two steps: * Self\\-consistent electronic cycle with core hole.* Calculation of dielectric function of core electron with the band structure from the SCF run. In the VASP implementation these two steps are all done in a single calculation.To run a successful XAS calculation the following steps have to be made: 1\\) Make super cell for structure--------------------------------- To minimize the interaction between core holes from neighboring cells the super cell size has to be converged. The convergence is very material dependent and has to be in principle done every time for a new material. It's better to start bottom up from the small cell's.    | **Mind:** Although by increasing the cell size the k mesh is implicitely also increased it still has to be also converged since the spectrum can depend also very strongly on the k points. || --- | 2\\) Select one atom in the POSCAR file that will carry the core\\-hole and provide a POTCAR file for that atom------------------------------------------------------------------------------------------------------------- After making the super cell one atom has to be made to a new species with a single atom in it that will carry the core\\-hole. The initial line for the number of atoms and atoms for example can look like this  ```Mg O32 32  ``` If we are for example interested in the K\\-edge spectrum of Mg, we would have to change the POSCAR file as follows  ```Mg Mg O1 31 32  ``` Since we create a new species this way we need the POTCAR information for it. This is very easily done by taking the POTCAR file for the same species an concatenating it to the POTCAR carrying all species: i.e. *cat POTCAR\\_Mg POTCAR*. The procedure for oxygen would be very similar:  ```Mg O O32 31 1  ``` and *cat POTCAR POTCAR\\_O*.   | **Mind:** One typical source of error is that the additional POTCAR is not added to the main POTCAR file or that the order of species is not the same in the POSCAR and POTCAR files. || --- |   | **Warning:** It is strongly recommended to use the available GW PAW potentials for the POTCAR files, since many standard potentials don't have projectors with quantum numbers 2 or larger and the GW potentials are more exact for excited states than the standard potentials. || --- | 3\\) Set important INCAR flags controlling the XAS calculations and run calculation---------------------------------------------------------------------------------- * To obtain XAS spectra using the SCH method and the final state approximation the flags CH\\_LSPEC\\=*.TRUE.* and ICORELEVEL\\=2 have to be set in the INCAR file. Currently only XAS spectra are only implemented within the final state approximation (ICORELEVEL\\=2\\).* The species holding the core hole hast to be selected by using the CLNT tag. This number corresponds to the species defined in step 2\\) in the POSCAR and POTCAR files. The tags CLN and CLL specify the   n {\\\\displaystyle n}  and  l {\\\\displaystyle l}  quantum numbers of the excited electron.  The tag CLZ specifies how much of a faction of the chosen electron should be excited. Usually one always sets CLZ\\=1\\.0, but in some cases values lesser than 1 can lead to very good agreement with experiment. However, this should be handled with caution since the physics behind is very dubious. An example input for the 2s K\\-edge of Mg in MgO would look like the following:  ``` CH_LSPEC=.TRUE CH_NEDOS=1000 CH_SIGMA=0.3 ICORELEVEL=2 CLNT=1 CLN=2 CLL=0 CLZ=1.0  ``` **Important**: One very important parameter that has to be increased in the calculation is NBANDS. It gives the upper range for which the spectrum can be calculated. The parameter CH\\_NEDOS sets the number of grid points on the energy axis of the spectrum. The default value of 1000 should only be changed if a higher resolution is required. The broadening type of the spectrum is controlled by ISMEAR and the broadening in eV is set by CH\\_SIGMA. We recommend to use a very small Gaussian broadening ISMEAR\\=0 and CH\\_SIGMA  \u2264 {\\\\displaystyle \\\\leq } 0\\.001 in the calculations and broaden the spectrum in post processing. If another type of ISMEAR is required for the electronic calculation, one can run that in a first step and use the converged WAVECAR from that step together with ALGO\\=*None* and ISMEAR\\=0 in a second step to obtain the spectrum. Output------ The freuqency dependent dielectric tensor, which is directly proportional to the absorption spectrum, is written to the OUTCAR file. It starts with the following lines:  ```  frequency dependent IMAGINARY DIELECTRIC FUNCTION (independent particle, no local field effects) density-density    E(ev)      X         Y         Z        XY        YZ        ZX --------------------------------------------------------------------------------------------------------------  ``` Usually for an absorption spectrum all six components of the dielectric tensor are summed up. In most cases the obtained spectrum needs further processing via an energy dependent broadening.   ---"}
{"file_name": "Partial_DOS_of_CO_on_Ni_111_surface.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Calculation of the work function and partial DOS of a CO@Ni (111\\) surface, adsorbed on top. Input----- ### POSCAR  ```Ni - (111) + CO ontop   3.53000000000000          0.7071067800000000    0.0000000000000000    0.0000000000000000    -0.3535533900000000    0.6123724000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    5.1961523999999998   5   1   1Selective dynamicsDirect  0.0000000000000000  0.0000000000000000  0.0000000000000000   F   F   F  0.3333333300000021  0.6666666699999979  0.1111111100000031   F   F   F  0.6666666699999979  0.3333333300000021  0.2222222199999990   F   F   F  0.0000000000000000  0.0000000000000000  0.3330391292438326   T   T   T  0.3333333300000021  0.6666666699999979  0.4445422014835692   T   T   T  0.3333333300000021  0.6666666699999979  0.5402025044116211   T   T   T  0.3333333300000021  0.6666666699999979  0.6031536532245922   T   T   T   0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  ``` N.B.: this POSCAR is essentially the result (CONTCAR file) of the relaxation performed in the CO on Ni 111 surface example. ### INCAR  ```general:  ENMAX = 400  SYSTEM = CO adsorption on Ni(111)  ISMEAR = -5  ALGO = Fast LDOS:  LORBIT = 11 workfunction:  IDIPOL = 3  LDIPOL = .TRUE.  LVHAR = .TRUE.#  LVTOT = .TRUE.  ``` * For the calculation of the DOS we use a tetrahedron method with Bl\u00f6chl corrections (ISMEAR\\=\\-5\\).* By setting LVHAR\\=*.TRUE.* the Hartree part of the local potential is written to the file LOCPOT.* By setting LVTOT\\=*.TRUE.* the total local potential is written tot the file LOCPOT.* By setting IDIPOL\\=3 dipole corrections in the direction of the third lattice vector are enabled.* We have active dipole corrections to potential (\\=dipole layer). ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- ### DOS * The lm\\-decomposed DOS helps to analyze the bonding: [](File_Fig_CO_on_Ni111_LDOS_1.html) * CO   5 \u03c3 , 1 \u03c0 , 2  \u03c0  \u2217 {\\\\displaystyle 5\\\\sigma ,1\\\\pi ,2\\\\pi ^{\\*}}  bonds.* From comparison with substrate LDOS:\t+ Hybridization with Ni\\-     d  3  z  2   \u2212  r  2      \t{\\\\displaystyle d\\_{3z^{2}\\-r^{2}}}  .\t+ No interaction with      d  x y    \t{\\\\displaystyle d\\_{xy}} \t due to symmetry. ### Work function * The planar average of the potential for this example should look like the following: [](File_Fig_CO_on_Ni111_LDOS_2.html)  * \u03f5  F  \\=1\\.65 {\\\\displaystyle \\\\epsilon \\_{\\\\mathrm {F} }\\=1\\.65}  eV (from OUTCAR file. * Vacuum\\-potential at 8\\.24/6\\.77 eV:   \u03a6  C O  \\=6\\.58 ,  \u03a6  c l e a n  \\=5\\.11 {\\\\displaystyle \\\\Phi \\_{\\\\mathrm {CO} }\\=6\\.58,\\\\Phi \\_{\\\\mathrm {clean} }\\=5\\.11}  eV. * Too small result for clean surface due to too small vacuum ... Download--------  COonNi111\\_LDOS.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "LZEROZ.md", "content": "LZEROZ= .TRUE. \\| .FALSE.   Default: **LZEROZ** \\= .FALSE.nDescription: for LZEROZ\\=.TRUE. the *z*\\-component of the spin\\-spiral magnetisation density will be forced to be and to remain zero.  --- See the description of spin spiral calculations for more details."}
{"file_name": "Makefile.md", "content": "Writing a `makefile.include` file from scratch is not easy, so we suggest taking one of archetypical files that closely resembles your system as a starting point. It is necessary to customize it anyways to set appropriate paths etc. Optionally, you can enable additional features by setting precompiler flags or linking VASP to other libraries. For instance, we strongly recommend enabling HDF5 support. Archetypical files------------------ The templates contain information such as precompiler options, compiler options, and how to link libraries. Choose the template based on the compiler, parallelization etc. from the list below and mind the description: ### Intel Composer suite and oneAPI Base \\+ HPC toolkits for CPUs * makefile.include.oneapi* makefile.include.oneapi\\_omp* makefile.include.intel: Parallelized using MPI, combined with MKL.* makefile.include.intel\\_omp: Parallelized using MPI \\+ OpenMP, combined with MKL.* makefile.include.intel\\_ompi\\_mkl\\_omp: Parallelized using OpenMPI \\+ OpenMP, combined with MKL.* makefile.include.intel\\_serial: Not parallelized, strongly reduced feature\\-set, i.e., not suitable for production. ### GNU compilers for CPUs * makefile.include.gnu: Parallelized using MPI, Free and Open\\-Source Software (FOSS) stack.* makefile.include.gnu\\_omp: Parallelized using MPI \\+ OpenMP, FOSS stack.* makefile.include.gnu\\_ompi\\_mkl\\_omp: Parallelized using OpenMPI \\+ OpenMP, combined with MKL.* makefile.include.gnu\\_ompi\\_aocl: Parallelized using OpenMPI, combined with AMD Optimizing CPU Libraries (AOCL).* makefile.include.gnu\\_ompi\\_aocl\\_omp: Parallelized using OpenMPI \\+ OpenMP, combined with AOCL. ### NVIDIA HPC\\-SDK for CPU and GPU * makefile.include.nvhpc: CPU version parallelized using MPI.* makefile.include.nvhpc\\_omp: CPU version parallelized using MPI \\+ OpenMP.* makefile.include.nvhpc\\_ompi\\_mkl\\_omp: CPU version parallelized using OpenMPI \\+ OpenMP, combined with MKL.* makefile.include.nvhpc\\_acc: Ported to GPUs using OpenACC, parallelized using MPI .* makefile.include.nvhpc\\_omp\\_acc: Ported to GPUs using OpenACC, parallelized using MPI \\+ OpenMP.* makefile.include.nvhpc\\_ompi\\_mkl\\_omp\\_acc: Ported to GPUs using OpenACC, parallelized using OpenMPI \\+ OpenMP, combined with MKL. ### Others * makefile.include.nec\\_aurora * makefile.include.fujitsu\\_a64fx* makefile.include.fujitsu\\_a64fx\\_omp* makefile.include.aocc\\_ompi\\_aocl* makefile.include.aocc\\_ompi\\_aocl\\_omp An advanced system administrator might benefit from a more detailed discussion about the precompiler options, compiler options, and how to link libraries. Customize--------- Open the selected template of the archetypical files and add the required information as explained in the comments towards the end of the file. Then, add any optional feature as listed below. For more details see the list of precompiler options. ### HDF5 support (strongly recommended)  --- The HDF5 library is is needed for reading and writing HDF5 files such as vaspin.h5, vaspout.h5 and vaspwave.h5.The library is available for download on the HDF5 official website.To activate HDF5 support add the following in the VASP `makefile.include`  ```CPP_OPTIONS+= -DVASP_HDF5HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -L$(HDF5_ROOT)/lib -lhdf5_fortranINCS       += -I$(HDF5_ROOT)/include  ``` Available for VASP \\>\\= 6\\.2\\.0\\. ### fftlib (recommended when using OpenMP)  --- When you plan to run VASP on multiple OpenMP threads and you are not using the FFTs from the Intel\\-MKL library, you should link against fftlib (included in the VASP distribution).To do so, uncomment the corresponding sections in the makefile.include.\\*\\_omp files. In makefile.include.gnu\\_omp, for instance, that would be:  ```# For the fftlib library (recommended)CPP_OPTIONS+= -DsysvFCL        += fftlib.oCXX_FFTLIB  = g++ -fopenmp -std=c++11 -DFFTLIB_THREADSAFEINCS_FFTLIB = -I./include -I$(FFTW_ROOT)/includeLIBS       += fftlibLLIBS      += -ldl  ``` ### Wannier90 (optional)  --- To include the Wannier90 program, download the library from the source and compile `libwannier.a`. | **Important:** In case of Wannier90 3\\.x, you should compile a serial version by removing `COMMS=mpi` in the `make.inc` of Wannier90\\. || --- |  Then, execute `make lib` to build the Wannier90 library. To activate this feature set the following:  ```CPP_OPTIONS    += -DVASP2WANNIER90WANNIER90_ROOT\u00a0?= /path/to/your/wannier90/installationLLIBS          += -L$(WANNIER90_ROOT)/lib -lwannier  ``` | **Mind:** VASP version \\<\\= 6\\.1\\.x are compatible with Wannier90 \\<\\= 1\\.2\\. To interface VASP 6\\.1\\.x with Wannier90 2\\.x, set \\-DVASP2WANNIER90v2 instead. As of VASP 6\\.2\\.x only Wannier90 2\\.x and 3\\.x are supported. || --- | ### Libxc (optional)  --- To include the Libxc library of exchange\\-correlation functionals, install the library from the source and install it. Note that to get correct results with meta\\-GGA functionals (see discussion at LTBOUNDLIBXC), it is necessary to use Libxc from version 5\\.2\\.0 onwards (or the master version from gitlab for the latest implemented functionals) and to compile it with the option `--disable-fhc`. For instance, with GNU Autotools the steps to compile Libxc are  ```autoreconf -i (necessary is the executable configure is not already present)./configure --prefix=PATH/TO/LIBXC --disable-fhcmakemake install  ``` Then, add the following in the VASP `makefile.include`  ```CPP_OPTIONS += -DUSELIBXCLIBXC_ROOT \u00a0?= /path/to/your/libxc/installationLLIBS       += -L$(LIBXC_ROOT)/lib -lxcf03 -lxcINCS        += -I$(LIBXC_ROOT)/include  ``` ### Libbeef (optional)  --- To include the BEEF van der Waals functionals, install the library from the source on GitHub and add the following in the VASP `makefile.include`  ```CPP_OPTIONS  += -DlibbeefLIBBEEF_ROOT\u00a0?= /path/to/your/libbeef/installationLLIBS        += -L$(LIBBEEF_ROOT)/lib -lbeef  ``` ### DFT\\-D4 (optional)  --- To include the DFT\\-D4 van der Waals method, install the library from the source on GitHub and add the following in the VASP `makefile.include`  ```CPP_OPTIONS += -DDFTD4 DFTD4_ROOT \u00a0?= /path/to/your/dft4/installation# version 3.6.0 built and installed with mesonLLIBS       += $(shell pkg-config --with-path=$(DFTD4_ROOT)/lib64/pkgconfig --libs dftd4)                                                                                                                                                  INCS        += $(shell pkg-config --with-path=$(DFTD4_ROOT)/lib64/pkgconfig --cflags dftd4)    # version 3.6.0 and loaded dftd4 module, i.e. PKG_CONFIG_PATH environment variable set correctly#LLIBS       += $(shell pkg-config --libs dftd4)#INCS        += $(shell pkg-config --cflags dftd4)# for dft4-2.3.2 and older #LLIBS       += -L$(DFTD4_ROOT)/build -ldftd4#INCS        += -I$(DFTD4_ROOT)/libdftd4.a.p  ``` | **Mind:** The compilation of the DFTD4 source code requires a Fortran compiler supporting Fortran 2018 features. || --- | ### ELPA (optional)  --- To include the ELPA eigenvalue solvers, install the library from the source on GitLab and add the following in the VASP `makefile.include`  ```CPP_OPTIONS += -DELPAELPA_ROOT  \u00a0?= /path/to/your/elpa/installationLLIBS       += -L$(ELPA_ROOT)/lib -lelpaINCS        += -I$(ELPA_ROOT)/include/elpa-<version>/elpaINCS        += -I$(ELPA_ROOT)/include/elpa-<version>/modules  ``` | **Mind:** In the above you need to replace `<version>` by the correct designation of your ELPA version. || --- | ### libMBD (optional)  --- To include the library libMBD of many\\-body dispersion methods, install the library from the source on GitHub and add the following in the VASP `makefile.include`  ```CPP_OPTIONS += -DLIBMBD LIBMBD_ROOT\u00a0?= /path/to/your/libMBD/installationLLIBS       += -L$(LIBMBD_ROOT)/build/src -lmbdINCS        += -I$(LIBMBD_ROOT)/build/src/modules/  ``` | **Mind:** To run a calculation the path to libmbd.so has to be added (either in .bashrc or in the terminal): LD\\_LIBRARY\\_PATH\\=$LD\\_LIBRARY\\_PATH:/path/to/your/libMBD/installation/build/src || --- | Related articles---------------- Installing VASP.6\\.X.X,Compiler options,Precompiler options,Linking to libraries,OpenACC GPU port of VASP,Toolchains,Validation tests,Known issues  ---"}
{"file_name": "LHFCALC.md", "content": "LHFCALC= .TRUE. \\| .FALSE.   Default: **LHFCALC** \\= .FALSE.nDescription: LHFCALC specifies whether a Hartree\\-Fock/DFT hybrid functional type calculation is performed.  --- If one does not specifically request a particular hybrid functional (see AEXX, ALDAX, ALDAC, AGGAX, AGGAC, AMGGAX, AMGGAC, and the list\\_of\\_hybrid\\_functionals) VASP will default to the PBE0 hybrid functional. It is recommended to select a \"direct optimization\" algorithm for HF/DFT hybrid functonal type calculations, i.e., ALGO\\=Damped (IALGO\\=53\\) or ALGO\\=All (IALGO\\=58\\) in the INCAR file. The blocked\\-Davidson algorithm ALGO\\=Normal is, with certain caveat, also supported, whereas calculations for the other algorithms (ALGO\\=Fast) are not properly supported (note: no warning is printed). The blocked\\-Davidson algorithm (ALGO\\=Normal) is generally rather slow, and in many cases the Pulay mixer will be unable to determine the proper ground\\-state. We hence recommend to select the blocked\\-Davidson algorithm only in combination with straight mixing or a Kerker like mixing (see the section on mixing). The following combination have been successfully applied for small and medium sized systems  ```LHFCALC = .TRUE.\u00a0; ALGO = Normal\u00a0; IMIX = 1\u00a0; AMIX = a  ``` Decrease the parameter a until convergence is reached. In most cases, however, it is recommended to use the \"Damped\" algorithm with suitably chosen timestep. The following setup for the electronic optimization works reliably in most cases:  ```LHFCALC = .TRUE.\u00a0; ALGO = Damped\u00a0; TIME = 0.5  ``` If convergence is not obtained, it is recommended to reduce the timestep TIME."}
{"file_name": "Lattice_Dynamics_-_Tutorial.md", "content": "Overview> Band gap renormalization in diamond using one\\-shot method> List of tutorialsThis tutorial requires VASP 6\\.0 or higher. The tutorial is made of the following parts: 1. Band gap renormalization in diamond using one\\-shot method"}
{"file_name": "VCAIMAGES.md", "content": "VCAIMAGES= \\[real]   Default: **VCAIMAGES** \\= \\-1nDescription: The tag VCAIMAGES allows to perform thermodynamic coupling constant integrations. To achieve this, two molecular dynamics simulations are performed with e.g. different POTCAR or KPOINTS files or different exchange\\-correlation functionals, and force averaging between the two calculations is done[\\[1]](#cite_note-dorner:PRL:2018-1).  --- The tag VCAIMAGES internally splits the available nodes into two groups, and each groupthen performs an independent VASP calculation (this implies VCAIMAGES only works in the MPI version). This behavior is implemented in the same way asthe nudged elastic band method described under the tag IMAGES. As opposed to the nudgedelastic band method, VASP creates always two images by setting the tag IMAGES\\=2 internally.The two calculations are performed in subdirectories 01 and 02 (as opposed to the nudged elasticband method, subdirectories 00 and 03 are not required). A precise description of the filereading and writing is given below. The two VASP calculations are essentially performed independently in subdirectories 01 and 02\\.The forces, energies and the stress tensor of the two calculations are averaged according to the tag VCAIMAGES. Specifically, the value supplied in the tag VCAIMAGES determines the weight of the calculationsperformed in subdirectory 01\\. The weight of the second image is 1\\-VCAIMAGES. The averagingis performed after self\\-consistency has been reached and affects the final total energy as well asthe forces. Since the energies and forces are averaged, the trajectories generated by the two simulations will be exactly identical. Make sure though, that the initial POSCAR files in the two subdirectoriesare exactly identical. The averaged energies can be found in the OUTCAR file after the lines\"ENERGY OF THE ELECTRON\\-ION\\-THERMOSTAT SYSTEM (eV)\", as well as in the file OSZICAR(in the lines writing the free energy \"F\\=\"). This makes scanning the OSZICAR file for therequired energies of the individual calculations somewhat awkward. Special handling: In some cases it might be desirable to use a different number of cores forthe first image and the second image. For instance, this might be expedient for calculationswhere thermodynamic integration is performed from a coarse to a dense k\\-point grid, or from a cheapto an expensive exchange\\-correlation functional. To set the number of cores in the first image the tag NCORE\\_IN\\_IMAGE1 has to be set. The second image then contains the remaining cores. The usage of this tag is also explained in the supplementary information of reference [\\[1]](#cite_note-dorner:PRL:2018-1)."}
{"file_name": "MP2_ground_state_calculation_-_Tutorial.md", "content": "Overview> MP2> LTMP2> stochastic LTMP2 > High energy contributions using stochastic LTMP2\")> List of tutorialsThis tutorial introduces how to calculate the ground state energy using second order M\u00f8ller\\-Plesset perturbation theory (MP2\\) with VASP. Currently there are three implementations available: * **MP2**[\\[1]](#cite_note-marsman-1): this implementation is recommended for very small unit cells, very few k\\-points and very low plane\\-wave cuttofs. The system size scaling of this algorithm is N\u2075.* **LTMP2**[\\[2]](#cite_note-schaefer2017-2): for all larger systems this Laplace transformed MP2 (LTMP) implementation is recommended. Larger cutoffs and denser k\\-point meshes can be used. It possesses a lower system size scaling (N\u2074) and a more efficient k\\-point sampling.* **stochastic LTMP2**[\\[3]](#cite_note-schaefer2018-3): even faster calculations at the price of statistical noise can be achieved with the stochastic MP2 algorithm. It is an optimal choice for very large systems where only relative errors per valence electron are relevant. Keeping the absolute error fixed, the algorithm exhibits a cubic scaling with the system size, N\u00b3, whereas for a fixed relative error, a linear scaling, N\u00b9, can be achieved. Note that there is no k\\-point sampling and no spin polarization implemented for this algorithm. **NOTE:** *If you use one of these algorithms, please cite the corresponding reference in your publication in addition to the standard VASP reference.* Both LTMP2 as well as stochastic LTMP2 are high performance algorithms that can parallelize the MP2 calculation over thousands of CPUs. At first, one should select the best algorithm according to the considered system size. In the following, a step by step instruction for each algorithm is presented. Preparation: the Hartree\\-Fock ground state------------------------------------------- In order to calculate the Hartree\\-Fock ground state, use the following INCAR file  ```ISMEAR = 0\u00a0; SIGMA = 0.01ALGO = ALHFCALC = .TRUE.\u00a0; AEXX = 1.0EDIFF = 1E-6ENCUT = # 10-20% larger than ENMAX in the POTCAR fileLORBITALREAL = .TRUE. # only necessary for LTMP2 and stochastic LTMP2  ``` Keep the OUTCAR file to read\\-out the Hartree\\-Fock ground state energy later. Calculating the unoccupied Hartree\\-Fock orbitals------------------------------------------------- We also need the unoccupied/virtual Hartree\\-Fock orbitals to perform MP2 calculations. The number of necessary orbitals should be equal to the number of plane\\-waves, that can be found via  ```nplw=`awk '/number of plane-waves:/ {print $5} ' < OUTCAR_HARTREE_FOCK_GROUND_STATE  ``` For the Gamma\\-only version of VASP, twice the number of plane\\-waves have to be used. Set the INCAR file to   ```ISMEAR = 0\u00a0; SIGMA = 0.01ALGO = ExactLHFCALC = .TRUE.\u00a0; AEXX = 1.0NELM = 1NBANDS = # number of plane-waves (favorably a multiple of the used mpi-ranks)ENCUT = # same value as in the Hartree-Fock stepLORBITALREAL = .TRUE. # only necessary for LTMP2 and stochastic LTMP2  ``` Make sure that VASP reads the WAVECAR file from the previous Hartree\\-Fock step. Actual MP2 calculations----------------------- Depending on your choice, please switch to the corresponding page. 1. MP22. LTMP23. stochastic LTMP2"}
{"file_name": "Troubleshooting_electronic_convergence.md", "content": "There can be many reasons why convergence to the electronic ground state fails. Below you find some strategies to overcome convergence issues in the electronic minimization. Step\\-by\\-step instructions--------------------------- **Step 1:** Simplify the calculation and reduce time\\-to\\-solution. Try to create a minimal INCAR file with as few tags as possible. If the calculation converges, then gradually add them back until you find which one was causing the problem. Try to reduce the time\\-to\\-solution as much as possible by lowering the **k**\\-point sampling (or using gamma\\-only calculations if applicable), lower ENCUT, use PREC\\=Normal. **Step 2:** Check the value of ISMEAR. If you have partially occupied states set ISMEAR\\=\\-1 or 1\\. **Step 3:** Fixing the charge density (for cases where density mixing is used) **Step 4:** Increase NBANDS. Check if you have enough bands. You can do this by looking at the OUTCAR file and checking that there are enough empty states, i.e., states with zero occupation. When using an iterative solver, the last states might not be accurately described, if these are occupied, then convergence is likely to fail. Often, the VASP default setting for NBANDS is insufficient for systems with f\\-orbitals or calculations with meta\\-GGA's. **Step 5:** Switch ALGO. **Step 6:** For IALGO\\=5X or 4X change TIME. Method\\-specific recommendations-------------------------------- In the following, we will describe a few recipes that work for particular systems.Some of these recipes might be transferable even to other methods. ### Magnetic calculation with LDA\\+U Magnetic calculations present a lot of challenges, in particular when the energy differences between different magnetic configurations are small.Our recommendation is to split the calculation into multiple steps: 1. give initial magnetization only to the magnetic atoms2. use spin\\-polarized calculation3. perform the calculation in 3 steps (always starting from the previous WAVECAR):\t1. step 1 with ICHARG\\=12 and ALGO\\=Normal without any LDA\\+U tags\t2. step 2 with ALGO\\=All (Conjugate gradient) and a small TIME step 0\\.05 instead of the default 0\\.4 (this is crucial)\t3. step 3 add LDA\\+U tags keeping ALGO\\=All and small TIME It might be helpful to split step 1\\. in two by first running with a smaller ENCUT and then restarting the calculation from the WAVECAR with the desired ENCUT. ### MBJ calculation This exchange\\-correlation functional is not particularly easy to converge in some systems. For these systems, we recommend that you split the calculation into multiple steps that successively bring you closer to the solution (always restarting from the WAVECAR of the previous step): 1. Converge with the PBE functional2. Converge with the METAGGA\\=MBJ functional with the CMBJ parameter set to some value and ALGO\\=All and TIME\\=0\\.13. Converge with the METAGGA\\=MBJ functional without CMBJ parameter set and ALGO\\=All and TIME\\=0\\.1 Similar to the recipe for magnetic calculation with LDA\\+U, it might be helpful to run steps 1\\. to 3\\. with a low ENCUT and then perform step 3\\. again with the desired ENCUT. ### Dipole Correction 1. First, converge the calculation with LDIPOL\\=.FALSE. Store the WAVECAR in the same folder.2. Use the WAVECAR to restart the calculation with LDIPOL\\=.TRUE."}
{"file_name": "Self-consistent_screening_in_Tkatchenko-Scheffler_method.md", "content": "A computationally efficient way to account for electrodynamic response effects, in particular the interaction of atoms with the dynamic electric field due to the surrounding polarizable atoms, was proposed by Tkatchenko et al[\\[1]](#cite_note-tkatchenko:prl:12-1). In this method, termed TS\\+SCS, the frequency\\-dependent screened polarizabilities   \u03b1  S C S  ( \u03c9 ) {\\\\displaystyle \\\\alpha ^{SCS}(\\\\omega )}  are obtained by solving the self\\-consistent screening equation:  \u03b1  i  S C S  ( \u03c9 ) \\=  \u03b1  i  ( \u03c9 ) \u2212  \u03b1  i  ( \u03c9 )  \u2211  i \u2260 j  \u03c4  i j  \u03b1  j  S C S  ( \u03c9 ) {\\\\displaystyle \\\\alpha \\_{i}^{SCS}(\\\\omega )\\=\\\\alpha \\_{i}(\\\\omega )\\-\\\\alpha \\_{i}(\\\\omega )\\\\sum \\_{i\\\eq j}\\\\tau \\_{ij}\\\\alpha \\_{j}^{SCS}(\\\\omega )} where   \u03c4  i j {\\\\displaystyle \\\\tau \\_{ij}}  is the dipole\\-dipole interaction tensor and   \u03b1  i  ( \u03c9 ) {\\\\displaystyle \\\\alpha \\_{i}(\\\\omega )}  is the effective frequency\\-dependent polarizability, approximated by  \u03b1  i  ( \u03c9 ) \\=  \u03b1  i  1 \\+  (  \u03c9  /  \u03c9  i  )  2 {\\\\displaystyle \\\\alpha \\_{i}(\\\\omega )\\={\\\\frac {\\\\alpha \\_{i}}{1\\+\\\\left(\\\\omega /\\\\omega \\_{i}\\\\right)^{2}}}} with the characteristic mean excitation frequency   \u03c9  i  \\=  4 3  C  6 i i  (  \u03b1  i  )  2 {\\\\displaystyle \\\\omega \\_{i}\\={\\\\frac {4}{3}}{\\\\frac {C\\_{6ii}}{(\\\\alpha \\_{i})^{2}}}} . The dispersion coefficients are computed from the Casimir\\-Polder integral:  C  6 i i  \\=  3 \u03c0  \u222b  0  \u221e  \u03b1  i  S C S  ( \u03c9 )  \u03b1  i  S C S  ( \u03c9 )  d \u03c9 . {\\\\displaystyle C\\_{6ii}\\={\\\\frac {3}{\\\\pi }}\\\\int \\_{0}^{\\\\infty }\\\\alpha \\_{i}^{SCS}(\\\\omega )\\\\alpha \\_{i}^{SCS}(\\\\omega )\\\\,d\\\\omega .} The van der Waals radii of atoms are obtained by rescaling the radii:  R  0 i  S C S  \\=  (  \u03b1  i  S C S  \u03b1  i  )  1  /  3  R  0 i  . {\\\\displaystyle R\\_{0i}^{SCS}\\=\\\\left({\\\\frac {\\\\alpha \\_{i}^{SCS}}{\\\\alpha \\_{i}}}\\\\right)^{1/3}R\\_{0i}.} The dispersion energy is computed using the same equation as in the original Tkatchenko\\-Scheffler method but with corrected parameters   C  6 i i  S C S {\\\\displaystyle C\\_{6ii}^{SCS}}  ,  \u03b1  i  S C S {\\\\displaystyle \\\\alpha \\_{i}^{SCS}} , and   R  0 i  S C S {\\\\displaystyle R\\_{0i}^{SCS}} . The TS\\+SCS method is invoked by setting IVDW\\=2\\|20 and LVDWSCS\\=*.TRUE.*. In addition to parameters controlling the Tkatchenko\\-Scheffler method, the following optional parameters can set by the user: * VDW\\_SR\\=0\\.97 scaling factor   s  R {\\\\displaystyle s\\_{R}} * SCSRAD\\=120 cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) used in the calculation of   \u03c4  i j {\\\\displaystyle \\\\tau \\_{ij}} * LSCSGRAD\\=.TRUE. decides whether to compute SCS contribution to gradients (LSCSGRAD\\=*.TRUE.*) or not* LSCALER0\\=.TRUE. decides whether to use the equation above for   R  0 i  S C S {\\\\displaystyle R\\_{0i}^{SCS}}  to re\\-scale the parameter   R  0 {\\\\displaystyle R\\_{0}}  (LSCALER0\\=*.TRUE.*) or not Details of the implementation of the TS\\+SCS method in VASP and the performance tests made on various crystalline systems are presented in reference [\\[2]](#cite_note-bucko:prb:13-2).   | **Mind:*** This method requires the use of POTCAR files from the PAW dataset version 52 or later. * This method is incompatible with the setting ADDGRID\\=*.TRUE.*. * This type of calculation may be time\\-consuming for large systems. Note that the SCS contribution to gradients and stress tensor is only modest (but non\\-negligible) in many cases. In the initial stages of relaxation of large systems, or if only energy is of interest, the calculation can be accelerated by setting LSCSGRAD\\=*.FALSE.*. * The default value for the parameter VDW\\_SR (which is, in general, different from that used in the unscreened Tkatchenko\\-Scheffler method method) is available only for the PBE functional. If a functional other than PBE is used, the value for VDW\\_SR must be specified in the INCAR file. || --- |"}
{"file_name": "ABCAR.md", "content": "Redirect to: * ML AB"}
{"file_name": "ML_EPS_REG.md", "content": "ML\\_EPS\\_REG= \\[real]   Default: **ML\\_EPS\\_REG** \\= 1E\\-15nDescription: Initial value for the threshold of the eigenvalues of the covariance matrix in the evidence approximation.  --- This threshold is used to determine which eigenvalues   \u03bb  k {\\\\displaystyle \\\\lambda \\_{k}}  of the covariance matrix   \u03a6  T  \u03a6  /  \u03c3  v  2 {\\\\displaystyle \\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Phi } /\\\\sigma \\_{\\\\mathrm {v} }^{2}}  are used in the optimization of the regularization parameters   \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  and  \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  determined by the following equations  \u03c3  w  2  \\=  \\|  w \u00af  \\|  2  \u03b3  , {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}\\={\\\\frac {\\|\\\\mathbf {\\\\bar {w}} \\|^{2}}{\\\\gamma }},}  \u03c3  v  2  \\=  \\|  T  \u2212  \u03d5  w \u00af  \\|  2  M \u2212 \u03b3  , {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}\\={\\\\frac {\\|\\\\mathbf {T} \\-\\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} \\|^{2}}{M\\-\\\\gamma }},}  \u03b3 \\=  \u2211  k \\= 1  N  B  \u03bb  k  \u03bb  k  \\+ 1  /  \u03c3  w  2 {\\\\displaystyle \\\\gamma \\=\\\\sum \\\\limits \\_{k\\=1}^{N\\_{\\\\mathrm {B} }}{\\\\frac {\\\\lambda \\_{k}}{\\\\lambda \\_{k}\\+1/\\\\sigma \\_{\\\\mathrm {w} }^{2}}}}  . All eigenvalues satisfying   \u03bb  i  /  \u03bb  m a x {\\\\displaystyle \\\\lambda \\_{i}/\\\\lambda \\_{\\\\mathrm {max} }}  \\> ML\\_EPS\\_REG are included in the above equations, whereas smaller eigenvalues are disregarded (they are anyway potentially inaccurate because of loss of significance). If at any point during iterating the above equations, the quadratic norm of errors (eight column of `REGR/REGRF` in ML\\_LOGFILE) becomes too large (more than 1\\.2 times larger than in previous iterations), the code assumes that numerical issues(loss of significance) have occurred, and then ML\\_EPS\\_REG is automatically doubled. Furthermore, if the regression does not converge within 10 steps, ML\\_EPS\\_REG is also increased by a factor of 4\\. The maximum allowed iteration depths is 50 (the iteration number is the second entry of `REGR/REGRF` in ML\\_LOGFILE). When 50 iterations are reached, no force field is created and there is most likely something seriously wrong in the calculation. The seventh entry of `REGR/REGRF` in the ML\\_LOGFILE shows the ratio of the regularization (  \u03c3  v  2  /  \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{v}^{2}/\\\\sigma \\_{w}^{2}} ) and the largest eigenvalue. Usually this number is a number with many varying digits. If this number becomes a \"well rounded\" number (e.g. 1\\.00000000E\\-14\\), this is an indication that the cap for the current ML\\_EPS\\_REG is reached. That means that regularization becomes crucial."}
{"file_name": "NiO_HSE06.md", "content": "Description: Hybrid functional calculation using the HSE06 functional. It is strongly recommended to start from a converged PBE calculation (ISTART \\= 1\\) before beginning with a DFT\\+HF method. For other hybrid functionals *Exercise\u00a0:* Check the values presented here.  --- * INCAR  ```NiO HSE06 AFM  SYSTEM   = \"NiO\" Electronic minimization  ENCUT    = 450  EDIFF    = 1E-5  LORBIT   = 11  LREAL    = .False.  ISTART   = 0  NELMIN   = 6  DOS  ISMEAR   = -5 Magnetism  ISPIN    = 2  MAGMOM   = 2.0 -2.0 2*0.0 Mixer  AMIX     = 0.2  BMIX     = 0.00001  AMIX_MAG = 0.8  BMIX_MAG = 0.00001  Hybrid functional  #LHFCALC  = .TRUE.  #HFSCREEN = 0.2   #ALGO     = D  #TIME     = 0.4  ``` * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` Download--------  nio\\_hse06\\.tgz  ---"}
{"file_name": "DIMER_DIST.md", "content": "DIMER\\_DIST= \\[real]   Default: **DIMER\\_DIST** \\= 0\\.01nDescription: The flag DIMER\\_DIST defines the step size for the numerical differentiation (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for the Improved Dimer Method.  ---"}
{"file_name": "Help_Group_rights.md", "content": "There is currently no text in this page.You can search for this page title in other pages, or search the related logs, but you do not have permission to create this page."}
{"file_name": "ISPIN.md", "content": "ISPIN= 1 \\| 2   Default: **ISPIN** \\= 1nDescription: ISPIN specifies spin polarization.  --- * ISPIN\\=1: non\\-spin\\-polarized calculations are performed.* ISPIN\\=2: spin\\-polarized calculations (collinear) are performed. By combining ISPIN with MAGMOM collinear magnetism can be studied."}
{"file_name": "ML_W1.md", "content": "ML\\_W1= \\[real]   Default: **ML\\_W1** \\= 0\\.1nDescription: This tag defines the weight   \u03b2 {\\\\displaystyle \\\\beta }  for the radial (and angular) descriptor within the machine learning force field method (see this section).  --- The weight for the angular descriptor   W  2 {\\\\displaystyle W\\_{2}}  is internally computed from the weight of the radial descriptor   W  1 {\\\\displaystyle W\\_{1}}  as:  W  2  \\=1\\.0 \u2212  W  1  . {\\\\displaystyle W\\_{2}\\=1\\.0\\-W\\_{1}.} The value for ML\\_W1 must be chosen in the interval   \\[ 0 , 1 ] {\\\\displaystyle \\[0,1]}  . By default, the angular and radial descriptors are both used although the latter is weighed less. In principle a weight of 0 for one of them is selectable which allows the code to internally skip the respective computation. However, it is generally recommended to use both descriptors to achieve satisfying training results."}
{"file_name": "LVDW_ONECELL.md", "content": "LVDW\\_ONECELL= \\[logical]\\[logical]\\[logical]   Default: **LVDW\\_ONECELL** \\= .FALSE. .FALSE. .FALSE.\u00a0  Description: LVDW\\_ONECELL\u00a0 can be used to disable vdW interaction with mirror image in X Y Z direction. This is advisable for molecular calculations in the gas phase. In all other cases, use the default. Note: There is some confusing documentation on the ASE pages, which states that \".TRUE. .TRUE. .TRUE.\" enables the interaction with neighboring cells. However, the opposite is the case and *.TRUE.* disables the interaction (\".FALSE. .FALSE. .FALSE.\" \\= interactions switched on, \".TRUE. .TRUE. .TRUE.\" \\= interactions switched off).  ---"}
{"file_name": "ML_LUSE_NAMES.md", "content": "ML\\_LUSE\\_NAMES= \\[logical]   Default: **ML\\_LUSE\\_NAMES** \\= .FALSE.nDescription: Decides whether training structures are additionally subdivided into groups internally due to their structure name.  --- This tag is important if the normalization via averages over subset standard deviations (ML\\_IWEIGHT\\=3\\) is employed.By default (ML\\_LUSE\\_NAMES\\=*.FALSE.*) the division into subsets is based on the atom types and number of atoms per type. If two systems contain the same atom types and the same number of atoms per type then they are considered to be in the same subset. To further divide them into subsets set ML\\_LUSE\\_NAMES\\=*.TRUE.* and choose different system names in the first line of the POSCAR file. This can be useful if training is performed for widely different materials, for instance, different phases with widely different energies. Without the finer subset assignment, the overall energy standard deviation might become large, reducing the weight of the energies too much of given subsets."}
{"file_name": "LBERRY.md", "content": "LBERRY= \\[logical]   Default: **LBERRY** \\= .FALSE.nDescription: This tag is used in the the evaluation of the Berry phase expression for the electronic polarization of an insulating system.  --- As of VASP.5\\.2, calculating the macroscopic polarization and Born effective charges along the lines of the following example (using LBERRY\\=*.TRUE.* etc) is unnecessary. The use of LCALCPOL or LCALCEPS is much more convenient. Setting LBERRY\\=*.TRUE.* in the INCAR file switches on the evaluation of the Berry phase expression for the electronic polarization of an insulating system, as modified for the application of USPP's and PAW datasets [\\[1]](#cite_note-berryformalism1-1)[\\[2]](#cite_note-berryformalism2-2)[\\[3]](#cite_note-berryformalism3-3)[\\[4]](#cite_note-berryformalism4-4)[\\[5]](#cite_note-berryformalism5-5)[\\[6]](#cite_note-berryultrasoft-6)[\\[7]](#cite_note-berrymmars-7).In addition, the following keywords must be specified in order to generate the mesh of k\\-points:  ```IGPAR = 1|2|3  ``` IGPAR tag specifies the socalled parallel or   G  \u2225 {\\\\displaystyle {\\\\mathbf {G}}\\_{\\\\parallel }}  direction in the integration over the reciprocal space unit cell.  ```NPPSTR = number of points on the strings in the IGPAR direction  ``` NPPSTR specifies the number of k\\-points on the strings   k  j  \\=  k  \u22a5  \\+ j  G  \u2225  /  N P P S T R {\\\\displaystyle {\\\\mathbf {k}}\\_{j}\\={\\\\mathbf {k}}\\_{\\\\perp }\\+j{\\\\mathbf {G}}\\_{\\\\parallel }/\\\\mathrm {NPPSTR} }  (with   j \\= 0 , . . ,  N P P S T R  \u2212 1 {\\\\displaystyle j\\=0,..,\\\\mathrm {NPPSTR} \\-1}  ).  ```DIPOL = center of cell (fractional coordinates)  ``` DIPOL specifies the origin with respect to which the ionic contribution to the dipole moment in the cell is calculated. When comparing changes in this contribution due to the displacement of an ion, this center should be chosen in such a way that the ions in the distorted and the undistorted structure remain on the same side of DIPOL (in terms of a minimum image convention).   An example: The fluorine displacement dipole (Born effective charge) in NaF--------------------------------------------------------------------------- First one needs to determine the electronic polarization of the undistorted NaF. Caluclation1:It is usually convenient to calculate the self\\-consistent Kohn\\-Sham potential of the undistorted structure, using a symmetry reduced   6 \u00d7 6 \u00d7 6 {\\\\displaystyle 6\\\\times 6\\\\times 6}  Monkhorst\\-Pack sampling of the Brillouin zone. Using for instance the following INCAR file:  ```PREC   = MedISMEAR = 0EDIFF  = 1E-6  ``` KPOINTS file:  ```6x6x6 0Gamma 6 6 6 0 0 0   ``` POSCAR file:  ``` NaF 4.5102 0.0 0.5 0.5 0.5 0.0 0.5 0.5 0.5 0.0 1 1Direct  0.0000000000000000  0.0000000000000000  0.0000000000000000  0.5000000000000000  0.5000000000000000  0.5000000000000000  ``` and LDA Na\\_sv and F PAW datasets.   Calculation 2:To calculate the electronic contribution to the polarization, along the reciprocal lattice vector   G  1 {\\\\displaystyle {\\\\mathbf {G}}\\_{1}}  (i.e.   P  \u22c5  G  1 {\\\\displaystyle {\\\\mathbf {P}}\\\\cdot {\\\\mathbf {G}}\\_{1}} ), add the following lines to the INCAR file:  ```LBERRY = .TRUE.IGPAR  = 1NPPSTR = 8DIPOL = 0.25 0.25 0.25  ``` Setting LBERRY\\=*.TRUE.* automatically sets ICHARG\\=11, i.e., the charge density of the previous calculation is read and kept fixed, and only the orbitals and one\\-electron eigenenergies are recalculated for the new k\\-point set. This is advantageous, since the number of k\\-points used to evaluate the Berry phase expression can be quite large, and precalculating the charge density (ICHARG\\=11\\) saves significant CPU time. The OUTCAR will now contain the following lines:  ```                                e<r>_ev=(     0.00000     0.00000     0.00000 ) e*Angst                                e<r>_bp=(     0.00000     0.00000     0.00000 ) e*Angst  ```  ``` Total electronic dipole moment: p[elc]=(     0.00000     0.00000     0.00000 ) e*Angst   ```  ```            ionic dipole moment: p[ion]=(     2.25510     2.25510     2.25510 ) e*Angst  ```   Calculations 3 and 4:The procedure mentioned under Calculation 2 now has to be repeated with IGPAR\\=2 and IGPAR\\=3 (again using the charge density obtained from Calculation 1\\), to obtain the contributions to the electronic polarization along   G  2 {\\\\displaystyle {\\\\mathbf {G}}\\_{2}}  and  G  3 {\\\\displaystyle {\\\\mathbf {G}}\\_{3}} , respectively.   Calculations 5 to 8:To calculate the change in the electronic polarization of NaF due to the displacement of the fluorine sublattice, one should repeat Calculations 1 to 4, using the following POSCAR file:   ``` NaF 4.5102 0.0 0.5 0.5 0.5 0.0 0.5 0.5 0.5 0.0 1 1Direct  0.0000000000000000  0.0000000000000000  0.0000000000000000  0.5100000000000000  0.5100000000000000  0.4900000000000000  ``` This corresponds to a displacement of the F ion by  0\\.01 \u00d74\\.51  \u00c5 {\\\\displaystyle 0\\.01\\\\times 4\\.51\\\\mathrm {\\\\AA} }  along the   z ^ {\\\\displaystyle {\\\\hat {z}}}  direction. The output of the Berry phase calculation using IGPAR\\=1 should now look similar to:  ```                                e<r>_ev=(     0.00000     0.00000     0.00004 ) e*Angst                                e<r>_bp=(     0.00000     0.18028     0.18028 ) e*Angst   Total electronic dipole moment: p[elc]=(     0.00000     0.18028     0.18031 ) e*Angst  ```  ```            ionic dipole moment: p[ion]=(     2.25510     2.25510     1.93939 ) e*Angst  ```   Collecting the results:The change in the electronic contribution to the polarization due to the F\\-sublattice displacement should be calculated as follows: * Take the average of the   e \\<  r  \\>  e v {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {ev} }}  terms obtained in calculations 2 to 4\\. Lets call this   e \\<  r  \\>  e v , u n d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {ev,undist} }} * Add the   e \\<  r  \\>  b p {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {bp} }}  terms obtained in calculations 2 to 4\\. Lets call this   e \\<  r  \\>  b p , u n d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {bp,undist} }} * The electronic polarization of the undistorted structure is then given by:  e \\<  r  \\>  e l , u n d i s t  \\= e \\<  r  \\>  e v , u n d i s t  \\+ e \\<  r  \\>  b p , u n d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {el,undist} }\\=e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {ev,undist} }\\+e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {bp,undist} }} * Repeat the above three steps for the results obtained using the distorted structure (Calculations 6 to 8\\), to evaluate   e \\<  r  \\>  e v , d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {ev,dist} }}  ,  e \\<  r  \\>  b p , d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {bp,dist} }} , and   e \\<  r  \\>  e l , d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {el,dist} }} * The change in the electronic contribution to the polarization due to the F\\-sublattice displacement,   e \u0394 \\<  r  \\>  e l {\\\\displaystyle e\\\\Delta \\<\\\\mathrm {r} \\>\\_{\\\\mathrm {el} }}  is then given by   e \\<  r  \\>  e l , d i s t  \u2212 e \\<  r  \\>  e l , u n d i s t {\\\\displaystyle e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {el,dist} }\\-e\\<\\\\mathrm {r} \\>\\_{\\\\mathrm {el,undist} }}   To calculate the total change in polarization,   e \u0394 \\<  r  \\> {\\\\displaystyle e\\\\Delta \\<\\\\mathrm {r} \\>} , one should account for the ionic contribution to this change. This contribution can be calculated from p\\[ion] as given above fromCalculations 2 and 5:  \u0394  p \\[ i o n ]  \\=  p \\[ i o n ]  d i s t  \u2212  p \\[ i o n ]  u n d i s t {\\\\displaystyle \\\\Delta \\\\mathrm {p\\[ion]} \\=\\\\mathrm {p\\[ion]} \\_{\\\\mathrm {dist} }\\-\\\\mathrm {p\\[ion]} \\_{\\\\mathrm {undist} }}  .  e \u0394 \\<  r  \\> {\\\\displaystyle e\\\\Delta \\<\\\\mathrm {r} \\>}  is then given by   \u0394  p \\[ i o n ]  \\+ e \u0394 \\<  r  \\>  e l {\\\\displaystyle \\\\Delta \\\\mathrm {p\\[ion]} \\+e\\\\Delta \\<\\\\mathrm {r} \\>\\_{\\\\mathrm {el} }} . In this example we find   e \u0394 \\<  r \\>\\=0\\.04489 {\\\\displaystyle e\\\\Delta \\<\\\\mathrm {r} \\>\\=0\\.04489}  electrons   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } . Considering that the moved F\\-sublattice was displaced by 0\\.045102   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } , this calculation yields a Born effective charge for fluorine in NaF of   Z  \u2217  \\= \u22120\\.995 {\\\\displaystyle Z^{\\*}\\=\\-0\\.995}  . N.B.(I) In the case of spinpolarized calculations (ISPIN\\=2\\),the Berry phase of the orbitals is evaluated separately for each spin direction. This means a *grep* on \"  \\<  r  \\> {\\\\displaystyle \\<\\\\mathrm {r} \\>} \" will yield two sets of   \\<  r  \\>  e v {\\\\displaystyle \\<\\\\mathrm {r} \\>\\_{\\\\mathrm {ev} }}  and  \\<  r  \\>  b p {\\\\displaystyle \\<\\\\mathrm {r} \\>\\_{\\\\mathrm {bp} }}  terms, which have to be added to oneanother to obtain the total electronic polarization of the system. N.B.(II) One should take care of the fact that the calculated \"Berry phase\" term   \\<  r  \\>  b p {\\\\displaystyle \\<\\\\mathrm {r} \\>\\_{\\\\mathrm {bp} }}  along   G  i {\\\\displaystyle \\\\mathbf {G} \\_{i}}  is, in principle, obtained modulo a certain period, determined by the lattice vector   R  i {\\\\displaystyle \\\\mathbf {R} \\_{i}}  (  R  i  \u22c5  G  i  \\= 2 \u03c0 {\\\\displaystyle \\\\mathbf {R} \\_{i}\\\\cdot \\\\mathbf {G} \\_{i}\\=2\\\\pi } ), the spin multiplicity of the orbitals, the volume of the unit cell, the number of k\\-point in the \"perpendicular\" grid, and some aspects of the symmetry of the system. More information on this particular aspect of the Berry phase calculations can be found in"}
{"file_name": "ML_FFN.md", "content": "This binary file contains a knewly created force field from machine learning runs with the options ML\\_MODE\\=`train`, `refit` or `select`. It's structure is identical to the ML\\_FF file. To be able to use the new force field from ML\\_FFN file it has to be simply copied to ML\\_FF and the INCAR tag ML\\_MODE\\=`run` has to be set. Since VASP 6\\.4\\.0 the ML\\_FFN file starts with an ASCII header containing the most important INCAR tags in effect during generation of this force field. In Linux shells this can be easily extracted issuing the following command:  ```head -n 1 ML_FFN  ``` The output may look like this:  ```ML_FF 0.2.1 binary { \"date\"\u00a0: \"2023-03-16T13:49:44.829\", \"ML_LFAST\"\u00a0: False, \"ML_DESC_TYPE\"\u00a0:   0, \"types\"\u00a0: [ \"Si\" ], \"training_structures\"\u00a0: 984, \"local_reference_cfgs\"\u00a0: [ 110 ], \"descriptors\"\u00a0: [ 142 ], \"ML_IALGO_LINREG\"\u00a0: 3, \"ML_RCUT1\"\u00a0:  6.0000E+00, \"ML_RCUT2\"\u00a0:  6.0000E+00, \"ML_W1\"\u00a0:  1.0000E-01, \"ML_SION1\"\u00a0:  5.0000E-01, \"ML_SION2\"\u00a0:  5.0000E-01, \"ML_LMAX2\"\u00a0: 4, \"ML_MRB1\"\u00a0: 8, \"ML_MRB2\"\u00a0: 8, \"ML_IWEIGHT\"\u00a0: 3, \"ML_WTOTEN\"\u00a0:  1.0000E+00, \"ML_WTIFOR\"\u00a0:  1.0000E+00, \"ML_WTSIF\"\u00a0:  1.0000E-10 }  ``` followed by some extra spaces (because the header is always 4096 characters long). The timestamp following `\"date\"` is also written to the `FFOUT` lines in ML\\_LOGFILE. The `\"ML_LFAST\"` item allows you to check whether this force field is ready for fast prediction mode.  ---"}
{"file_name": "MIXPRE.md", "content": "MIXPRE= 0 \\| 1 \\| 2 \\| 3   Default: **MIXPRE** \\= 1nDescription: MIXPRE specifies the metric in the Broyden mixing scheme(IMIX\\=4\\).  --- * MIXPRE\\=0 No preconditioning, metric\\=1* MIXPRE\\=1 \"Inverse Kerker\" metric with automatically determined BMIX (determined in such a way that the variation of the preconditioning weights covers a range of a factor 20\\)* MIXPRE\\=2 \"Inverse Kerker\" metric with automatically determined BMIX (determined in such a way that the variation of the preconditioning weights covers a range of a factor 200\\)* MIXPRE\\=3 (implemented for test purposes; **not** recommended) \"Inverse Kerker\" metric with BMIX from INCAR, the weights for the metric are given by  P  ( G )  \\= 1 \\+  B  2  G  2 {\\\\displaystyle P\\\\left(G\\\\right)\\=1\\+{\\\\frac {B^{2}}{G^{2}}}} with   B {\\\\displaystyle B} \\=BMIX.The preconditioning is done only on the total charge density (i.e. up\\+down component) and not on the magnetization charge density (i.e. up\\-down component). In our experience, the introduction of a metric always improves the convergence speed. The best choice is MIXPRE\\=1 (i.e. the default)."}
{"file_name": "Number_of_bands_NBANDS.md", "content": "NBANDS must be chosen in such that a considerable number of empty bands is included in the calculation. As a minimum, VASP requires one empty band, otherwise VASP will give a warning. Only for large gap insulators, accurate results can be obtained without empty bands and the warning might be ignored. Choosing NBANDS large enough is important for the following reason. In iterative matrix\\-diagonalization schemes, eigenvectors close to the top of the calculated number of states converge much slower than the lowest eigen states. This might result in a significant performance loss, if not sufficiently many empty bands are included in the calculation. Therefore, we recommend to set NBANDS to *NELECT/2 \\+ NIONS/2*. This is also the default setting, which is safe in most cases. In some cases, it is also possible to decrease the number of additional bands to around *NIONS/4* slightly improving the performance. On the other hand, some transition metals and atoms with open f shells might require a much larger number of empty bands (up to *2\\*NIONS*). To check this parameter perform several calculations for a fixed potential (ICHARG\\=12\\) with an increasing number of bands (e.g. starting from *NELECT/2 \\+ NIONS/2*). An accuracy of   10  \u2212 6 {\\\\displaystyle 10^{\\-6}}  should be obtained in 10\\-15 iterations. Mind that the RMM\\-DIIS scheme (ALGO\\=Fast) is more sensitive to the number of bands than the default Davidson algorithm (ALGO\\=Normal).   ---"}
{"file_name": "MLFF.md", "content": "**Machine\\-learned force fields** used in combination with ab\\-initio molecular dynamics (MD) allow capturing the underlying physics from first principles and still reach long simulation times relatively cheaply. Generally, an ab\\-initio MD step is computationally expensive due to the quantum\\-mechanical treatment of the electrons, e.g., within density\\-functional theory (DFT). In fully classical MD calculations, **force fields** are used to evaluate the force acting on each atom instead of DFT. These interatomic potentials are traditionally based on experimental observation and empirical inclusion of known forces, such as the van\\-der\\-Waals force, electrostatic charges, etc. Therefore, the quality of the force field depends on how well interactions in the specific system are known.  VASP offers **machine learning force fields on\\-the\\-fly** to overcome these two issues. Namely, the high computational cost required for ab\\-initio MD and the empirical knowledge necessary to construct a force field the traditional way. To learn more about on\\-the\\-fly machine learning read about the theory of on\\-the\\-fly machine learning force fields or about the  setup of a basic calculation! Also, check out the description on best practices on how to construct, test, and retrain force fields, as well as the basic tutorial that provides hands\\-on experience for silicon and this tutorial: Liquid Si \\- MLFF. Theory------ VASP uses a Bayesian\\-learning algorithm for on\\-the\\-fly machine learning. The total energy and forces are predicted based on the machine\\-learned force field at each time step of the MD simulation. If the Bayesian error estimate exceeds a certain threshold an ab\\-initio calculation is performed, where electrons are treated quantum mechanically. Subsequently, previously untrained atomic environments are identified and added to a set of so\\-called local reference configurations. This set serves as a comparison database for future force field predictions. With new information in the form of total energy and atomic forces obtained from the triggered ab\\-initio calculation the machine\\-learned force field is updated and the MD simulation continues. In this way the force field is iteratively improved in the course of the MD simulation. Ideally, it will reach such high prediction quality that no more ab\\-initio calculations are required. For details on the algorithm, check out the theory article about machine learning force fields.  How to------ All related INCAR tags and  input/output files begin with the prefix *ML\\_*.To learn about machine learning force fields, visit: * Machine learning force field calculations: Basics.* Best practices for machine\\-learned force fields include how to construct, test, and retrain force fields.* Basic tutorial that provides hands\\-on experience for silicon.* Liquid Si \\- MLFF. ### Input Depending on whether the calculation is training, retraining, or applying the force field (see ML\\_MODE), VASP may require the following input files in addition to the usual input files (INCAR, POSCAR, etc.): * ML\\_AB Ab\\-initio training data.* ML\\_FF Force\\-field parameters. ### Output The machine\\-learning\u2013force\\-field method generates the following output files: * ML\\_LOGFILE Main output file.* ML\\_ABN Generated ab\\-initio training data. It is used as ML\\_AB file to restart a calculation.* ML\\_REG Summary of regression results.* ML\\_HIS Summary of the histogram data.* ML\\_FFN Force\\-field parameters. It is used as ML\\_FF file to restart a calculation.* ML\\_EATOM Local atomic energies.* ML\\_HEAT Local heat flux. ### Hyperparameters Hyperparameters are user\\-defined parameters of the MLFF model that will not be optimized during training of the MLFF. For instance, cutoff radii (ML\\_RCUT1, ML\\_RCUT2), the normalization and weighting of ab\\-initio training data (ML\\_IWEIGHT, ML\\_WTOTEN, ML\\_WTIFOR, ML\\_WTSIF), threshold and the total number of descriptors in the sparsification (ML\\_EPS\\_LOW, ML\\_RDES\\_SPARSDES). We recommend optimizing these in cross\\-validation by means of systematically varying the parameters and refitting the force field (ML\\_MODE\\=refit). In principle, it is necessary to do that for all hyperparameters available in VASP to obtain the best MLFF model. In practice, usually the default values are a good guess. The default parameters of VASP were optimized on a selected set of bulk materials and on a molecular data base.  --- Pages in category \"Machine\\-learned force fields\"------------------------------------------------- The following 70 pages are in this category, out of 70 total. ### B * Best practices for machine\\-learned force fields### M * Machine learning force field calculations: Basics* Machine learning force field: Theory* ML AB* ML ABN* ML AFILT2* ML CDOUB* ML CSIG* ML CSLOPE* ML CTIFOR* ML CX* ML DESC TYPE* ML EATOM* ML EATOM REF* ML EPS LOW* ML EPS REG* ML FF* ML FFN* ML HEAT* ML HIS* ML IAFILT2* ML IALGO LINREG* ML ICOUPLE* ML ICRITERIA* ML IERR* ML IREG* ML ISCALE TOTEN* ML ISTART* ML IWEIGHT* ML LAFILT2* ML LBASIS DISCARD* ML LCOUPLE* ML LEATOM* ML LERR* ML LFAST* ML LHEAT* ML LMAX2* ML LMLFF* ML LOGFILE* ML LSPARSDES* ML LUSE NAMES* ML MB* ML MB MIN* ML MCONF* ML MCONF NEW* ML MHIS* ML MODE* ML MRB1* ML MRB2* ML NATOM COUPLED* ML NHYP* ML NMDINT* ML NRANK SPARSDES* ML OUTBLOCK* ML OUTPUT MODE* ML RCOUPLE* ML RCUT1* ML RCUT2* ML RDES SPARSDES* ML REG* ML SCLC CTIFOR* ML SIGV0* ML SIGW0* ML SION1* ML SION2* ML W1* ML WTIFOR* ML WTOTEN* ML WTSIF### S * Shared memory"}
{"file_name": "FERDO.md", "content": "FERDO= \\[real array]nDescription: FERDO sets the occupancies of the states in the down\\-spin channel for ISMEAR\\=\\-2 and ISPIN\\=2\\.  --- To set the occupancies, specify  ``` FERDO = f(1) f(2) f(3) ... f(NBANDS\u00d7Nk)  ``` The occupancies must be specified for all bands and k points. The band\\-index runs fastest. The occupancies must be between 0 and 1\\. Specify the occupancies of the states in the spin\\-up channel by means of the FERWE tag.   | **Mind:** If the calculation stops with an error message when reading FERDO, then this may be due to an automatic increase of the number of bands NBANDS in parallel calculation (the new value of NBANDS is indicated in the corresponding warning message). If this is the case, then the number of occupancies provided to FERDO should be increased according to the new NBANDS. || --- |"}
{"file_name": "LDIPOL.md", "content": "LDIPOL= .TRUE. \\| .FALSE.   Default: **LDIPOL** \\= .FALSE.nDescription: LDIPOL switches on corrections to the potential and forces. Can be applied for charged molecules and slabs with a net dipole moment.  --- The presence of a dipole in combination with periodic boundary conditions leads to a slow convergence of the total energy with the size of the supercell.Furthermore, finite\\-size errors affect the potential and the forces.This effect can be counterbalanced by setting LDIPOL\\=.TRUE. in the INCAR file. For LDIPOL\\=.TRUE., a linear correction, and for charged cells, a quadratic electrostatic potential is added to the local potential in order to correct the errors introduced by the periodic boundary conditions. | **Mind:** This is in the spirit of Neugebauer *et al.* [\\[1]](#cite_note-neugebauer:prb:1992-1), though more general. Note that the total energy is correctly implemented, whereas Ref. [\\[1]](#cite_note-neugebauer:prb:1992-1) contains an erroneous factor 2 in the total energy. || --- | The biggest advantage of this mode is that leading errors in the forces are corrected and that the work function can be evaluated for asymmetric slabs. The disadvantage is that the convergence to the electronic ground state might slow down considerably, i.e., more electronic iterations might be required to obtain the required precision. | **Warning:** For charged systems, the potential correction is currently only implemented for cubic supercells. VASP will stop if the supercell is not cubic and LDIPOL is used. || --- |"}
{"file_name": "Projector-augmented-wave_formalism.md", "content": "Basics of the PAW formalism--------------------------- The PAW formalism is a generalization of ideas of both Vanderbilt\\-type[\\[1]](#cite_note-vander:90-1)ultrasoft\\-pseudopotentials[\\[2]](#cite_note-kresshaf:94-2) (USPP) and the linearized augmented\\-plane\\-wave[\\[3]](#cite_note-andersen:75-3) (LAPW) method. The method was first proposed and implemented by Bl\u00f6chl[\\[4]](#cite_note-bloechl:94-4). The formal relationship between Vanderbilt\\-typeultrasoft pseudopotentials and the PAW method has been derived by Kresse and Joubert[\\[5]](#cite_note-kressjoub:99-5), and the generalization of the PAW method to noncollinear magnetism has beendiscussed by Hobbs, Kresse and Hafner[\\[6]](#cite_note-hobbs:00-6). We briefly summarize the basics of the PAW method below (following Refs. [\\[4]](#cite_note-bloechl:94-4) and [\\[5]](#cite_note-kressjoub:99-5)).  In the PAW method the one electron wavefunctions   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }} , in the following simply called orbitals, arederived from the pseudo orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }}  by means of a linear transformation:  \\|  \u03c8  n  k  \u27e9 \\=  \\|  \u03c8 \\~  n  k  \u27e9 \\+  \u2211  i  (  \\|  \u03d5  i  \u27e9 \u2212  \\|  \u03d5 \\~  i  \u27e9 ) \u27e8  p \\~  i  \\|  \u03c8 \\~  n  k  \u27e9 . {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{i}(\\|\\\\phi \\_{i}\\\\rangle \\-\\|{\\\\widetilde {\\\\phi }}\\_{i}\\\\rangle )\\\\langle {\\\\widetilde {p}}\\_{i}\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle .} The pseudo orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }} , where   n k {\\\\displaystyle nk}  is the band index and k\\-point index, are the variational quantities and expanded in plane waves (see below). In the interstitial region between the PAW spheres,the orbitals   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }}  are identical to the exact orbitals   \u03c8  n  k {\\\\displaystyle {\\\\psi }\\_{n\\\\mathbf {k} }}  .Inside the spheres, the pseudo\\-orbitals are however only a computationaltool and an inaccurateapproximation to the true orbitals, since even thenorm of the all\\-electron wave function is not reproduced. The last equation is required to map the auxiliary quantities   \u03c8 \\~  n  k {\\\\displaystyle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }} onto the corresponding exact orbitals. The PAW method implemented in VASP exploits the frozen core (FC) approximation, which is not an inherent characteristic of the PAW method, but has been made in all implementations so far.In the present case, the core electrons are also kept frozen in the configuration for which the PAW dataset was generated. The index   \u03b1 {\\\\displaystyle \\\\alpha }  is a shorthand for the atomic site   R  \u03b1 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }} , the angular momentumquantum numbers   l  \u03b1  ,  m  \u03b1 {\\\\displaystyle l\\_{\\\\alpha },m\\_{\\\\alpha }}  and an additional index   \u03b5  \u03b1 {\\\\displaystyle \\\\varepsilon \\_{\\\\alpha }}  referring tothe referenceenergy. The pseudo orbitals are expanded in the reciprocal space using plane waves  \u27e8  r  \\|  \u03c8 \\~  n  k  \u27e9 \\=  1  \u03a9  1  /  2  \u2211  G  C  n  k G  e  i (  G  \\+  k  ) \u22c5  r  , {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\={\\\\frac {1}{\\\\Omega ^{1/2}}}\\\\sum \\_{\\\\mathbf {G} }C\\_{n\\\\mathbf {kG} }e^{i(\\\\mathbf {G} \\+\\\\mathbf {k} )\\\\cdot \\\\mathbf {r} },} where   \u03a9 {\\\\displaystyle \\\\Omega }  is the volume of the Wigner\\-Seitz cell. The all\\-electron (AE) partial waves  \u03d5  \u03b1 {\\\\displaystyle \\\\phi \\_{\\\\alpha }}  are solutions of the radial Schr\u00f6dinger equation for a non\\-spinpolarized reference atom at a specific energy   \u03b5  \u03b1 {\\\\displaystyle \\\\varepsilon \\_{\\\\alpha }}  and for a specific angular momentum   l  \u03b1 {\\\\displaystyle l\\_{\\\\alpha }}  :  \u27e8  r  \\|  \u03d5  \u03b1  \u27e9 \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  \u03b1  (  r  \u2212  R  \u03b1  ^  ) \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u  l  \u03b1  \u03b5  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  l  \u03b1  m  \u03b1  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|\\\\phi \\_{\\\\alpha }\\\\rangle \\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}u\\_{\\\\alpha }(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)Y\\_{\\\\alpha }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}u\\_{l\\_{\\\\alpha }\\\\varepsilon \\_{\\\\alpha }}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)\\\\,Y\\_{l\\_{\\\\alpha }m\\_{\\\\alpha }}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The notation   r  \u2212  R  \u03b1  ^ {\\\\displaystyle {\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}}  is used to clarify thatthe spherical harmonics   Y {\\\\displaystyle Y}  depends on the orientation but not onthe length of the vector   r  \u2212  R  \u03b1 {\\\\displaystyle \\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}  .Note that the radial component of the partial wave   u  \u03b1 {\\\\displaystyle u\\_{\\\\alpha }}  is independent of   m  \u03b1 {\\\\displaystyle m\\_{\\\\alpha }} , since the partial waves are calculated for a spherical atom. Furthermore, the spherical harmonics depend on the angular quantum numbers onlyand not on the reference energy. The pseudo partialwaves   \u03d5 \\~  \u03b1 {\\\\displaystyle {\\\\widetilde {\\\\phi }}\\_{\\\\alpha }}  are equivalent to the AE partial waves outside a coreradius   r  c {\\\\displaystyle r\\_{c}}  and match continuously onto   \u03d5  \u03b1 {\\\\displaystyle \\\\phi \\_{\\\\alpha }}  inside the core radius:  \u27e8  r  \\|  \u03d5 \\~  \u03b1  \u27e9 \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u \\~  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  \u03b1  (  r  \u2212  R  \u03b1  ^  ) \\=  1  \\|  r  \u2212  R  \u03b1  \\|  u \\~  l  \u03b1  \u03b5  \u03b1  (  \\|  r  \u2212  R  \u03b1  \\|  )  Y  l  \u03b1  m  \u03b1  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }\\\\rangle \\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}{\\\\widetilde {u}}\\_{\\\\alpha }(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)Y\\_{\\\\alpha }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\={\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|}}{\\\\widetilde {u}}\\_{l\\_{\\\\alpha }\\\\varepsilon \\_{\\\\alpha }}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|)\\\\,Y\\_{l\\_{\\\\alpha }m\\_{\\\\alpha }}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The core radius   r  c {\\\\displaystyle r\\_{c}}  is usually chosen approximately around half the nearestneighbor distance. The projector functions   p \\~  \u03b1 {\\\\displaystyle {\\\\widetilde {p}}\\_{\\\\alpha }}  are dual to the partialwaves:  \u27e8  p \\~  i  \\|  \u03d5 \\~  j  \u27e9 \\=  \u03b4  i j  . {\\\\displaystyle \\\\langle {\\\\widetilde {p}}\\_{i}\\|{\\\\widetilde {\\\\phi }}\\_{j}\\\\rangle \\=\\\\delta \\_{ij}.} Charge and overlap densities---------------------------- Starting from the completeness relations it is possible to show that, in the PAW method, the total charge density (or more precisely the overlap density) related to two orbitals   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  and  \u03c8  m  k {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {k} }}  n (  r  ) \\=  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  k  (  r  ) {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\psi \\_{n\\\\mathbf {k} }^{\\\\ast }(\\\\mathbf {r} )\\\\,\\\\psi \\_{m\\\\mathbf {k} }(\\\\mathbf {r} )} can be rewritten as (for details we refer to Ref. [\\[4]](#cite_note-bloechl:94-4)):  n (  r  ) \\=  n \\~  (  r  ) \u2212  n \\~  1  (  r  ) \\+  n  1  (  r  ) . {\\\\displaystyle n(\\\\mathbf {r} )\\={\\\\widetilde {n}}(\\\\mathbf {r} )\\-{\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\+n^{1}(\\\\mathbf {r} ).} Here, the constituent charge densities are defined as:  n \\~  (  r  ) \\= \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle {\\\\widetilde {n}}(\\\\mathbf {r} )\\=\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle }  n \\~  1  (  r  ) \\=  \u2211  \u03b1 , \u03b2  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle {\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta }{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} )\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle }  n  1  (  r  ) \\=  \u2211  \u03b1 , \u03b2  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 . {\\\\displaystyle n^{1}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta }\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle .} The quantities with a superscript 1 are one\\-center quantities andare usually only evaluated on radial grids. Furthermore, one can usuallydrop the complex conjugation for the partial waves, since they are real\\-valued. The indices   \u03b1 {\\\\displaystyle \\\\alpha }  and  \u03b2 {\\\\displaystyle \\\\beta }  are restricted to those pairs that correspond to one atom   R  \u03b1  \\=  R  \u03b2 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }\\=\\\\mathbf {R} \\_{\\\\beta }}  .For a complete set of projectors the one\\-centre pseudo charge density   n \\~  1 {\\\\displaystyle {\\\\widetilde {n}}^{1}}  is exactlyidentical to   n \\~ {\\\\displaystyle {\\\\widetilde {n}}}  within the augmentation spheres.Furthermore, it is often necessary to define   \u03c1  \u03b1 \u03b2 {\\\\displaystyle \\\\rho \\_{\\\\alpha \\\\beta }} , the occupancies of eachaugmentation channel   ( \u03b1 , \u03b2 ) {\\\\displaystyle (\\\\alpha ,\\\\beta )}  inside each PAW sphere. These are calculated from the pseudo orbitals applying the projector functions and summing over all bands  \u03c1  \u03b1 \u03b2  \\=  \u2211  n  k  f  n  k  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  n  k  \u27e9 , {\\\\displaystyle \\\\rho \\_{\\\\alpha \\\\beta }\\=\\\\sum \\_{n\\\\mathbf {k} }f\\_{n\\\\mathbf {k} }\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle ,} where the occupancy   f  n  k {\\\\displaystyle f\\_{n\\\\mathbf {k} }}  is one for occupied orbitalsand zero for unoccupied one electron orbitals. The compensation or augmentation density---------------------------------------- The PAW method would yield exact overlap densities on the plane wave gridif the density were calculated as  n (  r  ) \\= \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  m  k  \u27e9 \\+  \u2211  \u03b1 , \u03b2  (  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) ) \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{\\\\alpha ,\\\\beta }(\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ))\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle } In practice, the second term changes far too rapidly in real spaceto be represented on a plane wave grid. Since even the normof the pseudo\\-orbitals does not agree with the norm of the all\\-electron orbitals, it does not suffice to calculateHartree or exchange energies from the pseudo densities only. Hence, in order to treat the long\\-range electrostatic interactions in the Hartree and exchange term an additional quantity, the compensation density   n ^ {\\\\displaystyle {\\\\widehat {n}}} , is introduced. Its purpose is to approximate   Q  \u03b1 , \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) . {\\\\displaystyle Q\\_{\\\\alpha ,\\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ).} This compensation density (sometimes also referred to as augmentation density) is chosen such that the sum of the pseudo charge densityand the compensation density  n \\~  1  \\+  n ^ {\\\\displaystyle {\\\\widetilde {n}}^{1}\\+{\\\\widehat {n}}}  has exactly the same moments as the exact density   n  1 {\\\\displaystyle n^{1}}  within each augmentation sphere centered at the position   R  \u03b1 {\\\\displaystyle \\\\mathbf {R} \\_{\\\\alpha }} . This requires that   \u222b  \u03a9  r  \\[  n  1  (  r  ) \u2212  n \\~  1  (  r  ) \u2212  n ^  (  r  ) ]  \\|  r  \u2212  R  \u03b1  \\|  L  Y  L M  \u2217  (  r  \u2212  R  \u03b1  ^  )  d  r  \\= 0  \u2200  R  \u03b1  , L , M . {\\\\displaystyle \\\\int \\_{\\\\Omega \\_{r}}\\[n^{1}(\\\\mathbf {r} )\\-{\\\\widetilde {n}}^{1}(\\\\mathbf {r} )\\-{\\\\widehat {n}}(\\\\mathbf {r} )]\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }\\|^{L}Y\\_{LM}^{\\\\ast }({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}})\\\\,d\\\\mathbf {r} \\=0\\\\quad \\\\forall \\\\quad \\\\mathbf {R} \\_{\\\\alpha },L,M.} This implies that the electrostatic potential originating from   n  1 {\\\\displaystyle n^{1}} is identical to that of   n \\~  1  \\+  n ^ {\\\\displaystyle {\\\\widetilde {n}}^{1}\\+{\\\\widehat {n}}}  outsidethe augmentation sphere.Details on the construction of the compensation charge density in the VASP program have been published elsewhere[\\[5]](#cite_note-kressjoub:99-5). The compensation charge density is written in the formof a one\\-center multipole expansion  n ^  (  r  ) \\=  \u2211  \u03b1 , \u03b2 , L M  Q ^  \u03b1 , \u03b2  L M  (  r  )  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m  k  \u27e9 , {\\\\displaystyle {\\\\widehat {n}}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta ,LM}{\\\\widehat {Q}}\\_{\\\\alpha ,\\\\beta }^{LM}(\\\\mathbf {r} )\\\\,\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{m\\\\mathbf {k} }\\\\rangle ,} where the functions   Q ^  \u03b1 \u03b2  L M  (  r  ) {\\\\displaystyle {\\\\widehat {Q}}\\_{\\\\alpha \\\\beta }^{LM}(\\\\mathbf {r} )}  are given by  Q ^  \u03b1 \u03b2  L M  (  r  ) \\=  q  \u03b1 \u03b2  L M  g  L  (  \\|  r  \u2212  R  i  \\|  )  Y  L M  (  r  \u2212  R  \u03b1  ^  ) . {\\\\displaystyle {\\\\widehat {Q}}\\_{\\\\alpha \\\\beta }^{LM}(\\\\mathbf {r} )\\=q\\_{\\\\alpha \\\\beta }^{LM}\\\\,g\\_{L}(\\|\\\\mathbf {r} \\-\\\\mathbf {R} \\_{i}\\|)Y\\_{LM}({\\\\widehat {\\\\mathbf {r} \\-\\\\mathbf {R} \\_{\\\\alpha }}}).} The moment   L {\\\\displaystyle L}  of the function   g  L  ( r ) {\\\\displaystyle g\\_{L}(r)}  is equal to 1\\. The quantity   q  \u03b1 \u03b2  L M {\\\\displaystyle q\\_{\\\\alpha \\\\beta }^{LM}} is defined in Eq. (25\\) of Ref. [\\[5]](#cite_note-kressjoub:99-5)."}
{"file_name": "Theory.md", "content": "The **Vienna ab\\-initio simulation package** (VASP) is a computer program for atomic scale materials modeling from first principles. A so\\-called ab\\-initio simulation generally entails  * choosing the elements and a structure of the material,* treating the electrons fully quantum mechanically and* optionally updating the ionic positions * to minimize the forces and obtain a stable structure, or* by means of Newton's equation of motion to perform molecular dynamics simulations. VASP computes an approximate solution to the many\\-body Schr\u00f6dinger equation to obtain the electronic ground state. This can either be done within density\\-functional theory (DFT) by solving the Kohn\\-Sham (KS) equations, or within the Hartree\\-Fock (HF) approximation by solving the Roothaan equations. Hybrid functionals that mix the Hartree\\-Fock approach with density\\-functional theory are also implemented. Furthermore, Green\u2019s functions methods based on many\\-body perturbation theory are available in VASP. For instance, the GW method, random\\-phase approximation, 2nd\\-order M\u00f8ller\\-Plesset, Bethe\\-Salpeter equations, and more to grant access to optical properties. In VASP, central quantities, like the one\\-electron orbitals, the electronic charge density, and the local potential are expressed in plane\\-wave basis using the projector\\-augmented\\-wave (PAW) method. This entails using PAW pseudopotentials to efficiently treat the relevant valence electrons while appropriately capturing the nodal features near the nuclei. To determine the orbitals for the electronic ground state, VASP makes use of efficient iterative matrix diagonalization techniques. These are coupled with highly efficient Broyden and Pulay density\\-mixing schemes to speed up the self\\-consistency cycle. The ionic degrees of freedom can be updated by various algorithms (IBRION) based on forces that are either obtained directly from the electronic state or from ab\\-intio quality force fields that were trained by machine learning. VASP is particularly strong in describing crystal structures due to the periodic boundary conditions it exploits. Naturally, these systems feature quantized vibrations in the form of phonons whose influence on the electronic ground state is taken into account by including electron\\-phonon coupling. In this category, we collect theory pages from all the different areas VASP offers functionalities. These can also be reached from the corresponding category. For instance, the article on the Blocked\\-Davidson algorithm is also linked from the electronic minimization page. Pages in category \"Theory\"-------------------------- The following 45 pages are in this category, out of 45 total. ### A * Andersen thermostat### B * Berry phases and finite electric fields* Blocked\\-Davidson algorithm* Blue\\-moon ensemble### C * Charge sloshing* Conjugate gradient optimization* Constrained molecular dynamics* Constrained\u2013random\\-phase\u2013approximation formalism* Coulomb singularity* CSVR thermostat### D * DDsC dispersion correction* DFT\\-D2* DFT\\-D3* DFT\\-ulg* Direct optimization of the orbitals### E * Efficient single band eigenvalue\\-minimization* Construction:Electric field response from density\\-functional\\-perturbation theory* Electron\\-phonon interactions theory### G * GW and dielectric matrix* GW approximation of Hedin's equations### H * Harris\\-Foulkes functional* Hellmann\\-Feynman forces* Hybrid functionals: formalism### K * K\\-point integration### L * Langevin thermostat* Low\\-scaling GW: The space\\-time formalism### M * Machine learning force field: Theory* Many\\-body dispersion energy* Many\\-body dispersion energy with fractionally ionic model for polarizability* Matsubara formalism### N * Nose\\-Hoover thermostat### P * Phonons: Theory* Preconditioning* Projector\\-augmented\\-wave formalism### R * RMM\\-DIIS* RPA/ACFDT: Correlation energy in the Random Phase Approximation### S * Self\\-consistency cycle* Self\\-consistent screening in Tkatchenko\\-Scheffler method* Single band steepest descent scheme* Slow\\-growth approach* Spin spirals### T * Tkatchenko\\-Scheffler method* Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning### W * Wrap\\-around errors### X * XAS theory"}
{"file_name": "CO.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Relaxation of the bond length in a CO molecule. Input----- ### POSCAR  ```CO molecule in a box 1.0         \u00a0! universal scaling parameters 8.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 8.0 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)1 1          \u00a0! number of atoms for each speciescart         \u00a0! positions in cartesian coordinates 0 0 0       \u00a0! first atom 0 0 1.12    \u00a0! second atom  ``` ### INCAR  ```SYSTEM = CO molecule in a boxISMEAR = 0\u00a0! Gaussian smearingNSW = 5   \u00a0! 5 ionic stepsIBRION = 2\u00a0! use the conjugate gradient algorithm  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` ### POTCAR The POTCAR file is created by the concatenation of two individual POTCAR files corresponding to O and C, e.g.:  ```cat  .../O/POTCAR  .../C POTCAR  > POTCAR  ``` Calculation----------- * A similar relaxation as in the previous case (O\\_dimer) is performed but in this case more steps are required, since the first estimate for the minimum is not very accurate. The trial steps are much too long (POTIM parameter).  ```   1 F= -.14764064E+02 E0= -.14764064E+02  d E =-.147641E+02 curvature:   0.00 expect dE= 0.000E+00 dE for cont linesearch  0.000E+00 trial: gam= 0.00000 g(F)=  0.820E+00 g(S)=  0.000E+00 ort = 0.000E+00 (trialstep = 0.100E+01) search vector abs. value=  0.820E+00 bond charge predicted...         ...      ......         ...      ......         ...      ...   2 F= -.12660858E+02 E0= -.12660858E+02  d E =0.210321E+01 trial-energy change:    2.103205  1 .order    1.311207   -0.819873    3.442288 step:   0.1924(harm=  0.1924)  dis= 0.02705  next Energy=   -14.842919 (dE=-0.789E-01) bond charge predicted...         ...      ......         ...      ......         ...      ...   3 F= -.14747869E+02 E0= -.14747869E+02  d E =0.161943E-01 curvature:  -0.10 expect dE=-0.902E-01 dE for cont linesearch -0.902E-01 ZBRENT: interpolating opt\u00a0:   0.0929  next Energy=   -14.802162 (dE=-0.381E-01) bond charge predicted...         ...      ......         ...      ... ...         ...      ...   4 F= -.14796822E+02 E0= -.14796822E+02  d E =-.327586E-01 curvature:  -0.04 expect dE=-0.330E-03 dE for cont linesearch -0.330E-03 trial: gam= 0.00000 g(F)=  0.814E-02 g(S)= 0.000E+00 ort =-0.817E-01 (trialstep = 0.819E+00) search vector abs. value=  0.814E-02 reached required accuracy - stopping structural energy minimisation  ``` Download--------  CO.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "LIBMBD_MBD_BETA.md", "content": "LIBMBD\\_MBD\\_BETA= \\[real]   Default: **LIBMBD\\_MBD\\_BETA** \\= value that was determined for the exchange\\-correlation functional set with LIBMBD\\_XCnDescription: LIBMBD\\_MBD\\_BETA sets the value of the scaling factor   \u03b2 {\\\\displaystyle \\\\beta }  (usually denoted   s  R {\\\\displaystyle s\\_{R}} ) in the many\\-body methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_MBD\\_BETA allows to choose the value of the damping parameter   \u03b2 {\\\\displaystyle \\\\beta }  in the many\\-body methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3). The value is internally passed to the libMBD input **mbd\\_beta** described at the page [\\[4]](#cite_note-libmbd_input-4). LIBMBD\\_MBD\\_BETA is the same as the VDW\\_SR tag that is used for the VASP implementation of the many\\-body methods. | **Mind:** LIBMBD\\_MBD\\_BETA can be set only if LIBMBD\\_XC\\=none. || --- | | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "PHON_LMC.md", "content": "PHON\\_LMC= \\[logical]   Default: **PHON\\_LMC** \\= .FALSE.nDescription: This flag controls whether electron\\-phonon interactions from Monte\\-Carlo sampling are calculated or not.   --- This feature is only available from VASP version 6\\.0 or higher. For further usage of this tag see: Electron\\-phonon interactions from Monte\\-Carlo sampling."}
{"file_name": "Nose-Hoover_thermostat.md", "content": "In the approach by Nos\u00e9 and Hoover[\\[1]](#cite_note-nose:jcp:1984-1)[\\[2]](#cite_note-nose:ptp:1991-2)[\\[3]](#cite_note-hoover:pra:1985-3)[\\[4]](#cite_note-frenkel:book:1996-4), an extra degree of freedom is introduced in the Hamiltonian. The heat bath is considered as an integral part of the system and has a fictious coordinate   s {\\\\displaystyle s}  which is introduced into the Lagrangian of the system. This Lagrangian for a   N {\\\\displaystyle N}  particle system is written as  L  \\=  \u2211  i \\= 1  N  m  i  2  s  2  r  \u02d9  i  2  \u2212 U (  r  ) \\+  Q 2  s \u02d9  2  \u2212 g  k  B  T  l n  s {\\\\displaystyle {\\\\mathcal {L}}\\=\\\\sum \\\\limits \\_{i\\=1}^{N}{\\\\frac {m\\_{i}}{2}}s^{2}{\\\\dot {\\\\mathbf {r}}}\\_{i}^{2}\\-U({\\\\mathbf {r}})\\+{\\\\frac {Q}{2}}{\\\\dot {s}}^{2}\\-gk\\_{B}T\\\\mathrm {ln} \\\\,s} where   m  i {\\\\displaystyle m\\_{i}}  and  k  B {\\\\displaystyle k\\_{B}}  are the mass of ion   i {\\\\displaystyle i}  and the Boltzmann constant, respectively. The first two terms are the kinetic and potential energy of the system. The third and fourth term represent the kinetic and potential energy of the fictitious coordinate   s {\\\\displaystyle s} . These terms also ensure the energy conservation of the Nose\\-Hoover thermostat. The parameter   g {\\\\displaystyle g}  is usually equal to the number of degrees of freedom of the system   g \\= 3 N \u2212  N  c o n s t r a i n t {\\\\displaystyle g\\=3N\\-N\\_{\\\\mathrm {constraint} }} , where   N  c o n s t r a i n t {\\\\displaystyle N\\_{\\\\mathrm {constraint} }}  is equal to the number of constraint set (fixed coordinates in the POSCAR file). The parameter   Q {\\\\displaystyle Q}  is an effective \"mass\" of   s {\\\\displaystyle s} , which controls the coupling of the system to the heat bath. It is set by the INCAR tag SMASS.  The Nose\\-Hoover thermostat is selected by MDALGO\\=2\\."}
{"file_name": "ML_EPS_LOW.md", "content": "ML\\_EPS\\_LOW= \\[real]n| Default: **ML\\_EPS\\_LOW** | \\= 1E\\-11 | for ML\\_MODE \\= SELECT, REFIT || --- | --- | --- ||  | \\= 1E\\-9 | else (vasp.6\\.3\\.0 default was 1E\\-10, see comments below) | Description: Threshold for the CUR algorithm used in the sparsification of local reference configurations within the machine learning force fields.   --- This value sets the threshold for the eigenvalues that contribute to the leverage scoring used in the CUR algorithm for the rank compression (\"sparsification\") of the local configurations (for details see appendix E of reference [\\[1]](#cite_note-jinnouchi2:arx:2019-1)). Small eigenvalues and those columns (local configurations) that are strongly connectedwith these small eigenvalues are removed by the sparsification routines. The default value is fairly well balanced, and we do not recommend to increase the threshold to values larger than 1E\\-7\\. Also using smaller values than 1E\\-9 does not improve the MLFF if Bayesian regression is used(but it can be benficial for SVD).  The description how to choose ML\\_EPS\\_LOW for accurate force fields is given here. On the theory of the sparsification of local reference configurations seehere."}
{"file_name": "PLEVEL.md", "content": "PLEVEL= \\[integer]nDescription: Control flag for the output of the profiling routines.  --- If specified all routines with a level higher than PLEVEL\\=*level* are not printed out in the OUTCAR. Examples that use this tag  ---"}
{"file_name": "Alpha-AlF3.md", "content": "*Exercise\u00a0:* Determine the 27Al Cq value and the Al and F shieldings. \u03b1\\-AlF3 crystallizes in the trigonal R \\-3c space group. a \\= b \\= 4\\.9305 \u00c5; c \\= 12\\.4462 \u00c5 \u03b1 \\= \u03b2 \\= 90\u00b0; \u03b3 \\= 120\u00b0 The unit cell contains two independent atoms (1 Al and 1 F) with 6 formula units (AlF3) per unit cell (Z\\=6\\). AlF6 octahedron units are linked together by corner sharing.As the conventional unit cell is non\\-primitive, the primitive rhombohedral one is used for the calculation. It saves a lot of computational time\u00a0! We suggest you to use vesta for generation the POSCAR file from the AlF3\\.cif file. In the standard export procedure, the POSCAR file is generated with the conventional unit cell (non primitive R\\-cell with 24 atoms inside). Ask VESTA to reduce to unit cell to the primitive one. You will then have only 8 atoms in the POSCAR file. In this exercise one wants first to calculate the EFG tensor components of 27Al.This is very fast task calculated at the end of the first SCF calculation (ground state property).The experimental values for the Cq is 0\\.21 MHz. The nuclear quadrupolar momentum used to transform EFG in Cq is Q \\= 14\\.66 10\\-30 m2(see the paper of Sadoc *et al.* (<http://www.sciencedirect.com/science/article/pii/S0926204014000022>)(Flurine has a 1/2 nuclear spin, so Q is zero) In a second step one wants to calculate the shielding parameters for Al and F. This is done using the linear response using the GIPAW formalism.As the calculation is quite time consuming, only very few k\\-points and small ENCUT are used with standard PAW data sets.The calculated shielding tensors components can be compared to the ones obtained by Sadoc *et al.*   * INCAR  ``` SYSTEM       =  Al F3 GGA          = PE ISTART       = 1 ICHARG       = 0 INIWAV       = 1 LREAL        =  AUTO ISYM         = 2 ISPIN        = 1  ``` Ionic minimisation  ``` NSW          = 0 ISIF         = 2 IBRION       = 2  ``` 1. EDIFFG \\= \\-2E\\-2  ``` POTIM        = 0.1  ``` Electronic minimisation  ``` IALGO        = 38 LWAVE        = .TRUE. EMIN         =   -20.0 EMAX         =   10.0 NEDOS        = 1601  ``` EFG Calculation  ``` LEFG         = .TRUE. QUAD_EFG     = 146.6 0.0  ``` Chemical Shift  ``` PREC         = Normal    # nice ENCUT        = 400.0      # typically higher cutoffs than usual are needed ISMEAR = 0; SIGMA= 0.1 # no fancy smearings, SIGMA sufficiently small EDIFF        = 1E-9      # you'd need much smaller EDIFFs. LCHIMAG      = .TRUE.   # to switch on linear response for chemical shifts DQ           = 0.001         # often the default is sufficient ICHIBARE     = 1       # often the default is sufficient LNMR_SYM_RED = .TRUE. # be on the safe side NLSPLINE     = .TRUE.  # only needed if LREAL is NOT set. LREAL        = A          # helps for speed for large systems, not needed NBANDS       = 25       # to safe memory,\u00a0??? = NELECT/2  ```   * KPOINTS  ```automatic mesh 0Auto 20  ``` * POSCAR  ```Al1 F3 1.0        4.9305000305         0.0000000000         0.0000000000        2.4652500153         4.2699382798         0.0000000000        2.4652650832         1.4233214594         4.1486879977   Al    F    2    6Direct     0.000000000         0.500000000         0.000000000     0.500000000         0.000000000         0.500000000     0.177499995         0.250000000         0.750000000     0.822499990         0.750000000         0.250000000     0.677500010         0.322499990         0.250000000     0.322499990         0.677500010         0.750000000     0.250000000         0.177499995         0.250000000     0.750000000         0.822499990         0.750000000  ``` Download--------  AlF3\\_NMR.tgz  ---"}
{"file_name": "LPHON_DISPERSION.md", "content": "LPHON\\_DISPERSION= .TRUE. \\| .FALSE.n| Default: **LPHON\\_DISPERSION** | \\= .FALSE. |  || --- | --- | --- | Description: LPHON\\_DISPERSION requests the calculation of the phonon dispersion along the q\\-point path supplied in file QPOINTS (same format as KPOINTS).  --- After the computation of the force constants using finite differences (IBRION\\=5,6\\) or density\\-functional perturbation theory (IBRION\\=7,8\\) on a supercell it is possible to compute the phonon dispersion for the equivalent primitive cell determined by VASP by setting LPHON\\_DISPERSION\\=.TRUE. | **Mind:** Only available as of VASP 6\\.3\\.2\\. || --- |"}
{"file_name": "ML_ABCAR.md", "content": "This file is used as input (with file name ML\\_AB) and output (ML\\_ABN) within the machine learning force field method. It contains the collection of ab initio data from previous calculations: Bravais matrices, atom positions, energies, forces, and stress tensors. Depending on the mode of operation it is used in the following ways: * **`ML_MODE = train`, starting from scratch:** A complete ML\\_ABN file containing all ab initio data and the list of current local reference configurations is written whenever a learning step is performed (check the line `STATUS` in the log file ML\\_LOGFILE for entries `learning` and `critical`).* **`ML_MODE = train`, continuation run:** Same ML\\_ABN output as above. In addition, upon start\\-up, the user\\-provided ML\\_AB file is read and an initial machine\\-learned force field is generated from the contained data.* **`ML_MODE = select`, reselection of local reference configurations:** Same ML\\_ABN output as for `ML_MODE = train`. The ML\\_AB file is read and the contained structures are fed sequentially to the on\\-the\\-fly training algorithm. The list of local reference configurations in the ML\\_AB file is ignored, however, a dummy section must still be present (see below). | **Tip:** The ML\\_AB file is not required for `ML_MODE = run` (prediction only) because all necessary data (e.g. descriptors of local reference configurations) are already stored in the ML\\_FF file. || --- | An ML\\_ABN output file from `ML_MODE = train, select` can always be reused as input for `ML_MODE = train, select` by just renaming (copying) it to ML\\_AB. Example------- As an example, here is a shortened version of an actual ML\\_AB file:  ``` 1.0 Version**************************************************     The number of configurations-------------------------------------------------- 299**************************************************     The maximum number of atom type-------------------------------------------------- 5**************************************************     The atom types in the data file--------------------------------------------------     Pb I  C     N  H**************************************************     The maximum number of atoms per system-------------------------------------------------- 96**************************************************     The maximum number of atoms per atom type-------------------------------------------------- 48**************************************************     Reference atomic energy (eV)--------------------------------------------------  -72.5297190000000       -35.4081430000000       -2.39269120000000  -4.60003440000000       -1.12020270000000**************************************************     Atomic mass--------------------------------------------------   20.0000000000000        20.0000000000000        12.0110000000000   14.0010000000000        8.00000000000000**************************************************     The numbers of basis sets per atom type--------------------------------------------------       130  1202   128       125   790**************************************************     Basis set for Pb--------------------------------------------------          1      1        100      8          1      3        100      4          1      5          1      6 ... ... ...**************************************************     Basis set for I--------------------------------------------------          1      9          1     10        100     32        100     31          1     13        100     29          1     15          1     16 ... ... ...**************************************************     Basis set for C--------------------------------------------------        100     39        101     40        104     40        101     39        101     38        108     40        101     37 ... ... ...**************************************************     Basis set for N--------------------------------------------------          1     41        100     47          1     43          1     44        100     45          1     46 ... ... ...**************************************************     Basis set for H--------------------------------------------------        101     96        108     96        101     95        101     94        108     95        101     93        101     92 ... ... ...**************************************************     Configuration num.      1==================================================     System name--------------------------------------------------     Optimal==================================================     The number of atom types-------------------------------------------------- 5==================================================     The number of atoms-------------------------------------------------- 96**************************************************     Atom types and atom numbers--------------------------------------------------     Pb      8     I      24     C       8     N       8     H      48==================================================     CTIFOR--------------------------------------------------   7.2153124269575984E-003==================================================     Primitive lattice vectors (ang.)--------------------------------------------------   12.6230002000000       0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000   12.6230002000000       0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000   12.6322002000000==================================================     Atomic positions (ang.)--------------------------------------------------   3.53104385888580        2.84086367297985        2.90622172474177   9.81419124013876        2.65432768009571        3.05638374363947   3.26003769786731        9.08189602171279        2.78238128942769   9.68338433877730        9.01798419847282        3.33422943250601   3.97567522985842        2.30549969401587        9.43194287333753   10.2367187113626        2.60925731212548        9.47119538915201   3.14970369394084        8.58643640964228        9.24921780934012   9.89456550951183        9.28033187172892        9.29623786496524   10.2580847101708        12.3062955711284        3.18366035907868   3.82895321819843        12.3181255490181        2.42031967883849 ... ... ...==================================================     Total energy (eV)--------------------------------------------------  -1844.06244866897==================================================     Forces (eV ang.^-1)--------------------------------------------------  2.660349497586850E-002 -4.547882666592111E-003  0.190783123263071  0.130884508367191       0.299290099652476       1.596358887670635E-002  3.408685056302496E-002 -4.091615555857331E-002  0.178271772476586 -8.681206662816165E-002 -2.646077052932483E-002 -0.627496783708147 -2.387963973365542E-002  0.272206550808848      -0.188554040851596 -0.349175317569579       0.372666466514608       9.810640873955712E-002  0.508292852334109       2.851700722091148E-002 -0.297636066674050 -0.477466544993604      -0.767209034380190       0.537092981997701  1.081052495208487E-002 -0.454162570762754      -2.885905409516716E-002  5.233785861238309E-002 -4.907001101287316E-002  0.357709899123724 ... ... ...==================================================     Stress (kbar)--------------------------------------------------     XX YY ZZ--------------------------------------------------  -12.6559383536223       -8.82753684858342       -13.1791695209263--------------------------------------------------     XY YZ ZX--------------------------------------------------  -1.91691819690402        2.12274173946129       0.103818583636094**************************************************     Configuration num.      2================================================== ... ... ...  ``` General format remarks---------------------- | **Important:** All element\\-dependent quantities must follow the order of the element entries given in the header entry named `The atom types in the data file`. || --- | * All element\\-type\\-dependent information is limited to 3 entries per line. For more than 3 types or multiples of 3, the entries are written over multiple lines.* The order of the entries for the header and also the data is fixed.* The ledger lines cannot be omitted. `*****` and `-----` lines for the header. `*****`, `-----` and `=====` lines for the data. Header specification-------------------- * `1.0 Version`: In the very beginning of the header this entry specifies to the version of the ML\\_AB file. If in the future the contents of the file will be changed or extended the version number will ensure I/O compatibility. If not stated otherwise use `1.0 Version`.* `The number of configurations`: Total number of training structures stored in this ML\\_AB file.* `The maximum number of atom type`: Total number of unique types listed in all structures (e.g. if the file contains some ab initio data for H2O, some data for MgO and some data for NaCl, then the total number of types is 5\\).* `The atom types in the data file`: Listing of all atom types (two characters for each type as in VASP) appearing in all structures. Multiple lines for more than 3 element types. Maximum 3 entries per line.* `The maximum number of atoms per system`: The largest number of atoms within one structure among all training structures.* `The maximum number of atoms per atom type`: The largest number of atoms per element within one structure among all elements within all training structures.* `Reference atomic energy (eV)`: Reference atomic energies used in the calculation for each element type. Multiple lines for more than 3 element types. Maximum 3 entries per line. This entry is only important for `ML_ISCALE_TOTEN = 1`.* `Atomic mass`: Atomic mass of each element type (in u). Multiple lines for more than 3 element types. Maximum 3 entries per line.* `The numbers of basis sets per atom type`: Number of local reference configurations for each type. Multiple lines for more than 3 element types. Maximum 3 entries per line.* `Basis set for X`: List of local reference configurations for each type. This line is followed by a block with two columns. The first column denotes from which training structure the local reference configuration is taken. The second column is the index of the atom in the given training structure that is chosen as a local reference configuration. This whole block (together with the title line) is repeated for each element type in the force field. For `ML_MODE = select` this section is ignored and a new list of local reference configurations will be written to ML\\_ABN. However, upon reading in the ML\\_AB file a dummy line (e.g. only one line with `1 1`) for each type still needs to be present (also set `The numbers of basis sets per atom type` to 1 in this case). | **Warning:** The maximum number of the training structures ML\\_MCONF and the maximum number of the local reference configurations ML\\_MB in the INCAR file have to be set larger than the entries `The number of configurations` and `The numbers of basis sets per atom type` in the ML\\_AB file, respectively. || --- | Training structure data format------------------------------ * `Configuration num. n`: Denotes the beginning of a structure in the training data. Training structures have to be numbered consecutively starting with 1\\.* `System name`: Name of the structure, taken from the POSCAR file which was used to start the `ML_MODE = train` run. Copied from the input ML\\_AB file in case of `ML_MODE = select`. The length of system names is limited to 40 characters.* `The number of atom types`: The number of atom types in the structure. Because the list of types in this structure has to be a subset of all types appearing in the ML\\_AB this number must be smaller or equal to the number given in the header section `The atom types in the data file`.* `The number of atoms`: Number of atoms in the structure.* `Atom types and atom numbers`: Atom types and the number of atoms per type in the structure. Each type is written on a separate line.* `CTIFOR` (*optional*): Value of ML\\_CTIFOR used while sampling this structure. Depending on ML\\_ICRITERIA the value may change between structures. This line is always present if the ML\\_ABN file was created by VASP with `ML_MODE = train`. Then, also continuation and re\\-selection runs with `ML_MODE = train, select` will write out current `CTIFOR` values in ML\\_ABN files. On the other hand, if ML\\_AB files are created from external training data this section may be omitted. In this case `ML_MODE = train, select` runs will also not include `CTIFOR` sections. | **Warning:** Training structures with a value for `CTIFOR` and without must not be combined. Either `CTIFOR` is provided for all structures or none of them. || --- | * `Primitive lattice vectors (ang.)`: Bravais matrix of the structure, one line corresponds to one lattice vector. The unit of length units is Angstrom.* `Atomic positions (ang.)`: Ionic positions in Cartesian coordinates (given in Angstrom). Note that the order of atoms needs to correspond to the atom types list in `Atom types and atom numbers`.* `Total energy (eV)`: Total energy (in eV) of the structure.* `Forces (eV ang.^-1)`: Forces (in eV/Angstrom) for each atom in the structure.* `Stress (kbar)`: 6 entries for the stress tensor (in kb) of the structure. Merging different ML\\_AB files------------------------------ Multiple ML\\_AB files may be merged by hand, keeping the following restrictions and tips in mind: * The training structure data can be simply concatenated, i.e., by just adding more structure sections starting with `Configuration num. n` at the end of the file. However, the structure numbering needs to be updated in such a way that they are enumerated continuously starting from 1\\.* We strongly advise to group structures with the same number of elements and atoms per element in the training data together, otherwise the code will automatically reorder the data, such that those are sticking together. If one relies on the automatic reordering it will not be possible to easily \"diff\" the input ML\\_AB file and its corresponding ML\\_ABN output file.* The header must be adjusted to reflect the combined number of element types, the maximum number of atoms, etc.* The lists of local reference configurations cannot be easily merged (renumbering would be required). Instead, it is recommended to recalculate them using `ML_MODE = select`. However, to start with a valid ML\\_AB file first manually set `The numbers of basis sets per atom type` to 1 for each species. Also, set the block `Basis set for X` with dummy value `1 1` for each species. After running with `ML_MODE = select` the output ML\\_ABN will contain the selected new local reference configurations for the combined training data. | **Tip:** If calculations for `ML_MODE = select` are too time consuming using the default settings it is useful to increase ML\\_MCONF\\_NEW to values around 10\\-16 and set `ML_CDOUB = 4`. This often accelerates the calculations by a factor of 2\\-4\\. || --- |  ---"}
{"file_name": "Bulk_Systems_-_Tutorial.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorialsThe tutorial is made of the following parts: 1. fcc Si2. fcc Si DOS3. fcc Si bandstructure4. cd Si5. cd Si volume relaxation6. cd Si relaxation7. beta\\-tin Si8. fcc Ni9. liquid Si10. graphite TS binding energy11. graphite MBD binding energy12. graphite interlayer distance"}
{"file_name": "Andersen_thermostat.md", "content": "In the approach proposed by Andersen [\\[1]](#cite_note-andersen:jcp:1980-1) the system is thermally coupled to a fictitious heat bath with the desired temperature. The coupling is represented by stochastic collisions that act occasionally on randomly selected particles. In particular the momentum of the *lucky* particle at every collision step is instantaneously chosen at random from the Boltzmann distribution at the selected temperature. The collision probability is defined as an average number of collisions per atom and time\\-step and the collision frequency occurs with the following distribution  P ( t ) \\= \u03bd  e  \u2212 \u03bd t  . {\\\\displaystyle P(t)\\=\\\u e^{\\-\\\u t}.} The exponent of this the distribution (  \u03bd t {\\\\displaystyle \\\u t} ) is controlled by the flag ANDERSEN\\_PROB. Since   t {\\\\displaystyle t}  is the time step in the calculation ANDERSEN\\_PROB has to be scaled if the time step changes. The total number of collisions with the heat\\-bath is written out to the file REPORT for each MD step. A very good implementation of the Andersen thermostat can be found in chapter 6\\.1\\.1 of reference [\\[2]](#cite_note-frenkel:book:1996-2). The Andersen thermostat is selected by setting MDALGO\\=1\\."}
{"file_name": "NUM_WANN.md", "content": "NUM\\_WANN= \\[integer]   Default: **NUM\\_WANN** \\= NBANDSnDescription: Controls the number of Wannier orbitals to be constructed.  --- This tag is used to determine the number of Wannier orbitals to be constructed in the SCDM method \"Category:Wannier functions\"). Since VASP 6\\.2\\.0, NUM\\_WANN also determines the number of Wannier orbitals to be used with wannier90\\.Note that the `num_wann` value written to the `wannier90.win` file is always the value of NUM\\_WANN known by vasp. When using LOCPROJ for Wannierization, it is not necessary to set NUM\\_WANN.In this case, the number of Wannier orbitals is automatically set equal to the number of local functions."}
{"file_name": "XC_functionals.md", "content": "In the Kohn\\-Sham (KS) formulation of density\\-functional theory (DFT)[\\[1]](#cite_note-hohenberg:pr:1964-1)[\\[2]](#cite_note-kohn:pr:1965-2), the total energy is given by  E  t o t  K S \u2212 D F T  \\= \u2212  1 2  \u2211  i  \u222b  \u03c8  i  \u2217  (  r  )  \u2207  2  \u03c8  i  (  r  )  d  3  r \u2212  \u2211  A  \u222b  Z  A  \\|  r  \u2212  R  A  \\|  n (  r  )  d  3  r \\+  1 2  \u222b \u222b  n (  r  ) n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r  d  3  r \u2032  \\+  E  x c  \\+  1 2  \u2211  A \u2260 B  Z  A  Z  B  \\|  R  A  \u2212  R  B  \\| {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}\\=\\-{\\\\frac {1}{2}}\\\\sum \\_{i}\\\\int \\\\psi \\_{i}^{\\*}({\\\\bf {r}})\\\abla ^{2}\\\\psi \\_{i}({\\\\bf {r}})d^{3}r\\-\\\\sum \\_{A}\\\\int {\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}n({\\\\bf {r}})d^{3}r\\+{\\\\frac {1}{2}}\\\\int \\\\int {\\\\frac {n({\\\\bf {r}})n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}rd^{3}r'\\+E\\_{\\\\rm {xc}}\\+{\\\\frac {1}{2}}\\\\sum \\_{A\\\eq B}{\\\\frac {Z\\_{A}Z\\_{B}}{\\\\left\\\\vert {\\\\bf {R}}\\_{A}\\-{\\\\bf {R}}\\_{B}\\\\right\\\\vert }}} where the terms on the right\\-hand side represent the non\\-interacting kinetic energy of the electrons, the electrons\\-nuclei attraction energy, the classical Coulomb electron\\-electron repulsive energy, the exchange\\-correlation energy, and the nuclei\\-nuclei repulsion energy, respectively. The KS orbitals   \u03c8  i {\\\\displaystyle \\\\psi \\_{i}}  and the electronic density   n \\=  \u2211  i  \\|  \u03c8  i  \\|  2 {\\\\displaystyle n\\=\\\\sum \\_{i}\\\\left\\\\vert \\\\psi \\_{i}\\\\right\\\\vert ^{2}}  that are used to evaluate   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  are obtained by solving self\\-consistently the KS equations  (  \u2212  1 2  \u2207  2  \u2212  \u2211  A  Z  A  \\|  r  \u2212  R  A  \\|  \\+ \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r \u2032  \\+  v  x c  (  r  )  )  \u03c8  i  (  r  ) \\=  \u03f5  i  \u03c8  i  (  r  ) . {\\\\displaystyle \\\\left(\\-{\\\\frac {1}{2}}\\\abla ^{2}\\-\\\\sum \\_{A}{\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}\\+\\\\int {\\\\frac {n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}r'\\+v\\_{\\\\rm {xc}}({\\\\bf {r}})\\\\right)\\\\psi \\_{i}({\\\\bf {r}})\\=\\\\epsilon \\_{i}\\\\psi \\_{i}({\\\\bf {r}}).} The only terms in   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  and in the KS equations that are not known exactly are the **exchange\\-correlation energy functional**   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and potential   v  x c  \\= \u03b4  E  x c  /  \u03b4 n {\\\\displaystyle v\\_{\\\\rm {xc}}\\=\\\\delta E\\_{\\\\rm {xc}}/\\\\delta n} . Therefore, the accuracy of the calculated properties depends strongly on the approximations used for   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and  v  x c {\\\\displaystyle v\\_{\\\\rm {xc}}}  . Several hundreds of approximations for the **exchange and correlation** have been proposed[\\[3]](#cite_note-libxc_list-3). They can be classified into families: the local density approximation (LDA), generalized gradient approximation (GGA), meta\\-GGA, and hybrid. There is also the possibility to include van der Waals corrections or an on\\-site Coulomb repulsion using DFT\\+U on top of another functional. More details on the different types of approximations available in VASP and how to use them can be found in the pages and subcategories listed below. How to------ * Semilocal functionals:\t+ LDA and GGA: GGA\t+ Meta\\-GGA: METAGGA* Hybrids: LHFCALC, AEXX, HFSCREEN and list of hybrid functionals* DFT\\+U: LDAU and LDAUTYPE* Atom\\-pairwise and many\\-body methods for van der Waals interactions (selected with the IVDW tag):\t+ Methods from Grimme et al.:\t\t- DFT\\-D2[\\[4]](#cite_note-grimme:jcc:06-4)\t\t- DFT\\-D3[\\[5]](#cite_note-grimme:jcp:10-5)[\\[6]](#cite_note-grimme:jcc:11-6)\t\t- DFT\\-D4[\\[7]](#cite_note-caldeweyher:jcp:2019-7) (available as of VASP.6\\.2 as external package)\t+ Methods from Tkatchenko, Scheffler et al.:\t\t- Tkatchenko\\-Scheffler method[\\[8]](#cite_note-tkatchenko:prl:09-8)\t\t- Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning[\\[9]](#cite_note-bucko:jctc:13-9)[\\[10]](#cite_note-bucko:jcp:14-10)\t\t- Self\\-consistent screening in Tkatchenko\\-Scheffler method[\\[11]](#cite_note-tkatchenko:prl:12-11)\t\t- Many\\-body dispersion energy[\\[11]](#cite_note-tkatchenko:prl:12-11)[\\[12]](#cite_note-ambrosetti:jcp:14-12)\t\t- Many\\-body\\_dispersion\\_energy\\_with\\_fractionally\\_ionic\\_model\\_for\\_polarizability[\\[13]](#cite_note-gould:jctc:2016_a-13)[\\[14]](#cite_note-gould:jctc:2016_b-14)\t\t- Library libMBD of many\\-body dispersion methods[\\[15]](#cite_note-libmbd_1-15)[\\[16]](#cite_note-libmbd_2-16)[\\[17]](#cite_note-hermann:jcp:2023-17)\t+ dDsC dispersion correction[\\[18]](#cite_note-steinmann:jcp:11-18)[\\[19]](#cite_note-steinmann:jctc:11-19)\t+ DFT\\-ulg[\\[20]](#cite_note-kim:jpcl:2012-20)* Nonlocal vdW\\-DF functionals for van der Waals interactions: LUSE\\_VDW and IVDW\\_NL"}
{"file_name": "ICHIBARE.md", "content": "ICHIBARE= 1 \\| 2 \\| 3   Default: **ICHIBARE** \\= 1nDescription: determines the order of the finite difference stencil used to calculate the magnetic susceptibility.  --- ICHIBARE specifies the order of the finite difference stencil used to calculate the magnetic susceptibility (second order derivative in Eq. 47 of Yates *et al.*[\\[1]](#cite_note-yates:prb:07-1)). ICHIBARE may be set to 1, 2, or 3\\. Often the default (ICHIBARE\\=1\\) is sufficient. A higher ICHIBARE results in a substantial increase of the computational load."}
{"file_name": "OFIELD_KAPPA.md", "content": "OFIELD\\_KAPPA= \\[real]nDescription: The tag OFIELD\\_KAPPA sets the strength of the bias potential in the Interface pinning method.   --- The bias potential in the Interface pinning method is written as  U bias  (  R  ) \\=  \u03ba 2  (  Q  6  (  R  ) \u2212 A  )  2 {\\\\displaystyle U\\_{\\\\text{bias}}(\\\\mathbf {R} )\\={\\\\frac {\\\\kappa }{2}}\\\\left(Q\\_{6}(\\\\mathbf {R} )\\-A\\\\right)^{2}}  .The tag OFIELD\\_KAPPA method sets the strength of the bias potential   \u03ba {\\\\displaystyle \\\\kappa } . The unit of   \u03ba {\\\\displaystyle \\\\kappa }  is  eV  /  ( unit  of  Q  )  2 {\\\\displaystyle {\\\\textrm {eV}}/({\\\\textrm {unit}}\\\\,\\\\,{\\\\textrm {of}}\\\\,\\\\,Q)^{2}}  ."}
{"file_name": "NLSPLINE.md", "content": "NLSPLINE= .TRUE. \\| .FALSE.   Default: **NLSPLINE** \\= .FALSE.nDescription: construct the PAW projectors in reciprocal space using spline interpolation so that they are *k*\\-differentiable.  --- For NLSPLINE\\=.TRUE., the PAW projectors in reciprocal space (LREAL\\=.FALSE.) are set up using a spline interpolation so that they are *k* differentiable. This improves the susceptibility contribution to the chemical shifts. It only slightly affects the other contributions to the chemical shifts. It is advised to set NLSPLINE\\=.TRUE. if and only if PAW projectors are applied in reciprocal space and chemical shifts are calculated, i.e., if and only if LREAL\\=.FALSE. and LCHIMAG\\=.TRUE. As this option also gives slightly different total energies, it is advised to use the default NLSPLINE\\=.FALSE. in all other calculations for reasons of compatibility. Real\\-space projectors are *k* differentiable by construction, hence do not require to set NLSPLINE\\=.TRUE."}
{"file_name": "BSE_-_Tutorial.md", "content": "Overview> Dielectric properties of Si using BSE> Improving the dielectric function > Plotting the BSE fatband structure of Si> List of tutorials The Bethe\\-Salpeter equation (BSE) tutorial consists of the following parts: 1. Dielectric properties of Si using BSE2. Improving the dielectric function3. Plotting the BSE fatband structure of Si They can be performed independently, but for people who are new to BSE calculations the order presented above is advisable."}
{"file_name": "LSUBROT.md", "content": "LSUBROT= .FALSE. \\| .TRUE.n| Default: **SUBROT** | \\= .FALSE. |  || --- | --- | --- | Description: This flag can be set for hybrid functionals (HF\\-type calculations). LSUBROT determines whether an optimal rotation matrix between the occupied and unoccupied block is sought, when a direct optimization of the energy functional is performed (i.e. ALGO\\=All \\| Damped). The corresponding algorithm is unpublished. LSUBROT \\=.FALSE. is the standard algorithm, in which the rotation matrix between occupied and unoccupied orbitals is determined essentially using Loewdin perturbation theory, as for instance explained in Ref. [\\[1]](#cite_note-kresse:prb:96-1). For LSUBROT \\=.TRUE. the rotation matrix is instead optimized by performing a few standard SCF steps, in which the orbitals are kept fixed, but rotations between the occupied and unoccupied manifold are allowed. Once satisfactory convergence has been reached, the optimized density matrix (rotation matrix between occupied and unoccupied block) is passed back to the direct optimization routine and a rotation along the suggested direction is performed alongside an update of the orbitals. This generally speeds up calculations for small gap systems as well as metals. However, in rare cases, we have observed instabilities, so be careful when selecting LSUBROT \\=.TRUE.  Although the flag can be set for standard functionals, it is only efficient for hybrid functionals (HF\\-type calculations)."}
{"file_name": "SAXIS.md", "content": "SAXIS= \\[real array]   Default: **SAXIS** \\= (0, 0, 1\\)nDescription: Set the global spin\\-quantization axis w.r.t. Cartesian coordinates.  --- SAXIS specifies the relative orientation of spinor space spanned by the Pauli matrices   {  \u03c3  1 {\\\\displaystyle \\\\{\\\\sigma \\_{1}}  ,  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  ,  \u03c3  3  } {\\\\displaystyle \\\\mathbf {\\\\sigma } \\_{3}\\\\}}  with respect to Cartesian coordinates   {  x ^  ,  y ^  ,  z ^  } {\\\\displaystyle \\\\{{\\\\hat {x}},{\\\\hat {y}},{\\\\hat {z}}\\\\}} . The default is   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}}  .The direction of the spin\\-quantization axis   \u03c3  3 {\\\\displaystyle \\\\sigma \\_{3}}  with respect to Cartesian coordinates is set  ``` SAXIS =   sx sy sz   \u00a0! global spin-quantization axis  ``` such that   \u03c3  3  \\=  s  /  \\|  s  \\| {\\\\displaystyle \\\\sigma \\_{3}\\=\\\\mathbf {s} /\\|\\\\mathbf {s} \\|} , i.e.,   \u03c3  3 {\\\\displaystyle \\\\sigma \\_{3}}  points along   s  \\= (  s  x  ,  s  y  ,  s  z  )  T {\\\\displaystyle \\\\mathbf {s} \\=(s\\_{x},s\\_{y},s\\_{z})^{T}} . The directions of   \u03c3  1 {\\\\displaystyle \\\\sigma \\_{1}}  and  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  are a consequence of rotating   \u03c3  3 {\\\\displaystyle \\\\sigma \\_{3}}  to point along   s {\\\\displaystyle \\\\mathbf {s} }  as described below.  The relative orientation of spinor space with respect to real space becomes important in case spin\\-orbit coupling is included (LSORBIT\\=True). All magnetic moments and spinor\\-like quantities written or read by VASP are given in the basis of the spinor space   {  \u03c3  1 {\\\\displaystyle \\\\{\\\\sigma \\_{1}}  ,  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  ,  \u03c3  3  } {\\\\displaystyle \\\\mathbf {\\\\sigma } \\_{3}\\\\}} . This includes the MAGMOM tag in the INCAR file, the total and local magnetizations in the OUTCAR and PROCAR file, the spinor\\-like orbitals in the WAVECAR file, and the magnetization density in the CHGCAR file.  Coordinate system----------------- [](File_Saxis-angles.html) Fig 1\\. Euler angles   \u03b1 {\\\\displaystyle \\\\alpha }  and  \u03b2 {\\\\displaystyle \\\\beta }  defined by   s  \\= (  s  x  ,  s  y  ,  s  z  )  T {\\\\displaystyle \\\\mathbf {s} \\=(s\\_{x},s\\_{y},s\\_{z})^{T}}  . The default orientation is   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}}  .To set   \u03c3 ^  3  \\= s  /  \\|  s  \\| {\\\\displaystyle {\\\\hat {\\\\sigma }}\\_{3}\\=s/\\|s\\|} , VASP applies two rotations with Euler angles  \u03b1  \\=arctan \u2061 2  (  s  y  s  x  )  \u2208 \\[ \u2212 \u03c0 , \u03c0 ]  \u03b2  \\=arctan \u2061 2  (  s  x  2  \\+  s  y  2  s  z  )  \u2208 \\[ 0 , \u03c0 ] . {\\\\displaystyle {\\\\begin{aligned}\\\\alpha \\&\\=\\\\arctan 2\\\\left({\\\\frac {s\\_{y}}{s\\_{x}}}\\\\right)\\\\in \\[\\-\\\\pi ,\\\\pi ]\\\\\\\\\\\\beta \\&\\=\\\\arctan 2\\\\left({\\\\frac {\\\\sqrt {s\\_{x}^{2}\\+s\\_{y}^{2}}}{s\\_{z}}}\\\\right)\\\\in \\[0,\\\\pi ].\\\\end{aligned}}} Here,   \u03b1 {\\\\displaystyle \\\\alpha }  is the angle between the projection of SAXIS onto the *xy* plane (sx,sy,0\\) and the Cartesian vector   x ^ {\\\\displaystyle {\\\\hat {x}}} , and   \u03b2 {\\\\displaystyle \\\\beta }  is the angle between the vector SAXIS and the Cartesian vector   z ^ {\\\\displaystyle {\\\\hat {z}}} , see Fig. 1\\. Search for \\`Euler angles\\` in the OUTCAR file to see what VASP uses. For the default   s  \\= ( 0 , 0 , 1 ) {\\\\displaystyle \\\\mathbf {s} \\=(0,0,1\\)}  ,  \u03b1 \\= 0 {\\\\displaystyle \\\\alpha \\=0}  and  \u03b2 \\= 0 {\\\\displaystyle \\\\beta \\=0}  . The transformation of a vector   m  \\= (  m  1  ,  m  2  ,  m  3  )  T {\\\\displaystyle \\\\mathbf {m} \\=(m\\_{1},m\\_{2},m\\_{3})^{T}}  given in the basis   {  \u03c3  1 {\\\\displaystyle \\\\{\\\\sigma \\_{1}}  ,  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  ,  \u03c3  3  } {\\\\displaystyle \\\\mathbf {\\\\sigma } \\_{3}\\\\}}  into   m  \u2032  \\= (  m  x  ,  m  y  ,  m  z  )  T {\\\\displaystyle \\\\mathbf {m} '\\=(m\\_{x},m\\_{y},m\\_{z})^{T}}  in Cartesian coordinates and its inverse transformation read  m  \\=  m  1  \u03c3  1  \\+  m  2  \u03c3  2  \\+  m  3  \u03c3  3  m  \u2032  \\=  m  x  x ^  \\+  m  y  y ^  \\+  m  z  z ^  m  \u2032  \\=  R  z  \u03b1  R  y  \u03b2  m  m  \\=  R  y  \u2212 \u03b2  R  z  \u2212 \u03b1  m  \u2032 {\\\\displaystyle {\\\\begin{aligned}\\\\mathbf {m} \\&\\=m\\_{1}\\\\sigma \\_{1}\\+m\\_{2}\\\\sigma \\_{2}\\+m\\_{3}\\\\sigma \\_{3}\\\\\\\\\\\\mathbf {m} '\\&\\=m\\_{x}{\\\\hat {x}}\\+m\\_{y}{\\\\hat {y}}\\+m\\_{z}{\\\\hat {z}}\\\\\\\\\\\\mathbf {m} '\\&\\=R\\_{z}^{\\\\alpha }R\\_{y}^{\\\\beta }\\\\mathbf {m} \\\\\\\\\\\\mathbf {m} \\&\\=R\\_{y}^{\\-\\\\beta }R\\_{z}^{\\-\\\\alpha }\\\\mathbf {m} '\\\\\\\\\\\\end{aligned}}} where the rotation matrices are  R  z  \u03b1  \\=  (  cos \u2061 ( \u03b1 )  \u2212 sin \u2061 ( \u03b1 )  0  sin \u2061 ( \u03b1 )  cos \u2061 ( \u03b1 )  0  0  0  1  )  ,  R  y  \u03b2  \\=  (  cos \u2061 ( \u03b2 )  0  sin \u2061 ( \u03b2 )  0  1  0  \u2212 sin \u2061 ( \u03b2 )  0  cos \u2061 ( \u03b2 )  )  . {\\\\displaystyle R\\_{z}^{\\\\alpha }\\=\\\\left({\\\\begin{matrix}\\\\cos(\\\\alpha )\\&\\-\\\\sin(\\\\alpha )\\&0\\\\\\\\\\\\sin(\\\\alpha )\\&\\\\cos(\\\\alpha )\\&0\\\\\\\\0\\&0\\&1\\\\\\\\\\\\end{matrix}}\\\\right),\\\\quad R\\_{y}^{\\\\beta }\\=\\\\left({\\\\begin{matrix}\\\\cos(\\\\beta )\\&0\\&\\\\sin(\\\\beta )\\\\\\\\0\\&1\\&0\\\\\\\\\\-\\\\sin(\\\\beta )\\&0\\&\\\\cos(\\\\beta )\\\\\\\\\\\\end{matrix}}\\\\right).} | **Mind:** Apply the proper basis transformation when comparing vector\\-like quantities and spinor\\-like quantities. || --- | For instance, when LORBMOM\\=True the orbital angular momentum is written to the OUTCAR file in Cartesian coordinates. Thus, when comparing the orbital angular momentum (vector\\-like quantity) and the magnetization (spinor\\-like quantity), one has to perform a basis transformation on one of the quantities unless the bases agree (default). Example------- * In case the bases have the same orientation, i.e.,   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}}  (default)  m  x  \\=  m  1  ,  m  y  \\=  m  2  ,  m  z  \\=  m  3  . {\\\\displaystyle {\\\\begin{aligned}m\\_{x}\\&\\=\\&m\\_{1},\\\\\\\\m\\_{y}\\&\\=\\&m\\_{2},\\\\\\\\m\\_{z}\\&\\=\\&m\\_{3}.\\\\end{aligned}}} For a single site this implies setting  ```MAGMOM = mx my mz\u00a0! magnetic moment in Cartesian coordinatesSAXIS =  0 0 1  \u00a0! default  ``` [](File_Spinor-space-example-saxis.html) Fig 2\\. Example with   s  \\= ( 1 , 1 , 0  )  T {\\\\displaystyle \\\\mathbf {s} \\=(1,1,0\\)^{T}}  and Euler angles   \u03b1 \\= \u03c0  /  4 {\\\\displaystyle \\\\alpha \\=\\\\pi /4}  and  \u03b2 \\= \u03c0  /  2 {\\\\displaystyle \\\\beta \\=\\\\pi /2}  . * Another good choice is setting   s {\\\\displaystyle \\\\mathbf {s} }  to point along the direction of the on\\-site magnetic moment such that  m  x  \\=  sin \u2061 ( \u03b2 ) cos \u2061 ( \u03b1 ) m  \\= m  s  x  /  s  x  2  \\+  s  y  2  \\+  s  z  2  m  y  \\=  sin \u2061 ( \u03b2 ) sin \u2061 ( \u03b1 ) m  \\= m  s  y  /  s  x  2  \\+  s  y  2  \\+  s  z  2  m  z  \\=  cos \u2061 ( \u03b2 ) m  \\= m  s  z  /  s  x  2  \\+  s  y  2  \\+  s  z  2  , {\\\\displaystyle {\\\\begin{aligned}m\\_{x}\\&\\=\\&\\\\sin(\\\\beta )\\\\cos(\\\\alpha )m\\&\\=m\\\\,s\\_{x}/{\\\\sqrt {s\\_{x}^{2}\\+s\\_{y}^{2}\\+s\\_{z}^{2}}}\\\\\\\\m\\_{y}\\&\\=\\&\\\\sin(\\\\beta )\\\\sin(\\\\alpha )m\\&\\=m\\\\,s\\_{y}/{\\\\sqrt {s\\_{x}^{2}\\+s\\_{y}^{2}\\+s\\_{z}^{2}}}\\\\\\\\m\\_{z}\\&\\=\\&\\\\cos(\\\\beta )m\\&\\=m\\\\,s\\_{z}/{\\\\sqrt {s\\_{x}^{2}\\+s\\_{y}^{2}\\+s\\_{z}^{2}}},\\\\end{aligned}}} where   m {\\\\displaystyle m}  is the total on\\-site magnetic moment.For a single site, this case implies setting  ```MAGMOM = 0 0 m  \u00a0! magnetic moment along sigma3SAXIS =  sx sy sz\u00a0! direction of sigma3  ``` Thus, there are two methods to rotate the initial magnetization in an arbitrary direction: either by changing the initial magnetic moments MAGMOM or by changing SAXIS. Both methods should, in principle, yield exactly the same energy, but for implementation reasons, the second method might be more precise.* In case  ```SAXIS =  1 1 0  \u00a0! alpha=pi/4, beta=pi/2  ``` the spinor space   {  \u03c3  1 {\\\\displaystyle \\\\{\\\\sigma \\_{1}}  ,  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  ,  \u03c3  3  } {\\\\displaystyle \\\\mathbf {\\\\sigma } \\_{3}\\\\}}  will be rotated with respect to real space   {  x ^  ,  y ^  ,  z ^  } {\\\\displaystyle \\\\{{\\\\hat {x}},{\\\\hat {y}},{\\\\hat {z}}\\\\}}  as shown in Fig. 2\\."}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_mMD1.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example a nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl is attempted via a meta dynamics calculation. Input----- ### POSCAR  ```   1.00000000000000     12.0000000000000000    0.0000000000000000    0.0000000000000000      0.0000000000000000   12.0000000000000000    0.0000000000000000      0.0000000000000000    0.0000000000000000   12.0000000000000000C H Cl   1   3   2cart         5.91331371  7.11364924  5.78037960         5.81982231  8.15982106  5.46969017         4.92222130  6.65954232  5.88978969         6.47810398  7.03808479  6.71586385         4.32824726  8.75151396  7.80743202         6.84157897  6.18713289  4.46842049  ``` * The starting POSCAR file for this example can be found under POSCAR.init. It will be needed for the script that runs the job (run.sh).* A sufficiently large cell is chosen to minimize the interactions between neighbouring cells and hence to simulate an isolated molecular reaction. ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=50000                                          # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # metaDynamics with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probabilityHILLS_BIN=50                                       # update the time-dependent bias                                                             # potential every 50 stepsHILLS_H=0.005                                      # height of the GaussianHILLS_W=0.05                                       # width of the Gaussian##############################################################################  ```   * The INCAR file in this example is the same as in the previous example (Nucleophile Substitution CH3Cl \\- Standard MD) with the exception of the metadynamics tags HILLS\\_H and HILLS\\_W.* Metadynamics molecular dynamics is formally exact in the limit of infinitesimally small hills (HILLS\\_H) and infinite update time (HILLS\\_BIN) for the time\\-dependent bias potential, hence the parameter \\[\\[]] should be as small as possible while HILLS\\_BIN should be as large as possible.* A random seed for reproducibility is used in this calculations which is added later by the *run* script.* Meta dynamics is formally exact in the limit of infinitesimally small hills and infinite update times for the time\\-dependent bias potential. Hence the parameter HILLS\\_H should be as small as possible while HILLS\\_BIN should be as large as possible. ### ICONST For this example an ICONST file is used which looks like:  ```R 1 5 0R 1 6 0S 1 -1 5  ``` * This file is the same as in the previous example Nucleophile Substitution CH3Cl \\- Standard MD with the exception that the 5 at the fourth entry in the third row specifies that a bias potential is applied to the special coordinate. Calculation----------- As in the previous example (Nucleophile Substitution CH3Cl \\- Standard MD) the reaction coordinate, the difference between two C\\-Cl distances, is monitored. Expected values for reactant:   \u2248 1  \u00c5 {\\\\displaystyle \\\\approx 1\\\\mathrm {\\\\AA} } , for product:    \u2212 1  \u00c5 {\\\\displaystyle \\~\\-1\\\\mathrm {\\\\AA} } , for transition state:   0  \u00c5 {\\\\displaystyle 0\\\\mathrm {\\\\AA} }  .   ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD. For practical reasons, we split our (pressumably long) meta dynamics calculation into shorter runs of length of 1000 fs for each (NSW\\=1000 and POTIM\\=1\\). At the end of each run, the HILLSPOT file (containing the bias potential generated in the previous run) must be copied to the PENALTYPOT file (the input file with bias potential). Meta dynamics is a fully stochastic simulation, the results can depend on the random numbers used in the calculations. To ensure best reproducibility the calculation is started from the same random seed (*rseed\\=\"RANDOM\\_SEED \\= 311137787 0 0\"*). After each step the last random seed is copied to the INCAR file for the new step. This way reproducability is ensured between each step. The calculation is executed using the \"run\" script:  ```#!/bin/bash runvasp=\"mpirun -np x executable_path\" # ensure that this sequence of MD runs is reproduciblecp POSCAR.init POSCARcp INCAR.init INCARrseed=\"RANDOM_SEED =         311137787                0                0\"echo $rseed >> INCAR  i=1while [ $i -le 50 ]  do   # start vasp  $runvasp   # ensure that this sequence of MD runs is reproducible  rseed=$(grep RANDOM_SEED REPORT |tail -1)  cp INCAR.init INCAR  echo $rseed >> INCAR   # use bias potential generated in previous mMD run  cp HILLSPOT PENALTYPOT   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` ### Expectation The meta dynamics simulation pushes the system against the reaction barrier. The amplitude of oscillation of the collective variable increases (as a larger and larger region of configuration space is visited) and at some point the collective variable switches from a positive value (corresponding to the reactant) to a negative value (corresponding to the product). ### Reality Most likely the collective variable increases to unexpectedly large values (  \\> 3  \u00c5 {\\\\displaystyle \\>3\\\\mathrm {\\\\AA} } ) while the transition region (around   0  \u00c5 {\\\\displaystyle 0\\\\mathrm {\\\\AA} } ) is either not sampled or it is smpled only in the final part of the simulation. In other words, the simulation spent most of its time sampling an uninteresting part of the configuration space related to the dissociation of the vdW complex instead pushing the configuration over the barrier. This is because meta dynamics always seeks for the path of least resistance. In the case of our model system this corresponds to the dissociation of the vdW complex because the barrier this process is much lower than that for the SN2 reaction. To verify this the time evolution of the collective variable is monitored (and written to timeEvol.dat) by calling the command:  ```bash ../timeEv.sh  ``` The time evolution is visualized using the command:  ```gnuplot -e \"set terminal jpeg; set xlabel 'Timestep'; set ylabel 'CV (Ang)'; set style data lines; plot 'timeEvol.dat'\" > timeEvol.jpg  ``` It should look like the following: [](File_TimeEvol_mMD1_CH3Cl.html) We indeed see that the transition region is never sampled and that the meta dynamics simulation takes the path of least resistance, which is the dissociation of the vdW complex.   ### Solution In order to restrict the sampling into the part of configuration space that is relevant for the process of interest (say between   \u2212 2  \u00c5 {\\\\displaystyle \\-2\\\\mathrm {\\\\AA} }  and  2  \u00c5 {\\\\displaystyle 2\\\\mathrm {\\\\AA} } ) we must use some trick which is explained in the next example. Download--------  CH3Cl\\_mMD1\\.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "Combining_MPI_and_OpenMP.md", "content": "VASP can be built to use a combination of OpenMP threading and parallelization over MPI ranks. This is beneficial on some hardware.  When to use MPI \\+ OpenMP------------------------- When is it beneficial to run with multiple OpenMP threads per MPI rank? There are not so many cases, but we can discern at least two: 1. On nodes with many cores, e.g., 64 or more. On such nodes, the memory bandwidth and cache size per core may limit the parallel efficiency of VASP. These problems can be (partly) alleviated by the use of OpenMP.2. When running the OpenACC port of VASP on GPUs. Execution of VASP on GPUs is most efficient when using only a single MPI rank per GPU. Therefore, only a few MPI ranks are running on the CPU in most cases. It is helpful to run with multiple OpenMP threads per MPI rank to leverage the CPU's remaining computational power for those parts of VASP that still run on the CPU side. | **Important:** When running with a single OpenMP thread per MPI rank, there is no appreciable difference between a VASP run with an MPI\\+OpenMP executable and an MPI\\-only one. The inactive OpenMP constructs incur very little overhead. In that sense, no strong argument speaks against building VASP with OpenMP support per default. || --- | Compilation----------- To compile VASP with OpenMP support, add the following to the list of precompiler flags in your `makefile.include` file:  ```CPP_OPTIONS += -D_OPENMP  ``` In addition, you need to add some compiler\\-specific options to the command that invokes your Fortran compiler (and sometimes to the linker as well). For instance, when using an Intel toolchain (ifort \\+ Intel MPI), it is  ```FC = mpiifort -qopenmp  ``` | **Important:** Base your makefile.include file on one of the archetypical /arch/makefile.include.\\*\\_omp files that are provided with your VASP.6\\.X.X release. || --- | To adapt these to the particulars of your system (if necessary) please read the instructions on the installation of VASP.6\\.X.X. | **Mind:** When you compile VASP with OpenMP support and you are **not** using the FFTs from the Intel\\-MKL library, you should compile VASP with fftlib. Otherwise, the costs of (planning) the OpenMP\\-threaded FFTs will become prohibitively large at higher thread counts. || --- | Running multiple OpenMP threads per MPI rank-------------------------------------------- In principle, running VASP on *n* MPI ranks with *m* OpenMP threads per rank is as simple as:   ```export OMP_NUM_THREADS=<m>\u00a0; mpirun -np <n> <your-vasp-executable>  ``` Here, the mpirun part of the command depends on the flavor of MPI one uses and has to be replaced appropriately. Below, we will only discuss the use of OpenMPI and IntelMPI. For proper performance, it is crucial to ensure that the MPI ranks, and the associated OpenMP threads they spawn, are placed optimally onto the *physical* cores of the node(s), and are pinned to these cores.As an example (for a typical Intel Xeon\\-like architecture): Let us assume we plan to run on 2 nodes, each with 16 physical cores. These 16 cores per node are further divided into 2 *packages* (aka *sockets*) of 8 cores each. The cores on a socket share access to a block of memory and in addition, they may access the memory associated with the other package on their node via a so\\-called *crossbar switch*. The latter, however, comes at a (slight) performance penalty. In the aforementioned situation, a possible placement of MPI ranks and OpenMP threads would for instance be the following: place 2 MPI ranks on each package (*i.e.*, 8 MPI ranks in total) and have each MPI rank spawn 4 OpenMP threads on the same package. These OpenMP threads will all have fast access to the memory associated with their package, and will not have to access memory through the crossbar switch. To achieve this we have to tell both the OpenMP runtime library as well as the MPI library what to do. | **Warning:** In the above we purposely mention *physical* cores. When your CPU supports *hyperthreading* (and if this is enabled in the BIOS) there are more *logical* cores than *physical* cores (typically a factor 2\\). As a rule of thumb: makes sure that the total number of MPI ranks \u00d7 OMP\\_NUM\\_THREADS (in the above: *m*\u00d7*n*) does not exceed the total number of **physical cores** (*i.e.*, do not *oversubscribe* the nodes). In general VASP runs do not benefit from oversubscription. || --- | ### For the OpenMP runtime Tell the OpenMP runtime it may spawn 4 threads per MPI rank:  ```export OMP_NUM_THREADS=4 ``` and that it should bind the threads to the physical cores, and put them onto cores that are as close as possible to the core that is running the corresponding MPI rank (and OpenMP master thread):  ```export OMP_PLACES=coresexport OMP_PROC_BIND=close ``` In addition to taking care of thread placement, it is often necessary to increase the size of the private stack of the OpenMP threads (to 256 or even 512 Mbytes), since the default is in many cases too small for VASP to run, and will cause segmentation faults:  ```export OMP_STACKSIZE=512m ``` | **Mind:** The Intel OpenMP\\-runtime library (libiomp5\\.so) offers an alternative set of environment variables to control OpenMP\\-thread placement, stacksize *etc*. || --- | ### Using OpenMPI Now start 8 MPI ranks (`-np 8`), with the following placement specification: 2 ranks/socket, assigning 4 subsequent cores to each rank (`--map-by ppr:2:socket:PE=4`), and bind them to their physical cores (`--bind-to core`):   ```mpirun -np 8 --map-by ppr:2:socket:PE=4 --bind-to core <your-vasp-executable> ``` Or all of the above wrapped into a single command:  ```mpirun -np 8 --map-by ppr:2:socket:PE=4 --bind-to core \\              -x OMP_NUM_THREADS=4 -x OMP_STACKSIZE=512m \\              -x OMP_PLACES=cores -x OMP_PROC_BIND=close \\              --report-bindings <your-vasp-executable>  ``` where the `--report-bindings` is optional but a good idea to use at least once to check whether the rank and thread placement is as intended. In our example, the above will assure that the OpenMP threads each MPI rank spawns reside on the same package/socket, and pins both the MPI ranks as well as the OpenMP threads to specific cores. This is crucial for performance. ### Using IntelMPI Tell MPI to reserve a domain of OMP\\_NUM\\_THREADS cores for each rank  ```export I_MPI_PIN_DOMAIN=omp ``` and pin the MPI ranks to the cores  ```export I_MPI_PIN=yes ``` Then start VASP on 8 MPI ranks  ```mpirun -np 8 <your-vasp-executable> ``` In case one uses Intel MPI, things are fortunately a bit less involved. Distributing 8 MPI\\-ranks over 2 nodes with 16 physical cores each (2 sockets per node) allowing for 4 OpenMP threads per MPI\\-rank is as simple as:  ```mpirun -np 8 -genv I_MPI_PIN=yes -genv I_MPI_PIN_DOMAIN=omp -genv I_MPI_DEBUG=4 ``` Or all of the above wrapped up into a single command:  ``` mpirun -np 8 -genv I_MPI_PIN_DOMAIN=omp -genv I_MPI_PIN=yes -genv OMP_NUM_THREADS=4 -genv OMP_STACKSIZE=512m \\              -genv OMP_PLACES=cores -genv OMP_PROC_BIND=close -genv I_MPI_DEBUG=4 <your-vasp-executable> ``` where the `-genv I_MPI_DEBUG=4` is optional but a good idea to use at least once to check whether the rank and thread placement is as intended. In our example, the above will assure that the OpenMP threads each MPI rank spawns reside on the same package/socket, and pins both the MPI ranks as well as the OpenMP threads to specific cores. This is crucial for performance. MPI versus MPI/OpenMP: the main difference------------------------------------------ By default VASP distributes work and data over the MPI ranks on a per\\-orbital basis (in a round\\-robin fashion): Bloch orbital 1 resides on rank 1, orbital 2 on rank 2\\. and so on.Concurrently, however, the work and data may be further distributed in the sense that not a single, but a group of MPI ranks, is responsible for the optimization (and related FFTs) of a particular orbital.In the pure MPI version of VASP, this is specified by means of the NCORE tag. For instance, to distribute each individual Bloch orbital over 4 MPI ranks, one specifies:  ```NCORE = 4  ``` The main difference between the pure MPI and the hybrid MPI/OpenMP version of VASP is that the latter will not distribute a single Bloch orbital over *multiple MPI ranks* but will distribute the work on a single Bloch orbital over *multiple OpenMP threads*. As such one does not set NCORE\\=4 in the INCAR file but starts VASP with 4 OpenMP\\-threads/MPI\\-rank. | **Warning:** The hybrid MPI/OpenMP version of VASP will internally set NCORE\\=1, regardless of what was specified in the INCAR file, when it detects it has been started on more than one OpenMP thread. || --- | Further reading--------------- * *OpenMP in VASP: Threading and SIMD*, F. Wende, M. Marsman, J. Kim, F. Vasilev, Z. Zhao, and T. Steinke, Int. J. Quantum Chem. 2018;e25851 Credits------- Many thanks to Jeongnim Kim and Fedor Vasilev at Intel, and Florian Wende and Thomas Steinke of the Zuse Institute Berlin (ZIB)!"}
{"file_name": "Vaspwave.md", "content": "The vaspwave.h5 file is the hdf5 counterpart of the WAVECAR and CHGCAR files.This file contains the orbitals in case LWAVEH5\\=.TRUE. is set in the INCAR file and the charge density when LCHARGH5\\=.TRUE. in the INCAR file.Calculations can be restarted from this file in the same manner as they could from the WAVECAR file."}
{"file_name": "LIBMBD_C6AU.md", "content": "LIBMBD\\_C6AU= \\[real array]nDescription: LIBMBD\\_C6AU defines the free\\-atom   C  6 {\\\\displaystyle C\\_{6}}  parameters (  H a r t r e e {\\\\displaystyle \\\\mathrm {Hartree} }    b o h r  6 {\\\\displaystyle \\\\mathrm {bohr} ^{6}} ) used in the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_C6AU allows to set values for the free\\-atom   C  6 {\\\\displaystyle C\\_{6}}  parameters (  H a r t r e e {\\\\displaystyle \\\\mathrm {Hartree} }    b o h r  6 {\\\\displaystyle \\\\mathrm {bohr} ^{6}} ) used in the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3). For each atom listed in the POSCAR file, a value has to be provided. The values are internally passed to the second column of the libMBD input **free\\_values** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "CSVR_PERIOD.md", "content": "CSVR\\_PERIOD= \\[real]   Default: **CSVR\\_PERIOD** \\= 0nDescription: Time scale of the CSVR thermostat in terms of the number of MD steps.   --- CSVR\\_PERIOD sets the time scale (  \u03c4 {\\\\displaystyle \\\\tau } ) of the CSVR thermostat. It is expressed in terms of the number of MD steps and must be interpreted in combination with the time step set by POTIM. Typically, CSVR\\_PERIOD should take the values corresponding to 2\\-2000 fs, whereby the smaller the value, the more aggressive the thermostating. The special setting CSVR\\_PERIOD\\=0 generates the NVE ensemble."}
{"file_name": "TDDFT_calculations.md", "content": "VASP offers a powerful module for performing time\\-dependent density\\-functional theory (TDDFT) or time\\-dependent Hartree\\-Fock (TDHF) calculations by solving the Casida equation . This approach can be used for obtaining the frequency\\-dependent dielectric function with the excitonic effects and can be based on the ground\\-state electronic structure in the DFT, hybrid\\-functional or even *GW* approximations.  Solving Casida equation----------------------- The algorithm for solving the Casida equation can be selected by setting ALGO \\= TDHF. This approach is very similar to BSE but differs in the way the screening of the Coulomb potential is approximated. The TDHF approach uses the exchange\\-correlation kernel   f  x c {\\\\displaystyle f\\_{\\\\rm {xc}}} , whereas BSE requires the   W ( \u03c9 \u2192 0 ) {\\\\displaystyle W(\\\\omega \\\\to 0\\)}  from a preceding *GW*  calculation. Thus, in order to perform a TDHF calculation, one only needs to provide the ground\\-state orbitals (WAVECAR) and the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  (WAVEDER). | **Mind:** Unlike BSE, TDHF calculations do **not** require     W ( \u03c9 \u2192 0 )   {\\\\displaystyle W(\\\\omega \\\\to 0\\)}  W(\\omega \\to 0), i.e., Wxxxx.tmp || --- | In summary, both TDHF and BSE approaches require a preceding ground\\-state calculation, however, the TDHF does not need the preceding *GW* and can be performed with the DFT or hybrid\\-functional orbitals and energies. Time\\-dependent Hartree\\-Fock----------------------------- The TDHF calculations can be performed in two steps:  1. ground\\-state calculation2. optical absorption calculation For example, an optical absorption calculation of bulk Si can be performed using a dielectric\\-dependent hybrid\\-functional described in Refs.[\\[1]](#cite_note-chen2018nonempirical-1)[\\[2]](#cite_note-cui2018doubly-2)[\\[3]](#cite_note-liu2019assessing-3).  ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     \u00a0! or any larger desired valueALGO      = D      \u00a0! Damped algorithm often required for HF type calculations, ALGO = Normal might work as wellLHFCALC   = .TRUE. LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22LOPTICS   = .TRUE. \u00a0! can also be done in an additional intermediate step  ``` In the second step, the dielectric function is evaluated by solving the Casida equation   ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     ALGO      = TDHFIBSE      = 0NBANDSO   = 4      \u00a0! number of occupied bandsNBANDSV   = 8      \u00a0! number of unoccupied bandsLHARTREE  = .TRUE.LADDER    = .TRUE.LFXC      = .TRUE.LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22  ``` THDF calculations can be performed for non\\-spin\\-polarized, spin\\-polarized, and noncollinear cases, as well as the case with spin\\-orbit coupling. There is, however, one caveat. The local exchange\\-correlation kernel is approximated by the density\\-density part only. This makes predictions for spin\\-polarized systems less accurate than for non\\-spin\\-polarized systems. Time\\-dependent DFT calculation------------------------------- The TDDFT calculation using the PBE exchange\\-correlation kernel can be performed by disabling the ladder diagrams LADDER \\= .FALSE., i.e., only the PBE exchange\\-correlation kernel is present in the Hamiltonian.  ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     ALGO      = TDHFIBSE      = 0NBANDSO   = 4      \u00a0! determines how many occupied bands are usedNBANDSV   = 8      \u00a0! determines how many unoccupied (virtual) bands are usedLFXC      = .TRUE.LHARTREE  = .TRUE.LADDER    = .FALSE.  ``` | **Mind:** In TDDFT calculation, where the ladder diagrams are not included (LADDER\\=.FALSE.) or the fraction of exact exchange in the kernel is zero (AEXX\\=0\\), the resulting dielectric function lacks the excitonic effects. || --- | VASP tries to use sensible defaults, but it is highly recommended to check the OUTCAR file and make sure that the right bands are included. The tag OMEGAMAX specifies the maximum excitation energy of included electron\\-hole pairs and the pairs with the one\\-electron energy difference beyond this limit are not included in the Hamiltonian.  The calculated frequency\\-dependent dielectric function, transition energies and oscillator strength values are stored in the vasprun.xml\") file. Calculations beyond Tamm\\-Dancoff approximation----------------------------------------------- Calculations beyond Tamm\\-Dancoff approximation can be performed in the same manner as in the BSE. Calculations at finite wavevectors---------------------------------- Calculations at finite wavevectors can be performed in the same manner as in the BSE."}
{"file_name": "PHON_DOS.md", "content": "PHON\\_DOS= 0 \\| 1 \\| 2n| Default: **PHON\\_DOS** | \\= 0 |  || --- | --- | --- | Description: Select the approach to use when computing the phonon density\\-of\\-states (DOS).  --- The possible values are | PHON\\_DOS | Function || --- | --- || 0 | The phonon DOS computation is not performed. || 1 | A gaussian broadening function with a width specified by PHON\\_SIGMA is used. || 2 | The tetrahedron method is used. | To get a representative density of states the QPOINTS file should specify a regular mesh.When line mode in the QPOINTS file and gaussian smearing (PHON\\_DOS\\=1\\) is used, the phonon density of states will still be computed but the results are not reliable. | **Mind:** Only available as of VASP 6\\.4\\.0\\. || --- |"}
{"file_name": "XAS_theory.md", "content": "X\\-ray absorption near\\-edge spectroscopy (XANES) is a very strong (and experimentally heavily used) method for the characterization of materials.The simulation involves the excitation of a core electron into valence/conduction bands. Since for most semiconductors and insulators the electron stays strongly localized on the atom, the inclusion electron\\-hole interactions in the calculations is absolutely crucial. For this means two methods are mainly used: * Super\\-cell core\\-hole (SCH) method [\\[1]](#cite_note-karsai:prb:2018-1).* Bethe\\-Salpeter equation (BSE) method. Super\\-cell core\\-hole mehod---------------------------- In this method a chosen core electron is removed from the core leaving behind a positive charge. Since one wants simulate the excitation of this electron into energetically higher lying states, one electron is added to valence/conduction bands resembling the final state of the excitation process (this is also referred to final state approximation). With this setup a fully self\\-consistent electronic minimization is carried out. The core hole is perfectly screened by the other electrons in metals so there should no difference between core\\-hole calculations and regular calculations. In semiconductors and insulators this screening is very weak and very strong attraction between the electrons and hole occur which results not only in a lowering of the excited states compared to the valence states but a very strong change of the valence/conduction band structure. Hence the relaxation of the valence/conduction electrons is the main effect in core\\-hole calculations. Fortunately the relaxation of the core states in core\\-hole calculations is negligible. This makes the implementation into a PAW framework smooth, since no on\\-the fly recalculation of PAW potentials is needed in every step of the electronic self\\-consistent cycle.  **Very important** is that a sufficiently large super cell is needed to minimize the interaction of neighboring core holes within periodic boundary conditions. Hence the computational expense within this methods comes mainly from the use of large super cells. Nevertheless this method is usually still computationally cheaper than the BSE method for core electrons.  ### Dielectric function used in the SCH method Since the wave length of the electromagnetic waves in absorption spectroscopy is usually much larger than the characteristic momentum in solids, we start from the transversal expression for the imaginary part of the dielectric function in the long wavelength limit (  q  \\= 0 {\\\\displaystyle \\\\mathbf {q} \\=0} ) which is directly proportional to the absorption spectrum  \u03f5  \u03b1 \u03b2  ( 2 )  ( \u03c9 ,  q  \\= 0 ) \\=  4  \u03c0  2  e  2  \u210f  4  \u03a9  \u03c9  2  m  e  2  \u2211  c , v ,  k  2  w  k  \u03b4 (  \u03b5  c  k  \u2212  \u03b5  v  k  \u2212 \u03c9 ) \u00d7  M  \u03b1  v \u2192 c  M  \u03b2  v \u2192 c  \u2217 {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}(\\\\omega ,\\\\mathbf {q} \\=0\\)\\={\\\\frac {4\\\\pi ^{2}e^{2}\\\\hbar ^{4}}{\\\\Omega \\\\omega ^{2}m\\_{e}^{2}}}\\\\sum \\\\limits \\_{c,v,\\\\mathbf {k} }2w\\_{\\\\mathbf {k} }\\\\delta (\\\\varepsilon \\_{c\\\\mathbf {k} }\\-\\\\varepsilon \\_{v\\\\mathbf {k} }\\-\\\\omega )\\\\times M\\_{\\\\alpha }^{v\\\\rightarrow c}{M\\_{\\\\beta }^{v\\\\rightarrow c}}^{\\*}} where   M {\\\\displaystyle M}  and  \u03b5 {\\\\displaystyle \\\\varepsilon }  denote momentum matrix elements and orbital energies.Here we consider excitations only between valence (  v {\\\\displaystyle v} ) and conduction (  c {\\\\displaystyle c} ) bands. The components of the dielectric tensor are indexed by the Cartesian indices   \u03b1 {\\\\displaystyle \\\\alpha }  and  \u03b2 {\\\\displaystyle \\\\beta }  .  \u03a9 {\\\\displaystyle \\\\Omega }  ,  e {\\\\displaystyle e}  and  m  e {\\\\displaystyle m\\_{e}}  denote the unit cell volume, electron charge and mass of the electron, respectively. In the PAW method the all\\-electron orbitals   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n{\\\\mathbf {k}}}\\\\rangle }  are given by a linear transformation of the pseudo orbitals   \\|  \u03c8 \\~  n  k  \u27e9 {\\\\displaystyle \\|{\\\\tilde {\\\\psi }}\\_{n{\\\\mathbf {k}}}\\\\rangle }  :  \\|  \u03c8  n  k  \u27e9 \\=  \\|  \u03c8 \\~  n  k  \u27e9 \\+  \u2211  i  (  \\|  \u03d5  i  \u27e9 \u2212  \\|  \u03d5 \\~  i  \u27e9 ) \u27e8  p \\~  i  \\|  \u03c8 \\~  n  k  \u27e9 . {\\\\displaystyle \\|\\\\psi \\_{n{\\\\mathbf {k}}}\\\\rangle \\=\\|{\\\\tilde {\\\\psi }}\\_{n{\\\\mathbf {k}}}\\\\rangle \\+\\\\sum \\\\limits \\_{i}(\\|\\\\phi \\_{i}\\\\rangle \\-\\|{\\\\tilde {\\\\phi }}\\_{i}\\\\rangle )\\\\langle {\\\\tilde {p}}\\_{i}\\|{\\\\tilde {\\\\psi }}\\_{n{\\\\mathbf {k}}}\\\\rangle .} The pseudo orbitals depend on the band index   n {\\\\displaystyle n}  and crystal momentum   k {\\\\displaystyle {\\\\mathbf {k}}}  .  \\|  \u03d5  i  \u27e9 {\\\\displaystyle \\|\\\\phi \\_{i}\\\\rangle }  ,  \\|  \u03d5 \\~  i  \u27e9 {\\\\displaystyle \\|{\\\\tilde {\\\\phi }}\\_{i}\\\\rangle }  and  \\|  p \\~  i  \u27e9 {\\\\displaystyle \\|{\\\\tilde {p}}\\_{i}\\\\rangle }  are all\\-electron partial waves, pseudo partial wavesand the projectors, respectively.The index   i {\\\\displaystyle i}  is a shorthand for the atomic site and other indices enumerating these quantitiesat each site (such as angular and magnetic quantum numbers). In the PAW formalism, the matrix elements are given by  M  \u03b1  v \u2192 c  \\= \u27e8  \u03c8  c  k  \\|  i  \u2207  \u03b1  \u2212  k  \u03b1  \\|  \u03c8  v  k  \u27e9 \\= \u27e8  \u03c8 \\~  c  k  \\|  i  \u2207  \u03b1  \u2212  k  \u03b1  \\|  \u03c8 \\~  v  k  \u27e9 \\+  \u2211  i j  \u27e8  \u03c8 \\~  c  k  \\|  p \\~  i  \u27e9 \u27e8  p \\~  j  \\|  \u03c8 \\~  v  k  \u27e9 i  (  \u27e8  \u03d5  i  \\|  \u2207  \u03b1  \\|  \u03d5  j  \u27e9 \u2212 \u27e8  \u03d5 \\~  i  \\|  \u2207  \u03b1  \\|  \u03d5 \\~  j  \u27e9  )  . {\\\\displaystyle M\\_{\\\\alpha }^{v\\\\rightarrow c}\\=\\\\langle \\\\psi \\_{c\\\\mathbf {k} }\\|i\\\abla \\_{\\\\alpha }\\-\\\\mathbf {k} \\_{\\\\alpha }\\|\\\\psi \\_{v\\\\mathbf {k} }\\\\rangle \\=\\\\langle {\\\\tilde {\\\\psi }}\\_{c\\\\mathbf {k} }\\|i\\\abla \\_{\\\\alpha }\\-\\\\mathbf {k} \\_{\\\\alpha }\\|{\\\\tilde {\\\\psi }}\\_{v\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\\\limits \\_{ij}\\\\langle {\\\\tilde {\\\\psi }}\\_{c\\\\mathbf {k} }\\|{\\\\tilde {p}}\\_{i}\\\\rangle \\\\langle {\\\\tilde {p}}\\_{j}\\|{\\\\tilde {\\\\psi }}\\_{v\\\\mathbf {k} }\\\\rangle i\\\\left(\\\\langle \\\\phi \\_{i}\\|\\\abla \\_{\\\\alpha }\\|\\\\phi \\_{j}\\\\rangle \\-\\\\langle {\\\\tilde {\\\\phi }}\\_{i}\\|\\\abla \\_{\\\\alpha }\\|{\\\\tilde {\\\\phi }}\\_{j}\\\\rangle \\\\right).} where the one\\-center terms are calculated within the PAW sphere for each atom.  Since in X\\-ray absorption spectroscopy, one only considers one core hole at a single site,we can from now on restrict the equations to a single site. The index   i {\\\\displaystyle i}  thenonly enumerates the main quantum number, the angular and the magnetic quantum numbers.As usual in the PAW method, using the completeness relation,   \u2211  i  \\|  p \\~  i  \u27e9 \u27e8  \u03d5 \\~  i  \\|  \\= 1 {\\\\displaystyle \\\\sum \\_{i}\\|{\\\\tilde {p}}\\_{i}\\\\rangle \\\\langle {\\\\tilde {\\\\phi }}\\_{i}\\|\\=1} , the first and third term in the previous equation cancel each other leading to the following simplified matrix elements  M  \u03b1  c o r e  \u2192 c  k  \\=  \u2211  i  \u27e8  \u03c8 \\~  c  k  \\|  p \\~  i  \u27e9 \u27e8  \u03d5  i  \\|  \u2207  \u03b1  \\|  \u03d5  c o r e  \u27e9 . {\\\\displaystyle M\\_{\\\\alpha }^{\\\\mathrm {core} \\\\rightarrow c\\\\mathbf {k} }\\=\\\\sum \\\\limits \\_{i}\\\\langle {\\\\tilde {\\\\psi }}\\_{c\\\\mathbf {k} }\\|{\\\\tilde {p}}\\_{i}\\\\rangle \\\\langle \\\\phi \\_{i}\\|\\\abla \\_{\\\\alpha }\\|\\\\phi \\_{\\\\mathrm {core} }\\\\rangle .} Also the summation over bands can be limited to the conduction bands   c {\\\\displaystyle c}  \u03f5  \u03b1 \u03b2  ( 2 )  ( \u03c9 ) \\=  4  \u03c0  2  e  2  \u210f  4  \u03a9  \u03c9  2  m  e  2  \u2211  c ,  k  2  w  k  \u03b4 (  \u03b5  c  k  \u2212  \u03b5  c o r e  \u2212 \u03c9 ) \u00d7  M  \u03b1  c o r e  \u2192 c  k  M  \u03b2  c o r e  \u2192 c  k  \u2217  . {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}(\\\\omega )\\={\\\\frac {4\\\\pi ^{2}e^{2}\\\\hbar ^{4}}{\\\\Omega \\\\omega ^{2}m\\_{e}^{2}}}\\\\sum \\\\limits \\_{c,\\\\mathbf {k} }2w\\_{\\\\mathbf {k} }\\\\delta (\\\\varepsilon \\_{c\\\\mathbf {k} }\\-\\\\varepsilon \\_{\\\\mathrm {core} }\\-\\\\omega )\\\\times M\\_{\\\\alpha }^{\\\\mathrm {core} \\\\rightarrow c\\\\mathbf {k} }{M\\_{\\\\beta }^{\\\\mathrm {core} \\\\rightarrow c\\\\mathbf {k} }}^{\\*}.}"}
{"file_name": "FBIAS_A.md", "content": "FBIAS\\_A= \\[real (array)]nDescription: Defines the step height for the bias potential in   e V {\\\\displaystyle eV}  .  --- FBIAS\\_A defines the height of the step (  A  \u03bc {\\\\displaystyle A\\_{\\\\mu }} ) in the Fermi\\-like step\\-shaped bias potential of the following form:  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  4  ) \\=  \u2211  \u03bc \\= 1  M  4  A  \u03bc  1 \\+  exp  \\[  \u2212  D  \u03bc  (  \u03be ( q )  \u03be  0 \u03bc  \u2212 1 )  ]  , {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{4}})\\=\\\\sum \\_{\\\\mu \\=1}^{M\\_{4}}{\\\\frac {A\\_{\\\\mu }}{1\\+{\\\\text{exp}}\\\\left\\[\\-D\\_{\\\\mu }({\\\\frac {\\\\xi (q)}{\\\\xi \\_{0\\\\mu }}}\\-1\\)\\\\right]}},\\\\;} where the sum runs over all (  M  4 {\\\\displaystyle M\\_{4}} ) coordinates the potential acts upon, which are defined in the ICONST file by setting the `status` to 4\\.The units of   A  \u03bc {\\\\displaystyle A\\_{\\\\mu }}  are  e V {\\\\displaystyle eV}  .The number of items defined via FBIAS\\_A must be equal to   M  4 {\\\\displaystyle M\\_{4}} , otherwise the calculation terminates with an error message."}
{"file_name": "Input_and_Output_-_Tutorial.md", "content": "Overview> Input> Preparing a Super Cell>Output> List of tutorials The tutorial is made of the following parts: 1. Input2. Preparing a Super Cell3. Output"}
{"file_name": "LVDW.md", "content": "IVDW= 0 \\| 1 \\| 10 \\| 11 \\| 12 \\| 13 \\| 14 \\| 2 \\| 20 \\| 21 \\| 202 \\| 263 \\| 3 \\| 4   Default: **IVDW** \\= 0 (no correction)nDescription: IVDW specifies a vdW (dispersion) correction.  --- For fundamental reasons, the semilocal and hybrid exchange\\-correlation functionals are unable to describe properly vdW interactions resulting from dynamical correlations between fluctuating charge distributions (called London dispersion forces). An approximate way to work around this problem and to get more reliable results for vdW systems is to add a dispersion correction term,  {\\\\displaystyle E\\_{\\\\mathrm {disp} }} , to the conventional KS\\-DFT energy   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\mathrm {KS\\-DFT} }}  :  E  t o t  K S \u2212 D F T \u2212 d i s p  \\=  E  t o t  K S \u2212 D F T  \\+  . {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\mathrm {KS\\-DFT\\-disp} }\\=E\\_{\\\\rm {tot}}^{\\\\mathrm {KS\\-DFT} }\\+E\\_{\\\\mathrm {disp} }.} {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  can be calculated using one of the available approximate methods listed below. * IVDW\\=0\u00a0: no dispersion correction (default)* IVDW\\=1\\|10\u00a0: DFT\\-D2 method of Grimme[\\[1]](#cite_note-grimme:jcc:06-1) (available as of VASP.5\\.2\\.11\\)* IVDW\\=11\u00a0: DFT\\-D3 method of Grimme with zero\\-damping function[\\[2]](#cite_note-grimme:jcp:10-2) (available as of VASP.5\\.3\\.4\\)* IVDW\\=12\u00a0: DFT\\-D3 method with Becke\\-Johnson damping function[\\[3]](#cite_note-grimme:jcc:11-3) (available as of VASP.5\\.3\\.4\\)* IVDW\\=13\u00a0: DFT\\-D4 method[\\[4]](#cite_note-caldeweyher:jcp:2019-4) (available as of VASP.6\\.2 as external package)* IVDW\\=14\u00a0: One of the methods available in the Library libMBD of many\\-body dispersion methods[\\[5]](#cite_note-libmbd_1-5)[\\[6]](#cite_note-libmbd_2-6)[\\[7]](#cite_note-hermann:jcp:2023-7) (available as of VASP.6\\.4\\.3 as external package)* IVDW\\=2\\|20\u00a0: Tkatchenko\\-Scheffler method[\\[8]](#cite_note-tkatchenko:prl:09-8) (available as of VASP.5\\.3\\.3\\)* IVDW\\=21\u00a0: Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning[\\[9]](#cite_note-bucko:jctc:13-9)[\\[10]](#cite_note-bucko:jcp:14-10) (available as of VASP.5\\.3\\.5\\)* IVDW\\=202\u00a0: Many\\-body dispersion energy method (MBD@rSC)[\\[11]](#cite_note-tkatchenko:prl:12-11)[\\[12]](#cite_note-ambrosetti:jcp:14-12) (available as of VASP.5\\.4\\.1\\)* IVDW\\=263\u00a0: Many\\-body dispersion energy with fractionally ionic model for polarizability method (MBD@rSC/FI)[\\[13]](#cite_note-gould:jctc:2016_a-13)[\\[14]](#cite_note-gould:jctc:2016_b-14) (available as of VASP.6\\.1\\.0\\)* IVDW\\=3\u00a0: DFT\\-ulg[\\[15]](#cite_note-kim:jpcl:2012-15) method (available as of VASP.5\\.3\\.5\\)* IVDW\\=4\u00a0: dDsC dispersion correction[\\[16]](#cite_note-steinmann:jcp:11-16)[\\[17]](#cite_note-steinmann:jctc:11-17) method (available as of VASP.5\\.4\\.1\\) With all methods listed above, a dispersion correction is added to the total energy, potential, interatomic forces and stress tensor, such that lattice relaxations, molecular dynamics, and vibrational analysis (via finite differences) can be performed. Note, however, that these correction schemes are currently not available for calculations based on density functional perturbation theory. **N.B.**: The parameter LVDW used in previous versions of VASP (5\\.2\\.11 and later) to activate the DFT\\-D2 method is now obsolete. If LVDW\\=*.TRUE.* is defined, IVDW is automatically set to 1 (unless IVDW is specified in INCAR)."}
{"file_name": "LAECHG.md", "content": "LAECHG= .TRUE. \\| .FALSE.   Default: **LAECHG** \\= .FALSE.nDescription: when LAECHG\\=.TRUE. the *all\\-electron* charge density will be reconstructed explicitly and written to files.  --- If LAECHG\\=.TRUE. is set VASP will reconstruct the *all\\-electron* charge density on the so\\-called \"fine\" FFT\\-grid.This \"fine\" FFT\\-grid consists of NGXF\u00d7NGYF\u00d7NGZF points in real space (*i.e.*, the grid that is used to represent the augmented pseudo charge densities of the USPP and PAW methods). In fact, for LAECHG\\=.TRUE., VASP will reconstruct three distinct *all\\-electron* densities: 1. the core density.2. the proto\\-atomic valence density (overlapping atomic charge densities).3. the self\\-consistent valence density. These are written to the files AECCAR0\"), AECCAR1\"), and AECCAR2\"), respectively.The first two of these files are written at the start of the run, whereas the last is written at the end after self\\-consistency has been reached. **N.B.:** In the language of the PAW method an \"all\\-electron\" density does **not** refer to the *density of all electrons*, instead it denotes a density that includes all the nodal features near the nucleus associated with the *true* (as opposed to the *pseudized*) one\\-electron orbitals.Within the PAW method, the *all\\-electron* density arising from the one\\-electron pseudo orbitals   {  \u03c8 \\~  n  k  } {\\\\displaystyle \\\\{{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\}}  is given by:  n (  r  ) \\=  \u2211  n  k  f  n  k  \u27e8  \u03c8 \\~  n  k  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  n  k  \u27e9 \\+  \u2211  \u03b1 , \u03b2  (  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) )  \u2211  n  k  f  n  k  \u27e8  \u03c8 \\~  n  k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  n  k  \u27e9 {\\\\displaystyle n(\\\\mathbf {r} )\\=\\\\sum \\_{n{\\\\mathbf {k} }}f\\_{n{\\\\mathbf {k} }}\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\+\\\\sum \\_{\\\\alpha ,\\\\beta }(\\\\phi \\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} )\\\\phi \\_{\\\\beta }(\\\\mathbf {r} )\\-{\\\\widetilde {\\\\phi }}\\_{\\\\alpha }^{\\\\ast }(\\\\mathbf {r} ){\\\\widetilde {\\\\phi }}\\_{\\\\beta }(\\\\mathbf {r} ))\\\\sum \\_{n{\\\\mathbf {k} }}f\\_{n{\\\\mathbf {k} }}\\\\langle {\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle } Normally one does not attempt to reconstruct *all\\-electron* densities explicitly since the second term on the right\\-hand side varies rapidly near the nuclei and is too costly to expand in\\-plane waves (see the bit about augmentation and compensation charges). For LAECHG\\=.TRUE., however, this reconstruction is exactly the thing that is done."}
{"file_name": "TITEL.md", "content": "TITEL= \\[string]nDefinition: The TITEL[\\[1]](#cite_note-1) tag specifies the title of a specific POTCAR file. It is also the first line of any POTCAR file. It is not possible nor necessary to set this tag in the INCAR file.  --- The POTCAR tag TITEL is a string composed of: * the type of pseudopotential (either PAW for the projector\\-augmented\\-wave formalism or US for ultrasoft pseudopotentials \"Available pseudopotentials\"),* information about the exchange\\-correlation functional (GGA for PW91, PBE for PBE, missing for LDA),* the element symbol,* a suffix specifying the type of potential.* the date of the pseudopotential creation. In very early pseudopotentials releases, not all of this information is necessarily present. Examples-------- * TITEL \\= `PAW Ti_sv 26Sep2005` (Ti potential with the semicore *s* and *p* states added to the valence from the potpaw\\_LDA.64 potential set.* TITEL \\= `PAW_PBE Ti_sv_GW 05Dec2013` (Ti potential for GW calculations with the semicore *s* and *p* states added to the valence from the potpaw\\_PBE.64 potential set* TITEL \\= `PAW_GGA Ti_pv 07Sep2000` (Ti potential with the semicore *p* states added to the valence from the PW91 (2010\\) potential set.* TITEL \\= `US Ti` (Ti potential with the semicore *p* states added to the valence from the PW91 USPP (2002\\) potential set \"Available pseudopotentials\"). For this very old pseudopotential, no information on functional, valency, or creation date is available."}
{"file_name": "LDAUPRINT.md", "content": "LDAUPRINT= 0 \\| 1   Default: **LDAUPRINT** \\= 0nDescription: LDAUPRINT controls the verbosity of a DFT\\+U calculation.  --- * LDAUPRINT\\=0: No onsite occupancy matrix is written to the OUTCAR file.* LDAUPRINT\\=1: The spin up and spin down onsite occupancy matrices of the atoms types to which a   U {\\\\displaystyle U}  is applied are written to the OUTCAR file at each iteration (below \"onsite density matrix\"). The eigenvalues and eigenvectors of the total (spin up \\+ spin down) onsite matrix is also written (below \"occupancies and eigenvectors\")."}
{"file_name": "ACFDT__Correlation_energy_in_the_Random_Phase_Approximation.md", "content": "ACFDT stands for the adiabatic connection fluctuation dissipation theorem and is an alternative way to derive the energy expression for the correlation energy in the random phase approximation. In the following the diagrammatic description is presented. For the ACFDT formulation the reader is referred to the literature.[\\[1]](#cite_note-harl:2008-1) Diagrammatic approach to the correlation energy----------------------------------------------- The correlation energy   E  c {\\\\displaystyle E\\_{c}}  is defined as the missing piece of the Hartree\\-Fock energy   E  x {\\\\displaystyle E\\_{x}}  to the total energy, that is   E  t o t  \\=  E  x  \\+  E  c {\\\\displaystyle E\\_{tot}\\=E\\_{x}\\+E\\_{c}} . The exact form of   E  c {\\\\displaystyle E\\_{c}}  is unknown and can be calculated only approximately for a realistic system. The Random Phase Approximation (RPA) is such an approximation that provides access to   E  c {\\\\displaystyle E\\_{c}} . The RPA was first studied by Bohm and Pines for the homogeneous electron gas and was later recognized by Gell\\-Mann and Brueckner as an approximation of   E  c {\\\\displaystyle E\\_{c}}  that can be expressed in the same language as Feynman used a few years earlier to describe the positron.[\\[2]](#cite_note-bohm:pr:82-2)[\\[3]](#cite_note-gell-mann:pr:106-3)[\\[4]](#cite_note-feynman:pr:76-4) Feynman's diagrammatic approach is based on quantum field theory (QFT), which in turn is based on the Gell\\-Mann and Low theorem. This theorem states that the eigenstate of an interacting Hamiltonian can be expressed in terms of the eigenstates of the non\\-interacting one.[\\[5]](#cite_note-gell-mann:pr:84-5) For this reason, each diagrammatic calculation, like the RPA or GW, requires the solution of the non\\-interacting Hamiltonian   H  0 {\\\\displaystyle H\\_{0}}  of the system, like for instance the Hartree\\-Fock energies and orbitals or the solutions of the Kohn\\-Sham Hamiltonian   \u03f5  n  k  ,  \u03d5  n  k {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}},\\\\phi \\_{n{\\\\bf {k}}}}  . QFT is commonly formulated in the Dirac (also known as interaction) picture, where dynamics described by the interaction part   V ^ {\\\\displaystyle {\\\\hat {V}}}  of the fully interacting Hamiltonian   H ^  \\=  H ^  0  \\+  V ^ {\\\\displaystyle {\\\\hat {H}}\\={\\\\hat {H}}\\_{0}\\+{\\\\hat {V}}}  are singled out via time\\-dependent operators like  V ^  ( t ) \\=  e  i  H ^  0  t  V ^  e  \u2212 i  H ^  0  t {\\\\displaystyle {\\\\hat {V}}(t)\\=e^{i{\\\\hat {H}}\\_{0}t}{\\\\hat {V}}e^{\\-i{\\\\hat {H}}\\_{0}t}} . These operators act on states like the non\\-interacting groundstate of the system   \\|  \u03a8  0  \u27e9 {\\\\displaystyle \\|\\\\Psi \\_{0}\\\\rangle }  causing fluctuations at a specific point in time. The main idea of QFT is to understand observations, which can be measured by an observer, as a collective phenomenon of all possible fluctuations.[\\[6]](#cite_note-mattuck:2012-6) Thereby, fluctuations are understood as the creation of virtual electrons (and holes) that interact with each other and are annihilated after some time. Formally this is achieved by introducing creation   \u03c8 ^  \u2020  (  r  , t ) {\\\\displaystyle {\\\\hat {\\\\psi }}^{\\\\dagger }({\\\\bf {r}},t)}  and annihilation operators   \u03c8 ^  (  r  , t ) {\\\\displaystyle {\\\\hat {\\\\psi }}({\\\\bf {r}},t)}  that satisfy following relations  \u03c8 ^  (  r  , t )  \\|  \u03a8  0  \u27e9 \\= 0 \\= \u27e8  \u03a8  0  \\|  \u03c8 ^  (  r  , t ) {\\\\displaystyle {\\\\hat {\\\\psi }}({\\\\bf {r}},t)\\|\\\\Psi \\_{0}\\\\rangle \\=0\\=\\\\langle \\\\Psi \\_{0}\\|{\\\\hat {\\\\psi }}({\\\\bf {r}},t)}  { \u03c8 (  r  , t ) ,  \u03c8  \u2020  (  r  , t ) } \\=  \u03c8  \u2020  (  r  , t )  \u03c8  \u2020  (  r  , t ) \\+  \u03c8  \u2020  (  r  , t ) , \u03c8 (  r  , t ) \\= i \u03b4 (  r  \u2212  r  \u2032  ) {\\\\displaystyle \\\\lbrace \\\\psi ({\\\\bf {r}},t),\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\\\rbrace \\=\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\+\\\\psi ^{\\\\dagger }({\\\\bf {r}},t),\\\\psi ({\\\\bf {r}},t)\\=i\\\\delta ({\\\\bf {r}}\\-{\\\\bf {r}}')}  {  \u03c8  \u2020  (  r  , t ) ,  \u03c8  \u2020  (  r  , t ) } \\= 0 \\= { \u03c8 (  r  , t ) , \u03c8 (  r  , t ) } . {\\\\displaystyle \\\\lbrace \\\\psi ^{\\\\dagger }({\\\\bf {r}},t),\\\\psi ^{\\\\dagger }({\\\\bf {r}},t)\\\\rbrace \\=0\\=\\\\lbrace \\\\psi ({\\\\bf {r}},t),\\\\psi ({\\\\bf {r}},t)\\\\rbrace .} The first relation defines the non\\-interacting groundstate   \\|  \u03a8  0  \u27e9 {\\\\displaystyle \\|\\\\Psi \\_{0}\\\\rangle }  as the Fermi vacuum (the groundstate in the absence of any fluctuations), while the second and third anti\\-commutator relations are a consequence of the Pauli principle. In fact, all operators that describe measurable quantities of a system of interacting electrons can be represented in terms of   \u03c8  \u2020  (  r  , t ) {\\\\displaystyle \\\\psi ^{\\\\dagger }({\\\\bf {r}},t)}  and  \u03c8 (  r  , t ) {\\\\displaystyle \\\\psi ({\\\\bf {r}},t)}  alone; additional objects are not necessary. However, the time\\-ordering operator  T ^  A ^  ( t )  B ^  (  t \u2032  ) \\= \u0398 ( t \u2212  t \u2032  )  A ^  ( t )  B ^  (  t \u2032  ) \u2212 \u0398 (  t \u2032  \u2212 t )  B ^  (  t \u2032  )  A ^  ( t ) , {\\\\displaystyle {\\\\hat {T}}{\\\\hat {A}}(t){\\\\hat {B}}(t')\\=\\\\Theta (t\\-t'){\\\\hat {A}}(t){\\\\hat {B}}(t')\\-\\\\Theta (t'\\-t){\\\\hat {B}}(t'){\\\\hat {A}}(t),} where   \u0398 ( t ) {\\\\displaystyle \\\\Theta (t)}  is the unit step function, and the time\\-evolution operator  S ^  ( t ,  t  0  ) \\=  T ^  e  \u2212 i  \u222b  t  0  t  V ^  (  t \u2032  )  d  t \u2032 {\\\\displaystyle {\\\\hat {S}}(t,t\\_{0})\\={\\\\hat {T}}e^{\\-i\\\\int \\_{t\\_{0}}^{t}{\\\\hat {V}}(t'){\\\\rm {d}}t'}} are helpful quantities, since they allow to formulate the Gell\\-Mann and Low theorem as follows.  ### Gell\\-Mann and Low theorem Using adiabatic coupling of the interaction   V ^  ( t ) \u2192  V ^  \u03b7  ( t ) \\=  e  \u2212 \u03b7  \\|  t  \\|  V ^ {\\\\displaystyle {\\\\hat {V}}(t)\\\\to {\\\\hat {V}}\\_{\\\\eta }(t)\\=e^{\\-\\\\eta \\|t\\|}{\\\\hat {V}}} , Gell\\-Mann and Low proved that the vectors  \\|  \u03a9  \u03bd  \u27e9  \u27e8  \u03a9  \u03bd  \\|  \u03a8  \u03bd  \u27e9  \\=  lim  \u03b7 \u2192 0  S ^  \u03b7  ( 0 , \u2212 \u221e )  \\|  \u03a8  \u03bd  \u27e9  \u27e8  \u03a9  \u03bd  \\|  \u03a8  \u03bd  \u27e9 {\\\\displaystyle {\\\\frac {\\|\\\\Omega \\_{\\\u }\\\\rangle }{\\\\langle \\\\Omega \\_{\\\u }\\|\\\\Psi \\_{\\\u }\\\\rangle }}\\=\\\\lim \\_{\\\\eta \\\\to 0}{\\\\frac {{\\\\hat {S}}\\_{\\\\eta }(0,\\-\\\\infty )\\|\\\\Psi \\_{\\\u }\\\\rangle }{\\\\langle \\\\Omega \\_{\\\u }\\|\\\\Psi \\_{\\\u }\\\\rangle }}} are the eigenstates of the interacting Hamiltonian.[\\[5]](#cite_note-gell-mann:pr:84-5) We follow the common literature and suppress the infinitesimal   \u03b7 {\\\\displaystyle \\\\eta }  in the following bearing in mind that the limit   \u03b7 \u2192 0 {\\\\displaystyle \\\\eta \\\\to 0}  is performed at the very end of the calculation.[\\[7]](#cite_note-negele:1988-7)[\\[8]](#cite_note-fetter:2003-8) ### Diagrammatic perturbation theory A consequence of the Gell\\-Mann and Low theorem, is the following form of the interacting groundstate energy[\\[8]](#cite_note-fetter:2003-8)  E  t o t  \\=  E  0  \\= \u27e8  \u03a9  0  \\|  H ^  \\|  \u03a9  0  \u27e9 \\=  \u27e8  \u03a8  0  \\|  S ^  ( \u221e , \u2212 \u221e )  H ^  \\|  \u03a8  0  \u27e9  \u27e8  \u03a8  0  \\|  S ^  ( \u221e , \u2212 \u221e )  \\|  \u03a8  0  \u27e9  , {\\\\displaystyle E\\_{tot}\\=E\\_{0}\\=\\\\langle \\\\Omega \\_{0}\\|{\\\\hat {H}}\\|\\\\Omega \\_{0}\\\\rangle \\={\\\\frac {\\\\langle \\\\Psi \\_{0}\\|{\\\\hat {S}}(\\\\infty ,\\-\\\\infty ){\\\\hat {H}}\\|\\\\Psi \\_{0}\\\\rangle }{\\\\langle \\\\Psi \\_{0}\\|{\\\\hat {S}}(\\\\infty ,\\-\\\\infty )\\|\\\\Psi \\_{0}\\\\rangle }},} which can be seen as starting point of diagrammatic perturbation theory. The expression above is used to derive all possible approximations by expanding the time\\-evolution operator   S ^ {\\\\displaystyle {\\\\hat {S}}}  into a series. The resulting matrix\\-elements of creation and annihilation operators are evaluated term by term using the canonical anti\\-commutator relations defined above (Wick's theorem[\\[9]](#cite_note-wick:1950-9)). It follows that all terms in perturbation theory are expressed by only two quantities, the non\\-interacting Feynman propagator   G  0  ( 1 , 2 ) \\= \u2212 i  \u2211  n  k  \u03d5 (  r  2  )  \u03d5  \u2217  (  r  1  )  e  \u2212 i (  \u03f5  n  k  \u2212  \u03f5  F  ) (  t  2  \u2212  t  1  )  \\[  f  n  k  \u0398 (  t  2  \u2212  t  1  ) \u2212 ( 1 \u2212  f  n  k  ) \u0398 (  t  1  \u2212  t  2  )  ]  ,  1 \\= (  r  1  ,  t  1  ) , 2 \\= (  r  2  ,  t  2  ) {\\\\displaystyle G\\_{0}(1,2\\)\\=\\-i\\\\sum \\_{n{\\\\bf {k}}}\\\\phi ({\\\\bf {r}}\\_{2})\\\\phi ^{\\*}({\\\\bf {r}}\\_{1})e^{\\-i(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{F})(t\\_{2}\\-t\\_{1})}\\\\left\\[f\\_{n{\\\\bf {k}}}\\\\Theta (t\\_{2}\\-t\\_{1})\\-(1\\-f\\_{n{\\\\bf {k}}})\\\\Theta (t\\_{1}\\-t\\_{2})\\\\right],\\\\quad 1\\=({\\\\bf {r}}\\_{1},t\\_{1}),2\\=({\\\\bf {r}}\\_{2},t\\_{2})} and the Coulomb interaction  V ( 1 , 2 ) \\=  \u03b4 (  t  1  \u2212  t  2  )  \\|  r  1  \u2212  r  2  \\|  . {\\\\displaystyle V(1,2\\)\\={\\\\frac {\\\\delta (t\\_{1}\\-t\\_{2})}{\\|{\\\\bf {r}}\\_{1}\\-{\\\\bf {r}}\\_{2}\\|}}.} Then, each term in the series corresponds to an integral over space\\-time coordinates   (  r  , t ) {\\\\displaystyle ({\\\\bf {r}},t)}  . Feynman diagrams are used to illustrate which terms are considered in the perturbation series. The illustration is usually achieved with so\\-called Feynman rules that map a specific diagram to an integral (and vice versa). For instance the second order diagram  [](../File_DMP2.html) is also known as the direct M\u00f8ller\\-Plessett term and stands for following integral  E  d M P  ( 2 )  \\= \u222b  d  ( 1 , 2 , 3 , 4 )  G  0  ( 1 , 2 )  G  0  ( 2 , 1 ) V ( 1 , 3 ) V ( 2 , 4 )  G  0  ( 3 , 4 )  G  0  ( 4 , 3 ) ,  d  ( 1 , \u22ef , 4 ) \\=  d  r  1  d  t  1  \u22ef  d  r  4  d  t  4 {\\\\displaystyle E\\_{\\\\rm {dMP}}^{(2\\)}\\=\\\\int {\\\\rm {d}}(1,2,3,4\\)G\\_{0}(1,2\\)G\\_{0}(2,1\\)V(1,3\\)V(2,4\\)G\\_{0}(3,4\\)G\\_{0}(4,3\\),\\\\quad {\\\\rm {d}}(1,\\\\cdots ,4\\)\\={\\\\rm {d}}{\\\\bf {r}}\\_{1}{\\\\rm {d}}t\\_{1}\\\\cdots {\\\\rm {d}}{\\\\bf {r}}\\_{4}{\\\\rm {d}}t\\_{4}} All Feynman rules can be found in the book of Negele and Orland or elsewhere.[\\[7]](#cite_note-negele:1988-7)[\\[8]](#cite_note-fetter:2003-8) The random\\-phase approximation------------------------------- The RPA is obtained from neglecting all second and higher order terms in the perturbation series of the groundstate energy, except of those which can be expressed soley in terms of the independent particle polarizability   \u03c7  0  ( 1 , 2 ) \\= \u2212 i  G  0  ( 1 , 2 )  G  0  ( 2 , 1 ) {\\\\displaystyle \\\\chi \\_{0}(1,2\\)\\=\\-iG\\_{0}(1,2\\)G\\_{0}(2,1\\)} corresponding to the \"bubble\" diagram  [](../File_Chi.html) Because of the symmetric time property   \u03c7  0  (  t  2  \u2212  t  1  ) \\=  \u03c7  0  (  t  1  \u2212  t  2  ) {\\\\displaystyle \\\\chi \\_{0}(t\\_{2}\\-t\\_{1})\\=\\\\chi \\_{0}(t\\_{1}\\-t\\_{2})} , the independent particle polarizability is of bosonic character. Because the RPA neglects all non\\-bosonic terms in the perturbation series, it corresponds essentially to a \"bosonization\" of the many\\-body problem for which the n\\-th order term can be written analytically as[\\[7]](#cite_note-negele:1988-7)  E  d M P  ( n )  \\=  1  2 n  \u222b  \u2212 \u221e  \u221e  d  \u03c9  2 \u03c0  T r  \\[  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  ]  n  . {\\\\displaystyle E\\_{\\\\rm {dMP}}^{(n)}\\={\\\\frac {1}{2n}}\\\\int \\_{\\-\\\\infty }^{\\\\infty }{\\\\frac {{\\\\rm {d}}\\\\omega }{2\\\\pi }}{\\\\rm {Tr}}\\\\left\\[{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right]^{n}.} Here, the trace of the matrix product is most effectively done in reciprocal space   \\[  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  ]  (  q \\+ G  1  ,  q \\+ G  2  ) \\=  \u2211  G  \u03c7 \\~  0  (  q \\+ G  1  ,  G  , \u03c9 ) V (  q \\+ G  ,  q \\+ G  2  ) {\\\\displaystyle \\\\left\\{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right\\=\\\\sum \\_{\\\\bf {G}}{\\\\tilde {\\\\chi }}\\_{0}({\\\\bf {q\\+G}}\\_{1},{\\\\bf {G}},\\\\omega )V({\\\\bf {q\\+G}},{\\\\bf {q\\+G}}\\_{2})} =\\sum _{{{\\bf {G}}}}{\\tilde  \\chi }_{0}({{\\bf {q+G}}}_{1},{{\\bf {G}}},\\omega )V({{\\bf {q+G}}},{{\\bf {q+G}}}_{2})](https://www.vasp.at/wiki/restbase/vasp.at/v1/media/math/render/svg/aa39e4b45a4a83746043c6f38d64d75c536966f8) using the Fourier transformed polarizability   \u03c7 \\~  0  (  q \\+ G  1  ,  q \\+ G  2  , \u03c9 ) {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{0}({\\\\bf {q\\+G}}\\_{1},{\\\\bf {q\\+G}}\\_{2},\\\\omega )} , the diagonal Coulomb potential   V (  q \\+ G  1  ,  q \\+ G  2  ) \\=  \u03b4  G  1  G  2  \\|  q \\+ G  1  \\| {\\\\displaystyle V({\\\\bf {q\\+G}}\\_{1},{\\\\bf {q\\+G}}\\_{2})\\={\\\\frac {\\\\delta \\_{{\\\\bf {G}}\\_{1}{\\\\bf {G}}\\_{2}}}{\\|{\\\\bf {q\\+G}}\\_{1}\\|}}}  and the conserved crystal momentum   q {\\\\displaystyle {\\\\bf {q}}}  in the first Brillouin zone.  All bubble terms of order   n \u2265 2 {\\\\displaystyle n\\\\geq 2}  can be written in a closed form using the series for the logarithm   ln \u2061 ( 1 \u2212 x ) \\+ x \\= \u2212  \u2211  n \\= 2  \u221e  x  n  n {\\\\displaystyle \\\\ln(1\\-x)\\+x\\=\\-\\\\sum \\_{n\\=2}^{\\\\infty }{\\\\frac {x^{n}}{n}}}  and define the correlation part of the RPA energy  E  c  R P A  \\= \u222b  d  \u03c9  2 \u03c0  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  ]  \\+  \u03c7 \\~  0  ( \u03c9 ) \u22c5 V  }  . {\\\\displaystyle E\\_{c}^{\\\\rm {RPA}}\\=\\\\int {\\\\frac {{\\\\rm {d}}\\\\omega }{2\\\\pi }}{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right]\\+{\\\\tilde {\\\\chi }}\\_{0}(\\\\omega )\\\\cdot V\\\\right\\\\rbrace .} There are two first order contributions to the total energy that yield the exact exchange energy   E  x  \\= T \\+  V  e x t  \\+  V  h  \\+  V  x {\\\\displaystyle E\\_{x}\\=T\\+V\\_{ext}\\+V\\_{h}\\+V\\_{x}} , which is usually determined separately. Computational Complexity------------------------ The calculation of the RPA integral requires the determination of the independent particle polarizability matrix   \u03c7 \\~  G  G \u2032  0  (  q  ,  \u03c9  n  ) \\=  \u03c7 \\~  0  (  q \\+ G  ,  q \\+ G  \u2032  ,  \u03c9  n  ) {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{\\\\bf {GG'}}^{0}({\\\\bf {q}},\\\\omega \\_{n})\\={\\\\tilde {\\\\chi }}\\_{0}({\\\\bf {q\\+G}},{\\\\bf {q\\+G}}',\\\\omega \\_{n})}  on each of the   N  q {\\\\displaystyle N\\_{\\\\bf {q}}}  sampling points of the first Brillouin zone for   N  \u03c9 {\\\\displaystyle N\\_{\\\\omega }}  frequency points. The number of frequency points is reduced drastically, by performing the integration over the imaginary frequency axis   \u03c9 \u2192 i \u03c9 {\\\\displaystyle \\\\omega \\\\to i\\\\omega } .[\\[10]](#cite_note-kaltak:2014-10) The independent particle polarizability on the imaginary axis can be determined with two alternative methods.  ### Quartic scaling RPA: Direct calculation Direct calculation of   \u03c7 \\~  0 {\\\\displaystyle {\\\\tilde {\\\\chi }}^{0}}  using the formula of Adler and Wiser[\\[11]](#cite_note-adler:1962-11)[\\[12]](#cite_note-wiser:1963-12)  \u03c7 \\~  G G  \u2032  0  (  q  , i \u03c9 ) \\=  \u2211  k  \u2208 B Z  \u2211  n ,  n \u2032  f  n  k  ( 1 \u2212  f  n  k \u2212 q  )  \u03f5  n  k \u2212 q  \u2212  \u03f5  n  k  \u2212 i \u03c9  \u27e8  \u03d5  n  k \u2212 q  \\|  e  i  G r  \\|  \u03d5  n \u2032  k  \u27e9 \u27e8  \u03d5  n \u2032  k  \\|  e  \u2212 i  G \u2032  r \u2032  \\|  \u03d5  n \u2032  k \u2212 q  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {GG}}'}^{0}({\\\\bf {q}},i\\\\omega )\\=\\\\sum \\\\limits \\_{{\\\\bf {k}}\\\\in BZ}\\\\sum \\\\limits \\_{n,n'}{\\\\frac {f\\_{n{\\\\bf {k}}}(1\\-f\\_{n{\\\\bf {k\\-q}}})}{\\\\epsilon \\_{n{\\\\bf {k\\-q}}}\\-\\\\epsilon \\_{n{\\\\bf {k}}}\\-i\\\\omega }}\\\\langle \\\\phi \\_{n{\\\\bf {k\\-q}}}\\|e^{i{\\\\bf {Gr}}}\\|\\\\phi \\_{n'{\\\\bf {k}}}\\\\rangle \\\\langle \\\\phi \\_{n'{\\\\bf {k}}}\\|e^{\\-i{\\\\bf {G'r'}}}\\|\\\\phi \\_{n'{\\\\bf {k\\-q}}}\\\\rangle } yields an RPA algorithm that has a computational cost of   N  \u03c9  N  k  2  N  G  4 {\\\\displaystyle N\\_{\\\\omega }N\\_{\\\\bf {k}}^{2}N\\_{\\\\bf {G}}^{4}} . Because the number of plane waves   N  G {\\\\displaystyle N\\_{\\\\bf {G}}}  scales linearly with the system size (number of electrons in the unit cell), the direct calculation of the polarizability is unfavourable for large system sizes, e.g. for more than \\~20 atoms in the unit cell.  ### Cubic scaling RPA: Contraction of imaginary time Green's functions An alternative way to determine   \u03c7 \\~  0 {\\\\displaystyle {\\\\tilde {\\\\chi }}^{0}}  is to frist determine imaginary time Green's functions of the form[\\[13]](#cite_note-rojas:prl:1995-13)  G  0  (  r ,  r \u2032  , i \u03c4 ) \\=  \u2211  k  \u2208 B Z  \u2211  n  \u03d5  n  k  (  r  )  \u03d5  n  k  \u2217  (  r \u2032  )  e  \u2212 (  \u03f5  n  k  \u2212  \u03f5  F  ) \u03c4  \\[  \u0398 ( \u2212 \u03c4 )  f  n  k  \u2212 \u0398 ( \u03c4 ) ( 1 \u2212  f  n  k  )  ] {\\\\displaystyle G\\_{0}({\\\\bf {r,r'}},i\\\\tau )\\=\\\\sum \\\\limits \\_{{\\\\bf {k}}\\\\in BZ}\\\\sum \\\\limits \\_{n}\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{\\*}({\\\\bf {r'}})e^{\\-(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{F})\\\\tau }\\\\left\\[\\\\Theta (\\-\\\\tau )f\\_{n{\\\\bf {k}}}\\-\\\\Theta (\\\\tau )(1\\-f\\_{n{\\\\bf {k}}})\\\\right]} and to perform afterwards a Fourier transformation into reciprocal and imaginary frequency space of   \u03c7  0  (  r ,  r \u2032  , i \u03c4 ) \\= \u2212  G  0  (  r ,  r \u2032  , i \u03c4 )  G  0  (  r \u2032  , r  , \u2212 i \u03c4 ) . {\\\\displaystyle \\\\chi \\_{0}({\\\\bf {r,r'}},i\\\\tau )\\=\\-G\\_{0}({\\\\bf {r,r'}},i\\\\tau )G\\_{0}({\\\\bf {r',r}},\\-i\\\\tau ).} Although more evolved, this approach has the advantage that the computational cost for the determination of   \u03c7 \\~  0 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{0}}  scales with   N  \u03c9  N  k  N  G  3 {\\\\displaystyle N\\_{\\\\omega }N\\_{\\\\bf {k}}N\\_{\\\\bf {G}}^{3}}  and is essentially only cubic in system size. The space\\-time method allows to study relatively large systems with the RPA.[\\[14]](#cite_note-kaltak:prb:2014-14) Basis set convergence of RPA\\-ACFDT calculations------------------------------------------------ The expression for the ACFDT\\-RPA correlation energy written in terms of reciprocal lattice vectors reads:  E  c  R P A  \\=  \u222b  0  \u221e  d  \u03c9  2 \u03c0  \u2211  q  \u2208  B Z  \u2211  G  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle E\\_{\\\\rm {c}}^{\\\\rm {RPA}}\\=\\\\int \\_{0}^{\\\\infty }{\\\\frac {\\\\mathrm {d} \\\\omega }{2\\\\pi }}\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }\\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}}  . The sum over reciprocal lattice vectors has to be truncated at some   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\mathrm {max} }} , determined by   \u210f  2  \\|  G  \\+  q  \\|  2  2  m  e {\\\\displaystyle {\\\\frac {\\\\hbar ^{2}\\|{\\\\mathbf {G} }\\+{\\\\mathbf {q} }\\|^{2}}{2\\\\mathrm {m} \\_{e}}}}  \\< ENCUTGW, which can be set in the INCAR file. The default value is   2 3  \u00d7 {\\\\displaystyle {\\\\frac {2}{3}}\\\\times }  ENCUT, which experience has taught us not to change. For systematic convergence tests, instead increase ENCUT and repeat steps 1 to 4, but be aware that the \"maximum number of plane\\-waves\" changes when ENCUT is increased. Note that it is virtually impossible, to converge absolute correlation energies. Rather concentrate on relative energies (e.g. energy differences between two solids, or between a solid and the constituent atoms). Since correlation energies converge very slowly with respect to   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\rm {max}}} , VASP automatically extrapolates to the infinite basis set limit using a linear regression to the equation: [\\[1]](#cite_note-harl:2008-1)[\\[15]](#cite_note-harl:2010-15)[\\[16]](#cite_note-klimes:2014-16)  E  c  (  G  ) \\=  E  c  ( \u221e ) \\+  A  G  3 {\\\\displaystyle E\\_{\\\\mathrm {c} }({\\\\mathbf {G} })\\=E\\_{\\\\mathrm {c} }(\\\\infty )\\+{\\\\frac {A}{{\\\\mathbf {G} }^{3}}}}  . Furthermore, the Coulomb kernel is smoothly truncated between ENCUTGWSOFT and ENCUTGW using a simple cosine like window function (Hann window function). Alternatively, the basis set extrapolation can be performed by setting LSCK\\=.TRUE., using the squeezed Coulomb kernel method.[\\[17]](#cite_note-riemelmoser:jcp:2020-17) The default for ENCUTGWSOFT is 0\\.8  \u00d7 {\\\\displaystyle \\\\times } ENCUTGW (again we do not recommend to change this default).  The integral over   \u03c9 {\\\\displaystyle \\\\omega }  is evaluated by means of a highly accurate minimax integration.[\\[10]](#cite_note-kaltak:2014-10) The number of   \u03c9 {\\\\displaystyle \\\\omega }  points is determined by the flag NOMEGA, whereas the energy range of transitions is determined by the band gap and the energy difference between the lowest occupied and highest unoccupied one\\-electron orbital. VASP determines these values automatically (from vasp.5\\.4\\.1 on), and the user should only carefully converge with respect to the number of frequency points NOMEGA. A good choice is usually NOMEGA\\=12, however, for large gap systems one might obtain   \u03bc {\\\\displaystyle \\\\mu } eV convergence per atom already using 8 points, whereas for metals up to NOMEGA\\=24 frequency points are sometimes necessary, in particular, for large unit cells. Strictly adhere to the steps outlines above. Specifically, be aware that steps two and three require the WAVECAR file generated in step one, whereas step four requires the WAVECAR and WAVEDER file generated in step three (generated by setting LOPTICS\\=*.TRUE.*).   Matsubara Formalism: Metallic systems at finite Temperature----------------------------------------------------------- The zero\\-temperature formalism of many\\-body perturbation theory breaks down for metals (systems with zero energy band\\-gap) as pointed out by Kohn and Luttinger.[\\[18]](#cite_note-KohnLuttinger:PR:1960-18) This conundrum is lifted by considering diagrammatic perturbation theory at finite temperature   T \\> 0 {\\\\displaystyle T\\>0} , which may be understood by an analytical continuation of the real\\-time   t {\\\\displaystyle t}  to the imaginary time axis   \u2212 i \u03c4 {\\\\displaystyle \\-i\\\\tau } . Matsubara has shown that this Wick rotation in time   t \u2192 \u2212 i \u03c4 {\\\\displaystyle t\\\\to \\-i\\\\tau }  reveals an intriguing connection to the inverse temperature   \u03b2 \\= 1  /  T {\\\\displaystyle \\\\beta \\=1/T}  of the system.[\\[19]](#cite_note-Matsubara:PTP:1955-19) More precisely, Matsubara has shown that all terms in perturbation theory at finite temperature can be expressed as integrals of imaginary time quantities (such as the polarizability   \u03c7 ( \u2212 i \u03c4 ) {\\\\displaystyle \\\\chi (\\-i\\\\tau )} ) over the fundamental interval   \u2212 \u03b2 \u2264 \u03c4 \u2264 \u03b2 {\\\\displaystyle \\-\\\\beta \\\\leq \\\\tau \\\\leq \\\\beta }  . As a consequence, one decomposes imaginary time quantities into a Fourier series with period   \u03b2 {\\\\displaystyle \\\\beta } that determines the spacing of the Fourier modes. For instance the imaginary polarizability can be written as  \u03c7 ( \u2212 i \u03c4 ) \\=  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  \u03c7 \\~  ( i  \u03bd  m  )  e  \u2212 i  \u03bd  m  \u03c4  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\chi (\\-i\\\\tau )\\={\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\tilde {\\\\chi }}(i\\\u \\_{m})e^{\\-i\\\u \\_{m}\\\\tau },\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } and the corresponding random\\-phase approximation of the correlation energy at finite temperature becomes a series over (in this case, bosonic) Matsubara frequencies  \u03a9  c  R P A  \\=  1 2  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  ]  \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  }  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\Omega \\_{c}^{\\\\rm {RPA}}\\={\\\\frac {1}{2}}{\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right]\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right\\\\rbrace ,\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } The Matsubara formalism has the advantage that all contributions to the Green's function and the polarizability are mathematically well\\-defined, including contributions from states close to the chemical potential   \u03f5  n  k  \u2248 \u03bc {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\approx \\\\mu } , such that Matsubara series also converge for metallic systems. Although formally convenient, the Matsubara series converges poorly with the number of considered terms in practice. VASP, therefore, uses a compressed representation of the Fourier modes by employing the Minimax\\-Isometry method.[\\[20]](#cite_note-Kaltak:PRB:2020-20) This approach converges exponentially with the number of considered frequency points."}
{"file_name": "ML_HIS.md", "content": "This file contains the distribution of energies, forces and stress in a histogram. This file is usually not important for the user.  ---"}
{"file_name": "Liquid_Si_-_Standard_MD.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- Generating liquid Si by melting of the crystalline structure via molecular dynamics. Input----- ### POSCAR * We start this example by making a POSCAR using the conventional unit cell with 8 atoms which should look like this:  ```Si cubic diamond conventional cell  5.43100000000000 1.00000000 0.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 1.00000000 Si 8Direct  0.00000000 0.00000000 0.00000000  0.75000000 0.25000000 0.75000000  0.00000000 0.50000000 0.50000000  0.75000000 0.75000000 0.25000000  0.50000000 0.00000000 0.50000000  0.25000000 0.25000000 0.25000000  0.50000000 0.50000000 0.00000000  0.25000000 0.75000000 0.75000000  ```   * We obtain a sufficiently large supercell (2x2x2 containing 64 atoms) by following the description in: Preparing a Super Cell.* The new POSCAR file of the two 2x2x2 super cell of the conventional cell should look like this:  ```Si cubic diamond 2x2x2 super cell of conventional cell     5.43090000000000    2.00000000   0.00000000   0.00000000    0.00000000   2.00000000   0.00000000    0.00000000   0.00000000   2.00000000 Si 64Direct   0.00000000   0.00000000   0.00000000   0.50000000   0.00000000   0.00000000   0.00000000   0.50000000   0.00000000   0.50000000   0.50000000   0.00000000   0.00000000   0.00000000   0.50000000   0.50000000   0.00000000   0.50000000   0.00000000   0.50000000   0.50000000   0.50000000   0.50000000   0.50000000   0.37500000   0.12500000   0.37500000   0.87500000   0.12500000   0.37500000   0.37500000   0.62500000   0.37500000   0.87500000   0.62500000   0.37500000   0.37500000   0.12500000   0.87500000   0.87500000   0.12500000   0.87500000   0.37500000   0.62500000   0.87500000   0.87500000   0.62500000   0.87500000   0.00000000   0.25000000   0.25000000   0.50000000   0.25000000   0.25000000   0.00000000   0.75000000   0.25000000   0.50000000   0.75000000   0.25000000   0.00000000   0.25000000   0.75000000   0.50000000   0.25000000   0.75000000   0.00000000   0.75000000   0.75000000   0.50000000   0.75000000   0.75000000   0.37500000   0.37500000   0.12500000   0.87500000   0.37500000   0.12500000   0.37500000   0.87500000   0.12500000   0.87500000   0.87500000   0.12500000   0.37500000   0.37500000   0.62500000   0.87500000   0.37500000   0.62500000   0.37500000   0.87500000   0.62500000   0.87500000   0.87500000   0.62500000   0.25000000   0.00000000   0.25000000   0.75000000   0.00000000   0.25000000   0.25000000   0.50000000   0.25000000   0.75000000   0.50000000   0.25000000   0.25000000   0.00000000   0.75000000   0.75000000   0.00000000   0.75000000    0.25000000   0.50000000   0.75000000   0.75000000   0.50000000   0.75000000   0.12500000   0.12500000   0.12500000   0.62500000   0.12500000   0.12500000   0.12500000   0.62500000   0.12500000   0.62500000   0.62500000   0.12500000   0.12500000   0.12500000   0.62500000   0.62500000   0.12500000   0.62500000   0.12500000   0.62500000   0.62500000   0.62500000   0.62500000   0.62500000   0.25000000   0.25000000   0.00000000   0.75000000   0.25000000   0.00000000   0.25000000   0.75000000   0.00000000   0.75000000   0.75000000   0.00000000   0.25000000   0.25000000   0.50000000   0.75000000   0.25000000   0.50000000   0.25000000   0.75000000   0.50000000   0.75000000   0.75000000   0.50000000   0.12500000   0.37500000   0.37500000   0.62500000   0.37500000   0.37500000   0.12500000   0.87500000   0.37500000   0.62500000   0.87500000   0.37500000   0.12500000   0.37500000   0.87500000   0.62500000   0.37500000   0.87500000   0.12500000   0.87500000   0.87500000   0.62500000   0.87500000   0.87500000  ``` ### KPOINTS  ```K-Points 0Gamma 1  1  1 0  0  0  ``` * Since a sufficiently large super cell is used in this example, it is ok in this case to use only a single k\\-point in the calculations. Hence it is also possible to use the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only version which is significantly faster than the standard version. ### INCAR  ```ISMEAR = 0IBRION = 0MDALGO = 2ISIF = 2SMASS = 1.0SIGMA = 0.1LREAL = AutoALGO = VeryFastPREC = LowISYM = 0TEBEG = 2000NSW = 50POTIM = 3.0NCORE = 2  ``` * To select a molecular dynamics calculation set IBRION\\=0\\.* By selecting MDALGO\\=2 and ISIF\\=2 we select the NVT ensemble using the Nose\\-Hoover thermostat.* The tag SMASS specifies the Nose mass, which is a ficitional mass for the fictional coordinate of the heat bath. The choice of SMASS\\=1\\.0 should work well for this tutorial.* Since we are dealing with a super cell, we set LREAL\\=Auto. In this mode the projection operators are evaluated in real space. This should speed up the calculation while being slightly less accurate then the evaluation of the operators in reciprocal space.* To significantly speed up the calculations we use ALGO\\=*VeryFast* and PREC\\=*Low*. This is ok for this tutorial example but for more precise results these flags should be used with caution!* A time step of 3 femtoseconds (POTIM\\=3\\.0\\) is employed in this example, which should be ok for many applications of Si.* The tag NCORE\\=2 specifies that the parallelization is done such that 2 cores share the work on one orbital. This means that for e.g. 8 cores 4 different orbitals would be treated simultaneously, where for each orbital two plane\\-wave coefficients would be calculated simultaneously. Calculation----------- The calculation is started from the perfect crystal. Since the chosen temperature at 2000K is significantly above the known melting temperature at around 1400 K the melting should be achieved relatively quickly. It is suggested to run this calculation using the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only version, since we have only one k point. Then it should be a very quick calculation on eight nodes:  ```mpirun -np 8 vasp_path/vasp_gam  ``` When the solid melts the crystal structure and the distances between the atoms change. This can be well monitored by looking at the pair correlation function (or radial distribution function). We will also monitor the energy conservation to see if we are well equilibrated.  ### 150 fs First we run the calculation for 150 fs. [](File_PC_150fs.html) Fig. 1: Pair correlation function after 150 fs. [](File_Energy_150fs.html) Fig. 2: Total energy vs number of steps in first 150 fs. * Pair correlation function: The pair correlation function is written out to the PCDAT file. The abscissa of that file is within mesh points of a selected grid and need to be converted to   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } . This is done by invoking the following short awk script on the command line:  ```awk <PCDAT >PCDAT.150fs ' NR==8 {pcskal=$1} NR==9 {pcfein=$1} NR>=13 {line=line+1; print (line-0.5)*pcfein/pcskal,$1} '  ``` This produces the file PCDAT.150fs which contains the pair correlation function against the radius in Angstrom after the first 150 fs (50 timesteps NSW\\=50 with a stepsize of 3 fs POTIM\\=3\\).Now we will plot the pair correlation function in the gnuplot window:  ```gnuplot -e \"set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'PCDAT.150fs'; pause -1\"  ``` or to a file (in the remainder we just show how to plot to a file):  ```gnuplot -e \"set terminal jpeg; set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'PCDAT.150fs'\" > PC_150fs.jpg  ``` The obtained pair correlation function should look like in Fig. 1\\. Solids usually show sharp peaks in the pair correlation function since the ions only vibrate around fixed positions in the crystal lattice. In the liquid or amorphous state the distances are much more diffuse and one usually would expect no far order (but both can have near order). We see that many sharp peaks arise in the pair correlation function at higher distances, so that after 150 fs we have not molten the material.    * Energy conservation: We will also output the total energy for each molecular dynamics step by invoking the command:  ```grep \"free  energy\" OUTCAR|awk ' {print $5}' > energy.dat  ``` We will now plot the energy using gnuplot (the user can of course use the plotting program of choice):  ```gnuplot -e \"set terminal jpeg; set xlabel 'N_{step}'; set ylabel 'Total energy (eV/cell)';set style data lines; plot 'energy.dat'\" > energy_150fs.jpg  ``` The progression of the total energy with respect to the length of the simulation is shown in Fig. 2\\. We see that the energy changes very strongly indicating very large changes in the structures. Of course this is related to the melting and it is fine. ### 300 fs We repeat the calculation for another 150 fs. [](File_PC_300fs.html) Fig. 3: Pair correlation functions after 300 and 150 fs. Before we run the calculation we need to copy the new positions and velocities in CONTCAR to POSCAR. Then rerun the calculation using the same INCAR tags and command as above. * Pair correlation function: The pair correlation function after 300 fs is written to the file PCDAT.300fs (it is evaluated only in the interval of the last 150 fs since we restarted the calculation):  ```awk <PCDAT >PCDAT.300fs ' NR==8 {pcskal=$1} NR==9 {pcfein=$1} NR>=13 {line=line+1; print (line-0.5)*pcfein/pcskal,$1} '  ``` To compare it with the pair correlation function after 150 fs we plot them using the command:  ```gnuplot -e \"set terminal jpeg; set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'PCDAT.150fs', 'PCDAT.300fs' \" > PC_300fs.jpg  ``` The pair correlation functions should look like Fig. 3\\. We see that after 300 fs much less structure is visible at larger distances. This indicates that the melting is progressing further, but we need to continue with the monitoring of the pair correlation function until it is sufficiently converged. * Total energy: We don't look at the total energies here but later. Still the energies from this calculation need to be concatenated to the \"energy.dat\" file (mind the \"\\>\\>\" instead of \"\\>\" above):  ```grep \"free  energy\" OUTCAR|awk ' {print $5}' >> energy.dat  ``` ### Further continuation We continue the calculation for 450 fs.  [](File_PC_750fs.html) Fig. 4: Pair correlation functions after 750, 300 and 150 fs. [](File_Energy_750fs.html) Fig. 5: Energy vs number of steps in 750 fs.   To do that we first set NSW\\=150 in the INCAR file and copy CONTCAR to POSCAR. * Pair correlation function: We obtain the pair correlation function using the command:  ```awk <PCDAT >PCDAT.750fs ' NR==8 {pcskal=$1} NR==9 {pcfein=$1} NR>=13 {line=line+1; print (line-0.5)*pcfein/pcskal,$1} '  ``` We compare the pair correlation functions using the command:  ```gnuplot -e \"set terminal jpeg; set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'PCDAT.150fs', 'PCDAT.300fs', 'PCDAT.750fs' \" > PC_750fs.jpg  ``` The pair correlation functions should look like Fig. 4\\. We see that for 750 fs the peak at 4   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  got smoothened out compared to 300 fs but the rest of the pair correlation function didn't change much anymore. This is an indication that the calculation is converging. In principle we want to have a well equilibrated structure for a given temperature.  * Total energy: We will further add the energy data to the *energy.dat* file:  ```grep \"free  energy\" OUTCAR|awk ' {print $5}' >> energy.dat  ``` After that we plot the *energy.dat* file:  ```gnuplot -e \"set terminal jpeg; set xlabel 'N_{step}'; set ylabel 'Total energy (eV/cell)';set style data lines; plot 'energy.dat'\" > energy_750fs.jpg  ``` The energy vs number of iteration should look like Fig. 5\\. We see that after a few 100 fs the energy is conserved, but of course with some fluctuations present. This should also indicate that the structure is not changing drastically anymore and that the melting is achieved. We should note that the energy conservation can be monitored because we use the deterministic Nose\\-Hoover thermostat which has a kinetic and potential energy term of the heat bath which provides energy conservation. If we would use e.g. the Langevin thermostat which is a stochastic thermostat we would obtain large fluctuations in the total energy. ### Microcanonical ensemble Next we want to continue the calculations but instead of the canonical ensemble (NVT ensemble) we are going to carry out the calculations in the microcanonical ensemble (NVE ensemble). The microcanonical ensemble calculations are carried out by setting the following tags in the INCAR file:  ```MDALGO = 1ANDERSEN_PROB = 0.0  ``` In principle we set here an Andersen thermostat but effectively without using it since we set the collision probability of the thermostat ANDERSEN\\_PROB to zero.  We will carry out two hundred more molecular dynamics steps (by setting NSW\\=200\\) using the microcanonical ensemble. First we check the mean temperature by typing the following line  ```grep \"mean temperature\" OUTCAR  ``` The user should get an output like:  ```mean temperature <T/S>/<1/S> \u00a0:  2566.129  ``` In this example we see that the target temperature is not kept when a microcanonical ensemble is used. At this point the user should be able to monitor the energies in the calculation. If not repeat from scratch! **Exercise:** Compare the energy conservation of the microcanonical ensemble and the canonical ensemble. Carry out another 200 molecular dynamics steps but with a step size that is only the half of the previous one (POTIM\\=1\\.5\\). Compare the energy conservation and check the mean temperature! ### Further things to try To get a better statistics the user should further carry out the calculation for 400\\-1000 steps in the NVT ensemble but with a much smaller time step POTIM\\=0\\.3\\. **Repeat the above analysis!** Download--------  Si\\_Liquid\\_Melting.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "Input_and_Output_-_a_short_Intro.md", "content": "Input===== VASP basically needs 4 input files for standard production runs: INCAR--------------------------- The INCAR file holds the input parameters which \"steer\" the calculation. * The default values set by VASP itself are a clever choice to do standard calculations.* These standard settings can be modified to specify:\t+ What do you want to do? (scf calculation, DOS, dielectric properties ...)\t+ You can give parameters to fulfill your requirements concerning required precision, requested convergence, calculation time ...   POSCAR------------------------------ The POSCAR file contains the information on the structure. * A simple POSCAR file may look like this:  ```fcc:  Ni3.530.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 Ni 1Selective DynCartesian0 0 0  T T T  ``` * The description of each line is given as follows:\t+ 1: Header (comment).\t+ 2: Overall scaling constant.\t+ 3\\-6: Bravais matrix.\t+ 4: Name(s) of the atom(s).\t+ 5: Number of the atoms (of each atom type).\t+ 6: (optional: selective dynamics).\t+ 7: Specifies which coordinate system is used (\"cartesian\" or \"direct\").\t+ 8\\-x: Positions of the atoms.   KPOINTS--------------------------------- The KPOINTS file determines the sampling of the 1st Brillouin zone. * A typical KPOINTS file:  ```Automatic mesh 0G (M)4 4 40.  0.  0.  ``` * The description of each line is given as follows:\t+ 1: Header (comment).\t+ 2: Specifies the k mesh generation type.      N   k \u2192    \\= 0  \t{\\\\displaystyle N\\_{\\\\overrightarrow {k}}\\=0} \t: automatic generation scheme.\t+ 3:     \u0393  \t{\\\\displaystyle \\\\Gamma } \t\\-centered (Monkhorst\\-Pack) grid.\t+ 4: Number of subdivisions in each direction.\t+ 5: Optional shift of the mesh.   POTCAR------------------------------ The POTCAR file contains the relevant information concerning the pseudo potentials that are necessary to run the calculation: * Data that was required for generating the pseudo potentials.* Number of valence electrons.* Atomic mass.* Energy cut\\-off. If the cell contains different atomic species, the corresponding POTCAR files have to be concatenated, in the same order as the atomic species are given in the POSCAR file. **N.B.**: Different XC\\-types must not be mixed.   Output====== VASP gives several different output files, depending on which task is performed. The most important files that are produced in (almost) every calculation are described in the following:  OUTCAR------------------------------ The OUTCAR file gives detailed output of a VASP run, including: * A summary of the used input parameters.* Information about the electronic steps:   E  F e r m i {\\\\displaystyle E\\_{\\\\mathrm {Fermi} }} , KS\\-eigenvalues.* Stress tensors.* Forces on the atoms.* Local charges and magnetic moments.* Dielectric properties The amount of output written onto the OUTCAR file can be chosen by modifying the NWRITE tag in the INCAR file. OSZICAR and stdout-------------------------------------------- The OSZICAR file gives a short summary of the results: * Chosen SCF algorithm.* Convergence of the total energy, charge\\- and spin densities.* Free energies.* Magnetic moments of the cell. CONTCAR--------------------------------- The CONTCAR file gives the updated geometry data at the end of a run: * Lattice parameter.* Bravais matrix.* Ionic positions.* (Optionally velocities). The format of the CONTCAR file is the same as of the POSCAR file, hence it can be used directly for continuation runs after having been copied to the POSCAR file. XDATCAR--------------------------------- The XDATCAR file contains updated ionic positions of each ionic step. DOSCAR------------------------------ The DOSCAR file contains the total and integrated DOS and optionally the local partial DOS. CHGCAR------------------------------ The CHGCAR file contains the charges   \u03c1 \u2217 V {\\\\displaystyle \\\\rho \\*V}  . WAVECAR--------------------------------- The WAVECAR file contains the wave function coefficients.This file can be used to continue from a previous run. Back to the main page."}
{"file_name": "Cuda.md", "content": "``` ## N.B.: there is no CUDA-GPU gamma-only version #export VASP_TESTSUITE_EXE_STD=\"mpirun -np 4 $PWD/../bin/vasp_gpu\"export VASP_TESTSUITE_EXE_NCL=\"mpirun -np 4 $PWD/../bin/vasp_gpu_ncl\"export VASP_TESTSUITE_EXE_GAM=  ## tell runtest that these executables will run with the CUDA port# (will skip tests that are not supported). #export VASP_TESTSUITE_CUDA=Y  ## the above is equivalent to setting ###export VASP_TESTSUITE_SKIP_NOCUDA=Y##export VASP_TESTSUITE_SKIP_GAMMA=Y##export VASP_TESTSUITE_RUN_LREAL=Y##export VASP_TESTSUITE_INCAR_PREPEND=\"LSCAAWARE=.FALSE.\u00a0; $VASP_TESTSUITE_INCAR_PREPEND \"  ```"}
{"file_name": "LIBMBD_MBD_A.md", "content": "LIBMBD\\_MBD\\_A= \\[real]   Default: **LIBMBD\\_MBD\\_A** \\= 6\\.0nDescription: LIBMBD\\_MBD\\_A sets the value of the damping parameter   a {\\\\displaystyle a}  in the many\\-body methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_MBD\\_A allows to choose the value of the damping parameter   a {\\\\displaystyle a}  in the many\\-body methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3). The value is internally passed to the libMBD input **mbd\\_a** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Mind:** LIBMBD\\_MBD\\_A can be set only if LIBMBD\\_XC\\=none. || --- | | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "Impi+omp.md", "content": "``` ## define the commands that run vasp_std, vasp_ncl, and vasp_gam #nthrds=4nranks=2 mpi=\"-np $nranks -ppn $nranks\"omp=\"-genv OMP_NUM_THREADS=$nthrds -genv OMP_STACKSIZE=512m\" export VASP_TESTSUITE_EXE_STD=\"mpirun $mpi $omp $PWD/../bin/vasp_std\"export VASP_TESTSUITE_EXE_NCL=\"mpirun $mpi $omp $PWD/../bin/vasp_ncl\"export VASP_TESTSUITE_EXE_GAM=\"mpirun $mpi $omp $PWD/../bin/vasp_gam\"  ```"}
{"file_name": "LOCPOT.md", "content": "The LOCPOT file stores the local potential (in eV). The definition of the written local potential depends on the settings for LVTOT, LVHAR, and WRT\\_POTENTIAL. The format is similar to that of the CHGCAR file, but it does not have the same data arrangement.For spin\\-unpolarized calculations (ISPIN\\=1, LNONCOLLINEAR\\=F), it contains a single dataset with the scalar potential.For spin\\-polarized calculations (ISPIN\\=2\\), it contains two datasets: spin up and spin down.For noncollinear calculations (LNONCOLLINEAR\\=T), it contains four datasets in the spinor representation of the potential. In other words, it contains the scalar potential and the B\\-field\\-like potential   B  1 {\\\\displaystyle B\\_{1}}  ,  B  2 {\\\\displaystyle B\\_{2}} , and   B  3 {\\\\displaystyle B\\_{3}}  in the basis defined by SAXIS (see LOCPOT\\-format issue for VASP\\<6\\.4\\.3). | **Warning:** Note for versions older than vasp.5\\.1\\.12: please check whether your version supports this tag (it is written out at the beginning of the OUTCAR file). Versions not supporting LVHAR might or not add      V  XC   (  r  )   {\\\\displaystyle V\\_{\\\\text{XC}}(\\\\mathbf {r} )}  }(\\mathbf {r} )}. Please check this by searching for LEXCHG\\=\\-1 in main.F. If the line LEXCHG\\=\\-1 is commented out      V  XC   (  r  )   {\\\\displaystyle V\\_{\\\\text{XC}}(\\\\mathbf {r} )}  }(\\mathbf {r} )} is added otherwise it is not. || --- |"}
{"file_name": "Band_gap_renormalization_in_diamond_using_one-shot_method.md", "content": "Overview> Band gap renormalization in diamond using one\\-shot method> List of tutorials Task---- Calculating the zero\\-point renormalization (ZPR) and the temperature dependence of the indirect band gap in diamond using a one\\-shot method \"Electron-phonon interactions theory\")[\\[1]](#cite_note-Zacharias:PRL:2015-1)[\\[2]](#cite_note-zacharias:prb:2016-2). Input----- ### POSCAR * Primitive cell (*POSCAR.prim*):  ```C_2_fcc   1.00000000000000     0.00000000   1.78349300  1.78349300     1.78349300   0.00000000  1.78349300     1.78349300   1.78349300  0.00000000 C 2Direct  0.00000000  0.00000000  0.00000000  0.75000000  0.75000000  0.75000000  ``` * 4x4x4 super cell used in this calculation (*POSCAR.4x4x4*):  ```C_128_fcc   1.00000000000000    0.00000000   7.13397200   7.13397200    7.13397200   0.00000000   7.13397200    7.13397200   7.13397200   0.00000000 C 128Direct   0.00000000   0.00000000   0.00000000   0.25000000   0.00000000   0.00000000   0.50000000   0.00000000   0.00000000   0.75000000   0.00000000   0.00000000   0.00000000   0.25000000   0.00000000   0.25000000   0.25000000   0.00000000   0.50000000   0.25000000   0.00000000   0.75000000   0.25000000   0.00000000   0.00000000   0.50000000   0.00000000   0.25000000   0.50000000   0.00000000   0.50000000   0.50000000   0.00000000   0.75000000   0.50000000   0.00000000   0.00000000   0.75000000   0.00000000   0.25000000   0.75000000   0.00000000   0.50000000   0.75000000   0.00000000   0.75000000   0.75000000   0.00000000   0.00000000   0.00000000   0.25000000   0.25000000   0.00000000   0.25000000   0.50000000   0.00000000   0.25000000   0.75000000   0.00000000   0.25000000   0.00000000   0.25000000   0.25000000   0.25000000   0.25000000   0.25000000   0.50000000   0.25000000   0.25000000   0.75000000   0.25000000   0.25000000   0.00000000   0.50000000   0.25000000   0.25000000   0.50000000   0.25000000   0.50000000   0.50000000   0.25000000   0.75000000   0.50000000   0.25000000   0.00000000   0.75000000   0.25000000   0.25000000   0.75000000   0.25000000   0.50000000   0.75000000   0.25000000   0.75000000   0.75000000   0.25000000   0.00000000   0.00000000   0.50000000   0.25000000   0.00000000   0.50000000   0.50000000   0.00000000   0.50000000   0.75000000   0.00000000   0.50000000   0.00000000   0.25000000   0.50000000   0.25000000   0.25000000   0.50000000   0.50000000   0.25000000   0.50000000   0.75000000   0.25000000   0.50000000   0.00000000   0.50000000   0.50000000   0.25000000   0.50000000   0.50000000   0.50000000   0.50000000   0.50000000   0.75000000   0.50000000   0.50000000   0.00000000   0.75000000   0.50000000   0.25000000   0.75000000   0.50000000   0.50000000   0.75000000   0.50000000   0.75000000   0.75000000   0.50000000   0.00000000   0.00000000   0.75000000   0.25000000   0.00000000   0.75000000   0.50000000   0.00000000   0.75000000   0.75000000   0.00000000   0.75000000   0.00000000   0.25000000   0.75000000   0.25000000   0.25000000   0.75000000   0.50000000   0.25000000   0.75000000   0.75000000   0.25000000   0.75000000   0.00000000   0.50000000   0.75000000   0.25000000   0.50000000   0.75000000   0.50000000   0.50000000   0.75000000   0.75000000   0.50000000   0.75000000   0.00000000   0.75000000   0.75000000   0.25000000   0.75000000   0.75000000   0.50000000   0.75000000   0.75000000   0.75000000   0.75000000   0.75000000   0.18750000   0.18750000   0.18750000   0.43750000   0.18750000   0.18750000   0.68750000   0.18750000   0.18750000   0.93750000   0.18750000   0.18750000   0.18750000   0.43750000   0.18750000   0.43750000   0.43750000   0.18750000   0.68750000   0.43750000   0.18750000   0.93750000   0.43750000   0.18750000   0.18750000   0.68750000   0.18750000   0.43750000   0.68750000   0.18750000   0.68750000   0.68750000   0.18750000   0.93750000   0.68750000   0.18750000   0.18750000   0.93750000   0.18750000   0.43750000   0.93750000   0.18750000   0.68750000   0.93750000   0.18750000   0.93750000   0.93750000   0.18750000   0.18750000   0.18750000   0.43750000   0.43750000   0.18750000   0.43750000   0.68750000   0.18750000   0.43750000   0.93750000   0.18750000   0.43750000   0.18750000   0.43750000   0.43750000   0.43750000   0.43750000   0.43750000   0.68750000   0.43750000   0.43750000   0.93750000   0.43750000   0.43750000   0.18750000   0.68750000   0.43750000   0.43750000   0.68750000   0.43750000   0.68750000   0.68750000   0.43750000   0.93750000   0.68750000   0.43750000   0.18750000   0.93750000   0.43750000   0.43750000   0.93750000   0.43750000   0.68750000   0.93750000   0.43750000   0.93750000   0.93750000   0.43750000   0.18750000   0.18750000   0.68750000   0.43750000   0.18750000   0.68750000   0.68750000   0.18750000   0.68750000   0.93750000   0.18750000   0.68750000   0.18750000   0.43750000   0.68750000   0.43750000   0.43750000   0.68750000   0.68750000   0.43750000   0.68750000   0.93750000   0.43750000   0.68750000   0.18750000   0.68750000   0.68750000   0.43750000   0.68750000   0.68750000   0.68750000   0.68750000   0.68750000   0.93750000   0.68750000   0.68750000   0.18750000   0.93750000   0.68750000   0.43750000   0.93750000   0.68750000   0.68750000   0.93750000   0.68750000   0.93750000   0.93750000   0.68750000   0.18750000   0.18750000   0.93750000   0.43750000   0.18750000   0.93750000   0.68750000   0.18750000   0.93750000   0.93750000   0.18750000   0.93750000   0.18750000   0.43750000   0.93750000   0.43750000   0.43750000   0.93750000   0.68750000   0.43750000   0.93750000   0.93750000   0.43750000   0.93750000   0.18750000   0.68750000   0.93750000   0.43750000   0.68750000   0.93750000   0.68750000   0.68750000   0.93750000   0.93750000   0.68750000   0.93750000   0.18750000   0.93750000   0.93750000   0.43750000   0.93750000   0.93750000   0.68750000   0.93750000   0.93750000   0.93750000   0.93750000   0.93750000  ``` ### KPOINTS  ```K-Points 0Gamma 1  1  1 0  0  0  ``` * We only need a single k\\-point, since the convergence is done via the super\\-cell size. ### INCAR  ```general: System\") = cd-C PREC = Accurate ALGO = FAST ISMEAR = 0  SIGMA = 0.1; IBRION = 6 PHON_LMC = .TRUE. PHON_NSTRUCT = 0 PHON_NTLIST = 1 PHON_TLIST = 0.0  ``` * The tags with \"PHON\\_\" control the electron\\-phonon related features. PHON\\_LMC enables the calculation of structures with random displacements (one shot or Monte Carlo) of the atoms according to the density matrix of a harmonic oscillator. By selecting PHON\\_NSTRUCT\\=0 a one\\-shot configuration (ZG configuration) is obtained. The tag PHON\\_NTLIST selects the number of temperatures for which the structure with the one shot calculation is obtained. This requires also the list of temperatures given by PHON\\_TLIST which have exact PHON\\_NTLIST number of elements.* IBRION\\=6 is selected to obtain the eigenvectors and eigenvalues of the dynamical matrix at the Gamma point. Calculation----------- This example will use a one\\-shot method \"Electron-phonon interactions theory\"), where only a single structure that contains the electron\\-phonon information is required for a given temperature.\u00a0The \"Gamma\" version of VASP is used throughout this example since only a single k point is used in the calculations. The calculation consists of two steps: 1. Obtain new \"distorted\" POSCAR file which contains special displacements. This calculation also contains the band gap of the original structure.2. Execute simple DFT calculation for the structure containing the special displacements to obtain the band gap.3. Extract ZPR as the difference between the band gaps from the two calculations. ### Obtain structure with special displacements To run the calculation *POSCAR.4x4x4* needs to be copied to *POSCAR* and *INCAR.init* to *INCAR*. Execute VASP.  Copy the OUTCAR file to *OUTCAR.init*. It will be later used for the band gap of the \"undistorted\" structure. The new POSCAR file containing the special displacements is given as *POSCAR.T\\=0\\.*. ### Calculate electronic levels of structure with special displacements Copy the file *POSCAR.T\\=0\\.* to *POSCAR*. Delete (or comment out with *\\#*) all the lines in the INCAR file related to \"PHON\\_\" so that it looks like the following:  ```System\") = cd-CPREC = AccurateALGO = FASTISMEAR = 0 SIGMA = 0.1;  ``` Execute VASP. Copy *OUTCAR* to *OUTCAR.T\\=0\\.*. ### Extract ZPR We extract the band gap renormalization as   \u0394  E  r m  \\=  E  S P  \u2212 E {\\\\displaystyle \\\\Delta E\\_{\\\\mathrm {rm} }\\=E\\_{\\\\mathrm {SP} }\\-E} where   E  S P {\\\\displaystyle E\\_{\\\\mathrm {SP} }}  and  E {\\\\displaystyle E}  are the band gaps with and without special displacements, respectively.  Since the 4x4x4 cell of cubic diamond has 3 degenerate bands at the valence band maximum and 6 degenerate bands at the conduction band minimum, they are averaged in the calculation of the band gap. This is necessary since the convergence with respect to cell size is drastically improved this way. Also, all perturbation theory calculations in the literature evaluate the band gap the same way, which ensures the compatibility of the different computational methods. The band gaps are extracted from the previously saved files *OUTCAR.init* and *OUTCAR.T\\=0\\.* using the following script: **Click to show/*extract\\_zpr.sh***  ```#!/bin/bash  i=\"OUTCAR.T=0.\"j=\"OUTCAR.init\" homo1=`awk '/NELECT/ {print $3/2}' $i`homo2=`awk '/NELECT/ {print $3/2-1}' $i`homo3=`awk '/NELECT/ {print $3/2-2}' $i`lumo1=`awk '/NELECT/ {print $3/2+var+1}' $i`lumo2=`awk '/NELECT/ {print $3/2+var+2}' $i`lumo3=`awk '/NELECT/ {print $3/2+var+3}' $i`lumo4=`awk '/NELECT/ {print $3/2+var+4}' $i`lumo5=`awk '/NELECT/ {print $3/2+var+5}' $i`lumo6=`awk '/NELECT/ {print $3/2+var+6}' $i`e1a=`grep \"   $homo1  \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e1b=`grep \"   $homo2  \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e1c=`grep \"   $homo3  \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e2a=`grep \"   $lumo1  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2b=`grep \"   $lumo2  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2c=`grep \"   $lumo3  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2d=`grep \"   $lumo4  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2e=`grep \"   $lumo5  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2f=`grep \"   $lumo6  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`    homo_ref=`awk '/NELECT/ {print $3/2}' $j`lumo_ref=`awk '/NELECT/ {print $3/2+var+1}' $j` h_ref=`grep \"   $homo_ref  \" $j | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`l_ref=`grep \"   $lumo_ref  \" $j | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   echo \"The band gap (in eV) without zero-point vibrations is:\"echo \"$h_ref $l_ref\" |awk '{print ($2-$1)}'echo \"The band gap (in eV) including zero-point vibrations is:\"echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f\" |awk '{print (($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)}'echo \"The zero-point renormalization of the band gap (in eV) is:\" echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f $h_ref $l_ref\" |awk '{print (($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)-($11-$10)}'  ``` To use the script please type:  ```bash extract_zpr.sh  ``` The output of the script should look like the following:  ```The band gap (in eV) without zero-point vibrations is:4.4049The band gap (in eV) including zero-point vibrations is:4.05102The zero-point renormalization of the band gap (in eV) is:-0.353883  ``` ### Better accuracy The accuracy of the band gap renormalization depends dominantly on the size of the super cell, so this is the quantity that has to be usually converged in this type of calculation. This example contains a POSCAR file for a 5x5x5 cell (*POSCAR.5x5x5*).After repeating all above steps with this POSCAR file the following results should be obtained:  ```The band gap (in eV) without zero-point vibrations is:4.1421The band gap (in eV) including zero-point vibrations is:3.83717The zero-point renormalization of the band gap (in eV) is:-0.304933  ``` The interested user can try to further increase the cell size, by making a super cell from the primitive cell (*POSCAR.prim*) provided by this tutorial (how to build a super cell is for example covered here). ### Temperature dependence of the band gap Here the temperature dependence of the band gap due to electron\\-phonon interactions is calculated. The input files are located in the directory  *TEMP\\_DEPENDENCE*. Switch to this directory. Copy *POSCAR.4x4x4* to *POSCAR* and *INCAR.init* to *INCAR*. The *INCAR* file contains following lines which are different from the calculation of the ZPR:  ```PHON_NTLIST = 8PHON_TLIST = 0.0 100.0 200.0 300.0 400.0 500.0 600.0 700.0  ``` After running the calculations several new POSCAR files are created.  Before running the calculations copy *INCAR.run\\_temp* to *INCAR*. Run a standard VASP calculation for each of them to obtain the band gap or use the script *run\\_temperature.sh* provided with this calculation: **Click to show/*run\\_temperature.sh***  ```#!/bin/bash # please enter your executable path herevasp_exec=./vasp_gam #please enter the number of processors used for VASP herenp=8 for i in 0 100 200 300 400 500 600 700 do   cp POSCAR.T\\=$i. POSCAR   mpirun -np $np $vasp_exec   mv OUTCAR OUTCAR.T\\=$idone  ```   To run the script please edit the file and set your VASP executable path (*vasp\\_exec*) and the number of processors you are going to use (*np*). To run the calculation type:  ```bash ./run_temperature.sh  ``` This step produces several OUTCAR files which can be analyzed using the script *extract\\_temp.sh*: **Click to show/*extract\\_temp.sh***  ```!/bin/bash  if [ -f gap_vs_temp.dat ]then   rm gap_vs_temp.dat fi touch gap_vs_temp.datcounter=0 for temp in 0 100 200 300 400 500 600 700 do   i=\"OUTCAR.T=$temp\"    homo1=`awk '/NELECT/ {print $3/2}' $i`   homo2=`awk '/NELECT/ {print $3/2-1}' $i`   homo3=`awk '/NELECT/ {print $3/2-2}' $i`   lumo1=`awk '/NELECT/ {print $3/2+var+1}' $i`   lumo2=`awk '/NELECT/ {print $3/2+var+2}' $i`   lumo3=`awk '/NELECT/ {print $3/2+var+3}' $i`   lumo4=`awk '/NELECT/ {print $3/2+var+4}' $i`   lumo5=`awk '/NELECT/ {print $3/2+var+5}' $i`   lumo6=`awk '/NELECT/ {print $3/2+var+6}' $i`   e1a=`grep \"^    $homo1   \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`   e1b=`grep \"^    $homo2   \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`   e1c=`grep \"^    $homo3   \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`   e2a=`grep \"^    $lumo1   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2b=`grep \"^    $lumo2   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2c=`grep \"^    $lumo3   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2d=`grep \"^    $lumo4   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2e=`grep \"^    $lumo5   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2f=`grep \"^    $lumo6   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`    if [ $temp -eq \"0\" ]   then      ref=`echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f\" |awk '{print (($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)}'` fi    echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f $temp $ref\" |awk '{print $10,(($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)-$11}' >> gap_vs_temp.datdone  ``` To run the script please type the following:  ```bash ./extract_temp.sh  ``` This script calculates the relative change of the band with respect to temperature (that means the offset is shifted to zero). The result is written to *gap\\_vs\\_temp.dat*. To plot the data please type the following:  ```gnuplot -e \"set terminal jpeg;set xlabel 'T (K)'; set ylabel 'band gap'; set style data lines; plot 'gap_vs_temp.dat', 'C_exp_points_offset0.dat' w circles, 'C_exp_fit_offset0.dat'\" > gap_vs_temp.jpg  ```   The resulting curve should look like the following: [](File_Temperature_dependence_of_cd-C_4x4x4.html) The experimental data (blue lines and circles) are taken from reference [\\[3]](#cite_note-ODonnell:APL:1991-3). Temperature dependence of the band gap including volume effects--------------------------------------------------------------- In the previous step, we see that the experimental slope of the temperature dependence of the band gap is underestimated. To improve the agreement we will now also consider the volume dependence. The volume dependence is calculated from quasi\\-harmonic calculations [\\[4]](#cite_note-Baroni:RMG:2010-4).  First save your obtained band gap vs. temperature curve, since it will be overwritten otherwise. Type the following:  ```mv gap_vs_temp.dat gap_vs_temp_novol.dat  ``` Go out of the directory *./TEMP\\_DEPENDENCE* and go to the directory *./QUASI\\_HARMONIC*. For the purpose of this tutorial, the quasi\\-harmonic calculations will be performed for the 4x4x4 cell but for exact calculations, one needs to go to larger cell sizes until the results are converged. There are three scripts in this directory to perform the quasi\\-harmonic calculations: 1. *quasi\\_harm\\_4x4x4\\_diamond\\_create\\_pos\\_and\\_run\\_vasp.sh*2. *quasi\\_harm\\_4x4x4\\_diamond\\_make\\_energy\\_vs\\_volume\\_plots.sh*3. *quasi\\_harm\\_4x4x4\\_diamond\\_obtain\\_fitting.sh* For a quasi\\-harmonic fit we need free energy vs. volume curves at different temperatures. Starting from the equilibrium volume we need to create POSCAR files at different volumes. To do this use the script: **Click to show/*quasi\\_harm\\_4x4x4\\_diamond\\_create\\_pos\\_and\\_run\\_vasp.sh***  ```#! /bin/bash # please enter your executable path herevasp_exec=./vasp_gam #please enter the number of processors used for VASP herenp=8 cp INCAR.qh INCAR for i in 6.13521592 6.27789536 6.4205748 6.56325424 6.70593368 6.84861312 6.99129256 7.133972 7.27665144 7.41933088 7.56201032 7.70468976 7.8473692 7.99004864 8.13272808 dosed \"s/7.13397200/${i}/g\" POSCAR.4x4x4 > POSCAR_$icp POSCAR_$i POSCARmpirun -np 8 $vasp_exec mv OUTCAR OUTCAR_$idone  ``` This script creates 15 POSCAR files where the volume is varied in both directions in steps of 2 percent with respect to the starting volume. It also runs the necessary VASP calculations to obtain the dynamical matrix. To run this script please set your executable path and number of processors in the script and type:  ```bash ./quasi_harm_4x4x4_diamond_create_pos_and_run_vasp.sh  ``` This script renames all the OUTCAR files for each volume which are needed in the next step.In that step the free energy vs. volume curves need to be extracted for each temperature. To do this use the script: **Click to show/*quasi\\_harm\\_4x4x4\\_diamond\\_make\\_energy\\_vs\\_volume\\_plots.sh***  ```#!/bin/bash bandshift=0gwrun=-1dgbd=-1val=-1con=-1gwldadiff=-1test=-1while [[ $# -gt 0 ]] do   key=\"$1\"   case $key in   esac   shiftdone if [ -f \"helpscript.perl\" ]; then   rm helpscript.perl fi cat > helpscript.perl  <<EOF#!/bin/perl use strict;use warnings; my \\$zahler=0;my @entropy=0;my \\$ezp=0;my \\$fhelmholtz=0;my \\$uenergy;my \\$kboltzmann=8.6173303*10**(-5.0);my \\$ntemp=8;my \\$tmax=700;my \\$tmin=0;my \\$tstep=100;for (my \\$itemp=1;\\$itemp<=\\$ntemp;\\$itemp++) {   \\$entropy[\\$itemp]=0; }while (<>) {   chomp;   \\$_=~s/^/ /;   my @help=split(/[\\t,\\s]+/);   \\$zahler=\\$zahler+1;   if (\\$zahler == 1) {\\$uenergy=\\$help[1];}   else  {      my \\$homega=\\$help[2]/1000;      \\$ezp=\\$ezp+\\$homega*0.5;      for (my \\$itemp=1;\\$itemp<=\\$ntemp;\\$itemp++) {         my \\$temp=(\\$itemp-1)*\\$tstep+\\$tmin;         my \\$kbt=\\$kboltzmann*\\$temp;         if (\\$temp < 0.0000001)  { }         else {              \\$entropy[\\$itemp]=\\$entropy[\\$itemp]-\\$kboltzmann*log(1-exp(-\\$homega/\\$kbt));              \\$entropy[\\$itemp]=\\$entropy[\\$itemp]+\\$kboltzmann*\\$homega/\\$kbt*(1/(exp(\\$homega/\\$kbt)-1)); } } }   last if eof; } \\$ezp=\\$ezp; #/ \\$zahler; for (my \\$itemp=1;\\$itemp<=\\$ntemp;\\$itemp++) {    my \\$temp=(\\$itemp-1)*\\$tstep+\\$tmin;     \\$entropy[\\$itemp]=\\$entropy[\\$itemp]; # / \\$zahler;     \\$fhelmholtz=\\$uenergy+\\$ezp-\\$temp*\\$entropy[\\$itemp];    printf (\"%15.8e %15.8e\\",\\$temp,\\$fhelmholtz); }printf (\"#NOTEMP %15.8e\\",\\$uenergy); EOF rm OUTTEMP*first=0for i in OUTCAR_*; do    echo \"Starting $i\"   v2=${i##OUTCAR_}   if [ -f \"helpfile.help\" ]; then      rm helpfile.help fi   touch helpfile.help   cp OUTCAR_$v2 OUTCAR   awk '/free energy/' OUTCAR | tail -n 1| awk '{print $5}' >> helpfile.help   awk '/[0-9]* f .* THz/ {print $1,$10}' OUTCAR >> helpfile.help   awk '/[0-9]* f.i.*THz/ {print $1,$9}' OUTCAR >> helpfile.help   volume=`awk '/volume of cell/ {print $5}' OUTCAR | tail -n 1`    perl helpscript.perl helpfile.help > hhhhelp.txt    runcount=0   while read line; do      runcount=$((runcount+1))      if [[ $first -eq 0 ]]; then         echo $line | awk -v var=\"$volume\" '{print var,$2,$1}' > OUTTEMP_$runcount      else         echo $line | awk -v var=\"$volume\" '{print var,$2}' >> OUTTEMP_$runcount fi   done < ./hhhhelp.txt    first=1done for i in OUTTEMP_*; do   v2=${i##OUTTEMP_}   mv OUTTEMP_$v2 OUTHELP   sort -n -k 1 OUTHELP > OUTTEMP_$v2done rm helpfile.helprm helpscript.perlrm hhhhelp.txtrm OUTHELP  ``` To use this script please type:  ```bash ./quasi_harm_4x4x4_diamond_make_energy_vs_volume_plots.sh  ``` The free energy curves for each volume are saved to *OUTTEMP\\_\\**. Finally to obtain the equilibrium volume at each temperature use the following script: **Click to show/*quasi\\_harm\\_4x4x4\\_diamond\\_obtain\\_fitting.sh***  ```#!/bin/bash for i in OUTTEMP_* do   cp $i OUTTEMP.current   #extract temperature   temp=`head -n 1 OUTTEMP.current|awk '{print $3}'`   #do fitting   gnuplot -e \"E(V)=E0+9.0/8.0*B0*V0*((V0/V)**(2.0/3.0)-1)**2 + 9.0/16.0*B0*\\      (B0P-4)*V0*((V0/V)**(2.0/3.0)-1.0)**3.0 + R*((V0/V)**(2.0/3.0)-1.0)**4.0;\\      B0P = 1;B0 = 1;V0 = 720;E0 = -1150;R  = -1.0;fit E(x) 'OUTTEMP.current'  u 1:2 via B0P,B0,V0,E0,R\" &> suppress_output   #extract volume from fit   a=`grep \"V0\" fit.log|grep \"=\" |tail -n 1|awk '{print ($3/2.0)**(1.0/3.0)}'`   #print temperature and volume to    echo \"temperature: $temp, a_latt: $a\" done rm suppress_outputrm OUTTEMP.current  ``` To run this script type:  ```bash ./quasi_harm_4x4x4_diamond_obtain_fitting.sh  ``` The output should look like the following:  ```temperature: 0.00000000e+00, a_latt: 7.18012temperature: 1.00000000e+02, a_latt: 7.18014temperature: 2.00000000e+02, a_latt: 7.18064temperature: 3.00000000e+02, a_latt: 7.18267temperature: 4.00000000e+02, a_latt: 7.18613temperature: 5.00000000e+02, a_latt: 7.19037temperature: 6.00000000e+02, a_latt: 7.19493temperature: 7.00000000e+02, a_latt: 7.19959temperature: #NOTEMP, a_latt: 7.15218  ``` Now switch back to the folder *./TEMP\\_DEPENDENCE* and replace the lattice parameters at each temperature in the *POSCAR.T\\=\\** files by the one obtained for the above fit. After that rerun the scripts *run\\_temperature.sh* and *extract\\_temp.sh*. To plot the newly obtained curve together with the other curves please type:  ```gnuplot -e \"set terminal jpeg;set xlabel 'T (K)'; set ylabel 'band gap'; set style data lines; plot 'gap_vs_temp_novol.dat', 'C_exp_points_offset0.dat' w circles, 'C_exp_fit_offset0.dat', 'gap_vs_temp.dat'\" > gap_vs_temp_volume.jpg  ``` The resulting plot should look like the following: [](File_Temperature_dependence_of_cd-C_4x4x4_vol.html) Now we see in this plot that by adding volume effects a better agreement with experiment is obtained. For this tutorial, we only used a 4x4x4 cell since larger cells would be already quite time\\-consuming, but for the converged 5x5x5 cell both curves should look slightly worse compared to experiment. A discrepancy between experiment and theory is expected, since the electron exchange and correlation are not sufficiently described within PBE which was used in this example. To get a really excellent agreement one needs to use the GW approximation [\\[5]](#cite_note-karsai:njp:2018-5). Strictly speaking, the correct way to add volume effects to electron\\-phonon interactions would be to first change the volume for each temperature and then calculate the electron\\-phonon interaction for that temperature. In this tutorial and also in reference [\\[5]](#cite_note-karsai:njp:2018-5), it is done the other way around. Hence the electron\\-phonon interactions need to be calculated only once. In reference [\\[5]](#cite_note-karsai:njp:2018-5) we observed that the two approaches give very similar results."}
{"file_name": "ML_AB.md", "content": "This file is used as input (with file name ML\\_AB) and output (ML\\_ABN) within the machine learning force field method. It contains the collection of ab initio data from previous calculations: Bravais matrices, atom positions, energies, forces, and stress tensors. Depending on the mode of operation it is used in the following ways: * **`ML_MODE = train`, starting from scratch:** A complete ML\\_ABN file containing all ab initio data and the list of current local reference configurations is written whenever a learning step is performed (check the line `STATUS` in the log file ML\\_LOGFILE for entries `learning` and `critical`).* **`ML_MODE = train`, continuation run:** Same ML\\_ABN output as above. In addition, upon start\\-up, the user\\-provided ML\\_AB file is read and an initial machine\\-learned force field is generated from the contained data.* **`ML_MODE = select`, reselection of local reference configurations:** Same ML\\_ABN output as for `ML_MODE = train`. The ML\\_AB file is read and the contained structures are fed sequentially to the on\\-the\\-fly training algorithm. The list of local reference configurations in the ML\\_AB file is ignored, however, a dummy section must still be present (see below). | **Tip:** The ML\\_AB file is not required for `ML_MODE = run` (prediction only) because all necessary data (e.g. descriptors of local reference configurations) are already stored in the ML\\_FF file. || --- | An ML\\_ABN output file from `ML_MODE = train, select` can always be reused as input for `ML_MODE = train, select` by just renaming (copying) it to ML\\_AB. Example------- As an example, here is a shortened version of an actual ML\\_AB file:  ``` 1.0 Version**************************************************     The number of configurations-------------------------------------------------- 299**************************************************     The maximum number of atom type-------------------------------------------------- 5**************************************************     The atom types in the data file--------------------------------------------------     Pb I  C     N  H**************************************************     The maximum number of atoms per system-------------------------------------------------- 96**************************************************     The maximum number of atoms per atom type-------------------------------------------------- 48**************************************************     Reference atomic energy (eV)--------------------------------------------------  -72.5297190000000       -35.4081430000000       -2.39269120000000  -4.60003440000000       -1.12020270000000**************************************************     Atomic mass--------------------------------------------------   20.0000000000000        20.0000000000000        12.0110000000000   14.0010000000000        8.00000000000000**************************************************     The numbers of basis sets per atom type--------------------------------------------------       130  1202   128       125   790**************************************************     Basis set for Pb--------------------------------------------------          1      1        100      8          1      3        100      4          1      5          1      6 ... ... ...**************************************************     Basis set for I--------------------------------------------------          1      9          1     10        100     32        100     31          1     13        100     29          1     15          1     16 ... ... ...**************************************************     Basis set for C--------------------------------------------------        100     39        101     40        104     40        101     39        101     38        108     40        101     37 ... ... ...**************************************************     Basis set for N--------------------------------------------------          1     41        100     47          1     43          1     44        100     45          1     46 ... ... ...**************************************************     Basis set for H--------------------------------------------------        101     96        108     96        101     95        101     94        108     95        101     93        101     92 ... ... ...**************************************************     Configuration num.      1==================================================     System name--------------------------------------------------     Optimal==================================================     The number of atom types-------------------------------------------------- 5==================================================     The number of atoms-------------------------------------------------- 96**************************************************     Atom types and atom numbers--------------------------------------------------     Pb      8     I      24     C       8     N       8     H      48==================================================     CTIFOR--------------------------------------------------   7.2153124269575984E-003==================================================     Primitive lattice vectors (ang.)--------------------------------------------------   12.6230002000000       0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000   12.6230002000000       0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000   12.6322002000000==================================================     Atomic positions (ang.)--------------------------------------------------   3.53104385888580        2.84086367297985        2.90622172474177   9.81419124013876        2.65432768009571        3.05638374363947   3.26003769786731        9.08189602171279        2.78238128942769   9.68338433877730        9.01798419847282        3.33422943250601   3.97567522985842        2.30549969401587        9.43194287333753   10.2367187113626        2.60925731212548        9.47119538915201   3.14970369394084        8.58643640964228        9.24921780934012   9.89456550951183        9.28033187172892        9.29623786496524   10.2580847101708        12.3062955711284        3.18366035907868   3.82895321819843        12.3181255490181        2.42031967883849 ... ... ...==================================================     Total energy (eV)--------------------------------------------------  -1844.06244866897==================================================     Forces (eV ang.^-1)--------------------------------------------------  2.660349497586850E-002 -4.547882666592111E-003  0.190783123263071  0.130884508367191       0.299290099652476       1.596358887670635E-002  3.408685056302496E-002 -4.091615555857331E-002  0.178271772476586 -8.681206662816165E-002 -2.646077052932483E-002 -0.627496783708147 -2.387963973365542E-002  0.272206550808848      -0.188554040851596 -0.349175317569579       0.372666466514608       9.810640873955712E-002  0.508292852334109       2.851700722091148E-002 -0.297636066674050 -0.477466544993604      -0.767209034380190       0.537092981997701  1.081052495208487E-002 -0.454162570762754      -2.885905409516716E-002  5.233785861238309E-002 -4.907001101287316E-002  0.357709899123724 ... ... ...==================================================     Stress (kbar)--------------------------------------------------     XX YY ZZ--------------------------------------------------  -12.6559383536223       -8.82753684858342       -13.1791695209263--------------------------------------------------     XY YZ ZX--------------------------------------------------  -1.91691819690402        2.12274173946129       0.103818583636094**************************************************     Configuration num.      2================================================== ... ... ...  ``` General format remarks---------------------- | **Important:** All element\\-dependent quantities must follow the order of the element entries given in the header entry named `The atom types in the data file`. || --- | * All element\\-type\\-dependent information is limited to 3 entries per line. For more than 3 types or multiples of 3, the entries are written over multiple lines.* The order of the entries for the header and also the data is fixed.* The ledger lines cannot be omitted. `*****` and `-----` lines for the header. `*****`, `-----` and `=====` lines for the data. Header specification-------------------- * `1.0 Version`: In the very beginning of the header this entry specifies to the version of the ML\\_AB file. If in the future the contents of the file will be changed or extended the version number will ensure I/O compatibility. If not stated otherwise use `1.0 Version`.* `The number of configurations`: Total number of training structures stored in this ML\\_AB file.* `The maximum number of atom type`: Total number of unique types listed in all structures (e.g. if the file contains some ab initio data for H2O, some data for MgO and some data for NaCl, then the total number of types is 5\\).* `The atom types in the data file`: Listing of all atom types (two characters for each type as in VASP) appearing in all structures. Multiple lines for more than 3 element types. Maximum 3 entries per line.* `The maximum number of atoms per system`: The largest number of atoms within one structure among all training structures.* `The maximum number of atoms per atom type`: The largest number of atoms per element within one structure among all elements within all training structures.* `Reference atomic energy (eV)`: Reference atomic energies used in the calculation for each element type. Multiple lines for more than 3 element types. Maximum 3 entries per line. This entry is only important for `ML_ISCALE_TOTEN = 1`.* `Atomic mass`: Atomic mass of each element type (in u). Multiple lines for more than 3 element types. Maximum 3 entries per line.* `The numbers of basis sets per atom type`: Number of local reference configurations for each type. Multiple lines for more than 3 element types. Maximum 3 entries per line.* `Basis set for X`: List of local reference configurations for each type. This line is followed by a block with two columns. The first column denotes from which training structure the local reference configuration is taken. The second column is the index of the atom in the given training structure that is chosen as a local reference configuration. This whole block (together with the title line) is repeated for each element type in the force field. For `ML_MODE = select` this section is ignored and a new list of local reference configurations will be written to ML\\_ABN. However, upon reading in the ML\\_AB file a dummy line (e.g. only one line with `1 1`) for each type still needs to be present (also set `The numbers of basis sets per atom type` to 1 in this case). | **Warning:** The maximum number of the training structures ML\\_MCONF and the maximum number of the local reference configurations ML\\_MB in the INCAR file have to be set larger than the entries `The number of configurations` and `The numbers of basis sets per atom type` in the ML\\_AB file, respectively. || --- | Training structure data format------------------------------ * `Configuration num. n`: Denotes the beginning of a structure in the training data. Training structures have to be numbered consecutively starting with 1\\.* `System name`: Name of the structure, taken from the POSCAR file which was used to start the `ML_MODE = train` run. Copied from the input ML\\_AB file in case of `ML_MODE = select`. The length of system names is limited to 40 characters.* `The number of atom types`: The number of atom types in the structure. Because the list of types in this structure has to be a subset of all types appearing in the ML\\_AB this number must be smaller or equal to the number given in the header section `The atom types in the data file`.* `The number of atoms`: Number of atoms in the structure.* `Atom types and atom numbers`: Atom types and the number of atoms per type in the structure. Each type is written on a separate line.* `CTIFOR` (*optional*): Value of ML\\_CTIFOR used while sampling this structure. Depending on ML\\_ICRITERIA the value may change between structures. This line is always present if the ML\\_ABN file was created by VASP with `ML_MODE = train`. Then, also continuation and re\\-selection runs with `ML_MODE = train, select` will write out current `CTIFOR` values in ML\\_ABN files. On the other hand, if ML\\_AB files are created from external training data this section may be omitted. In this case `ML_MODE = train, select` runs will also not include `CTIFOR` sections. | **Warning:** Training structures with a value for `CTIFOR` and without must not be combined. Either `CTIFOR` is provided for all structures or none of them. || --- | * `Primitive lattice vectors (ang.)`: Bravais matrix of the structure, one line corresponds to one lattice vector. The unit of length units is Angstrom.* `Atomic positions (ang.)`: Ionic positions in Cartesian coordinates (given in Angstrom). Note that the order of atoms needs to correspond to the atom types list in `Atom types and atom numbers`.* `Total energy (eV)`: Total energy (in eV) of the structure.* `Forces (eV ang.^-1)`: Forces (in eV/Angstrom) for each atom in the structure.* `Stress (kbar)`: 6 entries for the stress tensor (in kb) of the structure. Merging different ML\\_AB files------------------------------ Multiple ML\\_AB files may be merged by hand, keeping the following restrictions and tips in mind: * The training structure data can be simply concatenated, i.e., by just adding more structure sections starting with `Configuration num. n` at the end of the file. However, the structure numbering needs to be updated in such a way that they are enumerated continuously starting from 1\\.* We strongly advise to group structures with the same number of elements and atoms per element in the training data together, otherwise the code will automatically reorder the data, such that those are sticking together. If one relies on the automatic reordering it will not be possible to easily \"diff\" the input ML\\_AB file and its corresponding ML\\_ABN output file.* The header must be adjusted to reflect the combined number of element types, the maximum number of atoms, etc.* The lists of local reference configurations cannot be easily merged (renumbering would be required). Instead, it is recommended to recalculate them using `ML_MODE = select`. However, to start with a valid ML\\_AB file first manually set `The numbers of basis sets per atom type` to 1 for each species. Also, set the block `Basis set for X` with dummy value `1 1` for each species. After running with `ML_MODE = select` the output ML\\_ABN will contain the selected new local reference configurations for the combined training data. | **Tip:** If calculations for `ML_MODE = select` are too time consuming using the default settings it is useful to increase ML\\_MCONF\\_NEW to values around 10\\-16 and set `ML_CDOUB = 4`. This often accelerates the calculations by a factor of 2\\-4\\. || --- |  ---"}
{"file_name": "PHON_NEDOS.md", "content": "PHON\\_NEDOS= \\[integer]n| Default: **PHON\\_NEDOS** | \\= 2000 |  || --- | --- | --- | Description: Sets the number of frequency points to compute the phonon density of states.  --- The density of states is computed between   \\[  \u03c9  min  \u2212 5 \u03c3 ,  \u03c9  max  \\+ 5 \u03c3 ] {\\\\displaystyle \\[\\\\omega \\_{\\\\text{min}}\\-5\\\\sigma ,\\\\omega \\_{\\\\text{max}}\\+5\\\\sigma ]}  with   \u03c9  min {\\\\displaystyle \\\\omega \\_{\\\\text{min}}}  and  \u03c9  max {\\\\displaystyle \\\\omega \\_{\\\\text{max}}}  the lowest and highest phonon frequency and   \u03c3 {\\\\displaystyle \\\\sigma }  the broadening PHON\\_SIGMA. | **Mind:** Only available as of VASP 6\\.4\\.0\\. || --- |"}
{"file_name": "Time_Evolution.md", "content": "Caution: All features presented in this tag are only available from VASP.6 or higher! Description: ALGO \\= TIMEEV calculates the frequency\\-dependent dielectric function using the time evolution algorithm. A standard DFT ground state calculationshould be performed before selecting ALGO \\= TIMEEV.  --- The time evolution algorithm applies a short Dirac delta pulse of electric field and then follows the evolution of the dipole moments. The Green\\-Kubo relation allows calculating the frequency\\-dependent dielectric response function from the time evolution of the dipole moments [\\[1]](#cite_note-kubo:jpsj:1957-1). Details of the implementation are explained in Ref. [\\[2]](#cite_note-sander:prb:15-2). The time evolution algorithm in VASP uses relatively large time steps by projecting, after each time step, onto a specific number of occupied and unoccupied bands. The number of occupied and unoccupied bands are controlled by the tags NBANDSO, NBANDSV, and OMEGAMAX in the same way as for Casida and BSE calculations. This has the advantage that the time evolution results are strictly compatible to the results of the BSE calculations. The disadvantage is that a sufficient number of unoccupied orbitals needs to be calculated in the preceding ground state calculation. Note, however, that unoccupied orbitals are not propagated, which saves computational time. By default, the time propagation code includes the Hartree and local\\-field effects (LHARTREE\\=.TRUE. and LFXC\\=.TRUE.). Results in the independent particle approximation can be calculated by setting LHARTREE\\=.FALSE. and LFXC\\=.FALSE. The two other combinations of these settings (LHARTREE\\=.TRUE. and LFXC\\=.FALSE., or LHARTREE\\=.FALSE. and LFXC\\=.TRUE.) are currently not supported. The number of time steps is chosen usually automatically by VASP. It is inversely proportional to the value of CSHIFT. That is, a large CSHIFT requires less time steps (but yields a more strongly broadened spectrum), whereas a small shift CSHIFT requires more steps. Typically, values of CSHIFT \\= 0\\.1 result in physically meaningful spectra. Alternatively, the number of time steps can be set directly by the tag NELM. In this case, the user\\-defined number of steps needs to be large than 100\\. Otherwise, the value of NELM will be discarded, and the actual number of time steps will be determined by the tag CSHIFT.  Finally, the tag IEPSILON controls the Cartesian direction, along which the Dirac delta pulse is applied. IEPSILON \\= 4 (default) performs three independent calculations for an electric field in x, y and z direction, and thus is the most expensive. VASP provides a number of other routines to calculate the frequency\\-dependent dielectric function. The simplest approach uses the independent particle approximation (LOPTICS \\= .TRUE). Furthermore, one can use ALGO \\= TDHF (Casida/BSE calculations), ALGO \\= GW (GW calculations). For standard DFT, the time propagation algorithm (ALGO \\= TIMEEV) is usually the fastest, whereas for hybrid functionals ALGO \\= TDHF is usually faster. Results of time propagation are strictly identical to ALGO \\= TDHF; ANTIRES \\= 2, if the tags CSHIFT, OMEGAMAX, NBANDSV, and NBANDSO are chosen identical (ANTIRES \\= 2 is required, since time propagation does not apply the Tamm\\-Dancoff approximation).  Example------- A typical calculation requires two steps. First, a ground state calculation:  ```SYSTEM = SiNBANDS = 12\u00a0! even 8 bands suffice for SiISMEAR = 0\u00a0; SIGMA = 0.05ALGO = NLOPTICS = .TRUE.KPAR = 4    \u00a0! assuming we run on 4 cores, this will be the fastest  ```   Second, the actual time propagation:   ```SYSTEM = SiNBANDS = 12 \u00a0! even 8 bands suffice for SiISMEAR = 0\u00a0; SIGMA = 0.05ALGO = TIMEEVIEPSILON = 1\u00a0! cubic system, so response in x direction sufficesNBANDSO = 4 \u00a0; NBANDSV = 8 \u00a0;  CSHIFT = 0.1KPAR = 4    \u00a0! assuming we run on 4 cores, this will be the fastest  ``` In this case, OMEGAMAX is set automatically to the maximal transition energy (about 25 eV in this example). Reducing the number of considered transitions, and thus reducing OMEGAMAX will increase both the duration of time steps and their number. For standard DFT calculations, the time propagation code is so fast that very dense k\\-point grids can often be used.  Related Tags and Sections------------------------- ALGO,CSHIFT,LHARTREE,LFXC,NBANDSV,NBANDSO,OMEGAMAX see also BSE calculations"}
{"file_name": "Choosing_pseudopotentials.md", "content": "Several pseudopotential variants labeled by suffixes exist for many elements. When making a choice, it is necessary to balance computational cost, accuracy, and transferability.  * To set up a minimal working example of your calculation, follow prepare a POTCAR.* Try to create a smaller test calculation and perform your own tests to confirm if the quantity of interest is sensitive to the choice of the pseudopotential. It might be possible to opt for a computationally cheaper POTCAR and gain performance. On the other hand, it could be necessary to opt for a computationally demanding setup to obtain correct results.* With the aspects described in the next section in mind, carefully look over the recommendations for each group in the periodic table. Aspects to refine the choice of pseudopotentials------------------------------------------------ **Aspect 1:** The bond lengths and the valency of the ions. Short bonds will require harder potentials, and semicore states might have to be treated as valence for certain chemical bonding. For some elements, variants for specific valency exist; for example, the suffix \\_2 or \\_3 can be used to describe  fixed divalent or trivalent Lanthanides.**Aspect 2:** The physical or chemical property of interest. If you are only interested in a rough structure optimization, soft potentials (\\_s) with minimal valency may suffice. This approach might also work for phonon calculations that rely on large supercells.On the other hand, when optimizing a magnetic structure, it may be necessary to include semicore states in the valence (\\_pv and \\_sv).For the computation of optical properties, it is crucial to use GW potentials.**Aspect 3:** The method or algorithm used in your calculation. For any calculation involving unoccupied states significantly above the Fermi energy, the \\_GW variants of potentials are superior and should be used. Particularly, all kinds of calculations within many\\-body perturbation theory need a high number of empty bands. Therefore, when GW, BSE, etc. is performed, the GW potentials should be used throughout the workflow.Hartree\\-Fock and hybrid caluclations should *not* be performed with soft potentials (\\_s). Moreover, any calculations where you switch the exchange\\-correlation functional should *not* be performed with soft potentials (\\_s).For standard DFT\\-ground\\-state calculations, using \\_GW or \\_h potentials is usually unnecessary unless, e.g., the property of interest or geometry of the structure demands it.Recommendations and advice-------------------------- ### Recommended PAW potentials The table directly below highlights recommended PAW potentials in **bold**.These potentials are *not ideal* for calculations involving a large number of excited states as needed, e.g., for optical properties or many\\-body perturbation theory. | Standard PBE potentials (potpaw.64\\) | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 | 1*s*1 | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || He\\_AE | 2 | 1*s*2 | 2135\\.871 || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 741\\.689 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.626 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 337\\.25 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Pr\\_h | 13 | 4*f*2\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 400\\.742 || Nd | 14 | 4*f*3\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 338\\.34 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Nd\\_h | 14 | 4*f*3\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 402\\.016 || Pm | 15 | 4*f*4\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 340\\.358 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Pm\\_h | 15 | 4*f*4\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 404\\.406 || Sm | 16 | 4*f*5\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 341\\.177 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Sm\\_h | 16 | 4*f*5\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.382 || Eu | 17 | 4*f*6\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.705 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Eu\\_h | 17 | 4*f*6\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 403\\.212 || Gd | 18 | 4*f*7\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 342\\.859 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Gd\\_h | 18 | 4*f*7\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 407\\.403 || Tb | 19 | 4*f*8\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 340\\.855 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Tb\\_h | 19 | 4*f*8\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.043 || Dy | 20 | 4*f*9\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 341\\.547 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Dy\\_h | 20 | 4*f*9\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.886 || Ho | 21 | 4*f*10\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 343\\.845 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Ho\\_h | 21 | 4*f*10\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 415\\.91 || Er | 22 | 4*f*11\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 346\\.295 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Er\\_h | 22 | 4*f*11\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 429\\.583 || Tm | 23 | 4*f*12\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.206 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Tm\\_h | 23 | 4*f*12\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 419\\.812 || Yb | 24 | 4*f*13\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.312 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Yb\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 188\\.359 || Yb\\_h | 24 | 4*f*13\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 409\\.285 || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.057** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || **Rn** | **8** | **6*s*2 6*p*6** | **151\\.497** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** || Cf | 20 | 5*f*8 6*s*2 6*p*6 6*d*2 7*s*2 | 414\\.614 | The following table highlights recommended PAW potentials for calculations involving many states above the Fermi energy in **bold**.They are optimized for scattering properties high above the Fermi level and thus have advantages if many unoccupied states are involved, as for optical properties or many\\-body perturbation theory. Some results indicate that these GW potentials are also more accurate for ground\\-state\\-DFT calculations[\\[1]](#cite_note-bosoni:natphysrev:2023-1), but the results should be very comparable with the standard potentials in most cases. Unless the uttermost accuracy is required, it is usually not worth paying the extra computational cost required[\\[2]](#cite_note-2) for the GW potentials compared to their standard counterparts. | GW potentials (potpaw.64\\) | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_GW\\_new | 1 | 1*s*1 | 536\\.615 || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_GW\\_new | 3 | 2*s*2 2*p*1 | 318\\.614 || B\\_h\\_GW | 3 | 2*s*2 2*p*1 | 731\\.373 || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 433\\.983 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 741\\.689 || C\\_s\\_GW | 4 | 2*s*2 2*p*2 | 304\\.843 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 452\\.633 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 312\\.986 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 466\\.797 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 480\\.281 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 848\\.626 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **432\\.275** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.853** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.599** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.961** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.774** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.321** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.932** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.627** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.837** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.491** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.645** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **467\\.331** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.665** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.602 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.434** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.313 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.344 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.692 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.232** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.758** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.364** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.872** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.914** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **351\\.044** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **348\\.106** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **351\\.206** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **356\\.093** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.43** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.806** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.771 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.778 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.491 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.618 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.674 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.476 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*1 6*s*1** | **267\\.02** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.688** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **309\\.037** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.658** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **312\\.028** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.053** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.583 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.809** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.193 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.876** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.513 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.847** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.618 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.251** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.529 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **267\\.347** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 329\\.758 | ### Selecting a pseudopotential set Generally, we recommend using the latest release of pseudopotentials. | **Tip:** For compatibility reasons or to accurately reproduce another calculation, you might need to use another (older) pseudopotential release. Consult the list of available pseudopotentials. || --- | ### Hydrogen\\-like atoms with fractional valence Twelve hydrogen\\-like potentials are supplied for a valency between 0\\.25 and 1\\.75\\. Further potentials might become available, c.f. available pseudopotentials. These are useful, e.g., to passivate dangling surface bonds. | **Mind:** The POTCAR files restrict the number of digits for the valency (typically 2, at most 3 digits). Therefor, using three H.33 potentials does yield 0\\.99 electrons and not 1\\.00 electron. This can cause undesirable hole\\- or electron\\-like states. Set the NELECT tag in the INCAR file to correct the total number of electrons. || --- | ### First\\-row elements For the 1st row elements B, C, N, O, and F, three potential versions exist, the plain one, a hard version, and a soft version. For most purposes, the standard version of PAW potentials is most appropriate. They yield reliable results for energy cutoffs between 325 and 400 eV, where 370\\-400 eV are required to predict vibrational properties accurately. Binding geometries and energy differences are already well reproduced at 325 eV. The typical bond\\-length errors for first row dimers (N2, CO, O2) are about 1% compared to more accurate DFT calculations. The hard pseudopotentials (\\_h) give results that are essentially identical to the best DFT calculations presently available (FLAPW, or Gaussian with very large basis sets). The soft potentials (\\_s) are optimized to work around 250\\-280 eV. They yield reliable description for most oxides, such as VxOy, TiO2, CeO2, but fail to describe some structural details in zeolites, i.e., cell parameters, and volume.For Hartree\\-Fock (HF) and hybrid\\-functional calculations, we strictly recommend using the standard, standard GW, or hard potentials. For instance, the O\\_s potential can cause unacceptably large errors even in transition metal oxides. Generally, the soft potentials are less transferable from one exchange\\-correlation functional to another and often fail when the exact exchange needs to be calculated. | **Tip:** If dimers with short bonds are present in the system (H2O, O2, CO, N2, F2, P2, S2, Cl2), we recommend using the \\_h potentials. Specifically, C\\_h, O\\_h, N\\_h, F\\_h, P\\_h, S\\_h, Cl\\_h, or their \\_GW counterparts. Otherwise, the standard version is often the best choice for first\\-row elements. || --- | ### Alkali and alkali\\-earth elements (simple metals) For Li (and Be), a standard potential and a potential that treats the 1*s* shell as valence states are available (Li\\_sv, Be\\_sv). One should use the \\_sv potentials for many applications since their transferability is much higher than the standard potentials.For the other alkali and alkali\\-earth elements, the semi\\-core *s* and *p* states should be treated as valence states as well. For lighter elements (Na\\-Ca), it is usually sufficient to treat the 2*p* and 3*p* states as valence states (\\_pv), respectively. For Rb\\-Sr, the 4*s*, 4*p*, and 5*s*, 5*p* states, must be treated as valence states (\\_sv). | **Tip:** For alkali and alkali\\-earth metals, the \\_sv variants should be chosen, other than for very light elements Na, Mg, K, and Ca, where \\_pv is usually sufficient. || --- | ### p\\-elements For Ga, Ge, In, Sn, Tl\\-At, the lower\\-lying *d* states should be treated as valence states (\\_d potential). For these elements, alternative potentials that treat the *d* states as core states are also available but should be used with great care.### d\\-elements For the *d* elements, applies the same as for the alkali and earth\\-alkali metals: the semi\\-core *p* states and possibly the semi\\-core *s* states should be treated as valence states. In most cases, however, reliable results can be obtained even if the semi\\-core states are kept frozen.When to switch from X\\_pv potentials to the X potentials depends on the required accuracy and the row for the 3*d* elements, even the Ti, V, and Cr potentials give reasonable results but should be used with uttermost care. 4*d* elements are the most problematic, and we advise using the X\\_pv potentials up to Tc\\_pv. For 5*d* elements the 5*p* states are rather strongly localized (below 3 Ry), since the 4*f* shell becomes filled. One can use the standard potentials starting from Hf, but we recommend performing test calculations. For some elements, X\\_sv potentials are available (,e.g., Nb\\_sv, Mo\\_sv, Hf\\_sv). These potentials usually have very similar energy cutoffs as the \\_pv potentials and can also be used. For HF\\-type and hybrid\\-functional calculations, we strongly recommend using the \\_sv and \\_pv potentials whenever possible. | **Tip:** As a rule of thumb the *p* states should be treated as valence states for d\\-elements, if their eigenenergy     \u03f5   {\\\\displaystyle \\\\epsilon }  \\epsilon  lies above 3 Ry. || --- | ### f\\-elements Due to self\\-interaction errors, *f* electrons are not handled well by the presently available density functionals. In particular, partially filled *f* states are often incorrectly described. For instance, all *f* states are pinned at the Fermi\\-level, leading to large overbinding for Pr\\-Eu and Tb\\-Yb. The errors are largest at quarter and three\\-quarter filling, e.g., Gd is handled reasonably well since 7 electrons occupy the majority *f* shell. These errors are DFT and not VASP related.Particularly problematic is the description of the transition from an itinerant (band\\-like) behavior observed at the beginning of each period to localized states towards the end of the period. For the 4*f* elements, this transition occurs already in La and Ce, whereas the transition sets in for Pu and Am for the 5*f* elements. A routine way to cope with the inabilities of present DFT functionals to describe the localized 4*f* electrons is to place the 4*f* electrons in the core. Such potentials are available and described below; however, they are expected to fail to describe magnetic properties arising *f* orbitals. Furthermore, PAW potentials in which the *f* states are treated as valence states are available, but these potentials are expected to fail to describe electronic properties when *f* electrons are localized. In this case, one might treat electronic correlation effects more carefully, e.g., by employing hybrid functionals or introducing on\\-site Coulomb interaction.For some elements, soft versions (\\_s) are available as well. The semi\\-core *p* states are always treated as valence states, whereas the semi\\-core *s* states are treated as valence states only in the standard potentials. For most applications (oxides, sulfides), the standard version should be used since the soft versions might result in *s* ghost\\-states close to the Fermi\\-level (,e.g., Ce\\_s in ceria). The soft versions are, however, expected to be sufficiently accurate for calculations on intermetallic compounds.#### Lanthanides with fixed valence In addition, special GGA potentials are supplied for Ce\\-Lu, in which *f* electrons are kept frozen in the core, which is an attempt to treat the localized nature of *f* electrons. The number of f electrons in the core equals the total number of valence electrons minus the formal valency. For instance, according to the periodic table, Sm has a total of 8 valence electrons, i.e., 6 *f* electrons and 2 *s* electrons. In most compounds, Sm adopts a valency of 3; hence 5 *f* electrons are placed in the core when the pseudopotential is generated. The corresponding potential can be found in the directory Sm\\_3\\. The formal valency n is indicted by \\_n, where n is either 3 or 2\\. Ce\\_3 is, for instance, a Ce potential for trivalent Ce (for tetravalent Ce, the standard potential should be used). | **Warning:** *f*\\-elements are notoriously hard to describe with DFT due to self\\-interaction errors in the strongly localized orbitals. Placing some, or all, 4*f* electrons in the core can rectify this issue, but then the description of magnetism will fail and transferability will suffer. || --- | | **Tip:** If you are not interested in 4*f*\\-magnetism, and know the valency of your lanthanide, use the \\_2 or \\_3 potentials. || --- | ### Test your setup Even if you have taken a lot of care to optimize your pseudopotential choice, it is always good to perform some test calculations with other potentials, if necessary on a small prototype system. You might realize that you need extra accuracy, or that you are leaving performance on the table by using unnecessarily hard POTCARs for your problem.Related tags and sections------------------------- POTCAR, Prepare a POTCAR, Available pseudopotentials Theoretical background: Pseudopotentials, Projector\\-augmented\\-wave formalism"}
{"file_name": "DFT-D2.md", "content": "In the DFT\\-D2 method of Grimme[\\[1]](#cite_note-grimme:jcc:06-1), the correction term takes the form:  \\= \u2212  1 2  \u2211  i \\= 1  N  a t  \u2211  j \\= 1  N  a t  \u2211  L  \u2032  C  6 i j  r  i j , L  6  f  d , 6  (  r  i j ,  L  ) {\\\\displaystyle E\\_{\\\\mathrm {disp} }\\=\\-{\\\\frac {1}{2}}\\\\sum \\_{i\\=1}^{N\\_{at}}\\\\sum \\_{j\\=1}^{N\\_{at}}\\\\sum \\_{\\\\mathbf {L} }{}^{\\\\prime }{\\\\frac {C\\_{6ij}}{r\\_{ij,L}^{6}}}f\\_{d,6}({r}\\_{ij,\\\\mathbf {L} })} where the first two summations are over all   N  a t {\\\\displaystyle N\\_{at}}  atoms in the unit cell and the third summation is over all translations of the unit cell   L  \\= (  l  1  ,  l  2  ,  l  3  ) {\\\\displaystyle {\\\\mathbf {L} }\\=(l\\_{1},l\\_{2},l\\_{3})}  where the prime indicates that   i \u2260 j {\\\\displaystyle i\\\ot \\=j}  for  L  \\= 0 {\\\\displaystyle {\\\\mathbf {L} }\\=0}  .  C  6 i j {\\\\displaystyle C\\_{6ij}}  denotes the dispersion coefficient for the atom pair   i j {\\\\displaystyle ij}  ,  r  i j ,  L {\\\\displaystyle {r}\\_{ij,\\\\mathbf {L} }}  is the distance between atom   i {\\\\displaystyle i}  located in the reference cell   L  \\= 0 {\\\\displaystyle \\\\mathbf {L} \\=0}  and atom   j {\\\\displaystyle j}  in the cell   L {\\\\displaystyle L}  and the term   f (  r  i j  ) {\\\\displaystyle f(r\\_{ij})}  is a damping function whose role is to scale the force field such as to minimize the contributions from interactions within typical bonding distances. In practice, the terms in the equation for  {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  corresponding to interactions over distances longer than a certain suitably chosen cutoff radius (VDW\\_RADIUS, see below) contribute only negligibly to  {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  and can be ignored. Parameters   C  6 i j {\\\\displaystyle C\\_{6ij}}  and  R  0 i j {\\\\displaystyle R\\_{0ij}}  are computed using the following combination rules:  C  6 i j  \\=  C  6 i i  C  6 j j {\\\\displaystyle C\\_{6ij}\\={\\\\sqrt {C\\_{6ii}C\\_{6jj}}}}  and  R  0 i j  \\=  R  0 i  \\+  R  0 j  . {\\\\displaystyle R\\_{0ij}\\=R\\_{0i}\\+R\\_{0j}.} The values for   C  6 i i {\\\\displaystyle C\\_{6ii}}  and  R  0 i {\\\\displaystyle R\\_{0i}}  are tabulated for each element and are insensitive to the particular chemical situation (for instance,   C  6 {\\\\displaystyle C\\_{6}}  for carbon in methane takes exactly the same value as that for C in benzene within this approximation). In the DFT\\-D2 method, a Fermi\\-type damping function is used:  f  d , 6  (  r  i j  ) \\=  s  6  1 \\+  e  \u2212 d (  r  i j  /  (  s  R  R  0 i j  ) \u2212 1 ) {\\\\displaystyle f\\_{d,6}(r\\_{ij})\\={\\\\frac {s\\_{6}}{1\\+e^{\\-d(r\\_{ij}/(s\\_{R}\\\\,R\\_{0ij})\\-1\\)}}}} whereby the global scaling parameter   s  6 {\\\\displaystyle s\\_{6}}  has been optimized for several different DFT functionals such as PBE (  s  6  \\=0\\.75 {\\\\displaystyle s\\_{6}\\=0\\.75} ), BLYP (  s  6  \\=1\\.2 {\\\\displaystyle s\\_{6}\\=1\\.2} ) or B3LYP (  s  6  \\=1\\.05 {\\\\displaystyle s\\_{6}\\=1\\.05} ). The parameter   s  R {\\\\displaystyle s\\_{R}}  is usually fixed at 1\\.00\\. The DFT\\-D2 method can be activated by setting IVDW\\=*1\\|10* or by specifying LVDW\\=*.TRUE.* (this parameter is obsolete as of VASP.5\\.3\\.3\\). Optionally, the damping function and the vdW parameters can be controlled using the following flags (the given values are the default ones): * VDW\\_RADIUS\\=50\\.0\u00a0: cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for pair interactions* VDW\\_S6\\=0\\.75\u00a0: global scaling factor   s  6 {\\\\displaystyle s\\_{6}}  (available in VASP.5\\.3\\.4 and later)* VDW\\_SR\\=1\\.00\u00a0: scaling factor   s  R {\\\\displaystyle s\\_{R}}  (available in VASP.5\\.3\\.4 and later)* VDW\\_SCALING\\=0\\.75\u00a0: the same as VDW\\_S6 (obsolete as of VASP.5\\.3\\.4\\)* VDW\\_D\\=20\\.0\u00a0: damping parameter   d {\\\\displaystyle d} * VDW\\_C6\\=\\[real array]\u00a0:   C  6 {\\\\displaystyle C\\_{6}}  parameters (  J n m  6  m o l  \u2212 1 {\\\\displaystyle \\\\mathrm {Jnm} ^{6}\\\\mathrm {mol} ^{\\-1}} ) for each species defined in the POSCAR file* VDW\\_R0\\=\\[real array]\u00a0:   R  0 {\\\\displaystyle R\\_{0}}  parameters (  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for each species defined in the POSCAR file* LVDW\\_EWALD\\=*.FALSE.*\u00a0: the lattice summation in  {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  expression is computed by means of Ewald's summation (*.TRUE.* ) or via a real space summation over all atomic pairs within cutoff radius VDW\\_RADIUS (*.FALSE.*). (available in VASP.5\\.3\\.4 and later) The performance of PBE\\-D2 method in optimization of various crystalline systems has been tested systematically in reference [\\[2]](#cite_note-bucko:jpca:10-2).   | **Important:** It is recommended to use the more advanced and more accurate method DFT\\-D3.[\\[3]](#cite_note-grimme:jcp:10-3) || --- |   | **Mind:*** The defaults for VDW\\_C6 and VDW\\_R0 are defined only for elements in the first five rows of the periodic table (i.e. H\\-Xe). If the system contains other elements the user has to define these parameters in INCAR. * The defaults for parameters controlling the damping function (VDW\\_S6, VDW\\_SR, VDW\\_D) are available for the PBE (GGA\\=PE), BP, revPBE, PBE0, TPSS, and B3LYP functionals. If any other functional is used in a DFT\\-D2 calculation, the value of VDW\\_S6 (or VDW\\_SCALING in versions before VASP.5\\.3\\.4\\) has to be defined in INCAR. * As of VASP.5\\.3\\.4, the default value for VDW\\_RADIUS has been increased from 30 to 50       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA . * Ewald's summation in the calculation of            {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  E_{{{\\mathrm  {disp}}}} calculation (controlled via LVDW\\_EWALD) is implemented according to reference [\\[4]](#cite_note-kerber:jcc:08-4) and is available as of VASP.5\\.3\\.4\\. || --- |"}
{"file_name": "CUDA-C_GPU_port_of_VASP.md", "content": "| **Warning:** As of VASP.6\\.3\\.0, the CUDA\\-C GPU port of VASP is deprecated. Switch to the OpenACC GPU port of VASP. || --- | Several core algorithms of VASP have been ported to run on GPU\\-accelerated hardware (as of VASP.5\\.4\\.1\\.05Feb16\\). Explicity ported to run on GPU\\-accelerated hardware * Electronic minimisation: the blocked\\-Davidson and RMM\\-DIIS algorithms (ALGO\\= Normal, Fast, and VeryFast).* Hybrid functionals: the action of the Fock\\-exchange potential on the wave functions (LHFCALC\\=.TRUE.). Unsuported (for now)* LREAL\\=.FALSE. is currently unsuported . The GPU port of VASP requires the use of real\\-space\\-projection operators (i.e., LREAL\\= Auto \\| .TRUE.).* LCALCEPS\\=.TRUE.* NCORE \u2260 1 (or equivalently: NPAR \u2260 *\\#of\\-MPI\\-ranks* / KPAR) is not supported at the moment. The GPU port of VASP requires NCORE\\=1 (default).* Using scaLAPACK for the orthonormalization of the wave functions is not supported by the GPU port of VASP. Actually, this particular operation has been ported to the GPU (just not by means of scaLAPACK). If you have compiled your code with `-DscaLAPACK` you have to set:  ```LSCAAWARE = .FALSE.  ``` in your INCAR to avoid the use of scaLAPACK for the orthonormalization of the wave functions.* The gamma\\-only version of VASP has not been ported to GPU (yet).   **N.B.**: The GPU port of VASP is freely available to VASP5\\-licensees.  Hardware/Software requirements------------------------------ ### Hardware requirements Required GPU Architecture is Kepler or newer: * Tesla K40 or Tesla K80, with 12 and 24 GB memory respectively, are strongly recommended* Tesla K20 and Tesla K20X, with 5 GB and 6 GB respectively, may run out of memory on larger problems ### Recommended software stack * CUDA toolkit, newer is better but anything \\>\\=6\\.5 should work Usage----- ### Building * See Installing VASP\") and do not forget the patch(es)\"). ### Running People------ The GPU port of VASP only exist because of the excellent work of the following people: * Maxwell Hutchinson (University of Chicago) and Mike Widom (Carnegie Mellon)* Xavier Rozanska and Paul Fleurat\\-Lessard (ENS\\-Lyon)* Mohamed Hacene, Ani Anciaux\\-Sedrakian, Diego Klahr, and Thomas Guignon (IFPEN)* Jeroen Bedorf, Przemyslaw Tredak, Dusan Stosic, Arash Ashari, Paul Springer, Darko Stosic, Christoph Angerer, and Sarah Tariq (NVIDIA) Publications------------ * *Accelerating VASP Electronic Structure Calculations Using Graphic Processing Units*, M. Hacene *et al.*, J. Comput. Chem. 33, 2581 (2012\\).* *VASP on a GPU: Application to exact\\-exchange calculations of the stability of elemental boron*, M. Hutchinson and W. Widom, Comput. Phys. Comm. 183, 1422 (2012\\).* *Electronic Structure Calculations on Graphics Processing Units: From Quantum Chemistry to Condensed Matter Physics*, Ross Walker and Andreas Goetz (Editors), John Wiley \\& Sons, Inc., UK.* *Speeding up plane\\-wave electronic\\-structure calculations using graphics\\-processing units*, S. Mainz *et al.*, Comput. Phys. Comm. 182, 1421 (2011\\). Additional information---------------------- * The presentation at SC15 by GPU developer Max Hutchinson.* GTC 2013 audio \\& video presentation on the development of GPU\\-accelerated VASP.* Dr. Peter Larsson's blog (National Supercomputer Centre at Link\u00f6ping University, Sweden). Related Tags and Sections------------------------- ALGO,LHFCALC,LREAL,LCALCEPS,Installing VASP\")  ---"}
{"file_name": "Bandstructure_and_CRPA_of_SrVO3.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorials Task---- Calculation of the GW bandstructure of SrVO3 using VASP and WANNIER90.  --- Performing a GW calculation with VASP is a 3\\-step procedure: a DFT groundstate calculation, a calculation to obtain a number of virtual orbitals, and the actual GW calculation itself.In this example we will also see how the results of the GW calculation may be postprocessed with WANNIER90 to obtain the dispersion of the bands along the usual high symmetry directions in reciprocal space. **N.B.:** This example involves quite a number of individual calculations.The easiest way to run this example is to execute:  ```./doall.sh  ``` And compare the output of the different steps (DFT, GW, HSE) by:  ```./plotall.sh  ``` In any case, one can consider the doall.sh script to be an overview of the steps described below. DFT groundstate calculation--------------------------- The first step is a conventional DFT (in this case PBE) groundstate calculation. * INCAR (see INCAR.DFT)  ```SYSTEM  = SrVO3                        # system nameNBANDS = 36                            # small number  of bandsISMEAR = 0                             # Gaussian smearingEDIFF = 1E-8                           # high precision for groundstate calculationKPAR = 2                               # parallelization of k-points in two groups  ``` Copy the aforementioned file to INCAR:  ```cp INCAR.DFT INCAR  ``` The POSCAR file describes the structure of the system: * POSCAR  ```SrVO33.84652  #cubic fit for 6x6x6 k-points +1.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.0000000000 Sr V O 1 1 3Direct +0.0000000000  +0.0000000000  +0.0000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.5000000000  ``` This file remains unchanged in the following. The KPOINTS file describes how the first Brillouin zone is sampled.In the first step we use a uniform k\\-point sampling: * KPOINTS (see KPOINTS.BULK)  ```Automatically generated mesh 0Gamma 4 4 4 0 0 0  ``` **Mind**: this is definitely not dense enough for a high\\-quality description of SrVO3, but in the interest of speed we will live with it.Copy the aforementioned file to KPOINTS:  ```cp KPOINTS.BULK KPOINTS  ``` and run VASP. If all went well, one should obtain a WAVECAR file containing the PBE wavefunction. Obtain DFT virtual orbitals and long\\-wave limit------------------------------------------------ Use following INCAR file to increase the number of virtual states and to determine the long\\-wave limit of the polarizability (stored in WAVEDER): * INCAR (see INCAR.DIAG)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingKPAR = 2                               # parallelization of k-points in two groupsALGO = Exact                           # exact diagonalizationNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 96                            # need for a lot of bands in GWLOPTICS = .TRUE.                       # we need d phi/ d k  for GW calculations for long-wave limit  ``` Restart VASP.At this stage it is a good idea to make a safety copy of the WAVECAR and WAVEDER files since we will repeatedly need them in the calculations that follow:   ```cp WAVECAR WAVECAR.DIAGcp WAVEDER WAVEDER.DIAG  ``` Also make a backup of the charge density for later:  ```cp CHGCAR CHGCAR.DIAG  ``` ### The dielectric function As a bonus, VASP determines the frequency dependent dielectric function in the independent\\-particle (IP) picture and writes the result to the OUTCAR and vasprun.xml\") files.In the OUTCAR you should search for  ``` frequency dependent IMAGINARY DIELECTRIC FUNCTION (independent particle, no local field effects)  ```  and  ``` frequency dependent      REAL DIELECTRIC FUNCTION (independent particle, no local field effects)  ``` To visualize the real and imaginary parts of the frequency dependent dielectric function (from the vasprun.xml\")) you may execute  ```./plotoptics2  ``` GW Step------- The actual GW calculation requires a set of one\\-electron energies and eigenstates. In this case we use the PBE solution obtained from previous step:  ```cp WAVECAR.DIAG WAVECARcp WAVEDER.DIAG WAVEDER  ``` The following INCAR file selects the 'single shot' GW calculation also known as G0W0: * INCAR (see INCAR.GW0\\)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingKPAR = 2                               # parallelization of k-points in two groupsALGO = GW0                             # GW with iteration in G, W kept on DFT levelNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 96                            # need for a lot of bands in GWPRECFOCK = Fast                        # fast mode for FFTsENCUTGW = 100                          # small energy cutoff for response function suffices for this tutorialNOMEGA = 200                           # large number of real frequency points for Hilbert transforms of W and self-energy  ``` Restarting VASP will overwrite the present WAVECAR and vasprun.xml\") file. Make a copy them for later.   ```cp WAVECAR WAVECAR.GW0cp vasprun.xml\") vasprun.GW0.xml  ``` ### The dielectric function To extract the frequency dependent dielectric constant, both in the independent\\-particle picture as well as including local field effects (either in DFT or in the RPA) and plot the real and imaginary components using *gnuplot*, execute  ```./plotchi  ``` HSE hybrid functional--------------------- To illustrate the kind of results one would obtain for SrVO3 using the DFT/Hartree\\-Fock hybrid functional HSE, without actually doing a full self\\-consistent calculation, we will recalculate the one\\-electron energies and DOS (ALGO\\=Eigenval) using the HSE functional with DFT orbitals as input  ```cp WAVECAR.DIAG WAVECAR  ``` Use the following INCAR file: * INCAR (see INCAR.HSE)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingKPAR = 2                               # parallelization of k-points in two groupsALGO = Eigenval                        # calulate eigenvaluesNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 48                            # small number of bands sufficePRECFOCK = Fast                        # fast mode for FFTsLHFCALC = .TRUE.                       # switch on Hartree-Fock routines to calculate exact exchangeHFSCREEN = 0.2                         # HSE06 screening parameter  ``` Restart VASP and make a copy of the wavefunction for post\\-processing  ```cp WAVECAR WAVECAR.HSE  ``` Post\\-processing: Density of states and Bandstructure for PBE, GW and HSE------------------------------------------------------------------------- ### Density of States The DOS of the PBE, GW and HSE solution can be calculated in a post\\-processing step with  * INCAR (see INCAR.DOS)  ```SYSTEM = SrVO3                         # system nameISMEAR = -5                            # Bloechl's tetrahedron method (requires at least 3x3x3 k-points)ALGO = NONE                            # no electronic changes requiredNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 48                            # number of bands usedEMIN = -20\u00a0; EMAX = 20                 # smallest/largest energy included in calculationNEDOS = 1000                           # sampling points for DOSLORBIT = 11                            # calculate l-m decomposed DOSLWAVE = .FALSE.                        # do not overwrite WAVECARLCHARG = .FALSE.                       # do not overwrite CHGCAR  ``` and requires the apropriate WAVECAR file from one of the previous steps. Copy   ```cp WAVECAR.DIAG WAVECAR  ```  or  ```cp WAVECAR.GW0 WAVECAR  ```  or  ```cp WAVECAR.HSE WAVECAR  ``` and restart VASP. The density of states is written to DOSCAR, make a copy of this file   ```cp DOSCAR DOSCAR.XXX  ``` where XXX is either PBE, GW0 or HSE. Visualize the projected DOS for the V\\-t2g, V\\-eg and O\\-p states with the scriptfile  ```./plotdos.sh DOSCAR.*  ``` This requires gnuplot to be installed. ### Bandstructure with wannier90 The bandstructure can be calculated via Wannier interpolation using wannier90 in the library mode * INCAR (see INCAR.WAN)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingALGO = NONE                            # no electronic changes requiredNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 48                            # number of bands usedLWAVE = .FALSE.                        # do not overwrite WAVECARLCHARG = .FALSE.                       # do not overwrite CHGCARLWANNIER90_RUN = .TRUE.                # run wannier90 in library mode  ``` Use the corresponding wannier90\\.win.XXX file as input for wannier90  ```cp wannier90.win.XXX wannier90.win  ``` where XXX\\=PBE, GW0 or HSE and looks similar to  ```bands_plot = true begin kpoint_pathR  0.50000000  0.50000000  0.50000000  G  0.00000000  0.00000000  0.00000000G  0.00000000  0.00000000  0.00000000  X  0.50000000  0.00000000  0.00000000X  0.50000000  0.00000000  0.00000000  M  0.50000000  0.50000000  0.00000000M  0.50000000  0.50000000  0.00000000  G  0.00000000  0.00000000  0.00000000end kpoint_path # number of wannier statesnum_wann =    3 # number of bloch bandsnum_bands=   96 # GW energy window for t2g statesdis_win_min = 7.4dis_win_max = 9.95 begin projectionsV:dxy;dxz;dyzend projections  ``` Use the corresponding WAVECAR.XXX file as input  ```cp WAVECAR.XXX WAVECAR  ``` and restart VASP. If all went well, the Vanadium t2g band dispersion thus obtained, may conveniently be visualized with gnuplot:   ```gnuplot -persist ./wannier90_band.gnu  ``` **N.B.:** Most modern versions of gnuplot will respond with an error message unless you remove the first line of wannier90\\_band.gnu (some deprecated syntax issue).### Alternative way to calculate the PBE bandstructure VASP allows to interpolate the PBE bandstructure from the PBE charge density  ``` cp CHGCAR.DIAG CHGCAR cp WAVECAR.DIAG WAVECAR  ``` by adapting the KPOINTS file as follows: * KPOINTS (see KPOINTS.BSTR)  ```Auto 15Linemodereciprocal0.50000000  0.50000000  0.50000000   !R0.00000000  0.00000000  0.00000000   !G 0.00000000  0.00000000  0.00000000   !G0.50000000  0.00000000  0.00000000   !X 0.50000000  0.00000000  0.00000000   !X0.50000000  0.50000000  0.00000000   !M  0.50000000  0.50000000  0.00000000   !M0.00000000  0.00000000  0.00000000   !G  ``` The following INCAR file tells VASP to interpolate the bandstructure: * INCAR (see INCAR.BSTR)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingEDIFF = 1E-7                           # tight convergence criterionNBANDS = 36                            # 36 bands are sufficientLWAVE = .FALSE.                        # do not overwrite WAVECARLCHARG = .FALSE.                       # do not overwrite CHGCARICHARG = 11                            # use CHGCAR file for interpolationLORBIT = 11                            # compute lm-decomposed statesEMIN = -20\u00a0; EMAX = 20                 # smallest/largest energy included in calculationNEDOS = 1000                           # sampling points for DOS  ``` This PBE bandstructure and the Wannier\\-interpolated structures of the PBE, HSE and GW calculation can be compared via  ```./plotbands.sh  ``` **N.B.:** Mind that this approach works only for DFT wavefunctions, like PBE or LDA.Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsBack to the main page."}
{"file_name": "ML_LOGFILE.md", "content": "Every VASP run with activated machine learning (INCAR contains ML\\_LMLFF \\= .TRUE.) will generate a file called ML\\_LOGFILE. In this log file a summary of settings and the development of quantities related to machine learning are presented in a compact, yet human\\-readable and post\\-processing friendly way. It complements the usual ab initio log output in the OUTCAR and OSZICAR files for machine learning VASP runs. File layout----------- The machine learning log file is split into multiple sections, visually separated like this:  ```* SECTION TITLE **************************************************************************************************************************** ... content ... ********************************************************************************************************************************************  ``` The actual composition of log sections may depend on the machine learning mode of operation (see ML\\_MODE). Usually, in the beginning there will be a couple of sections describing the estimated memory consumption, machine learning settings and preexisting data. Then follows the main loop, which is split into a header and the actual loop body containing data describing the learning progress (`ML_MODE = train`) or prediction (`ML_MODE = run`). Finally, there may be sections about actual memory consumption and timing statistics. The following chapters describe the contents of the log file sections in more detail: ### Memory consumption estimation This is usually the first section of the ML\\_LOGFILE and contains an **estimation** of memory requirements based on VASP files read on startup. In the simplest case (`ML_MODE = train`) it depends on the settings in the INCAR and POSCAR file. For example, the expected memory consumption may vary with the number of elements present in the POSCAR file. Various INCAR tags also influence the memory demand, e.g. ML\\_MB or ML\\_MRB2. A continuation or prediction run, i.e., `ML_MODE = train` with ML\\_AB present or `ML_MODE = run`, may also take settings from the files ML\\_AB or ML\\_FF into account.  ```* MEMORY INFORMATION *********************************************************************************************************************** Estimated memory consumption for ML force field generation (MB): Persistent allocations for force field       \u00a0:    516.9 ||-- CMAT for basis                           \u00a0:     20.3|-- FMAT for basis                           \u00a0:    458.5|-- DESC for basis                           \u00a0:      2.6|-- DESC product matrix                      \u00a0:      2.3 Persistent allocations for ab initio data    \u00a0:      8.1 ||-- Ab initio data                           \u00a0:      7.8|-- Ab initio data (new)                     \u00a0:      0.3 Temporary allocations for sparsification     \u00a0:    460.9 ||-- SVD matrices                             \u00a0:    460.7 Other temporary allocations                  \u00a0:     15.5 ||-- Descriptors                              \u00a0:      4.7|-- Regression                               \u00a0:      6.5|-- Prediction                               \u00a0:      4.2 Total memory consumption                     \u00a0:   1001.4 ********************************************************************************************************************************************  ``` While the individual items in the above listing are of rather technical nature the most important number is given in the last line: `Total memory consumption` approximates the peak memory usage during this VASP run. However, since not all memory is always allocated at the same time the actual consumption may vary over time. The following part summarizes which kind of parallelization each parts employ: |  | scaLAPACK | shared memory || --- | --- | --- || CMAT for basis | x | x || FMAT for basis | x |  || DESC for basis | x | x || DESC product matrix | x |  || Ab initio data |  |  || Ab initio data (new) |  |  || SVD matrices | x |  || Descriptors |  |  || Regression | x |  || Prediction |  |  | The parts marked with an *x* for scaLAPACK contain block\\-cyclic distributed arrays that usually scale almost perfectly with the number of employed processors. The user will see that by increasing the number of processors the amount of memory needed will significantly drop for that part (we not that also `Descriptors` and `Prediction` will drop in memory, but only slightly since only minor parts of these are distributed). The parts marked with an *x* for shared memory show also a significant decrease of memory usage if the code is compiled for shared memory (precompiler option *use\\_shmem*). The risks of shared memory usage are explained here.  | **Mind:** This is only an estimate, the actual memory requirement may be even higher. Moreover, this is only the usage for the machine learning part of VASP which in a training run adds up to the memory of the ab initio part. || --- | ### Machine learning setup This section gives an overview of the most important INCAR tags concerning machine learning settings. The tags are grouped by topics and the tabular layout provides a short description, the current value and a \"state indicator\" (see the actual section header for an explanation).  ```* MACHINE LEARNING SETTINGS **************************************************************************************************************** This section lists the available machine-learning related settings with a short description, theirselected values and the INCAR tags. The column between the value and the INCAR tag may contain a\"state indicator\" highlighting the origin of the value. Here is a list of possible indicators:  *    \u00a0: (empty) Tag was not provided in the INCAR file, a default value was chosen automatically. * (I)\u00a0: Value was provided in the INCAR file. * (i)\u00a0: Value was provided in the INCAR file, deprecated tag. * (!)\u00a0: A value found in the INCAR file was overwritten by the contents of the ML_FF file. * (?)\u00a0: The value for this tag was never set (please report this to the VASP developers). Tag values with associated units are given here in Angstrom/eV, if not specified otherwise. Please refer to the VASP online manual for a detailed description of available INCAR tags. General settings--------------------------------------------------------------------------------------------------------------------------------------------Machine learning operation mode in strings (supertag)                                                \u00a0:         REFIT (I) ML_MODE       Machine learning operation mode                                                                      \u00a0:             4     ML_ISTART     Precontraction of weights on Kernel for fast execution (ML_ISTART=2 only), but no error estimation   \u00a0:             T     ML_LFAST      Controls the verbosity of the output at each MD step when machine learning is used                   \u00a0:             1     ML_OUTPUT_MODESets the output frequency at various places for ML_ISTART=2                                          \u00a0:             1     ML_OUTBLOCK  Descriptor settings--------------------------------------------------------------------------------------------------------------------------------------------Radial descriptors:-------------------Cutoff radius of radial descriptors                                                                  \u00a0:   5.00000E+00     ML_RCUT1Gaussian width for broadening the atomic distribution for radial descriptors                         \u00a0:   5.00000E-01     ML_SION1Number of radial basis functions for atomic distribution for radial descriptors                      \u00a0:             8     ML_MRB1 Angular descriptors:--------------------Cutoff radius of angular descriptors                                                                 \u00a0:   5.00000E+00     ML_RCUT2Gaussian width for broadening the atomic distribution for angular descriptors                        \u00a0:   5.00000E-01     ML_SION2Number of radial basis functions for atomic distribution for angular descriptors                     \u00a0:             8     ML_MRB2Maximum angular momentum quantum number of spherical harmonics used to expand atomic distributions   \u00a0:             4     ML_LMAX2 ...  ``` ### Existing ab initio data This section will appear in continuation runs (e.g. `ML_MODE = train` with existing ML\\_AB) and summarizes the ab initio data found in the ML\\_AB file.  ```* AVAILABLE AB INITIO DATA ***************************************************************************************************************** Number of stored (maximum) ab initio structures:       114 (     1500) * System   1\u00a0:       114 , name: \"Si cubic diamond 2x2x2 super cell\" * System   2\u00a0:         0 , name: \"Si cubic diamond 2x2x2 super cell\"Maximum number of atoms per element: * Element Si\u00a0:        64 ********************************************************************************************************************************************  ``` ### Main loop The central part of the ML\\_LOGFILE is the main loop: depending on the machine learning mode ML\\_MODE it contains data collected over all the time steps (or other iterative schemes) along the VASP run. The main loop layout is carefully designed to minimize the file size while at the same being self\\-descriptive. To achieve this, it is split into two parts: the description blocks in the main loop header explain the available data and present its arrangement in lines and columns. Then, the main loop body contains the actual data (mostly raw numbers) in the previously defined layout. The separation of data and its description avoids unnecessary repetition and simplifies post\\-processing. #### Header The main loop header consists of multiple blocks each introducing one of the log lines appearing later in the loop body. In the example below the log line `STATUS` is described: there will be 8 columns (counting also the word `STATUS`) in the given order. The meaning of each column is also briefly explained here. Next, the log line `STDAB` is outlined with its 5 columns, and so on...  ```* MAIN LOOP ******************************************************************************************************************************** # STATUS ################################################################ STATUS This line describes the overall status of each step.# STATUS # STATUS nstep ..... MD time step or input structure counter# STATUS state ..... One-word description of step action# STATUS             - \"accurate\"  (1)\u00a0: Errors are low, force field is used# STATUS             - \"threshold\" (2)\u00a0: Errors exceeded threshold, structure is sampled from ab initio# STATUS             - \"learning\"  (3)\u00a0: Stored configurations are used for training force field# STATUS             - \"critical\"  (4)\u00a0: Errors are high, ab initio sampling and learning is enforced# STATUS             - \"predict\"   (5)\u00a0: Force field is used in prediction mode only, no error checking# STATUS is ........ Integer representation of above one-word description (integer in parenthesis)# STATUS doabin .... Perform ab initio calculation (T/F)# STATUS iff ....... Force field available (T/F, False after startup hints to possible convergence problems)# STATUS nsample ... Number of steps since last reference structure collection (sample = T)# STATUS ngenff .... Number of steps since last force field generation (genff = T)# STATUS ################################################################ STATUS            nstep     state is doabin    iff   nsample    ngenff# STATUS                2         3  4      5      6         7         8# STATUS ############################################################### # STDAB ##################################################################### STDAB This line contains the standard deviation of the collected ab initio reference data.# STDAB# STDAB nstep ........ MD time step or input structure counter# STDAB std_energy ... Standard deviation in energy (eV atom^-1)# STDAB std_force .... Standard deviation in forces (eV Angst^-1)# STDAB std_stress ... Standard deviation in stress (kB)# STDAB ##################################################################### STDAB             nstep       std_energy        std_force       std_stress# STDAB                 2                3                4                5# STDAB ####################################################################  ...  ``` | **Tip:** The second column is **always** the current (time) step. || --- | #### Body Right after the header the main loop body presents the time series of collected information from the VASP run. The chunks of data belonging to the same time step are fenced in dashed lines. The keywords, e.g. `STDAB`, which were described in the header start each line. Usually the `STATUS` line is located at the beginning of each time step chunk, summarizing the actions which took place during this step. In the example below the `STATUS` line indicates \"learning\", i.e. the machine learning force field was retrained.  ``` ...--------------------------------------------------------------------------------STATUS                 82 learning   3      T      T         0        72LCONF                  82 Si      1222      1228SPRSC                  82       129       129 Si      1228      1224REGR                   82    1    1   1.27238822E+00   5.73175466E-02   7.83203623E-12 REGR                   82    1    2   1.28510216E+00   5.73084508E-02   7.75332075E-12 REGRF                  82    1    3   1.29486873E+00   5.73015362E-02   7.69391276E-12    2.23430718E+16   5.75166077E+09STDAB                  82   1.28851006E-01   1.02791005E+00   1.07081172E+01ERR                    82   1.21269596E-02   2.35740491E-01   4.40365370E+00CFE                    82   2.71935242E-01   2.20681769E-01   7.30391193E-01LASTE                  82   1.63070075E-02   2.66475855E-01   7.17595981E+00BEE                    82   4.72039040E-05   1.03291046E-01   3.02999592E-02   9.56824349E-02   6.23077315E-01   4.66683801E-01THRHIST                82    1   8.45535075E-02THRHIST                82    2   8.99995395E-02THRHIST                82    3   9.42765991E-02THRHIST                82    4   9.37027237E-02THRHIST                82    5   9.78682111E-02THRHIST                82    6   1.02991465E-01THRHIST                82    7   1.04972577E-01THRHIST                82    8   1.02574658E-01THRHIST                82    9   9.68150073E-02THRHIST                82   10   8.90700596E-02THRUPD                 82   9.54674570E-02   9.56824349E-02   6.60216623E-02   1.06906899E-02BEEF                   82   4.58511233E-05   9.95065359E-02   2.94732909E-02   9.56824349E-02   6.03276708E-01   4.51396163E-01-------------------------------------------------------------------------------- ...  ``` Note however, that the number and composition of lines in each time step is not fixed and depends on the actual procedures which were carried out. As an example, the much shorter block below only contains a `STATUS` and `BEEF` line because the machine learning force field was only used for prediction (indicated by \"accurate\"), so only the Bayesian error estimate was computed (`BEEF` line):  ``` ...--------------------------------------------------------------------------------STATUS                 63 accurate   1      F      T         3        53BEEF                   63   4.67236540E-05   1.09788403E-01   2.90204790E-02   9.56824349E-02   6.29349214E-01   4.74949548E-01-------------------------------------------------------------------------------- ...  ``` ### Timing information This last section provides timings of different machine learning program parts (ab initio code parts are not considered). There are separate columns for system clock (wall time) and CPU time (summing all threads of a process).  ```* TIMING INFORMATION *********************************************************************************************************************** Program part                                         system clock (sec)       cpu time (sec)---------------------------------------------------|--------------------|-------------------Setup (file I/O, parameters,...)                   |              0.242 |              0.240Descriptor and design matrix                       |             10.540 |             10.536Sparsification of configurations                   |              9.183 |              9.177Regression                                         |             14.778 |             14.770Prediction                                         |             32.461 |             32.450---------------------------------------------------|--------------------|-------------------TOTAL                                              |             67.204 |             67.173 ********************************************************************************************************************************************  ``` Post\\-processing usage---------------------- Although the main loop design looks complicated at first glance it serves an important purpose: straightforward post\\-processing. The time series of a specific quantity can be easily constructed from the ML\\_LOGFILE, just by \"searching\" for the corresponding keyword. For example, the evolution of the prediction errors is generated by extracting all lines starting with the keyword `ERR`. In Linux, this can be done via the command line tool *grep*:  ```grep ERR ML_LOGFILE  ``` An alternative to *grep* in Windows is the *Select\\-String* tool in the Powershell:  ```Select-String -CaseSensitive -Pattern \"ERR\" ML_LOGFILE | select-object -ExpandProperty Line  ``` This will combine the contents of the main loop header and body to the following result:  ```# ERR ####################################################################### ERR This line contains the RMSEs of the predictions with respect to ab initio results for the training data.# ERR # ERR nstep ......... MD time step or input structure counter# ERR rmse_energy ... RMSE of energies (eV atom^-1)# ERR rmse_force .... RMSE of forces (eV Angst^-1)# ERR rmse_stress ... RMSE of stress (kB)# ERR ####################################################################### ERR               nstep      rmse_energy       rmse_force      rmse_stress# ERR                   2                3                4                5# ERR ######################################################################ERR                     2   8.77652825E-05   1.00592308E-02   2.68800480E-02ERR                     3   3.01865279E-05   1.06283576E-02   5.81209819E-02ERR                     4   1.52820686E-04   1.31384993E-02   1.10439716E-01ERR                     5   1.62739008E-04   1.74252575E-02   1.40488725E-01ERR                     6   2.97462508E-04   2.32615279E-02   1.79092561E-01ERR                     7   2.10891509E-04   2.79123925E-02   1.94566420E-01ERR                     8   3.26150852E-04   3.15081244E-02   1.76637577E-01ERR                     9   7.03479132E-04   3.42249550E-02   1.66830771E-01ERR                    10   2.41808229E-04   3.54422133E-02   1.80246157E-01ERR                    11   2.46299647E-04   3.70102675E-02   2.01262013E-01ERR                    12   3.57654922E-04   3.93143970E-02   2.20533745E-01ERR                    14   1.95974374E-04   4.31813231E-02   2.44026531E-01ERR                    15   4.94080997E-04   4.73774930E-02   2.74308998E-01ERR                    16   9.62150633E-04   5.07005683E-02   3.17482301E-01ERR                    18   1.31336233E-03   5.39222716E-02   3.25526268E-01ERR                    21   1.07020831E-03   5.67663475E-02   3.04995023E-01ERR                    24   9.88977484E-04   6.37987961E-02   3.83686143E-01ERR                    26   9.63361971E-04   6.81972633E-02   4.92021943E-01ERR                    29   1.81730719E-03   7.47758864E-02   6.38563225E-01  ``` The output can be redirected to a file or piped into other post\\-processing tools. For example, the prediction error data can be directly plotted in gnuplot: first, redirect the output to a file:  ```grep ERR ML_LOGFILE > err.dat  ``` Then, start gnuplot and type:  ```p 'err.dat' u 2:4 w l  ``` to show the force error along time steps.  ---"}
{"file_name": "LIBMBD_PARALLEL_MODE.md", "content": "LIBMBD\\_PARALLEL\\_MODE= auto \\| kpoints \\| atomsnDefault: LIBMBD\\_PARALLEL\\_MODE\\=auto (default in libMBD) Description: LIBMBD\\_PARALLEL\\_MODE selects the parallelization scheme used in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_PARALLEL\\_MODE allows to choose the parallelization scheme used in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3). The value is internally passed to the libMBD input **parallel\\_mode** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:*** The LIBMBD\\_PARALLEL\\_MODE tag can be used only if libMBD was compiled with MPI parallelization enabled. * This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "LANGEVIN_GAMMA_L.md", "content": "LANGEVIN\\_GAMMA\\_L= \\[Real]   Default: **LANGEVIN\\_GAMMA\\_L** \\= 0nDescription: LANGEVIN\\_GAMMA\\_L specifies the friction coefficient (in ps\\-1) for lattice degrees\\-of\\-freedom in case of Parrinello\\-Rahman dynamics (in case VASP was compiled with \\-Dtbdyn).  --- When running *NpT* simulations with a Langevin thermostat[\\[1]](#cite_note-Allen91-1) (MDALGO\\=3\\), using the method of Parrinello and Rahman,[\\[2]](#cite_note-Parrinello80-2)[\\[3]](#cite_note-Parrinello81-3) the friction coefficient for lattice degrees\\-of\\-freedom have to be specified (in ps\\-1) by means of the LANGEVIN\\_GAMMA\\_L\\-tag.A fictitious mass for the lattice degrees\\-of\\-freedom has to be assigned using the PMASS tag. The friction coefficients \u03b3 for the atomic degrees\\-of\\-freedom are specified using the LANGEVIN\\_GAMMA\\-tag."}
{"file_name": "Chester_2019.md", "content": "Lectures-------- * DFT, PW, and PAW: \"VASP: The basics(1\\). DFT, plane waves, PAW, ...\". * electronic convergence, BZ sampling: \"VASP: The basics(2\\). electronic convergence, BZ sampling ...\". * Hybrid functionals: \"VASP: Hybrid functionals\". * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". * Performance: \"VASP: running on HPC resources\". Allocating Computing Nodes and Environment Setup------------------------------------------------ An interactive shell should be allocated after login. The following command allocates an interactive node with 8 CPUs for 4 hours  ```qsub -IVl select=1:ncpus=8,walltime=4:0:0,place=scatter:excl -A y15   ``` After successful allocation, one has to setup the environment as follows.  To have access to the vasp binaries, the corresponding module has to be loaded into the environment. Furthermore, the job scripts found in the tutorial tar files (job.sh, doall.sh, etc) work only if the environment variables \"vasp\\_std, vasp\\_gam, vasp\\_ncl\" are defined.Enter following commands in the terminal window after login, to setup up the environment.  ```module load vaspexport vasp_std=\"mpirun -ppn 8 -np 8 /lustre/home/y07/vasp5/5.4.4-intel17-mpt214/bin/vasp_std\"export vasp_gam=\"mpirun -ppn 8 -np 8 /lustre/home/y07/vasp5/5.4.4-intel17-mpt214/bin/vasp_gam\"export vasp_ncl=\"mpirun -ppn 8 -np 8 /lustre/home/y07/vasp5/5.4.4-intel17-mpt214/bin/vasp_ncl\"  ``` Submitting jobs--------------- Alternative to an interactive shell, one may submit jobs to the cluster as follows  ```qsub vasp.job  ``` where the jobfile \"vasp.job\" reads  ```#!/bin/bash --login #PBS -N VASP-Test#PBS -l select=1:ncpus=36#PBS -l place=scatter:excl#PBS -l walltime=00:30:00#PBS -A y15  cd $PBS_O_WORKDIR module load vaspmpiexec_mpt -ppn 36 -n 36 vasp_std | tee vasp.out  ``` Tutorials--------- For the beginners:  A short introduction to the common Input and Output files. * Atoms and Molecules* Simple Bulk Systems* A bit of Surface Science* Hybrid Functionals* Optical Properties and Dielectric Response* The Random\\-Phase\\-Approximation: GW and ACFDT* The Bethe\\-Salpeter equation* Magnetism Further Examples---------------- #### Nudge Elastic Band Method and (constrained) Molecular Dynamics * Liquid Si \\- Standard MD * Transition State Search of Ammonia * Adsorption of H2O on TiO2 #### Magnetism in NiO * NiO GGA * NiO GGA\\+U * NiO HSE06 * Estimation of J magnetic coupling * Including the Spin\\-Orbit Coupling * Determining the Magnetic Anisotropy * Constraining the local magnetic moments #### NMR calculations * alpha\\-SiO2 * alpha\\-AlF3"}
{"file_name": "High_quality_quantitative_versus_qualitative_calculations.md", "content": "Before going into further details, we want to distinguish between \"high quality quantitative\" (PREC should be *high*) and \"qualitative\" calculations (PREC can be *medium* or even *low*). A \"high quality quantitative\" calculation is necessary if very small energy differences (less than 10 meV) between two competing \"phases\", which can not be described with the \"same supercell\", have to be calculated. The term \"same supercell\" corresponds here to cells containing the same number of atoms and no dramatic changes in the cell\\-geometry (i.e. lattice vectors should be almost the same for both cells). For the calculation of energy\\-differences between two competing bulk\\-phases it is in many cases impossible to find a supercell, which meets this criterion. If one wants to calculate small energy\\-differences it is necessary to converge with respect to all parameters (k\\-points, FFT meshes, and sometimes energy cutoff). In most cases these three parameters are independent, so that convergence can be checked independently. For surfaces, things are quite complicated. The calculation of the surface energy is clearly a \"high quality quantitative\" calculation. In this case you have to subtract from the energy of the slab the energy of the bulk phase. Both energies must be calculated with high accuracy. If the slab contains 20 atoms, an error of 5 meV per bulk atom will result in an error of 100 meV per surface atom. The situation is not as bad if one is interested in the adsorption energy of molecules. In this case accurate results (with errors of a few meV) can be obtained with PREC\\=*med*, if the reference energy of the slab, and the reference energy of the adsorbate are calculated in the same supercell as that one used to describe adsorbate and slab together. Ab initio molecular dynamics clearly do not fall into the \"high quality quantitative\" category because the cell shape and the number of atoms remains constant during the calculation, and most ab initio MD's can be done with PREC\\=*Low*. We will give some exception to this general rule when the influence of the k\\-point mesh is discussed.   ---"}
{"file_name": "ML_WTIFOR.md", "content": "ML\\_WTIFOR= \\[real]n| Default: **ML\\_WTIFOR** | \\= 0\\.05 | if ML\\_IWEIGHT\\=1 || --- | --- | --- ||  | \\= 1\\.0 | otherwise | Description: This tag sets the weight for the scaling of the forces in the training data within the machine learning force field method.  --- ML\\_IWEIGHT, ML\\_WTOTEN, ML\\_WTIFOR, ML\\_WTSIF form a group of tags which set the normalization and weighting of ab initio training data, i.e. energies, forces and stresses of the training structures. The main control tag is ML\\_IWEIGHT, please also have a look at its detailed description. If ML\\_IWEIGHT\\=1 the weight has unit eV/Angstrom and is used to divide the data by it. For ML\\_IWEIGHT\\=2 and 3 the weights are unitless and multiplicative."}
{"file_name": "SMASS.md", "content": "SMASS= \\-3 \\| \\-2 \\| \\-1 \\| \\[real] \u2265 0   Default: **SMASS** \\= \\-3nDescription: SMASS controls the velocities during an ab\\-initio molecular\\-dynamics run.  --- * SMASS\\=\\-3 For SMASS\\=\\-3 a microcanonical ensemble (NVE ensemble) is simulated (constant energy molecular dynamics). The calculated Hellmann\\-Feynman forces serve as an acceleration acting onto the ions. The total free energy (i.e. free electronic energy \\+ Madelung energy of ions \\+ kinetic energy of ions) is conserved. | **Tip:** To calculate an NVE ensemble we instead recommend to use `MDALGO = 1` and `ANDERSEN_PROB = 0.0`. || --- | * SMASS\\=\\-2 For SMASS\\=\\-2 the initial velocities are kept constant. This allows to calculate the energy for a set of different linear dependent positions (for instance frozen phonons, or dimers with varying bond lengths).**Mind**: if SMASS\\=\\-2 the actual steps taken are POTIM\u00d7(velocities\\-read\\-from\\-the\\-POSCAR\\-file). To avoid ambiguities, set POTIM\\=1\\.* SMASS\\=\\-1 In this case the velocities are scaled each NBLOCK step (starting at the first step i.e. MOD(NSTEP,NBLOCK)\\=1\\) to the temperature: T\\=TEBEG\\+(TEEND\\-TEBEG)\u00d7NSTEP/NSW,where NSTEP is the current step (starting from 1\\). This allows a continuous increase or decrease of the kinetic energy. In the intermediate period, a micro\\-canonical ensemble is simulated.* SMASS\u22650 For SMASS\u22650, a canonical ensemble is simulated using the algorithm of Nos\u00e9. The Nos\u00e9 mass controls the frequency of the temperature oscillations during the simulation.[\\[1]](#cite_note-nose:jcp:1984-1)[\\[2]](#cite_note-nose:ptp:1991-2)[\\[3]](#cite_note-bylander:prb:1992-3) For SMASS\\=0, a Nos\u00e9\\-mass corresponding to period of 40 time steps will be chosen. The Nos\u00e9\\-mass should be set such that the induced temperature fluctuation show approximately the same frequencies as the typical 'phonon'\\-frequencies for the specific system. For liquids something like 'phonon'\\-frequencies might be obtained from the spectrum of the velocity auto\\-correlation function. If the ionic frequencies differ by an order of magnitude from the frequencies of the induced temperature fluctuations, Nos\u00e9 thermostat and ionic movement might decouple leading to a non\\-canonical ensemble. The frequency of the approximate temperature fluctuations induced by the Nos\u00e9\\-thermostat is written to the OUTCAR file."}
{"file_name": "WAVECAR.md", "content": "The WAVECAR file is a binary file containing the following data:  ```     NBAND       number of bands     ENCUTI      'initial' cut-off energy     AX          'initial' basis vectors defining the supercell     CELEN       ('initial') eigenvalues     FERWE       ('initial') Fermi-weights     CPTWFP      ('initial') wavefunctions  ``` Usually WAVECAR provides excellent starting wavefunctions for a continuation job. For dynamic simulation (IBRION\\=0\\) the wavefunctions in the file are usually those predicted for the next step: i.e. the file is compatible with CONTCAR. The WAVECAR, CHGCAR and the CONTCAR file can be used consistently for a molecular dynamics continuation job. For static calculations and relaxations (IBRION\\=\\-1,1,2\\) the written wavefunctions are the solution of the KS\\-equations for the last step. It is possible to avoid, that the WAVECAR is written out by setting  ```LWAVE  =  .FALSE.  ``` in the INCAR file. Mind: For dynamic simulations (IBRION\\=0\\) the WAVECAR file contains predicted wavefunctions compatible with CONTCAR. If you want to use the wavefunctions for additional calculations, first copy CONTCAR to POSCAR and make another static (ISTART\\=1; NSW\\=0\\) continuation run with ICHARG\\=1\\.  ---"}
{"file_name": "PRJCAR.md", "content": "The PRJCAR file stores the output of the **k**\\-point projection scheme (for LKPROJ\\=.TRUE.).   --- It has the following format: * The header section lists the basis vectors of the reciprocal space belonging to the structure defined in the POSCAR.prim file, and a list of the set of points {**k\u2032**}, the projection scheme has found in the irreducible part of the Brillouin (IBZ) zone of the aforementioned reciprocal space cell (see the section on LKPROJ). * The body of the PRJCAR file lists:  K  n  k  \u03c3  k  \u2032  \\=  \u2211  G G  \u2032  \\|  \u27e8  k  \u2032  \\+  G  \u2032  \\|  k  \\+  G  \u27e9 \u27e8  k  \\+  G  \\|  \u03a8  n  k  \u03c3  \u27e9  \\|  2 {\\\\displaystyle \\\\mathrm {K} \\_{n\\\\mathbf {k} \\\\sigma \\\\mathbf {k} '}\\=\\\\sum \\_{\\\\mathbf {GG} '}\\|\\\\langle \\\\mathbf {k} '\\+\\\\mathbf {G} '\\|\\\\mathbf {k} \\+\\\\mathbf {G} \\\\rangle \\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|\\\\Psi \\_{n\\\\mathbf {k} \\\\sigma }\\\\rangle \\|^{2}} where *n* is the band index, **k** labels the NKPTS points in the IBZ of the structure defined by the POSCAR file, \u03c3 is the spin index, and **k\u2032** refers to the NKPTS\\_PRIME points in the IBZ of POSCAR.prim (see the section of LKPROJ).For each band *n* at **k**\u03c3 the body of the PRJCAR lists the index *n* and eigenenergy \u03b5n**k**\u03c3, followed by one or more rows with a total of NKPTS\\_PRIME entries Kn**k**\u03c3**k\u2032**, one for each point **k\u2032**.Related Tags and Sections------------------------- LKPROJ  ---"}
{"file_name": "Nudged_elastic_bands.md", "content": "The nudged elastic band (NEB) method[\\[1]](#cite_note-mills:surf-sci:1995-1)[\\[2]](#cite_note-jonsson:book:1998-2) is a computational technique used for studying energy landscapes and reaction pathways in chemical reactions or phase transitions.It entails creating an initial path connecting the system's initial and final states, employing a series of *images* to represent intermediate configurations.These images are linked by springs, forming an elastic band.The method then iteratively adjusts the image positions along the band, minimizing energy until a minimum energy pathway, known as the 'nudged' path, is achieved. How to set up an NEB calculation-------------------------------- #### Step 1 Carefully converge the fixed structures of your elastic band, i.e., the initial and the final state.Remember that in the subsequent steps, the elastic band will be attached to these fixed structures, so any error will affect the transition path you obtain. #### Step 2 Construct an initial guess for the intermediate structures.You may use a script like in the tutorial__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") or develop your own method.This script in the tutorial also offers the option to remove center\\-of\\-mass motion.These intermediate images should be somewhat close to the real transition path; otherwise, the optimization of the elastic band may fail.Place the POSCAR files corresponding to these intermediate structures in subdirectories 01, 02, etc. | **Mind:** Make sure that the POSCAR contains the same ordering of elements for initial, final, and intermediate states. It is highly recommended to minimize the number of images used to an absolute minimum. Convergence to the ground state is faster with fewer images. Starting with a single image between the two endpoints and increasing the number of images after the initial run has converged is often a prudent approach. || --- | #### Step 3 Create an INCAR file in the root directory and set the tag IMAGES to the number of intermediate structures.This will introduce tangential springs to maintain equidistance among images during the relaxation process.You can control the strength with the SPRING tag, where negative values (like the default of \\-5\\) activate the NEB method.It is important not to use excessively large values for SPRING, as it can hinder convergence.The default value generally provides reliable results.You should also set IBRION, ISIF, NSW, and other. #### Step 4 Create the remaining input files KPOINTS and POTCAR.For the NEB method, we recommend that all input files, except the POSCAR, WAVECAR and CHGCAR file, reside in the root directory.Then, run VASP until the path is optimized. Possible issues and advice on how to address it----------------------------------------------- One challenge with the NEB method arises from its non\\-linear constraint, which restricts movements to a hyper\\-plane perpendicular to the current tangent.This characteristic can lead to convergence issues with the conjugate\\-gradient (CG) algorithm (IBRION\\=2\\).In such cases, it is advisable to use alternative algorithms like the RMM\\-DIIS algorithm (IBRION\\=1\\) or the quick\\-min algorithm (IBRION\\=3\\).Additionally, the equidistant images tend to deviate from this constraint in the initial steps.To address this, applying a low dimensionality parameter (IBRION\\=1, NFREE\\=2\\) in the initial steps or using steepest descent minimization without line optimization (IBRION\\=3, SMASS\\=2\\) can help pre\\-converge the images. If all degrees of freedom are allowed to relax, (e.g., in isolated molecules or surfaces), it is crucial to ensure that the sum of all positions remains consistent across all cells.Failing to do so introduces artificial forces, causing the images to drift apart.While this does not affect the VASP calculations, it can complicate result visualization. | **Tip:** For more advanced calculations, consider using the Transition State Tools for VASP. || --- |"}
{"file_name": "LWANNIER90_RUN.md", "content": "LWANNIER90\\_RUN= .TRUE. \\| .FALSE.   Default: **LWANNIER90\\_RUN** \\= .FALSE.nDescription: LWANNIER90\\_RUN executes wannier\\_setup (see LWANNIER90\\=.TRUE.) and subsequently runs WANNIER90 in library mode (wannier\\_run).  --- For details on the execution of wannier\\_setup in VASP, see the description of the LWANNIER90\\-tag.For information on the many tags one may set in the wannier90\\.win\") file to control the execution of WANNIER90 (be it standalone or in library mode) we refer to the WANNIER90 manual. **Mind**: when running WANNIER90 in library mode, the wannier90\\.mmn\") and wannier90\\.amn\") files are not written. The information these files normally contain is passed on to wannier\\_run internally. If you want these files to be written anyway, for instance to be able to run WANNIER90 standalone later on, one should add  ```LWRITE_MMN_AMN=.TRUE.  ``` to the INCAR file."}
{"file_name": "QSPIRAL.md", "content": "QSPIRAL= \\[real array]   Default: **QSPIRAL** \\= 3\\*0\\.0nDescription: the QSPIRAL\\-tag specifies the spin spiral propagation vector.  --- QSPIRAL specifies the spin spiral propagation vector in direct coordinates of the reciprocal lattice. See the description of spin spiral calculations for more details."}
{"file_name": "Changelog.md", "content": "6\\.4\\.3------- #### FEATURE * Increased flexibility in the choice of exchange\\-correlation functionals: added the tags XC and XC\\_C to specify linear combinations of exchange\\-correlation functionals.* Additional MGGA functionals (v1\\-sregTM, v2\\-sregTM, v3\\-sregTM, and v2\\-sregTM\\-L) from Francisco, Cancio, and Trickey (https://doi.org/10\\.1063/5\\.0167868, https://doi.org/10\\.1063/5\\.0167873).* Interface to the external code libMBD (https://libmbd.github.io): many\\-body dispersion methods for van der Waals interactions. See LIBMBD\\_METHOD.* Analyze the bandgap and write the results to OUTCAR and vaspout.h5. The details of the output are controlled with the BANDGAP tag.* Compute and write out exciton wavefunctions in BSE (written to CHG).* Non\\-blocked Davidson minimizer (ALGO \\= Dav, or IALGO \\= 119\\).* Select the minimum number of local reference configurations required to build an MLFF via the ML\\_MB\\_MIN tag. A new log line \"MSG\" with a text message is written to ML\\_LOGFILE if this threshold inhibits training.* CSVR thermostat of Bussi et al.* WRT\\_POTENTIAL writes the potential (total, xc, hartree, and ion contributions) to vaspout.h5. In case the dipole correction is switched on and LVACPOTAV\\=.TRUE., the workfunction (rather, the vacuum potentials on either side of the slab) will be automatically determined and written to both the OUTCAR as well as to the vaspout.h5 file.* LWRITE\\_SPN\\=T writes the spin\\-matrix element to the .spn file for wannier90\\. #### IMPROVEMENT * Update makefile.include.nec\\_aurora template to work with the recent NEC compiler version (5\\.0\\.0\\+).* Add workarounds for Intel oneAPI LLVM compilers (ifx), and makefile.include files for these compilers.* Print proper error message when using the gamma\\-only version in combination with KPOINTS\\_OPT.* LSINGLES: \u201csingles\u201d contribution printed to OUTCAR for GWR algorithms, *i.e.*, Eq. 34 of Klimes *et al.*, JCP 143, 102816 (2015\\) (https://doi.org/10\\.1063/1\\.4929346).* SAXIS \\= 0 0 0 behaves like SAXIS \\= 0 0 1\\. This behavior is unchanged but we now print a warning.* Speedup of tetrahedron method by parallelization over tetrahedra and excluding tetrahedra that do not contribute; this improvement will be most noticeable for dense energy grids or k\\-point meshes.* Consistent treatment of CSHIFT, CSHIFT set to 0\\.02, consistent break criteria for linear response to increase robustness.* Improved structure output to HDF5 file.* Support for cusolverMP (the distributed GPU eigensolver of NVIDIA).* Change magnetization output for the noncollinear case so that the (x,y,z) magnetization densities are integrated at the atomic sites and printed to the OUTCAR file (if LORBIT\\=11 is set) every 5 steps for all electronic minimization algorithms.* In some cases, the \"blow\\-up\" step in the k\\-point generation leads to trouble in combination with IBRION\\=6 and ISIF\\=3\\. This is not solved per se, but the resulting error message has been improved to suggest adding the appropriate tag to skip this step (KBLOWUP\")\\=.FALSE.).* Copy the atomic type designation from POSCAR to CONTCAR. In all other instances where the structure is written to file (e.g. CHGCAR) the atomic type information is replaced by the acronym from the periodic table.* The SCDM method \"Category:Wannier functions\") now consumes much less memory when executed on many cores.* Write more information about DFT\\+D4 calculations (IVDW\\=13\\).* For MD runs with a large number of atoms and few ionic steps, the current default chunking size might lead to an unnecessarily large vaspout.h5 file. Here, we make sure the chunking size is never larger than the number of MD steps.* The default value for the minimum number of local reference configurations (ML\\_MB\\_MIN) is increased from 2 to 3\\. This should improve the robustness of initial MLFF guesses.* Check maximum size of sysv shmem segments used in machine\\-learning\\-code paths.* BSE algorithm has been optimized and ported to GPU by means of OpenACC.* Spectral function is recalculated after GW calculations for LOPTICS\\=.TRUE.* Demote LATTCHK exception from error to warning.* Increase the default ML\\_CDOUB value to 100 for re\\-selection runs (ML\\_MODE\\=select). Because this makes critical steps very unlikely the number of force\\-field generations is decreased. Hence, the total runtime until re\\-selection is finished will also be reduced. #### BUGFIX * Descriptor sparsification was not working in combination with the ML\\_MODE tag: the tag ML\\_LSPARSDES was automatically set to False.* Reference energies in INCAR were ignored when continuing MLFF training runs and in re\\-selection runs (ML\\_MODE\\=select).* MLFF: Verlet nearest\\-neighbor algorithm was not updating properly in some cases. This violated energy conservation in MD runs.* ML\\_OUTBLOCK now also controls the output frequency of ML\\_EATOM and ML\\_HEAT. Unwanted output in OUTCAR, vasprun.xml\") and vaspout.h5 has been removed.* Fixed problem with incorrect counting of atoms in slabs in FML \\+ fixed NVE setting of CVS thermostat.* When using VCAIMAGES in combination with the NPT ensemble (ISIF\\=3\\) the stress tensor was not averaged as the forces and energy when using this approach.* Fix incorrect formatting in REPORT file (values of last column shifted to next line). * Restarting a calculation from vaspwave.h5 when the number of k\\-points changed, *e.g.* because symmetry was switched off (ISYM\\=\\-1\\), now behaves the same as restarting from WAVECAR. Before it stopped with a bug message.* Write LOCPOT to subfolders for calculations with IMAGES/\\=0\\.* In the non\\-collinear case, LVTOT\\=.TRUE. now writes the potential in the \"density, magnetization\" representation, i.e., the scalar potential (v0\\), and magnetic field (Bx, By, Bz), to the LOCPOT file. Before the potential was written in the (upup, updown, downup, downdown) representation to real numbers, which is incomplete.* Fixed a problem in the generation of partial charge densities (PARCHG) with reading a single value from EINT and setting the second one to the Fermi energy automatically. IBAND and KPUSE can no longer contain bands or points that are larger than the total number of bands or k points. * Due to a bug the wavefunction prediction was not as effective as it could be.* Use a tighter threshold for Laplace\\-transformed MP2 to avoid incorrect treatment of Coulomb potential. * NMR linear response did not work for LREAL\\=Auto or .TRUE. (with the GNU compiler).* Calculations of NMR shielding tensors was broken for ISPIN\\=2 and LNONCOLLINEAR\\=.TRUE.: setting ISPIN\\=2 for a non\\-spinpolarized system did not yield the same result as with ISPIN\\=1\\. * SAXIS: For sx\\=0 and sy\\<0, alpha\\=\\-pi/2\\. It used to falsely assume alpha\\=pi/2\\.* Rotation of the wavefunctions in PEAD calculations was incorrect for LNONCOLLINEAR\\=.TRUE.* LATTICE\\_CONSTRAINTS was not read when using IBRION\\=1 or 2: default values (T T T \\= no constraints) were used. * The SCDM method now works correctly for k\\-point meshes that do not include the Gamma point.* CRPA calculations using wannier90 were broken when using legacy mode (i.e. wannier90\\.win file instead of WANNIER90\\_WIN tag). * The LDA and GGA components of the AM05 GGA functional were not multiplied by the parameters ALDAX, ALDAC, AGGAX and AGGAC.* If a new vdW kernel was generated because the existing one was incompatible with the selected functional, then the header of the new kernel was the one of the old incompatible kernel. Furthermore, writing the new vdW kernels was not restricted to a single MPI rank."}
{"file_name": "NiO_LSDA+U.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials Task---- Calculation of antiferromagnetic NiO in the DFT\\+U (Dudarev's approach). Input----- ### POSCAR  ```AFM  NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` ### INCAR  ```SYSTEM   = NiO ISTART   = 0 ISPIN    = 2MAGMOM   = 2.0 -2.0 2*0 ENMAX    = 250.0EDIFF    = 1E-3 ISMEAR   = -5 AMIX     = 0.2BMIX     = 0.00001AMIX_MAG = 0.8BMIX_MAG = 0.00001 LORBIT   = 11 LDAU      = .TRUE.LDAUTYPE  = 2LDAUL     = 2 -1LDAUU     = 8.00 0.00LDAUJ     = 0.95 0.00LDAUPRINT = 1 LMAXMIX   = 4         \u00a0! Important: mix paw occupancies up to L=4  ``` * Switching on DFT\\+U using Dudarev's approach (LDAUTYPE\\=2\\).* LDAUL selects the l quantum number for which on site interaction is added (\\-1 \\= no on site interaction).* The U and J parameters have to be specified.* Print occupation matrices in the OUTCAR file (LDAUPRINT\\=2\\.* L, U, and J must be specified for all atomic types! ### KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` Calculation----------- ### On site occupancies * The sample output for the on site occupancies in the OUTCAR file should look like the following (the meaning of the columns after the second equality sign is given below):  ```atom =    1  type =  1  1 = 2   onsite density matrix ... ... occupancies and eigenvectors  o = 0.1696 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.0013 -0.0006 -0.9999 -0.0007 -0.0104o = 0.1696 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.0000 -0.0011 -0.0104  0.0011  0.9999o = 0.9770 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.7787 -0.1766  0.0015 -0.6020  0.0005o = 0.9770 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.2456 -0.7972  0.0005  0.5516 -0.0015o = 0.9770 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.5774  0.5774  0.0000  0.5774  0.0000o = 0.9803 v = -0.0193  0.7166  0.0001 -0.6972 -0.0039  0.0000  0.0000  0.0000  0.0000  0.0000o = 0.9803 v =  0.8163 -0.3914 -0.0039 -0.4249 -0.0001  0.0000  0.0000  0.0000  0.0000  0.0000o = 0.9803 v =  0.5774  0.5774  0.0000  0.5774  0.0000  0.0000  0.0000  0.0000  0.0000  0.0000o = 1.0248 v = -0.0032  0.0016 -1.0000  0.0016  0.0000  0.0000  0.0000  0.0000  0.0000  0.0000o = 1.0248 v =  0.0000  0.0027  0.0000 -0.0027  1.0000  0.0000  0.0000  0.0000  0.0000  0.0000  ```  d  x y  \u2191  d  y z  \u2191  d  z  2  \u2212  r  2  \u2191  d  x z  \u2191  d  z  2  \u2212  y  2  \u2191  d  x y  \u2193  d  y z  \u2193  d  z  2  \u2212  r  2  \u2193  d  x z  \u2193  d  z  2  \u2212  y  2  \u2193 {\\\\displaystyle \\\\qquad \\\\qquad \\\\qquad \\\\qquad \\\\qquad \\\\qquad d\\_{xy}^{\\\\uparrow }\\\\qquad d\\_{yz}^{\\\\uparrow }\\\\qquad \\\\quad d\\_{z^{2}\\-r^{2}}^{\\\\uparrow }\\\\qquad d\\_{xz}^{\\\\uparrow }\\\\qquad d\\_{z^{2}\\-y^{2}}^{\\\\uparrow }\\\\qquad d\\_{xy}^{\\\\downarrow }\\\\qquad \\\\quad d\\_{yz}^{\\\\downarrow }\\\\qquad \\\\quad d\\_{z^{2}\\-r^{2}}^{\\\\downarrow }\\\\qquad d\\_{xz}^{\\\\downarrow }\\\\qquad d\\_{z^{2}\\-y^{2}}^{\\\\downarrow }} * Just for comparison when U\\=0 and J\\=0 (i.e. just LSDA) the on site occupancies are as follows:  ```o = 0.3462 v =  0.0000  0.0000  0.0000  0.0000  0.0000 -0.0048  0.0028  0.9951  0.0020 -0.0986o = 0.3462 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.0005  0.0039 -0.0986 -0.0044 -0.9951o = 0.9491 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.5774  0.5774  0.0000  0.5774  0.0000o = 0.9495 v =  0.0000  0.0000  0.0000  0.0000  0.0000 -0.0588  0.7347 -0.0004 -0.6759  0.0059o = 0.9495 v =  0.0000  0.0000  0.0000  0.0000  0.0000  0.8144 -0.3563  0.0059 -0.4581  0.0004o = 0.9527 v =  0.0477 -0.0256  0.9974 -0.0221 -0.0420  0.0000  0.0000  0.0000  0.0000  0.0000o = 0.9527 v =  0.0020  0.0403  0.0420 -0.0423  0.9974  0.0000  0.0000  0.0000  0.0000  0.0000o = 0.9598 v =  0.5774  0.5774  0.0000  0.5774  0.0000  0.0000  0.0000  0.0000  0.0000  0.0000o = 0.9599 v = -0.1186  0.7577  0.0085 -0.6391 -0.0579  0.0000  0.0000  0.0000  0.0000  0.0000o = 0.9599 v =  0.8064 -0.3005 -0.0570 -0.5059 -0.0085  0.0000  0.0000  0.0000  0.0000  0.0000  ```  d  x y  \u2191  d  y z  \u2191  d  z  2  \u2212  r  2  \u2191  d  x z  \u2191  d  z  2  \u2212  y  2  \u2191  d  x y  \u2193  d  y z  \u2193  d  z  2  \u2212  r  2  \u2193  d  x z  \u2193  d  z  2  \u2212  y  2  \u2193 {\\\\displaystyle \\\\qquad \\\\qquad \\\\qquad \\\\qquad \\\\qquad \\\\qquad d\\_{xy}^{\\\\uparrow }\\\\qquad d\\_{yz}^{\\\\uparrow }\\\\qquad \\\\quad d\\_{z^{2}\\-r^{2}}^{\\\\uparrow }\\\\qquad d\\_{xz}^{\\\\uparrow }\\\\qquad d\\_{z^{2}\\-y^{2}}^{\\\\uparrow }\\\\qquad d\\_{xy}^{\\\\downarrow }\\\\qquad \\\\quad d\\_{yz}^{\\\\downarrow }\\\\qquad \\\\quad d\\_{z^{2}\\-r^{2}}^{\\\\downarrow }\\\\qquad d\\_{xz}^{\\\\downarrow }\\\\qquad d\\_{z^{2}\\-y^{2}}^{\\\\downarrow }} ### Magnetic moments * The sample output for the l dependent local magnetic moments is given in the OUTCAR file:  ``` magnetization (x)  # of ion     s       p       d       tot----------------------------------------  1       -0.003  -0.006   1.721   1.711  2        0.003   0.006  -1.719  -1.710  3        0.000  -0.001   0.000  -0.001  4        0.000  -0.001   0.000  -0.001------------------------------------------------tot        0.000  -0.002   0.002   0.000  ``` ### DOS * The Ni lm decomposed DOS for the d states should look like the following: [](File_Fig_NiO_LSDA_U_1.html) ### Total energy * The on site occupany matrix is not idempotent, hence the total energy contains a penalty contribution.* The sample output for the total energy in the OSZICAR file should look like the following:  ``` ...DAV:  15    -0.229633055256E+02   -0.11057E-03   -0.50020E-05   520   0.104E-01    0.118E-02DAV:  16    -0.229633263321E+02   -0.20806E-04   -0.16650E-05   520   0.492E-02   1 F= -.22963326E+02 E0= -.22963326E+02  d E =0.000000E+00  mag=     0.0000  ``` * The sample output for a calculation using just LSDA is given below:  ``` ...DAV:  13    -0.267936242334E+02    0.12794E-03   -0.12638E-04   552   0.298E-01    0.169E-02DAV:  14    -0.267936352231E+02   -0.10990E-04   -0.21775E-05   520   0.107E-01   1 F= -.26793635E+02 E0= -.26793635E+02  d E =0.000000E+00  mag=     0.0000  ``` * The total energy for (U\\-J)\\>0 is always higher than for (U\\-J)\\=0\\.* Comparing the total energies from calculations with different (U\\-J) is meaningless! Download--------  4\\_3\\_NiO\\_LSDA\\+U.tgz Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorialsBack to the main page."}
{"file_name": "ICAMM_Rennes_2016_HOWTO.md", "content": "Here is a brief tutorial on how to run a calculation and how to run post\\-treatment tools during the VASP training school in Rennes. * **First thing to do**: - launch terminal: go to **openSUSE** booklet (down left of the screen), select **Syst\u00e8me** and choose **Terminal**- source the environment via the following command: `source /etc/bash.bashrc`- export the proper LC\\_NUMERIC environment using the following command: `export LC_NUMERIC=\"en_US.UTF-8\"`- execute to following command: `/bin/bash` * **VASP calculations**: 3 versions of the VASP code are available:- the so\\-called *standard* version which allows you to make *standard* calculation with several K\\-points To use it, enter the following command on a terminal`vasp_std`- the so\\-called *non\\-colinear* version which allows you to make *non\\-colinear* calculation with several K\\-points To use it, enter the following command on a terminal`vasp_ncl`- the so\\-called *gamma* version which allows you to make *gamma* calculation but with only 1 K\\-point To use it, enter the following command on a terminal`vasp_gam` **Please always keep in mind that our local workstation are quite limited so please avoid to run two VASP calculations simultaneously.*** **wannier90** To use wannier90, use the following command:`/ICAMM/wannier/wannier90-1.2/wannier90.x`* **phonopy** To use phonopy, use the following command:`phonopy`* **Gnuplot**: Gnuplot is a portable command\\-line driven graphing utility.To use it, enter the following command on a terminal`gnuplot`For more infos about gnuplot, visit the following website* **p4vasp**: To use the p4vasp visualization software, use the following command: `p4v`* **vmd**: To use the vmd visualization software, use the following command: `vmd`"}
{"file_name": "ALDAC.md", "content": "ALDAC= \\[real]n| Default: **ALDAC** | \\= 1\\.0 | if LHFCALC    \\=   {\\\\displaystyle \\=}  .FALSE. or AEXX    \u2260   {\\\\displaystyle \\\eq }  1\\.0 || --- | --- | --- ||  | \\= 0\\.0 | if LHFCALC    \\=   {\\\\displaystyle \\=}  .TRUE. and AEXX    \\=   {\\\\displaystyle \\=}  1\\.0 | Description: ALDAC is a parameter that multiplies the LDA correlation functional or the LDA part of the GGA correlation functional.   --- ALDAC can be used as the fraction of LDA correlation in a Hartree\\-Fock/DFT hybrid functional.  | **Mind:*** ALDAC is implemented for all functionals listed at GGA except AM05\\. * ALDAC is implemented for the functionals from Libxc (see LIBXC1 for details). || --- |"}
{"file_name": "Machine_learning_force_field__Theory.md", "content": "Here we present the theory for on\\-the\\-fly machine learning force fields. The theory will be presented in a very condensed manner and for a more detailed description of the methods, we refer the readers to Refs. [\\[1]](#cite_note-jinnouchi:prl:2019-1), [\\[2]](#cite_note-jinnouchi2:arx:2019-2) and [\\[3]](#cite_note-jinnouchi:jcm:20-3). Introduction------------ Molecular dynamics is one of the most important methods for the determination of dynamic properties. The quality of the molecular dynamics simulation depends very strongly on the accuracy of the calculational method, but higher accuracy usually comes at the cost of increased computational demand. A very accurate method is ab initio molecular dynamics, where the interactions of atoms and electrons are calculated fully quantum mechanically from ab initio calculations (such as e.g. DFT). Unfortunately, this method is very often limited to small simulation cells and simulation times. One way to hugely speed up these calculations is by using force fields, which are parametrizations of the potential energy. These parametrizations can range from very simple functions with only empirical parameters, to very complex functions parametrized using thousands of ab initio calculations. Usually making accurate force fields manually is a very time\\-consuming task that needs tremendous expertise and know\\-how.  Another way to greatly reduce computational cost and required human intervention is by machine learning. Here, in the prediction of the target property, the method automatically interpolates between known training systems that were previously calculated ab initio. This way the generation of force fields is already significantly simplified compared to a classical force field which needs manual (or even empirical) adjustment of the parameters. Nevertheless, there is still the problem of how to choose the proper (minimal) training data. One very efficient and automatic way to solve that is to adapt on\\-the\\-fly learning. Here an MD calculation is used for the learning. During the run of the MD calculation, ab initio data is picked out and added to the training data. From the existing data, a force field is continuously built up. At each step, it is judged whether to make an ab initio calculation and possibly add the data to the force field or to use the force field for that step and actually skip learning for that step. Hence the name \"on the fly\" learning. The crucial point here is the probability model for the estimation of errors. This model is built up from newly sampled data. Hence, the more accurate the force field gets the less sampling is needed and the more expensive ab initio steps are skipped. This way not only the convergence of the force field can be controlled but also a very widespread scan through phase space for the training structures can be performed. The crucial point for on\\-the\\-fly machine learning which will be explained with the rest of the methodology in the following subsections is to be able to predict errors of the force field on a newly sampled structure without the necessity to perform an ab initio calculation on that structure. Algorithms---------- ### On\\-the\\-fly machine\\-learning algorithm [](File_MLFF_main_algorithm.html) Fig. 1: On\\-the\\-fly machine learning force field generation scheme. To obtain the machine\\-learning force field several **structure datasets** are required. A structure dataset defines the Bravais lattice and the atomic positions of the system and contains the total energy, the forces, and the stress tensor calculated by first principles. Given these structure datasets, the machine identifies **local configurations** around an atom to learn what force field is appropriate. The local configuration measures the radial and angular distribution of neighboring atoms around this given site and is captured in the so\\-called **descriptors**. The on\\-the\\-fly force field generation scheme is given by the following steps (a flowchart of the algorithm is shown in Fig. 1\\): 1. The machine predicts the energy, the forces, and the stress tensor and their uncertainties for a given structure using the existing force field.2. The machine decides whether to perform a first\\-principles calculation (proceed with step 3\\); otherwise we skip to step 5\\.3. Performing the first principles calculation, we obtain a new structure dataset that may improve the force field.4. If the number of newly collected structures reaches a certain threshold or if the predicted uncertainty becomes too large, the machine learns an improved force field by including the new structure datasets and local configurations.5. Atomic positions and velocities are updated by using the force field (if accurate enough) or the first principles calculation.6. If the desired total number of ionic steps (NSW) is reached we are done; otherwise proceed with step 1\\. ### Sampling of training data and local reference configurations We employ a learning scheme where structures are only added to the list of training structures when local reference configurations are picked for atoms that have an error in the force higher than a given threshold. So in the following, it is implied that whenever a new training structure is obtained, also local reference configurations from this structure are obtained. Usually one can employ that the force field doesn't necessarily need to be retrained immediately at every step when a training structure with corresponding local configurations is added. Instead, one can also collect candidates and do the learning in a later step for all structures simultaneously (blocking). This way saving significant computational costs. Of course learning after every new configuration or after every block can have different results, but with not too large block sizes the difference should be small. The tag ML\\_MCONF\\_NEW sets the block size for learning.The force field is usually not updated at every molecular\\-dynamics step. The update happens under the following conditions: * If there is no force field present, all atoms of a structure are sampled as local reference configurations and a force field is constructed.* If the Bayesian error of the force for any atom is above the strict threshold set by ML\\_CDOUB  \u00d7 {\\\\displaystyle \\\\times } ML\\_CTIFOR, the local reference configurations are sampled and a new force field is constructed.* If the Bayesian error of the force for any atom is above the threshold ML\\_CTIFOR but below ML\\_CDOUB  \u00d7 {\\\\displaystyle \\\\times } ML\\_CTIFOR, the structure is added to the list of new training structure candidates. Whenever the number of candidates is equal to ML\\_MCONF\\_NEW they are added to the entire set of training structures and the force field is updated. To avoid sampling too similar structures, the next step, from which training structures are allowed to be taken as candidates, is set by ML\\_NMDINT. All ab initio calculations within this distance are skipped if the Bayesian error for the force on all atoms is below ML\\_CDOUB  \u00d7 {\\\\displaystyle \\\\times } ML\\_CTIFOR. ### Threshold for error of forces Training structures and their corresponding local configurations are only chosen if the error in the forces of any atom exceeds a chosen threshold. The initial threshold is set to the value provided by ML\\_CTIFOR (the unit is eV/Angstrom).The behavior of how the threshold is further controlled is given by ML\\_ICRITERIA. The following options are available: * ML\\_ICRITERIA \\= 0: No update of initial value of ML\\_CTIFOR is done.* ML\\_ICRITERIA \\= 1: Update of criteria using an average of the Bayesian errors of the forces from history (see description of the method below).* ML\\_ICRITERIA \\= 2: Update of criteria using gliding average of Bayesian errors (probably more robust but **not well tested**). Generally, it is recommended to automatically update the threshold ML\\_CTIFOR during machine learning. Details on how and when the update is performed are controlled by ML\\_CSLOPE, ML\\_CSIG and ML\\_MHIS. Description of ML\\_ICRITERIA\\=1: ML\\_CTIFOR is updated using the average Bayesian error in the previous steps. Specifically, it is set to  ML\\_CTIFOR \\= (average of the stored Bayesian errors) \\*(1\\.0 \\+ ML\\_CX). The number of entries in the history of the Bayesian errors is controlled by ML\\_MHIS. To avoid noisy data or an abrupt jump of the Bayesian error causing issues, the standard error of the history must be below the threshold ML\\_CSIG, for the update to take place. Furthermore, the slope of the stored data must be below the threshold ML\\_CSLOPE. In practice, the slope and the standard errors are at least to some extent correlated: often the standard error is proportional to ML\\_MHIS/3 times the slope or somewhat larger. We recommend to vary only ML\\_CSIG and keep ML\\_CSLOPE fixed to its default value. Local energies-------------- The potential energy   U {\\\\displaystyle U}  of a structure with   N  a {\\\\displaystyle N\\_{a}}  atoms is approximated as  U \\=  \u2211  i \\= 1  N  a  U  i  . {\\\\displaystyle U\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{\\\\mathrm {a} }}U\\_{i}.} The local energies   U  i {\\\\displaystyle U\\_{i}}  are functionals   U  i  \\= F \\[  \u03c1  i  (  r  ) ] {\\\\displaystyle U\\_{i}\\=F\\[\\\\rho \\_{i}(\\\\mathbf {r} )]}  of the probability density   \u03c1  i {\\\\displaystyle \\\\rho \\_{i}}  to find another atom   j {\\\\displaystyle j}  at the position   r {\\\\displaystyle \\\\mathbf {r} }  around the atom   i {\\\\displaystyle i}  within a cut\\-off radius   R  c u t {\\\\displaystyle R\\_{\\\\mathrm {cut} }}  defined as  \u03c1  i  (  r  )  \\=  \u2211  j \\= 1  N  a  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  )  ,  r  i j  \\=  \\|  r  i j  \\|  \\=  \\|  r  j  \u2212  r  i  \\|  . {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\=1}^{N\\_{\\\\mathrm {a} }}f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right),\\\\qquad \\\\qquad \\\\qquad \\\\qquad r\\_{ij}\\=\\|\\\\mathbf {r} \\_{ij}\\|\\=\\|\\\\mathbf {r} \\_{j}\\-\\\\mathbf {r} \\_{i}\\|.} Here   f  c u t {\\\\displaystyle f\\_{\\\\mathrm {cut} }}  is a cut\\-off function that goes to zero for   r  i j  \\>  R  c u t {\\\\displaystyle r\\_{ij}\\>R\\_{\\\\mathrm {cut} }}  and  g  (  r  \u2212  r  i j  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  is a delta function. The atom distribution can also be written as a sum of individual distributions:  \u03c1  i  (  r  )  \\=  \u2211  j \u2260 i  N  a  \u03c1  i j  (  r  )  . {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\\eq i}^{N\\_{\\\\mathrm {a} }}\\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right).} Here   \u03c1  i j  (  r  ) {\\\\displaystyle \\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right)}  describes the probability of find an atom   j {\\\\displaystyle j}  at a position   r {\\\\displaystyle \\\\mathbf {r} }  with respect to atom   i {\\\\displaystyle i}  . Descriptors----------- Similar to the Smooth Overlap of Atomic Positions[\\[4]](#cite_note-bartok:prb:2013-4) (SOAP) method the delta function   g (  r  ) {\\\\displaystyle g(\\\\mathbf {r} )}  is approximated as   g  (  r  )  \\=  1  \u03c3  a t o m  2 \u03c0  e x p  (  \u2212  \\|  r  \\|  2  2  \u03c3  a t o m  2  )  . {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)\\={\\\\frac {1}{\\\\sigma \\_{\\\\mathrm {atom} }{\\\\sqrt {2\\\\pi }}}}\\\\mathrm {exp} \\\\left(\\-{\\\\frac {\\|\\\\mathbf {r} \\|^{2}}{2\\\\sigma \\_{\\\\mathrm {atom} }^{2}}}\\\\right).} [](File_MLFF_rad_and_ang_descriptor.html) Fig. 2: Radial and angular descriptors.   Unfortunately   \u03c1  i  (  r  ) {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)}  is not rotationally invariant. To deal with this problem intermediate functions or *descriptors* depending on   \u03c1  i  (  r  ) {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)}  possessing rotational invariance are introduced: ### Radial descriptor This is the simplest descriptor which relies on the radial distribution function  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u222b  \u03c1  i  (  r  r  ^  )  d  r  ^  , {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{4\\\\pi }}\\\\int \\\\rho \\_{i}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)d{\\\\hat {\\\\mathbf {r} }},} where   r  ^ {\\\\displaystyle {\\\\hat {\\\\mathbf {r} }}}  denotes the unit vector of the vector   r {\\\\displaystyle \\\\mathbf {r} }  between atoms   i {\\\\displaystyle i}  and  j {\\\\displaystyle j}  \\[see Fig. 2 (a)].The Radial descriptor can also be regarded as a two\\-body descriptor. ### Angular descriptor In most cases the radial descriptor is not enough to distinguish different probability densities   \u03c1  i {\\\\displaystyle \\\\rho \\_{i}} , since two different   \u03c1  i {\\\\displaystyle \\\\rho \\_{i}}  can yield the same   \u03c1  i  ( 2 ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}} . To improve on this angular information between two radial descriptors is also incorporated within an angular descriptor  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\= \u222c d  r  ^  d  s  ^  \u03b4  (  r  ^  \u22c5  s  ^  \u2212  c o s  \u03b8  )  \u2211  j \\= 1  N  a  \u2211  k \u2260 j  N  a  \u03c1  i k  (  r  r  ^  )  \u03c1  i j  (  s  s  ^  ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\iint d{\\\\hat {\\\\mathbf {r} }}d{\\\\hat {\\\\mathbf {s} }}\\\\delta \\\\left({\\\\hat {\\\\mathbf {r} }}\\\\cdot {\\\\hat {\\\\mathbf {s} }}\\-\\\\mathrm {cos} \\\\theta \\\\right)\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{k\\\eq j}^{N\\_{a}}\\\\rho \\_{ik}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)\\\\rho \\_{ij}\\\\left(s{\\\\hat {\\\\mathbf {s} }}\\\\right)} where   \u03b8 {\\\\displaystyle \\\\theta }  denotes the angle between two vectors   r  i j {\\\\displaystyle \\\\mathbf {r} \\_{ij}}  and  r  i k {\\\\displaystyle \\\\mathbf {r} \\_{ik}}  \\[see Fig. 2 (b)]. The important difference of the function   \u03c1  i  ( 3 ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}}  compared to the angular distribution function (also called power spectrum within the Gaussian Approximation Potential) used in reference [\\[5]](#cite_note-bartok:prl:2010-5) is that no self interaction is included, where   j {\\\\displaystyle j}  and  k {\\\\displaystyle k}  have the same distance from   i {\\\\displaystyle i}  and the angle between the two is zero. It can be shown [\\[3]](#cite_note-jinnouchi:jcm:20-3) that the self\\-interaction component is equivalent to the two body descriptors. This means that our angular descriptor is a pure angular descriptor, containing no two\\-body components and it cannot be expressed as linear combinations of the power spectrum. The advantage of this descriptor is that it enables us to separately control the effects of two\\- and three\\-body descriptors. ### Basis set expansion and descriptors The atomic probability density can be also expanded in terms of basis functions  \u03c1  i  (  r  )  \\=  \u2211  l \\= 1  L  m a x  \u2211  m \\= \u2212 l  l  \u2211  n \\= 1  N  R  l  c  n l m  i  \u03c7  n l  ( r )  Y  l m  (  r  ^  )  , {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}c\\_{nlm}^{i}\\\\chi \\_{nl}\\\\left(r\\\\right)Y\\_{lm}\\\\left({\\\\hat {\\\\mathbf {r} }}\\\\right),} where   c  n l m  i {\\\\displaystyle c\\_{nlm}^{i}}  ,  \u03c7  n l {\\\\displaystyle \\\\chi \\_{nl}}  and  Y  l m {\\\\displaystyle Y\\_{lm}}  denote expansion coefficients, radial basis functions and spherical harmonics, respectively. The indices   n {\\\\displaystyle n}  ,  l {\\\\displaystyle l}  and  m {\\\\displaystyle m}  denote radial numbers, angular and magnetic quantum numbers, respectively. By using the above equation the radial descriptor and angular descriptor can be written as  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u2211  n \\= 1  N  R  0  c  n 00  i  \u03c7  n 0  ( r )  , {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{\\\\sqrt {4\\\\pi }}}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{0}}c\\_{n00}^{i}\\\\chi \\_{n0}\\\\left(r\\\\right),}  and  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\=  \u2211  l \\= 1  L  m a x  \u2211  n \\= 1  N  R  l  \u2211  \u03bd \\= 1  N  R  l  2 l \\+ 1  2  p  n \u03bd l  i  \u03c7  n l  ( r )  \u03c7  \u03bd l  ( s )  P  l  (  c o s  \u03b8  )  , {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}\\\\sum \\\\limits \\_{\\\u \\=1}^{N\\_{\\\\mathrm {R} }^{l}}{\\\\sqrt {\\\\frac {2l\\+1}{2}}}p\\_{n\\\u l}^{i}\\\\chi \\_{nl}\\\\left(r\\\\right)\\\\chi \\_{\\\u l}\\\\left(s\\\\right)P\\_{l}\\\\left(\\\\mathrm {cos} \\\\theta \\\\right),} where   \u03c7  \u03bd l {\\\\displaystyle \\\\chi \\_{\\\u l}}  and  P  l {\\\\displaystyle P\\_{l}}  represent normalized spherical Bessel functions and Legendre polynomials of order   l {\\\\displaystyle l} , respectively. The expansion coefficients for the angular descriptor can be converted to  p  n \u03bd l  i  \\=  8  \u03c0  2  2 l \\+ 1  \u2211  m \\= \u2212 l  l  \\[  c  n l m  i  c  \u03bd l m  i \u2217  \u2212  \u2211  j  N  a  c  n l m  i j  c  \u03bd l m  i j \u2217  ]  , {\\\\displaystyle p\\_{n\\\u l}^{i}\\={\\\\sqrt {\\\\frac {8\\\\pi ^{2}}{2l\\+1}}}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\left\\[c\\_{nlm}^{i}c\\_{\\\u lm}^{i\\*}\\-\\\\sum \\\\limits \\_{j}^{N\\_{a}}c\\_{nlm}^{ij}c\\_{\\\u lm}^{ij\\*}\\\\right],} where   c  n l m  i j {\\\\displaystyle c\\_{nlm}^{ij}}  denotes expansion coefficients of the distribution   \u03c1  i j  (  r  ) {\\\\displaystyle \\\\rho \\_{ij}(\\\\mathbf {r} )}  with respect to   \u03c7  \u03bd l {\\\\displaystyle \\\\chi \\_{\\\u l}}  and  P  l {\\\\displaystyle P\\_{l}}  \u03c1  i j  (  r  ) \\=  \u2211  l \\= 1  L  m a x  \u2211  m \\= \u2212 l  l  \u2211  n \\= 1  N  R  l  c  n l m  i j  \u03c7  n l  ( r )  Y  l m  (  r  ^  ) {\\\\displaystyle \\\\rho \\_{ij}(\\\\mathbf {r} )\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}c\\_{nlm}^{ij}\\\\chi \\_{nl}\\\\left(r\\\\right)Y\\_{lm}\\\\left({\\\\hat {\\\\mathbf {r} }}\\\\right)}  and  c  n l m  i  \\=  \u2211  j  N  a  c  n l m  i j  . {\\\\displaystyle c\\_{nlm}^{i}\\=\\\\sum \\\\limits \\_{j}^{N\\_{a}}c\\_{nlm}^{ij}.} #### Angular filtering In many cases   \u03c7  n l {\\\\displaystyle \\\\chi \\_{nl}}  is multiplied with an angular filtering function[\\[6]](#cite_note-boyd:book:2000-6)   \u03b7 {\\\\displaystyle \\\\eta }  (ML\\_IAFILT2), which can noticably reduce the necessary basis set size without losing accuracy in the calculations  \u03b7  l ,  a  F I L T  \\=  1  1 \\+  a  F I L T  \\[ l ( l \\+ 1 )  ]  2 {\\\\displaystyle \\\\eta \\_{l,a\\_{\\\\mathrm {FILT} }}\\={\\\\frac {1}{1\\+a\\_{\\\\mathrm {FILT} }\\[l(l\\+1\\)]^{2}}}} where   a  F I L T {\\\\displaystyle a\\_{\\\\mathrm {FILT} }}  (ML\\_AFILT2) is a parameter controlling the extent of the filtering. A larger value for the parameter should provide more filtering. #### Reduced descriptors A descriptor that reduces the number of descriptors with respect to the number of elements[\\[7]](#cite_note-csanyi:npj:2022-7) is written as  p  n \u03bd l  i J  \\=  8  \u03c0  2  2 l \\+ 1  \u2211  m \\= \u2212 l  l  c  n l m  i J  \u2211  J \u2032  c  \u03bd l m  i  J \u2032  . {\\\\displaystyle p\\_{n\\\u l}^{iJ}\\={\\\\sqrt {\\\\frac {8\\\\pi ^{2}}{2l\\+1}}}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}c\\_{nlm}^{iJ}\\\\sum \\\\limits \\_{J'}c\\_{\\\u lm}^{iJ'}.} For more details on the effects of this descriptor please see following site: ML\\_DESC\\_TYPE. Potential energy fitting------------------------ It is convenient to express the local potential energy of atom   i {\\\\displaystyle i}  in structure   \u03b1 {\\\\displaystyle \\\\alpha }  in terms of linear coefficients   w  i  B {\\\\displaystyle w\\_{i\\_{\\\\mathrm {B} }}}  and a kernel   K  (  X  i  ,  X  i  B  ) {\\\\displaystyle K\\\\left(\\\\mathbf {X} \\_{i},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)}  as follows  U  i  \u03b1  \\=  \u2211  i  B  \\= 1  N  B  w  i  B  K  (  X  i  \u03b1  ,  X  i  B  ) {\\\\displaystyle U\\_{i}^{\\\\alpha }\\=\\\\sum \\\\limits \\_{i\\_{\\\\mathrm {B} }\\=1}^{N\\_{\\\\mathrm {B} }}w\\_{i\\_{\\\\mathrm {B} }}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha },\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)} where   N  B {\\\\displaystyle N\\_{\\\\mathrm {B} }}  is the basis set size. The kernel   K  (  X  i  ,  X  i  B  ) {\\\\displaystyle K\\\\left(\\\\mathbf {X} \\_{i},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)}  measures the similarity between a *local* configuration from the training set   \u03c1  i  (  r  ) {\\\\displaystyle \\\\rho \\_{i}(\\\\mathbf {r} )}  and basis set   \u03c1  i  B  (  r  ) {\\\\displaystyle \\\\rho \\_{i\\_{\\\\mathrm {B} }}(\\\\mathbf {r} )} . Using the radial and angular descriptors it is written as  K  (  X  i  ,  X  i  B  )  \\=  \\[  \u03b2  X  i  ( 2 )  \u22c5  X  i  B  ( 2 )  \\+ ( 1 \u2212 \u03b2 )  X ^  i  ( 3 )  \u22c5  X ^  i  B  ( 3 )  ]  \u03b6  . {\\\\displaystyle K\\\\left(\\\\mathbf {X} \\_{i},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)\\=\\\\left\\[\\\\beta \\\\mathbf {X} \\_{i}^{(2\\)}\\\\cdot \\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}^{(2\\)}\\+(1\\-\\\\beta )\\\\mathbf {\\\\hat {X}} \\_{i}^{(3\\)}\\\\cdot \\\\mathbf {\\\\hat {X}} \\_{i\\_{\\\\mathrm {B} }}^{(3\\)}\\\\right]^{\\\\zeta }.} Here the vectors   X  i  ( 2 ) {\\\\displaystyle \\\\mathbf {X} \\_{i}^{(2\\)}}  and  X ^  i  ( 3 ) {\\\\displaystyle \\\\mathbf {\\\\hat {X}} \\_{i}^{(3\\)}}  contain all coefficients   c  n 00  i {\\\\displaystyle c\\_{n00}^{i}}  and  p  n \u03bd l  i {\\\\displaystyle p\\_{n\\\u l}^{i}} , respectively. The notation   X ^  i  ( 3 ) {\\\\displaystyle \\\\mathbf {\\\\hat {X}} \\_{i}^{(3\\)}}  indicates that it is a normalized vector of   X  i  ( 3 ) {\\\\displaystyle \\\\mathbf {X} \\_{i}^{(3\\)}} . The parameter   \u03b2 {\\\\displaystyle \\\\beta }  (ML\\_W1) controls the weighting of the radial and angular terms, respectively. The parameter   \u03b6 {\\\\displaystyle \\\\zeta }  (ML\\_NHYP) controls the sharpness of the kernel and the order of the many\\-body interactions. ### Matrix vector form of linear equations Similarly to the energy   U  i  \u03b1 {\\\\displaystyle U\\_{i}^{\\\\alpha }} the forces and the stress tensor are also described as linear functions of the coefficients   w  i  B {\\\\displaystyle w\\_{i\\_{\\\\mathrm {B} }}} . All three are fitted simultaneously which leads to the following matrix\\-vector form  Y  \\=  \u03a6  w {\\\\displaystyle \\\\mathbf {Y} \\=\\\\mathbf {\\\\Phi } \\\\mathbf {w} } where   Y {\\\\displaystyle \\\\mathbf {Y} }  is a super vector consisting of the sub vectors   {  y  \u03b1  \\|  \u03b1 \\= 1 , . . . ,  N  s t  } {\\\\displaystyle \\\\{\\\\mathbf {y} ^{\\\\alpha }\\|\\\\alpha \\=1,...,N\\_{\\\\mathrm {st} }\\\\}} . Here each   y  \u03b1 {\\\\displaystyle \\\\mathbf {y} ^{\\\\alpha }}  contains the first principle energies per atom, forces and stress tensors for each structure   \u03b1 {\\\\displaystyle \\\\alpha }  .  N  s t {\\\\displaystyle N\\_{\\\\mathrm {st} }}  denotes the total number of structures. The size of   Y {\\\\displaystyle \\\\mathbf {Y} }  is  N  s t  \u00d7 ( 1 \\+ 3  N  a  \u03b1  \\+ 6 ) {\\\\displaystyle N\\_{\\\\mathrm {st} }\\\\times (1\\+3N\\_{a}^{\\\\alpha }\\+6\\)}  . The matrix   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  is also called as *design* matrix[\\[8]](#cite_note-bishop:book:2006-8). The rows of this matrix are blocked for each structure   \u03b1 {\\\\displaystyle \\\\alpha } , where the first line of each block consists of the kernel used to calculate the energy. The subsequent   3  N  a  \u03b1 {\\\\displaystyle 3N\\_{a}^{\\\\alpha }}  lines consist of the derivatives of the kernel with respect to the atomic coordinates used to calculate the forces. The final 6 lines within each structure consist of the derivatives of the kernel with respect to the unit cell coordinates used to calculate the stress tensor components. The overall size of   Y {\\\\displaystyle \\\\mathbf {Y} }  is  N  s t  \u00d7 ( 1 \\+ 3  N  a  \u03b1  \\+ 6 ) \u00d7  N  B {\\\\displaystyle N\\_{\\\\mathrm {st} }\\\\times (1\\+3N\\_{a}^{\\\\alpha }\\+6\\)\\\\times N\\_{\\\\mathrm {B} }}  looking like as follows  \u03a6  \\=  \\[  \u2211  i  1  N  a  \u03b1 \\= 1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  1  N  a  \u03b1 \\= 1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2211  i  1  N  a  \u03b1 \\= 2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  1  N  a  \u03b1 \\= 2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  ]  . {\\\\displaystyle \\\\mathbf {\\\\Phi } \\={\\\\begin{bmatrix}\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=1}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=1}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=2}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=2}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\end{bmatrix}}.} Bayesian linear regression-------------------------- Ultimately for error prediction we want to get the maximized probability of observing a new structure   y {\\\\displaystyle \\\\mathbf {y} }  on basis of the training set   Y {\\\\displaystyle \\\\mathbf {Y} } , which is denoted as   p  (  y  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)} . For this we need to get from the error of the linear fitting coefficients   w {\\\\displaystyle \\\\mathbf {w} }  in the reproduction of the training data   p  (  w  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)}  to  p  (  y  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)}  which is explained in the following. First we obtain   p  (  w  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)}  from the Bayesian theorem  p  (  w  \\|  Y  )  \\=  p  (  Y  \\|  w  )  p  (  w  )  p  (  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)\\={\\\\frac {p\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {w} \\\\right)p\\\\left(\\\\mathbf {w} \\\\right)}{p\\\\left(\\\\mathbf {Y} \\\\right)}}}  , where we assume multivariate Gaussian distributions   N {\\\\displaystyle {\\\\mathcal {N}}}  for the likelihood function  p  (  Y  \\|  w  )  \\=  N  (  Y  \\|  \u03a6  w  ,  \u03c3  v  2  I  ) {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {w} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {\\\\Phi } \\\\mathbf {w} ,\\\\sigma \\_{\\\\mathrm {v} }^{2}\\\\mathbf {I} \\\\right)} and the (conjugate) prior  p  (  w  )  \\=  N  (  w  \\|  0  ,  \u03c3  w  2  I  )  . {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {0} ,\\\\sigma \\_{\\\\mathrm {w} }^{2}\\\\mathbf {I} \\\\right).} The parameters   \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  and  \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  need to be optimized to balance the accuracy and robustness of the force field (see below). The normalization is obtained by  p  (  Y  )  \\= \u222b p  (  Y  \\|  w  )  p  (  w  )  d  w  . {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\\\right)\\=\\\\int p\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {w} \\\\right)p\\\\left(\\\\mathbf {w} \\\\right)d\\\\mathbf {w} .} Using the equations from above and the completing square method[\\[8]](#cite_note-bishop:book:2006-8)   p  (  w  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)}  is obtained as follows  p  (  w  \\|  Y  )  \\=  N  (  w  \\|  w \u00af  ,  \u03a3  )  . {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\Sigma } \\\\right).} Since the prior and the likelood function are described by multivariate Gaussian distributions the posterior   N  (  w  \\|  w \u00af  ,  \u03a3  ) {\\\\displaystyle {\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\Sigma } \\\\right)}  describes a multivariate Gaussian written as  N  (  w  \\|  w \u00af  ,  \u03a3  )  \\=  1  (  2 \u03c0  )  N  B  d e t  \u03a3  e x p  \\[  \u2212  (  w  \u2212  w \u00af  )  T  \u03a3  \u2212 1  (  w  \u2212  w \u00af  )  2  ] {\\\\displaystyle {\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\Sigma } \\\\right)\\={\\\\frac {1}{\\\\sqrt {\\\\left(2\\\\pi \\\\right)^{N\\_{\\\\mathrm {B} }}\\\\mathrm {det} \\\\mathbf {\\\\Sigma } }}}\\\\mathrm {exp} \\\\left\\[\\-{\\\\frac {\\\\left(\\\\mathbf {w} \\-\\\\mathbf {\\\\bar {w}} \\\\right)^{\\\\mathrm {T} }\\\\mathbf {\\\\Sigma } ^{\\-1}\\\\left(\\\\mathbf {w} \\-\\\\mathbf {\\\\bar {w}} \\\\right)}{2}}\\\\right]} where we use the following definitions for the center of the Guassian distribution   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  and the covariance matrix   \u03a3 {\\\\displaystyle \\\\mathbf {\\\\Sigma } }  w \u00af  \\=  s  v  \u03a3  \u03a6  T  Y  , {\\\\displaystyle \\\\mathbf {\\\\bar {w}} \\=s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Sigma } \\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {Y} ,}  \u03a3  \u2212 1  \\=  s  w  I  \\+  s  v  \u03a6  T  \u03a6  . {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}\\=s\\_{\\\\mathrm {w} }\\\\mathbf {I} \\+s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Phi } .} Here we have used the following definitions  s  v  \\=  1  \u03c3  v  2 {\\\\displaystyle s\\_{\\\\mathrm {v} }\\={\\\\frac {1}{\\\\sigma \\_{\\\\mathrm {v} }^{2}}}}  and  s  w  \\=  1  \u03c3  w  2  . {\\\\displaystyle s\\_{\\\\mathrm {w} }\\={\\\\frac {1}{\\\\sigma \\_{\\\\mathrm {w} }^{2}}}.} ### Regression We want to obtain the weights   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  for the linear equations   Y  \\=  \u03a6  w \u00af  . {\\\\displaystyle \\\\mathbf {Y} \\=\\\\mathbf {\\\\Phi } \\\\mathbf {\\\\bar {w}} .}   #### Solution via Inversion By using directly the covariance matrix   \u03a3 {\\\\displaystyle \\\\mathbf {\\\\Sigma } }  the equation from above  w \u00af  \\=  s  v  \u03a3  \u03a6  T  Y  , {\\\\displaystyle \\\\mathbf {\\\\bar {w}} \\=s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Sigma } \\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {Y} ,} can be solved straightforwardly. However, only   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  is directly accesible and   \u03a3 {\\\\displaystyle \\\\mathbf {\\\\Sigma } }  must be obtained from   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  via inversion. This inversion is numerically unstable and leads to lower accuracy. **Hence we don't use this method.**   #### Solution via LU factorization Here we directly use the invers of the covariance matrix   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  by solving the following equation for the weights   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  \u03a3  \u2212 1  w \u00af  \\=  s  v  \u03a6  T  Y  . {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}\\\\mathbf {\\\\bar {w}} \\=s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {Y} .} For that   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  is decomposed into it's LU factorized components   P  \u2217  L  \u2217  U {\\\\displaystyle \\\\mathbf {P} \\*\\\\mathbf {L} \\*\\\\mathbf {U} }  .After that the   L  \u2217  U {\\\\displaystyle \\\\mathbf {L} \\*\\\\mathbf {U} }  factors are used to solve the previous linear equation for the weights   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  .This method is noticeably more accurate than the method via inversion of   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  while being on the same order of magnitude in terms of computational cost. **Hence it is the method used in on\\-the\\-fly learning.**   #### Solution via regularized SVD The regression problem can also be solved by using the singular value decomposition to factorize   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  as  \u03a6  \\=  U  \u039b  V  T  . {\\\\displaystyle \\\\mathbf {\\\\Phi } \\=\\\\mathbf {U} \\\\mathbf {\\\\Lambda } \\\\mathbf {V} ^{T}.} To add the regularization the diagonal matrix   \u039b {\\\\displaystyle \\\\mathbf {\\\\Lambda } }  containing the singular values is rewritten as  \u039b  \\~  \\=  \u039b  \\+  s  w  s  v  \u039b  \u2212 1  . {\\\\displaystyle {\\\\tilde {\\\\mathbf {\\\\Lambda } }}\\=\\\\mathbf {\\\\Lambda } \\+{\\\\frac {s\\_{\\\\mathrm {w} }}{s\\_{\\\\mathrm {v} }}}\\\\mathbf {\\\\Lambda } ^{\\-1}.} By using the orthogonality of the left and right eigenvector matrices   U  T  U  \\=  I  n {\\\\displaystyle \\\\mathbf {U} ^{T}\\\\mathbf {U} \\=\\\\mathbf {I} \\_{n}}  and  V  V  T  \\=  I  n {\\\\displaystyle \\\\mathbf {V} \\\\mathbf {V} ^{T}\\=\\\\mathbf {I} \\_{n}}  the regression problem has the following solution  w  \\~  \\=  V  \u039b  \\~  \u2212 1  U  T  Y  . {\\\\displaystyle {\\\\tilde {\\\\mathbf {w} }}\\=\\\\mathbf {V} {\\\\tilde {\\\\mathbf {\\\\Lambda } }}^{\\-1}\\\\mathbf {U} ^{T}\\\\mathbf {Y} .}   #### Evidence approximation Finally to get the best results and to prevent overfitting the parameters   \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  and  \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  have to be optimized. To achieve this, we use the evidence approximation[\\[9]](#cite_note-gull:book:1989-9)[\\[10]](#cite_note-mackay:neu:2012-10)[\\[11]](#cite_note-jinnouchi:pcl:2017-11) (also called as empirical bayes, 2 maximum likelihood or generalized maximum likelihood), which maximizes the evidence function (also called model evidence) defined as  p  (  Y  \\|  \u03c3  v  2  ,  \u03c3  w  2  )  \\=  (  1  2 \u03c0  \u03c3  v  2  )  M  (  1  2 \u03c0  \u03c3  w  2  )  N  B  \u222b  e x p  \\[  \u2212 E  (  w  )  ]  d  w  , {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\|\\\\sigma \\_{\\\\mathrm {v} }^{2},\\\\sigma \\_{\\\\mathrm {w} }^{2}\\\\right)\\=\\\\left({\\\\frac {1}{\\\\sqrt {2\\\\pi \\\\sigma \\_{\\\\mathrm {v} }^{2}}}}\\\\right)^{M}\\\\left({\\\\frac {1}{\\\\sqrt {2\\\\pi \\\\sigma \\_{\\\\mathrm {w} }^{2}}}}\\\\right)^{N\\_{\\\\mathrm {B} }}\\\\int \\\\mathrm {exp} \\\\left\\[\\-E\\\\left(\\\\mathbf {w} \\\\right)\\\\right]d\\\\mathbf {w} ,}  E  (  w  )  \\=  s  v  2  \\|  \\|  \u03a6  w  \u2212  Y  \\|  \\|  2  \\+  s  w  2  \\|  \\|  w  \\|  \\|  2  . {\\\\displaystyle E\\\\left(\\\\mathbf {w} \\\\right)\\={\\\\frac {s\\_{\\\\mathrm {v} }}{2}}\\|\\|\\\\mathbf {\\\\Phi } \\\\mathbf {w} \\-\\\\mathbf {Y} \\|\\|^{2}\\+{\\\\frac {s\\_{\\\\mathrm {w} }}{2}}\\|\\|\\\\mathbf {w} \\|\\|^{2}.} The function   p  (  Y  \\|  \u03c3  v  2  ,  \u03c3  w  2  ) {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\|\\\\sigma \\_{\\\\mathrm {v} }^{2},\\\\sigma \\_{\\\\mathrm {w} }^{2}\\\\right)}  corresponds to the probability that the regression model with parameters   \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  and  \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  provides the reference data   Y {\\\\displaystyle \\\\mathbf {Y} } . Hence the best fit is optimized by maximizing this probability. The maximization is carried out by simultaneously solving the following equations  s  w  \\=  \u03b3  \\|  w \u00af  \\|  2  , {\\\\displaystyle s\\_{\\\\mathrm {w} }\\={\\\\frac {\\\\gamma }{\\|\\\\mathbf {\\\\bar {w}} \\|^{2}}},}  s  v  \\=  M \u2212 \u03b3  \\|  T  \u2212  \u03d5  w \u00af  \\|  2  , {\\\\displaystyle s\\_{\\\\mathrm {v} }\\={\\\\frac {M\\-\\\\gamma }{\\|\\\\mathbf {T} \\-\\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} \\|^{2}}},}  \u03b3 \\=  \u2211  k \\= 1  N  B  \u03bb  k  \u03bb  k  \\+  s  w {\\\\displaystyle \\\\gamma \\=\\\\sum \\\\limits \\_{k\\=1}^{N\\_{\\\\mathrm {B} }}{\\\\frac {\\\\lambda \\_{k}}{\\\\lambda \\_{k}\\+s\\_{\\\\mathrm {w} }}}} where   \u03bb  k {\\\\displaystyle \\\\lambda \\_{k}}  are the eigenvalues of the matrix   s  v  \u03a6  T  \u03a6 {\\\\displaystyle s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Phi } }  . The evidence approximation can be done for any of the above\\-described regression methods, but we combine it only with the solutions from LU factorization since solutions via SVD are calculationally too expensive to be carried out multiple times. ### Prediction and error estimates By using the relation  p  (  y  \\|  Y  )  \\= \u222b p  (  y  \\|  w  )  p  (  w  \\|  Y  )  d  w {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)\\=\\\\int p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {w} \\\\right)p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)d\\\\mathbf {w} } and the completing square method[\\[8]](#cite_note-bishop:book:2006-8) the distribution of   p  (  y  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)}  is written as  p  (  y  \\|  Y  )  \\=  N  (  \u03d5  w \u00af  ,  \u03c3  )  , {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\sigma } \\\\right),}  \u03c3  \\=  1  s  v  I  \\+  \u03d5  T  \u03a3  \u03d5  . {\\\\displaystyle \\\\mathbf {\\\\sigma } \\={\\\\frac {1}{s\\_{\\\\mathrm {v} }}}\\\\mathbf {I} \\+\\\\mathbf {\\\\phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Sigma } \\\\mathbf {\\\\phi } .} Here   \u03d5 {\\\\displaystyle \\\\mathbf {\\\\phi } }  is similar to   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  but only for the new structure   y {\\\\displaystyle \\\\mathbf {y} }  . The mean vector   \u03d5  w \u00af {\\\\displaystyle \\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} }  contains the results of the predictions on the dimensionless energy per atom, forces, and stress tensor.The diagonal elements of   \u03c3 {\\\\displaystyle \\\\mathbf {\\\\sigma } } , which correspond to the variances of the predicted results, are used as the uncertainty in the prediction. Sparsification-------------- Within the machine learning force field methods the sparsification of local reference configurations and the angular descriptors is supported.The sparsification of local reference configurations is by default used and the extent is mainly controlled by ML\\_EPS\\_LOW. This is procedure is important to avoid overcompleteness and to dampen the acquisition of new configurations in special cases. The sparsification of angular descriptors is by default not used and should be used very cautiously and only if it's necessary. The description of the usage of this feature is given in ML\\_LSPARSDES. ### Sparsification of local reference configurations We start by defining the similarity kernel (or Gram matrix) for the local configurations with each other  K  i  B  ,  j  B  \\=  K  (  X  i  B  ,  X  j  B  )  . {\\\\displaystyle \\\\mathbf {K} \\_{i\\_{B},j\\_{B}}\\=\\\\mathbf {K} \\\\left(\\\\mathbf {X} \\_{i\\_{B}},\\\\mathbf {X} \\_{j\\_{B}}\\\\right).} The CUR algorithm starts out from the diagonalization of this matrix  U  T  K  U  \\=  L  \\= diag  (  l  1  ,  l  2  , . . . ,  l  N  B  ) , {\\\\displaystyle \\\\mathbf {U} ^{T}\\\\mathbf {K} \\\\mathbf {U} \\=\\\\mathbf {L} \\={\\\\textrm {diag}}(l\\_{1},l\\_{2},...,l\\_{N\\_{B}}),} where   U {\\\\displaystyle \\\\mathbf {U} }  is the matrix of the eigenvectors   u  j {\\\\displaystyle \\\\mathbf {u\\_{j}} }  U  \\= (  u  1  ,  u  2  , . . . ,  u  N  B  ) ,  u  j  \\=  (  u  1 j  u  2 j  . . .  u  N  B  j  ) {\\\\displaystyle \\\\mathbf {U} \\=(\\\\mathbf {u} \\_{1},\\\\mathbf {u} \\_{2},...,\\\\mathbf {u} \\_{N\\_{B}}),\\\\qquad \\\\mathbf {u} \\_{j}\\=\\\\left({\\\\begin{array}{c}u\\_{1j}\\\\\\\\u\\_{2j}\\\\\\\\...\\\\\\\\u\\_{N\\_{B}j}\\\\end{array}}\\\\right)} In contrast to the original CUR algorithm[\\[12]](#cite_note-mahoney:pnas:2009-12) that was developed to efficiently select a few significant columns of the matrix   K {\\\\displaystyle \\\\mathbf {K} }  ,we search for (few) insignificant local configurations and remove them.We dispose of the columns of   K {\\\\displaystyle \\\\mathbf {K} }  that are correlated with the   N  l o w {\\\\displaystyle N\\_{\\\\mathrm {low} }}  eigenvectors   u  \u03c7 {\\\\displaystyle u\\_{\\\\chi }}  with the smallest eigenvalues   l  \u03c7 {\\\\displaystyle l\\_{\\\\chi }} . The correlation is measured by the statistical leverage scoring measured for each column   j {\\\\displaystyle j}  of  K {\\\\displaystyle \\\\mathbf {K} }  as  \u03c9  j  \\=  1  N  l o w  \u2211  \u03c7 \\= 1  N  B  \u03b3  \u03c7 , j  , {\\\\displaystyle \\\\omega \\_{j}\\={\\\\frac {1}{N\\_{\\\\mathrm {low} }}}\\\\sum \\\\limits \\_{\\\\chi \\=1}^{N\\_{B}}\\\\gamma \\_{\\\\chi ,j},}  \u03b3  \u03c7 , j  \\=  {  u  j \u03c7  2  i f  l  \u03c7  \\>  \u03f5  l o w  0  o t h e r w i s e  , {\\\\displaystyle \\\\gamma \\_{\\\\chi ,j}\\=\\\\left\\\\{{\\\\begin{array}{cl}u\\_{j\\\\chi }^{2}\\&\\\\mathrm {if} \\\\,\\\\,l\\_{\\\\chi }\\>\\\\epsilon \\_{\\\\mathrm {low} }\\\\\\\\0\\&\\\\mathrm {otherwise} \\\\end{array}}\\\\right.,} where   \u03f5  l o w {\\\\displaystyle \\\\epsilon \\_{\\\\mathrm {low} }}  (see also ML\\_EPS\\_LOW) is the threshold for the lowest eigenvalues. One can prove (using the orthogonality of the eigenvectors and their completeness relation) that this is equivalent to the usual CUR leverage scoring algorithm, i.e. removing the least significant columns will result in those columns that are most strongly \"correlated\" to the largest eigenvalues. ### Sparsification of angular descriptors The sparsification of the angular descriptors is done in a similar manner as for the local reference configurations.We start by defining the   N  D  \u00d7  N  D {\\\\displaystyle N\\_{D}\\\\times N\\_{D}}  square matrix  A  \\=  X  X  T  . {\\\\displaystyle \\\\mathbf {A} \\=\\\\mathbf {X} \\\\mathbf {X} ^{T}.} Here   N  D {\\\\displaystyle N\\_{D}}  denotes the number of angular descriptors given by   N  D  \\=  \u2211  l \\= 1  L  m a x  1 2  N  R  l  (  N  R  l  \\+ 1  )  (  L  m a x  \\+ 1  )  . {\\\\displaystyle N\\_{D}\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}{\\\\frac {1}{2}}N\\_{R}^{l}\\\\left(N\\_{R}^{l}\\+1\\\\right)\\\\left(L\\_{\\\\mathrm {max} }\\+1\\\\right).} In this equation the symmetry of the descriptors   \u03c1  n \u03bd l  \\=  \u03c1  \u03bd n l {\\\\displaystyle \\\\rho \\_{n\\\u l}\\=\\\\rho \\_{\\\u nl}}  is already taken into account.The matrix   X {\\\\displaystyle \\\\mathbf {X} }  is constructed from the vectors of the angular descriptors   (  x  1  ( 3 )  ,  x  2  ( 3 )  , . . . ,  x  N  B  ( 3 )  ) {\\\\displaystyle \\\\left(\\\\mathbf {x} \\_{1}^{(3\\)},\\\\mathbf {x} \\_{2}^{(3\\)},...,\\\\mathbf {x} \\_{N\\_{B}}^{(3\\)}\\\\right)} . The matrix   X {\\\\displaystyle \\\\mathbf {X} }  has dimension   N  D  \u00d7  N  B {\\\\displaystyle N\\_{D}\\\\times N\\_{B}}  and the matrix product is done over the   N  B {\\\\displaystyle N\\_{B}}  elements of the local configurations. In analogy to the local configurations the   j {\\\\displaystyle j} th element of the matrix   A {\\\\displaystyle \\\\mathbf {A} }  is written as   a  j  \\=  \u2211  \u03c7 \\= 1  N  D  (  u  j \u03c7  l  \u03c7  )  u  \u03c7  . {\\\\displaystyle \\\\mathbf {a} \\_{j}\\=\\\\sum \\\\limits \\_{\\\\chi \\=1}^{N\\_{D}}(u\\_{j\\\\chi }l\\_{\\\\chi })\\\\mathbf {u\\_{\\\\chi }} .} In contrast to the sparsification of the local configuration and more in line with the original CUR method, the columns of matrix   A {\\\\displaystyle \\\\mathbf {A} }  are kept when they are strongly correlated to the   k {\\\\displaystyle k}  (see also ML\\_NRANK\\_SPARSDES) eigenvectors   u  \u03c7 {\\\\displaystyle u\\_{\\\\chi }}  which have the largest eigenvalues   l  \u03c7 {\\\\displaystyle l\\_{\\\\chi }} . The correlation of the eigenvalues is then measured via a leverage scoring  \u03c9  j  \\=  1 k  \u2211  \u03c7 \\= 1  k  u  j \u03c7  2  . {\\\\displaystyle \\\\omega \\_{j}\\={\\\\frac {1}{k}}\\\\sum \\\\limits \\_{\\\\chi \\=1}^{k}u\\_{j\\\\chi }^{2}.} From the leverage scorings, the ones with the highest values are selected until the ratio of the selected descriptors to the total number of descriptors becomes a previously selected value   x  s p a r s {\\\\displaystyle x\\_{\\\\mathrm {spars} }}  (see also ML\\_RDES\\_SPARSDES)."}
{"file_name": "IBSE.md", "content": "IBSE= \\[integer]n| Default: **IBSE** | \\= 0 |  || --- | --- | --- | Description: IBSE can be used to select the algorithm for solving the Bethe\\-Salpeter or Casida equation.  --- The following options are available to solve the Bethe\\-Salpeter or Casida equation: * IBSE \\= 0: Exact diagonalization* IBSE \\= 1: Time evolution Related tag and articles------------------------ IBSE,BSEPREC,NBANDSV,NBANDSO,CSHIFT,OMEGAMAX,BSE calculations,Time\\-dependent density\\-functional theory calculations,Bethe\\-Salpeter equations"}
{"file_name": "PROCAR_OPT.md", "content": "The PROCAR\\_OPT file is written when the KPOINTS\\_OPT feature is used. It has the same format as the PROCAR file, but contains information at the **k** points specified in the KPOINTS\\_OPT file."}
{"file_name": "CO_vibration.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Calculation of the vibrational frequencies of a CO molecule. Input----- ### POSCAR  ```CO molecule in a box 1.0         \u00a0! universal scaling parameters 8.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 8.0 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)1 1          \u00a0! number of atoms for each speciessel          \u00a0! selective degrees of freedom are changedcart         \u00a0! positions in cartesian coordinates 0 0 0       F F T \u00a0! first atom 0 0 1.143   F F T \u00a0! second atom  ``` Alternatively, try to fix one of the atoms completely. ### INCAR  ```SYSTEM = CO molecule in a boxISMEAR = 0  \u00a0! Gaussian smearingIBRION = 5  \u00a0! calculate second derivatives, Hessian matrix, and phonon frequencies            \u00a0! from finite differencesNFREE = 2   \u00a0! central differencesPOTIM = 0.02\u00a0! 0.02 A stepwidth NSW = 1     \u00a0! ionic steps > 0  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- * The selected degrees of freedom are displaced once in the direction   x ^ {\\\\displaystyle {\\\\hat {x}}}  and once in   \u2212  x ^ {\\\\displaystyle \\-{\\\\hat {x}}}  by 0\\.02   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  (POTIM). * In the present case this makes 4 displacements plus the equilibrium positions (i.e. a total of five ionic configurations). ### OUTCAR At the end of the OUTCAR file the following output should be obtained:  ```SECOND DERIVATIVES (NOT SYMMETRIZED)------------------------------------              1Z          2Z 1Z  -114.737304  114.737304 2Z   114.458316 -114.458316  Eigenvectors and eigenvalues of the dynamical matrix----------------------------------------------------    1 f  =   63.887522 THz   401.417139 2PiTHz 2131.058277 cm-1   264.217647 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000            0           0   -0.655280     0.000000  0.000000  1.143000            0           0    0.755386  ```  ```  2 f/i=    0.038494 THz     0.241864 2PiTHz    1.284016 cm-1     0.159198 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000            0           0   -0.755386     0.000000  0.000000  1.143000            0           0   -0.655280  ``` Download--------  COvib.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorialsBack to the main page."}
{"file_name": "NERSC_Berkeley_2016.md", "content": "Lectures-------- * DFT, PW, and PAW: \"VASP: The basics. DFT, plane waves, PAW, ...\". Video: Part1 and Part2 * Hybrid functionals: \"VASP: Hybrid functionals\". Video * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". Video * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". Video Tutorials--------- * From Atoms to Bulk systems: A description of the examples \"Atoms and molecules\" and \"Simple bulk systems\".* Surface Science: A description of the examples \"A bit of surface science\".* Dielectric properties and RPA: A description of the examples \"Dielectric properties and RPA\". Exercises--------- HOWTO: running the exercises ### Atoms and molecules O atom O atom spinpolarized O atom spinpolarized low symmetry O dimer  CO CO vibration CO partial DOS  H2O H2O vibration H2O molecular dynamics ### Simple bulk systems fcc Si fcc Si DOS fcc Si bandstructure cd Si cd Si volume relaxation cd Si relaxation fcc Ni graphite TS binding energy graphite MBD binding energy graphite interlayer distance ### A bit of surface science Ni 100 surface relaxation Ni 100 surface DOS Ni 100 surface bandstructure Ni 111 surface relaxation CO on Ni 111 surface Ni 111 surface high precision partial DOS of CO on Ni 111 surface vibrational frequencies of CO on Ni 111 surface STM of graphite STM of graphene ### Hybrid functionals bandgap of Si using different DFT\\+HF methods fcc Ni DOS with hybrid functional Si HSE bandstructure ### Dielectric properties and RPA dielectric properties of SiC bandgap of Si in GW equilibrium volume of Si in the RPA bandstructure of SrVO3 in GW dielectric properties of Si using BSE model BSE calculation on Si\")  ---"}
{"file_name": "ML_RCUT2.md", "content": "ML\\_RCUT2= \\[real]   Default: **ML\\_RCUT2** \\= 5\\.0nDescription: This flag sets the cutoff radius   R  cut {\\\\displaystyle R\\_{\\\\text{cut}}}  for the angular descriptor   \u03c1  i  ( 3 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}(r)}  in the machine learning force field method. The unit of the cut\\-off radius is   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  .  --- The angular descriptor is constructed from  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\= \u222c d  r  ^  d  s  ^  \u03b4  (  r  ^  \u22c5  s  ^  \u2212  c o s  \u03b8  )  \u2211  j \\= 1  N  a  \u2211  k \u2260 j  N  a  \u03c1  i k  (  r  r  ^  )  \u03c1  i j  (  s  s  ^  )  , where  \u03c1  i j  (  r  )  \\=  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\iint d{\\\\hat {\\\\mathbf {r} }}d{\\\\hat {\\\\mathbf {s} }}\\\\delta \\\\left({\\\\hat {\\\\mathbf {r} }}\\\\cdot {\\\\hat {\\\\mathbf {s} }}\\-\\\\mathrm {cos} \\\\theta \\\\right)\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{k\\\eq j}^{N\\_{a}}\\\\rho \\_{ik}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)\\\\rho \\_{ij}\\\\left(s{\\\\hat {\\\\mathbf {s} }}\\\\right),\\\\quad {\\\\text{where}}\\\\quad \\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right)\\=f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  and  g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is an approximation of the delta function. A basis set expansion of   \u03c1  i  ( 3 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}(r)}  yields the expansion coefficients   p  n \u03bd l  i {\\\\displaystyle p\\_{n\\\u l}^{i}}  which are used in practice to describe the atomic environment (see this section for details). The tag ML\\_RCUT2 sets the cutoff radius   R  cut {\\\\displaystyle R\\_{\\\\text{cut}}}  at which the cutoff function   f  c u t  (  r  i j  ) {\\\\displaystyle f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)}  decays to zero. | **Mind:** The cutoff radius determines how many neighbor atoms      N   a      {\\\\displaystyle N\\_{\\\\mathrm {a} }}   }} are taken into account to describe each central atom's environment. Hence, important features may be missed if the cutoff radius is set to a too small value. On the other hand, a large cutoff radius increases the computational cost as the cutoff sphere contains more neighbor atoms. A larger cutoff can also significantly degrade the learning efficiency. A good compromise is system\\-dependent, therefore different values should be tested to achieve satisfactory accuracy **and** speed. || --- | For materials containing only H, B, C, O, N, and F (i.e. organic molecules, polymers), the learning efficiency might increase when ML\\_RCUT2 is set to values around 4   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  (that is, less training data are required to achieve a specific accuracy), wheres for materials with very long bonds, a larger value around 6   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  can improve the accuracy,"}
{"file_name": "EMAX.md", "content": "EMAX= \\[real]n| Default: **EMAX** | \\= highest KS\\-eigenvalue \\+     \u0394   {\\\\displaystyle \\\\Delta }  \\Delta |  || --- | --- | --- | Description: EMAX specifies the upper boundary of the energy rangefor the evaluation of the DOS.  --- The DOS is evaluated each NBLOCK steps, DOSCAR is updated each NBLOCK\\*KBLOCK steps."}
{"file_name": "LTMP2_-_Tutorial.md", "content": "Overview> MP2> LTMP2> stochastic LTMP2 > High energy contributions using stochastic LTMP2\")> List of tutorialsOn this page, we explain how to perform a calculation using the **LTMP2**[\\[1]](#cite_note-schaefer2017-1) algorithm. Make sure you successfully completed the preparation steps Hartree\\-Fock ground state and Hartree\\-Fock virtuals. **NOTE:** *If you use this algorithm, please cite reference [\\[1]](#cite_note-schaefer2017-1) in your publication in addition to the standard VASP reference.* The INCAR file-------------- The LTMP2 calculation can simply be performed using the following INCAR file  ```ALGO = ACFDTRK LMP2LT = .TRUE.NOMEGA = # number of tau points (see below)NBANDS = # same value as in the Hartree-Fock unoccupied step ( = number of plane-waves)ENCUT = # same value as in the Hartree-Fock stepLORBITALREAL = .TRUE.PRECFOCK = FastKPAR = # parallelization (see below)  ``` Make sure that VASP reads the WAVECAR file from the Hartree\\-Fock virtuals step. The setting for PRECFOCK is strongly recommended, since the code heavily relies on real space grid FFTs. #### NOMEGA flag The number of   \u03c4 {\\\\displaystyle \\\\tau } \\-points is controlled by the NOMEGA flag. This is necessary to calculate the Laplace transformed energy denominator (see Ref [\\[1]](#cite_note-schaefer2017-1) for details),  1  \u03b5  i  \\+  \u03b5  j  \u2212  \u03b5  a  \u2212  \u03b5  b  \\= \u2212  \u222b  0  \u221e  e  \u2212 (  \u03b5  i  \\+  \u03b5  j  \u2212  \u03b5  a  \u2212  \u03b5  b  ) \u03c4  d  \u03c4  . {\\\\displaystyle {\\\\frac {1}{\\\\varepsilon \\_{i}\\+\\\\varepsilon \\_{j}\\-\\\\varepsilon \\_{a}\\-\\\\varepsilon \\_{b}}}\\=\\-\\\\int \\_{0}^{\\\\infty }{\\\\textrm {e}}^{\\-(\\\\varepsilon \\_{i}\\+\\\\varepsilon \\_{j}\\-\\\\varepsilon \\_{a}\\-\\\\varepsilon \\_{b})\\\\tau }\\\\;{\\\\textrm {d}}\\\\tau \\\\;.} Usually it is sufficient to set NOMEGA\\=6\\. For materials with a small bandgap it is worth checking if the MP2 energy changes with increasing NOMEGA (e.g. 8 or 10\\). Note, that the MP2 energy diverges with 1/bandgap, independent of NOMEGA. Parallelization--------------- The LTMP2 algorithm is a high\\-performance code and can easily be used on many CPUs. Both OpenMP and MPI is supported. We recommend to use MPI for parallelization since the code possesses an almost ideal parallelization efficiency. OpenMP should only be used to increase the shared memory, if necessary. In order to activate the efficient MPI parallelization use the KPAR flag in the following way (note that the usual meaning of the KPAR flag becomes obsolete in the LTMP2 algorithm). KPAR specifies the number of plane\\-waves treated in parallel. Ideally, set KPAR to half of the used MPI ranks. If this results in memory issues, further decrease KPAR (such that KPAR is alway a divisor of the used MPI ranks) or increase the number of OpenMP threads. #### Example for 512 CPUs MPI ranks: 512    OpenMP threads per rank: 1     ```KPAR = 256  ``` To decrease the memory requirement you can alternatively set KPAR to 128 or 64 and so on. Or also try    MPI ranks: 256    OpenMP threads per rank: 2     ```KPAR = 128  ```"}
{"file_name": "GGA_COMPAT.md", "content": "GGA\\_COMPAT= .TRUE. \\| .FALSE.   Default: **GGA\\_COMPAT** \\= .TRUE.nDescription: If set to GGA\\_COMPAT \\= .*FALSE*., this tag restores the full lattice symmetry for gradient\\-corrected functionals.  --- GGA and METAGGA functionals might break the symmetry ofthe Bravais lattice slightly for cells that are not primitive cubic cells.The origin of this problem is subtle and relates to the fact that the gradient field breaks the lattice symmetry for noncubic lattices. This can be fixed by setting  ```GGA_COMPAT = .FALSE.  ``` to apply a spherical cutoff to the gradient field. In other words, the gradient field, as well as the charge density are set to zero for all reciprocal lattice vectors   G {\\\\displaystyle {\\\\mathbf {G}}}  that exceed a certain cutoff length  G  c u t {\\\\displaystyle {\\\\mathbf {G}}\\_{cut}}  before calculating the exchange\\-correlation energy and potential. The cutoff   G  c u t {\\\\displaystyle {\\\\mathbf {G}}\\_{cut}}  is determined automatically so that the cutoff sphere is fully inscribed in the parallelepiped defined by the FFT grid in reciprocal space. | **Mind:** For compatibility reasons with older versions of VASP, the default is GGA\\_COMPAT\\=*.TRUE.* However, setting the tag usually changes the energy only in the sub\\-meV energy range (0\\.1 meV), and for most results the setting of GGA\\_COMPAT is insignificant. The most important exception is for the calculation of magnetic anisotropy, for which we strongly recommend GGA\\_COMPAT\\=.*FALSE*. || --- |"}
{"file_name": "Efficient_single_band_eigenvalue-minimization.md", "content": "A very efficient scheme for the calculation of the lowest eigenvalues, might be obtainedby increasing the basis set mentioned in the previous section in each iteration step,i.e.: At the step N solve the eigenvalue problem  \u27e8  b  i  \\|  H  \u2212 \u03f5  S  \\|  b  j  \u27e9 \\= 0 {\\\\displaystyle \\\\langle b\\_{i}\\|{\\\\bf {H}}\\-\\\\epsilon {\\\\bf {S}}\\|b\\_{j}\\\\rangle \\=0} with the basis set  b  i , i \\= 1 , N \u2212 1  \\= {  \u03d5  n  /  g  n  1  /  g  n  2  /  g  n  3  /  . . . } . {\\\\displaystyle b\\_{i,i\\=1,N\\-1}\\=\\\\{\\\\phi \\_{n}/g\\_{n}^{1}/g\\_{n}^{2}/g\\_{n}^{3}/...\\\\}.} The lowest eigenvector of the eigenvalue problem is usedto calculate a new (possibly preconditioned) search vector   g  n  N {\\\\displaystyle g\\_{n}^{N}}  .  ---"}
{"file_name": "NHC_thermostat.md", "content": "The standard Nos\u00e9\\-Hoover thermostat suffers from well\\-known issues, such as the ergodicity violation in the case of simple harmonic oscillator[\\[1]](#cite_note-martyna:jcp:92-1). As proposed by Martyna and Klein[\\[1]](#cite_note-martyna:jcp:92-1), these problems can be solved by using multiple Nose Hoover thermostats connected in a chain. Although the underlining dynamics is non\\-Hamiltonian, the corresponding equations of motion conserve the following energy term:   H \u2032  \\=  H  (  r  ,  p  ) \\+  \u2211  j \\= 1  M  p  \u03b7  j  2  2  Q  j  \\+ ( 3 N \u2212  N  c  )  k  B  T  \u03b7  1  \\+  k  B  T  \u2211  j \\= 2  M  \u03b7  j  , {\\\\displaystyle {\\\\mathcal {H'}}\\={\\\\mathcal {H}}({\\\\mathbf {r}},{\\\\mathbf {p}})\\+\\\\sum \\\\limits \\_{j\\=1}^{M}{\\\\frac {p\\_{\\\\eta \\_{j}}^{2}}{2Q\\_{j}}}\\+(3N\\-N\\_{c})k\\_{B}T\\\\eta \\_{1}\\+k\\_{B}T\\\\sum \\\\limits \\_{j\\=2}^{M}\\\\eta \\_{j},} where   H  (  r  ,  p  ) {\\\\displaystyle {\\\\mathcal {H}}({\\\\mathbf {r}},{\\\\mathbf {p}})}  is the Hamiltonian of the physical system,   M {\\\\displaystyle M}  ,  N {\\\\displaystyle N}  and  N  c {\\\\displaystyle N\\_{c}}  are the numbers of thermostats, atoms in the cell, and geometric constraints, respectively, and   \u03b7  j {\\\\displaystyle \\\\eta \\_{j}}  ,  p  \u03b7  j {\\\\displaystyle p\\_{\\\\eta \\_{j}}} , and   Q  j {\\\\displaystyle Q\\_{j}}  are the position, momentum, and mass\\-like parameter associated with the thermostat   j {\\\\displaystyle j} . Just like the total energy in the NVE ensemble,  H \u2032 {\\\\displaystyle {\\\\mathcal {H'}}}  is valuable for diagnostics purposes. Indeed, a significant drift in   H \u2032 {\\\\displaystyle {\\\\mathcal {H'}}}  indicates that the corresponding computational setting is suboptimal. Typical reasons for this behavior involve noisy forces (e.g., because of a poor SCF convergence) and/or a too large integration step (defined via POTIM).  The number of thermostats is controlled by the flag NHC\\_NCHAINS. Typically, this flag is set to a value between 1 and 5, the maximal allowed value is 20\\. In the special case of NHC\\_NCHAINS\\=0, the thermostat is switched off, leading to a MD in the microcanonical ensemble. Another special case of NHC\\_NCHAINS\\=1 corresponds to the standard Nose\\-Hoover thermostat.  The only parameter of this thermostat is the characteristic time scale (  \u03c4 {\\\\displaystyle \\\\tau } ), defined via flag NHC\\_PERIOD. This parameter is used to setup the mass\\-like variables via the relations:   Q  1  \\= 3 ( N \u2212  N  c  )  k  B  T  \u03c4  2 {\\\\displaystyle Q\\_{1}\\=3(N\\-N\\_{c})k\\_{B}T\\\\tau ^{2}}  Q  j  \\=  k  B  T  \u03c4  2  ;  j \\= 2 , \u2026 , M {\\\\displaystyle Q\\_{j}\\=k\\_{B}T\\\\tau ^{2};\\\\;\\\\;\\\\;j\\=2,\\\\dots ,M} Furthermore, due to rapidly varying forces in thermostat variables propagators, the standard velocity Verlet algorithm with fixed integration step might be insufficiently accurate. As proposed by Tuckerman[\\[2]](#cite_note-2), the RESPA[\\[3]](#cite_note-3) methodology can be used to overcome this problem, in which the integration step used in thermostat variables propagation is split into NHC\\_NRESPA equal parts, each of which may be further divided into NHC\\_NS smaller parts treated by Suzuki\\-Yoshida scheme of fourth or sixth order.   ---"}
{"file_name": "ALPHA_VDW.md", "content": "ALPHA\\_VDW= \\[real]n| Default: **ALPHA\\_VDW** | \\= 0\\.94950 | for IVDW\\_NL\\=3 or || --- | --- | --- ||  | \\= 0\\.28248 | for IVDW\\_NL\\=4 | Description: Specify   \u03b1 {\\\\displaystyle \\\\alpha }  in vdW\\-DF3\\-opt1/vdW\\-DF3\\-opt2\\.  --- The ALPHA\\_VDW tag allows to specify the value of the parameter   \u03b1 {\\\\displaystyle \\\\alpha }  in the kernel of the vdW\\-DF3\\-opt1/vdW\\-DF3\\-opt2 nonlocal van der Waals functionals.[\\[1]](#cite_note-chakraborty:jctc:2020-1)"}
{"file_name": "KSPACING.md", "content": "KSPACING= \\[real]   Default: **KSPACING** \\= 0\\.5nDescription: The tag KSPACING determines the number of k points if the KPOINTS fileis not present.  --- KSPACING is the smallest allowed spacing between k points in units of   \u00c5  \u2212 1 {\\\\displaystyle \\\\mathrm {\\\\AA} ^{\\-1}} . The number of k points increases when the spacing is decreased.The number of k points in the direction of the first, second and third reciprocal lattice vector is determined by   N  i  \\=  m a x  ( 1 ,  c e i l i n g  (  \\|  b  i  \\|  2 \u03c0  /  K S P A C I N G  ) ) {\\\\displaystyle N\\_{i}\\=\\\\mathrm {max} (1,\\\\mathrm {ceiling} (\\|\\\\mathbf {b} \\_{i}\\|2\\\\pi /\\\\mathrm {KSPACING} ))} with   c e i l i n g  ( x ) {\\\\displaystyle \\\\mathrm {ceiling} (x)}  being the ceiling function which returns the least integer that is equal or larger than   x {\\\\displaystyle x} . In this equation,   b  i {\\\\displaystyle \\\\mathbf {b} \\_{i}}  are the reciprocal lattice vectors   b  i  a  j  \\=  \u03b4  i j {\\\\displaystyle \\\\mathbf {b} \\_{i}\\\\mathbf {a} \\_{j}\\=\\\\delta \\_{ij}}  .The generated grid is centered at the   \u0393 {\\\\displaystyle \\\\Gamma }  point if KGAMMA\\=True (default), i.e., includes the   \u0393 {\\\\displaystyle \\\\Gamma }  point. For KGAMMA\\=False, the grid is shifted away from the   \u0393 {\\\\displaystyle \\\\Gamma }  point as done for Monkhorst\\-Pack grids.  | **Mind:** This implementation is not entirely identical with the deprecated automatic k\\-point generation used in the KPOINTS file. || --- | If the k points are generated using the automatic mode in the KPOINTS file,   N  i {\\\\displaystyle N\\_{i}}  is calculated as  N  i  \\=  i n t  (  m a x  ( 1 ,  R  k  \\|  b  i  \\|  \\+0\\.5 ) ) {\\\\displaystyle N\\_{i}\\=\\\\mathrm {int} (\\\\mathrm {max} (1,R\\_{k}\\|\\\\mathbf {b} \\_{i}\\|\\+0\\.5\\))}  with   R  k  \\= 2 \u03c0  /  K S P A C I N G {\\\\displaystyle R\\_{k}\\=2\\\\pi /\\\\mathrm {KSPACING} } and rounding it to the nearest integer. We recommend using the KSPACING tag in the INCAR file and avoiding the automatic mode via the KPOINTS file."}
{"file_name": "Downsampling_of_Hartree-Fock_operator.md", "content": "### Downsampling Consider the description of a certain bulk system, using a supercell made up of  N {\\\\displaystyle N}  primitive cells, in such a way that, {**A** i' }, the lattice vectorsof the supercell are given by **A** i' \\=*n* i**A** i (i\\=1,2,3\\), where {**A** i} are the lattice vectors of the primitive cell. Let  R  m a x  \\= 2  /  \u03bc {\\\\displaystyle R\\_{\\\\rm {max}}\\=2/\\\\mu }  be the distance for which  e r f c  (  \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\|  \u2248 0  f o r  \\|  r  \u2212  r  \u2032  \\|  \\>  R  m a x  . {\\\\displaystyle {\\\\frac {\\\\mathrm {erfc} \\\\left(\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|\\\\right)}{\\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|}}\\\\approx 0\\\\quad \\\\mathrm {for} \\\\quad {\\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|}\\>R\\_{\\\\mathrm {max} }.} When the nearest neighbour distance between the periodically repeated imagesof the supercell   R  N N  \\> 2  R  m a x {\\\\displaystyle R\\_{NN}\\>2R\\_{\\\\rm {max}}}  (i.e.   R  N N  \\> 4  /  \u03bc {\\\\displaystyle R\\_{NN}\\>4/\\\\mu } ), the short\\-range Hartree\\-Fock potential can be represented exactly, sampling the BZ at the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only, i.e.,  V  x  S R  (  r  ,  r  \u2032  )  \\= \u2212  e  2  2  \u2211  m  f  m  \u0393  u  m  \u0393  \u2217  (  r  \u2032  )  u  m  \u0393  (  r  )  e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\|  . {\\\\displaystyle V\\_{x}^{\\\\mathrm {SR} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m}f\\_{m{\\\\Gamma }}u\\_{m{\\\\Gamma }}^{\\*}(\\\\mathbf {r} ')u\\_{m{\\\\Gamma }}(\\\\mathbf {r} ){\\\\frac {\\\\mathrm {erfc} (\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|)}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}.} This is equivalent to a representation of the bulk system using the primitive cell and a   n  1  \u00d7  n  2  \u00d7  n  3 {\\\\displaystyle n\\_{1}\\\\times n\\_{2}\\\\times n\\_{3}}  sampling of the BZ,   V  x  S R  (  r  ,  r  \u2032  )  \\= \u2212  e  2  2  \u2211  m \u2032  q  f  m \u2032  q  e  \u2212 i  q  \u22c5  r  \u2032  u  m \u2032  q  \u2217  (  r  \u2032  )  u  m \u2032  q  (  r  )  e  i  q  \u22c5  r  \u00d7  e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle V\\_{x}^{\\\\mathrm {SR} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m'\\\\mathbf {q} }f\\_{m'\\\\mathbf {q} }e^{\\-i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} '}u\\_{m'\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')u\\_{m'\\\\mathbf {q} }(\\\\mathbf {r} )e^{i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} }\\\\times {\\\\frac {\\\\mathrm {erfc} (\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|)}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}} where the set of   q {\\\\displaystyle {\\\\mathbf {q} }}  vectors is given by  {  q  } \\= { i  G  1  \\+ j  G  2  \\+ k  G  3  } , {\\\\displaystyle \\\\{\\\\mathbf {q} \\\\}\\=\\\\{i\\\\mathbf {G} \\_{1}\\+j\\\\mathbf {G} \\_{2}\\+k\\\\mathbf {G} \\_{3}\\\\},} for *i* \\=1,..,*n* 1, *j* \\=1,..,n 2, and *k* \\=1,..,n 3, with **G**1,2,3 being the reciprocal lattice vectors of the supercell. In light of the above it is clear that the number of   q {\\\\displaystyle {\\\\mathbf {q} }} \\-points needed to representthe short\\-range Hartree\\-Fock potential decreases with decreasing   R  m a x {\\\\displaystyle R\\_{\\\\rm {max}}} (i.e., with increasing   \u03bc {\\\\displaystyle \\\\mu }  ).Furthermore, one should realize that the maximal range of the exchange interactionsis not only limited by the   e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  /  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle {\\\\rm {erfc}}(\\\\mu \\|{\\\\bf {r}}\\-{\\\\bf {r}}'\\|)/\\|{\\\\bf {r}}\\-{\\\\bf {r}}'\\|} kernel, but depends on the extent of the spatial overlap of the orbitals as well (this can easily be shown for the Hartree\\-Fock exchange energy when one adopts a Wannier representation of the orbitals);  R  m a x  \\= 2  /  \u03bc {\\\\displaystyle R\\_{\\\\rm {max}}\\=2/\\\\mu } ; (as defined above), therefore, provides an upper limitfor the range of the exchange interactions, consistent with maximal spatialoverlap of the orbitals. It is thus well conceivable that the situation arises where the short\\-range Hartree\\-Fock potential may be represented on a considerably coarser mesh of points in the BZ than the other contributions to the Hamiltonian.To take advantage of this situation one may, for instance, restrict the sum over   q {\\\\displaystyle {\\\\bf {q}}}  in the short range exchange potential to a subset, {  q  k {\\\\displaystyle {\\\\bf {q\\_{k}}}} }, of the full   N  1  \u00d7  N  2  \u00d7  N  3 {\\\\displaystyle N\\_{1}\\\\times N\\_{2}\\\\times N\\_{3}}    k {\\\\displaystyle {\\\\bf {k}}} \\-point set, {  k {\\\\displaystyle {\\\\bf {k}}} }, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell, and  C  i {\\\\displaystyle C\\_{i}}  is the integer grid reduction factor along reciprocal lattice direction**b** i. This leads to a reduction in the computational workload by a factor:  1  C  1  C  2  C  3 {\\\\displaystyle {\\\\frac {1}{C\\_{1}C\\_{2}C\\_{3}}}} **Note**: From the above, one should not get the impression that the grid reduction can only be used (or is useful) only in conjunction with range\\-separated functionals (e.g., HSE03/HSE06\\). It can be applied, for instance, in the PBE0 and pure HF cases as well, although from the above it might be clear that the range\\-separated functionals, in general, will allow for a larger reduction of the grid.[\\[1]](#cite_note-paier:jcp:06-1) #### Caveat: when one should not use downsampling In metallic systems, downsampling the exact exchange potential (NKRED, NKREDX, NKREDY, and/or NKREDZ \u2260 1\\) must be used with great care, and results might be wrong, if downsampling is applied. Problematic cases include electron or hole doped semiconductors or insulators. If two electrons are added to a bulk TiO2 cell containing 72 atoms, and calculations are performed using   2 \u00d7 2 \u00d7 2 {\\\\displaystyle 2\\\\times 2\\\\times 2}    k {\\\\displaystyle {\\\\bf {k}}} \\-points, the following results are obtained for the one\\-electron energies and occupancies with and without NKRED\\=2 (LHFCALC\\=.TRUE.\u00a0; AEXX\\=0\\.2\u00a0; HFSCREEN \\= 0\\.2\\):  ```k-point   1: 0.0000    0.0000    0.0000            DOPED NKRED = 2           DOPED NKRED = 1              UNDOPED CASE band No.  band energies occupation   band energies occupation   band energies occupationvalence bands   262       2.4107      2.00000        2.4339      2.00000        2.4082      2.00000   263       2.4107      2.00000        2.4339      2.00000        2.4082      2.00000   264       2.8522      2.00000        2.8597      2.00000        2.8566      2.00000conduction bands\t\t\t\t\t\t    265       5.4046      2.00000        5.8240      1.87262        5.8126      0.00000   266       5.4908      2.00000        5.8695      1.62151        5.8424      0.00000   267       5.4894      2.00000        5.8695      1.62192        5.8424      0.00000  ```  ```k-point   2: 0.5000    0.0000    0.0000            DOPED NKRED = 2           DOPED NKRED = 1              UNDOPED CASE band No.  band energies occupation   band energies occupation  band energies occupationvalence bands   262       2.0015      2.00000        2.0144      2.00000       2.0160      2.00000          263       2.5961      2.00000        2.6072      2.00000       2.6046      2.00000   264       2.5961      2.00000        2.6072      2.00000       2.6045      2.00000conduction bands\t\t\t\t\t                                 265       6.1904      0.00000        6.1335      0.00435       6.0300      0.00000   266       6.1904      0.00000        6.1335      0.00435       6.0300      0.00000   267       6.1907      0.00000        6.1340      0.00426       6.0305      0.00000  ```  ```k-point   3\u00a0:  0.5000    0.5000    0.0000            DOPED NKRED = 2           DOPED NKRED = 1              UNDOPED CASE band No.  band energies occupation   band energies occupation  band energies occupation valence bands   262       2.4237      2.00000        2.4433      2.00000       2.4287      2.00000   263       2.4238      2.00000        2.4432      2.00000       2.4287      2.00000   264       2.4239      2.00000        2.4433      2.00000       2.4287      2.00000conduction bands\t\t\t\t\t\t                         265       5.8966      0.42674        5.9100      1.24121       5.8817      0.00000   266       5.8780      0.54128        5.9100      1.24143       5.8817      0.00000   267       5.8826      0.50661        5.9100      1.24261       5.8817      0.00000  ``` Without NKRED, the one electron energies are pretty similar to the one electron energies in the undoped system (last two columns), whereas using NKRED a strong reduction of the \"gap\" between the valence and conduction band is observed, in particular, close to the conduction band minimum (in this case the point). This result is an artifact of the approximation used for NKRED\\=2\\. The nonlocal exchange operator cancels the self\\-interaction present in the Hartree\\-potential. For NKRED\\=2 and   2 \u00d7 2 \u00d7 2 {\\\\displaystyle 2\\\\times 2\\\\times 2}    k {\\\\displaystyle {\\\\bf {k}}} \\-points, the nonlocal exchange operator at each   k {\\\\displaystyle {\\\\bf {k}}} \\-point is evaluated using the one\\-electron orbitals at this   k {\\\\displaystyle {\\\\bf {k}}} \\-point only, e.g.:  V  k  (  G  ,  G  \u2032  )  \\= \u27e8  k  \\+  G  \\|  V  x  \\|  k  \\+  G  \u2032  \u27e9 \\= \u2212  4 \u03c0  e  2  \u03a9  f  m  k  \u2211  G  \u2033  C  m  k  \u2217  (  G  \u2032  \u2212  G  \u2033  )  C  m  k  (  G  \u2212  G  \u2033  )  \\|  G  \u2033  \\|  2 {\\\\displaystyle V\\_{\\\\mathbf {k} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)\\=\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|V\\_{x}\\|\\\\mathbf {k} \\+\\\\mathbf {G} '\\\\rangle \\=\\-{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}f\\_{m\\\\mathbf {k} }\\\\sum \\_{\\\\mathbf {G} ''}{\\\\frac {C\\_{m\\\\mathbf {k} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')C\\_{m\\\\mathbf {k} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}{\\|\\\\mathbf {G} ''\\|^{2}}}} The sum over   q {\\\\displaystyle {\\\\bf {q}}}  in the Hartree\\-Fock exchange potential reduces to a single   k {\\\\displaystyle {\\\\bf {k}}} \\-point. This reduces the self\\-interaction for states that originally have an occupancy larger than one, concomitantly pulling those states to lower energies. Initially, empty states (occupancy smaller one) are pushed up slightly. Since this is an artifact, NKRED must be used with utmost care for large supercells with coarse   k {\\\\displaystyle {\\\\bf {k}}} \\-point sampling. Please always check whether occupancies are similar at all   k {\\\\displaystyle {\\\\bf {k}}}  points if thisis not the case. The calculations should be double\\-checked without downsampling. Since HF type calculations using   2 \u00d7 2 \u00d7 2 {\\\\displaystyle 2\\\\times 2\\\\times 2}    k {\\\\displaystyle {\\\\bf {k}}}  points without NKRED, are roughly 64 times more expensive than those using the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only, it might seem impossible to do anything but   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only calculations. However, VASP allows to generate special   k {\\\\displaystyle {\\\\bf {k}}}  points using generating lattices.  The following   k {\\\\displaystyle {\\\\bf {k}}} \\-point sets are particularly useful for HF\\-type calculations:  ```k-point set generating a bcc like lattice in the BZ ->  2 k points in BZ 0direct 0.5 0.5 0.5 -.5 -.5 0.5 0.5 -.5 -.5 0 0 0  ``` This KPOINTS file generates two 2   k {\\\\displaystyle {\\\\bf {k}}}  points, one at the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point and one along the space diagonal at the BZ boundary (*R* point). The following KPOINTS file generates 4   k {\\\\displaystyle {\\\\bf {k}}}  points, one at the   \u0393 {\\\\displaystyle \\\\Gamma }  point and three at the *S* points (the latter ones might be symmetry equivalent for cubic cells).  ```k-point set generating an fcc lattice ->  4 k points in BZ 0direct 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 0 0 0  ``` Using such grids, sensible and fairly rapidly converging results are obtained, e.g., for electron and hole doped materials, even if the conduction or valence band is partially occupied or depleted. For instance, the following energies are obtained for TiO2:  ```Gamma only     TOTEN  =      -837.759900 eV2 k-points     TOTEN  =      -838.039157 eV4 k-points     TOTEN  =      -838.129712 eV2x2x2          TOTEN  =      -838.104787 eV2x2x2 NKRED=2  TOTEN  =      -838.418681 eV  ```"}
{"file_name": "DFT+U.md", "content": "The LDA and semilocal GGA functionals often fail to describe systems with localized (strongly correlated)   d {\\\\displaystyle d}  or  f {\\\\displaystyle f}  electrons (this manifests itself primarily in the form of unrealistic one\\-electron energies or too small magnetic moments). In some cases this can be remedied by introducing on the   d {\\\\displaystyle d}  or  f {\\\\displaystyle f}  atom a strong intra\\-atomic interaction in a simplified (screened) Hartree\\-Fock like manner (  E  HF  (  n ^  ) {\\\\displaystyle E\\_{\\\\text{HF}}({\\\\hat {n}})} ), as an on\\-site replacement of the LDA/GGA functional:  E  xc LDA/GGA  \\+ U  ( n ,  n ^  ) \\=  E  xc LDA/GGA  ( n ) \\+  E  HF  (  n ^  ) \u2212  E  dc  (  n ^  ) {\\\\displaystyle E\\_{\\\\text{xc}}^{{\\\\text{LDA/GGA}}\\+U}(n,{\\\\hat {n}})\\=E\\_{\\\\text{xc}}^{\\\\text{LDA/GGA}}(n)\\+E\\_{\\\\text{HF}}({\\\\hat {n}})\\-E\\_{\\\\text{dc}}({\\\\hat {n}})} where   E  dc  (  n ^  ) {\\\\displaystyle E\\_{\\\\text{dc}}({\\\\hat {n}})}  is the double\\-counting term and   n ^ {\\\\displaystyle {\\\\hat {n}}}  is the on\\-site occupancy matrix of the   d {\\\\displaystyle d}  or  f {\\\\displaystyle f}  electrons. This approach is known as the DFT\\+U method (traditionally called LSDA\\+U[\\[1]](#cite_note-anisimov:prb:91-1)). The first VASP DFT\\+U calculations, including some additional technical details on the VASP implementation, can be found in Ref. [\\[2]](#cite_note-rohrbach:jcp:03-2) (the original implementation was done by Olivier Bengone [\\[3]](#cite_note-Bengone:prb:00-3) and Georg Kresse). For more details, read the article about the formalism of the DFT\\+U method. How to------ DFT\\+U can be switched on with the LDAU tag, while the LDAUTYPE tag determines the DFT\\+U flavor that is used. LDAUL specifies the   l {\\\\displaystyle l} \\-quantum number for which the on\\-site interaction is added, and the effective on\\-site Coulomb and exchange interactions are set (in eV) with the LDAUU and LDAUJ tags, respectively. Note that it is recommended to increase LMAXMIX to 4 for *d*\\-electrons or 6 for *f*\\-elements."}
{"file_name": "Precompiler_flags.md", "content": "Precompiler flags are used to activate/deactivate certain code features at the time of compilation, e.g., the use of MPI, the advanced molecular dynamics features, etc. Many precompiler flags are set by default in the templates provided for the makefile.include file. The commands are as follows:  CPPThe command to invoke the precompiler you want to use, for instance:* Using Intel's Fortran precompiler:  ```CPP=fpp -f_com=no -free -w0 $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS) ``` * Using cpp:  ```CPP=/usr/bin/cpp -P -C -traditional $*$(FUFFIX) >$*$(SUFFIX) $(CPP_OPTIONS) ``` | **Mind:** This variable has to include `$(CPP_OPTIONS)`. If not, `CPP_OPTIONS` will be ignored! || --- | CPP\\_OPTIONSSpecify the precompiler flags:  ```CPP_OPTIONS=[-Dflag1 [-Dflag2] ... ] ``` | **Mind:** `CPP_OPTIONS` is only used in makefile.include, where it is added to the `CPP` variable. || --- | Default------- ### \\-DHOST\\=\\[string] A string (20 characters max.) that describes the platform on which VASP is compiled, e.g.,  `-DHOST=\\\"LinuxIFC\\\"` for a Linux host using an Intel Fortran compiler.### \\-DMPI (Mandatory) Set this to compile the parallel version of VASP.### \\-Duse\\_collective Set this to use MPI collectives in the all\\-to\\-all communication and global summations.In case one specifies this, the value of MPI\\_BLOCK (below) will be meaningless.### \\-DMPI\\_BLOCK\\=\\[integer] Specifies the block size used by the in\\-house MPI all\\-to\\-all communication and global summations.### \\-DscaLAPACK Set this to use scaLAPACK.### \\-DCACHE\\_SIZE\\=\\[integer] Specifies the size of the cache memory. Only used by the in\\-house real\\-to\\-complex FFT routines (fft3dlib.F).By default these are no longer used, instead we use the real\\-to\\-complex FFT routines from fftw3\\.### \\-Davoidalloc Set this to use automatic instead of allocatable arrays in many routines related to the real space projection operators.### \\-Dvasp6 Set this to activate all VASP.6\\.X.X specific features.### \\-Dtbdyn Adds the advanced molecular dynamics routines.### \\-Dfock\\_dblbuf Uses double buffer technique for the computation of exchange potential. Available as of VASP.6, N/A for the CUDA\\-C GPU\\-port.### \\-D\\_OPENMP (Optional ) Switch on a combination of MPI and OpenMP for the parallelization.Specific for the OpenACC port to GPUs------------------------------------- ### \\-D\\_OPENACC Mandatory: Activate all OpenACC related code paths.### \\-DUSENCCL Mandatory: Use the NVIDIA Collective Communications Library (NCCL) instead of MPI for relevant instances of collective reduction operations (MPI\\_Allreduce).### \\-DUSENCCLP2P Optional but strongly recommended (requires NCCL \\>\\= 2\\.7\\.8\\): Use the NVIDIA Collective Communications Library (NCCL) instead of MPI for relevant instances of all\\-to\\-all operations (MPI\\_Alltoallv).### \\-Dqd\\_emulate Mandatory: To compile the OpenACC GPU\\-port you need either the NVIDIA HPC\\-SDK or a recent version (\\>\\= 19\\.10\\) of PGI's Compilers \\& Tools. Both of these compilers do not natively support quadruple precision and require the use of the QD library to emulate quadruple precision arithmetic.Optional-------- ### \\-DVASP\\_HDF5 (Strongly recommended) Set this to add HDF5 support. This option has been available since VASP 6\\.2\\.0\\.**N.B.**: one needs to add HDF5 to makefile.include.### \\-Duse\\_shmem Use shared\\-memory segments to reduce the memory demands of GW (ALGO \\= EVGW0, EVGW, QPGW0, and QPGW) and machine\\-learned\u2013force\\-field calculations.### \\-Dshmem\\_bcast\\_buffer Use shared\\-memory segments to reduce the amount of MPI communication in hybrid\\-functional calculations.### \\-Dshmem\\_rproj Use shared\\-memory segments to reduce the storage demands of the real\\-space PAW projectors.### \\-Dsysv Use ipcs shared\\-memory segments and system\\-V semaphores.### \\-DVASP2WANNIER90 Set this to include the interface between VASP and Wannier90\\. | **Deprecated:** For VASP\\<6\\.2\\.0, see \\-DVASP2WANNIER90 and \\-DVASP2WANNIER90v2 in the deprecated section below! || --- | ### \\-Dlibbeef Set this to include the GGA BEEF functional (corresponds to GGA\\=BF).**N.B.**: one needs to add libbeef to makefile.include.### \\-DDFTD4 Set this to include the DFT\\-D4 van der Waals functional.**Note** that you need to install DFT\\-D4 and add it to the makefile.include.### \\-DLIBMBD Set this to include the library libMBD of many\\-body dispersion (MBD) methods for van der Waals interactions.**Note** that you need to install LibMBD and add it to the makefile.include.### \\-DPROFILING Switches on detailed profiling of the code. This carries a (slight) performance penalty.### \\-DUSELIBXC Set this to include the library of exchange\\-correlation functionals Libxc.**Note** that you need to install Libxc \\>\\= 5\\.2\\.0 (or the master version from gitlab for the latest implemented functionals) with the option `--disable-fhc` and add this to the makefile.include.### \\-DELPA Set this to include the library of ELPA eigenvalue solvers.**N.B.**: one needs to add ELPA to makefile.include.### \\-DLAPACK36 Required for LAPACK\\-3\\.6\\.0 and newer to replaced deprecated routine DGEGV by DGGEV.Deprecated---------- | **Deprecated:** `-DNGZhalf`, `-DwNGZhalf`, `-DNGXhalf`, `-DwNGXhalf` are deprecated options. Building the standard, gamma\\-only, or non\\-collinear version of the code is specified through an additional argument to the make command as discussed in Installing VASP.6\\.X.X. || --- | ### \\-DnoAugXCmeta This option was added to compute the meta\\-GGA contributions from the non\\-augmented pseudo density (instead of the augmented density). There is a condition concerning the behavior of the von\\-Weizs\u00e4cker kinetic energy density (calculated using the first derivative of the charge density) and the kinetic energy density computed from the orbitals ingrained into TPSS and revTPSS. This condition can be strongly violated when one augments the charge density. For the TPSS and revTPSS the functionals can become unstable in those cases. SCAN and its derivates (RSCAN, R2SCAN, etc) do not assume the aforementioned conditions to be met and remain stable for the augmented density as well so this option should not be used as it may negatively affect the final results.### \\-DVASP2WANNIER90 and \\-DVASP2WANNIER90v2 Set this to include the interface between VASP and Wannier90\\.Up to VASP 6\\.1\\.x you need to set \\-DVASP2WANNIER90 to interface with Wannier90 v.1\\.x, and \\-DVASP2WANNIER90v2 for Wannier90 v.2\\.x, and add the Wannier90 library to makefile.include.Since VASP 6\\.2\\.0 you need to set \\-DVASP2WANNIER90 to interface with Wannier90 v.2\\.x or v.3\\.x.Related articles---------------- Installing VASP.6\\.X.X,makefile.include,Compiler options,Linking to libraries,OpenACC GPU port of VASP,Toolchains,Validation tests,Known issues  ---"}
{"file_name": "H2O_vibration.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Calculation of the vibrational frequencies of a   H  2  O {\\\\displaystyle \\\\mathrm {H} \\_{2}\\\\mathrm {O} }  molecule. Input----- ### POSCAR  ```H2O _2                                                                          1.0000000  8.0000000   0.0000000   0.0000000  0.0000000   8.0000000   0.0000000  0.0000000   0.0000000   8.0000000   1    2cart  0.0000000   0.0000000   0.0000000  0.5960812  -0.7677068   0.0000000  0.5960812   0.7677068   0.0000000  ``` ### INCAR  ```SYSTEM = H2O vibrationPREC = A# IBRION = 1\u00a0; NSW = 10\u00a0; NFREE = 2\u00a0; EDIFFG = -1E-4ENMAX = 400ISMEAR = 0    # Gaussian smearingIBRION = 6    # finite differences with symmetryNFREE = 2     # central differences (default)POTIM = 0.015 # default as wellEDIFF = 1E-8 NSW = 1       # ionic steps > 0  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- How many zero frequency modes should be observed and why? Try to use the linear response code (IBRION\\=8 and EDIFF\\=1E\\-8\\) to obtainreference results. For finite differences, are the results sensitive to the step width POTIM. In this specific case, the drift in the forces is too largeto obtain the zero frequency modes \"exactly\", and it is simplest to increase thecutoff ENCUT to 800 eV. The important and physically meaningfulfrequencies are, however, insensitive to the choice of the cutoff. Download--------  H2Ovib.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "NBLOCK.md", "content": "NBLOCK= \\[integer]   Default: **NBLOCK** \\= 1nDescription: After NBLOCK ionic steps the pair\\-correlation function and the DOS are calculatedand the ionic configuration is written to the XDATCAR\\-file.  --- It is recommended to leave NBLOCK to 1, since the computational overhead to determine the DOS and pair correlation function is minimal. Only for molecular dynamics simulations with many 1000 steps or when using machine\\-learned force fields, it might be expedient to increase NBLOCK to say 10 or even 100, to avoid large XDATCAR\\-files and the evaluation of the pair correlation function at every step.  | **Tip:** If machine\\-learned force fields are used in prediction\\-only mode (`ML_MODE = run`) prefer to use the ML\\_OUTBLOCK tag instead of NBLOCK to control the output frequency. || --- | In addition * NBLOCK controls how often the kinetic energy is scaled if `SMASS = -1`. * After `KBLOCK * NBLOCK` ionic steps the averaged pair correlation function and DOS are written to the files PCDAT and DOSCAR. The internal accumulators are reset, and after another `KBLOCK * NBLOCK` steps the new averaged quantities are written out. | **Warning:** The product of KBLOCK and NBLOCK should not be larger than the number of steps NSW. If `KBLOCK * NBLOCK > NSW` before starting the main ion loop then KBLOCK is automatically reset to 1\\. Next, if the same conditions is still true, NBLOCK is reset to NSW. Also, mind that NBLOCK will be at minimum ML\\_OUTBLOCK in MLFF prediction\\-only MD runs. || --- |"}
{"file_name": "Parallelization.md", "content": "VASP makes use of parallel machines splitting the calculation into many tasks, that communicate with each other using MPI.Since a single core cannot perform enough operations, for many complex problems, this parallelization is necessary to finish the calculation in a reasonable time. Theory------ ### Basic parallelization By default, VASP distributes the number of bands (NBANDS) over the available MPI ranks. But it is often beneficial to add parallelization of the FFTs (NCORE), parallelization over **k** points (KPAR), and parallelization over separate calculations (IMAGES). All these tags default to 1 and divide the number of MPI ranks among the parallelization options. Additionally, there are some parallelization options for specific algorithms in VASP, e.g., NOMEGAPAR. In summary, VASP parallelizes with total ranks  \\= ranks parallelizing bands  \u00d7 NCORE  \u00d7 KPAR  \u00d7 IMAGES  \u00d7 other algorithm\\-dependent tags  . {\\\\displaystyle {\\\\text{total ranks}}\\={\\\\text{ranks parallelizing bands}}\\\\times {\\\\text{NCORE}}\\\\times {\\\\text{KPAR}}\\\\times {\\\\text{IMAGES}}\\\\times {\\\\text{other algorithm\\-dependent tags}}.} In addition to the parallelization using MPI, VASP can make use of OpenMP threading and/or OpenACC (for the GPU port). Note that running on multiple OpenMP threads and/or GPUs switches off the NCORE parallelization. ### Communication patterns [](File_Communication.html \"VASP divides the available MPI ranks into images, k-point groups, and band groups\")[](File_Communication2.html \"VASP divides the available MPI ranks into images, k-point groups, and band groups\") The aforementioned parallelization levels directly map onto MPI communicators. Initially, VASP divides all available ranks into IMAGES equally\\-sized images. Setting KPAR splits each of these images further into groups of **k** points. Properties involving all **k** points (e.g. density, Fermi energy) require then a communication over these **k**\\-point groups. VASP divides the **k**\\-point group into band groups of size NCORE. The band group parallelizes the FFTs and triggers the most frequent communications. To evaluate properties involving multiple bands (e.g. Hamiltonian, orthonormalization) communication between the band groups occurs. ### MPI setup [](File_Good_process_binding.html \"All ranks associated with a particular band group are on the same node. All communication for the FFTs is intranode.\")[](File_Bad_process_binding.html \"Ranks of some band groups extend over multiple nodes. Every FFT requires internode communication.\") The MPI setup determines the placement of the ranks onto the nodes. VASP assumes the ranks first fill up a node before the next node is occupied. As an example when running with 20 ranks on two nodes, VASP expects rank 1\u201310 on node 1 and rank 11\u201320 on node 2\\. If the ranks are placed differently, communication between the nodes occurs for every parallel FFT. Because FFTs are essential to VASP's speed, this deteriorates the performance of the calculation. A manifestation is an increase in computing time when the number of nodes is increased from 1 to 2\\. If NCORE is not used this issue is less severe but will still reduce the performance. To address this issue, please check the setup of the MPI library and the submitted job script. It is usually possible to overwrite the placement by setting environment variables or command\\-line arguments. When in doubt, contact the HPC administration of your machine to investigate the behavior. ### File handling When VASP is started it reads the file INCAR in the root directory.Because the MPI setup needs to happen early in the general setup of the calculation the following tags are processed before any of the other settings:NCORE\\_IN\\_IMAGE1, IMAGES, KPAR, NCORE, NPAR, NCSHMEM, LUSENCCL.When IMAGES are used, subsequently any input given in the root directory is superseded by the same file in subdirectories 01, 02, ...Any file not present in these subdirectories will be read from the root directory.The output files are always written to the subdirectories. ### Terminology in high\\-performance computing (HPC)  CPUThe central processing unit of a computer. A CPU may consist of multiple *cores*. One or more CPUs can be combined with accelerators like *GPUs* to form a *node*. Desktop computers typically contain a single CPU. GPUThe graphical processing unit. A GPU is very efficient at matrix and vector operations and may accelerate a program by transferring particularly suitable tasks from the *CPU* to the GPU.CoreWhen a *CPU* has the option to execute multiple tasks in parallel, we refer to this as a multi\\-core CPU. Because these computational cores are physically close, they typically exhibit a fast communication between them.NodeThe node constitutes a physical entity consisting of one or more *CPUs* potentially accelerated by *GPUs*. The communication between nodes is much slower compared to the communication within a single node.Socket*Processes* communicate via sockets. Each socket corresponds to an endpoint in this communication.ProcessA process is a program executing on one or more *cores*. Multiple processes may distribute work via communication. Each process may spawn multiple *threads* to execute their task.OpenMP threadThese threads live on a single *node*. *Processes* can instantiate these threads for loops or other parallel tasks.Message Passing Interface (MPI)A communication protocol to facilitate parallel execution of multiple *processes*. The *processes* send messages among them to synchronize parallel tasks when necessary.RankEach rank corresponds to one *process* participating in the *MPI* communication. These ranks determine which particular task a *process* works on and identify senders and receivers of messages.Memory*Processes* store the data they work on in the dynamic random access memory (DRAM) or random access memory (RAM). From there it propagates to the execution *cores* via the *cache*.CacheThe cache is physically much closer to the *CPU* than the *memory*. Therefore, data is moved from the *memory* to the cache before processing. | **Warning:** The terminology of nodes, cores, CPUs, threads, etc. is not universal. For instance, some refer to a single core as a CPU, others refer to an entire node as a CPU. || --- | How to------ ### Optimizing the parallelization The performance of a specific parallelization depends on the system, i.e., the number of ions, the elements, the size of the cell, etc.Different algorithms (density\\-functional theory, many\\-body perturbation theory, or molecular dynamics) require a separate optimization of the parallel setup.To obtain publishable results, many projects require performing many similar calculations, i.e., calculations with similar input and using the same algorithms.Therefore, we recommend optimizing the parallelization to make the most of the available compute time.  | **Tip:** Run a few test calculations varying the parallel setup and use the optimal choice of parameters for the rest of the calculations. || --- | For more detailed advice, check the following: * How to optimize the parallelization in a nutshell ### OpenMP/OpenACC Both OpenMP and OpenACC parallelize the FFTs and therefore disregard any conflicting specification of NCORE.When combining these methods OpenACC takes precedence but any code not ported to OpenACC benefits from the additional OpenMP threads.This approach is relevant because the recommended NVIDIA Collective Communications Library requires a single MPI rank per GPU.Learn more about the OpenMP and OpenACC parallelization in these sections * How to parallelize with multiple OpenMP threads per MPI rank* How to run on GPUs Additional parallelization options---------------------------------- KPARFor Laplace transformed MP2 this tag has a different meaning.NCORE\\_IN\\_IMAGE1Defines how many ranks work on the first image in the thermodynamic coupling constant integration (VCAIMAGES).NOMEGAPARParallelize over imaginary frequency points in   G W {\\\\displaystyle GW}  and RPA calculations.NTAUPARParallelize over imaginary time points in   G W {\\\\displaystyle GW}  and RPA calculations. Pages in category \"Parallelization\"----------------------------------- The following 18 pages are in this category, out of 18 total. ### C * Combining MPI and OpenMP### I * IMAGES### K * KPAR### L * LASYNC* LPLANE* LSCAAWARE* LSCALAPACK* LSCALU* LUSENCCL### N * NCORE* NCORE IN IMAGE1* NOMEGAPAR* NPAR* NSIM* NTAUPAR### O * OpenACC GPU port of VASP* Optimizing the parallelization### P * Performance issues, try NCORE, KPAR, ALGO, LREAL"}
{"file_name": "Surface_Science.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorialsThe tutorial is made of the following parts: 1. Ni 100 surface relaxation2. Ni 100 surface DOS3. Ni 100 surface bandstructure4. Ni 111 surface relaxation5. Ni 111 surface high precision6. partial DOS of CO on Ni 111 surface7. vibrational frequencies of CO on Ni 111 surface8. STM of graphite9. STM of graphene10. collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\")"}
{"file_name": "Computing_the_workfunction-2.md", "content": "Redirect to: * Computing the work function"}
{"file_name": "Minimal_reproducible_example.md", "content": "A **minimal reproducible example** is a set of input and output files that allow a bug, problem, or result to be demonstrated and reproduced. A crucial point is that the **minimal reproducible example** should be as small and simple as possible.  It is helpful to create a **minimal reproducible example** when reporting an issue to a colleague, supervisor, or on the VASP forum, but also as a starting point to explore more options and features based on a known system. How to create a minimal reproducible example-------------------------------------------- ### Step 1 To reduce the complexity of a calculation, remove all preparatory and unnecessary post\\-processing steps from the workflow and any INCAR tags that are unnecessary to reproduce the issue. This may mean using a different structure (POSCAR) with fewer atoms. Or, for a magnetic calculation that may imply switching off projections (LORBIT), the use of spin\\-orbit coupling (LSORBIT) or perhaps an on\\-site Coulomb interaction (LDAU) if this is not essential to what is demonstrated. For a molecular\\-dynamics run, reducing the complexity may imply starting from an intermediate time step with a random seed (RANDOM\\_SEED) and choosing a smaller supercell. ### Step 2 Select parameters that reproduce the result with minimal computational effort, even though it may reduce the accuracy of the calculation. For instance, this often implies reducing (ENCUT), choosing a coarser k mesh (KPOINTS), lowering PREC, etc. ### Step 3 Finally, ensure to include  1. all files to run the calculation (execution commands/submission script and input files that may include INCAR, POSCAR, POTCAR, KPOINTS, ICONST, etc.),2. the main output files (stdout, OUTCAR, REPORT for molecular\\-dynamics runs, ML\\_LOGFILE for machine\\-learning force fields, etc.)3. and any problem\\-specific files that, e.g., include the specific data in focus or that extract and plot the data from the output files. If the problem only occurs for specific hardware, versions of VASP, or toolchains, it is also essential to include that information."}
{"file_name": "STOP_ON.md", "content": "STOP\\_ON= Error\\|Alert   Default: **STOP\\_ON** \\= ErrornDescription: STOP\\_ON defines if the code should stop on errors only or also on alerts.  --- There are two instances, why one might want a more conservative choice when running calculations. First, VASP will overwrite user provided input, if the input does not make sense. You may want tomake sure that VASP does not continue in this case by setting the stricter STOP\\_ON \\= Alert Secondly, VASP will continue if it encounters issues during the calculation if there is a chancethat these disappear during the self consistency. However, if you are at a stage where you stillexplore what parameters to use, being more conservative makes the calculation fail faster sothat you can try different parameters."}
{"file_name": "MINROT.md", "content": "MINROT= \\[real]   Default: **MINROT** \\= 0\\.01nDescription: The flag MINROT defines the value for which the dimer is rotated only if the predicted rotation angle is greater than MINROT (rad.) in the Improved Dimer Method.  ---"}
{"file_name": "NBANDSEXACT.md", "content": "NBANDSEXACT= \\[integer]n| Default: **NBANDSEXACT** | \\= \\-1 | for LALL\\_IN\\_ONE\\=.FALSE. || --- | --- | --- ||  | \\= maximum number of plane waves | for LALL\\_IN\\_ONE\\=.TRUE. | Description: NBANDSEXACT specifies the number of bands used in the all\\-in\\-one mode of many\\-body perturbation theory calculations.  | **Mind:** available as of VASP.6\\.4\\.0 || --- |  --- In the all\\-in\\-one mode, VASP automatically performs the necessary DFT steps prior to the many\\-body perturbation theory (MBPT) calculation, i.e. a DFT calculation with NBANDS, followed by an exact diagonalization of the Kohn\\-Sham Hamiltonian with NBANDSEXACT bands. Note, NBANDSEXACT is set by default to the maximum number of plane\\-waves given by the chosen energy cutoff for the orbitals ENCUT. In the all\\-in\\-one mode, the actual GW/RPA calculation is also performed with NBANDSEXACT bands. If NBANDS\\_WAVE is not set, all orbitals are written to WAVECAR, which potentially becomes huge in file size. | **Tip:** The NBANDS\\_WAVE tag can be used to limit the number of bands written to WAVECAR if LALL\\_IN\\_ONE\\=.TRUE. || --- | The all\\-in\\-one mode is automatically enabled for ALGO\\=\\[EV]GW\\[0]R, RPA\\[R],ACFDT\\[R] if NBANDS is not set."}
{"file_name": "KPOINTS_WAN.md", "content": "KPOINTS\\_WAN is an optional input file to obtain eigenstates and eigenenergies at the specified **k** points from Wannier functions.The format is the same as for the KPOINTS file.  | **Important:** The VASP calculation must include the construction of Wannier functions, e.g., using LSCDM or LWANNIER90. || --- | KPOINTS\\_WAN is read automatically when present. To avoid this, set LKPOINTS\\_WAN`=.FALSE.` in the INCAR file.VASP writes corresponding fields in the vaspout.h5 file and vasprun.xml\") file indicated by the keyword *kpoints\\_wan*. | **Mind:** Available as of VASP 6\\.3\\.0\\. || --- | Related tags and sections------------------------- KPOINTS, KPOINTS\\_OPT, LKPOINTS\\_WAN, PROCAR\\_WAN\"), LSCDM, LWANNIER90, LOCPROJ"}
{"file_name": "XANES_in_Diamond.md", "content": "Important: This feature will be only available from VASP 6\\.0\\. Overview> XANES in Diamond> List of tutorials Task---- Calculation of the XANES K\\-edge in diamond using the supercell core\\-hole method. Input----- ### POSCAR  ```cubic diamond 3.5670.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2direct0.0 0.0 0.00.25 0.25 0.25  ``` Above, we show the POSCAR file for the primitive unit cell of diamond. Note that we will not use thisstructure as input for the calculation. Instead, we use it to construct a POSCAR file for a  3 \u00d7 3 \u00d7 3 {\\\\displaystyle 3\\\\times 3\\\\times 3}  super cell actually used in the calculation. ### INCAR  ```System\") = DIAMONDALGO = FASTISMEAR = 0; SIGMA = 0.1;ICORELEVEL = 2CLNT = 1CLN = 1CLL = 0CLZ = 1.0CH_LSPEC = .TRUE.CH_SIGMA = 0.5NBANDS = 300LREAL = A  ``` * To promote a core electron into the conduction bands and hence create the core\\-hole ICORELEVEL\\=2 has to be set. This corresponds to the final state approximation.* CLNT\\=1 selects the first atom species in the POSCAR file.* CLN\\=1 selects main quantum number 1 (hence K\\-edge).* CLL\\=0 selects angular quantum number 0 (s).* CLZ\\=1\\.0 selects the charge of the core hole. By setting this number to a fractional value we can mimic different screenings of the electrons. These non\\-integer values should only be used with caution, since this purely exploits error cancellation and does not correspond to a physically correct description of the screening.* By setting CH\\_LSPEC\\=*.TRUE.*, we enable the calculation of matrix elements between core and conduction states and the calculation of the core electron absorption spectrum.* The broadening of the core electron absorption spectrum is controlled by the tag CH\\_SIGMA. Usually it is good practice to set this value low and broaden the spectrum in post processing.* We have to set NBANDS to a larger value to consider enough conduction band states in the calculation.* Since super cells are used the calculation of the projection operators in real space (LREAL\\=*A*) is much faster. Calculation----------- ### Step 1 build a supercell In the periodic boundary conditions of VASP, the core\\-hole interacts with its periodic replica so that we need sufficiently large super cells to reduce this spurious interaction. To this end, we employ successively large cells until the spectrum shows no significant changes. For this tutorial, we illustrate the calculation of a core\\-hole using a   3 \u00d7 3 \u00d7 3 {\\\\displaystyle 3\\\\times 3\\\\times 3}  cell to allow for a reasonably fast calculation. However, for converged values one should use at least   4 \u00d7 4 \u00d7 4 {\\\\displaystyle 4\\\\times 4\\\\times 4}  super cell.  The super cell can be obtained by either taking the file POSCAR.3x3x3 provided with this tutorial or constructing the POSCAR file from the primitive cell using p4vasp, which is demonstrated below: * Open p4vasp by typing *p4v* on the terminal.* Load the primitive cell by clicking on **File**\u2192**Load system**: [](File_Fig_XAS_1.html) * Multiply cell in each direction (enter 3 for each direction) by clicking on **Edit**\u2192**Multiply Cell**: [](File_Fig_XAS_2.html) * Save new system by clicking on **File**\u2192**Save system as**: [](File_Fig_XAS_3.html) ### Step 2 Prepare input files The first few lines of the generated POSCAR file for the super cell should look like the following  ```cubic diamond3.567 +1.5000000000  +1.5000000000  +0.0000000000 +0.0000000000  +1.5000000000  +1.5000000000 +1.5000000000  +0.0000000000  +1.5000000000 54Cartesian +0.0000000000  +0.0000000000  +0.0000000000 +0.2500000000  +0.2500000000  +0.2500000000 +0.5000000000  +0.0000000000  +0.5000000000 ...  ``` Here, all the 54 atoms are of the same species (line 6\\). To distinguish between the atom with the core\\-hole and the rest, we treat one atom as a different species. Choosing the first atom, we replace the 54 in the 6th line with 1 and 53 and obtain the following POSCAR file  ```cubic diamond3.567 +1.5000000000  +1.5000000000  +0.0000000000 +0.0000000000  +1.5000000000  +1.5000000000 +1.5000000000  +0.0000000000  +1.5000000000 1 53Cartesian +0.0000000000  +0.0000000000  +0.0000000000 +0.2500000000  +0.2500000000  +0.2500000000 +0.5000000000  +0.0000000000  +0.5000000000 ...  ``` In the INCAR file, we specify that the first species carries the core\\-hole by setting CLNT\\=1\\. We create a POTCAR file with the PAW/PS information for both species. Since both species are carbon this amounts simply to the concatenation of the POTCAR file for carbon  ``` cat POT_C POT_C > POTCAR  ``` We provide the resulting POTCAR file for this core\\-hole calculation in the tar file of this tutorial. To calculate accurate spectra, we need to include a sufficient number of conduction states. The required number of bands depends on the number of electrons in the system and the energy range of the spectrum. We can manually adjust the number of bands with the NBANDS variable. However, since the computation time increases drastically with the number of bands, selecting initially very large numbers is also not advisable. Hence, one has to increase the number of bands to find the optimum of computational effort and accuracy. In this tutorial, we use NBANDS\\=300\\. The other input variables in the INCAR file are described above. **Mind**: The multiplicity of the species carrying the core\\-hole has to be 1 otherwise the code will not work. Also mind that the selected species (CLNT in the INCAR file) is consistent with the order of the species specified in the POSCAR and POTCAR files.   ### Step 3 Running Calculation Both the SCF calculation with the core\\-hole and the subsequent calculation of the dielectric matrix (spectrum) are done in a run of VASP. To minimize the spurious interaction between core\\-holes in neighboring cells requires large super cells and to reduce the computational time it is advisable to run a parallel VASP calculation  ``` mpirun -np $np vasp_version  ``` Here, *$np* corresponds to the number of processes and the *\\_version* in the executable stands for *std*, *gam*, and *ncl*: the standard,   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only, and non\\-collinear version, respectively. The  3 \u00d7 3 \u00d7 3 {\\\\displaystyle 3\\\\times 3\\\\times 3}  cell used in this tutorial gives qualitatively correct results and can be completed even with a small number of processes. You can verify the spectrum on the larger   4 \u00d7 4 \u00d7 4 {\\\\displaystyle 4\\\\times 4\\\\times 4}  cell, which we provide in the tar file of this tutorial. ### Step 4 Extraction of XAS Spectrum The XAS spectrum is proportional to the imaginary part of the frequency\\-dependent dielectric function, which is written in the OUTCAR file  ```  frequency dependent IMAGINARY DIELECTRIC FUNCTION (independent particle, no local field effects) density-density     E(ev)      X         Y         Z        XY        YZ        ZX  --------------------------------------------------------------------------------------------------------------  243.589609    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000  243.677325    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000  243.765042    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000 ...  ``` Usually we are interested in the sum of all components of the dielectric matrix. You can obtain this by the script provided in this tutorial *plot\\_core\\_imdiel.sh* **Click to show/*plot\\_core\\_imdiel.sh***  ```#!/bin/bash parallel=-1normal=-1all=-1tauc=-1trace=-1while [[ $# -gt 0 ]] do   key=\"$1\"   case $key in      -parallel) parallel=0 ;;      -normal) normal=0 ;;      -trace) trace=0 ;;      -tauc) tauc=0 ;;   esac   shiftdone cat > helpscript.perl  <<EOF#!/bin/perl use strict;use warnings;my \\$mode=shift; while(<>) {   chomp;   if(\\$_ =~ /frequency dependent IMAGINARY DIELECTRIC FUNCTION/) {      \\$_=<>;      \\$_=<>;      while (<>) {         my \\$sum=0;         if (\\$_\u00a0!~ /[0-9]/) {last;}         chomp;         \\$_=~s/^/ /;         my @help=split(/[\\t,\\s]+/);         if (\\$help[2]=~/NaN/||\\$help[3]=~/NaN/||\\$help[4]=~/NaN/) {next;}         if (\\$help[5]=~/NaN/||\\$help[6]=~/NaN/||\\$help[4]=~/NaN/) {next;}         if (\\$mode==0) {\\$sum=\\$help[2]+\\$help[3]+\\$help[4]+\\$help[5]+\\$help[6]+\\$help[7];}         if (\\$mode==1) {\\$sum=\\$help[4];}         if (\\$mode==2) {\\$sum=\\$help[2]+\\$help[3];}         if (\\$mode==3) {\\$sum=\\$help[2]+\\$help[3]+\\$help[4];}         if (\\$mode==4) {\\$sum=(\\$help[1]*\\$help[1]*(\\$help[2]+\\$help[3]+\\$help[4]+\\$help[5]+\\$help[6]+\\$help[7]))**0.5;}         if (\\$mode==5) {\\$sum=(\\$help[1]*\\$help[1]*(\\$help[4]))**0.5;}         if (\\$mode==6) {\\$sum=(\\$help[1]*\\$help[1]*(\\$help[2]+\\$help[3]))**0.5;}         if (\\$mode==7) {\\$sum=(\\$help[1]*\\$help[1]*(\\$help[2]+\\$help[3]+\\$help[4]))**0.5;}         print \\$help[1],\" \",\\$sum,\"\\"; } }   last if eof; } EOF if [[ $normal -eq 0 ]]; then   if [[ $tauc -eq 0 ]]; then      perl helpscript.perl 4 OUTCAR > CORE_DIELECTRIC_IMAG.dat   else      perl helpscript.perl 1 OUTCAR > CORE_DIELECTRIC_IMAG.dat fielse   if [[ $parallel -eq 0 ]]; then      if [[ $tauc -eq 0 ]]; then         perl helpscript.perl 5 OUTCAR > CORE_DIELECTRIC_IMAG.dat      else         perl helpscript.perl 2 OUTCAR > CORE_DIELECTRIC_IMAG.dat fi   else      if [[ $trace -eq 0 ]]; then         if [[ $tauc -eq 0 ]]; then            perl helpscript.perl 6 OUTCAR > CORE_DIELECTRIC_IMAG.dat         else            perl helpscript.perl 3 OUTCAR > CORE_DIELECTRIC_IMAG.dat fi      else         if [[ $tauc -eq 0 ]]; then            perl helpscript.perl 7 OUTCAR > CORE_DIELECTRIC_IMAG.dat         else            perl helpscript.perl 0 OUTCAR > CORE_DIELECTRIC_IMAG.dat fi fi fi firm helpscript.perl  ``` To use it type:  ```bash ./plot_core_imdiel.sh  ``` This will create the file CORE\\_DIELECTRIC\\_IMAG.dat containing the sum of the imaginary part of the dielectric matrix.Note that the absolute values of the experimental peak positions is not captured due to fundamental limitations of local DFT to describe the core level energies. Usually, there is even a noticeable deviation between calculations using different codes. Therefore, it is accepted in literature to look at the relative peak positions in the spectra and their relative intensity. We compare the results obtained with VASP to experimental[\\[1]](#cite_note-Ma.PRL-1) and theoretical[\\[2]](#cite_note-Tallefumier.PRB-2) XAS spectra from literature provided in the files *C\\_XAS\\_aligned\\_to\\_VASP.dat* and *C\\_PARATEC\\_aligned\\_to\\_VASP.dat*, respectively. The theoretical reference calculation was obtained using the PARATEC code and relies on PAW/Pseudopotential similar to VASP. We provide a script with this tutorial to compare these literature results to the spectrum obtained with VASP: **Click to show/*gnuplot\\_XANES\\_C.script***  ```unset yticsset xrange [280:310]set xlabel \"Energy (eV)\"set ylabel \"Absorption (arbitrary units)\"plot \"CORE_DIELECTRIC_IMAG.dat\" using 1:2 with lines lw 2 ti \"VASP\",\\     \"C_PARATEC_aligned_to_VASP.dat\" using 1:2 with lines ti \"PAW lit\",\\     \"C_XAS_aligned_to_VASP.dat\" using 1:2 with lines ti \"Exp\" pause -1  ``` To use that script type:  ``` gnuplot gnuplot_XANES_C.script  ``` The file *plot.sh* constitutes a convenient wrapper around these post processing steps. The resulting spectra should look like this:   [](File_Fig_XAS_4.html) Because DFT cannot reproduce the absolute position (see above), we have shifted both spectra so that the position of the first peak coincides with the VASP. In this example, we scaled the experiment to VASP, since in this way the obtained results can be very easily compared using a script. Usually one would either scale the first peak to 0 or would scale the calculated value to the experiment. Additionally the intensity of the spectrum can be scaled arbitrarily. So in this example, we align the position and the height of the first peak for the calculations. The experiment is a little bit more tricky. It's a matter of taste what to consider as the first peak, but we decided that most likely the second peak corresponds to the first peak in the calculations and the first peak in experiment is a shoulder that is simply not pronounced in the calculations. Another important issue is the broadening. Because the observed broadening is driven by many factors depending on the particular experimental setup, it is not possible to reproduce the broadening exactly. Therefore, we arbitrarily choose a broadening that gives approximately the same width as experiment. For simplicity in this tutorial, we choose to use a 0\\.5 eV constant Gaussian broadening (the broadening is determined by the ISMEAR tag and we used ISMEAR\\=0 which corresponds to a Gaussian broadening). For more elaborate spectra we strongly advise users to choose a 0\\.05 eV broadening and apply the desired broadening as post\\-processing. Apart from the lower broadening width, we get a quite reasonable agreement with the theoretical literature calculation. We stress again that the   3 \u00d7 3 \u00d7 3 {\\\\displaystyle 3\\\\times 3\\\\times 3}  super cell in this example are not fully converged. The interested user can repeat the calculations for a larger   4 \u00d7 4 \u00d7 4 {\\\\displaystyle 4\\\\times 4\\\\times 4}  super cell. The files for this example are also given in the tar file. Be aware that the larger number of atoms in the bigger super cell requires an adjustment of the NBANDS variable.. Download--------  XANES\\_Diamond.tgz"}
{"file_name": "NELECT.md", "content": "NELECT= \\[real]   Default: **NELECT** \\= number of valence electronsnDescription: NELECT sets the number of electrons.  --- | **Warning:** Unless you would like to perform a charged calculation, you should not set this line. || --- | The number of electrons is determined automatically from the POTCAR (ZVAL of the element) and POSCAR file (number of the atoms of the respective atom type) assuming the cell is charge\\-neutral.If the number of electrons is not compatible with the number derived from the valence and the number of atoms a homogeneous background charge is assumed.If the number of ions specified in the POSCAR file is 0 and NELECT\\=n, then the energy of a homogeneous electron gas is calculated. Charged calculations-------------------- | **Warning:** Using the NELECT tag without the use of an appropriate correction leads to a very slow convergence of energies with respect to the size *L* of the supercell. || --- | The required first\\-order correction to the energy caused by an excess charge is given by  e  2  q  2  \u03b1  L \u03f5 {\\\\displaystyle {\\\\frac {e^{2}q^{2}\\\\alpha }{L\\\\epsilon }}} where *q* is the net charge of the system, \u03b1the Madelung constant of a point charge *q* placed in a homogeneous background charge *\\-q*, and \u03b5 the dielectric constant of the system.For atoms or molecules surrounded by vacuum, \u03b5 takes on the vacuum value \u03b5\\=1\\.VASP can automatically correct this leading error, see Monopole Dipole and Quadrupole corrections for further information. It is important to emphasize that the total energy cannot be corrected for charged slabs, since a charged slab results in an electrostatic potential that grows with the distance from the slab.This non\\-convergence of the potential is a result of the interaction between the charged slab and the compensating background.A practical consequence of this non\\-convergence is that the total energy depends linearly on the width of the vacuum. | **Warning:** Presently, no simple *a posteriori* correction scheme is implemented in VASP for slab calculations. Total energies from charged slab calculations must be used with care. In certain cases, relative energies between two charged surface calculations may be useful || --- |"}
{"file_name": "BSEFATBAND.md", "content": "The BSEFATBAND file contains the NBSEEIG number of eigenvectors of the BSE Hamiltonian. The file has the following structure:  ```  rank of the BSE matrix                NBSEEIG  1BSE eigenvalue    E_BSE      IP-eigenvalue:    E_IPKx Ky Kz E_v E_c Abs(X_BSE)/W_k NB_v NB_c Re(X_BSE)+ i*Im(X_BSE)    ...  2BSE eigenvalue    E_BSE      IP-eigenvalue:    E_IPKx Ky Kz E_v E_c Abs(X_BSE)/W_k NB_v NB_c Re(X_BSE)+ i*Im(X_BSE) ...   NBSEEIGBSE eigenvalue    E_BSE      IP-eigenvalue:    E_IPKx Ky Kz E_v E_c Abs(X_BSE)/W_k NB_v NB_c Re(X_BSE)+ i*Im(X_BSE)     ``` where *E\\_BSE* and *E\\_IP* are the BSE and IP transition energies,*KX KY KZ* the k\\-point coordinates,*E\\_v* and *E\\_c* the eigenvalues of the valence and conduction band, respectively,*X\\_BSE* the component of the eigenvector,*W\\_k* the weight of the k point, and *NB\\_v NB\\_c* the valence and conduction orbital numbers."}
{"file_name": "BSE.md", "content": "The formalism of the Bethe\\-Salpeter equation (BSE) allows for calculating the polarizability with the electron\\-hole interaction and constitutes the state of the art for calculating absorption spectra in solids. Theory------ ### Bethe\\-Salpeter equation In the BSE, the excitation energies correspond to the eigenvalues   \u03c9  \u03bb {\\\\displaystyle \\\\omega \\_{\\\\lambda }}  of the following linear problem[\\[1]](#cite_note-sander:prb:15-1)  (  A  B  B  \u2217  A  \u2217  )  (  X  \u03bb  Y  \u03bb  )  \\=  \u03c9  \u03bb  (  1  0  0  \u2212  1  )  (  X  \u03bb  Y  \u03bb  )   . {\\\\displaystyle \\\\left({\\\\begin{array}{cc}\\\\mathbf {A} \\&\\\\mathbf {B} \\\\\\\\\\\\mathbf {B} ^{\\*}\\&\\\\mathbf {A} ^{\\*}\\\\end{array}}\\\\right)\\\\left({\\\\begin{array}{l}\\\\mathbf {X} \\_{\\\\lambda }\\\\\\\\\\\\mathbf {Y} \\_{\\\\lambda }\\\\end{array}}\\\\right)\\=\\\\omega \\_{\\\\lambda }\\\\left({\\\\begin{array}{cc}\\\\mathbf {1} \\&\\\\mathbf {0} \\\\\\\\\\\\mathbf {0} \\&\\-\\\\mathbf {1} \\\\end{array}}\\\\right)\\\\left({\\\\begin{array}{l}\\\\mathbf {X} \\_{\\\\lambda }\\\\\\\\\\\\mathbf {Y} \\_{\\\\lambda }\\\\end{array}}\\\\right)\\~.}   The matrices   A {\\\\displaystyle A}  and  A  \u2217 {\\\\displaystyle A^{\\*}}  describe the resonant and anti\\-resonant transitions between the occupied   v ,  v \u2032 {\\\\displaystyle v,v'}  and unoccupied   c ,  c \u2032 {\\\\displaystyle c,c'}  states  A  v c  v \u2032  c \u2032  \\= (  \u03b5  v  \u2212  \u03b5  c  )  \u03b4  v  v \u2032  \u03b4  c  c \u2032  \\+ \u27e8 c  v \u2032  \\|  V  \\|  v  c \u2032  \u27e9 \u2212 \u27e8 c  v \u2032  \\|  W  \\|  c \u2032  v \u27e9 . {\\\\displaystyle A\\_{vc}^{v'c'}\\=(\\\\varepsilon \\_{v}\\-\\\\varepsilon \\_{c})\\\\delta \\_{vv'}\\\\delta \\_{cc'}\\+\\\\langle cv'\\|V\\|vc'\\\\rangle \\-\\\\langle cv'\\|W\\|c'v\\\\rangle .} The energies and orbitals of these states are usually obtained in a   G  0  W  0 {\\\\displaystyle G\\_{0}W\\_{0}}  calculation, but DFT and Hybrid functional calculations can be used as well.The electron\\-electron interaction and electron\\-hole interaction are described via the bare Coulomb   V {\\\\displaystyle V}  and the screened potential   W {\\\\displaystyle W}  . The coupling between resonant and anti\\-resonant terms is described via terms   B {\\\\displaystyle B}  and  B  \u2217 {\\\\displaystyle B^{\\*}}  B  v c  v \u2032  c \u2032  \\= \u27e8 v  v \u2032  \\|  V  \\|  c  c \u2032  \u27e9 \u2212 \u27e8 v  v \u2032  \\|  W  \\|  c \u2032  c \u27e9 . {\\\\displaystyle B\\_{vc}^{v'c'}\\=\\\\langle vv'\\|V\\|cc'\\\\rangle \\-\\\\langle vv'\\|W\\|c'c\\\\rangle .} Due to the presence of this coupling, the Bethe\\-Salpeter Hamiltonian is non\\-Hermitian. ### Tamm\\-Dancoff approximation A common approximation to the BSE is the Tamm\\-Dancoff approximation (TDA), which neglects the coupling between resonant and anti\\-resonant terms, i.e.,   B {\\\\displaystyle B}  and  B  \u2217 {\\\\displaystyle B^{\\*}}  .Hence, the TDA reduces the BSE to a Hermitian problem  A  X  \u03bb  \\=  \u03c9  \u03bb  X  \u03bb   . {\\\\displaystyle AX\\_{\\\\lambda }\\=\\\\omega \\_{\\\\lambda }X\\_{\\\\lambda }\\~.} In reciprocal space, the matrix   A {\\\\displaystyle A}  is written as   A  v c  k  v \u2032  c \u2032  k  \u2032  \\= (  \u03b5  v  \u2212  \u03b5  c  )  \u03b4  v  v \u2032  \u03b4  c  c \u2032  \u03b4  k k  \u2032  \\+  2 \u03a9  \u2211  G  \u2260 0  V \u00af  G  (  q  ) \u27e8 c  k  \\|  e  i  G r  \\|  v  k  \u27e9 \u27e8  v \u2032  k  \u2032  \\|  e  \u2212 i  G r  \\|  c \u2032  k  \u2032  \u27e9 \u2212  2 \u03a9  \u2211  G , G  \u2032  W  G , G  \u2032  (  q  , \u03c9 )  \u03b4  q , k \u2212 k  \u2032  \u27e8 c  k  \\|  e  i (  q \\+ G  )  \\|  c \u2032  k  \u2032  \u27e9 \u27e8  v \u2032  k  \u2032  \\|  e  \u2212 i (  q \\+ G  )  \\|  v  k  \u27e9 , {\\\\displaystyle A\\_{vc\\\\mathbf {k} }^{v'c'\\\\mathbf {k} '}\\=(\\\\varepsilon \\_{v}\\-\\\\varepsilon \\_{c})\\\\delta \\_{vv'}\\\\delta \\_{cc'}\\\\delta \\_{\\\\mathbf {kk} '}\\+{\\\\frac {2}{\\\\Omega }}\\\\sum \\_{\\\\mathbf {G} \\\eq 0}{\\\\bar {V}}\\_{\\\\mathbf {G} }(\\\\mathbf {q} )\\\\langle c\\\\mathbf {k} \\|e^{i\\\\mathbf {Gr} }\\|v\\\\mathbf {k} \\\\rangle \\\\langle v'\\\\mathbf {k} '\\|e^{\\-i\\\\mathbf {Gr} }\\|c'\\\\mathbf {k} '\\\\rangle \\-{\\\\frac {2}{\\\\Omega }}\\\\sum \\_{\\\\mathbf {G,G} '}W\\_{\\\\mathbf {G,G} '}(\\\\mathbf {q} ,\\\\omega )\\\\delta \\_{\\\\mathbf {q,k\\-k} '}\\\\langle c\\\\mathbf {k} \\|e^{i(\\\\mathbf {q\\+G} )}\\|c'\\\\mathbf {k} '\\\\rangle \\\\langle v'\\\\mathbf {k} '\\|e^{\\-i(\\\\mathbf {q\\+G} )}\\|v\\\\mathbf {k} \\\\rangle ,} where   \u03a9 {\\\\displaystyle \\\\Omega }  is the cell volume,   V \u00af {\\\\displaystyle {\\\\bar {V}}}  is the bare Coulomb potential without the long\\-range part  V \u00af  G  (  q  ) \\=  {  0  if  G \\= 0  V  G  (  q  ) \\=  4 \u03c0  \\|  q  \\+  G  \\|  2 \u00a0else\u00a0   , {\\\\displaystyle {\\\\bar {V}}\\_{\\\\mathbf {G} }(\\\\mathbf {q} )\\={\\\\begin{cases}0\\&{\\\\text{ if }}G\\=0\\\\\\\\V\\_{\\\\mathbf {G} }(\\\\mathbf {q} )\\={\\\\frac {4\\\\pi }{\\|\\\\mathbf {q} \\+\\\\mathbf {G} \\|^{2}}}\\&{\\\\text{ else }}\\\\end{cases}}\\~,} and the screened Coulomb potential   W  G  ,  G  \u2032  (  q  , \u03c9 ) \\=  4 \u03c0  \u03f5  G  ,  G  \u2032  \u2212 1  (  q  , \u03c9 )  \\|  q  \\+  G  \\|  \\|  q  \\+  G  \u2032  \\|  . {\\\\displaystyle W\\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}(\\\\mathbf {q} ,\\\\omega )\\={\\\\frac {4\\\\pi \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}^{\\-1}(\\\\mathbf {q} ,\\\\omega )}{\\|\\\\mathbf {q} \\+\\\\mathbf {G} \\|\\\\left\\|\\\\mathbf {q} \\+\\\\mathbf {G} ^{\\\\prime }\\\\right\\|}}.} Here, the dielectric function   \u03f5  G ,  G \u2032  (  q  ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G,G'} }(\\\\mathbf {q} )}  describes the screening in   W {\\\\displaystyle W}  within the random\\-phase approximation (RPA)  \u03f5  G  ,  G  \u2032  \u2212 1  (  q  , \u03c9 ) \\=  \u03b4  G  ,  G  \u2032  \\+  4 \u03c0  \\|  q  \\+  G  \\|  2  \u03c7  G  ,  G  \u2032  R P A  (  q  , \u03c9 ) . {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}^{\\-1}(\\\\mathbf {q} ,\\\\omega )\\=\\\\delta \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}\\+{\\\\frac {4\\\\pi }{\\|\\\\mathbf {q} \\+\\\\mathbf {G} \\|^{2}}}\\\\chi \\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}^{\\\\mathrm {RPA} }(\\\\mathbf {q} ,\\\\omega ).} Although the dielectric function is frequency\\-dependent, the static approximation   W  G  ,  G  \u2032  (  q  , \u03c9 \\= 0 ) {\\\\displaystyle W\\_{\\\\mathbf {G} ,\\\\mathbf {G} ^{\\\\prime }}(\\\\mathbf {q} ,\\\\omega \\=0\\)}  is considered a standard for practical BSE calculations.    Scaling------- The scaling of the BSE equation strongly limits its application for large systems. The main limiting factor is the diagonalization of the BSE Hamiltonian. The rank of the Hamiltonian is   N  r a n k  \\=  N  k  \u00d7  N  c  \u00d7  N  v {\\\\displaystyle N\\_{\\\\rm {rank}}\\=N\\_{k}\\\\times N\\_{c}\\\\times N\\_{v}}  ,where   N  k {\\\\displaystyle N\\_{k}}  is the number of k\\-points in the Brillouin zone and   N  c {\\\\displaystyle N\\_{c}}  and  N  v {\\\\displaystyle N\\_{v}}  are the number of conduction and valence bands, respectively. The diagonalization of the matrix scales cubically with the matrix rank, i.e.,   N  r a n k  3 {\\\\displaystyle N\\_{\\\\rm {rank}}^{3}}  . Despite the fact that this matrix diagonalization is usually the bottleneck for bigger systems, the construction of the BSE Hamiltonian also scales unfavorably and can play a dominant role in big systems, i.e.,  N  k  \u00d7  N  q  \u00d7 (  N  v  \u00d7  N  v  \u00d7  N  G  \u00d7  N  c  \u00d7  N  c  ) {\\\\displaystyle N\\_{k}\\\\times N\\_{q}\\\\times (N\\_{v}\\\\times N\\_{v}\\\\times N\\_{G}\\\\times N\\_{c}\\\\times N\\_{c})}  ,where   N  q {\\\\displaystyle N\\_{q}}  is the number of q\\-points and   N  G {\\\\displaystyle N\\_{G}}  number of G\\-vectors. Exact diagonalization--------------------- The diagonalization of the BSE Hamiltonian can be perform using various eigensolvers provided in ScaLAPACK, ELPA, and cuSolver libraries. The advantage of this approach is that the eigenvectors can be directly obtained and used for the analysis of the excitons.Using the eigenvalues   \u03c9  \u03bb {\\\\displaystyle \\\\omega \\_{\\\\lambda }}  and eigenvectors   X  \u03bb {\\\\displaystyle X\\_{\\\\lambda }}  of the BSE Hamiltonian, the macroscopic dielectric which accounts for the excitonic effects can be found   \u03f5  M  (  q  , \u03c9 ) \\= 1 \\+ 2  lim  q  \u2192 0  v ( q )  \u2211  \u03bb  \\|  \u2211  c , v , k  \u27e8 c  k  \\|  e  i  q r  \\|  v  k  \u27e9  X  \u03bb  c v  k  \\|  2  \u00d7  (  1  \u03c9  \u03bb  \u2212 \u03c9 \u2212 i \u03b4  )   . {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\=1\\+2\\\\lim \\_{\\\\mathbf {q} \\\\rightarrow 0}v(q)\\\\sum \\_{\\\\lambda }\\\\left\\|\\\\sum \\_{c,v,k}\\\\langle c\\\\mathbf {k} \\|e^{i\\\\mathbf {qr} }\\|v\\\\mathbf {k} \\\\rangle X\\_{\\\\lambda }^{cv\\\\mathbf {k} }\\\\right\\|^{2}\\\\times \\\\left({\\\\frac {1}{\\\\omega \\_{\\\\lambda }\\-\\\\omega \\-i\\\\delta }}\\\\right)\\~.} The following features are currently supported: * Calculating the dielectric function and eigenvectors* Calculations beyond Tamm\\-Dancoff approximation* Calculations of   \u03b5 (  q  , \u03c9 ) {\\\\displaystyle \\\\varepsilon (\\\\mathbf {q} ,\\\\omega )}  for  q  \u2260 0 {\\\\displaystyle \\\\mathbf {q} \\\eq 0} * Fatband plot Time evolution-------------- Alternatively, it is possible to use the time\\-evolution algorithm which applies a short Dirac delta pulse of electric field and then follows the evolution of the dipole moments. The dielectric function is found via a Fourier transform [\\[2]](#cite_note-sander:jcp:2017-2)  \u03f5  M  ( \u03c9 ) \\= 1 \u2212  4 \u03c0  \u03a9  \u222b  0  \u221e  d  t  \u2211  c , v ,  k  (  \u27e8  \u03bc  c v  k  \\|  \u03be  c v  k  ( t ) \u27e9 \\+ c . c .  )  e  \u2212 i ( \u03c9 \u2212 i \u03b4 ) t {\\\\displaystyle \\\\epsilon \\_{M}(\\\\omega )\\=1\\-{\\\\frac {4\\\\pi }{\\\\Omega }}\\\\int \\_{0}^{\\\\infty }\\\\mathrm {d} t\\\\sum \\_{c,v,\\\\mathbf {k} }\\\\left(\\\\langle \\\\mu \\_{cv\\\\mathbf {k} }\\|\\\\xi \\_{cv\\\\mathbf {k} }(t)\\\\rangle \\+c.c.\\\\right)e^{\\-i(\\\\omega \\-i\\\\delta )t}}  ,where   \u03bc {\\\\displaystyle \\\\mu }  and  \u03be ( t ) {\\\\displaystyle \\\\xi (t)}  are the dipole moments.  The solution found this way is strictly equivalent to the same solution as the exact diagonalization and can be used for obtaining the absorption spectrum, but does not yield the eigenvectors, which can be limiting for the analysis of the excitons. The advantage of this approach is the quadratic scaling with the size of the BSE Hamiltonian   N  r a n k  2 {\\\\displaystyle N\\_{rank}^{2}}  . The time\\-evolution algorithm can be selected by setting IBSE \\= 1 in a BSE calculation. The required number of steps in the time\\-evolution calculation depends on the broadening CSHIFT and the maximum energy OMEGAMAX. The precision can be selected via tag BSEPREC. | **Mind:** The required number of steps does not depend on the size of the Hamiltonian || --- | The following features are currently supported: * Calculating the dielectric function* Calculations beyond the Tamm\\-Dancoff approximation How to------ * Practical guide for solving the Bethe\\-Salpeter equation via diagonalization BSE calculations* Practical guide for solving the Casida equation via diagonalization TDDFT calculations"}
{"file_name": "Low-scaling_GW__The_space-time_formalism.md", "content": "Available as of VASP.6 are low\\-scaling algorithms for ACFDT/RPA.[\\[1]](#cite_note-kaltak:prb:2014-1) This page describes the formalism of the corresponding low\\-scaling GW approach.[\\[2]](#cite_note-liu:prb:2016-2) A theoretical description of the ACFDT/RPA total energies is found here. A brief summary regarding GW theory is given below, while a practical guide can be found here.  Theory------ The GW implementations in VASP described in the papers of Shishkin *et al.*[\\[3]](#cite_note-shishkin:prb:2006-3)[\\[4]](#cite_note-shishkin:prb:2007-4) avoid storage of the Green's function   G {\\\\displaystyle G}  as well as Fourier transformations between time and frequency domain entirely. That is, all calculations are performed solely on the real frequency axis using Kramers\\-Kronig transformations for convolutions in the equation of   \u03c7 {\\\\displaystyle \\\\chi }  and  \u03a3 {\\\\displaystyle \\\\Sigma }  in reciprocal space and results in a relatively high computational cost that scales with   N  4 {\\\\displaystyle N^{4}}  (number of electrons). The scaling with system size can, however, be reduced to   N  3 {\\\\displaystyle N^{3}}  by performing a so\\-called Wick\\-rotation to imaginary time   t \u2192 i \u03c4 {\\\\displaystyle t\\\\to i\\\\tau } .[\\[5]](#cite_note-rojas:prl:1995-5) Following the  low scaling ACFDT/RPA algorithms the space\\-time implementation determines first, the non\\-interacting Green's function on the imaginary time axis in real space   G (  r  ,  r  \u2032  , i \u03c4 ) \\= \u2212  \u2211  n  k  \u03d5  n  k  ( 0 )  (  r  )  \u03d5  n  k  \u2217 ( 0 )  (  r  \u2032  )  e  \u2212 (  \u03f5  n  k  \u2212 \u03bc ) \u03c4  \\[  \u0398 ( \u03c4 ) ( 1 \u2212  f  n  k  ) \u2212 \u0398 ( \u2212 \u03c4 )  f  n  k  ] {\\\\displaystyle G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau )\\=\\-\\\\sum \\_{n{\\\\bf {k}}}\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}}')e^{\\-(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\mu )\\\\tau }\\\\left\\[\\\\Theta (\\\\tau )(1\\-f\\_{n{\\\\bf {k}}})\\-\\\\Theta (\\-\\\\tau )f\\_{n{\\\\bf {k}}}\\\\right]} Here   \u0398 {\\\\displaystyle \\\\Theta }  is the step function and   f  n  k {\\\\displaystyle f\\_{n{\\\\bf {k}}}}  the occupation number of the state   \u03d5  n  k  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}} . Because the Green's function is non\\-oscillatory on the imaginary time axis it can be represented on a coarse grid   \u03c4  m {\\\\displaystyle \\\\tau \\_{m}} , where the number of time points can be selected in VASP via the NOMEGA tag. Usually 12 to 16 points are sufficient for insulators and small band gap systems.[\\[6]](#cite_note-kaltak:2014-6) Subsequently, the irreducible polarizability is calculated from a contraction of two imaginary time Green's functions   \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212 G (  r  ,  r  \u2032  , i  \u03c4  m  ) G (  r  \u2032  ,  r  , \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})G({\\\\bf {r}}',{\\\\bf {r}},\\-i\\\\tau \\_{m})} Afterwards, the same compressed Fourier transformation as for the  low scaling ACFDT/RPA algorithms is employed to obtain the irreducible polarizability in reciprocal space on the imaginary frequency axis   \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) \u2192  \u03c7  G  G  \u2032  (  q  , i  \u03c9  n  ) {\\\\displaystyle \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\\\to \\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{n})} .[\\[6]](#cite_note-kaltak:2014-6)[\\[2]](#cite_note-liu:prb:2016-2) The next step is the computation of the screened potential  W  G  G  \u2032  (  q  , i  \u03c9  m  ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  (  q  , i  \u03c9  m  )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{m})\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{m})V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})}   followed by the inverse Fourier transform   W  G  G  \u2032  (  q  , i  \u03c9  n  ) \u2192 \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{n})\\\\to \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})}  and the calculation of the self\\-energy   \u03a3 (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212 G (  r  ,  r  \u2032  , i  \u03c4  m  ) W (  r  \u2032  ,  r  , i  \u03c4  m  ) {\\\\displaystyle \\\\Sigma ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})W({\\\\bf {r}}',{\\\\bf {r}},i\\\\tau \\_{m})} From here, several routes are possible including all approximations mentioned above, that is the single\\-shot, EVG0 and QPEVG0 approximation. All approximations have one point in common.  In contrast to the real\\-frequency implementation, the low\\-scaling GW algorithms require an analytical continuation of the self\\-energy from the imaginary frequency axis to the real axis. In general, this is an ill\\-defined problem and usually prone to errors, since the self\\-energy is known on a finite set of points. VASP determines internally a Pad\u00e9 approximation of the self\\-energy   \u03a3 ( z ) {\\\\displaystyle \\\\Sigma (z)}  from the calculated set of NOMEGA points   \u03a3 ( i  \u03c9  n  ) {\\\\displaystyle \\\\Sigma (i\\\\omega \\_{n})}  and solves the non\\-linear eigenvalue problem   \\[  T \\+  V  e x t  \\+  V  h  \\+ \u03a3 ( z )  ]  \\|  \u03d5  n  k  \u27e9  \\= z  \\|  \u03d5  n  k  \u27e9 {\\\\displaystyle \\\\left\\[T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma (z)\\\\right]\\\\left\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\right\\\\rangle \\=z\\\\left\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\right\\\\rangle } on the real frequency axis   z \\= \u03c9 {\\\\displaystyle z\\=\\\\omega }  . Because preceding Fourier transformations have been carried out with exponentially suppressed errors, the analytical continuation   \u03a3 ( z ) {\\\\displaystyle \\\\Sigma (z)}  of the self\\-energy can be determined with high accuracy. The analytical continuation typically yields energies that differ less than 20 meV from quasi\\-particle energies obtained from the real\\-frequency calculation.[\\[2]](#cite_note-liu:prb:2016-2) In addition, the space\\-time formulation allows to solve the full Dyson equation for   G (  r ,  r \u2032  , i \u03c4 ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau )}  with decent computational cost.[\\[7]](#cite_note-grumet:prb:2018-7) This approach is known as the self\\-consistent GW approach (scGW) and is available as of VASP6\\. ### Finite temperature formalism The zero\\-temperature formalism of many\\-body perturbation theory breaks down for metals (systems with zero energy band\\-gap) as pointed out by Kohn and Luttinger.[\\[8]](#cite_note-KohnLuttinger:PR:1960-8) This conundrum is lifted by considering diagrammatic perturbation theory at finite temperature   T \\> 0 {\\\\displaystyle T\\>0} , which may be understood by an analytical continuation of the real\\-time   t {\\\\displaystyle t}  to the imaginary time axis   \u2212 i \u03c4 {\\\\displaystyle \\-i\\\\tau } . Matsubara has shown that this Wick rotation in time   t \u2192 \u2212 i \u03c4 {\\\\displaystyle t\\\\to \\-i\\\\tau }  reveals an intriguing connection to the inverse temperature   \u03b2 \\= 1  /  T {\\\\displaystyle \\\\beta \\=1/T}  of the system.[\\[9]](#cite_note-Matsubara:PTP:1955-9) More precisely, Matsubara has shown that all terms in perturbation theory at finite temperature can be expressed as integrals of imaginary time quantities (such as the polarizability   \u03c7 ( \u2212 i \u03c4 ) {\\\\displaystyle \\\\chi (\\-i\\\\tau )} ) over the fundamental interval   \u2212 \u03b2 \u2264 \u03c4 \u2264 \u03b2 {\\\\displaystyle \\-\\\\beta \\\\leq \\\\tau \\\\leq \\\\beta }  . As a consequence, one decomposes imaginary time quantities into a Fourier series with period   \u03b2 {\\\\displaystyle \\\\beta } that determines the spacing of the Fourier modes. For instance the imaginary polarizability can be written as  \u03c7 ( \u2212 i \u03c4 ) \\=  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  \u03c7 \\~  ( i  \u03bd  m  )  e  \u2212 i  \u03bd  m  \u03c4  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\chi (\\-i\\\\tau )\\={\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\tilde {\\\\chi }}(i\\\u \\_{m})e^{\\-i\\\u \\_{m}\\\\tau },\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } and the corresponding random\\-phase approximation of the correlation energy at finite temperature becomes a series over (in this case, bosonic) Matsubara frequencies  \u03a9  c  R P A  \\=  1 2  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  ]  \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  }  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\Omega \\_{c}^{\\\\rm {RPA}}\\={\\\\frac {1}{2}}{\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right]\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right\\\\rbrace ,\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } The Matsubara formalism has the advantage that all contributions to the Green's function and the polarizability are mathematically well\\-defined, including contributions from states close to the chemical potential   \u03f5  n  k  \u2248 \u03bc {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\approx \\\\mu } , such that Matsubara series also converge for metallic systems. Although formally convenient, the Matsubara series converges poorly with the number of considered terms in practice. VASP, therefore, uses a compressed representation of the Fourier modes by employing the Minimax\\-Isometry method.[\\[10]](#cite_note-Kaltak:PRB:2020-10) This approach converges exponentially with the number of considered frequency points."}
{"file_name": "Calculation_of_atoms.md", "content": "The following files are needed for the calculation of atoms * INCAR* POSCAR* POTCAR* KPOINTS Before using a pseudopotential intensively it is not only necessary to check it in different bulk phases but the pseudopotential should also reproduce exactly the eigenvalues and the total energy of the free atom for which it was created. If energy cutoff and cell size are sufficient, the agreement between the atomic reference calculation and a calculation using VASP is normally better than 1 meV. Calculations for an atom are relatively fast and unproblematic in most cases. For the calculation only the   \u0393 {\\\\displaystyle \\\\Gamma }  point should be used i.e. the KPOINTS file should have the following contents:  ```Monkhorst Pack 0Monkhorst Pack 1  1  1 0  0  0  ``` The size of the cell depends on the element in question. Some values for reliable results are compiled in Tab. 1\\. |  | Cellsize | | | || --- | --- | --- | --- | --- || Aluminum | 14       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA || Potassium | 12       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA || Copper, Rhodium, Palldium ... | 10       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA || Nitrogen | 7       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA || Carbon | 8       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA |*Tab. 1: Typical convenient settings for the cellsize for a calculation of atoms.* A simple cubic cell can be often enough but it is usually recommended to use nearly cubic cells with minimal orthorombic distortion. This can be important for some atoms due to higher degrees of freedom for relaxation. An example POSCAR file should look like:  ```atom 1     10.00000    .00000    .00000       .00000  10.00100    .00000       .00000    .00000  10.00200 1cart 0    0    0  ``` Due to the large cell NGX, NGY, NGZ and NGXF, NGYF, NGZF need to be increased. This can be most easily achieved by setting PREC\\=*Accurate* or PREC\\=*High*. The INCAR file can be very simple:  ```SYSTEM = Pd: atom#Electronic minimisation  ENCUT  = 200.00 eV  #energy cut-off for the calculation  EDIFF  =   1E-04    #stopping-criterion for ELM  NELMDL =  5 #Ionic parameters  POMASS = 106.42     #mass (not really used in this case)  ZVAL   =  10.00     #valence #DOS related values  ISMEAR =    0  SIGMA = 0.1   #use smearing method  ``` The only difference to the bulk calculation is that Gaussian smearing must be used now. You might set SIGMA to a very small value; this is necessary if atomic orbitals are almost degenerated. Another important point is spin polarization which can also lead to different energies in many cases. To turn on spin polarization additionally set ISPIN\\=2 in the INCAR file. **Mind**: Look at the right value for the energy. It is **not**   F \\= E \\+ \u03c3 S {\\\\displaystyle F\\=E\\+\\\\sigma S} , which contains a \"meaningless\" entropy term, but the energy   E {\\\\displaystyle E} . If SIGMA is very small both values are the same, but for extremely small SIGMA values VASP might have difficulties to converge to the correct atomic ground state. On the start of an atomic calculation it is useful to delay the charge mixing for a large number of steps (in the example INCAR file above 5 steps by specifying NELMDL\\=5\\) because the initial charge density corresponds already to the atomic charge density for which the pseudopotential was generated. It is also convenient to perform a calculation for a fixed atomic charge density (ICHARG\\=12\\) as a first test. In some rare cases the real LDA ground state might differ from the configuration for which the pseudopotential was generated. For the atomic all electron reference calculation the occupancies are set by hand (for Pd   s  1  d  9 {\\\\displaystyle s^{1}d^{9}}  was chosen to be the reference configuration, which is not the LDA ground state of the atom). In this case it is necessaryto set the occupancies for VASP also by hand. This can be done by including the following lines in the INCAR file:  ``` ISMEAR = -2 FERWE  =  5*0.9  0.5  ``` (5\\*0\\.9 is interpreted as 0\\.9 0\\.9 0\\.9 0\\.9 0\\.9\\). To find out the ordering of the eigenvalues it might be necessary to perform a calculation with ICHARG\\=12 (i.e. fixed atomic charge density), or have a look on the information supplied with your pseudopotential. After a successful atomic calculation compare the differences between the eigenvalues with those obtained by the pseudopotential generation program. Also check the total energy, the differences should be smaller than 20 meV. '*Mind*:} We have found that the size of the cell can be reduced if one special point is used instead of the   \u0393 {\\\\displaystyle \\\\Gamma }  point, i.e. if the KPOINTS file has the following contents:  ```Monkhorst Pack 0Monkhorst Pack 2  2  2 0  0  0  ``` The reasons for this behaviour are: Due to the finite size of the cell a band dispersion exists i.e. the atomic eigenvalues split and form a band with finite width. To first order the center of the band lies exactly at the position of the atomic eigenvalues. Using the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point the eigenvalues at the bottom of the band are obtained. If the special point (0\\.25,0\\.25,0\\.25\\) 2  \u03c0  /  a {\\\\displaystyle \\\\pi /a}  is used instead of the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point, the energy of the center of the band is obtained. Nevertheless we recommend this setting only for absolute experts: in most cases the degeneracy of the p\\- and d\\-orbitals is removed and only the mean value of the eigenvalues remains physically significant. In this cases it is also necessary to increase SIGMA or to set the partial occupancies by hand!   Determining the groundstate energy of atoms------------------------------------------- The POTCAR file contains information on the energy of the atom in the reference configuration (i.e. the configuration for which the pseudopotential was generated). Total energies calculated by VASP are with respect to this configuration. The reference calculation, however, did not allow for spin\\-polarisation or broken symmetry solutions, which usually lower the energy for gradient corrected of hybrid functionals. To include these effects properly, it is required to calculate the lowest energy magnetic groundstate using VASP. Unfortunately convergence to the symmetry broken spin polarized groundstate can be relatively slow in VASP. The following INCAR file worked reasonably well for most elements:  ```ISYM = 0      # no symmetryISPIN = 2     # allow for spin polarisationVOSKOWN = 1   # this is important, in particular for GGA                        # but not required for PBE potentialsISMEAR = 0    # Gaussian smearing, otherwise negative occupancies might come upSIGMA = 0.002 # tiny smearing width to safely break symmetryAMIX = 0.2    # mixing set manuallyBMIX = 0.0001  NELM = 100    # often many steps are requiredICHARG = 1  ``` Execute VASP twice to three times, consecutively with this input file until energies are converged. Furthermore, we recommend to use large slightly non\\-cubic cells, i.e.  12\\.000 {\\\\displaystyle 12\\.000}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }    \u00d7 {\\\\displaystyle \\\\times }   12\\.001 {\\\\displaystyle 12\\.001}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }    \u00d7 {\\\\displaystyle \\\\times }   12\\.002 {\\\\displaystyle 12\\.002}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } . In some cases, we also found it advantageously to use direct energy minimization instead of charge\\-density mixing  ```ALGO = D LSUBROT = .FALSE. NELM = 500 TIME = 0.2  ```  or  ```ALGO = A LSUBROT = .FALSE. NELM = 500 TIME = 0.2  ``` Always check for convergence, and whether all occupancies are 0 or 1\\.   ---"}
{"file_name": "QUAD_EFG.md", "content": "QUAD\\_EFG= \\[real array]   Default: **QUAD\\_EFG** \\= NTYP\\*1\\.0nDescription: nuclear quadrupole moment (in millbarn) for the atomic types on the POTCAR file.  --- Setting the QUAD\\_EFG\\-tag allows the conversion of the *V*zz (see LEFG) values into the *C*q often encountered in NMR literature.The conversion formula is as follows (*Q* is the element and isotope specific quadrupole moment):  C  q  \\=  e Q  V  z z  h  . {\\\\displaystyle C\\_{q}\\={\\\\frac {eQV\\_{zz}}{h}}.} The QUAD\\_EFG\\-tag specifies the nuclear quadrupole moment in millibarns for each atomic species, in the sameorder as in the POTCAR file. The output *C*q is in MHz. An online compilation of nuclear quadrupole moments can be found here or in Ref.[\\[1]](#cite_note-pyykko:molphys:08-1) (updated numbers in Ref.[\\[2]](#cite_note-pyykko:molphys:17-2)). Suppose a solid contains Al, C and Si, than the QUAD\\_EFG\\-tag could read:  ```QUAD_EFG = 146.6 33.27 0  ``` 27Al is the stable isotope of Al with a natural abundance of 100% and *Q*\\=146\\.6\\.The stable isotopes 12C and 13C are not quadrupolar nuclei, however, the radioactive11C is. It has *Q*\\=33\\.27\\. For Si it is pointless to calculate a *C*q: again all stable isotopes have I\u22641/2\\. No moments are known for the other isotopes. **Beware**: several definitions of   C  q {\\\\displaystyle C\\_{q}}  are used in the NMR community.  **Beware**: for heavy nuclei inaccuracies are to be expected because of an incomplete treatement of relativistic effects."}
{"file_name": "CH_NEDOS.md", "content": "CH\\_NEDOS= \\[integer]   Default: **CH\\_NEDOS** \\= 1000nDescription: This tag specifies the number of frequency (energy) grid points on the x\\-axis in the calculation of the dielectric function for XAS spectra.  --- This feature is only available from VASP version 6\\.0 or higher."}
{"file_name": "REPORT.md", "content": "The output file REPORT contains information about the MD run such as list of parameters used in the simulation, the values of controlled geometric parameters, number of collision with the heat\\-bath (Andersen thermostat), quantities needed to compute the free\\-energy gradient, etc. Related Tags and Sections------------------------- IBRION, MDALGO, ISIF  ---"}
{"file_name": "ML_NHYP.md", "content": "ML\\_NHYP= \\[integer]   Default: **ML\\_NHYP** \\= 4nDescription: This tag specifies the polynomial power   \u03b6 {\\\\displaystyle \\\\zeta }  of the kernel within the machine learning force field method (see this section).  --- The value of ML\\_NHYP must be an integer number   \u2265 {\\\\displaystyle \\\\geq }  1\\."}
{"file_name": "ML_MB_MIN.md", "content": "ML\\_MB\\_MIN= \\[integer]   Default: **ML\\_MB\\_MIN** \\= 3nDescription: ML\\_MB\\_MIN sets the minimum number of local reference configurations required for generation of a machine\\-learned force field.  | **Mind:** Available as of VASP 6\\.4\\.3\\. Previous versions do not support this tag but act as if its default was `ML_MB_MIN = 2`. || --- |  --- Machine\\-learned force fields based on the kernel method require a reasonable amount of reference atomic environments in order to provide meaningful predictions. Typically, the on\\-the\\-fly algorithm in VASP collects these local reference configurations (also called kernel basis functions) during an MD simulation (`ML_MODE = train`). However, at the start of the trajectory usually only very few local reference configurations are available. How many depends on the system size, symmetry and number of atoms (per type). This tag controls how many local reference configurations are required **for each atom type** before training of a force field is allowed. Setting a higher value may yield a more robust initial force field at the cost of more *ab initio* calculations during the first few MD steps. If a training is scheduled in the current step, i.e., the `STATUS` line in the ML\\_LOGFILE shows `learning` or `critical`, but not enough atomic environments were collected, a text message will be emitted in the `MSG` line. Here is an example:  ```--------------------------------------------------------------------------------STATUS                  1  critical  4      T      F         0         1LCONF                   1 Ni         0         4SPRSC                   1         1         1 Ni         4         1MSG                     1      info Number of local reference configurations after sparsification below ML_MB_MIN, skipping training.BEEF                    1   1.00000000E-06   3.46410162E-02   2.00000000E-02   2.00000000E-03   0.00000000E+00   0.00000000E+00--------------------------------------------------------------------------------STATUS                  2  critical  4      T      F         0         2LCONF                   2 Ni         1         5SPRSC                   2         2         2 Ni         5         2MSG                     2      info Number of local reference configurations after sparsification below ML_MB_MIN, skipping training.BEEF                    2   1.00000000E-06   3.46410162E-02   2.00000000E-02   2.00000000E-03   0.00000000E+00   0.00000000E+00--------------------------------------------------------------------------------STATUS                  3  critical  4      T      F         0         3LCONF                   3 Ni         2         6SPRSC                   3         3         3 Ni         6         3REGR                    3    1    1   6.42271768E+01   1.36891529E+00   6.43938951E-14   3.76458019E+01REGR                    3    1    2   7.43557292E+01   1.35099932E+00   5.48943502E-14   3.71479653E+01REGR                    3    1    3   7.81437752E+01   1.34829112E+00   5.21286212E-14   3.70727138E+01REGRF                   3    1    4   7.95268527E+01   1.34739777E+00   5.11880969E-14   3.70478685E+01    2.31498305E+15   3.30988608E+11NDESC                   3        12 Ni       113NDESC_SIC               3 Ni       113STDAB                   3   1.41895828E-04   3.22944034E-02   9.66711031E-02ERR                     3   1.45620371E-04   3.32055814E-02   9.84035846E-02CFE                     3   0.00000000E+00   0.00000000E+00   0.00000000E+00LASTE                   3   1.99936842E-04   5.14296619E-02   1.37823063E-01BEE                     3   1.00000000E-06   3.46410162E-02   2.00000000E-02   2.00000000E-03   0.00000000E+00   0.00000000E+00BEEF                    3   2.37926034E-05   2.21630107E-03   8.49321832E-04   2.00000000E-03   5.19041973E-02   3.66970792E-02--------------------------------------------------------------------------------  ...  ``` Here, in the first two steps the ML\\_MB\\_MIN threshold prevents training of an MLFF, even if the Bayesian error estimation signals a `critical` step. The force field is then only generated in the third step, after the minimum number of three local reference configurations have been collected."}
{"file_name": "Graphite_interlayer_distance.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- In this example you will determine the interlayer distance of graphite in the stacking direction using the method of Tchatchenko and Scheffler to account for van der Waals interactions. Semilocal DFT at the GGA level underestimates long\\-range dispersion interactions. This problem causes a bad overestimation of graphite lattice in the stacking direction: 8\\.84 \u00c5 (PBE) vs. 6\\.71 \u00c5 (exp). In this example, the dispersion correction method of Tchatchenko and Scheffler is used to cope with this problem. Input----- ### POSCAR  ```graphite 1.01.22800000 -2.12695839  0.000000001.22800000  2.12695839  0.000000000.00000000  0.00000000  7.0 4direct   0.00000000  0.00000000  0.25000000   0.00000000  0.00000000  0.75000000   0.33333333  0.66666667  0.25000000   0.66666667  0.33333333  0.75000000  ``` ### INCAR  ```IVDW = 20           LVDW_EWALD =.TRUE. NSW = 1 IBRION = 2ISIF = 4PREC = AccurateEDIFFG = 1e-5LWAVE = .FALSE.LCHARG = .FALSE.ISMEAR = -5SIGMA = 0.01EDIFF = 1e-6ALGO = FastNPAR = 2  ``` ### KPOINTS  ```Monkhorst Pack 0gamma16 16 80 0 0  ``` Running this example-------------------- To run this example, execute the `run.sh` bash\\-script:  ``` ## To run VASP this script calls $vasp_std# (or posibly $vasp_gam and/or $vasp_ncl).# These variables can be defined by sourcing vaspcmd. vaspcmd 2> /dev/null  ## When vaspcmd is not available and $vasp_std,# $vasp_gam, and/or $vasp_ncl are not set as environment# variables, you can specify them here[ -z \"`echo $vasp_std`\" ] && vasp_std=\"mpirun -np 8 /path-to-your-vasp/vasp_std\"[ -z \"`echo $vasp_gam`\" ] && vasp_gam=\"mpirun -np 8 /path-to-your-vasp/vasp_gam\"[ -z \"`echo $vasp_ncl`\" ] && vasp_ncl=\"mpirun -np 8 /path-to-your-vasp/vasp_ncl\"  ## The real work starts here # rm results.dat for d in 6.5 6.6 6.65 6.7 6.75 6.8 6.9 7.0 do  cat>POSCAR<<!graphite 1.01.22800000 -2.12695839  0.000000001.22800000  2.12695839  0.000000000.00000000  0.00000000  $d 4direct   0.00000000  0.00000000  0.25000000   0.00000000  0.00000000  0.75000000   0.33333333  0.66666667  0.25000000   0.66666667  0.33333333  0.75000000 !  $vasp_std  cp OUTCAR OUTCAR.$d  energy=$(grep \"free  ene\" OUTCAR.$d|awk '{print $5}')  echo $d $energy >> results.dat done  ``` The optimal length of the lattice vector *c* normal to the stacking direction is determined in a series of single point calculations with varied value of *c* (all other degrees of freedom are fixed at their experimental values).  The computed *c* vs. energy dependence is written in the file `results.dat` and can be visualized e.g. using *xmgrace*.The optimal value can be obtained using the attached utility (python with numpy or Numeric is needed):  ```./utilities/fit.py results.dat  ``` This should yield:  ```200 iterations performedCh-square: 4.30305519481e-09---------        E0(eV):         -37.433456779       d0(A):  6.65603352689  ``` The computed value of 6\\.66 \u00c5 agrees well with experiment (6\\.71 \u00c5). Download--------  graphiteDistance\\_ts.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials"}
{"file_name": "IVDW.md", "content": "IVDW= 0 \\| 1 \\| 10 \\| 11 \\| 12 \\| 13 \\| 14 \\| 2 \\| 20 \\| 21 \\| 202 \\| 263 \\| 3 \\| 4   Default: **IVDW** \\= 0 (no correction)nDescription: IVDW specifies a vdW (dispersion) correction.  --- For fundamental reasons, the semilocal and hybrid exchange\\-correlation functionals are unable to describe properly vdW interactions resulting from dynamical correlations between fluctuating charge distributions (called London dispersion forces). An approximate way to work around this problem and to get more reliable results for vdW systems is to add a dispersion correction term,  {\\\\displaystyle E\\_{\\\\mathrm {disp} }} , to the conventional KS\\-DFT energy   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\mathrm {KS\\-DFT} }}  :  E  t o t  K S \u2212 D F T \u2212 d i s p  \\=  E  t o t  K S \u2212 D F T  \\+  . {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\mathrm {KS\\-DFT\\-disp} }\\=E\\_{\\\\rm {tot}}^{\\\\mathrm {KS\\-DFT} }\\+E\\_{\\\\mathrm {disp} }.} {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  can be calculated using one of the available approximate methods listed below. * IVDW\\=0\u00a0: no dispersion correction (default)* IVDW\\=1\\|10\u00a0: DFT\\-D2 method of Grimme[\\[1]](#cite_note-grimme:jcc:06-1) (available as of VASP.5\\.2\\.11\\)* IVDW\\=11\u00a0: DFT\\-D3 method of Grimme with zero\\-damping function[\\[2]](#cite_note-grimme:jcp:10-2) (available as of VASP.5\\.3\\.4\\)* IVDW\\=12\u00a0: DFT\\-D3 method with Becke\\-Johnson damping function[\\[3]](#cite_note-grimme:jcc:11-3) (available as of VASP.5\\.3\\.4\\)* IVDW\\=13\u00a0: DFT\\-D4 method[\\[4]](#cite_note-caldeweyher:jcp:2019-4) (available as of VASP.6\\.2 as external package)* IVDW\\=14\u00a0: One of the methods available in the Library libMBD of many\\-body dispersion methods[\\[5]](#cite_note-libmbd_1-5)[\\[6]](#cite_note-libmbd_2-6)[\\[7]](#cite_note-hermann:jcp:2023-7) (available as of VASP.6\\.4\\.3 as external package)* IVDW\\=2\\|20\u00a0: Tkatchenko\\-Scheffler method[\\[8]](#cite_note-tkatchenko:prl:09-8) (available as of VASP.5\\.3\\.3\\)* IVDW\\=21\u00a0: Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning[\\[9]](#cite_note-bucko:jctc:13-9)[\\[10]](#cite_note-bucko:jcp:14-10) (available as of VASP.5\\.3\\.5\\)* IVDW\\=202\u00a0: Many\\-body dispersion energy method (MBD@rSC)[\\[11]](#cite_note-tkatchenko:prl:12-11)[\\[12]](#cite_note-ambrosetti:jcp:14-12) (available as of VASP.5\\.4\\.1\\)* IVDW\\=263\u00a0: Many\\-body dispersion energy with fractionally ionic model for polarizability method (MBD@rSC/FI)[\\[13]](#cite_note-gould:jctc:2016_a-13)[\\[14]](#cite_note-gould:jctc:2016_b-14) (available as of VASP.6\\.1\\.0\\)* IVDW\\=3\u00a0: DFT\\-ulg[\\[15]](#cite_note-kim:jpcl:2012-15) method (available as of VASP.5\\.3\\.5\\)* IVDW\\=4\u00a0: dDsC dispersion correction[\\[16]](#cite_note-steinmann:jcp:11-16)[\\[17]](#cite_note-steinmann:jctc:11-17) method (available as of VASP.5\\.4\\.1\\) With all methods listed above, a dispersion correction is added to the total energy, potential, interatomic forces and stress tensor, such that lattice relaxations, molecular dynamics, and vibrational analysis (via finite differences) can be performed. Note, however, that these correction schemes are currently not available for calculations based on density functional perturbation theory. **N.B.**: The parameter LVDW used in previous versions of VASP (5\\.2\\.11 and later) to activate the DFT\\-D2 method is now obsolete. If LVDW\\=*.TRUE.* is defined, IVDW is automatically set to 1 (unless IVDW is specified in INCAR)."}
{"file_name": "Angular_functions.md", "content": "real spherical harmonics | *l* | *m* | Name | *Ylm* || --- | --- | --- | --- ||  |  |  |  || 0 | 1 | s | 1  4 \u03c0      {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {4\\\\pi }}}}  {\\frac  {1}{{\\sqrt  {4\\pi }}}} ||  |  |  |  || 1 | \\-1 | py | 3  4 \u03c0       y r     {\\\\displaystyle {\\\\sqrt {\\\\frac {3}{4\\\\pi }}}{\\\\frac {y}{r}}}  {\\sqrt  {{\\frac  {3}{4\\pi }}}}{\\frac  {y}{r}} || 1 | 0 | pz | 3  4 \u03c0       z r     {\\\\displaystyle {\\\\sqrt {\\\\frac {3}{4\\\\pi }}}{\\\\frac {z}{r}}}  {\\sqrt  {{\\frac  {3}{4\\pi }}}}{\\frac  {z}{r}} || 1 | 1 | px | 3  4 \u03c0       x r     {\\\\displaystyle {\\\\sqrt {\\\\frac {3}{4\\\\pi }}}{\\\\frac {x}{r}}}  {\\sqrt  {{\\frac  {3}{4\\pi }}}}{\\frac  {x}{r}} ||  |  |  |  || 2 | \\-2 | dxy | 1 2      15 \u03c0       x y   r  2       {\\\\displaystyle {\\\\frac {1}{2}}{\\\\sqrt {\\\\frac {15}{\\\\pi }}}{\\\\frac {xy}{r^{2}}}}  {\\frac  {1}{2}}{\\sqrt  {{\\frac  {15}{\\pi }}}}{\\frac  {xy}{r^{2}}} || 2 | \\-1 | dyz | 1 2      15 \u03c0       y z   r  2       {\\\\displaystyle {\\\\frac {1}{2}}{\\\\sqrt {\\\\frac {15}{\\\\pi }}}{\\\\frac {yz}{r^{2}}}}  {\\frac  {1}{2}}{\\sqrt  {{\\frac  {15}{\\pi }}}}{\\frac  {yz}{r^{2}}} || 2 | 0 | dz2 | 1 4      5 \u03c0       3  z  2   \u2212  r  2     r  2       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {5}{\\\\pi }}}{\\\\frac {3z^{2}\\-r^{2}}{r^{2}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {5}{\\pi }}}}{\\frac  {3z^{2}-r^{2}}{r^{2}}} || 2 | 1 | dxz | 1 2      15 \u03c0       z x   r  2       {\\\\displaystyle {\\\\frac {1}{2}}{\\\\sqrt {\\\\frac {15}{\\\\pi }}}{\\\\frac {zx}{r^{2}}}}  {\\frac  {1}{2}}{\\sqrt  {{\\frac  {15}{\\pi }}}}{\\frac  {zx}{r^{2}}} || 2 | 2 | dx2\\-y2 | 1 4      15 \u03c0        x  2   \u2212  y  2     r  2       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {15}{\\\\pi }}}{\\\\frac {x^{2}\\-y^{2}}{r^{2}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {15}{\\pi }}}}{\\frac  {x^{2}-y^{2}}{r^{2}}} ||  |  |  |  || 3 | \\-3 | fy(3x2\\-y2\\) | 1 4      35  2 \u03c0        ( 3  x  2   \u2212  y  2   ) y   r  3       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {35}{2\\\\pi }}}{\\\\frac {(3x^{2}\\-y^{2})y}{r^{3}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {35}{2\\pi }}}}{\\frac  {(3x^{2}-y^{2})y}{r^{3}}} || 3 | \\-2 | fxyz | 1 2      105 \u03c0       x y z   r  3       {\\\\displaystyle {\\\\frac {1}{2}}{\\\\sqrt {\\\\frac {105}{\\\\pi }}}{\\\\frac {xyz}{r^{3}}}}  {\\frac  {1}{2}}{\\sqrt  {{\\frac  {105}{\\pi }}}}{\\frac  {xyz}{r^{3}}} || 3 | \\-1 | fyz2 | 1 4      21  2 \u03c0        ( 5  z  2   \u2212  r  2   ) y   r  3       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {21}{2\\\\pi }}}{\\\\frac {(5z^{2}\\-r^{2})y}{r^{3}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {21}{2\\pi }}}}{\\frac  {(5z^{2}-r^{2})y}{r^{3}}} || 3 | 0 | fz3 | 1 4      7 \u03c0       ( 5  z  2   \u2212 3  r  2   ) z   r  3       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {7}{\\\\pi }}}{\\\\frac {(5z^{2}\\-3r^{2})z}{r^{3}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {7}{\\pi }}}}{\\frac  {(5z^{2}-3r^{2})z}{r^{3}}} || 3 | 1 | fxz2 | 1 4      21  2 \u03c0        ( 5  z  2   \u2212  r  2   ) x   r  3       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {21}{2\\\\pi }}}{\\\\frac {(5z^{2}\\-r^{2})x}{r^{3}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {21}{2\\pi }}}}{\\frac  {(5z^{2}-r^{2})x}{r^{3}}} || 3 | 2 | fz(x2\\-y2\\) | 1 4      105 \u03c0       (  x  2   \u2212  y  2   ) z   r  3       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {105}{\\\\pi }}}{\\\\frac {(x^{2}\\-y^{2})z}{r^{3}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {105}{\\pi }}}}{\\frac  {(x^{2}-y^{2})z}{r^{3}}} || 3 | 3 | fx(x2\\-3y2\\) | 1 4      35  2 \u03c0        (  x  2   \u2212 3  y  2   ) x   r  3       {\\\\displaystyle {\\\\frac {1}{4}}{\\\\sqrt {\\\\frac {35}{2\\\\pi }}}{\\\\frac {(x^{2}\\-3y^{2})x}{r^{3}}}}  {\\frac  {1}{4}}{\\sqrt  {{\\frac  {35}{2\\pi }}}}{\\frac  {(x^{2}-3y^{2})x}{r^{3}}} |   hybrid angular functions | sp | sp\\-1 | 1  2      s \\+   1  2       p  x         {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {s\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{x}}}}}}  {\\frac  {1}{{\\sqrt  2}}}{\\rm {s+{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{x}}}}} || --- | --- | --- ||  |  |  |  ||  | sp\\-2 | 1  2      s \u2212   1  2       p  x         {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{x}}}}}}  {\\frac  {1}{{\\sqrt  2}}}{\\rm {s-{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{x}}}}} ||  |  |  |  || sp2 | sp2\\-1 | 1  3      s \u2212   1  6       p  x   \\+   1  2       p  y           {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {p\\_{x}\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{y}}}}}}}}  {\\frac  {1}{{\\sqrt  3}}}{\\rm {s-{\\frac  {1}{{\\sqrt  6}}}{\\rm {p_{x}+{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{y}}}}}}} ||  | sp2\\-2 | 1  3      s \u2212   1  6       p  x   \u2212   1  2       p  y           {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {p\\_{x}\\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{y}}}}}}}}  {\\frac  {1}{{\\sqrt  3}}}{\\rm {s-{\\frac  {1}{{\\sqrt  6}}}{\\rm {p_{x}-{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{y}}}}}}} ||  | sp2\\-2 | 1  3      s \\+   2  6       p  x         {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {s\\+{\\\\frac {2}{\\\\sqrt {6}}}{\\\\rm {p\\_{x}}}}}}  {\\frac  {1}{{\\sqrt  3}}}{\\rm {s+{\\frac  {2}{{\\sqrt  6}}}{\\rm {p_{x}}}}} ||  |  |  |  || sp3 | sp3\\-1 | 1 2   (   s \\+    p  x   \\+    p  y   \\+    p  z   )           {\\\\displaystyle {\\\\frac {1}{2}}({\\\\rm {s\\+{\\\\rm {p\\_{x}\\+{\\\\rm {p\\_{y}\\+{\\\\rm {p\\_{z})}}}}}}}}}  {\\frac  {1}{2}}({\\rm {s+{\\rm {p_{x}+{\\rm {p_{y}+{\\rm {p_{z})}}}}}}}} ||  | sp3\\-2 | 1 2   (   s \\+    p  x   \u2212    p  y   \u2212    p  z   )           {\\\\displaystyle {\\\\frac {1}{2}}({\\\\rm {s\\+{\\\\rm {p\\_{x}\\-{\\\\rm {p\\_{y}\\-{\\\\rm {p\\_{z})}}}}}}}}}  {\\frac  {1}{2}}({\\rm {s+{\\rm {p_{x}-{\\rm {p_{y}-{\\rm {p_{z})}}}}}}}} ||  | sp3\\-2 | 1 2   (   s \u2212    p  x   \\+    p  y   \u2212    p  z   )           {\\\\displaystyle {\\\\frac {1}{2}}({\\\\rm {s\\-{\\\\rm {p\\_{x}\\+{\\\\rm {p\\_{y}\\-{\\\\rm {p\\_{z})}}}}}}}}}  {\\frac  {1}{2}}({\\rm {s-{\\rm {p_{x}+{\\rm {p_{y}-{\\rm {p_{z})}}}}}}}} ||  | sp3\\-4 | 1 2   (   s \u2212    p  x   \u2212    p  y   \\+    p  z   )           {\\\\displaystyle {\\\\frac {1}{2}}({\\\\rm {s\\-{\\\\rm {p\\_{x}\\-{\\\\rm {p\\_{y}\\+{\\\\rm {p\\_{z})}}}}}}}}}  {\\frac  {1}{2}}({\\rm {s-{\\rm {p_{x}-{\\rm {p_{y}+{\\rm {p_{z})}}}}}}}} ||  |  |  |  || sp3d | sp3d\\-1 | 1  3      s \u2212   1  6       p  x   \\+   1  2       p  y           {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {p\\_{x}\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{y}}}}}}}}  {\\frac  {1}{{\\sqrt  3}}}{\\rm {s-{\\frac  {1}{{\\sqrt  6}}}{\\rm {p_{x}+{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{y}}}}}}} ||  | sp3d\\-2 | 1  3      s \u2212   1  6       p  x   \u2212   1  2       p  y           {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {p\\_{x}\\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{y}}}}}}}}  {\\frac  {1}{{\\sqrt  3}}}{\\rm {s-{\\frac  {1}{{\\sqrt  6}}}{\\rm {p_{x}-{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{y}}}}}}} ||  | sp3d\\-3 | 1  3      s \\+   2  6       p  x         {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {s\\+{\\\\frac {2}{\\\\sqrt {6}}}{\\\\rm {p\\_{x}}}}}}  {\\frac  {1}{{\\sqrt  3}}}{\\rm {s+{\\frac  {2}{{\\sqrt  6}}}{\\rm {p_{x}}}}} ||  | sp3d\\-4 | 1  2       p  z   \\+   1  2       d   z  2           {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{z}\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {d\\_{z^{2}}}}}}}  {\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{z}+{\\frac  {1}{{\\sqrt  2}}}{\\rm {d_{{z^{2}}}}}}} ||  | sp3d\\-5 | \u2212   1  2       p  z   \\+   2  2       d   z  2           {\\\\displaystyle \\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{z}\\+{\\\\frac {2}{\\\\sqrt {2}}}{\\\\rm {d\\_{z^{2}}}}}}}  -{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{z}+{\\frac  {2}{{\\sqrt  2}}}{\\rm {d_{{z^{2}}}}}}} ||  |  |  |  || sp3d2 | sp3d2\\-1 | 1  6      s \u2212   1  2       p  x   \u2212   1    1   2       d   z  2     \\+   1 2      d   x  2   \u2212  y  2               {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{x}\\-{\\\\frac {1}{{\\\\sqrt {1}}2}}{\\\\rm {d\\_{z^{2}}\\+{\\\\frac {1}{2}}{\\\\rm {d\\_{x^{2}\\-y^{2}}}}}}}}}}}  {\\frac  {1}{{\\sqrt  6}}}{\\rm {s-{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{x}-{\\frac  {1}{{\\sqrt  1}2}}{\\rm {d_{{z^{2}}}+{\\frac  {1}{2}}{\\rm {d_{{x^{2}-y^{2}}}}}}}}}}} ||  | sp3d2\\-2 | 1  6      s \\+   1  2       p  x   \u2212   1    1   2       d   z  2     \\+   1 2      d   x  2   \u2212  y  2               {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {s\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{x}\\-{\\\\frac {1}{{\\\\sqrt {1}}2}}{\\\\rm {d\\_{z^{2}}\\+{\\\\frac {1}{2}}{\\\\rm {d\\_{x^{2}\\-y^{2}}}}}}}}}}}  {\\frac  {1}{{\\sqrt  6}}}{\\rm {s+{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{x}-{\\frac  {1}{{\\sqrt  1}2}}{\\rm {d_{{z^{2}}}+{\\frac  {1}{2}}{\\rm {d_{{x^{2}-y^{2}}}}}}}}}}} ||  | sp3d2\\-3 | 1  6      s \u2212   1  2       p  y   \u2212   1    1   2       d   z  2     \u2212   1 2      d   x  2   \u2212  y  2               {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{y}\\-{\\\\frac {1}{{\\\\sqrt {1}}2}}{\\\\rm {d\\_{z^{2}}\\-{\\\\frac {1}{2}}{\\\\rm {d\\_{x^{2}\\-y^{2}}}}}}}}}}}  {\\frac  {1}{{\\sqrt  6}}}{\\rm {s-{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{y}-{\\frac  {1}{{\\sqrt  1}2}}{\\rm {d_{{z^{2}}}-{\\frac  {1}{2}}{\\rm {d_{{x^{2}-y^{2}}}}}}}}}}} ||  | sp3d2\\-4 | 1  6      s \\+   1  2       p  y   \u2212   1    1   2       d   z  2     \u2212   1 2      d   x  2   \u2212  y  2               {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {s\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{y}\\-{\\\\frac {1}{{\\\\sqrt {1}}2}}{\\\\rm {d\\_{z^{2}}\\-{\\\\frac {1}{2}}{\\\\rm {d\\_{x^{2}\\-y^{2}}}}}}}}}}}  {\\frac  {1}{{\\sqrt  6}}}{\\rm {s+{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{y}-{\\frac  {1}{{\\sqrt  1}2}}{\\rm {d_{{z^{2}}}-{\\frac  {1}{2}}{\\rm {d_{{x^{2}-y^{2}}}}}}}}}}} ||  | sp3d2\\-5 | 1  6      s \u2212   1  2       p  z   \\+   1  3       d   z  2             {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {s\\-{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{z}\\+{\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {d\\_{z^{2}}}}}}}}}  {\\frac  {1}{{\\sqrt  6}}}{\\rm {s-{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{z}+{\\frac  {1}{{\\sqrt  3}}}{\\rm {d_{{z^{2}}}}}}}}} ||  | sp3d2\\-6 | 1  6      s \\+   1  2       p  z   \\+   1  3       d   z  2             {\\\\displaystyle {\\\\frac {1}{\\\\sqrt {6}}}{\\\\rm {s\\+{\\\\frac {1}{\\\\sqrt {2}}}{\\\\rm {p\\_{z}\\+{\\\\frac {1}{\\\\sqrt {3}}}{\\\\rm {d\\_{z^{2}}}}}}}}}  {\\frac  {1}{{\\sqrt  6}}}{\\rm {s+{\\frac  {1}{{\\sqrt  2}}}{\\rm {p_{z}+{\\frac  {1}{{\\sqrt  3}}}{\\rm {d_{{z^{2}}}}}}}}} |"}
{"file_name": "Be_careful_with_the_default_smearing_method_(ISMEAR=1).md", "content": "The default for ISMEAR is 1 in VASP. This setting is not appropriate for insulators and semiconductors, and can results in one\\-electron occupancies thatare larger than 1 (2 for non spinpolarized) systems, and converselysome states being occupied by less than 1 electron close to the Fermi\\-level.It is strongly recommended to set ISMEAR\\=0 in the INCAR fileand use a small width SIGMA\\=0\\.05 (do not make SIGMA too small,values below 0\\.001 can also lead to undesirable symmetry breaking). Read more on this in Number of k points and method for smearing!    ---"}
{"file_name": "Preparing_a_Super_Cell.md", "content": "Overview> Input> Preparing a Super Cell>Output> List of tutorials Task---- This tutorial shows how to get POSCAR files containing a super cell from an initially smaller cell. Super cells from p4vasp----------------------- * Open p4vasp by typing *p4v* on the terminal.* Load the primitive cell by clicking on **File**\u2192**Load system**: [](File_Fig_XAS_1.html) * Multiply cell in each direction (enter 3 for each direction) by clicking on **Edit**\u2192**Multiply Cell**: [](File_Fig_XAS_2.html) * Save new system by clicking on **File**\u2192**Save system as**: [](File_Fig_XAS_3.html)   Overview> Input> Preparing a Super Cell>Output> List of tutorials"}
{"file_name": "NCSHMEM.md", "content": "NCSHMEM= \\[integer]   Default: **NCSHMEM** \\= 1nDescription: NCSHMEM determines the number of compute cores sharing the memory in MPI in the non\\-cubic scaling GW routines.  --- By default no shared memory MPI is in the non\\-cubic scaling GW routines (ALGO\\=EVGW, EVGW0, QPGW and QPGW0\\).For using shared memory MPI in the non\\-cubic scaling GW set NCSHMEM\\=\\-1\\. | **Warning:** For the openmp version NCHSMEM is not active and shared memory is not used for MPI. In that case the memory is shared between threads. || --- |"}
{"file_name": "SCSRAD.md", "content": "SCSRAD= \\[real]   Default: **SCSRAD** \\= 120nDescription: SCSRAD defines the cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) used in the calculation of   \u03c4  i j {\\\\displaystyle \\\\tau \\_{ij}}  within the Tkatchenko\\-Scheffler method Self\\-consistent screening in Tkatchenko\\-Scheffler method.  ---"}
{"file_name": "Dielectric_properties_of_Si_using_BSE.md", "content": "Overview> Dielectric properties of Si using BSE> Improving the dielectric function > Plotting the BSE fatband structure of Si> List of tutorials  Task---- Description: Calculate the dielectric function of Si including excitonic effects by solving the Bethe\\-Salpeter equation (BSE) on top of GW0\\. Input----- ### POSCAR  ``` Si 5.43000.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.00 0.25 0.25 0.25   ``` ### INCAR * This is the INCAR file for the basic DFT calculation:  ```System\")  = SiPREC = Normal\u00a0; ENCUT = 250.0ISMEAR = 0\u00a0; SIGMA = 0.01KPAR = 2EDIFF = 1.E-8  ``` ### KPOINTS  ```Automatic 0Gamma 6 6 6  0 0 0  ``` Calculation----------- * The workflow of GW0\\+BSE calculations is given in doall.sh and consists of the following consecutive steps: 1. \"Standard\" DFT groundstate calculation.2. Obtain virtual orbitals: needs WAVECAR file from step 1\\.3. The GW0 calculation: need WAVECAR and WAVEDER from step 2\\.4. Optional step: use LOPTICS\\=*.TRUE.* to plot dielectric function in the independent particle approximation (IPA) using GW0 quasiparticle energies instead of DFT energies.5. The BSE calculation: needs WAVECAR from step 3 and WAVEDER from step 2\\. ### Step 1: DFT groundstate calculation * We perform standard DFT calculation using the INCAR.DFT file. ### Step 2: Obtain DFT \"virtual\" orbitals (empty states) * This step uses the INCAR.DIAG file:  ```System\")  = SiPREC = Normal\u00a0; ENCUT = 250.0ALGO = EXACT\u00a0; NELM = 1ISMEAR = 0\u00a0; SIGMA = 0.01KPAR = 2NBANDS = 128LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.OMEGAMAX = 40  ``` * We use exact diagonalization for this step (ALGO\\=*EXACT*) and keep 128 bands after diagonalization (NBANDS\\=128\\).* With LPEAD\\=*.TRUE.* we use an alternative way of computing the derivates of the orbitals with respect to the Bloch wave vectors.* It is important that this calculations needs the orbitals (WAVECAR file) written in step 1\\. ### Step 3: RPA quasiparticles with single\\-shot GW (G0W0\\) * This step uses the INCAR.GW0 file:  ```System\")  = SiPREC = Normal\u00a0; ENCUT = 250.0ALGO = GW0  ISMEAR = 0\u00a0; SIGMA = 0.01 ENCUTGW = 150\u00a0; NELM = 1\u00a0;  NOMEGA =  50\u00a0;  OMEGATL = 280KPAR = 2#NBANDSO=4\u00a0; NBANDSV=8\u00a0; LADDER=.TRUE.\u00a0; LUSEW\")=.TRUE.NBANDS = 128NBANDSGW = 12LWAVE = .TRUE.PRECFOCK = Normal  ``` * We select the G0W0 method by specifying ALGO\\=*GW0* and NELM\\=1\\.* The energy cut off for the response function is select by ENCUTGW.* The number of point used in the frequency integration is given by NOMEGA.* Use the same number of bands (NBANDS) as in step 2, otherwise the WAVEDER file is not read correctly.* The quasiparticle energies are calculated for the first few bands given by NBANDSGW.* It is important that this calculation needs the orbitals (WAVECAR file) and the derivatives of the orbitals with respect to the Bloch vectors (WAVEDER file).* The quasiparticle energies can be found in the OUTCAR file (saved as OUTCAR.GW0 in this example):  ```  QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1for sc-GW calculations column KS-energies equals QP-energies in previous stepand V_xc(KS)=  KS-energies - (<T + V_ion + V_H > + <T+V_H+V_ion>^1  + <V_x>^1) k-point   1\u00a0:       0.0000    0.0000    0.0000 band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation  ``` ### Step 4 (optional): Plot IPA dielectric function using GW0 quasiparticle energies * This step uses the INCAR.NONE file:  ```System\")  = SiPREC = Normal\u00a0; ENCUT = 250.0ALGO = Nothing\u00a0; NELM = 1ISMEAR = 0\u00a0; SIGMA = 0.01KPAR = 2NBANDS = 128LWAVE = .FALSE.LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.OMEGAMAX = 40    ``` * By specyfing ALGO\\=*Nothing* we do nothing except reading the WAVECAR file.* Using LOPTICS\\=*.TRUE.* and LPEAD\\=*.TRUE.* we compute the dielectric function in the IPA. ### Step 5: The BSE calculation * This step uses the INCAR.BSE file:  ```PREC = Normal\u00a0; ENCUT = 250.0ALGO = BSE ANTIRES = 0ISMEAR = 0\u00a0; SIGMA = 0.01ENCUTGW = 150EDIFF = 1.E-8NBANDS = 128NBANDSO = 4NBANDSV = 8OMEGAMAX = 20PRECFOCK = Normal  ``` * By specifying ANTIRES\\=0 we use the Tamm\\-Dancoff approximation.* ENCUTGW\\=150 specifies the energy cut\\-off of the response function.* NBANDSO and NBANDSV define the number of valence and conduction bands in the calculations.* This calculation needs the orbitals (WAVECAR file) from step 3 and the derivative of the orbitals with respect to the Bloch vectors (WAVEDER file) written in step 2\\.* By using the script ./plotall.sh we get the absorption spectra within the independent particle picture and with BSE: [](File_Fig_BSE_example1_2.html) * The calculated dielectric function of Si is at this point (GW\\+BSE) already in much better agreement with experiment. However we can do even better as shown in the following figure: [](File_Fig_BSE_example1_4.html) * The problem comes from the coarse k\\-point grid that we have used. A denser grid samples more (direct) transitions between the bands. [](File_Fig_BSE_example1_3.html) * Simply using a denser grid is mostly not an option because of the computational expense.  --- Download--------  Si\\_BSE.tgz Overview> Dielectric properties of Si using BSE> Improving the dielectric function > Plotting the BSE fatband structure of Si> List of tutorials"}
{"file_name": "IRC_MINSTEP.md", "content": "IRC\\_MINSTEP= real   Default: **IRC\\_MINSTEP** \\= 0\\.0250nDescription: Lower limit for the step size (in fs).  --- The damped\\-velocity\\-Verlet algorithm for the IRC calculations uses an adaptively varying size of the time step. It depends on the estimated accuracy of the previous step. IRC\\_MINSTEP defines the lower limit for the step size in fs."}
{"file_name": "H2O.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Relaxation of an   H  2  O {\\\\displaystyle \\\\mathrm {H} \\_{2}\\\\mathrm {O} }  molecule. Input----- ### POSCAR  ```H2O _20.52918  \u00a0! scaling parameter 15 0 0 0 15 0 0 0 15 1 2selectcart     0.00     0.00     0.00 F F F     1.10    -1.43     0.00 T T F     1.10     1.43     0.00 T T F  ``` All coordinates are scaled by the factor 0\\.52918\\. ### INCAR  ```PREC = Normal   \u00a0! standard precision ENMAX = 400     \u00a0! cutoff should be set manuallyISMEAR = 0\u00a0; SIGMA = 0.1IBRION = 1      \u00a0! use DIIS algorithm to convergeNFREE = 2       \u00a0! 2 independent degrees of freedomNSW = 10        \u00a0! 10 ionic stepsEDIFFG = -0.02  \u00a0! forces smaller 0.02 A/eV  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- * Use PREC\\=*Normal* (Default for VASP.5\\.X)* It is strongly urged that the energy cutoffs are set manually in the INCAR file, as it provides more control over the calculations.* For the ionic optimization the DIIS algorithm is used. This algorithm builds an approximation of the Hessian matrix and converges usually faster than the conjugate gradient algorithm. It is however recommended to set the independent degrees of freedom manually. \\*EDIFFG determines when to terminate the relaxation. Positive values: energy change between steps must be less than the value set by EDIFFG. Negative values:   \\|  F  i  \\|  \\<  \\|  E D I F F G  \\|  \u2200 i \\= 1 ,  N  i o n s {\\\\displaystyle \\|\\\\mathbf {F} \\_{i}\\|\\<\\|\\\\mathrm {EDIFFG} \\|\\\\forall i\\=1,N\\_{\\\\mathrm {ions} }}  . Download--------  H2O.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "MDALGO.md", "content": "MDALGO= 0 \\| 1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 11 \\| 21 \\| 13   Default: **MDALGO** \\= 0nDescription: MDALGO specifies the molecular\\-dynamics\\-simulation protocol (in case IBRION\\=0 and VASP was compiled with \\-Dtbdyn).   --- MDALGO\\=0: Standard molecular dynamics-------------------------------------- Should provide the same results as MDALGO\\=2 (Nose\\-Hoover thermostat). The difference is that it is a different implementation and works also without the precompiler flag \\-Dtbdyn. ### NVE ensemble * To perform a calculation in the NVE ensemble: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=0 and set SMASS\\=\\-3\\. MDALGO\\=1: Andersen thermostat------------------------------ For the description of the Andersen thermostat see: Andersen thermostat. The Andersen thermostat is only available for the NVT ensemble. ### Standard molecular dynamics in * For a standard molecular dynamics run with Anderson thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=1, and choose an appropriate setting for ANDERSEN\\_PROB ### Constrained molecular dynamics For a description of constrained molecular dynamics see Constrained molecular dynamics. * For a constrained molecular dynamics run with Andersen thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=1, and choose an appropriate setting for ANDERSEN\\_PROB3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 04. When the free\\-energy gradient is to be computed, set LBLUEOUT\\=.TRUE. ### Slow\\-growth approach For a description of slow\\-growth approach see Slow\\-growth approach. * For a slow\\-growth simulation, one has to perform a calcualtion very similar to Constrained molecular dynamics but additionally the transformation velocity\\-related INCREM\\-tag for each geometric parameter with STATUS\\=0 has to be specified: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=1, and choose an appropriate setting for ANDERSEN\\_PROB3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 04. When the free\\-energy gradient is to be computed, set LBLUEOUT\\=.TRUE. 5. Specify the transformation velocity\\-related INCREM\\-tag for each geometric parameter with STATUS\\=0. ### Monitoring geometric parameters Geometric parameters with STATUS \\= 7 in the ICONST\\-file are monitored during the MD simulation.The corresponding values are written onto the REPORT\\-file, for each MD step, after the lines following the string Monit\\_coord. Sometimes it is desirable to terminate the simulation if all values of monitored parameters get larger that some predefined upper and/or lower limits. These limits can be set by the user by means of the VALUE\\_MAX and VALUE\\_MIN\\-tags. * To monitor geometric parameters during an MD run: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=1, and choose an appropriate setting for ANDERSEN\\_PROB.3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 7\\.4. Optionally, set the upper and/or lower limits for the coordinates, by means of the VALUE\\_MAX and VALUE\\_MIN\\-tags, respectively. ### Metadynamics For a description of metadynamics see Metadynamics. * For a metadynamics run with Andersen thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=1 (or MDALGO\\=11 in VASP 5\\.x), and choose an appropriate setting for ANDERSEN\\_PROB.3. Set the parameters HILLS\\_H, HILLS\\_W, and HILLS\\_BIN.4. Define collective variables in the ICONST\\-file, and set the STATUS\") parameter for the collective variables to 5\\.5. If needed, define the bias potential in the PENALTYPOT\\-file. The actual time\\-dependent bias potential is written to the HILLSPOT\\-file, which is updated after adding a new Gaussian. At the beginning of the simulation, VASP attempts to read the initial bias potential from the PENALTYPOT\\-file. For the continuation of a metadynamics run, copy HILLSPOT to PENALTYPOT. The values of all collective variables for each MD step are listed in REPORT\\-file, check the lines after the string Metadynamics. ### Biased molecular dynamics For a description of biased molecular dynamics see Biased molecular dynamics. * For a biased molecular dynamics run with Andersen thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=1 (or MDALGO\\=11 in VASP 5\\.x), and choose an appropriate setting for ANDERSEN\\_PROB.3. In order to avoid updating of the bias potential, set HILLS\\_BIN\\=NSW.4. Define collective variables in the ICONST\\-file, and set the STATUS parameter for the collective variables to 5\\.5. Define the bias potential in the PENALTYPOT\\-file if necessary. The values of all collective variables for each MD step are listed in the REPORT\\-file, check the lines after the string Metadynamics. ### Special case: NVE ensemble NVE ensemble calculations can be also run by selecting the Anderson thermostat and setting the update collision probability (ANDERSEN\\_PROB) to zero. * To run an NVE ensemble: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=1 and ANDERSEN\\_PROB\\=0\\.0\\. MDALGO\\=2: Nose\\-Hoover thermostat---------------------------------- For the description of the Nose\\-Hoover thermostat see: Nose\\-Hoover thermostat. The Nose\\-Hoover thermostat is currently only available for the NVT ensemble.  ### Standard molecular dynamics * For a standard molecular dynamics run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=2, and choose an appropriate setting for SMASS. ### Constrained molecular dynamics For a description of constrained molecular dynamics see Constrained molecular dynamics. * For a constrained molecular dynamics run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=2, and choose an appropriate setting for SMASS.3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 0\\.4. When the free\\-energy gradient is to be computed, set LBLUEOUT\\=.TRUE. ### Slow\\-growth approach For a description of slow\\-growth approach see Slow\\-growth approach. * For a slow\\-growth approach run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=2, and choose an appropriate setting for SMASS3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 04. When the free\\-energy gradient is to be computed, set LBLUEOUT\\=.TRUE. 5. Specify the transformation velocity\\-related INCREM\\-tag for each geometric parameter with STATUS\\=0 ### Monitoring geometric parameters Geometric parameters with STATUS \\= 7 in the ICONST\\-file are monitored during the MD simulation.The corresponding values are written onto the REPORT\\-file, for each MD step, after the lines following the string Monit\\_coord. Sometimes it is desirable to terminate the simulation if all values of monitored parameters get larger that some predefined upper and/or lower limits. These limits can be set by the user by means of the VALUE\\_MAX and VALUE\\_MIN\\-tags. To monitor geometric parameters during an MD run: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=2, and choose an appropriate setting for SMASS3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 74. Optionally, set the upper and/or lower limits for the coordinates, by means of the VALUE\\_MAX and VALUE\\_MIN\\-tags, respectively. ### Metadynamics For a description of metadynamics see Metadynamics. * For a metadynamics run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=2 (or MDALGO\\=21 in VASP 5\\.x), and choose an appropriate setting for SMASS.3. Set the parameters HILLS\\_H, HILLS\\_W, and HILLS\\_BIN.4. Define collective variables in the ICONST\\-file, and set the STATUS parameter for the collective variables to 5\\.5. If needed, define the bias potential in the PENALTYPOT\\-file. The actual time\\-dependent bias potential is written to the HILLSPOT\\-file, which is updated after adding a new Gaussian. At the beginning of the simulation, VASP attempts to read the initial bias potential from the PENALTYPOT\\-file. For the continuation of a metadynamics run, copy HILLSPOT to PENALTYPOT. The values of all collective variables for each MD step are listed in REPORT\\-file, check the lines after the string Metadynamics. ### Biased molecular dynamics For a description of biased molecular dynamics see Biased molecular dynamics. * For a biased molecular dynamics run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set MDALGO\\=2 (or MDALGO\\=21 in VASP 5\\.x), and choose an appropriate setting for SMASS.3. In order to avoid updating of the bias potential, set HILLS\\_BIN\\=NSW.4. Define collective variables in the ICONST\\-file, and set the STATUS parameter for the collective variables to 5\\.5. Define the bias potential in the PENALTYPOT\\-file. The values of all collective variables for each MD step are listed in the REPORT\\-file, check the lines after the string Metadynamics. MDALGO\\=3: Langevin thermostat------------------------------ For the description of the Langevin thermostat see: Langevin thermostat. The Langevin thermostat is available for NVT and NpT ensembles. ### *NVT*\\-simulation with Langevin thermostat * To run an *NVT*\\-simulation with a Langevin thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set ISIF\\=2\\.3. Set MDALGO\\=3 to invoke the Langevin thermostat.4. Specify friction coefficients for all species in the POSCAR file, by means of the LANGEVIN\\_GAMMA\\-tag. ### *NpT*\\-simulation with Langevin thermostat The Langevin dynamics in the isobaric\\-isothermal ensemble is calculated by the method of Parrinello and Rahman[\\[1]](#cite_note-parrinello:prl:1980-1)[\\[2]](#cite_note-parrinello:jap:1981-2) (see NpT ensemble for more descriptions) combined with a Langevin thermostat. * To run an NpT\\-simulation (Parinello\\-Rahman dynamics) with a Langevin thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW.2. Set ISIF\\=3 to allow for relaxation of the cell volume and shape. At the moment, dynamics with *fixed volume\\+variable shape* (ISIF\\=4\\) or *fixed shape\\+variable volume* (ISIF\\=7\\) are not available.3. Set MDALGO\\=3 to invoke the Langevin thermostat.4. Specify friction coefficients for all species in the POSCAR file, by means of the LANGEVIN\\_GAMMA\\-tag.5. Specify a separate set of friction coefficient for the lattice degrees\\-of\\-freedom, using the LANGEVIN\\_GAMMA\\_L\\-tag.6. Set a mass for the lattice degrees\\-of\\-freedom, using the PMASS\\-tag.7. Optionally, one may define an external pressure (in kB), by means of the PSTRESS\\-tag. Note that the advanced simulation protocols, such metadynamics, or geometric constraints and restraints are available within the MDALGO\\=3 setting.  ### Stochastic boundary conditions In some cases it is desirable to study approach of initially non\\-equilibrium system to equilibrium. Examples of such simulations include the impact problems when a particle with large kinetic energy hits a surface or calculation of friction force between two surfaces sliding with respect to each other. As shown by Toton *et al.*[\\[3]](#cite_note-Toton10-3), this type of problems can be studied using the stochastic boundary conditions (SBC) derived from the generalized Langevin equation by Kantorovich and Rompotis.[\\[4]](#cite_note-Kantorovich08-4) In this approach, the system of interest is divided into three regions: (a) fixed atoms, (b) the internal (Newtonian) atoms moving according to Newtonian dynamics, and (c) a buffer region of Langevin atoms (*i.e.*, atoms governed by Langevin equations of motion) located between (a) and (b). The role of the Langevin atoms is to dissipate heat, while the fixed atoms are needed solely to create the correct potential well for the Langevin atoms to move in. The Newtonian region should include all atoms relevant to the process under study: in the case of the impact problem, for instance, the Newtonian region should contain atoms of the molecule hitting the surface and several uppermost layers of the material forming the surface. Performing molecular dynamics with such a setup guarantees that the system (possibly out of equilibrium initially) arrives at the appropriate canonical distribution. * To run a simulation with stochastic boundary conditions, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set ISIF\\=23. Set MDALGO\\=3 to invoke the Langevin thermostat4. Prepare the POSCAR file in such a way that the Newtonian and Langevin atoms are treated as different species (even if they are chemically identical). In your POSCAR, use \"selective dynamics\" and the corresponding logical flags to define the frozen and moveable atoms.5. Specify friction coefficients \u03b3, for all species in the POSCAR file, by means of the LANGEVIN\\_GAMMA\\-tag: set the friction coefficients to 0 for all fixed and Newtonian atoms, and choose a proper \u03b3 for the Langevin atoms. #### Practical example Consider a system consisting of 16 hydrogen and 48 silicon atoms. Suppose that eight silicon atoms are considered to be Langevin atoms and the remaining 32 Si atoms are either fixed or Newtonian atoms. The Langevin and Newtonian (or fixed) atoms should be considered as different species, *i.e.*, the POSCAR\\-file should contain the line like this:  ```Si H Si40 16 8  ``` As only the final eight Si atoms are considered to be Langevin atoms, the INCAR\\-file should contain the following line defining the friction coefficients:  ```LANGEVIN_GAMMA = 0.0   0.0   10.0  ``` *i.e.*, for all non\\-Langevin atoms, \u03b3 should be set to zero. MDALGO\\=4: Nose Hoover chains thermostat---------------------------------------- For a description of Nose Hoover chains theromastat, see NHC thermostat. * To run an *NVT*\\-simulation with a Nose Hoover chains thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set ISIF\\=23. Set MDALGO\\=4 to invoke the thermostat, select the number of thermostats in chain via NHC\\_NCHAINS and choose an appropriate setting for the thermostat parameter NHC\\_PERIOD. Note that the advanced simulation protocols, such metadynamics, or geometric constraints and restraints are available within the MDALGO\\=4 setting.  MDALGO\\=5: Canonical sampling through velocity\\-rescaling (CSVR thermostat)--------------------------------------------------------------------------- | **Mind:** This option is available as of VASP 6\\.4\\.3\\. || --- | For a description of CSVR theromastat, see CSVR thermostat. * To run an *NVT*\\-simulation with a CSVR thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set ISIF\\=23. Set MDALGO\\=5 to invoke the thermostat and choose an appropriate setting for the thermostat parameter CSVR\\_PERIOD. Note that the advanced simulation protocols, such metadynamics, or geometric constraints and restraints are available within the MDALGO\\=5 setting. MDALGO\\=13: Multiple Andersen thermostats----------------------------------------- Up to three user\\-defined atomic subsystems may be coupled with independent Andersen thermostats[\\[5]](#cite_note-Andersen80-5) (see remarks under MDALGO\\=1 as well).The POSCAR file must be organized such that the positions of atoms of subsystem *i\\+1* are defined after those for the subsystem *i*, and the following flags must be set by the user:  * NSUBSYS\\=\\[int array] Define the last atom for each subsystem (two or three values must be supplied). For instance, if total of 20 atoms is defined in the POSCAR file, and the initial 10 atoms belong to the subsystem 1, the next 7 atoms to the subsystem 2, and the last 3 atoms to the subsystem 3, NSUBSYS should be defined as follows:NSUBSYS\\= 10 17 20Note that the last number in the previous example is actually redundant (clearly the last three atoms belong to the last subsystem) and does not have to be user\\-supplied.* TSUBSYS\\=\\[real array] Simulation temperature for each subsystem* PSUBSYS\\=\\[real array] Collision probability for atoms in each subsystem. Only the values 0\u2264PSUBSYS\u22641 are allowed.Related Tags and Sections------------------------- IBRION,ISIF,SMASS,ANDERSEN\\_PROB,RANDOM\\_SEED,LBLUEOUT,SHAKETOL,SHAKEMAXITER,HILLS\\_H,HILLS\\_W,HILLS\\_BIN,INCREM,VALUE\\_MIN,VALUE\\_MAX,LANGEVIN\\_GAMMA,LANGEVIN\\_GAMMA\\_L,PMASS,NSUBSYS,TSUBSYS,PSUBSYS,ICONST,PENALTYPOT,HILLSPOT,REPORT Examples that use this tag"}
{"file_name": "CPARAM.md", "content": "CPARAM= \\[real]   Default: **CPARAM** \\= 0\\.0093nDescription: The tag CPARAM allows to specify the value of the parameter   C {\\\\displaystyle C}  in the kernel of the nonlocal rVV10 correlation functional.[\\[1]](#cite_note-sabatini:prb:2013-1)  ---"}
{"file_name": "TEBEG.md", "content": "TEBEG= \\[real]   Default: **TEBEG** \\= 0nDescription: TEBEG sets the starting temperature (in K) for an ab\\-initio molecular dynamics run (IBRION\\=0\\) and other routines (e.g. Electron\\-phonon interactions from Monte\\-Carlo sampling).  --- If no initial velocities are supplied on the POSCAR file, the velocities are set randomly according to a Maxwell\\-Boltzmann distribution at the initial temperature TEBEG. Velocities are only used for molecular dynamics (IBRION\\=0\\). **Mind**: If MDALGO\\>0 is used VASP defines the temperature as   T \\=  1  k  B  T 3 (  N  i o n s  \u2212  N  c o n s t r a i n t s  )  \u2211  n  N  i o n s  M  n  \\|  v \u2192  n  \\|  2  . {\\\\displaystyle T\\={\\\\frac {1}{k\\_{B}T3(N\\_{\\\\rm {ions}}\\-N\\_{\\\\rm {constraints}})}}\\\\sum \\\\limits \\_{n}^{N\\_{\\\\rm {ions}}}M\\_{n}\\|{\\\\vec {v}}\\_{n}\\|^{2}.} This temperature ist written to the OUTCAR file. Depending on the type of thermostat this temperature has to be rescaled to obtain the real simulation temperature.  * Nose\\-Hoover thermostat: In this thermostat the number of degrees of freedom including constraines are already acounted for in the potential energy term. In this this method the center of mass is conserved. This lowers the degrees of freedom by one which is also taken into account in the OUTCAR file.  * Andersen thermostat: Same as for Nose\\-Hoover thermostat. * Langevin thermostat: As for the Nose\\-Hoover thermostat and Andersen thermostat in this thermostat the number of degrees of freedom including constraines are already acounted for. The center of mass is not conserved in this method, hence this method has 3 degrees of freedom more than the Nose\\-Hoover thermostat and Andersen thermostat."}
{"file_name": "CMBJ.md", "content": "CMBJ= \\[real (array)]   Default: **CMBJ** \\= calculated self\\-consistentlynDescription: defines the   c {\\\\displaystyle c}  parameter in the MBJ potential.  --- The CMBJ tag can be set in the following ways: * Specify a constant that is used at every point of space   r {\\\\displaystyle \\\\mathbf {r} }  ```CMBJ = c ``` * Specify one entry per atomic type ```CMBJ = c_1 c_2 .. c_n ``` where the order and number   n {\\\\displaystyle n}  is in accordance with atomic types in your POSCAR file. The MBJ exchange potential at a point   r {\\\\displaystyle \\\\mathbf {r} }  will then be calculated using the parameter   c  i {\\\\displaystyle c\\_{i}}  belonging to the atomic species of the atomic site nearest to   r {\\\\displaystyle \\\\mathbf {r} }  . If CMBJ is not set,   c {\\\\displaystyle c}  is calculated at each electronic step as the average of   \\|  \u2207 n  \\|  /  n {\\\\displaystyle \\\\left\\\\vert \\\abla n\\\\right\\\\vert /n}  in the unit cell, as explained in the description of the METAGGA tag."}
{"file_name": "IGPAR.md", "content": "IGPAR= 1 \\| 2 \\| 3nDescription: This tag specifies the socalled parallel or   G  \u2225 {\\\\displaystyle {\\\\mathbf {G}}\\_{\\\\parallel }}  direction in the integration over the reciprocal space unit cell needed for LCALCPOL.  ---"}
{"file_name": "AGGAC.md", "content": "AGGAC= \\[real]n| Default: **AGGAC** | \\= 1\\.0 | if LHFCALC    \\=   {\\\\displaystyle \\=}  .FALSE. or AEXX    \u2260   {\\\\displaystyle \\\eq }  1\\.0 || --- | --- | --- ||  | \\= 0\\.0 | if LHFCALC    \\=   {\\\\displaystyle \\=}  .TRUE. and AEXX    \\=   {\\\\displaystyle \\=}  1\\.0 | Description: AGGAC is a parameter that multiplies the gradient correction in the GGA correlation functional.  --- AGGAC can be used as the fraction of gradient correction in the GGA correlation in a Hartree\\-Fock/DFT hybrid functional.  | **Mind:*** AGGAC is implemented for all functionals listed at GGA except AM05\\. * AGGAC is implemented for the functionals from Libxc (see LIBXC1 for details). || --- |"}
{"file_name": "CLNT.md", "content": "CLNT= \\[integer]nDescription: CLNT selects for which species the core levels are calculated using the tag ICORELEVEL.  --- This option is only used if ICORELEVEL\\=2 is set."}
{"file_name": "Band_decomposed_charge_densities.md", "content": "The partial (band\\-decomposed) charge density can be used to analyze the contributions of different orbitals or energy ranges to a specific region in real space. It helps in gaining insight and visualizing electronic, magnetic, or transport properties, and is especially important when simulating scanning tunneling microscopy (STM) images.In VASP, the calculation of partial charges is a quick post\\-processing step that is selected by setting LPARD \\= .TRUE. in the INCAR file. It is necessary to provide a WAVECAR from a converged ground state calculation as an input file. To select the contributing **k** points and bands, various options exist, which can be selected via the NBMOD, IBAND, EINT, and KPUSE tags. | **Mind:** All charge densities, including the band\\-decomposed charge densities, are symmetrized using both the space and point group symmetries. However, when calculating partial charge from selected **k** points, this can lead to wrong results due to wrong **k** point weights. In that case, the symmetry must be turned off during the initial ground state calculation from which the WAVECAR is generated, as well as during the subsequent band\\-decomposed charge density calculation. || --- | | **Warning:** Band\\-decopmposed partial charge density postprocessing is not supported for noncollinear magnetic calculations (LNONCOLLINEAR \\= .TRUE.). || --- | Input tags for selecting and writing the partial charges-------------------------------------------------------- The following list briefly explains the various INCAR tags that control the behavior of the band\\-decomposed charge density decomposition. Please refer to the documentation of each tag for further details. * LPARD: Toggles the partial charge postprocessing on or off. If only this tag is set, the valence charge density is computed for all occupied bands and written to the CHGCAR file (without the augmentation occupancies usually written to that file).* IBAND: An integer array specifying the bands to include in the partial charge density. If IBAND is specified, NBMOD is automatically set to the number of selected bands.* EINT: Specifies an energy interval. Any energy bands with eigenvalues within this range will contribute to the calculation of the partial charge density. If the value of the NBMOD tag is set to \\-3, the energy values are interpreted as relative to the Fermi energy   \u03f5  f {\\\\displaystyle \\\\epsilon \\_{f}} . If the NBMOD tag is not set or is set to \\-2, the provided energy values will be considered as absolute total energies.* NBMOD: This tag controls the mode of selecting bands that should contribute to the calculation of partial charges.\t+ NBMOD \\= n: Use n bands (set automatically if IBAND is used).\t+ NBMOD \\= 0: Use all bands (occupied and empty).\t+ NBMOD \\= \\-1: Use all occupied bands (and write to CHGCAR instead of PARCHG).\t+ NBMOD \\= \\-2: To choose the bands that contribute, you can utilize an energy interval defined by the tag EINT.\t+ NBMOD \\= \\-3: Use an energy interval relative to the Fermi energy      \u03f5  f    \t{\\\\displaystyle \\\\epsilon \\_{f}} \t to select contributing bands (defined by EINT).* KPUSE: Specifies which **k** points are used in the evaluation of the partial DOS.* LSEPB: Specifies whether to write the partial charge density for selected bands to individual files or merge them.* LSEPK: Specifies whether to write the partial charge density for selected **k** points to individual files or merge them. Output files------------ The partial valence charge density is written in the PARCHG file. If you want to separate the output by **k** points or bands, setting LSEPB and/or LSEPK allows you to write it to multiple PARCHG.\\*.\\* files. | **Mind:** For spin\\-polarized calculations, the PARCHG and its variants hold the total density and the magnetization density. For instance, if the 4th band is selected (IBAND \\= 4\\) the first data set in the PARCHG file corresponds to the summed density of the 4th spin up and 4th spin down orbital, whereas the second data set holds the difference between the 4th spin\\-up and 4th spin\\-down orbital (magnetization density). Hence, to obtain the charge density corresponding to a specific orbital of a specific spin channel some post\\-processing of the PARCHG file might be required (building differences or sums). A simple workaround is to use EINT and specify sufficient digits to select only one orbital from either the spin\\-up or spin\\-down channel. || --- | Step\\-by\\-step instructions--------------------------- In this example, we will produce a partial charge density useful for STM picture simulation. Note that the bias voltage and tip distance from an experiment do not always translate one\\-to\\-one to the simulation. **Step 1**: Ensure that the ground state calculation has a well\\-converged charge density (low rms(c) in the standard output or the OSZICAR).The **k** point mesh should be well converged to get good results for STM simulations. **Step 2**: Copy POSCAR, KPOINTS, POSCAR, and WAVECAR to a new directory. **Step 3**: Prepare an appropriate INCAR file in the new directory, making sure you specify the same settings for energy cutoff, symmetry, and spin as in the groundstate calculation. This could be a possible INCAR:  ```SYSTEM = STM simulationENCUT = 520ISPIN = 2LPARD = .TRUE.NBMOD = -3EINT = -1.5 0.25LSEPB = .FALSE.LSEPK = .FALSE.  ``` LPARD \\= .TRUE. activates the partial charge mode and assures that the WAVECAR file is read. ENCUT and ISPIN settings are copied over from the ground state calculation. NBMOD \\= \\-3 and EINT \\= \\-1\\.5 0\\.25 ensure that the bands from   \u03f5  f  \u22121\\.5 {\\\\displaystyle \\\\epsilon \\_{f}\\-1\\.5}  to  \u03f5  f  \\+0\\.25 {\\\\displaystyle \\\\epsilon \\_{f}\\+0\\.25}  eV are included (corresponding to a negative bias voltage of about 1\\.5 Volt). The two remaining tags, LSEPB and LSEPK are set to their default values (.FALSE.) and are there for clarity only. We want to sum up the contributions of all bands in the energy range at all **k** points without separating any of this information. **Step 4**: Run VASP. No electronic (or ionic) minimization is performed, so the calculation is rapid and does not even require parallelization. **Step 5 (optional)**: Load the resulting PARCHG file with your favorite visualization program to view constant\\-height images by looking at slices through the data or constant current images by using isosurfaces."}
{"file_name": "LSCSGRAD.md", "content": "LSCSGRAD= .TRUE. \\| .FALSE.   Default: **LSCSGRAD** \\= .TRUE.nDescription: LSCSGRAD\u00a0 decides whether to compute gradients in the calculation of the MBD dispersion energy or the SCS contribution.  ---"}
{"file_name": "LIBMBD_K_GRID_SHIFT.md", "content": "LIBMBD\\_K\\_GRID\\_SHIFT= \\[real]   Default: **LIBMBD\\_K\\_GRID\\_SHIFT** \\= 0\\.5 (default in libMBD)nDescription: LIBMBD\\_K\\_GRID\\_SHIFT sets the shift for the k\\-mesh of the collective oscillations defined in the methods available in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_K\\_GRID\\_SHIFT allows to choose a shift for the k\\-mesh of the collective oscillations defined in the methods available in the library libMBD of many\\-body dispersion methods. The value is internally passed to the libMBD input **k\\_grid\\_shift** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "Constrained\u2013random-phase\u2013approximation_formalism.md", "content": "The constrained random\\-phase approximation (CRPA) is a method that allows to calculate the effective interaction parameter U, J and J' for model Hamiltonians. The main idea is to neglect screening effects of specific **target states** in the screened Coulomb interaction W of the GW method. The resulting partially screened Coulomb interaction is usually evaluated in a localized basis that spans the target space and is described by the model Hamiltonian. Usually, the target space is low\\-dimensional (up to 5 states) and therefore allows for the application of a higher level theory, such as dynamical mean field theory (DMFT).   Model Hamiltonians------------------ A model Hamiltonian describes a small subset of electrons around the chemical potential and has, in second quantization, following form  H \\=  \u2211  \u03c3  \u2211  \\< i j \\>  t  i j  \u03c3  c  i \u03c3  \u2020  c  j \u03c3  \\+  \u2211  \u03c3  \u03c3 \u2032  \u2211  \\< i j k l \\>  U  i j k l  \u03c3  \u03c3 \u2032  c  i \u03c3  \u2020  c  k  \u03c3 \u2032  \u2020  c  j \u03c3  c  l  \u03c3 \u2032 {\\\\displaystyle H\\=\\\\sum \\_{\\\\sigma }\\\\sum \\_{\\<ij\\>}t\\_{ij}^{\\\\sigma }c\\_{i\\\\sigma }^{\\\\dagger }c\\_{j\\\\sigma }\\+\\\\sum \\_{\\\\sigma \\\\sigma '}\\\\sum \\_{\\<ijkl\\>}U\\_{ijkl}^{\\\\sigma \\\\sigma '}c\\_{i\\\\sigma }^{\\\\dagger }c\\_{k\\\\sigma '}^{\\\\dagger }c\\_{j\\\\sigma }c\\_{l\\\\sigma '}} Here,   i , j , k , l {\\\\displaystyle i,j,k,l}  are site and   \u03c3 ,  \u03c3 \u2032 {\\\\displaystyle \\\\sigma ,\\\\sigma '}  spin indices, respectively and the symbol   \\< \u22ef \\> {\\\\displaystyle \\<\\\\cdots \\>}  indicates summation over nearest neighbors. The hopping matrix elements   t  i j  \u03c3 {\\\\displaystyle t\\_{ij}^{\\\\sigma }}  describe the hopping of electrons (of same spin) between site   i {\\\\displaystyle i}  and  j {\\\\displaystyle j} , while the effective Coulomb matrix elements   U  i j k l  \u03c3  \u03c3 \u2032 {\\\\displaystyle U\\_{ijkl}^{\\\\sigma \\\\sigma '}}  describe the interaction of electrons between sites.  ### Wannier basis and target space To use model Hamiltonians successfully a localized basis set is chosen. In most applications this basis set consists of Wannier states that are connected with the Bloch functions   \u03c8  n  k  \u03c3  (  r  ) \\=  e  i  k r  u  n  k  (  r  ) {\\\\displaystyle \\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }({\\\\bf {r}})\\=e^{i{\\\\bf {kr}}}u\\_{n{\\\\bf {k}}}({r})}  of band   n {\\\\displaystyle n}  at k\\-point   k {\\\\displaystyle k}  with spin   \u03c3 {\\\\displaystyle \\\\sigma }  via  \\|  w  i  R  \u03c3  \u27e9 \\=  1  N  k  \u2211  n  k  e  \u2212 i  k R  T  i n  \u03c3 (  k  )  \\|  \u03c8  n  k  \u03c3  \u27e9 {\\\\displaystyle \\|w\\_{i{\\\\bf {R}}}^{\\\\sigma }\\\\rangle \\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{n{\\\\bf {k}}}e^{\\-i{\\\\bf {kR}}}T\\_{in}^{\\\\sigma ({\\\\bf {k}})}\\|\\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } Usually, the basis set is localized such that the interaction between periodic images can be neglected. This allows to work with the Wannier functions in the unit cell at   R \\= 0 {\\\\displaystyle {\\\\bf {R\\=0}}}  :  \\|  w  i  \u03c3  \u27e9 \\=  1  N  k  \u2211  n  k  T  i n  \u03c3 (  k  )  \\|  \u03c8  n  k  \u03c3  \u27e9 {\\\\displaystyle \\|w\\_{i}^{\\\\sigma }\\\\rangle \\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{n{\\\\bf {k}}}T\\_{in}^{\\\\sigma ({\\\\bf {k}})}\\|\\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } | **Mind:** Here, T instead of the widely used U notation for the transformation matrix is used to avoid confusion with the Hubbard parameter. || --- | In practice, one builds a model Hamiltonian only for a small subset of Bloch functions. These **target states** are typically centered around the chemical potential (or Fermi energy) and are strongly localized around ions. The model Hamiltonian can be solved successfully only if the target states are well represented by the Wannier basis. As a measure of the Wannier representation, one usually compares the original band structure with the Wannier interpolated one.  In the following example (SrVO3\\), the target space consists of three Bloch bands (red bands) that may be represented well by three Wannier states: [](File_SrVO3_t2g_bands.html) The complete target space is spanned by a certain number of Bloch bands. These bands can be selected with the NCRPA\\_BANDS tag.  More often, however, one has delocalized states that mix with the target space of the model. Without including these additional states in the Wannier basis, a good representation of the band structure is not possible. Below is an example (face\\-centered\\-cubic Ni), where the delocalized s\\-band (blue) crosses the five target d\\-states (red): [](File_Ni_d_s_bands.html) This system requires at least six Wannier states to represent the electronic structure of five target states well. The selection of target states in the Wannier basis is done with the NTARGET\\_STATES.  If a modification of the band structure is acceptable within an energy window, these five target states might be **disentangled** from the remaining ones, and one arrives at the following picture: [](File_Ni_d_bands_decoupled.html) Here the original Bloch bands (gray lines) are projected to five non\\-crossing Wannier states. In the following   T {\\\\displaystyle {\\\\cal {T}}}  denotes the **target space**, that is, the states described by the model Hamiltonian. ### Parameter definitions | **Mind:** The calculation of the hopping matrix     t   {\\\\displaystyle t}  t depends on the theory that is used to solve the effective model. || --- | For instance, in DFT\\+DMFT (often termed LDA\\+DMFT) one calculates the hopping matrix from Kohn\\-Sham energies, while in GW\\+DMFT GW quasi\\-particle energies are used.  If  \u03f5  n  k  \u03c3 {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}^{\\\\sigma }}  denotes these one\\-electron energies and   \u03bc  \u03c3 {\\\\displaystyle \\\\mu ^{\\\\sigma }}  is the corresponding Fermi energy, the hopping matrix elements are calculated with following formula  t  i j  \u03c3  \\=  1  N  k  \u2211  n  k  T  i n  \u2217 \u03c3 (  k  )  (  \u03f5  n  k  \u03c3  \u2212  \u03bc  \u03c3  )  T  j n  \u03c3 (  k  ) {\\\\displaystyle t\\_{ij}^{\\\\sigma }\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{n{\\\\bf {k}}}T\\_{in}^{\\*\\\\sigma ({\\\\bf {k}})}(\\\\epsilon \\_{n{\\\\bf {k}}}^{\\\\sigma }\\-\\\\mu ^{\\\\sigma })T\\_{jn}^{\\\\sigma ({\\\\bf {k}})}} Similarly, Coulomb matrix elements are evaluated from the Bloch representation of the effective Coulomb kernel   U  G G  \u2032  (  q  ) {\\\\displaystyle U\\_{{\\\\bf {GG}}'}({\\\\bf {q}})}  via  U  i j k l  \u03c3  \u03c3 \u2032  \\=  1  N  k  3  \u2211  k k q  \u2211  n  1  n  2  n  3  n  4  T  i  n  1  \u2217 (  k  )  T  j  n  2  (  k \u2212 q  )  \u27e8  u  n  1  k  \\|  e  \u2212 i (  q \\+ G  ) \u22c5  r  \\|  u  n  2  k \u2212 q  \u27e9  U  G G  \u2032  (  q  ) \u27e8  u  n  3  k \u2032  \u2212 q  \\|  e  i (  q \u2212  G \u2032  ) \u22c5  r \u2032  \\|  u  n  4  k \u2032  \u27e9  T  k  n  3  \u2217 (  k \u2032  \u2212 q  )  T  l  n  4  (  k \u2032  ) {\\\\displaystyle U\\_{ijkl}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N\\_{k}^{3}}}\\\\sum \\_{\\\\bf {kkq}}\\\\sum \\_{n\\_{1}n\\_{2}n\\_{3}n\\_{4}}T\\_{in\\_{1}}^{\\*({\\\\bf {k}})}T\\_{jn\\_{2}}^{({\\\\bf {k\\-q}})}\\\\langle u\\_{n\\_{1}{\\\\bf {k}}}\\|e^{\\-i({\\\\bf {q\\+G}})\\\\cdot {\\\\bf {r}}}\\|u\\_{n\\_{2}{\\\\bf {k\\-q}}}\\\\rangle U\\_{{\\\\bf {GG}}'}({\\\\bf {q}})\\\\langle u\\_{n\\_{3}{\\\\bf {k'\\-q}}}\\|e^{i({\\\\bf {q\\-G'}})\\\\cdot {\\\\bf {r'}}}\\|u\\_{n\\_{4}{\\\\bf {k'}}}\\\\rangle T\\_{kn\\_{3}}^{\\*({\\\\bf {k'\\-q}})}T\\_{ln\\_{4}}^{({\\\\bf {k'}})}} | **Mind:** The effective Coulomb kernel is frequency dependent and thus the effective interaction in the model as well. || --- | In most applications, however, one considers the static limit   U \\= U ( \u03c9 \u2192 0 ) {\\\\displaystyle U\\=U(\\\\omega \\\\to 0\\)}  . In practice one often, simplifies the model Hamiltonian further and works with the Hubbard\\-Kanamori parameters:[\\[1]](#cite_note-vaugier:prb:86-1)  U  \u03c3  \u03c3 \u2032  \\=  1 N  \u2211  i \u2208  T  U  i i i i  \u03c3  \u03c3 \u2032 {\\\\displaystyle {\\\\cal {U}}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N}}\\\\sum \\_{i\\\\in {\\\\cal {T}}}U\\_{iiii}^{\\\\sigma \\\\sigma '}}  U \u2032  \u03c3  \u03c3 \u2032  \\=  1  N ( N \u2212 1 )  \u2211  i , j \u2208  T  , i \u2260 j  N  U  i j j i  \u03c3  \u03c3 \u2032 {\\\\displaystyle {\\\\cal {U'}}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N(N\\-1\\)}}\\\\sum \\_{i,j\\\\in {\\\\cal {T}},i\\\eq j}^{N}U\\_{ijji}^{\\\\sigma \\\\sigma '}}  J  \u03c3  \u03c3 \u2032  \\=  1  N ( N \u2212 1 )  \u2211  i , j \u2208  T  , i \u2260 j  N  U  i j i j  \u03c3  \u03c3 \u2032 {\\\\displaystyle {\\\\cal {J}}^{\\\\sigma \\\\sigma '}\\={\\\\frac {1}{N(N\\-1\\)}}\\\\sum \\_{i,j\\\\in {\\\\cal {T}},i\\\eq j}^{N}U\\_{ijij}^{\\\\sigma \\\\sigma '}} Here   N {\\\\displaystyle N}  specifies the number of Wannier functions in the target space   T {\\\\displaystyle {\\\\cal {T}}}  . Effective Coulomb kernel in constrained random\\-phase approximation------------------------------------------------------------------- In analogy to the screened Coulomb kernel in GW, the effective coulomb kernel is calculated as   U  G  G  \u2032  \u03c3  \u03c3 \u2032  (  q  , i \u03c9 ) \\=  \\[  \u03b4  G  G  \u2032  \u2212 (  \u03c7  G  G  \u2032  \u03c3  \u03c3 \u2032  (  q  , i \u03c9 ) \u2212  \u03c7 \\~  G  G  \u2032  \u03c3  \u03c3 \u2032  (  q  , i \u03c9 ) ) \u22c5  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle U\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{\\\\sigma \\\\sigma '}({\\\\bf {q}},i\\\\omega )\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-(\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}^{\\\\sigma \\\\sigma '}({\\\\bf {q}},i\\\\omega )\\-{\\\\tilde {\\\\chi }}\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{\\\\sigma \\\\sigma '}({\\\\bf {q}},i\\\\omega ))\\\\cdot V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})} In contrast to the GW method, however, the polarizability contains all RPA screening effects except those from the target space. These effects are described by   \u03c7 \\~ {\\\\displaystyle {\\\\tilde {\\\\chi }}} . In the following four methods are presented for the calculation of   \u03c7 \\~ {\\\\displaystyle {\\\\tilde {\\\\chi }}}  . | **Mind:** All methods below reduce to the **band method** if the target space forms an isolated set of bands. || --- |   | **Tip:** Select cRPA methods with ALGO \\= CRPA. || --- | ### Band method The simplest way to define the target polarizability is to use the expression of Adler and Wiser[\\[2]](#cite_note-adler:1962-2)[\\[3]](#cite_note-wiser:1963-3)[\\[4]](#cite_note-aryasetiawan:prb70-4)  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  k  \u2211  n  n \u2032  \u2208  T  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  \u27e8  u  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  n  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{\\\\bf {k}}\\\\sum \\_{nn'\\\\in {\\\\cal {T}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\langle u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } This approach is most accurate for an isolated target space   T {\\\\displaystyle {\\\\cal {T}}}  as depicted in the first example above.  | **Mind:** Target bands can be selected with NCRPA\\_BANDS. || --- | | **Warning:** This method is not suited for systems with entangled target states. || --- | ### Disentanglement method Miyake, Aryasetiawan, and Imada[\\[5]](#cite_note-miyake:prb:80-5) propose to disentangle the target space from the full space by diagonalizing the Hamiltonian in both spaces independently. This yields a band disentangled band structures similar to the one shown in the third example above. The corresponding target polarizability reduces to a constrained Alder and Wiser expression[\\[2]](#cite_note-adler:1962-2)[\\[3]](#cite_note-wiser:1963-3)  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  k  \u2211  n  n \u2032  \u2208  T  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5 \\~  n  k  \u2212  \u03f5 \\~  n \u2032  k \u2212 q  \u2212 i \u03c9  \u27e8  u \\~  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u \\~  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u \\~  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u \\~  n  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{\\\\bf {k}}\\\\sum \\_{nn'\\\\in {\\\\cal {T}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{{\\\\tilde {\\\\epsilon }}\\_{n{\\\\bf {k}}}\\-{\\\\tilde {\\\\epsilon }}\\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\langle {\\\\tilde {u}}\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|{\\\\tilde {u}}\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle {\\\\tilde {u}}\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|{\\\\tilde {u}}\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle }  ,where   \u03f5 \\~  n  k  \u03c3 {\\\\displaystyle {\\\\tilde {\\\\epsilon }}\\_{n{\\\\bf {k}}}^{\\\\sigma }}  is the disentangled band structure. The resulting Hubbard\\-Kanamori interactions depend on the chosen energy window of the Wannier functions. | **Mind:** Typically, this method yields the largest Hubbard\\-Kanamori interactions and is selected with LDISENTANGLED tag. || --- | ### Weighted method Sasioglu, Friedrich and Bl\u00fcgel propose an alternative approach.[\\[6]](#cite_note-sasioglu:prb:83-6) They calculate the screening effects within the target space as follows:  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \u2248  1  N  k  \u2211  n  n \u2032  k  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  p  n  k  \u03c3  p  n \u2032  k \u2212 p  \u03c3 \u2032  \u27e8  u  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  n \u2032  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\\\approx {\\\\frac {1}{N\\_{k}}}\\\\sum \\_{nn'{\\\\bf {k}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}p\\_{n{\\\\bf {k}}}^{\\\\sigma }p\\_{n'{\\\\bf {k\\-p}}}^{\\\\sigma '}\\\\langle u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{n'{\\\\bf {k}}}^{\\\\sigma }\\\\rangle } Here the weighting factors  p  n  k  \u03c3  \\=  \u2211  i \u2208  T  \\|  T  i n  \u03c3 (  k  )  \\|  2  ,  0 \u2264  p  n  k  \u03c3  \u2264 1 {\\\\displaystyle p\\_{n{\\\\bf {k}}}^{\\\\sigma }\\=\\\\sum \\_{i\\\\in {\\\\cal {T}}}\\|T\\_{in}^{\\\\sigma ({\\\\bf {k}})}\\|^{2},\\\\quad 0\\\\leq p\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\leq 1} measure the probability for   \\|  \u03c8  n  k  \u03c3  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle }  being in the target space. This method does not alter the band structure, however, neglects screening effects within the target space as shown in next section. Typically, the weighted cRPA method yields the smallest Hubbard\\-Kanamori interactions. | **Mind:** This method is selected with the LWEIGHTED tag. || --- | ### Projector method A consistent expression for the target polarizability gives rise to the projector\\-cRPA method. The main goal is to subdivide the target from the full Fock space in a Wannier basis. To this end, we work with the target projectors  P  m n  \u03c3 (  k  )  \\=  \u2211  i \u2208  T  T  i m  \u2217 \u03c3 (  k  )  T  i n  \u03c3 (  k  ) {\\\\displaystyle P\\_{mn}^{\\\\sigma ({\\\\bf {k}})}\\=\\\\sum \\_{i\\\\in {\\\\cal {T}}}T\\_{im}^{\\*\\\\sigma ({\\\\bf {k}})}T\\_{in}^{\\\\sigma ({\\\\bf {k}})}} that filter out target space contributions to each Bloch state. Using these projectors,the target polarizability for the projector method reads[\\[7]](#cite_note-kaltak:thesis2015-7)  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  n  n \u2032  k  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  \u00d7  \u2211  m  1  m  2  \u2032  P  m  1  n  \u2217 \u03c3 (  k  )  \u27e8  u  m  1  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  m  2  \u2032  k \u2212 q  \u03c3 \u2032  \u27e9  P  m  2  \u2032  n \u2032  \u03c3 \u2032  (  k \u2212 q  )  \u00d7  \u2211  m  1  \u2032  m  2  P  m  2  n \u2032  \u2217  \u03c3 \u2032  (  k \u2212 q  )  \u27e8  u  m  2  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  m  1  \u2032  k  \u03c3  \u27e9  P  m  1  \u2032  n  \u03c3 (  k  ) {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{nn'{\\\\bf {k}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\times \\\\sum \\_{m\\_{1}m\\_{2}'}P\\_{m\\_{1}n}^{\\*\\\\sigma ({\\\\bf {k}})}\\\\langle u\\_{m\\_{1}{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{m\\_{2}'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle P\\_{m\\_{2}'n'}^{\\\\sigma '({\\\\bf {k\\-q}})}\\\\times \\\\sum \\_{m\\_{1}'m\\_{2}}P\\_{m\\_{2}n'}^{\\*\\\\sigma '({\\\\bf {k\\-q}})}\\\\langle u\\_{m\\_{2}{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{m\\_{1}'{\\\\bf {k}}}^{\\\\sigma }\\\\rangle P\\_{m\\_{1}'n}^{\\\\sigma ({\\\\bf {k}})}} The projector method usually results in larger (smaller) Hubbard\\-Kanamori interactions than the weighted (disentanglement) method. | **Mind:** The projector method is the default cRPA method. || --- | Caveats------- The cRPA method is usually applied to systems with a zero\\-band gap (metallic system) and, thus, suffers from slow k\\-point convergence. Most reliably, the usage of k\\-p perturbation theory should be avoided. That is, LOPTICS\\=.FALSE. should be set in the preceding DFT step and/or the WAVEDER should be deleted before the cRPA step. | **Tip:** If NCRPA\\_BANDS is set in the INCAR and includes all partially occupied bands, one can use WAVEDER in cRPA calculations to accelerate k\\-point convergence. || --- |"}
{"file_name": "WEIMIN.md", "content": "WEIMIN= \\[real]n| Default: **WEIMIN** | \\= 0\\.001 | for IBRION\u22650 || --- | --- | --- ||  | \\= 0 | for IBRION\\=\u22121 | Description: WEIMIN specifies the maximum weight for a band to be considered empty.  --- The tags WEIMIN, EBREAK, and DEPER allow fine\\-tuning of the iterative matrix diagonalization and are best not changed. They are optimized for a large variety of systems, and changing one of the parameters usually decreases performance or can even screw up the iterative matrix diagonalization totally.In general, these tags control when the optimization of a single band is stopped within the iterative matrix diagonalization schemes: Within all implemented iterative schemes a distinction between empty and occupied bands is made to speed up calculations. Unoccupied bands are optimized only twice, whereas occupied bands are optimized up to four times till another break criterion is met. Eigenvalue/eigenvector pairs for which the partial occupancies are smaller than WEIMIN are treated as unoccupied states (and are thus only optimized twice)."}
{"file_name": "O_atom_spinpolarized.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Performing a spin polarized calculation for a single oxygen atom in a cubic box to get the correct magnetic moment of the atom. Input----- ### POSCAR  ```O atom in a box 1.0         \u00a0! universal scaling parameters 8.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 8.0 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)1            \u00a0! number of atomscart         \u00a0! positions in cartesian coordinates 0 0 0  ``` ### INCAR  ```SYSTEM = O atom in a boxISMEAR = 0 \u00a0! Gaussian smearingISPIN =  2 \u00a0! spin polarized calculation  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- * The O atom is an open shell system with 2 unpaired electrons. * Starting from the previous chapter add ISPIN\\=2 to the INCAR file remove the WAVECAR file and restart VASP. * The following example output is obtained (stdout):  ```running on    8 total coresdistrk:  each k-point on    8 cores,    1 groupsdistr:  one band on    1 cores,    8 groupsusing from now: INCAR     vasp.5.4.1 05Feb16 (build Aug 22 2016 16:46:23) complex                        POSCAR found\u00a0:  1 types and       1 ionsscaLAPACK will be usedLDA part: xc-table for Pade appr. of PerdewPOSCAR, INCAR and KPOINTS ok, starting setupWARNING: small aliasing (wrap around) errors must be expectedFFT: planning ...WAVECAR not readentering main loopN       E                     dE             d eps       ncg     rms          rms(c)DAV:   1     0.389725012498E+02    0.38973E+02   -0.10098E+03    32   0.259E+02DAV:   2     0.317912429240E+01   -0.35793E+02   -0.35786E+02    64   0.438E+01DAV:   3    -0.119085682530E+01   -0.43700E+01   -0.36686E+01    32   0.328E+01DAV:   4    -0.126198272139E+01   -0.71126E-01   -0.69189E-01    32   0.508E+00DAV:   5    -0.126284205021E+01   -0.85933E-03   -0.85925E-03    48   0.504E-01    0.653E+00DAV:   6     0.164008071667E+00    0.14269E+01   -0.32208E+00    32   0.894E+00    0.151E+00...    ...      ...                 DAV:  13    -0.167302579657E+01   -0.25698E-03   -0.13177E-05    32   0.203E-02    0.956E-03DAV:  14    -0.167302926747E+01   -0.34709E-05   -0.34771E-06    32   0.116E-021 F= -.16730293E+01 E0= -.15958981E+01  d E =-.154262E+00  mag=     1.9999writing wavefunctionsE-fermi\u00a0: -7.1152 XC(G=0): -0.7730 alpha+bet\u00a0: -0.1463  ``` * Eigenstates for spin up and spin down are calculated \"separately\". In LSDA they interact only via the effective local potential spin\\-up and spin\\-down potential. * In the OUTCAR file one can see two spin components:  ```spin component 1 k-point     1\u00a0:       0.0000    0.0000    0.0000 band No.  band energies     occupation     1     -25.0878      1.00000     2     -10.0830      1.00000     3     -10.0830      1.00000     4     -10.0830      1.00000     5      -0.4932      0.00000     6       1.8213      0.00000     7       1.8303      0.00000     8       1.8303      0.00000  ```  ```spin component 2 k-point     1\u00a0:       0.0000    0.0000    0.0000 band No.  band energies     occupation     1     -21.8396      1.00000     2      -7.0543      0.33333     3      -7.0543      0.33333     4      -7.0543      0.33333     5      -0.3594      0.00000     6       1.9830      0.00000     7       1.9830      0.00000     8       1.9830      0.00000  ``` The spin component 1 has two more electrons corresponding to a magnetization of   2  \u03bc  B {\\\\displaystyle 2\\\\mu \\_{B}}  . Download-------- Oatomspin.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "Transition_State_Search_of_Ammonia.md", "content": "Task---- In this example you will determine the transition state in the flipping of NH3 by means of the Nudged\\-Elastic\\-Band (NEB) Method and the Improved Dimer Method. Download--------  Ammonia Flipping: A guide to this example.  ammonia\\_flipping.tgz Back to the main page."}
{"file_name": "ML_MRB1.md", "content": "ML\\_MRB1= \\[integer]   Default: **ML\\_MRB1** \\= 12nDescription: This tag sets the number   N  R  0 {\\\\displaystyle N\\_{\\\\text{R}}^{0}}  of radial basis functions used to expand the radial descriptor   \u03c1  i  ( 2 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}(r)}  within the machine learning force field method.  --- The radial descriptor is constructed from  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u222b  \u03c1  i  (  r  r  ^  )  d  r  ^  , where  \u03c1  i  (  r  )  \\=  \u2211  j \\= 1  N  a  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{4\\\\pi }}\\\\int \\\\rho \\_{i}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)d{\\\\hat {\\\\mathbf {r} }},\\\\quad {\\\\text{where}}\\\\quad \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\=1}^{N\\_{\\\\mathrm {a} }}f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  and  g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is an approximation of the delta function. In practice, the continuous function above is transformed into a discrete set of numbers by expanding it into a set of radial basis functions   \u03c7  n 0  ( r ) {\\\\displaystyle \\\\chi \\_{n0}(r)}  (see this section for more details):  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u2211  n \\= 1  N  R  0  c  n 00  i  \u03c7  n 0  ( r )  . {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{\\\\sqrt {4\\\\pi }}}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{0}}c\\_{n00}^{i}\\\\chi \\_{n0}\\\\left(r\\\\right).} The tag ML\\_MRB1 sets the number   N  R  0 {\\\\displaystyle N\\_{\\\\text{R}}^{0}}  of radial basis functions to use in this expansion."}
{"file_name": "OMEGATL.md", "content": "OMEGATL= \\[real]   Default: **OMEGATL** \\= 10   \u00d7 {\\\\displaystyle \\\\times }  outermost node in dielectric function   \u03f5 ( \u03c9 ) {\\\\displaystyle \\\\epsilon (\\\\omega )}   Description: OMEGATL specifies the maximum frequency for the coarse part of the frequency grid.   --- For the frequency grid along the real and imaginary axis sophisticated schemes are used, which are based on simple model functions for the macroscopic dielectric function. The grid spacing is dense up to roughly 1\\.3\\*OMEGAMAX and becomes coarser for larger frequencies. The default has been carefully tested, and it is recommended to leave it unmodified whenever possible."}
{"file_name": "PREC.md", "content": "PREC= Normal \\| Single \\| SingleN \\| Accurate \\| Low \\| Medium \\| Highn| Default: **PREC** | \\= Medium | for VASP.4\\.X || --- | --- | --- ||  | \\= Normal | since VASP.5\\.X | Description: PREC specifies the \"precision\" mode.  --- PREC sets default values for the energy cutoff ENCUT, the FFT grids (NGX,NGY,NGZ) and (NGXF,NGYF,NGZF), and the accuracy of the projectors in real space ROPT (used only when LREAL\\=.TRUE.). Details are given below in the table. We recommend using PREC\\=Normal or PREC\\=Accurate. PREC\\=Normal can be used for most routine calculations. PREC\\=Accurate leads to a denser grid (NGX,NGY,NGZ). Thus, it reduces egg\\-box effects and strictly avoids any aliasing/wrap\\-around errors. PREC\\=Normal and PREC\\=Accurate use an augmentation fine grid (NGXF,NGYF,NGZF) that is twice larger than the grid (NGX,NGY,NGZ) used for the representation of the pseudo\\-orbitals. PREC\\=Accurate increases the memory requirements somewhat, but it should be used (in combination with an increased value for ENCUT) when a very good accuracy is required, e.g., for accurate forces, for phonons and stress tensor or in general when second derivatives are computed. The accuracy of forces can also be sometimes further improved by specifying ADDGRID\\=.TRUE., however, reports from users are somewhat contradictory about whether this really helps. | **Mind:*** The value of a parameter set by PREC (e.g., ENCUT) can be overridden by specifying explicitly the value of that parameter in the INCAR file. * PREC\\=Normal and PREC\\=Accurate are only available in VASP.4\\.5 and newer versions. The setting PREC\\=Single is only available as of VASP.5\\.1, and has been updated in VASP.6\\. || --- | | **Deprecated:** The old settings PREC\\=Medium and PREC\\=High are no longer recommended and are available (as well as PREC\\=Low) only for backward compatibility. Essentially, PREC\\=High only increases the energy cutoff by 30\u00a0%, which can also be achieved by just manually increasing ENCUT. || --- | | **Important:*** Setting PREC\\=Accurate does not necessarily mean that the results are converged. The convergence of the results with respect to the energy cutoff ENCUT has to be checked separately. * We strongly recommend specifying the energy cutoff ENCUT always manually in the INCAR file to ensure the same accuracy between calculations. Otherwise, the default ENCUT may differ among the different calculations (e.g., for the calculation of the cohesive energy), with the consequence that the total energies, for instance, can not be compared. * Setting ENAUG has an effect only if PREC is set to one of the deprecated settings (Low, Medium or High); otherwise, it is ignored. || --- | Default values set by PREC-------------------------- Default values set by PREC for the parameters ENCUT, (NGX,NGY,NGZ), (NGXF,NGYF,NGZF) and ROPT: | PREC | ENCUT | NGX,Y,Z | NGXF,YF,ZF | ROPT (LREAL\\=A) | ROPT (LREAL\\=O) || --- | --- | --- | --- | --- | --- || Normal | max(ENMAX) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGX | \\-5\u00d710\\-4 | 1\\.0 || Single (VASP.5\\) | max(ENMAX) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGX | \\-5\u00d710\\-4 | 1\\.0 || Single (VASP.6\\) | max(ENMAX) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGX | \\-5\u00d710\\-4 | 1\\.0 || SingleN (VASP.6\\) | max(ENMAX) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGX | \\-5\u00d710\\-4 | 1\\.0 || Accurate | max(ENMAX) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGX | \\-2\\.5\u00d710\\-4 | 1\\.0 || **Deprecated settings:** | | | | | || Low | max(ENMIN) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} | \\-1\u00d710\\-2 | 2/3 || Medium | max(ENMAX) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 4\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} | \\-2\u00d710\\-3 | 1\\.0 || High | 1\\.3\u00d7max(ENMAX) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 16/3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} | \\-4\u00d710\\-4 | 1\\.5 | where max(ENMAX) and max(ENMIN) are the maxima of ENMAX and ENMIN found in the POTCAR file, and   G  c u t {\\\\displaystyle G\\_{\\\\rm {cut}}}  and  G  a u g {\\\\displaystyle G\\_{\\\\rm {aug}}}  are defined by  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2  E  a u g  \\=  \u210f  2  2  m  e  G  a u g  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}\\\\qquad E\\_{\\\\rm {aug}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {aug}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT and   E  a u g {\\\\displaystyle E\\_{\\\\rm {aug}}} \\=ENAUG. Further remarks--------------- * With PREC\\=Normal, Single, and Accurate the grid (NGXF,NGYF,NGZF) representing the augmentation charges, charge densities and potentials has either the same size (PREC\\=Single) or the double size (PREC\\=Normal or Accurate) as the grid (NGX,NGY,NGZ). With the deprecated (and no longer recommended) settings for PREC (Low, Medium and High), the grid (NGXF,NGYF,NGZF) is determined by some heuristic formula from ENAUG. * PREC\\=Single uses the same grid (NGX,NGY,NGZ) as PREC\\=Normal in VASP.5, but the same grid as PREC\\=Accurate in VASP.6\\. However, the double grid technique is not used, i.e., (NGXF,NGYF,NGZF)\\=(NGX,NGY,NGZ). This is convenient if one needs to cut down on storage demands or if one wants to reduce the size of the files CHG and CHGCAR. Furthermore, PREC\\=Single avoids high\\-frequency oscillations caused by the double\\-grid technique and the resulting Fourier interpolation. It is often expedient for scanning tunneling simulations or other calculations where high\\-frequency wiggles of the charge density in the vacuum region are undesirable. * PREC\\=Medium and PREC\\=Normal should usually be sufficiently accurate and lead to errors of less than 1 meV/atom. * PREC\\=High should guarantee that the absolute energies are converged to a few meV and the stress tensor converged within a few kBar."}
{"file_name": "Howto.md", "content": "All Howto's will show up here.  --- Pages in category \"Howto\"------------------------- The following 52 pages are in this category, out of 52 total. ### A * ACFDT/RPA calculations* Andersen thermostat### B * Band\\-decomposed charge densities* Best practices for machine\\-learned force fields* Bethe\\-Salpeter\\-equations calculations* Blue\\-moon ensemble* Born effective charges### C * Calculation of atoms* Calculation of dimers* Choosing pseudopotentials* Computing the phonon dispersion and DOS* Computing the work function* Constrained molecular dynamics* Constructing Wannier orbitals### D * DFT\\-D4* Dipole corrections for defects in solids### E * Electron\\-phonon interactions from Monte\\-Carlo sampling* Electrostatic corrections* Energy vs volume Volume relaxations and Pulay stress### H * Band\\-structure calculation using hybrid functionals* Band\\-structure calculation using meta\\-GGA functionals### I * Improved dimer method* Intrinsic\\-reaction\\-coordinate calculations### L * Langevin thermostat* LBERRY* LCALCEPS* List of hybrid functionals### M * Machine learning force field calculations: Basics* MDALGO* Memory requirements* Minimal reproducible example* Molecular dynamics calculations* MP2 calculations### N * Nonlocal vdW\\-DF functionals* Nose\\-Hoover thermostat* Not enough memory* Nudged elastic bands### O * Optimizing the parallelization### P * PAW control tags* Phonons from density\\-functional\\-perturbation theory* Phonons from finite differences* Practical considerations for transition state finding calculations* Practical guide to GW calculations* Preparing a POTCAR* Preparing a Super Cell* Pulay stress### S * SCH calculations* Slow\\-growth approach* Spin spirals### T * Time\\-dependent density\\-functional theory calculations* Troubleshooting electronic convergence### V * Volume relaxation"}
{"file_name": "NFREE.md", "content": "NFREE= \\[integer]n| Default: **NFREE** | \\= 1 | if IBRION\\=2 || --- | --- | --- ||  | \\= 0 | else | Description: depending on IBRION, NFREE specifies the number of remembered steps in the history of ionic convergence runs, or the number of ionic displacements in frozen phonon calculations.  --- * IBRION\\=1 (quasi\\-Newton algorithm for ionic relaxation): (i) If NFREE is set, only up to NFREE ionic steps are kept in the iteration history (the rank of the approximate Hessian matrix is not larger than NFREE).(ii) If NFREE is **not** specified, the criterion whether information is removed from the iteration history is based on the eigenvalue spectrum of the inverse Hessian matrix: if one eigenvalue of the inverse Hessian matrix is larger than 8, information from previous steps is discarded. For complex problems NFREE can usually be set to a rather large value (i.e. 10\\-20\\), however systems of low dimensionality require a careful setting of NFREE (or preferably an exact counting of the number of degrees of freedom). To increase NFREE beyond 20 rarely improves convergence. If NFREE is set to too large, the RMM\\-DIIS algorithm might diverge. * IBRION\\=5 (from VASP.4\\.5\\) or IBRION\\=6 (from VASP.5\\.1\\): frozen phonon approach to calculate the zone\\-center vibrational frequencies of a system. NFREE determines how many displacements are used for each direction and ion. The step size has to be given in INCAR, by the tag POTIM. Displacements should be small enough to ensure that the harmonic approximation is safely fulfilled. If too large values are supplied in the input file, it is defaulted to 0\\.015 \u00c5 up from VASP.5\\.1 (but *not* in all earlier releases). Expertise shows that this is a very reasonable compromise.NFREE \\= 2 uses central difference, *i.e* each ion is displaced in each direction by a small positive and negative displacement  \u00b1 {\\\\displaystyle \\\\pm }  POTIM \\*   x ^ {\\\\displaystyle {\\\\hat {x}}}  ,  \u00b1 {\\\\displaystyle \\\\pm }  POTIM \\*   y ^ {\\\\displaystyle {\\\\hat {y}}}  ,  \u00b1 {\\\\displaystyle \\\\pm }  POTIM \\*   z ^ {\\\\displaystyle {\\\\hat {z}}}  ,For NFREE \\= 4, four displacements are used  \u00b1 {\\\\displaystyle \\\\pm }  POTIM \\*   x ^ {\\\\displaystyle {\\\\hat {x}}}  and  \u00b1 {\\\\displaystyle \\\\pm }  2 \\* POTIM \\*   x ^ {\\\\displaystyle {\\\\hat {x}}}  ,  \u00b1 {\\\\displaystyle \\\\pm }  POTIM \\*   y ^ {\\\\displaystyle {\\\\hat {y}}}  and  \u00b1 {\\\\displaystyle \\\\pm }  2 \\* POTIM \\*   x ^ {\\\\displaystyle {\\\\hat {x}}}  ,  \u00b1 {\\\\displaystyle \\\\pm }  POTIM \\*   z ^ {\\\\displaystyle {\\\\hat {z}}}  and  \u00b1 {\\\\displaystyle \\\\pm }  2 \\* POTIM \\*   x ^ {\\\\displaystyle {\\\\hat {x}}}  ,For NFREE\\=1, only a single displacement is applied (it is strongly recommend to avoid NFREE\\=1\\)."}
{"file_name": "ML_LMLFF.md", "content": "ML\\_LMLFF= \\[logical]   Default: **ML\\_LMLFF** \\= .FALSE.nDescription: Main control tag which enables/disables the use of machine learning force fields. | **Mind:** Machine learning force fields is available in VASP as of version 6\\.3\\.0 || --- |  --- If ML\\_LMLFF \\= .FALSE. machine learning force fields are disabled and all related INCAR tags, i.e. all tags starting with \"**ML\\_**\", are ignored. If machine learning force fields are used by setting ML\\_LMLFF \\= .TRUE., the VASP mode of operation depends on the choice of ML\\_MODE. If ML\\_MODE is not supplied in the INCAR file then the default mode of operation is to run an MD simulation with on\\-the\\-fly machine learning, i.e., ML\\_MODE. This training is started \"from scratch\" if no ML\\_AB file is provided, otherwise a continuation run is performed."}
{"file_name": "RANDOM_SEED.md", "content": "RANDOM\\_SEED= \\[integer]\\[integer]\\[integer]   Default: **RANDOM\\_SEED** \\= based on the system clocknDescription: RANDOM\\_SEED specifies the seed of the random\\-number generator (compile VASP with \\-Dtbdyn).   --- The random\\-number generator (RNG) generates a sequence of random numbers, which is initialized by the tag RANDOM\\_SEED.For example, in molecular dynamics simulations, the RNG can be used to initialize atomic velocities. Hence, the seed for the RNG influences the trajectory of a molecular dynamics simulation.The three integers of RANDOM\\_SEED must fulfill these conditions:  ```0 <= RANDOM_SEED(1) < 9000000000 <= RANDOM_SEED(2) < 10000000 <= RANDOM_SEED(3)  ``` A typical input for the RANDOM\\_SEED looks like this:  ```RANDOM_SEED =         248489752                0                0  ``` The initial value of RANDOM\\_SEED and the value after each MD step are written to the REPORT file. | **Tip:** If multiple molecular dynamics runs with different random seeds result in inconsistent time averages, then not enough configurations were sampled. Hence, longer or more trajectories are required to get converged ensemble averages. || --- | | **Mind:** If no RANDOM\\_SEED is set in the INCAR then the used value will depend on the system time. For example, in molecular dynamics simulations, initial velocities will be different each time VASP is executed (if TEBEG is used and no velocities are provided in the POSCAR file). Hence, the trajectories will diverge. If reproducibility is desired the RANDOM\\_SEED has to be set manually. || --- |"}
{"file_name": "LVHAR.md", "content": "LVHAR= \\[logical]   Default: **LVHAR** \\= .FALSE.nDescription: Determines whether the local potential   V ionic  (  r  ) \\+  V hartree  (  r  ) {\\\\displaystyle V\\_{\\\\text{ionic}}(\\\\mathbf {r} )\\+V\\_{\\\\text{hartree}}(\\\\mathbf {r} )}  (in eV) is written to the LOCPOT file.  ---  V ionic  (  r  ) \\+  V hartree  (  r  ) \\=  V ionic  (  r  ) \\+ \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  r \u2032 {\\\\displaystyle V\\_{\\\\text{ionic}}(\\\\mathbf {r} )\\+V\\_{\\\\text{hartree}}(\\\\mathbf {r} )\\=V\\_{\\\\text{ionic}}(\\\\mathbf {r} )\\+\\\\int {\\\\frac {n(\\\\mathbf {r'} )}{\\|\\\\mathbf {r} \\-\\\\mathbf {r'} \\|}}d\\\\mathbf {r'} } where   V ionic  (  r  ) {\\\\displaystyle V\\_{\\\\text{ionic}}(\\\\mathbf {r} )}  is the ionic potential as mimicked by the pseudopotentials and   V hartree  (  r  ) {\\\\displaystyle V\\_{\\\\text{hartree}}(\\\\mathbf {r} )}  is the Hartree potential. The local potential is written to the LOCPOT file and hence to the same file as the local potential for LVTOT\\=T. Carefully check that the LOCPOT file contains the potential you expect.WRT\\_POTENTIAL also gives access to the ionic and Hartree potentials and offers more options. | **Warning:** Setting LVHAR\\=True will set LVTOT\\=False. || --- | See LOCPOT to find out how to write   V ionic  (  r  ) \\+  V hartree  (  r  ) {\\\\displaystyle V\\_{\\\\text{ionic}}(\\\\mathbf {r} )\\+V\\_{\\\\text{hartree}}(\\\\mathbf {r} )}  in VASP \\< 5\\.2\\.12\\."}
{"file_name": "Constrained_MD_using_a_canonical_ensemble.md", "content": "**Description**:Compare adsoption of H2O on TiO2\\[110] using a simple model structure: the model surface consists of 2 layers TiO2, (1x1\\) * The bottom layer of the slab will be kept frozen* 2 setups will be tested:\t+ Standard relaxation, minimizing the Hellmann\\-Feyman forces\t+ Constrained MD, fixing the bond lengths and angle of H2O, the system is coupled to an ANDERSEN thermostat:\t\t- Microcanonical NVE ensemble (no collisions with the thermostat)\t\t- Canonical ensembe at T\\= 10K, to be close to the standard relaxation (0K) To keep the computing time reasonable, the number of steps in the MD is limited to 100 (100 fs) which implies that the MD is NOT CONVERGED. * INCAR for standard relaxation  ```SYSTEM = H2O_TiO2ENMAX = 400ISMEAR =  2SIGMA = 0.05EDIFF = 1e-6EDIFFG = -0.05IBRION = 2POTIM = 0.5NSW = 200  ```   * INCAR for constrained MD using a microcanonical ensemble  ```SYSTEM = H2O_TiO2ENMAX = 400ISMEAR = 2SIGMA = 0.05ISMEAR = 0EDIFF = 1e-6EDIFFG = -0.05IBRION = 0POTIM = 1.MDALGO = 1    # Andersen ThermostatTEBEG = 10; TEEND = 10NSW = 100      ``` * ICONST for constrained MD using a microcanonical ensemble  ```R 7 8 0R 7 9 0A 8 7 9 0  ```   * INCAR for constrained MD using a canonical ensemble  ```SYSTEM = H2O_TiO2ENMAX = 400ISMEAR = 2SIGMA = 0.05ISMEAR = 0EDIFF = 1e-6EDIFFG = -0.05IBRION = 0POTIM = 1.MDALGO = 1    # Andersen ThermostatANDERSEN_PROB = 0.9TEBEG = 10; TEEND = 10NSW = 100  ``` * ICONST for constrained MD using a canonical ensemble  ```R 7 8 0R 7 9 0A 8 7 9 0  ```   * POSCAR  ```TiO2+H2O                                       1.00000000000000          4.61949   0.00000    0.00000     0.00000   4.61949    0.00000     0.00000   0.00000   14.7788   Ti   O  H     2     5     2SelectiveDirect  0.00000  0.00000  0.00000    F F F  0.50000  0.50000  0.10000    T T T  0.30374  0.30374  0.00000    F F F  0.69625  0.69625  0.00000    F F F  0.19625  0.80374  0.10000    T T T  0.80374  0.19625  0.10000    T T T  0.50000  0.50000  0.31500    T T T  0.37720  0.62280  0.35881    T T T  0.62280  0.37720  0.35881    T T T  ```   * KPOINTS  ```Automatically generated mesh 0Gamma 5 5 1  ``` Download-------- h2o\\_on\\_tio2\\.tgz, sub\\-folder constrMD\\_canonical  --- To the list of examples\") or to the main page"}
{"file_name": "Many-body_dispersion_energy.md", "content": "The many\\-body dispersion energy method (MBD@rsSCS) of Tkatchenko et al.[\\[1]](#cite_note-tkatchenko:prl:12-1)[\\[2]](#cite_note-ambrosetti:jcp:14-2) is based on the random\\-phase expression for the correlation energy  E  c  \\=  \u222b  0  \u221e  d \u03c9  2 \u03c0  T r  {  l n  ( 1 \u2212 v  \u03c7  0  ( i \u03c9 ) ) \\+ v  \u03c7  0  ( i \u03c9 )  } {\\\\displaystyle E\\_{c}\\=\\\\int \\_{0}^{\\\\infty }{\\\\frac {d\\\\omega }{2\\\\pi }}\\\\mathrm {Tr} \\\\left\\\\{\\\\mathrm {ln} (1\\-v\\\\chi \\_{0}(i\\\\omega ))\\+v\\\\chi \\_{0}(i\\\\omega )\\\\right\\\\}} whereby the response function   \u03c7  0 {\\\\displaystyle \\\\chi \\_{0}}  is approximated by a sum of atomic contributions represented by quantum harmonic oscillators. The expression for the dispersion energy used in the VASP k\\-space implementation of the MBD@rsSCS method (see reference [\\[3]](#cite_note-bucko:jpcm:16-3) for details) is as follows:  \\= \u2212  \u222b  F B Z  d  k  v  F B Z  \u222b  0  \u221e  d \u03c9  2 \u03c0  T r  {  l n  (  1  \u2212  A  L R  ( 0 )  ( \u03c9 )  T  L R  (  k  )  )  } {\\\\displaystyle E\\_{\\\\mathrm {disp} }\\=\\-\\\\int \\_{\\\\mathrm {FBZ} }{\\\\frac {d{\\\\mathbf {k} }}{v\\_{\\\\mathrm {FBZ} }}}\\\\int \\_{0}^{\\\\infty }{\\\\frac {d\\\\omega }{2\\\\pi }}\\\\,{\\\\mathrm {Tr} }\\\\left\\\\{\\\\mathrm {ln} \\\\left({\\\\mathbf {1} }\\-{\\\\mathbf {A} }\\_{LR}^{(0\\)}(\\\\omega ){\\\\mathbf {T} }\\_{LR}({\\\\mathbf {k} })\\\\right)\\\\right\\\\}} where   A  L R {\\\\displaystyle {\\\\mathbf {A} }\\_{LR}}  is the frequency\\-dependent polarizability matrix and   T  L R {\\\\displaystyle \\\\mathbf {T} \\_{LR}}  is the long\\-range interaction tensor, which describes the interaction of the screened polarizabilitiesembedded in the system in a given geometrical arrangement. The components of   A  L R {\\\\displaystyle \\\\mathbf {A} \\_{LR}}  are obtained using an atoms\\-in\\-molecule approach as employed in the pairwise Tkatchenko\\-Scheffler method (see"}
{"file_name": "Pulay_stress.md", "content": "Pulay stress is unphysical stress resulting from unconverged calculations with respect to the basis set. It distorts the cell structure, decreasing it from the equilibrium volume and creating difficulties in volume relaxation. The resultant energy vs. volume curves, cf. Figure 1 (top), are jagged and special care must be taken to obtain reasonable structures, cf. Volume relaxation. In this article, the computational origin of this is discussed.  [](File_Pressure_energy_volume.html) Figure 1\\. Total energy (left y\\-axis) and absolute pressure (right y\\-axis) vs. lattice parameter. Equilibrium lattice parameters for energy and pressure are shown. These coincide when Pulay stress is eliminated. ENCUT \\= 250 eV (top \\- unconverged) and 540 eV (bottom \\- converged). Diamond in a primitive cell \\- 2x2x2 k\\-point mesh. It is important to note that problems due to the Pulay stress can often be neglected if only volume\\-conserving relaxations are performed. This is because the Pulay stress is, usually, nearly uniform and only changes the diagonal elements of the stress tensor by a constant amount. Introduction============ The energy for a periodic system, e.g. band structures, is calculated using a finite number of plane waves and a finite number of k\\-points. A fixed number of plane waves or plane wave energy cutoff may be used to set a constant basis.[\\[1]](#cite_note-gomesdacosta:nielsen:kunc:1986-1) In VASP, a constant energy cutoff is used, cf. ENCUT. The number of plane waves ***N****PW* (Note: the number of plane waves in VASP can be found using by searching for *NPLWV* in the OUTCAR file) is related to the energy cutoff ***E****cutoff* and the size of the cell **\u03a9**0:  N  P W  \u221d   \u03a9  0    E  c u t o f f  3  /  2 {\\\\displaystyle N\\_{PW}\\\\propto \\\\ \\\\Omega \\_{0}\\\\ E\\_{cutoff}^{3/2}} ***N****PW* is constant in a relaxation calculation, which means that ***E****cutoff* must change to compensate for changes in **\u03a9**0. All the initial G\\-vectors within a sphere are included in the basis. However, when comparing cells of different sizes, i.e. during a relaxation, the cell shape is relaxed, so the direct and reciprocal lattice vectors change. The number of reciprocal G\\-vectors in the basis is kept fixed but the length of the G\\-vectors changes, indirectly changing the energy cutoff. In other words, the shape of the cutoff region changes from a sphere to an ellipsoid. This can be solved by using an infinite number of k\\-points and plane waves. In practice, a large enough plane wave energy cutoff and number of k\\-points leads to converged energies.[\\[2]](#cite_note-payne:francis:1990-2) All energy changes are strictly consistent with the stress tensor; however, when the basis set is too small, i.e. prematurely truncated, this results in discontinuities in the total energy between cells of varying volumes. These discontinuities between energy and volume create stress that decreases the equilibrium volume (cf. Fig. 1 (top)), due to the diagonal components of the stress tensor being incorrect. This is called the *Pulay stress*.  The pressure of the cell, being proportional to the trace of the stress tensor, can be used to visualize this. When the cell volume is below the equilibrium volume, the pressure is positive; contrastingly, it is negative when above the equilibrium volume, so at equilibrium, this is zero. Plotting the magnitude of the pressure vs. volume curve and the total energy allows comparison between these two minima. In Figure 1 it is clear that the the absolute pressure\\-volume and energy\\-volume minima coincide for a converged basis, while the pressure equilibrium is much lower than the energy equilibrium for the unconverged basis. This is the effect of the Pulay stress. Further explanation=================== As mentioned previously, ***N****PW* is constant in a relaxation calculation, which means that ***E****cutoff* must change to compensate for changes in **\u03a9**0. This is illustrated in Fig. 2\\. The initial G\\-vectors within a sphere are included within the basis.  When the cell volume increases (**V**1 \\< **V**1), the number of G\\-vectors in reciprocal space remains constant, but their length increases (cf. Fig. 2 (top)). This effectively results in a change of basis, leading to (***E****cutoff, 1* \\> ***E****cutoff, 2*). This basis remains constant for the duration of the relaxation. However, if the calculation is then restarted, the basis is reset. This means that the number of G\\-vectors is greater for the larger, real\\-space cell. One effect of this is that there are more real\\-space grid points. However, the corresponding reciprocal space decreases.  Contrastingly, see Fig. 2 (bottom), when the volume decreases on relaxation (**V**1 \\> **V**1), the length of the G\\-vectors decreases. The effective ***E****cutoff* should increase but this does not improve the situation, as it creates an artificial pressure. The reciprocal space grid points are effectively sparser. If the calculation restarts, the basis is reset, so the number of G\\-vectors decreases for the smaller real space cell.  [](File_Pulay_stress_grids-2.html) Figure 2\\. Cell shape and lattice positions are kept constant, while the volume **V** is free to change (ISIF \\= 7\\). The initial volume **V**1 changes to the final volume **V**2. Two cases are given, one for volume increasing on relaxation (top) and one for it decreasing (bottom). The change in real space is given on the left, while the change in reciprocal space and the subsequent effect on the G\\-vectors is given on the right. Blue is the initial basis, while red is the new, restarted basis. The relation between ***E****cutoff*, ***N****PW*, and G\\-vectors is given for the initial and final volumes. Alternatively, the shape of the cell could change. As the shape changes, the G\\-vectors continue to be directed along the lattice coordinates, meaning that some shorten while others lengthen, see Fig. 3\\. This results in a shift from a spherical basis, where all G\\-vectors are of equal length, to one where some are stretched and others compressed, i.e. an ellipsoid. This changes the effective ***E****cutoff* along each lattice parameter. On resetting the calculation, the cutoff is once again spherical. This draws an analogy to the symmetry breaking of the Bravais lattice seen for gradient\\-corrected functionals (cf. GGA\\_COMPAT), where the spherical symmetry of the G\\-vectors is broken for non\\-cubic cells. [](File_Shape_pulay_grids.html) Figure 3\\. Cell volume and lattice positions are kept constant, while the shape is free to change (ISIF \\= 5\\). The shape changes from cubic to hexagonal. The blue spherical basis changes to the red ellipsoid basis, along the direction of the sheer. On restarting, a spherical basis returns."}
{"file_name": "CONTCAR.md", "content": "The CONTCAR file contains information about the structure, e.g., the ionic positions. It has a format that is compatible with the POSCAR file. The file is written after each ionic step and at the end of a completed calculation. It can thus be copied to the POSCAR file to restart a calculation.  Molecular dynamics------------------ For molecular\\-dynamics (MD) runs (IBRION\\=0\\), the CONTCAR file contains the MD trajectories. In particular, the structure parameters, velocities, and predictor\\-corrector coordinates are needed as input to restart an MD simulation.  * 1st block: Lattice parameters and ionic positions.* 2nd block: Initial velocities for atoms.* 3rd block: Predictor\\-corrector coordinates. | **Mind:** Whether the ionic positions are rebased into the unit cell depends on the choice for the MDALGO tag for historical reasons. || --- | | **Warning:** To continue an MD calculation from a CONTCAR file but with a different ensemble (e.g. switching from NVT ensemble to NpT ensemble) the predictor\\-corrector coordinates must be removed; otherwise the calculations will crash. If no velocities are copied to the POSCAR file then random velocities are drawn from a Maxwell\\-Boltzmann distribution at the selected temperature TEBEG. || --- | Structure relaxation-------------------- For structure relaxation, the CONTCAR file contains the positions of the last ionic step of the relaxation. If the relaxation run has not yet converged one should copy CONTCAR to POSCAR before continuing. For static calculations, the CONTCAR file contains the same information as the POSCAR file."}
{"file_name": "LMODELHF.md", "content": "LMODELHF= .TRUE. \\| .FALSE.   Default: **LMODELHF** \\= .FALSE.nDescription: LMODELHF selects dielectric\\-dependent hybrid functionals with full exchange in the short\\-range, and AEXX in the long\\-range.  --- LMODELHF\\=.TRUE. selects the range separated hybrid functional suggested in Ref. [\\[1]](#cite_note-chen2018nonempirical-1)and Ref. [\\[2]](#cite_note-cui2018doubly-2) under the name dielectric\\-dependent hybrid functionals (DDH) and doubly screened hybrid (DSH) functionals, respectively. These two hybrid functionals are both based on a common model for the dielectric function, but differ in the way how the range\\-separation parameters are obtained from first principles calculations. Their connection and performance have been discussed for instance in Ref. [\\[3]](#cite_note-liu2019assessing-3). In principle,they can be considered to be a smartly constructed approximation to COH\\-SEX (local Coulomb hole plus screened exchange),albeit fulfilling many important constraints that the exact exchange correlation functional must observe. The corresponding functional has been available in VASP since VASP.5\\.2 released in 2009 (before the two publications), although the gradient contribution had been erroneously implemented in all VASP.5 releases and is only correct in VASP.6\\. The related bug fix has been made available by the authors of Ref. [\\[2]](#cite_note-cui2018doubly-2). The nonlocal exchange part of the functional has also been used and documented in Ref. [\\[4]](#cite_note-bokdam:scr:2016-4) and is covered in Improving the dielectric function. Typically the user will need to set the following tags in the INCAR file:  ```LHFCALC = .TRUE.LMODELHF = .TRUE.HFSCREEN = 1.26AEXX = 0.1  ``` In this case, AEXX specifies the amount of exact exchange in the long range, that is for short wave vectors (  G  \u2192 0 {\\\\displaystyle \\\\mathbf {G} \\\\to 0} ). In the short range, that is for large wave vectors, always the full nonlocal exchange is used. The HFSCREEN determines how quickly the nonlocal exchange changes from AEXX to 1\\.  | **Mind:** If LMODELHF\\=.TRUE., then LHFCALC\\=.TRUE. is automatically set. || --- | Specifically, in VASP, the Coulomb kernel   4 \u03c0  e  2  /  (  q  \\+  G  )  2 {\\\\displaystyle 4\\\\pi e^{2}/(\\\\mathbf {q} \\+\\\\mathbf {G} )^{2}}  in the exact exchange is multiplied by a model for the dielectric function   \u03f5  \u2212 1  (  q  \\+  G  ) {\\\\displaystyle \\\\epsilon ^{\\-1}(\\\\mathbf {q} \\+\\\\mathbf {G} )}  :  \u03f5  \u2212 1  (  q  \\+  G  ) \\= 1 \u2212 ( 1 \u2212  \u03b5  \u221e  \u2212 1  )  exp  ( \u2212  \\|  q \\+ G  \\|  2  4  \u03bc  2  ) {\\\\displaystyle \\\\epsilon ^{\\-1}(\\\\mathbf {q} \\+\\\\mathbf {G} )\\=1\\-(1\\-{{\\\\varepsilon }\\_{\\\\infty }^{\\-1}}){\\\\text{exp}}(\\-{\\\\frac {\\|\\\\mathbf {q\\+G} \\|^{2}}{4{\\\\mu }^{2}}})}  .where   \u03bc {\\\\displaystyle \\\\mu }  corresponds to HFSCREEN, and   \u03b5  \u221e  \u2212 1 {\\\\displaystyle {{\\\\varepsilon }\\_{\\\\infty }^{\\-1}}}  is specified by AEXX. In real space this correspond to a Coulomb kernel   V ( r ) \\= ( 1 \u2212 ( 1 \u2212  \u03b5  \u221e  \u2212 1  )  erf  (  \u03bc  r ) )  e  2  r {\\\\displaystyle V(r)\\=(1\\-(1\\-{{\\\\varepsilon }\\_{\\\\infty }^{\\-1}}){\\\\text{erf}}({\\\\mu }r)){\\\\frac {e^{2}}{r}}}  .  The remaining part of the exchange is handled by an appropriate semi\\-local exchange correlation functional. For further detail we refer to the literature listed below. Typical values for HFSCREEN are listed in the table below  ```AlP  1.24AlAs 1.18AlSb 1.13BN   1.7CdO  1.34CdS  1.19CdSe 1.18CdTe 1.07C    1.70GaN  1.39GaP  1.24GaAs 1.18GaSb 1.12Ge   1.18InP  1.14InAs 1.09InSb 1.05LiF  1.47MgO  1.39SiC  1.47Si   1.26ZnO  1.34ZnS  1.27ZnSe 1.20ZnTe 1.12  ``` These values have been obtained from fits of the dielectric function using the Nanoquanta kernel and partially self\\-consistent GW calculations as used in Ref. [\\[5]](#cite_note-grueneis2014ionization-5). The values can be also estimated from simple dimensional scaling relations of the valence electron density. Furthermore band gap predictions are not very sensitive to the choice of HFSCREEN."}
{"file_name": "AMGGAX.md", "content": "AMGGAX= \\[real]n| Default: **AMGGAX** | \\= 1\\.0\\-AEXX | if LHFCALC\\=.TRUE. || --- | --- | --- ||  | \\= 1\\.0 | if LHFCALC\\=.FALSE. | Description: AMGGAX is a parameter that multiplies the meta\\-GGA exchange functional (available as of VASP.6\\.4\\.0\\).  --- AMGGAX can be used as the fraction of meta\\-GGA exchange in a Hartree\\-Fock/DFT hybrid functional (possible since VASP.6\\.4\\.0\\). | **Important:** AMGGAX can be used only if LHFCALC\\=.TRUE. || --- | | **Mind:*** Note the difference with respect to AGGAX: AMGGAX multiplies the whole meta\\-GGA exchange functional, while AGGAX multiplies only the gradient\\-correction term of a GGA exchange functional. * AMGGAX is implemented for the functionals from Libxc (see LIBXC1 for details). || --- |"}
{"file_name": "ANTIRES.md", "content": "ANTIRES= 0 \\| 1 \\| 2   Default: **ANTIRES** \\= 0nDescription: ANTIRES determines whether the Tamm\\-Dancoff approximation is used or not.   --- * ANTIRES\\=0 Tamm\\-Dancoff approximation (TDA)* ANTIRES\\=1 yields exact results at \u03c9\\=0 at roughly the same cost as TDA* ANTIRES\\=2 beyond Tamm\\-Dancoff, coupling between positive and negative frequencies VASP uses the procedures outlined in reference [\\[1]](#cite_note-Sander-1) to include contributions beyond TDA. Beyond\\-TDA calculations increase the computational time and memory requirements by typically a factor of 2\\."}
{"file_name": "Energy_vs_volume_Volume_relaxations_and_Pulay_stress.md", "content": "If you are doing energy\\-volume calculations or cell shape and volume relaxations you must understand the Pulay stress and related problems. The Pulay stress arises from the fact that the plane\\-wave basis set is not complete with respect to changes in the volume. Thus, unless absolute convergence with respect to the basis set has been achieved \\- the diagonal components of the stress tensor are incorrect. This error is often called \"Pulay stress\". The error is almost isotropic (i.e. the same for each diagonal component), and for a finite basis set it tends to decrease volume compared to fully converged calculations (or calculations with a constant energy cutoff). The Pulay stress and related problems affect the behavior of VASP and any plane wave code in several ways: First, it evidently affects the stress tensor calculated by VASP, i.e. the diagonal components of the stress tensor are incorrect, unless the energy cutoff is very large (ENMAX\\=1\\.3 \\*default is usually a safe setting to obtain a reliable stress tensor). In addition, it should be noted that all volume/cell shape relaxation algorithms implemented in VASP work with a constant basis set. In that way, all energy changes are strictly consistent with the calculated stress tensor, and this, in turn, results in an underestimation of the equilibrium volume unless a large plane wave cutoff is used. Keeping the basis set constant during relaxations has also some strange effect on the basis set. Initially, all G\\-vectors within a sphere are included in the basis. If the cell shape relaxation starts the direct and reciprocal lattice vectors change. This means that although the number of reciprocal G\\-vectors in the basis is kept fixed, the length of the G\\-vectors changes, changing indirectly the energy cutoff. Or to be more precise, the shape of the cutoff region becomes an ellipsoid. Restarting VASP after a volume relaxation causes VASP to adopt a new \"spherical\" cutoff sphere and thus the energy changes discontinuously. One thing which is important to understand is that problems due to the Pulay stress can often be neglected if only volume conserving relaxations are performed. This is because the Pulay stress is usually almost uniform and it, therefore, changes the diagonal elements of the stress tensor only by a certain constant amount (see below). In addition, many calculations have shown that Pulay stress\\-related problems can also be reduced by performing calculations at different volumes using the same energy cutoff for each calculation (this is what VASP does by default) and fitting the final energies to an equation of state. This of course implies that the number of basis vectors is different at each volume. Calculations with many plane\\-wave codes have shown that such calculations yield reliable results for the lattice constants and the bulk modulus and other elastic properties even at relatively modest energy cutoffs. Constant energy cut\\-off calculations are less prone to errors caused by the basis set incompleteness than constant basis set calculations. But it should be kept in mind that volume changes and cell shape changes must be rather large in order to obtain reliable results from this method because within the limit of very small distortions the energy changes obtained with this method are equivalent to those obtained from the stress tensor and are therefore affected by the Pulay stress. Only volume changes of the order of 5\\-10\u00a0% guarantee that the errors introduced by the basis set incompleteness are averaged out. | **Mind:** There are two newer wiki articles that have been written on this subject: Volume relaxation and Pulay stress || --- | Pulay Stress------------ How to calculate the Pulay stress The Pulay stress shows only a weak dependency on volume and the ionic configuration. It is mainly determined by the composition. The simplest way to estimate the Pulay stress is to relax the structure with a large basis\\-set ( 1\\.3 \u00d7 {\\\\displaystyle 1\\.3\\\\times }  default cutoff is usually sufficient, or PREC\\=*High* in VASP.4\\.4\\). Then re\\-run VASP for the final relaxed positions and cell parameters with the default cutoff or the desired cutoff. Look for the line 'external pressure' in the OUTCAR file:  ``` external pressure =    -100.29567 kB  ``` The corresponding (negative) pressure gives a good estimation of the Pulay stress. Accurate bulk relaxations with internal parameters (one)-------------------------------------------------------- The general message is: whenever possible avoid volume relaxation at the default energy cutoff. Either increase the basis set by setting ENCUT manually in the INCAR file, or use the method two suggested below. This avoids doing volume relaxations at all. If volume relaxations are the only possible and feasible option please use the following step by step procedure (which minimizes errors to a minimum): * Relax from starting structure (ISMEAR should be 0 or 1\\).* Start a second relaxation from previous CONTCAR file (re\\-relaxation).* As a final step, perform one more energy calculation using the tetrahedron method switched on (i.e. ISMEAR\\=\\-5\\), to obtain highly accurate energies (no relaxation for the final run). Possibly increase the energy cutoff even further. A few things should be remarked here: never used the energy obtained at the end of a relaxation run, if you allow for cell shape relaxations (the final basis set might not correspond to the desired spherical cutoff sphere). Instead, perform one additional static run after completing the relaxation. If the relaxation will yield a structure with reasonably small structural \"errors\", the final error in the energy of step 3 is only of second\\-order (with respect to the structural errors). If you take the energy directly from the relaxation run, errors are usually significantly larger. Another important point is that the most reliable results for the relaxation are obtained if the starting cell parameters are very close to the final cell parameters. If different runs yield different results, then the one run that started from the configuration, which was closest to the relaxed structure, is the most reliable one. We strongly recommend doing any volume (and to a lesser extent cell shape) relaxation with an increased basis set. ENCUT\\= 1\\.3 \u00d7 {\\\\displaystyle 1\\.3\\\\times }  default cutoff is reasonable accurate in most cases. PREC\\=*High* does also increase the energy cutoff by a factor of 1\\.25\\. At an increased cutoff the Pulay\\-stress correction is usually not required. Finally, if the default cutoff is used for the relaxation, the PSTRESS tag should be set in the INCAR file: evaluate the Pulay stress along the guidelines given in the previous section and add an input line to the INCAR file reading (usually a negative number):  ```PSTRESS = Pulay stress  ``` From now on all *STRESS* output of VASP is corrected by simply subtracting PSTRESS. In addition, all volume relaxations will take PSTRESS into account. It should be said again, use PSTRESS only if increasing the cutoff is not a viable option for some reason. Accurate bulk relaxations with internal parameters (two)-------------------------------------------------------- It is possible to avoid volume relaxation in many cases: The method we have used quite often in the past is to relax the structure (cell shape and internal parameters) for a set of fixed volumes (ISIF\\=4\\). The final equilibrium volume and the ground\\-state energy can be obtained by a fit to an equation of state. The reason why this method is better than volume relaxation is that the Pulay stress is almost isotropic, and thus adds only a constant value to the diagonal elements of the stress tensor. Therefore, the relaxation for a fixed volume will yield highly accurate structures. The outline for such a calculation is almost the same as in the previous section. But in this case, one has to do the calculations for a set of fixed volumes. At first sight, this seems to be much more expensive than method number one (outlined in the previous section). But in many cases, the additional costs are only small, because the internal parameters do not change very much from volume to volume. The following steps have to be done in these calculations: * Select one volume and relax from starting structure keeping the volume fixed (ISIF\\=4; ISMEAR\\=0 or 1\\).* Start a second relaxation from the previous CONTCAR file (if the initial cell shape was reasonable this step can be skipped if the cell shape is kept fixed, you never have run VASP twice).* As a final step, perform one more energy calculation with the tetrahedron method switched on (ISMEAR\\=\\-5\\), to get very accurate unambiguous energies (no relaxation for the final run). The method has also other advantages, for instance, the bulk modulus is readily available. We have found in the past that this method can be used safely with the default cutoff.   FAQ: Why is my energy vs. volume plot jagged-------------------------------------------- This is a very common question from people who start to do calculations with plane wave codes. There are two reasons why the energy vs. volume plot looks jagged: * Basis set incompleteness. The basis set is discrete and incomplete, and when the volume changes, additional plane waves are added. That causes small discontinuous changes in the energy.\t+ Solutions:\t\t- Use a larger plane wave cutoff: This is usually the preferred and simplest solution.\t\t- Use more k\\-points\u00a0: this solves the problem, because the criterion for including a plane wave in the basis set is     \\|   G   \\+   k   \\| \\<    G     c u t     \t\t{\\\\displaystyle \\\\vert {\\\\bf {G}}\\+{\\\\bf {k}}\\\\vert \\<{\\\\bf {G}}\\_{\\\\rm {cut}}} \t\t. This means at each k\\-point a different basis set is used, and additional plane waves are added at each k\\-point at different volumes. In turn, the energy vs. volume curve becomes smoother.* A second possible reason for the jagged E(V) curve is the use of PREC\\=Normal. For PREC\\=Accurate the FFT grids are chosen such that   H  \\| \u03d5 \\> {\\\\displaystyle {\\\\bf {H}}\\\\vert \\\\phi \\>}  is exactly evaluated. For PREC\\=Normal the FFT grids are set to 3/4 of the value that is required for an exact evaluation of   H  \\| \u03d5 \\> {\\\\displaystyle {\\\\bf {H}}\\\\vert \\\\phi \\>} . This introduces small errors because when the volume changes the FFT grids change discontinuously. In other words, at each volume a different FFT grid is used, causing the energy to jump discontinuously between different volumes.\t+ Solutions:\t\t- Use PREC\\=Accurate, or increase the plane wave cutoff.\t\t- Set your FFT grids manually, and choose the one that is used per default for the largest volume (obviously a laborious solution).  ---"}
{"file_name": "CRPA_of_SrVO3.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsThe following tutorial describes how to perform CRPA calculations, which is available as of VASP 6\\.  Task---- Calculation of the Coulomb matrix elements   U  i j k l  ( \u03c9 \\= 0 ) {\\\\displaystyle U\\_{ijkl}(\\\\omega \\=0\\)}  in the constrained Random Phase Approximation (CRPA\")) of SrVO3 between the Vanadium t2g states.  --- Performing a CRPA calculation with VASP is a 3\\-step procedure: a DFT groundstate calculation, a calculation to obtain a number of virtual orbitals, and the actual CRPA calculation itself. **N.B.:** This example involves quite a number of individual calculations.The easiest way to run this example is to execute:  ```./doall.sh  ``` In any case, one can consider the doall.sh script to be an overview of the steps described below. DFT groundstate calculation--------------------------- The first step is a conventional DFT (in this case PBE) groundstate calculation. * INCAR (see INCAR.DFT)  ```SYSTEM  = SrVO3    # system nameNBANDS = 36        # small number  of bandsISMEAR = 0         # Gaussian smearingEDIFF = 1E-8       # high precision for groundstate calculationKPAR = 2           # parallelization of k-points in two groups  ``` Copy the aforementioned file to INCAR:  ```cp INCAR.DFT INCAR  ``` The POSCAR file describes the structure of the system: * POSCAR  ```SrVO33.84652  #cubic fit for 6x6x6 k-points +1.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.0000000000 Sr V O 1 1 3Direct +0.0000000000  +0.0000000000  +0.0000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.5000000000  ``` This file remains unchanged in the following. The KPOINTS file describes how the first Brillouin zone is sampled.In the first step we use a uniform k\\-point sampling: * KPOINTS  ```Automatically generated mesh 0Gamma 4 4 4 0 0 0  ``` **Mind**: this is definitely not dense enough for a high\\-quality description of SrVO3, but in the interest of speed we will live with it. Run VASP. If all went well, one should obtain a WAVECAR file containing the PBE wavefunction. Obtain DFT virtual orbitals and long\\-wave limit------------------------------------------------ Use following INCAR file to increase the number of virtual states and to determine the long\\-wave limit of the polarizability (stored in WAVEDER): * INCAR (see INCAR.PBE)  ```SYSTEM = SrVO3     # system nameISMEAR = 0         # Gaussian smearingKPAR = 2           # parallelization of k-points in two groupsALGO = Exact       # exact diagonalizationNELM = 1           # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 96        # need for a lot of bands in GWLOPTICS = .TRUE.   # we need d phi/ d k  for GW calculations for long-wave limit  ``` Restart VASP.At this stage it is a good idea to make a safety copy of the WAVECAR and WAVEDER files since we will repeatedly need them in the calculations that follow:   ```cp WAVECAR WAVECAR.PBEcp WAVEDER WAVEDER.PBE  ``` CRPA Calculation---------------- Calculate the CRPA interaction parameters for the t2g states by using the PBE wavefunction as input  ```cp WAVECAR.PBE WAVECARcp WAVEDER.PBE WAVEDER  ``` And use following input file as * INCAR (see INCAR.CRPA) and run vasp  ```SYSTEM = SrVO3            # system nameISMEAR = 0                # Gaussian smearingNCSHMEM = 1               # switch off shared memory for chiALGO = CRPA               # Switch on CRPANBANDS = 96               # CRPA needs many empty statesPRECFOCK = Fast           # fast mode for FFTsNTARGET_STATES = 1 2 3    # exclude wannier states 1 - 3 in screeningLWRITE_WANPROJ = .TRUE.   # write wannier projection file  ``` | **Warning:** As of version 6\\.2\\.0 run this tutorial successfully by adding following lines to INCAR. For older version copy wannier90\\.win.CRPA to wannier90\\.win and omit following lines in INCAR. || --- |  ```NUM_WANN = 3 WANNIER90_WIN = \"num_bands=   96 # because bands 21, 22, 23 do not cross with other bands# one can exclude all other bands in wannierization# and omit the definition of an energy window like soexclude_bands = 1-20, 24-96  ```  ```begin projections V:dxy;dxz;dyzend projections \"  ``` The CRPA interaction values for   \u03c9 \\= 0 {\\\\displaystyle \\\\omega \\=0}  can be found in the OUTCAR:  ```spin components:  1  1, frequency:    0.0000    0.0000 screened Coulomb repulsion U_iijj between MLWFs:        1         2         3   1    3.3746    2.3385    2.3385   2    2.3385    3.3746    2.3385   3    2.3385    2.3385    3.3746 screened Coulomb repulsion U_ijji between MLWFs:        1         2         3   1    3.3746    0.4429    0.4429   2    0.4429    3.3746    0.4429   3    0.4429    0.4429    3.3746 screened Coulomb repulsion U_ijij between MLWFs:        1         2         3   1    3.3746    0.4429    0.4429   2    0.4429    3.3746    0.4429   3    0.4429    0.4429    3.3746  averaged interaction parameterscreened Hubbard U =    3.3746   -0.0000screened Hubbard u =    2.3385    0.0000screened Hubbard J =    0.4429   -0.0000  ``` **N.B.:** The frequency point   \u03c9 {\\\\displaystyle \\\\omega }  can be set by OMEGAMAX in the INCAR. For instance to evaluate the CRPA interaction matrix at   \u03c9 \\= 10 {\\\\displaystyle \\\\omega \\=10}  eV, add  ``` OMEGAMAX = 10  ``` to the INCAR and restart VASP. In contrast, adding following two lines to the INCAR  ``` OMEGAMAX = 10  NOMEGAR = 0   ``` tells VASP to calculate the interaction on the imaginary frequency axis at   \u03c9 \\= i 10 {\\\\displaystyle \\\\omega \\=i10} . This can be used to evaluate   U {\\\\displaystyle U}  at a specific Matsubara frequency point.  In addition, the bare Coulomb interaction matrix is calculated for a high VCUTOFF and low energy cutoff ENCUTGW and written in that order to the OUTCAR file. Look for the lines similar to:  ```spin components:  1  1 bare Coulomb repulsion V_iijj between MLWFs:        1         2         3   1   16.3485   15.0984   15.0984   2   15.0984   16.3485   15.0984   3   15.0984   15.0984   16.3485 bare Coulomb repulsion V_ijji between MLWFs:        1         2         3   1   16.3485    0.5351    0.5351   2    0.5351   16.3485    0.5351   3    0.5351    0.5351   16.3485 bare Coulomb repulsion V_ijij between MLWFs:        1         2         3   1   16.3485    0.5351    0.5351   2    0.5351   16.3485    0.5351   3    0.5351    0.5351   16.3485 averaged bare interactionbare Hubbard U =   16.3485   -0.0000bare Hubbard u =   15.0984   -0.0000bare Hubbard J =    0.5351    0.0000  ``` ### CRPA calculation with spacetime Algorithm Note that the same frequency grid is used as for ALGO\\=RPA (RPA correlation energy calculation) and can not be changed directly.To calculate the CRPA interaction for a set of automatically chosen imaginary frequency points use once again the PBE wavefunction as input  ```cp WAVECAR.PBE WAVECARcp WAVEDER.PBE WAVEDER  ``` Currently, this step requires the WANPROJ\") file from previous step, no wannier90\\.win file is necessary.You can also, delete WANPROJ\") and define a wannier projection as in the previous step in the INCAR.  Select the space\\-time CRPA algorithm with following file: * INCAR (see INCAR.CRPAR)  ```SYSTEM = SrVO3             # system nameISMEAR = 0                 # Gaussian smearingNCSHMEM = 1                # switch off shared memory for chiALGO = CRPAR               # Switch on CRPA on imaginary axisNBANDS = 96                # CRPA needs many empty statesPRECFOCK = Fast            # fast mode for FFTsNTARGET_STATES = 1 2 3     # exclude wannier states 1 - 3 in screeningNCRPA_BANDS = 21 22 23     # remove bands 21-23 in screening, currently required for space-time algoNOMEGA = 12                # use 12 imaginary frequency pointsNTAUPAR = 4                # distribute 12 time points into 4 groups  ``` Run VASP and make a copy of the output file  ```cp OUTCAR OUTCAR.CRPAR  ``` After a successful run, the interaction values are written to the OUTCAR file. Here is the result for the first frequency point:  ```spin components:  1  1, frequency:    0.0000    0.2248 screened Coulomb repulsion U_iijj between MLWFs:        1         2         3   1    3.3798    2.3436    2.3436   2    2.3436    3.3798    2.3436   3    2.3436    2.3436    3.3798 screened Coulomb repulsion U_ijji between MLWFs:        1         2         3   1    3.3798    0.4433    0.4433   2    0.4433    3.3798    0.4433   3    0.4433    0.4433    3.3798 screened Coulomb repulsion U_ijij between MLWFs:        1         2         3   1    3.3798    0.4433    0.4433   2    0.4433    3.3798    0.4433   3    0.4433    0.4433    3.3798 averaged interaction parameterscreened Hubbard U =    3.3798   -0.0000screened Hubbard u =    2.3436    0.0000screened Hubbard J =    0.4433   -0.0000  ``` **N.B.:** The number of frequency points should be large enough to guarantee for an accurate Fourier transformation of the CRPA polarizability matrix from the imaginary time to imaginary frequency domain. See ACFDT/RPA calculations for more information.Downloads---------  CRPA\\_of\\_SrVO3\\.zip Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsBack to the main page."}
{"file_name": "LEPSILON.md", "content": "LEPSILON= .TRUE. \\| .FALSE.   Default: **LEPSILON** \\= .FALSE.nDescription: LEPSILON\\=.TRUE. determines the static dielectric matrix, ion\\-clamped piezoelectric tensor and the Born effective charges using density functional perturbation theory.  --- Determines the static ion\\-clamped dielectric matrix using density functional perturbationtheory. The dielectric matrix is calculated with and without local field effects. Usually local field effects are determined on the Hartree level, i.e. including changes of the Hartree potential.To include microscopic changes of the exchange correlation potential the tag LRPA\\=.FALSE. must be set. The method is explained in detail in paper by Gajdo\u0161 *et al.*,[\\[1]](#cite_note-gajdos:prb:06-1) and closely follows the original work of Baroni and Resta.[\\[2]](#cite_note-baroni:prb:86-2)A summation over empty conduction band states is not required, instead the usual expressions in perturbation theory (LOPTICS\\=.TRUE.),  \\|  \u2207  k  \\|  u \\~  n  k  \u27e9 \\=  \u2211  n \u2032  \u2260 n  \\|  u \\~  n \u2032  k  \u27e9 \u27e8  u \\~  n \u2032  k  \\|  \u2202  (  H  (  k  ) \u2212  \u03f5  n  k  S  (  k  ) )  \u2202  k  \\|  u \\~  n  k  \u27e9  \u03f5  n  k  \u2212  \u03f5  n \u2032  k  , {\\\\displaystyle \\|\\\abla \\_{\\\\mathbf {k} }\\|{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle \\=\\\\sum \\_{n'\\\eq n}{\\\\frac {\\|{\\\\tilde {u}}\\_{n'\\\\mathbf {k} }\\\\rangle \\\\langle {\\\\tilde {u}}\\_{n'\\\\mathbf {k} }\\|{\\\\frac {\\\\partial \\\\,(\\\\mathbf {H} (\\\\mathbf {k} )\\-\\\\epsilon \\_{n\\\\mathbf {k} }\\\\mathbf {S} (\\\\mathbf {k} ))}{\\\\partial {\\\\mathbf {k} }}}\\|{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle }{\\\\epsilon \\_{n\\\\mathbf {k} }\\-\\\\epsilon \\_{n'\\\\mathbf {k} }}},} are rewritten as linear Sternheimer equations:  (  H  (  k  ) \u2212  \u03f5  n  k  S  (  k  )  )  \\|  \u2207  k  u \\~  n  k  \u27e9 \\= \u2212  \u2202  (  H  (  k  ) \u2212  \u03f5  n  k  S  (  k  ) )  \u2202  k  \\|  u \\~  n  k  \u27e9 . {\\\\displaystyle \\\\left(\\\\mathbf {H} (\\\\mathbf {k} )\\-\\\\epsilon \\_{n\\\\mathbf {k} }\\\\mathbf {S} (\\\\mathbf {k} )\\\\right)\\|\\\abla \\_{\\\\mathbf {k} }{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle \\=\\-{\\\\frac {\\\\partial \\\\,(\\\\mathbf {H} (\\\\mathbf {k} )\\-\\\\epsilon \\_{n\\\\mathbf {k} }\\\\mathbf {S} (\\\\mathbf {k} ))}{\\\\partial {\\\\mathbf {k} }}}\\|{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle .} The solution of this equation involves similar iterative techniques as the conventional selfconsistency cycles. Hence, for each element of the dielectric matrix several lines will be written to the stdout and OSZICAR. These possess a similar structure as for conventional selfconsistent or non\\-selfconsistent calculations (a residual minimization scheme is used to solve the linear equation, other schemes such as Davidson do not apply to a linear equation):  ```       N       E              dE             d eps       ncg     rms          rms(c)RMM:   1    -0.14800E+01   -0.85101E-01   -0.72835E+00   220   0.907E+00    0.146E+00RMM:   2    -0.14248E+01    0.55195E-01   -0.27994E-01   221   0.449E+00    0.719E-01RMM:   3    -0.13949E+01    0.29864E-01   -0.10673E-01   240   0.322E+00    0.131E-01RMM:   4    -0.13949E+01    0.13883E-04   -0.31511E-03   242   0.600E-01    0.336E-02RMM:   5    -0.13949E+01    0.28357E-04   -0.25757E-04   228   0.177E-01    0.126E-02  ``` It is important to note that exact values for the dielectric matrix are obtained even if only valence band states are calculated. Hence this method does not require to increase the NBANDS parameter. The final values for the static dielectric matrix can be found in the OUTCAR file after the lines  ``` MICROSCOPIC STATIC DIELECTRIC TENSOR (excluding local field effects)  ```  and  ``` MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in DFT)  ``` The values found after MACROSCOPIC STATIC DIELECTRIC TENSOR (excluding local field effects) should match exactly to the zero frequency values \u03c9\u21920 determined by the method selected using LOPTICS\\=.TRUE..This offers a convenient way to determine how many empty bands are required forLOPTICS\\=.TRUE.. Simply execute VASP using LEPSILON\\=.TRUE. in order to determine the exact values for the dielectric constants. Next, switch to LOPTICS\\=.TRUE. and increase the number of conduction bands until the same values are obtained as using density functional perturbation theory. Note that the routine also parses and uses the value supplied in the LNABLA tag.Furthermore, the routine calculates the Born effective charge tensor (dynamical charges) and electronic contribution to the piezoelectric tensor ,and prints them after  ``` BORN EFFECTIVE CHARGES (in e, cummulative output)  ```  and  ``` PIEZOELECTRIC TENSOR  for field in x, y, z        (C/m^2)  ``` if LRPA\\=.FALSE. is set (the calculated tensors are not sensible in the random phase approximation LRPA\\=.TRUE.). Regarding the piezoelectric tensor, mind the definition/sign convention of the stress tensor.   Pros compared to LOPTICS\\=.TRUE.* no conduction bands required.* local field effects included on the RPA and DFT level (see ACFDT/RPA calculations).   Cons compared to LOPTICS\\=.TRUE.* presently only static properties available.* requires a relatively time consuming iterative process.* does not support HF or hybrid functionals, whereas LOPTICS\\=.TRUE. and the GW routines do.   We do not recommend to select LOPTICS\\=.TRUE. and LEPSILON\\=.TRUE.in a single run (although it might work in some versions).Density functional perturbation theory LEPSILON\\=.TRUE. does not require to increase NBANDS and is, in fact, much slower if NBANDS is increased, whereas the summation over emtpy conduction band states requires a large number of such states."}
{"file_name": "Plot_BSE_fatband.md", "content": "It can be useful to inspect which electron\\-hole pairs or transitions contribute the most to a particular exciton [\\[1]](#cite_note-bokdam:scr:2016-1). In VASP it is possible to write the lowest NBSEEIG eigenvectors into the BSEFATBAND file, which can be used for making a fatband structure plot. For example, a fatband structure plot for the first bright exciton can be made following these steps: 1. Perform a BSE calculation with NBSEEIG sufficiently large to include the exciton of interest.2. Find the energy of the first bright exciton in vasprun.xml\"), i.e., the first transition with non\\-zero oscillator strength (*\\<varray name\\=\"opticaltransitions\" \\>*)3. Find the BSE eigenvector corresponding to this transition in the BSEFATBAND file.4. Extract the coupling coefficients *Abs(X\\_BSE)* (Column 6\\) and energies (Column 4 and 5\\) corresponding to k points (Columns 1\\-3\\) along high\\-symmetry paths.5. Plot the band structure with point size corresponding to the coupling coefficients Abs(X\\_BSE), i.e.,  ```|k-point|     hole        electron       Abs(X_BSE)           eigenvalue    eigenvalue    x          y1            y2        circle radius  ``` You can use the following script for extracting the *NBSE* eigenvector along G\\-L and G\\-X directions in Si:  ```#!/bin/bash#Select the BSE eigenvector of interest.NBSE=1 # The BSE product basis size.BSIZE=$(head -n 1 BSEFATBAND | awk '{print $1}') i=`echo \"($BSIZE+1)*$NBSE+1\" | bc`#Cut out the selected eigenstate.head -n $i BSEFATBAND | tail -n $BSIZE > BSE-$NBSE.datawk < BSE-$NBSE.dat '{ if ($1==$2 && $3==$2)  print sqrt($1*$1+$2*$2+$3*$3), $4, $5, $6}' > bands-GL.datawk < BSE-$NBSE.dat '{ if ($1==$3 && $2==0.0) print sqrt($1*$1+$2*$2+$3*$3), $4, $5, $6}' > bands-GX.dat  ``` [](File_Bsefatband-2.html) The fatband structure plot for one the BSE eigenvectors in Si The fatband structure plot can be done in gnuplot by running the following script:  ```set size 0.5,1set nokeyset ylabel \"Energy (eV)\"set yrange[-7:21]set xtics (\"L\" -0.866025, \"\u0413\" 0, \"X\" 0.707107)set xrange[-0.866025:0.707107]M=0.001  p \"bands-GL.dat\" u (-$1):2:(M*($4)) w circles lc rgb \"#2C68FC\", \\               \"\" u (-$1):3:(M*($4)) w circles lc rgb \"#A82C35\", \\               \"\" u (-$1):2 ps 0.5 lc \"#808080\" w d,  \\               \"\" u (-$1):3 ps 0.5 lc \"#808080\" w d,  \\   \"bands-GX.dat\" u 1:2:(M*($4)) w circles lc rgb \"#2C68FC\", \\               \"\" u 1:3:(M*($4)) w circles lc rgb \"#A82C35\",  \\               \"\" u 1:2 ps 0.5 lc \"#808080\" w d,      \\               \"\" u 1:3 ps 0.5 lc \"#808080\" w d  ```     Related tags and sections------------------------- BSEFATBAND, NBSEEIG, BSE"}
{"file_name": "O_atom_spinpolarized_low_symmetry.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Performing a spin\\-polarized low symmetry calculation of a single oxygen atom in a non cubic box to get the right energy minimum. Input----- ### POSCAR  ```O atom in a box 1.0         \u00a0! universal scaling parameters 7.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 7.5 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)1            \u00a0! number of atomscart         \u00a0! positions in cartesian coordinates 0 0 0  ```   ### INCAR  ```SYSTEM = O atom in a boxISMEAR = 0 \u00a0! Gaussian smearingSIGMA  = 0.01ISPIN =  2 \u00a0! spin polarized calculation  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- * In the GGA most atoms are characterized by a symmetry broken solution. VASP, however, symmetrizes the charge density according to the determined symmetry of the cell. Check the OUTCAR file, to see what symmetry VASP is using. * To lower the symmetry, simply change the lattice parameters to 7\\.0, 7\\.5 and 8\\.0 in the POSCAR file (see the example file above) and reduce SIGMA to SIGMA\\=0\\.01 in the INCAR file. * By rerunning VASP one finds a much lower energy:  ```vasp.5.4.1 05Feb16 (build Aug 22 2016 16:46:23) complex...   ...   . ..DAV:  15    -0.189071145737E+01   -0.29321E-03   -0.39183E-05    48   0.478E-02    0.995E-03DAV:  16    -0.189071145737E+01   -0.27775E-03   -0.39294E-05    40   0.290E-02    0.541E-03DAV:  17    -0.189104076616E+01   -0.51555E-04   -0.34087E-06    48   0.132E-02       1 F= -.18910408E+01 E0= -.18910408E+01  d E =-.309633E-20  mag=     1.9998  ``` Further things to try--------------------- * How does the energy change when one decreases SIGMA to SIGMA\\=0\\.01 in the INCAR file? Why? Download-------- Oatomspinlowsym.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "LDAUTYPE.md", "content": "LDAUTYPE= 1 \\| 2 \\| 4   Default: **LDAUTYPE** \\= 2nDescription: LDAUTYPE specifies the DFT\\+U variant that will be used.  --- The following variants of the DFT\\+U approach are available: * LDAUTYPE\\=1: The rotationally invariant DFT\\+U introduced by Liechtenstein *et al.*[\\[1]](#cite_note-liechtenstein:prb:95-1) * LDAUTYPE\\=2: The simplified (rotationally invariant) approach to DFT\\+U, introduced by Dudarev *et al.*[\\[2]](#cite_note-dudarev:prb:98-2) * LDAUTYPE\\=3: Linear response ansatz of Cococcioni et al. [\\[3]](#cite_note-cococcioni:2005-3) to compute U. See how to calculate U. | **Mind:** For LDAUTYPE\\=3, the LDAUU and LDAUJ tags specify the strength of the spherical potential acting on the spin\\-up and spin\\-down manifolds, respectively. || --- | * LDAUTYPE\\=4: Same as LDAUTYPE\\=1, but without exchange splitting. A method to estimate the parameters for DFT\\+U is the constrained\\-random\\-phase approximation. Another method is the linear response ansatz with LDAUTYPE\\=3, mentioned above. On the other hand, in many applications, the DFT\\+U parameters are used as tuning parameters to fit experimental data. | **Tip:** For band\\-structure calculations, increase LMAXMIX to 4 (    d   {\\\\displaystyle d}  d elements) or 6 (    f   {\\\\displaystyle f}  f elements). || --- | This is because the CHGCAR file contains only information up to angular momentum quantum number set by LMAXMIX for the on\\-site PAW occupancy matrices. When the CHGCAR file is read and kept fixed in the course of the calculations (ICHARG\\=11\\), the results will necessarily not be identical to a self\\-consistent run. The deviations are often large for DFT\\+U calculations. | **Warning:** The total energy will depend on the parameters     U   {\\\\displaystyle U}  U (LDAUU) and     J   {\\\\displaystyle J}   (LDAUJ). It is, therefore, not meaningful to compare the total energies resulting from calculations with different     U   {\\\\displaystyle U}  U and/or     J   {\\\\displaystyle J}  ; or     U \u2212 J   {\\\\displaystyle U\\-J}   in the case of Dudarev's approach (LDAUTYPE\\=2\\). || --- | It is possible to use LDAUTYPE\\=1, 2, and 3 for a non\u2013spin\\-polarized calculation with ISPIN\\=1\\."}
{"file_name": "CRPA.md", "content": "The **constrained random\\-phase approximation** (CRPA) is a method that allows the calculation of the effective interaction parameter   U {\\\\displaystyle U}  ,  J {\\\\displaystyle J} , and   J \u2032 {\\\\displaystyle J'}  for model Hamiltonians. The main idea is to neglect the screening effects of specific target states in the screened Coulomb interaction   W {\\\\displaystyle W}  of the GW method. The resulting partially screened Coulomb interaction is evaluated in a localized basis that spans the target space and is described by the model Hamiltonian. The target space is usually low\\-dimensional and therefore allows for the application of a higher\\-level theory, such as dynamical\\-mean\\-field theory (DMFT). More information about CRPA is found on the following page: Constrained\u2013random\\-phase\u2013approximation\\_formalism Pages in category \"Constrained\\-random\\-phase approximation\"------------------------------------------------------------ The following 7 pages are in this category, out of 7 total. ### C * Constrained\u2013random\\-phase\u2013approximation formalism* CRPA of SrVO3### L * LDISENTANGLED* LWEIGHTED### N * NCRPA BANDS* NTARGET STATES### V * VCUTOFF"}
{"file_name": "ACFDT_calculations.md", "content": "The adiabatic\\-connection\\-fluctuation\\-dissipation theorem (ACFDT) can be used to derive the random\\-phase approximation (RPA).The ACFDT\\-RPA ground\\-state energy   E  R P A {\\\\displaystyle E\\_{\\\\mathrm {RPA} }}  is the sum of the ACFDT\\-RPA correlation energy   E  c {\\\\displaystyle E\\_{c}}  and the Hartree\\-Fock (HF) energy   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  evaluated non self\\-consistently using Kohn\\-Sham orbitals computed within density\\-functional theory (DFT):  E  R P A  \\=  E  c  \\+  E  E X X {\\\\displaystyle E\\_{\\\\mathrm {RPA} }\\=E\\_{\\\\mathrm {c} }\\+E\\_{\\\\mathrm {EXX} }}  . Note that, here   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  includes also the Hartree energy, the kinetic energy, as well as the Ewald energy of the ions, whereas often in literature   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  refers only to the exact\\-exchange (EXX) energy evaluated using DFT orbitals. If ALGO\\=RPA is set in the INCAR file, VASP calculates the correlation energy within RPA. To this end, VASP first calculates the independent\\-particle response function, using the unoccupied states given in the WAVECAR file, and then determines the correlation energy using the plasmon\\-fluctuation equation:  E  c  \\=  1  2 \u03c0  \u222b  0  \u221e  \\[  T r  ln \u2061 ( 1 \u2212 \u03c7 (  i  \u03c9 ) V ) \\+ \u03c7 (  i  \u03c9 ) V ]  d \u03c9 {\\\\displaystyle E\\_{c}\\={\\\\frac {1}{2\\\\pi }}\\\\int \\_{0}^{\\\\infty }\\[\\\\mathrm {Tr} \\\\,\\\\ln(1\\-\\\\chi ({\\\\rm {i}}\\\\omega )V)\\+\\\\chi ({\\\\rm {i}}\\\\omega )V]\\\\,d\\\\omega }  . More information about the theory behind the RPA is found here.  General recipe to calculate ACFDT\\-RPA total energies----------------------------------------------------- The ACFDT\\-RPA total energies can be computed in a four\\-step procedure or in an all\\-in\\-one approach. The all\\-in\\-one approach is available as of VASP.6 and can be done in one single step.Both procedures comprise a self\\-consistent DFT calculation, diagonalizing the KS Hamiltonian, and the RPA calculation itself. While the all\\-in\\-one approach is very convenient, there are several caveats discussed below. ### Four\\-step procedure to calculate ACFDT\\-RPA total energy This four\\-step procedure is the standard procedure in VASP.5, and is also available in VASP.6 by setting NBANDS in the RPA step.  **Step 1:** a standard DFT run.  All occupied orbitals (and as usual in VASP, a few unoccupied orbitals) of the DFT Hamiltonian are calculated. For instance,  ```EDIFF = 1E-8 # required for convergence of RPA total energiesISMEAR = 0\u00a0; SIGMA = 0.05  ``` | **Warning:** The convergence of DFT eigenenergies influences the convergence of the RPA correlation energy. || --- | | **Tip:** Use the Perdew\\-Burke\\-Ernzerhof (PBE) pseudopotentials with a small EDIFF and avoid ISMEAR\\>0\\. || --- | The DFT run can be done with your favorite setup, but we recommend attaining very high precision (small EDIFF tag) and to use a small smearing width (SIGMA tag), and to avoid higher\\-order Methfessel\\-Paxton smearing (see also ISMEAR). That is because Methfessel\\-Paxton smearing can lead to negative one\\-electron occupancies, which can result in unphysical correlation energies. We suggest using PBE orbitals as input for the ACFDT\\-RPA run, but other choices, e.g., local\\-density\\-approximation (LDA) or hybrids, are possible as well. For hybrid functionals, we suggest carefully considering the caveats mentioned in Ref. [\\[1]](#cite_note-paier:2008-1). Specifically, the RPA dielectric matrix yields too weak screening for hybrid functionals, which potentially deteriorates RPA results.**Step 2:** Compute the HF energy   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  using the DFT orbitals. That is, e.g.,  ```ALGO  = EIGENVAL\u00a0; NELM = 1LWAVE = .FALSE.               \u00a0! WAVECAR not written     LHFCALC = .TRUE.\u00a0; AEXX = 1.0 \u00a0! ALDAC = 0.0 ISMEAR = 0\u00a0; SIGMA = 0.05  ``` Here, LWAVE \\= .FALSE. avoids an accidental update of the WAVECAR file. Also, VASP automatically sets ALDAC \\= 1\\-AEXX, i.e., for AEXX \\= 1\\.0, ALDAC \\= 0\\.0\\. | **Tip:** For insulators and semiconductors with a sizable gap, faster k\\-point convergence of the HF energy can be obtained by setting HFRCUT\\=\\-1, although this slows convergence for metals. || --- | **Step 3:** Compute a sufficient number of unoccupied states.  In the OUTCAR file of Step 1, search for `maximum number of plane-waves:` and run VASP again with the following INCAR file to determine the unoccupied states by exact diagonalization of the KS Hamiltonian. The KS Hamiltonian must be the same as in step 1, which might be DFT or hybrid.  ```NBANDS = maximum number of plane-waves (times 2 for vasp_gam)ALGO = Exact   \u00a0! exact diagonalizationEDIFF = 1E-8 # required for convergence of RPA total energiesLOPTICS = .TRUE.ISMEAR = 0\u00a0; SIGMA = 0.05  ``` For calculations using `vasp_gam`, that is the gamma\\-point only version of VASP, NBANDS must be set to twice the `maximum number of plane-waves:` found in the OUTCAR file of Step 1\\. For metals, we recommend to avoid setting LOPTICS\\=.TRUE., since this slows down k\\-point convergence .**Step 4:** Calculate the ACFDT\\-RPA correlation energy.  ```NBANDS =  maximum number of plane-wavesALGO = ACFDTNOMEGA = 12    \u00a0! defaultISMEAR = 0\u00a0; SIGMA = 0.05   ``` The number of imaginary\\-frequency and imaginary\\-time\\-grid points NOMEGA is usually set to 8\\-24\\. For large gap insulators NOMEGA \\= 8 will suffice, while for semiconductors 10\\-12 suffices. | **Important:** For VASP 6\\.X, NBANDS must be set in this step. || --- | ### All\\-in\\-one approach to calculate ACFDT\\-RPA total energy VASP will read the WAVECAR file, perform a self\\-consistent DFT calculation by iterating until convergence is reached, diagonalize the DFT Hamiltonian in the basis set spanned by all KS orbitals, and finally proceed with the RPA calculation. The all\\-in\\-one approach is only available as of VASP.6, and it is particularly convenient for the RPAR and GWR algorithms. An example INCAR file is  ```ALGO = RPAR EDIFF = 1E-8  # required for convergence of RPA total energiesISMEAR = 0\u00a0; SIGMA = 0.05 NOMEGA = 8-24   \u00a0! for large gap insulators NOMEGA = 8 will suffice, for semiconductors 10-12 suffices LOPTICS = .TRUE.\u00a0! optional LPEAD = .TRUE.  \u00a0! required for 6.1 and 6.2 if LOPTICS = .TRUE.  ``` | **Warning:** The tag NBANDS must not be set in the INCAR file. || --- | | **Warning:** The convergence of DFT eigenenergies influences the convergence of the RPA correlation energy. || --- | | **Tip:** Use the Perdew\\-Burke\\-Ernzerhof (PBE) pseudopotentials with a small EDIFF and avoid ISMEAR\\>0\\. || --- | The head of the dielectric function can be calculated only for insulators by setting the LOPTICS tag and only the Perturbation\\-Expression\\-After\\-Discretization (PEAD) method is supported, see LPEAD. Furthermore, EDIFF should be small to calculate the DFT orbitals with high precision. Although it is not strictly required, we recommend starting the calculation from a well\\-converged DFT WAVECAR file. There are several caveats to the all\\-in\\-one approach:  * There is no general support for ACFDT/RPA on top of hybrid functionals. In VASP   \u2264 {\\\\displaystyle \\\\leq }  6\\.2, only LDA and gradient corrected functionals are supported. As of VASP 6\\.2, the all\\-in\\-one approach can be used for Hartree\\-Fock\\-type calculations, as well as hybrid functionals without range separation. However, range\\-separated hybrid functionals (including HSE, LMODELHF) yield erroneous results or potentially even crash. Please compare the total energies in a standard DFT/hybrid functional calculation against the energies obtained for the mean\\-field step in the all\\-in\\-one approach: The energies must be exactly the same. If they differ, fall back to the four\\-step procedure that is explained above.* To select the new all\\-in\\-one approach, it is important \"*not to set* NBANDS\" in the RPA step. If NBANDS is set in the INCAR file, VASP.6 proceeds with reading the WAVECAR file found in the directory (if not present, random orbitals are used!), and then calculates the correlation energy using these orbitals and one\\-electron energies.* The basis set used in the diagonalization is strictly given by all plane waves. That is, there is no option to reduce the basis set size as one can by setting NBANDS in Step 3 and Step 4 of the four\\-step procedure.* The exchange energy is only calculated if the low\\-scaling RPA is selected.* As of VASP 6\\.3, the head of the dielectric function (G\\=0 component) can be calculated by setting LOPTICS \\= .TRUE.* In the all\\-in\\-one procedure, VASP automatically sets LMAXFOCKAE and NMAXFOCKAE. This changes the energies for hybrid functionals and Hartree\\-Fock slightly. Hence, you need to set LMAXFOCKAE \\= 4 also in Step 1 of the four\\-step procedure to obtain the same results as in the all\\-in\\-one procedure. ### Output of ACFDT\\-RPA total energy The ACFDT\\-RPA total energy is calculated for 8 different energy cutoffs and a linear regression is used to extrapolate the results to the infinite cutoff limit, see section below. A successful RPA calculation writes the following lines into the OUTCAR file:  ```      cutoff energy     smooth cutoff   RPA   correlation   Hartree contr. to MP2---------------------------------------------------------------------------------            316.767           316.767      -17.5265976349      -26.2640927215            301.683           301.683      -17.3846505665      -26.0990489039            287.317           287.317      -17.2429031341      -25.9344769084            273.635           273.635      -17.0686574017      -25.7325162480            260.605           260.605      -16.8914915810      -25.5277026697            248.195           248.195      -16.7202601717      -25.3302982602            236.376           236.376      -16.5559849344      -25.1415392478            225.120           225.120      -16.3635400223      -24.9210737434  linear regression      converged value                          -19.2585393615      -28.2627347266  ``` Here, the third and fourth columns correspond to the correlation energy (for that specific energy cutoff) in the RPA and the direct second\\-order M\u00f8ller\u2013Plesset (MP2\\) approximation, i.e., the second\\-order term in RPA. The corresponding results of the linear regression are found in the line starting with `converged value`.  Low\\-scaling ACFDT/RPA algorithm-------------------------------- Virtually the same tags and procedures apply to the low\\-scaling RPA algorithm implemented in VASP 6 [\\[2]](#cite_note-kaltak:prb:2014-2). However, ALGO\\=ACFDT or ALGO\\=RPA needs to be replaced by either ALGO\\=ACFDTR or ALGO\\=RPAR.  With this setting VASP calculates the independent\\-particle polarizability   \u03c7 ( i \u03c9 ) {\\\\displaystyle \\\\chi (i\\\\omega )}  using Green's functions   G ( i \u03c4 ) {\\\\displaystyle G(i\\\\tau )}  on the imaginary time axis   i \u03c4 {\\\\displaystyle i\\\\tau }  by the contraction formula [\\[3]](#cite_note-rojas:prl:1995-3)  \u03c7 ( i  \u03c4  m  ) \\= \u2212 G ( i  \u03c4  m  ) G ( \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi (i\\\\tau \\_{m})\\=\\-G(i\\\\tau \\_{m})G(\\-i\\\\tau \\_{m})} Subsequently, a compressed Fourier transformation on the imaginary axes   \u03c4  m  ,  \u03c9  n {\\\\displaystyle \\\\tau \\_{m},\\\\omega \\_{n}}  yields   \u03c7 ( i  \u03c9  n  ) \\=  \u2211  m \\= 1  N  \u03b3  n m  \u03c7 ( i  \u03c9  m  ) {\\\\displaystyle \\\\chi (i\\\\omega \\_{n})\\=\\\\sum \\_{m\\=1}^{N}\\\\gamma \\_{nm}\\\\chi (i\\\\omega \\_{m})} The remaining step is the evaluation of the correlation energy and is the same as described above.  Crucial to this approach is the accuracy of the Fourier transformation from   \u03c7 ( i \u03c4 ) \u2192 \u03c7 ( i \u03c9 ) {\\\\displaystyle \\\\chi (i\\\\tau )\\\\to \\\\chi (i\\\\omega )} , which in general depends on two factors: First, the grid order   N {\\\\displaystyle N}  that can be set by NOMEGA in the INCAR file. Here, similar choices as for the ALGO\\=ACFDT are recommended. Second, the grid points   \u03c4  m  ,  \u03c9  n {\\\\displaystyle \\\\tau \\_{m},\\\\omega \\_{n}}  and Fourier matrix   \u03b3  n m {\\\\displaystyle \\\\gamma \\_{nm}}  have to be optimized for the same interval as spanned by all possible transition energies in the polarizability. The minimum (maximum) transition energy can be set with the OMEGAMIN (OMEGATL) tag and should be smaller (larger) than the bandgap, i.e., the maximum transition energy, of the previous DFT calculation. VASP determines these values automatically and writes it in the OUTCAR after the lines   ```Response functions by GG contraction:   ``` These values should be checked for consistency. Furthermore, we recommend inspecting the grid and transformation errors by looking for the following lines in the OUTCAR file  ```nu_ 1=  0.1561030E+00 ERR=   0.6327933E-05 finished after   1 steps    nu_ 2= ...Maximum error of frequency grid:  0.3369591E-06  ``` Every frequency point will have a similar line as shown above for the first point. The value after `ERR=` corresponds to the maximum Fourier\\-transformation error and should be of similar order as the maximum integration error of the frequency grid. ### Output of low\\-scaling ACFDT/RPA Selecting the low\\-scaling RPA algorithm, VASP computes the total energy in the RPA and writes the following output  ``` ----------------------------------------------------- HF-free energy      FHF    =       -25.11173505 eV HF+RPA corr. energy TOTEN  =       -36.96463791 eV HF+E_corr(extrapolated)    =       -37.70506951 eV  ``` The line `HF+RPA corr. energy TOTEN` contains the total energy calculated with the largest cutoff ENCUTGW. The line `HF+E_corr(extrapolated)` contains the total energy with the extrapolated value for the RPA correlation energy. ### Singles contribution to the correlation energy The low\\-scaling RPA algorithm also allows for the determination of the so\\-called singles contribution,[\\[4]](#cite_note-klimes:jcp:143-4)[\\[5]](#cite_note-ren:prb:88-5) to the total energy represented by following diagrams: [](File_SinglesDiagrams.html) In most textbooks[\\[6]](#cite_note-mattuck:2012-6) this contribution is assumed to be zero. Ren et al.[\\[5]](#cite_note-ren:prb:88-5) pointed out that this is true only in the Hartree\\-Fock basis set. The singles contribution is non\\-vanishing for other basis sets.  The singles contribution is calculated for LSINGLES\\=.TRUE.. In this case following additional lines can be found in OUTCAR:  ```HF single shot energy change        -1.23182672renormalized HF singles             -1.23310555  ``` Here, the first line contains the value of the singles as proposed by Klime\u0161 et al.,[\\[4]](#cite_note-klimes:jcp:143-4) while the second line contains the singles contribution of Ren et al.[\\[5]](#cite_note-ren:prb:88-5). In most cases we found that the two values are exceedingly close to each other, which can be understood in the way how the propagator is renormalized.[\\[4]](#cite_note-klimes:jcp:143-4) ### Optional: RPA Forces Optionally, RPA forces can be calculated by adding following line to the INCAR file:  ``` LRPAFORCE = .TRUE.   ``` For RPA forces the change in the one\\-electron density is required.[\\[7]](#cite_note-ramberger:prl:118-7)This is automatically performed with the linear\\-response routine within VASP. After a successful run, the following block of data is found in the OUTCAR file.  ```POSITION                                       TOTAL RPA FORCE (eV/Angst)-----------------------------------------------------------------------------------     0.17542     -0.22348      0.17542        -0.292069      7.581315     -0.292069     1.12850      1.31044      1.12850         0.304683     -7.605527      0.304683-----------------------------------------------------------------------------------   total drift:                                0.012614     -0.024212      0.012614 SUGGESTED UPDATED POSCAR (direct coordinates)  step----------------------------------------------------------------------------------- -0.00958461  -0.00958461   0.13485779         0.04179056   0.04179056   0.00283088  0.25787833   0.25787833   0.22191754        -0.04337198  -0.04337198   0.00431513  ``` | **Warning:** The RPA forces computed for metallic systems are currently not supported. || --- | The suggested updated positions are also written to the CONTCAR file (if NSW\\=0\\). The updated positions are obtained by multiplying the RPA\\-forces with the parameter DAMP\\_NEWTON\") and the inverse of the DFT\\-Hessian (which is also calculated during the RPA force calculations) and adding the resultant vector to the current positions. DAMP\\_NEWTON\") currently defaults to 0\\.8, but the user might want to change this to 1\\.0 (no damping), or smaller values if instabilities are observed. The CONTCAR file can be copied to the POSCAR file, and a few such RPA calculations should recover the groundstate structure. Alternatively, standard relaxations (IBRION \\=1\\-4\\) or even MD's can be performed.  ### Memory bottleneck and Parallelization The cubic scaling space\\-time RPA algorithm requires considerably more memory than the corresponding quartic\\-scaling implementations, two Green's functions   G (  r ,  r \u2032  , i  \u03c4  n  ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau \\_{n})}  have to be stored in real\\-space. To reduce the memory overhead, VASP exploits Fast Fourier Transformations (FFT) to avoid storage of the matrices on the (larger) real space grid, on the one hand. The precision of the FFT can be selected with PRECFOCK, where usually the values *Fast* sufficient. On the other hand, the code avoids storage of redundant information, i.e., both the Green's function and polarizability matrices are distributed as well as the individual imaginary grid points. The distribution of the imaginary grid points can be set by hand with the NTAUPAR and NOMEGAPAR tags, which splits the imaginary grid points NOMEGA into NTAUPAR time and NOMEGAPAR groups. For this purpose both tags have to be divisors of NOMEGA.  The default values are usually reasonable choices provided the tag MAXMEM is set correctly and we strongly recommend to set MAXMEM instead of NTAUPAR.  | **Important:** As of version 6\\.2, MAXMEM is estimated automatically (if not set) from the \"MemAvailable\" entry of the Linux kernel in \"/proc/meminfo\". || --- | The required storage for a low\\-scaling RPA or GW calculation depends mostly on NTAUPAR, the number of MPI groups that share same imaginary time points. A rough estimate for the required bytes is given by   ```(NGX*NGY*NGZ)*(NGX_S*NGY_S*NGZ_S) / ( NCPU  / NTAUPAR ) * 16  ``` where \"NCPU\" is the number of MPI ranks used for the job,\"NGX,NGY,NGZ\" denotes the number of FFT grid points for the exact exchange and \"NGX\\_S,NGY\\_S,NGZ\\_S\" the number of FFT grid points for the supercell. Note, both grids are written to the OUTCAR file after the lines  ```FFT grid for exact exchange (Hartree Fock)FFT grid for supercell:  ``` The smaller NTAUPAR is set, the less memory per node the job requires to finish successfully.  The approximate memory requirement is calculated in advance and printed to screen and OUTCAR as follows:  ```min. memory requirement per mpi rank 1234 MB, per node 9872 MB  ``` Some Issues Particular to ACFDT\\-RPA Calculations on Metals----------------------------------------------------------- For metals, the RPA groundstate energy converges the fastest with respect to k\\-points, if the exchange (Eq. (12\\) in reference [\\[8]](#cite_note-harl:2010-8)) and correlation energy are calculated on the same k\\-point grid, HFRCUT is not set, and the long\\-wavelength contributions from the polarizability are not considered (see reference [\\[8]](#cite_note-harl:2010-8)). To evaluate Eq. (12\\), a correction energy for   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  related to partial occupancies has to be added to the RPA groundstate energy:[\\[8]](#cite_note-harl:2010-8)  E  R P A  \\=  E  c  \\+  E  E X X  \\+  E  H F c {\\\\displaystyle E\\_{\\\\mathrm {RPA} }\\=E\\_{\\\\mathrm {c} }\\+E\\_{\\\\mathrm {EXX} }\\+E\\_{\\\\mathrm {HFc} }}  . In vasp.5\\.4\\.1, this value is calculated for any HF type calculation (step 2\\) and can be found in the OUTCAR file after the total energy (in the line starting with *exchange ACFDT corr. \\=*). To neglect the long\\-wavelength contributions, simply set LOPTICS\\=*.FALSE.* in the ALGO\\=*Exact* step (third step), and remove the WAVEDER files in the directory. Possible tests and known issues------------------------------- ### Basis set convergence The expression for the ACFDT\\-RPA correlation energy written in terms of reciprocal lattice vectors reads:  E  c  R P A  \\=  \u222b  0  \u221e  d  \u03c9  2 \u03c0  \u2211  q  \u2208  B Z  \u2211  G  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle E\\_{\\\\rm {c}}^{\\\\rm {RPA}}\\=\\\\int \\_{0}^{\\\\infty }{\\\\frac {\\\\mathrm {d} \\\\omega }{2\\\\pi }}\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }\\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}}  . The sum over reciprocal lattice vectors has to be truncated at some   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\mathrm {max} }} , determined by   \u210f  2  \\|  G  \\+  q  \\|  2  2  m  e {\\\\displaystyle {\\\\frac {\\\\hbar ^{2}\\|{\\\\mathbf {G} }\\+{\\\\mathbf {q} }\\|^{2}}{2\\\\mathrm {m} \\_{e}}}}  \\< ENCUTGW, which can be set in the INCAR file. The default value is   2 3  \u00d7 {\\\\displaystyle {\\\\frac {2}{3}}\\\\times }  ENCUT, which experience has taught us not to change. For systematic convergence tests, instead increase ENCUT and repeat steps 1 to 4, but be aware that the \"maximum number of plane\\-waves\" changes when ENCUT is increased. Note that it is virtually impossible, to converge absolute correlation energies. Rather concentrate on relative energies (e.g. energy differences between two solids, or between a solid and the constituent atoms). Since correlation energies converge very slowly with respect to   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\rm {max}}} , VASP automatically extrapolates to the infinite basis set limit using a linear regression to the equation: [\\[9]](#cite_note-harl:2008-9)[\\[8]](#cite_note-harl:2010-8)[\\[10]](#cite_note-klimes:2014-10)  E  c  (  G  ) \\=  E  c  ( \u221e ) \\+  A  G  3 {\\\\displaystyle E\\_{\\\\mathrm {c} }({\\\\mathbf {G} })\\=E\\_{\\\\mathrm {c} }(\\\\infty )\\+{\\\\frac {A}{{\\\\mathbf {G} }^{3}}}}  . Furthermore, the Coulomb kernel is smoothly truncated between ENCUTGWSOFT and ENCUTGW using a simple cosine like window function (Hann window function). Alternatively, the basis set extrapolation can be performed by setting LSCK\\=.TRUE., using the squeezed Coulomb kernel method.[\\[11]](#cite_note-riemelmoser:jcp:2020-11) The default for ENCUTGWSOFT is 0\\.8  \u00d7 {\\\\displaystyle \\\\times } ENCUTGW (again we do not recommend to change this default).  The integral over   \u03c9 {\\\\displaystyle \\\\omega }  is evaluated by means of a highly accurate minimax integration.[\\[12]](#cite_note-kaltak:2014-12) The number of   \u03c9 {\\\\displaystyle \\\\omega }  points is determined by the flag NOMEGA, whereas the energy range of transitions is determined by the band gap and the energy difference between the lowest occupied and highest unoccupied one\\-electron orbital. VASP determines these values automatically (from vasp.5\\.4\\.1 on), and the user should only carefully converge with respect to the number of frequency points NOMEGA. A good choice is usually NOMEGA\\=12, however, for large gap systems one might obtain   \u03bc {\\\\displaystyle \\\\mu } eV convergence per atom already using 8 points, whereas for metals up to NOMEGA\\=24 frequency points are sometimes necessary, in particular, for large unit cells. Strictly adhere to the steps outlines above. Specifically, be aware that steps two and three require the WAVECAR file generated in step one, whereas step four requires the WAVECAR and WAVEDER file generated in step three (generated by setting LOPTICS\\=*.TRUE.*). Convergence with respect to the number of plane waves can be rather slow, and we recommend to test the calculations carefully. Specifically, the calculations should be performed at the default energy cutoff ENCUT, and at an increased cutoff (ideally the default energy cutoff   \u00d71\\.3 {\\\\displaystyle \\\\times 1\\.3} ). Another issue is that energy volume\\-curves are sometimes not particularly smooth. In that case, the best strategy is to set  ```ENCUT = 1.3 times default energy cutoffENCUTGWSOFT = 0.5 times default energy cutoff  ``` where the default energy cutoff is the usual one (maximum ENMAX in POTCAR files). The frequency integration also needs to be checked carefully, in particular for small gap systems (some symmetry broken atoms) convergence can be rather slow, since the one\\-electron band gap can be very small, requiring a very small minimum   \u03c9 {\\\\displaystyle \\\\omega }  in the frequency integration. ### K\\-point convergence: Spline interpolation | **Mind:** ESF\\_SPLINES\") is available as of VASP.6\\.5\\.0 || --- | It is possible to use spline interpolation to improve upon k\\-point integration errors by rewriting the RPA correlation energy as an integral   E  c  R P A  \\=  \u2211  q  \u2208  B Z  \u2211  G  S (  q \\+ G  ) {\\\\displaystyle E\\_{c}^{\\\\rm {RPA}}\\=\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }S({\\\\bf {q\\+G}})} over the electronic structure factor:  S (  q  \\+  G  ) \\= \u222b  d  \u03c9  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle S({\\\\bf {q}}\\+{\\\\bf {G}})\\=\\\\int {\\\\rm {d}}\\\\omega \\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}} If ESF\\_SPLINE\")\\=T is set, the code stores the electronic structure factor on a coarse grid defined by KPOINTS and performs a tricubic spline interpolation towards finer q\\-grids iteratively. After each iteration the RPA correlation energy is evaluated and compared to the result of previous interpolation. If the difference in energy is smaller than ESF\\_CONV\") within ESF\\_NINTER\") interpolation steps, the code considers the q\\-point integration to be converged and reports the result to OUTCAR in the following format  ```     cutoff energy     smooth cutoff   RPA   correlation   Hartree contr. to MP2  RPA spline-interp.-----------------------------------------------------------------------------------------------------           166.667           133.333      -12.9738715106      -19.7255874374      -13.4968000908           158.730           126.984      -12.8840657072      -19.6294580403      -13.4017404001           151.172           120.937      -12.7775593388      -19.5151822998      -13.3005326847           143.973           115.178      -12.6604147404      -19.3892142669      -13.1868498210           137.117           109.694      -12.5530911576      -19.2733151174      -13.0861120393           130.588           104.470      -12.4659186304      -19.1786165194      -12.9778587892           124.369            99.495      -12.3690601643      -19.0725742983      -12.8709666989           118.447            94.758      -12.2461267475      -18.9372318755      -12.7590723870 linear regression     converged value                          -14.0340307585      -20.8751715586      -14.5828037654  ``` The last column contains the result from the spline interpolation for the selected energy cutoffs reported in the first column.  | **Warning:** Delete WAVEDER for this method. || --- | Note that this method is incompatible with k\\-p perturbation theory, where the largest q\\-point integration error   lim  q \u2192 0  \u03c7 \\~  G G  \u2032  0  (  q  ,  i  \u03c9 ) \u22c5  V  G  G \u2032  (  q  ) {\\\\displaystyle \\\\lim \\_{\\\\bf {q\\\\to 0}}{\\\\tilde {\\\\chi }}\\_{{\\\\bf {GG}}'}^{0}({\\\\bf {q}},{\\\\rm {i}}\\\\omega )\\\\cdot {\\\\bf {V}}\\_{\\\\bf {GG'}}({\\\\bf {q}})}  is added explicitly to the RPA integral. This long\\-wave contribution is stored in WAVEDER, and VASP assumes you want to add this term if the file is present in the working directory.  Also, the long\\-wave limit is ill\\-defined for metallic systems, in contrast to the spline interpolation method.  | **Mind:** ESF\\_SPLINES\") can be used for metals. || --- | Nevertheless, for insulators, we still recommend using WAVEDER and not set ESF\\_SPLINES\") for efficiency reasons.  Related Tags and Sections------------------------- * ALGO for response functions and *ACFDT* calculations* NOMEGA, NOMEGAR number of frequency points* LHFCALC, switches on HF calculations* LOPTICS, required in the DFT step to store head and wings* ENCUTGW, to set cutoff for response functions* ENCUTGWSOFT* PRECFOCK controls the FFT grids in HF, GW, RPA calculations* NTAUPAR controls the number of imaginary time groups in space\\-time GW and RPA calculations* NOMEGAPAR controls the number of imaginary frequency groups in space\\-time GW and RPA calculations* MAXMEM sets the available memory per MPI rank on each node* LFINITE\\_TEMPERATURE switches on Matsubara (finite temperature) formalism* ESF\\_SPLINES\") uses tricubic spline interpolation of electronic structure factor to accelerate k\\-point convergence"}
{"file_name": "LBLUEOUT.md", "content": "LBLUEOUT= .TRUE.\\|.FALSE.   Default: **LBLUEOUT** \\= .FALSE.nDescription: for LBLUEOUT\\=.TRUE., VASP writes output for the free\\-energy gradient calculation to the REPORT file (in case VASP was compiled with \\-Dtbdyn).  --- If LBLUEOUT\\=.TRUE., the information needed to compute the free\\-energy gradient is written in the REPORT file after each molecular\\-dynamics step (MDALGO\\=1 \\| 2\\), check the lines after the header:  ```>Blue_moon       lambda         |z|^(-1/2)      GkT           |z|^(-1/2)*(lambda+GkT)  ``` For the theory of the blue\\-moon ensemble we refer to here."}
{"file_name": "IBRION.md", "content": "IBRION= \\-1 \\| 0 \\| 1 \\| 2 \\| 3 \\| 5 \\| 6 \\| 7 \\| 8 \\| 40 \\| 44n| Default: **IBRION** | \\= \\-1 | for NSW\\=\u22121 or 0 || --- | --- | --- ||  | \\= 0 | else | Description: IBRION determines how the ions are updated and moved.  --- For IBRION\\=0, a molecular dynamics is performed, whereas all other algorithms are destined for relaxations into a local energy minimum. For difficult relaxation problems it is recommended to use the conjugate gradient algorithm (IBRION\\=2\\), which presently possesses the most reliable backup routines. Damped molecular dynamics (IBRION\\=3\\) are often useful when starting from very bad initial guesses. Close to the local minimum the RMM\\-DIIS (IBRION\\=1\\) is usually the best choice. IBRION\\=5 and IBRION\\=6 are using finite differences to determine the second derivatives (Hessian matrix and phonon frequencies), whereas IBRION\\=7 and IBRION\\=8 use density functional perturbation theory to calculate the derivatives. IBRION\\=\\-1: no update.----------------------- The ions are not moved, but NSW outer loops are performed. In each outer loop the electronic degrees of freedom are re\\-optimized (for NSW\\>0 this obviously does not make much sense, except for test purposes). If no ionic update is required use NSW\\=0 instead. IBRION\\=0: molecular dynamics.------------------------------ Standard ab\\-initio molecular dynamics. A Verlet algorithm (or fourth\\-order predictor\\-corrector if VASP was linked with stepprecor.o) is used to integrate Newton's equations of motion. POTIM supplies the timestep in femto seconds. The parameter SMASS provides additional control. | **Tip:** NWRITE\\=0,1 || --- | IBRION\\=1: ionic relaxation (RMM\\-DIIS).---------------------------------------- For IBRION\\=1, a quasi\\-Newton (variable metric) algorithm is used to relax the ions into their instantaneous groundstate. The forces and the stress tensor are used to determine the search directions for finding the equilibrium positions (the total energy is not taken into account). This algorithm is very fast and efficient close to local minima, but fails badly if the initial positions are a bad guess (use IBRION\\=2 in that case). Since the algorithm builds up an approximation of the Hessian matrix it requires very accurate forces, otherwise it will fail to converge. An efficient way to achieve this is to set NELMIN to a value between 4 and 8 (for simple bulk materials 4 is usually adequate, whereas 8 might be required for complex surfaces where the charge density converges very slowly). This forces a minimum of 4 to 8 electronic steps between each ionic step, and guarantees that the forces are well converged at each step. The implemented algorithm is called RMM\\-DIIS.[\\[1]](#cite_note-pulay:cpl:1980-1) It implicitly calculates an approximation of the inverse Hessian matrix by taking into account information from previous iterations. On startup, the initial Hessian matrix is diagonal and equal to POTIM. Information from old steps (which can lead to linear dependencies) is automatically removed from the iteration history, if required. The number of vectors kept in the iterations history (which corresponds to the rank of the Hessian matrix must not exceed the degrees of freedom. Naively the number of degrees of freedom is 3(NIONS\\-1\\). But symmetry arguments or constraints can reduce this number significantly. There are two algorithms built in to remove information from the iteration history: 1. If NFREE is set in the INCAR file, only up to NFREE ionic steps are kept in the iteration history (the rank of the approximate Hessian matrix is not larger than NFREE).2. If NFREE is not specified, the criterion whether information is removed from the iteration history is based on the eigenvalue spectrum of the inverse Hessian matrix: if one eigenvalue of the inverse Hessian matrix is larger than 8, information from previous steps is discarded. For complex problems NFREE can usually be set to a rather large value (i.e. 10\\-20\\), however systems of low dimensionality require a careful setting of NFREE (or preferably an exact counting of the number of degrees of freedom). To increase NFREE beyond 20 rarely improves convergence. If NFREE is set to too large, the RMM\\-DIIS algorithm might diverge. The choice of a reasonable POTIM is also important and can speed up calculations significantly, we recommend to find an optimal POTIM using IBRION\\=2 or performing a few test calculations (see below). IBRION\\=2: ionic relaxation (conjugate gradient algorithm).----------------------------------------------------------- A conjugate\\-gradient algorithm (a discussion of this algorithm can be found for instance in *Numerical Recipes*, by Press *et al.*[\\[2]](#cite_note-press:book:1986-2)) is used to relax the ions into their instantaneous groundstate. In the first step ions (and cell shape) are changed along the direction of the steepest descent (i.e. the direction of the calculated forces and stress tensor). The conjugate gradient method requires a line minimization, which is performed in several steps:  1. First a trial step into the search direction (scaled gradients) is done, with the length of the trial step controlled by the POTIM tag. Then the energy and the forces are recalculated.2. The approximate minimum of the total energy is calculated from a cubic (or quadratic) interpolation taking into account the change of the total energy and the change of the forces (3 pieces of information), then a corrector step to the approximate minimum is performed.3. After the corrector step the forces and energy are recalculated and it is checked whether the forces contain a significant component parallel to the previous search direction. If this is the case, the line minimization is improved by further corrector steps using a variant of Brent's algorithm.[\\[2]](#cite_note-press:book:1986-2) To summarize: In the first ionic step the forces are calculated for the initial configuration read from the POSCAR file, the second step is a trial (or predictor step), the third step is a corrector step. If the line minimization is sufficiently accurate in this step, the next trial step is performed. NSTEP:1. initial positions2. trial step3. corrector step, i.e. positions corresponding to anticipated minimum4. trial step5. corrector step  ...IBRION\\=3: ionic relaxation (damped molecular dynamics).-------------------------------------------------------- If a damping factor is supplied in the INCAR file by means of the SMASS tag, a damped second order equation of motion is used for the update of the ionic degrees of freedom:  x \u2192  \u00a8  \\= \u2212 2 \u03b1  F \u2192  \u2212 \u03bc  x \u2192  \u02d9  , {\\\\displaystyle {\\\\ddot {\\\\vec {x}}}\\=\\-2\\\\alpha {\\\\vec {F}}\\-\\\\mu {\\\\dot {\\\\vec {x}}},} where SMASS supplies the damping factor \u03bc, and POTIM controls \u03b1. A simple velocity Verlet algorithm is used to integrate the equation, the discretised equation reads:   v \u2192  N \\+ 1  /  2  \\=  (  ( 1 \u2212 \u03bc  /  2 )  v \u2192  N \u2212 1  /  2  \u2212 2 \u03b1  F \u2192  N  )  /  ( 1 \\+ \u03bc  /  2 )  x \u2192  N \\+ 1  \\=  x \u2192  N  \\+  v \u2192  N \\+ 1  /  2 {\\\\displaystyle {\\\\begin{aligned}{{\\\\vec {v}}\\_{N\\+1/2}}\\=\\&{\\\\Big (}(1\\-\\\\mu /2\\){{\\\\vec {v}}\\_{N\\-1/2}}\\-2\\\\alpha {{\\\\vec {F}}\\_{N}}{\\\\Big )}/(1\\+\\\\mu /2\\)\\\\\\\\{{\\\\vec {x}}\\_{N\\+1}}\\=\\&{{\\\\vec {x}}\\_{N}}\\+{{\\\\vec {v}}\\_{N\\+1/2}}\\\\end{aligned}}} One may immediately recognize, that \u03bc\\=2 is equivalent to a simple steepest descent algorithm (of course without line optimization). Hence, \u03bc\\=2 corresponds to maximal damping, \u03bc\\=0 corresponds to no damping. The optimal damping factor depends on the Hessian matrix (matrix of the second derivatives of the energy with respect to the atomic positions). A reasonable first guess for \u03bc is usually 0\\.4\\. Mind that our implementation is particular user\\-friendly, since changing \u03bc usually does not require to re\\-adjust the time step POTIM. To choose an optimal time step and damping factor, we recommend the following two step procedure: First fix \u03bc (for instance to 1\\) and adjust POTIM. POTIM should be chosen as large as possible without getting divergence in the total energy. Then decrease \u03bc and keep POTIM fixed. If POTIM and SMASS are chosen correctly, the damped molecular dynamics mode usually outperforms the conjugate gradient method by a factor of two. If SMASS is not set in the INCAR file (respectively SMASS\\<0\\), a velocity quench algorithm is used. In this case the ionic positions are updated according using the following algorithm: **F** are the current forces, and \u03b1 equals POTIM. This equation implies that, if the forces are antiparallel to the velocities, the velocities are quenched to zero. Otherwise the velocities are made parallel to the present forces, and they are increased by an amount that is proportional to the forces. **Mind**: For IBRION\\=3, a reasonable time step *must* be supplied by the POTIM parameter. Too large time steps will result in divergence, too small ones will slow down the convergence. The stable time step is usually twice the *smallest* line minimization step in the conjugate gradient algorithm. IBRION\\=5 and 6: second derivatives, Hessian matrix, and phonon frequencies (finite differences).------------------------------------------------------------------------------------------------- When IBRION\\=5 or IBRION\\=6 are set VASP computes the second\\-order derivatives of the total energy with respect to the position of the ions using a finite differences approach,the dynamical matrix is constructed and diagonalized and the phonon modes and frequencies of the system are reported in the OUTCAR file. For precise results, it is necessary to set EDIFF to values less or equal 1E\\-6\\. Using the default (EDIFF\\=1E\\-4\\) often results in unacceptably large errors. IBRION\\=5 does not apply symmetry, whereas IBRION\\=6 uses symmetry to reduce the number of displacements. If IBRION\\=6 and ISIF\\>\\=3 the elastic tensors and internal strain tensors are computed as well. Born effective charges, piezoelectric constants, and the ionic contribution to the dielectric tensor can becalculated additionally by specifying LEPSILON\\=.TRUE. (linear response theory) or LCALCEPS\\=.TRUE. (finite external field). IBRION\\=7 and 8: second derivatives, Hessian matrix, and phonon frequencies (perturbation theory).-------------------------------------------------------------------------------------------------- When IBRION\\=7 and IBRION\\=8 are set VASP computes second derivatives of the total energy with respect to the position of the ions using density\\-functional\\-perturbation theory (DFPT),the dynamical matrix is constructed and diagonalized and the phonon modes and frequencies of the system are reported in the OUTCAR file. For precise results, it is necessary to set EDIFF to values around 1E\\-6\\. Using the default (EDIFF\\=1E\\-4\\) can result in substantial errors for softer modes. IBRION\\=7 does not apply symmetry, whereas IBRION\\=8 uses symmetry to reduce the number of displacements. The output is similar for **IBRION**\\=5 and 6 with the exception that it does not determine the elastic tensors, since the linear response with respect to the strain tensor is not implemented. IBRION\\=40: calculation of energy profile along IRC.---------------------------------------------------- This method is described in the IRC calculations section. IBRION\\=44: the Improved Dimer Method.-------------------------------------- This method is described in the Improved Dimer Method section. Some general comments--------------------- For IBRION\\=1, 2, and 3, the flag ISIF determines whether the ions and/or the cell shape is changed. Update of the cell shape is supported for molecular dynamics (IBRION\\=0\\) only if the dynamics module of Tomas Bucko (precompiler flag \\-Dtbdyn) is used. Within all relaxation algorithms (IBRION\\=1, 2, and 3\\) the parameter POTIM should be supplied in the INCAR file. For IBRION\\>0, *the forces are scaled internally before calling the minimization routine*. Therefore for relaxations, POTIM has no physical meaning and serves only as a scaling factor. For many systems, the optimal POTIM is around 0\\.5\\. Because the Quasi\\-Newton algorithm and the damped algorithms are sensitive to the choice of this parameter, use IBRION\\=2, if you are not sure how large the optimal POTIM is. In this case, the OUTCAR file and stdout will contain a line indicating a reliable POTIM. For IBRION\\=2, the following lines will be written to stdout after each corrector step (usually each odd step):  ``` trial: gam=  .00000 g(F)=   .152E+01 g(S)=  .000E+00 ort = .000E+00 (trialstep = .82)  ``` The quantity gam is the conjugation parameter to the previous step, g(F) and g(S) are the norm of the force respectively the norm of the stress tensor. The quantity ort is an indicator whether this search direction is orthogonal to the last search direction (for an optimal step this quantity should be much smaller than (g(F) \\+ g(S)). The quantity trialstep is the size of the current trialstep. This value is the average step size leading to a line minimization in the previous ionic step. An optimal POTIM can be determined, by multiplying the current POTIM with the quantity trialstep. After at the end of a trial step, the following lines are written to stdout:  ``` trial-energy change:   -1.153185  1.order   -1.133   -1.527  -.739 step:   1.7275(harm=  2.0557)  dis=  .12277                              next Energy= -1341.57 (dE= -.142E+01)  ``` The quantity trial\\-energy change is the change of the energy in the trial step. The first value after 1\\.order is the expected energy change calculated from the forces: (**F**(start)\\+**F**(trial))/2\u00d7change of positions. The second and third value corresponds to **F**(start)\u00d7change of positions, and **F**(trial)\u00d7change of positions. The first value in the second line is the size of the step leading to a line minimization along the current search direction. It is calculated from a third order interpolation formula using data from the start and trial step (forces and energy change). harm is the optimal step using a second order (or harmonic) interpolation. Only information on the forces is used for the harmonic interpolation. Close to the minimum both values should be similar. dis is the maximum distance moved by the ions in fractional (direct) coordinates. next Energy gives an indication how large the next energy should be (i.e. the energy at the minimum of the line minimization), dE is the estimated energy change. The OUTCAR file will contain the following lines, at the end of each trial step:  ``` trial-energy change:   -1.148928  1.order   -1.126  -1.518  -.735  (g-gl).g =  .152E+01      g.g   =  .152E+01  gl.gl    =  .000E+00 g(Force)  =  .152E+01   g(Stress)=  .000E+00 ortho     =  .000E+00 gamma     =    .00000 opt step  =   1.72745  (harmonic =   2.05575) max dist = .12277085 next E    = -1341.577507   (d E  =   1.42496)  ``` The line trial\\-energy change was already discussed. g(Force) corresponds to g(F), g(Stress) to g(S), ortho to ort, gamma to gam. The values after gamma correspond to the second line (step: ...) previously described. Related Tags and Sections------------------------- NSW,SMASS,POTIM,NFREE,ISIF,LEPSILON,LCALCEPS,Improved Dimer Method Examples that use this tag"}
{"file_name": "CLZ.md", "content": "CLZ= \\[real]nDescription: CLZ selects the electron count of the excited electron when using ICORELEVEL.  --- This option is only used if ICORELEVEL\\=2 is set."}
{"file_name": "Number_of_k_points_and_method_for_smearing.md", "content": "Please read and understand K\\-point integration before reading this section.   The number of k points needed for a calculation depends criticallyon the necessary precision and on whether the system is metallic.Metallic systems require an order of magnitude more k points thansemiconducting and insulating systems.The number of k points also depends on the smearing method inuse; not all methods converge with similar speed. In addition, the erroris not transferable at all i.e. a   9 \u00d7 9 \u00d7 9 {\\\\displaystyle 9\\\\times 9\\\\times 9}  leadsto a completely different error for fcc, bcc, and sc. Thereforeabsolute convergence with respect to the number of k pointsis necessary. The only exception is commensurable super cells.If it is possible to use the same super cell for two calculationsit is definitely a good idea to use the same k point set for both calculations.Finally, we note that the k point mesh and smearing are closely connected. We repeat here the guidelines for ISMEAR: * For semiconductors or insulators always use the tetrahedron method (ISMEAR\\=\\-5\\), if the cell is too large to use tetrahedron method use ISMEAR\\=0\\.* For relaxations in metals always use ISMEAR\\=1 and an appropriate SIGMA value (so that the entropy term is less than 1 meV per atom). **Mind**: Avoid using ISMEAR\\>0 for semiconductors and insulators, it might result in problems.* For the DOS and very accurate total energy calculations (no relaxation in metals) use the tetrahedron method (ISMEAR\\=\\-5\\). Once again, if possible we recommend using the tetrahedron methodwith Bl\u00f6chl corrections (ISMEAR\\=\\-5\\),this method is foolproof and does not require any empirical parameterslike the other methods.Especially for bulk materials, we were able to get highly accurateresults using thismethod. Even with this scheme, the number of k points remains relativelylarge. For insulators, 100 k points/per atom in the full Brillouin zoneare generally sufficientto reduce the energy error to less than 10 meV.Metals require approximately 1000 k points/per atom for the same accuracy.For problematic cases (transition metals with a steep DOS at theFermi level) it might be necessary to increase the number ofk points up to 5000/per atom, which usually reduces the errorto less than 1 meV per atom. **Mind**: The number of k points in the irreducible part of the Brillouinzone (IRBZ) might be much smaller. For fcc/bcc and sc a  11 \u00d7 11 \u00d7 11 {\\\\displaystyle 11\\\\times 11\\\\times 11}  mesh containing 1331 k\\-points isreduced to 56 k\\-points in theIRBZ. This is a relatively modest value compared with the valuesused in conjunction with LMTO packages using the linear tetrahedron method. Not in all cases, it is possible to use the tetrahedron method, forinstance, if the number of k\\-points falls below 3,or if accurate forces are required. In this case,use the method of Methfessel\\-Paxton with N\\=1 for metals and N\\=0 for semiconductors. SIGMA should be as large as possible,but the difference between the free energy and the total energy,i.e. the term  ```entropy T*S  ``` in the OUTCAR file must be small (i.e. \\< 1\\-2 meV/per atom).In this case the free energy and the energy one is really interested in   E ( \u03c3 \u2192 0 ) {\\\\displaystyle E(\\\\sigma \\\\to 0\\)} are almost the same. The forces are also consistent with   E ( \u03c3 \u2192 0 ) {\\\\displaystyle E(\\\\sigma \\\\to 0\\)}  . **Mind**: A good check whether the entropy term causes any problemsis to compare the entropy term for differentsituations. The entropy must be the same for all situations.One has a problem if the entropy is 100 meV per atomat the surface but 10 meV per atom for the bulk. Comparing different k\\-point meshes----------------------------------- It is necessary to be careful comparing different k\\-point meshes.Not always does the number of k points in the IRBZ increase continuouslywith the mesh size. This is for instance the case for fcc,where even grids centered not at the   \u0393 {\\\\displaystyle \\\\Gamma }  point(e.g. Monkhorst Pack   8 \u00d7 8 \u00d7 8 \u2192 60 {\\\\displaystyle 8\\\\times 8\\\\times 8\\\\to 60} ) result in a largernumber of k points than odd divisions (e.g.   9 \u00d7 9 \u00d7 9 \u2192 35 {\\\\displaystyle 9\\\\times 9\\\\times 9\\\\to 35}  ).In fact, the difference can be traced back to whether or whether not the  \u0393 {\\\\displaystyle \\\\Gamma }  point is included in the resulting k\\-point mesh.Meshes centered at   \u0393 {\\\\displaystyle \\\\Gamma }  (option *G* in the KPOINTS file or odd divisions,see also Automatic k\\-mesh generation) behave different than mesheswithout   \u0393 {\\\\displaystyle \\\\Gamma }  (option *M* in the KPOINTS file and even divisions).The precision of the mesh is usually directly proportional to the number of k points in the IRBZ, but not to the number of divisions.Some ambiguities can be avoided if even meshes (not centered at   \u0393 {\\\\displaystyle \\\\Gamma }  )are not comparedwith odd meshes (meshes centered at   \u0393 {\\\\displaystyle \\\\Gamma }  ). Some other considerations------------------------- It is recommended to use even meshes (e.g.   8 \u00d7 8 \u00d7 8 {\\\\displaystyle 8\\\\times 8\\\\times 8} ) forup to   n \\= 8 {\\\\displaystyle n\\=8} . From there on odd meshes are more efficient (e.g.   11 \u00d7 11 \u00d7 11 {\\\\displaystyle 11\\\\times 11\\\\times 11}  ).However, we have already stressed that the number of divisions is oftentotally unrelated to the total number of k points and to theprecision of the grid.Therefore a   8 \u00d7 8 \u00d7 8 {\\\\displaystyle 8\\\\times 8\\\\times 8}  might be more accurate then a  9 \u00d7 9 \u00d7 9 {\\\\displaystyle 9\\\\times 9\\\\times 9}  grid. For fcc a   8 \u00d7 8 \u00d7 8 {\\\\displaystyle 8\\\\times 8\\\\times 8}  grid isapproximately as precise as a   8 \u00d7 8 \u00d7 8 {\\\\displaystyle 8\\\\times 8\\\\times 8}  mesh.Finally,for hexagonal cells, the mesh should be shifted so that the   \u0393 {\\\\displaystyle \\\\Gamma }  pointis always included i.e. the KPOINTS file  ```automatic mesh  0Gamma  8   8   6     0.  0.  0.  ``` is much more efficient than a KPOINTS  file with*Gamma* replaced by *Monkhorst* (see also Automatic k\\-mesh generation).  ---"}
{"file_name": "ML_OUTBLOCK.md", "content": "ML\\_OUTBLOCK= \\[integer]   Default: **ML\\_OUTBLOCK** \\= 1nDescription: Output distance in number of steps for molecular\\-dynamics simulations with machine\\-learned force fields in prediction\\-only mode (`ML_MODE = run`). | **Important:** This tag is only available as of VASP.6\\.4\\.0\\. Unfortunately, the implementation of this feature was incomplete before VASP.6\\.4\\.3\\. In VASP versions prior to 6\\.4\\.3 there was still substantial remaining per\\-time\\-step output, in particular in vasprun.xml\") and vaspout.h5 (see table below). If possible, please use VASP.6\\.4\\.3 or higher for production runs with potentially large file output. || --- |  --- By default VASP writes all results at every molecular\\-dynamics step (`ML_OUTBLOCK = 1`). However, this may become inefficient when running long trajectories in production runs with a machine\\-learned force field in prediction\\-only mode (`ML_MODE = run`). This is particularly true if the force field supports the fast execution mode, i.e., refitting was performed with `ML_MODE = refit`. Then, depending on the system size, writing output each time step may hinder performance, cause heavy I/O load and create unnecessary large files. In order to circumvent these problems `ML_OUTBLOCK = n` instructs VASP to write screen and file output only every `n` time steps. In order to further increase the efficiency, calculation and output of pair\\-correlation functions can be completely switched off by setting `ML_OUTPUT_MODE = 0`.  | **Warning:** This tag will potentially override defaults and INCAR values of NBLOCK! NBLOCK will be automatically set to the maximum of ML\\_OUTBLOCK and NBLOCK. || --- |  A comparison of the effects of NBLOCK and ML\\_OUTBLOCK on the output frequency of different files/properties is given in the following table. Here, \"yes\" means the output will only be written in the interval in time steps given by the tag value. On the other hand, \"no\" indicates that the output will be written every time step regardless of the tag value. INCAR tag controls output frequency: yes/no | Output file/property | NBLOCK | ML\\_OUTBLOCK | || --- | --- | --- | --- ||  |  | \u2264 6\\.4\\.2 | \u2265 6\\.4\\.3 || screen output | no | yes | yes || OSZICAR | no | yes | yes || OUTCAR |  | | || \u21b3 energies and time | no | no | yes || \u21b3 forces and stress | yes | yes | yes || CONTCAR | no | yes | yes || XDATCAR | yes | yes | yes || PCDAT (1\\) | yes | yes | yes || REPORT | yes | yes | yes || ML\\_LOGFILE | no | yes | yes || ML\\_HEAT | no | no | yes || ML\\_EATOM | no | no | yes || vasprun.xml\") |  | | || \u21b3 energy | no | no | yes || \u21b3 forces (1\\) | no | no | yes || \u21b3 stress (1\\) | no | no | yes || \u21b3 structure (1\\) | no | no | yes || \u21b3 time | no | no | yes || vaspout.h5 |  | | || \u21b3 energies | no | no(2\\) | yes || \u21b3 forces | no | no(2\\) | yes || \u21b3 stress | no | no(2\\) | yes || \u21b3 position\\_ions | yes | yes | yes || \u21b3 lattice\\_vectors | yes | yes | yes || \u21b3 ion\\_velocities | yes | yes | yes || \u21b3 pair\\_correlation (1\\) | yes | yes | yes | (1\\) `ML_OUTPUT_MODE = 0` can disable output completely (2\\) Zeros are written for intermediate steps"}
{"file_name": "HESSEMAT.md", "content": "HESSEMAT defines the Hesse matrix in Cartesian coordinates (  H  \\_  x {\\\\displaystyle {\\\\underline {\\\\mathbf {H} }}^{\\\\mathbf {x} }}  ) for the use in Thermodynamic integration with harmonic reference\").For a system containing   N {\\\\displaystyle N}  atoms, HESSEMAT has   ( 3 N \\+ 1 ) ( N \\+ 1 ) {\\\\displaystyle (3N\\+1\\)(N\\+1\\)}  lines.The first line specifies potential energy   V  0 ,  x  (  x  0  ) {\\\\displaystyle V\\_{0,\\\\mathbf {x} }(\\\\mathbf {x} \\_{0})}  (in eV) of the relaxed system for which   H  \\_  x {\\\\displaystyle {\\\\underline {\\\\mathbf {H} }}^{\\\\mathbf {x} }}  is computed.The following   3 N {\\\\displaystyle 3N}  lines are reserved for positions in fractional coordinates of all atoms constituting the system, whereby each line should contain three components of position vector of a single atom. The remaining part of HESSEMAT consist of   3 N {\\\\displaystyle 3N}  block of   N \\+ 1 {\\\\displaystyle N\\+1}  lines each.Each block contains information related to a single eigenmode of   H  \\_  x {\\\\displaystyle {\\\\underline {\\\\mathbf {H} }}^{\\\\mathbf {x} }} : the first line specified the eigenvalue (in eV/  \u00c5  2 {\\\\displaystyle {\\\\mathrm {\\\\AA} }^{2}} ) and remaining and   N {\\\\displaystyle N}  lines the corresponding eigenvector (in Cartesian coordinates) in a 3\\-column format."}
{"file_name": "ML_LMAX2.md", "content": "ML\\_LMAX2= \\[integer]n| Default: **ML\\_LMAX2** | \\= 3 | for ML\\_LAFILT2 \\= .TRUE. || --- | --- | --- ||  | \\= 6 | else | Description: This tag specifies the maximum angular momentum quantum number   L  max {\\\\displaystyle L\\_{\\\\max }}  of spherical harmonics used to expand atomic distributions within the machine learning force field method.  --- To construct an atomic environment descriptor the atomic probability density  \u03c1  i  (  r  )  \\=  \u2211  j \\= 1  N  a  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  )  , {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\=1}^{N\\_{\\\\mathrm {a} }}f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right),} where   g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is an approximation of the delta function, is expanded in terms of radial basis functions   \u03c7  n l  ( r ) {\\\\displaystyle \\\\chi \\_{nl}(r)}  and spherical harmonics   Y  l m  (  r  ^  ) {\\\\displaystyle Y\\_{lm}\\\\left({\\\\hat {\\\\mathbf {r} }}\\\\right)}  (see this section for more details):  \u03c1  i  (  r  )  \\=  \u2211  l \\= 1  L  m a x  \u2211  m \\= \u2212 l  l  \u2211  n \\= 1  N  R  l  c  n l m  i  \u03c7  n l  ( r )  Y  l m  (  r  ^  )  , {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}c\\_{nlm}^{i}\\\\chi \\_{nl}\\\\left(r\\\\right)Y\\_{lm}\\\\left({\\\\hat {\\\\mathbf {r} }}\\\\right),} The tag ML\\_LMAX2 specifies the maximum angular momentum quantum number   L  max {\\\\displaystyle L\\_{\\\\max }}  of spherical harmonics used in this expansion. | **Mind:** This tag is only relevant for the angular descriptor      \u03c1  i   ( 3 )   ( r )   {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}(r)}  ^{(3)}(r)}. The corresponding number of expansion coefficients      p  n \u03bd l   i     {\\\\displaystyle p\\_{n\\\u l}^{i}}  p_{{n\u l}}^{{i}} scales **linearly** with      L  max     {\\\\displaystyle L\\_{\\\\max }}  } (however the calculation of the spherical harmonics scales quadratically) and is also depending on ML\\_MRB2 and the number of elements present. || --- | By default an angular filtering (see ML\\_LAFILT2 and ML\\_IAFILT2) with a filtering parameter of ML\\_AFILT2\\=0\\.002 is used where a value of ML\\_LMAX2\\=3 is perfectly safe for most applications. If you need to improve the accuracy, you might also try to increase it to ML\\_LMAX2\\=4\\. If the angular filter is switched off, we recommend to use a value of ML\\_LMAX2\\=6 (this is then the default value)."}
{"file_name": "Dielectric_properties_of_SiC.md", "content": "Overview> dielectric properties of SiC> dielectric properties of Si > Ionic contributions to the frequency dependent dielectric function of NaCl > List of tutorials Task---- Calculation of the static and frequency dependent dielectric properties of SiC. Static dielectric properties---------------------------- ### Density functional perturbation theory Let us start with the calculation of the static dielectric properties.The most convenient way to determine the Born effective charges, dielectric\\-,piezoelectric tensors is by means of density functional perturbation theory(LEPSILON\\=*.TRUE.*). * INCAR (see INCAR.LEPSILON)  ```ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8 ## to get the Born effective charges## and the macroscopic dielectric tensorLEPSILON = .TRUE. #LRPA = .TRUE.#LPEAD = .TRUE. ## to get the ionic contribution## to the macroscopic dielectric tensor#IBRION = 8 ## As an alternative to LEPSILON = .TRUE.## you might try the following:#LCALCEPS = .TRUE. ## and:#IBRION = 6#NFREE = 2  ``` * KPOINTS (see KPOINTS.8\\)  ```8x8x8 0 G 8 8 8 0 0 0  ``` * POSCAR  ```system SiC4.350.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 1 1cart0.00 0.00 0.00 0.25 0.25 0.25  ``` [](File_Fig_dielectric_properties_SiC_1.html) * The LRPA\\-tag By default the dielectric tensor is calculated in the independent\\-particle (IP) approximation,you should see the following lines in the OUTCAR file:  ```HEAD OF MICROSCOPIC STATIC DIELECTRIC TENSOR (independent particle, excluding Hartree and local field effects)  ```  and  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in DFT)  ``` which comes later in the OUTCAR file. If one adds  ```LRPA=.TRUE.  ``` to the INCAR above, the second instance will include local field effectonly with respect to the response in the Hartree part of the potential, i.e., in the*random\\-phase\\-approximation* (RPA).Search for  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in RPA (Hartree))  ``` in the OUTCAR. * The Born effective charge tensors (  Z  i j  \u2217 {\\\\displaystyle Z\\_{ij}^{\\*}}  ) Roughly speaking, the Born effective tensors provide a measure of how much chargeeffectively moves with an atom when you displace it.For a definition see the article on Berry phases and finite electric fields.For LEPSILON\\=.TRUE., the Born effective charge tensors are written near the end of the OUTCAR file. Look for  ```BORN EFFECTIVE CHARGES (in e, cummulative output)  ``` **Mind**: you will find this entry only if LRPA\\=.FALSE. (default), since the Born\\-effective charges in the RPA tend to be nonsensical. * The LPEAD\\-tag As an alternative to solving a linear Sternheimer equation (Eq. 32 of [\\[1]](#cite_note-gajdos:prb:06-1)), one maycompute   \\|  \u2207  k  u \\~  n  k  \u27e9 {\\\\displaystyle \\|\\\abla \\_{\\\\mathbf {k} }{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle }  from finite differences by specifying  ```LPEAD=.TRUE.  ```   in the INCAR file.The derivative of the cell\\-periodic part of the wave function w.r.t. the Bloch vector is then computedby means of a fourth\\-order finite difference stencil, in the spirit of Eqs. 96 and 97 of [\\[2]](#cite_note-nunes:prb:01-2).The results of the calculation of static dielectric properties by means of LEPSILON\\=.TRUE.tend to converge more rapidly w.r.t. **k**\\-point sampling with LPEAD\\=.TRUE. Rerun the example with  ```ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8 ## to get the Born effective charges## and the macroscopic dielectric tensorLEPSILON = .TRUE.LPEAD = .TRUE.  ``` This will allow for a clean comparison with the next topic. ### Response to finite electric fields The second way one may compute the static dielectric properties is from self\\-consistent response of the system to a finite electric field.[\\[3]](#cite_note-souza:prl:02-3) * INCAR  ```ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8 LCALCEPS = .TRUE.  ``` ### Ionic contributions to the static dielectric properties To obtain the ionic contributions to the static dielectric properties one needs to compute the force\\-constant matrices (Hessian of the total energy w.r.t. the ionic positions) and internal strain tensors (second derivative of the total energy w.r.t. strain fields and ionic postions).These properties may be obtained from finite differences (IBRION\\=5 or 6\\) or from perturbation theory (IBRION\\=7 or 8\\).Try the following * INCAR  ```ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8 ## to get the Born effective charges## and the macroscopic dielectric tensorLEPSILON = .TRUE.LPEAD = .TRUE. ## to get the ionic contribution## to the macroscopic dielectric tensorIBRION = 8  ``` and search for  ```MACROSCOPIC STATIC DIELECTRIC TENSOR IONIC CONTRIBUTION  ```  ```ELASTIC MODULI IONIC CONTR (kBar)  ```  ```PIEZOELECTRIC TENSOR IONIC CONTR  for field in x, y, z        (C/m^2)  ``` in the OUTCAR file. Frequency dependent dielectric response--------------------------------------- Frequency dependent dielectric functions may be computed at various levels of approximation: 1. In the independent\\-particle approximation.2. Including local field effects in the random\\-phase\\-approximation.3. Including local field effects in DFT. Whatever we may choose to do afterwards in terms of dielectric response calculations,we have to start with a standard DFT (or hybrid functional) calculation * INCAR (see INCAR.DFT)  ```ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8  ``` * KPOINTS (see KPOINTS.6\\)  ```6x6x6 0 G 6 6 6 0 0 0  ``` **Mind**: keep the WAVECAR file, you're going to need it in the following. ### The independent\\-particle picture To compute the frequency dependent dielectric function in the independent\\-particle (IP) picturewe restart from the WAVECAR of the previous run, with the following INCAR * INCAR (see INCAR.LOPTICS)  ```ALGO = ExactNBANDS  = 64LOPTICS = .TRUE.\u00a0; CSHIFT = 0.100NEDOS = 2000 ## and you might try with the following#LPEAD = .TRUE. ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8  ``` The frequency dependent dielectric functions is written to the OUTCAR file.Search for  ``` frequency dependent IMAGINARY DIELECTRIC FUNCTION (independent particle, no local field effects)  ```  and  ``` frequency dependent      REAL DIELECTRIC FUNCTION (independent particle, no local field effects)  ``` To visualize the real and imaginary parts of the frequency dependent dielectric function you mayuse p4vasp  ```p4v vasprun.xml  ``` or run the following bash\\-script (plotoptics2)  ```awk 'BEGIN{i=1} /imag/,\\                /\\/imag/ \\                 {a[i]=$2\u00a0; b[i]=$3\u00a0; i=i+1} \\     END{for (j=12;j<i-3;j++) print a[j],b[j]}' vasprun.xml > imag.dat awk 'BEGIN{i=1} /real/,\\                /\\/real/ \\                 {a[i]=$2\u00a0; b[i]=$3\u00a0; i=i+1} \\     END{for (j=12;j<i-3;j++) print a[j],b[j]}' vasprun.xml > real.dat cat >plotfile<<!# set term postscript enhanced eps colour lw 2 \"Helvetica\" 20# set output \"optics.eps\"plot [0:25] \"imag.dat\" using (\\$1):(\\$2) w lp, \"real.dat\" using (\\$1):(\\$2) w lp ! gnuplot -persist plotfile  ``` * LPEAD\\-tag As an alternative to the perturbative expression (Eq. 31 of [\\[1]](#cite_note-gajdos:prb:06-1)), one maycompute   \\|  \u2207  k  u \\~  n  k  \u27e9 {\\\\displaystyle \\|\\\abla \\_{\\\\mathbf {k} }{\\\\tilde {u}}\\_{n\\\\mathbf {k} }\\\\rangle }  from finite differences by specifying  ```LPEAD=.TRUE.  ``` in the INCAR file.The derivative of the cell\\-periodic part of the wave function w.r.t. the Bloch vector is then computedby means of a fourth\\-order finite difference stencil, in the spirit of Eqs. 96 and 97 of [\\[2]](#cite_note-nunes:prb:01-2). **Mind**: keep the WAVECAR and WAVEDER files, you're going to need them in the following.You might also want to keep a copy of the vasprun.xml\").  ```cp vasprun.xml vasprun_loptics.xml  ``` ### Including local field effects To determine the frequency dependent dielectric function including local field effects one needs the WAVECAR and WAVEDER files from the previous calculation (ALGO\\=Exact and LOPTICS\\=.TRUE., and sufficient virtual orbitals), and * INCAR (see INCAR.CHI)  ```# Frequency dependent dielectric tensor with and# without local field effects in RPA# N.B.: beware one first has to have done a# calculation with ALGO=Exact, LOPTICS=.TRUE.# and a reasonable number of virtual states (see above)ALGO = CHI # be sure to take the same number of bands as for# the LOPTICS=.TRUE. calculation, otherwise the# WAVEDER file is not read correctlyNBANDS = 64 ISMEAR =  0SIGMA  =  0.01EDIFF  = 1.E-8 LWAVE = .FALSE.LCHARG= .FALSE.  ```   Information concerning the dielectric function in the independent\\-particle picture is written after the line  ```HEAD OF MICROSCOPIC DIELECTRIC TENSOR (INDEPENDENT PARTICLE)  ``` in the OUTCAR file. Per default, for ALGO\\=*CHI*, local field effects are included at the level of the RPA (LRPA\\=*.TRUE.*), i.e., limited to Hartree contributions only. See the information after  ```INVERSE MACROSCOPIC DIELECTRIC TENSOR (including local field effects in RPA (Hartree))  ``` in the OUTCAR file. To include local field effects beyond the RPA, i.e., contributions from DFT exchange and correlation, one has to specify  ```LRPA=.FALSE.  ``` in the INCAR file. In this case look at the output after  ```INVERSE MACROSCOPIC DIELECTRIC TENSOR (test charge-test charge, local field effects in DFT)  ``` in the OUTCAR file. The following bash\\-script (plotchi) uses *awk* to extract the frequency dependent dielectric constant, bothin the independent\\-particle picture as well as including local field effects (either in DFT or in the RPA) and plots the real and imaginary components using *gnuplot*:  ```awk 'BEGIN{i=1} /HEAD OF MICRO/,\\                /XI_LOCAL/ \\                 {if ($4==\"dielectric\") {a[i]=$1\u00a0; b[i]=$2\u00a0; c[i]=$3\u00a0; i=i+1}} \\     END{for (j=1;j<i;j++) print a[j],b[j],c[j]}' OUTCAR > chi0.dat awk 'BEGIN{i=1} /INVERSE MACRO/,\\                /XI_TO_W/ \\                 {if ($4==\"dielectric\") {a[i]=$1\u00a0; b[i]=$2\u00a0; c[i]=$3\u00a0; i=i+1}} \\     END{for (j=1;j<i;j++) print a[j],b[j],c[j]}' OUTCAR > chi.datcat >plotfile<<!# set term postscript enhanced eps colour lw 2 \"Helvetica\" 20# set output \"optics.eps\" plot \"chi0.dat\" using (\\$1):(\\$2)  w lp lt -1 lw 2 pt 4 title \"chi0 real\", \\     \"chi0.dat\" using (\\$1):(-\\$3) w lp lt  0 lw 2 pt 4 title \"chi0 imag\", \\     \"chi.dat\"  using (\\$1):(\\$2)  w lp lt  1 lw 2 pt 2 title \"chi  real\", \\     \"chi.dat\"  using (\\$1):(-\\$3) w lp lt  0 lw 2 pt 2 lc 1 title \"chi  imag\" ! gnuplot -persist plotfile  ``` If you have kept a copy of the vasprun.xml\") of the LOPTICS\\=*.TRUE.* run (e.g., vasprun\\_loptics.xml), you might execute plotall to compare the dielectric functions computed with LOPTICS\\=*.TRUE.* and ALGO\\=*CHI*.  ```vasprun_LOPTICS=vasprun_loptics.xmlOUTCAR_CHI=OUTCAR awk 'BEGIN{i=1} /imag/,\\                /\\/imag/ \\                 {a[i]=$2\u00a0; b[i]=$3\u00a0; i=i+1} \\     END{for (j=12;j<i-3;j++) print a[j],b[j]}' $vasprun_LOPTICS > imag.dat awk 'BEGIN{i=1} /real/,\\                /\\/real/ \\                 {a[i]=$2\u00a0; b[i]=$3\u00a0; i=i+1} \\     END{for (j=12;j<i-3;j++) print a[j],b[j]}' $vasprun_LOPTICS > real.dat awk 'BEGIN{i=1} /HEAD OF MICRO/,\\                /XI_LOCAL/ \\                 {if ($4==\"dielectric\") {a[i]=$1\u00a0; b[i]=$2\u00a0; c[i]=$3\u00a0; i=i+1}} \\     END{for (j=1;j<i;j++) print a[j],b[j],c[j]}' $OUTCAR_CHI > chi0.dat awk 'BEGIN{i=1} /INVERSE MACRO/,\\                /XI_TO_W/ \\                 {if ($4==\"dielectric\") {a[i]=$1\u00a0; b[i]=$2\u00a0; c[i]=$3\u00a0; i=i+1}} \\     END{for (j=1;j<i;j++) print a[j],b[j],c[j]}' $OUTCAR_CHI > chi.dat cat >plotfile<<!# set term postscript enhanced eps colour lw 2 \"Helvetica\" 20# set output \"optics.eps\" plot \"chi0.dat\" using (\\$1):(\\$2)  w lp lt -1 lw 2 pt 4 title \"chi0 real\", \\     \"chi0.dat\" using (\\$1):(-\\$3) w lp lt  0 lw 2 pt 4 title \"chi0 imag\", \\     \"chi.dat\"  using (\\$1):(\\$2)  w lp lt  1 lw 2 pt 2 title \"chi  real\", \\     \"chi.dat\"  using (\\$1):(-\\$3) w lp lt  0 lw 2 pt 2 lc 1 title \"chi  imag\", \\     \"real.dat\"  using (\\$1):(\\$2) w l lt -1  title \"optics  real\", \\     \"imag.dat\"  using (\\$1):(-\\$2) w l lt  0 lc -1 title \"optics  imag\" ! gnuplot -persist plotfile  ``` Why are the dielectric functions in independent\\-particle picture from the LOPTICS\\=*.TRUE.* and the ALGO\\=*CHI* calculations different? Hints: * What CSHIFT is used in the ALGO\\=*CHI* calculation? Try redoing the LOPTICS\\=*.TRUE.* calculation with the same CSHIFT as VASP chose for the ALGO\\=*CHI* calculation (see INCAR.LOPTICS2\\):  ```CSHIFT=0.466  ``` * Redo the ALGO\\=*CHI* calculation with LSPECTRAL\\=*.FALSE.* in the ALGO\\=*CHI* calculation (see INCAR.CHI2\\). and compare the dielectric functions again. * The sample output (using a   6 \u00d7 6 \u00d7 6 {\\\\displaystyle 6\\\\times 6\\\\times 6}  mesh for the k points) should look like the following: [](File_Fig_dielectric_properties_SiC_2.html)"}
{"file_name": "PARCHG.ALLB.md", "content": "PARCHG is an output file created when partial charge densities are calculated by setting LPARD \\= .TRUE..The file has the same structure as the CHG file, containing the structure followed by the charge density on the fine FFT grid, but missing the augmentation occupancies that are written to CHGCAR. The units are also equivalent to CHG and CHGCAR. The partial density written to PARCHG is part of the valence electron density that was converged selfconsistently in a previous run. The bands and **k** points that contribute to the partial charges are selected by the IBAND, NBMOD, EINT and KPUSE tags, allowing for fine control of the contributions to the partial charge density. PARCHG.nb.nk files------------------ If LSEPB and/or LSEPK are set to .TRUE. variants of the PARCHG file are written, separating the contributing bands and **k** points respectively. The units and format of the files stay the same. * If `LSEPB = .TRUE.`, **PARCHG.nb.ALLK** files are written, where nb is an index over all bands contributing to the partial charge density. * If `LSEPK = .TRUE.`, **PARCHG.ALLB.nk** files are created, where nk runs over all **k** points in KPUSE or all **k** points if KPUSE is not set. * For `LSEPB = .TRUE.` and `LSEPK = .TRUE.`, all combinations are written to **PARCHG.nb.nk** files. Format------ The PARCHG consists of the following blocks: * Structure in POSCAR format* FFT\\-grid dimensions NGXF, NGYF, NGZF* Partial charge density times FFT\\-grid volume is written with multiple real numbers per line until all NGXF\\*NGYF\\*NGZF values of the block are written. The real\\-space mesh (NX,NY,NZ) is uniform and is spanned by the lattice vectors   a \u2192  ,  b \u2192  ,  c \u2192 {\\\\displaystyle {\\\\vec {a}},{\\\\vec {b}},{\\\\vec {c}}}  defined in the structure block. The coordinates of the mesh points can be restored via  (  N  x  ,  N  y  ,  N  z  )  \\= ^  N  x  \u2212 1  N  G X F  a  \\+  N  y  \u2212 1  N  G Y F  b  \\+  N  z  \u2212 1  N  G Z F  c {\\\\displaystyle (N\\_{x},N\\_{y},N\\_{z}){\\\\hat {\\=}}{\\\\frac {N\\_{x}\\-1}{N\\_{GXF}}}\\\\mathbf {a} \\+{\\\\frac {N\\_{y}\\-1}{N\\_{GYF}}}\\\\mathbf {b} \\+{\\\\frac {N\\_{z}\\-1}{N\\_{GZF}}}\\\\mathbf {c} }  .The dimensions can be increased by increasing the cutoff energy (ENCUT) or explicitly by setting the fine FFT\\-grid dimensions (NGXF, NGYF, NGZF). To arrange the data on the real\\-space grid in the unit cell, mind that the data runs fastest over NX and slowest over NZ. To be more explicit, the density is written using the following command in Fortran  `WRITE(IU,FORM) (((C(NX,NY,NZ),NX=1,NGXF),NY=1,NGYF),NZ=1,NGZF)` . | **Important:** Remember that the values must be divided by the FFT\\-grid volume and the cell volume to obtain the partial charge density     n ( r )   {\\\\displaystyle n(r)}   in units     1  /     \u00c5    3     {\\\\displaystyle 1/\\\\mathrm {\\\\AA} ^{3}}   ^{3}}. || --- | Hence,  n ( r ) \\= d a t a ( r )  /  (  V  g r i d  \u2217  V  c e l l  ) , {\\\\displaystyle n(r)\\=data(r)/(V\\_{grid}\\*V\\_{cell}),}  V  g r i d  \\=  N  G X F  \u2217  N  G Y F  \u2217  N  G Z F  , {\\\\displaystyle V\\_{grid}\\=N\\_{GXF}\\*N\\_{GYF}\\*N\\_{GZF},}  V  c e l l  \\=  \\|  a  \u22c5 (  b  \u00d7  c  )  \\| {\\\\displaystyle V\\_{cell}\\=\\|\\\\mathbf {a} \\\\cdot (\\\\mathbf {b} \\\\times \\\\mathbf {c} )\\|}  ,where   n ( r ) {\\\\displaystyle n(r)}  is the partial charge density in units 1/\u00c5  3 {\\\\displaystyle ^{3}}  . ### Spin\\-polarized calculation In spin\\-polarized calculations, two data sets are stored in the PARCHG file.The first set contains the total partial density (spin up \\+ spin down), and the second is the magnetization density (spin up \\- spin down). Each block is separated by a blank line and a line containing the fine FFT grid dimensions NGXF NGYF NGZF. * Structure* FFT\\-grid dimensions* Partial charge density times FFT\\-grid volume (spin up \\+ spin down)* FFT\\-grid dimensions* Partial magnetization density (spin up \\- spin down)"}
{"file_name": "VCA.md", "content": "VCA= \\[real array]   Default: **VCA** \\= read from the POTCAR filenDescription: VCA is short for the virtual crystal approximation; the tag allows to \"weight\" each species found in the POTCAR file.  --- The tag VCA must be supplied for each atom type or species found in the POTCAR and POSCAR file, respectively. It weights the corresponding POTCAR files according to the values given in the INCAR file, with the defaultbeing 1\\. For instance, the formal valency found in the POTCAR files is multiplied by the supplied values. Likewise, the local potential,the augmentation charges, and the non\\-local pseudopotential strength parameters are scaled by the supplied values.  It is possible to use this flag to perform calculations in the framework of the virtual crystal approximation.Say you want to simulate Sn doping in a Ge lattice. This can be achieved using a POTCAR file with a Ge and Sn data set and the followingPOSCAR file:  ``` cd:  1.00000000000000    2.82173    2.82173    0.00000    0.00000    2.82173    2.82173    2.82173    0.00000    2.82173  Ge   Sn    2     2Direct 0.00  0.00  0.00 0.25  0.25  0.25 0.00  0.00  0.00 0.25  0.25  0.25  ``` If VCA is set to   ``` VCA = 0.99 0.01  ``` the Ge atoms are weighted with a weight of 0\\.99, whereas the Sn atoms are weighted by 0\\.01 (see [\\[1]](#cite_note-eckhardt:prb:2014-1) for an example application).The implementation in VASP closely follows the methodology suggested by Bellaiche and Vanderbilt [\\[2]](#cite_note-bellaiche:prb:2000-2). Caveats: Unfortunately, results of this kind of VCA calculations are often not very reliable. The problems are even apparent in the original publications [\\[2]](#cite_note-bellaiche:prb:2000-2). Thekey point is that the used PAW potentials need to be constructed so that the pseudo atomic waves are very similar for the potentials that are \"mixed\" (in the example above, this would be the Ge and Sn potentials). This can be achieved by carefully optimizing the radial cutoffs. Furthermore, the local potentials of the two POTCAR files need to be very similar. This means that results for many standard potentials are not accurate. For instance, Vegard's law is often not even approximately observed (instead, the volume is too large at 50\u00a0% mixing). The problem is particularly severe if semi\\-core states are treated as valence states. For instance, for the Ge and Sn alloy, the d electrons had to be treated as core electrons to obtain reasonable results. Any attempts to treat the d electrons as valence states lead to grossly incorrect results. **Mind:** This tag is currently not supported in combination with IBRION \\= 5\\-8 for computing second derivatives, Hessian matrices, and phonon frequencies."}
{"file_name": "HFALPHA.md", "content": "HFALPHA= \\[real]n| Default: **HFALPHA** | \\= 6/sqrt(ENMAX)/(2\u03c0) | if HFRCUT is 0 || --- | --- | --- | Description: HFALPHA sets the decay constant used in the method of Massida, Posternak, and Baldereschi, which is activated by HFRCUT\\=0\\.  --- HFALPHA sets the decay constant in the error\\-function\\-like charge distribution for the method of Massida, Posternak, and Baldereschi[\\[1]](#cite_note-massidda:prb:93-1). The error\\-function\\-like charge distribution is used to calculate the difference between the isolated probe charge and the periodically repeated probe charge in a homogenous background. The default for HFALPHA is 6/sqrt(ENMAX)/(2\u03c0) in atomic units. This usually yields robust and accurate results in the range of meV compared to the Ewald summation used for a regular k\\-mesh. This is the default approach used to implement the convergence corrections of the Coulomb singularity in Hartree\\-Fock calculations. This does not work correctly for bandstructure calculations using the 0\\-weight scheme or KPOINTS\\_OPT because the correction is only applied for points in the regular grid. To overcome this problem we recommend using the Coulomb truncation methods using HFRCUT."}
{"file_name": "Nonlocal_van_der_Waals_density_functionals.md", "content": "The vdW\\-DF method originally proposed by Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1) consists of a semilocal exchange\\-correlation functional that is augmented with a nonlocal correlation functional   E c,disp {\\\\displaystyle E\\_{\\\\text{c,disp}}}  that approximately accounts for dispersion interactions. In VASP, the nonlocal functional is implemented using the algorithm of Rom\u00e1n\\-P\u00e9rez and Soler[\\[2]](#cite_note-romanperez:prl:09-2) that is based on FFTs and the convolution theorem to calculate efficiently the double real\\-space integral. Several versions of the vdW\\-DF functionals proposed in the literature can be used (see list below). The vdW\\-DF functionals are available since the 5\\.2\\.12\\.26May2011 version of VASP for the calculation of total energies and forces. The stress tensor calculation for the cell optimization (ISIF\\=3\\) is available since the VASP 5\\.2\\.12\\.11Nov2011 version for spin\\-unpolarized systems and VASP 5\\.3\\.1 for spin\\-polarized systems. They have been implemented by J. Klime\u0161. If you make use of the vdW\\-DF functionals presented in this section, we ask you to cite Ref. [\\[3]](#cite_note-klimes:prb:2011-3). Please also cite the original vdW\\-DF paper of Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1) and the paper of Rom\u00e1n\\-P\u00e9rez and Soler[\\[2]](#cite_note-romanperez:prl:09-2).  In versions of VASP prior to 6\\.4\\.0, a meta\\-GGA functional (e.g., SCAN) could be combined only with the rVV10 nonlocal functional. Conversely, a GGA functional could be combined only with the original nonlocal functional of Dion *et al.*. This restriction is lifted since VASP.6\\.4\\.0 thanks to the introduction of the IVDW\\_NL tag. Since VASP.6\\.4\\.0, the spin\\-polarized formulation of the nonlocal vdW correlation term[\\[4]](#cite_note-thonhauser:prl:2015-4) is available. It can be switched on with the logical tag LSPIN\\_VDW (.FALSE. by default), however its use is limited to the the functional of Dion *et al.* (not available for rVV10\\) and only when the nonlocal term is combined with a GGA functional. In other cases (and in prior versions of VASP), the nonlocal correlation functional is evaluated with the sum of the spin\\-up and spin\\-down electron densities. An overview of the performance of the vdW\\-DF functionals can be found for instance in Ref. [\\[3]](#cite_note-klimes:prb:2011-3)[\\[5]](#cite_note-berland:rpp:2015-5)[\\[6]](#cite_note-tran:prm:19-6). List of nonlocal vdW\\-DF functionals------------------------------------ * To add a nonlocal correlation energy   E c,disp {\\\\displaystyle E\\_{\\\\text{c,disp}}}  to the semilocal exchange\\-correlation energy (selected with the GGA, METAGGA or XC tag) one needs to set LUSE\\_VDW\\=.TRUE. in the INCAR file. * Since vdW\\-DF functionals tend to yield less spherical densities than standard GGA functionals, it is recommended to set LASPH\\=.TRUE. to get reasonably accurate contributions from the spheres around the atoms.   | **Important:*** For **VASP.6\\.4\\.2** and prior versions it was necessary to copy the vdw\\_kernel.bindat file into the working directory for calculations with the van der Waals kernel corresponding to IVDW\\_NL\\=1\\. Otherwise, vdw\\_kernel.bindat was generated at the beginning of the calculation, which took several hours. However, since **VASP.6\\.4\\.3** it is not really necessary to copy vdw\\_kernel.bindat into the directory, since its calculation has been considerably accelerated (about 2 minutes with 8 MPI ranks). More details are given below. Note that no vdw\\_kernel.bindat file is needed for calculations with the rVV10 kernel (IVDW\\_NL\\=2\\). || --- | Examples of INCAR files are shown below. * Original vdW\\-DF of Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1):  ```GGA       = REAGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * vdW\\-DF2 of Lee *et al.* (2nd version of vdW\\-DF)[\\[7]](#cite_note-lee:prb:2010-7):  ```GGA       = MLAGGAC     = 0.0LUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ``` * optPBE\\-vdW of Klime\u0161 *et al.*[\\[8]](#cite_note-klimes:jpcm:2010-8):  ```GGA       = ORAGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * optB88\\-vdW of Klime\u0161 *et al.*[\\[8]](#cite_note-klimes:jpcm:2010-8):  ```GGA       = BOPARAM1    = 0.1833333333PARAM2    = 0.22AGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * optB86b\\-vdW of Klime\u0161 *et al.*[\\[3]](#cite_note-klimes:prb:2011-3):  ```GGA       = MKPARAM1    = 0.1234 PARAM2    = 1.0AGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * BEEF\\-vdW of Wellendorff *et al.*[\\[9]](#cite_note-beef2012-9):  ```GGA       = BFLUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ```  or  ```GGA       = LIBXCLIBXC1    = GGA_XC_BEEFVDWLUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ``` Note that the GGA functional BEEF[\\[9]](#cite_note-beef2012-9) is available only via an external library, either libbeef (\\-Dlibbeef) or Libxc (\\-DUSELIBXC). * rev\\-vdW\\-DF2 (also known as vdW\\-DF2\\-B86R) of Hamada[\\[10]](#cite_note-hamada:prb:14-10):  ```GGA       = MKPARAM1    = 0.1234568 # =10/81PARAM2    = 0.7114AGGAC     = 0.0LUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ``` In the vdW\\-DF2, BEEF\\-vdW and rev\\-vdW\\-DF2 functionals, the nonlocal correlation consists of the Dion *et al.* functional, but with the parameter   Z  a b {\\\\displaystyle Z\\_{ab}}  that is changed from \\-0\\.8491 (the default value in VASP) to \\-1\\.8867 by setting ZAB\\_VDW\\=\\-1\\.8867\\. * vdW\\-DF\\-cx of Berland and Hyldgaard[\\[11]](#cite_note-berland:prb:2015-11):  ```GGA       = CXAGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * vdW\\-DF3\\-opt1 of Chakraborty *et al.* [\\[12]](#cite_note-chakraborty:jctc:2020-12):  ```GGA       = BOPARAM1    = 0.1122334456PARAM2    = 0.1234568 # =10/81AGGAC     = 0.0LUSE_VDW  = .TRUE.IVDW_NL   = 3ALPHA_VDW = 0.94950 # default for IVDW_NL=3 but can be overwritten by this tagGAMMA_VDW = 1.12    # default for IVDW_NL=3 but can be overwritten by this tagLASPH     = .TRUE.  ``` * vdW\\-DF3\\-opt2 of Chakraborty *et al.* [\\[12]](#cite_note-chakraborty:jctc:2020-12):  ```GGA       = MKPARAM1    = 0.1234568 # =10/81PARAM2    = 0.58AGGAC     = 0.0LUSE_VDW  = .TRUE.IVDW_NL   = 4ZAB_VDW   = -1.8867 # the default is -0.8491ALPHA_VDW = 0.28248 # default for IVDW_NL=4 but can be overwritten by this tagGAMMA_VDW = 1.29    # default for IVDW_NL=4 but can be overwritten by this tagLASPH     = .TRUE.  ``` * rVV10 of Sabatini *et al.* [\\[13]](#cite_note-sabatini:prb:2013-13):  ```GGA       = MLLUSE_VDW  = .TRUE.IVDW_NL   = 2BPARAM    = 6.3     # default but can be overwritten by this tagCPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ``` * SCAN\\+rVV10 of Peng *et al.* [\\[14]](#cite_note-peng:prx:2016-14):  ```METAGGA   = SCANLUSE_VDW  = .TRUE.BPARAM    = 15.7    # the default value is 6.3CPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ``` * PBE\\+rVV10L of Peng and Perdew [\\[15]](#cite_note-peng:prb:2017-15):  ```GGA       = PELUSE_VDW  = .TRUE.BPARAM    = 10      # the default value is 6.3CPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ```  * r  2 {\\\\displaystyle ^{2}} SCAN\\+rVV10 of Ning *et al.* [\\[16]](#cite_note-ning:prb:2022-16):  ```METAGGA   = R2SCANLUSE_VDW  = .TRUE.BPARAM    = 11.95   # the default value is 6.3CPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ``` Important technical remarks--------------------------- * Kernel file vdw\\_kernel.bindat:\t+ **Until VASP.6\\.4\\.2**: The calculation of the nonlocal correlation functional of Dion *et al.* (used when IVDW\\_NL\\=1, which means for all functionals listed above except rVV10, SCAN\\+rVV10 and r       2    \t{\\\\displaystyle ^{2}} \tSCAN\\+rVV10\\) requires a precalculated kernel which is distributed via the VASP download portal (vdw\\_kernel.bindat.gz has to be decompressed). If VASP does not find this file, the kernel is calculated, which is however extremely demanding (several hours!). Thus, the kernel needs to be either copied to the VASP run directory for each calculation or can be stored in a central location and read from there. The location needs to be set in routine *PHI\\_GENERATE*. This does not work on some clusters and the kernel needs to be copied into the working directory in such cases. The distributed file uses little endian convention and can not be read on big endian machines. The big endian version of the file is available also from the VASP portal. In the case of the rVV10 nonlocal correlation functional, no precalculated kernel is required and it is calculated on the fly, which is however much less demanding than in the case of the functional of Dion *et al.*.\t+ **Since VASP.6\\.4\\.3**: The calculation of the kernel for the functional of Dion *et al.* (IVDW\\_NL\\=1\\), as well as for IVDW\\_NL\\=3 and 4, is tremendously faster: the default value of a parameter has been reduced (with basically no loss of accuracy) and the calculation has been parallelized (with MPI and OpenACC for GPUs). Therefore, starting a calculation without vdw\\_kernel.bindat file present in the directory should be no problem for the computational time, and a vdw\\_kernel.bindat file will be generated rather efficiently during the first iteration. Note that a file vdw\\_kernel.bindat that was generated for a given kernel (IVDW\\_NL\\=1, 3 or 4\\) can not be used for a calculation using another kernel, and in such a case the incompatibility of the vdw\\_kernel.bindat file will be detected and a new vdw\\_kernel.bindat file automatically generated to replace the incompatible one. * There are no special POTCAR files for the vdW\\-DF functionals and the PBE or LDA POTCAR files can be used. Currently the evaluation of the nonlocal correlation functional is not done fully within the PAW method, but the sum of the pseudo\\-valence density and partial core density is used. This approximation works rather well, as is discussed in [\\[3]](#cite_note-klimes:prb:2011-3), and the accuracy generally increases when the number of valence electrons is increased or when harder PAW datasets are used. For example, for adsorption it is recommended to compare the adsorption energy obtained with standard PAW datasets and more\\-electron POTCAR files for both PBE calculations and vdW\\-DF calculations to assess the quality of the results. * The evaluation of the nonlocal correlation energy requires some additional time. Most of it is spent on performing FFTs to evaluate the energy and potential. Thus the additional time is determined by the number of FFT grid points, basically the size of the simulation cell. It is almost independent on the number of the atoms in the cell, but increases with the amount of vacuum in the cell. The relative increase is high for isolated molecules in large cells, but small for solids in smaller cells with many k\\-points.   | **Mind:*** In VASP.6\\.2 (and prior versions) the stress tensor is broken for rVV10 (it is correct for other vdW\\-DF though). From VASP.6\\.3\\.0 onwards, the stress tensor for rVV10 is correct. || --- | Related Tags and Sections------------------------- LUSE\\_VDW, IVDW\\_NL, LSPIN\\_VDW, ZAB\\_VDW, ALPHA\\_VDW, GAMMA\\_VDW, BPARAM, CPARAM, GGA, AGGAC, PARAM1, PARAM2, METAGGA See also the alternative atom\\-pairwise and many\\-body dispersion methods: IVDW"}
{"file_name": "LWRITE_SPN.md", "content": "LWRITE\\_SPN= .TRUE. \\| .FALSE.   Default: **LWRITE\\_SPN** \\= .FALSE.nDescription: Write **wannier90\\.spn** file for noncollinear calculations.  --- For noncollinear calculations (LNONCOLLINEAR\\=T using vasp\\_ncl) the **wannier90\\.spn** file is written when   ``` LWANNIER90=T\u00a0! switch on Wannier90 interface  LWRITE_SPN=T   ``` The file is formatted, and the appropriate line (`spn_formatted = .true.`) is automatically added to the **wannier90\\.win** file. | **Warning:** Only the default setting for SAXIS is supported. || --- | | **Mind:** Available for VASP version \\> 6\\.4\\.2\\. || --- |"}
{"file_name": "Machine_learning_force_field_calculations__Basics.md", "content": "The machine\\-learned force fields (MLFF) feature of VASP allows you to generate, improve, modify and apply force fields based on machine learning techniques for your system of interest. Although there are many tunable parameters, i.e. MLFF\\-related INCAR tags, the default values have been carefully selected to simplify the initial creation of an MLFF. Hence, we hope that only minimal additional effort is required to get started with this feature. Nevertheless, because machine learning involves multiple steps, e.g., at a minimum separate training and application stages, this page tries to explain the basic tags controlling the corresponding modes of operation. If you are already familiar with the basic usage of the MLFF feature, you may want to have a closer look at the best practices page which offers more in\\-depth advice for tuning MLFF settings. If you need more information about the theory and algorithms please visit the MLFF theory page. Step\\-by\\-step instructions--------------------------- On\\-the\\-fly training is based on molecular\\-dynamics (MD) simulations to sample training structures. Piece by piece a data set is automatically assembled and used to generate an MLFF whenever feasible. Conversely, at each time step the current force field predicts energy, forces and the corresponding Bayesian error estimations. Simply put, if the error is above a certain threshold another ab\\-initio calculation is performed and the reference energy and forces are added to the training data set. In the opposite case, the ab\\-initio step is omitted and the system is propagated via MLFF predictions. As the force field gets better along the trajectory many ab\\-initio steps can be avoided and the MD simulation is significantly accelerated. Ultimately, the on\\-the\\-fly training results in an MLFF which is ready for production, i.e., running an MD simulation in prediction\\-only mode. The following steps outline the path from start to production run:  **Step 1: Prepare a molecular dynamics run**  Prepare an ab\\-initio MD run with your desired POSCAR starting configuration and an appropriate setup in INCAR, KPOINTS and POTCAR files.  **Step 2: Start on\\-the\\-fly training from scratch**  The MLFF method can be configured with a lot of INCAR tags which are easily recognized from their prefix `ML_`. In general, to enable any MLFF feature the following INCAR tag needs to be set:  ```ML_LMLFF = .TRUE.  ``` If this tag is not set to `.TRUE.` other MLFF\\-related INCAR tags are completely ignored and VASP will perform regular ab\\-initio calculations. Furthermore, to start on\\-the\\-fly training we additionally need to set the ML\\_MODE \"super\"\\-tag:  ```ML_MODE = train  ``` When executed in this `train` mode VASP will automatically perform ab\\-initio calculation whenever necessary and otherwise rely on the predictions of the MLFF. The usual output files, e.g., OUTCAR, XDATCAR, will be created along the MD trajectory. In addition, MLFF\\-related files will be written to disk, the most important ones being: * ML\\_LOGFILE The log file for all MLFF\\-related details; training status, current errors and other important quantities can be extracted from here.* ML\\_ABN This file contains the collected training structures and a list of selected local reference configurations.* ML\\_FFN A binary file containing the current MLFF. All three files are repeatedly updated during the MD simulation. After NSW time steps are carried out the ML\\_ABN and ML\\_FFN file contain the complete training data set and the final MLFF, respectively. Training errors can be found in ML\\_LOGFILE by searching for lines starting with `ERR`.  **Step 3 (optional): Continue on\\-the\\-fly training from existing training database**  In principle, step 2 above may yield a force field ready for further processing and application. However, most of the time additional on\\-the\\-fly training iterations are necessary. For example, to extend the training database with structures at higher temperatures or different densities. Or, a force field is required to capture different atom type compositions or phases, e.g., a liquid and multiple solid phases. This can be achieved by on\\-the\\-fly continuation runs: at the beginning a force field is generated from the previous training data and \\- if applicable \\- used for predictions in the MD run. Like in step 2, the force field is trained along the trajectory. However, it also retains its applicability to the structures of the previous on\\-the\\-fly run. Finally, the continuation training will result in an MLFF capable of predicting structures of both runs. To continue on\\-the\\-fly training first set up your new starting POSCAR structure, e.g., by copying from the CONTCAR file. The new structure may share some atom types with the previous run but this is not a requirement. It is also possible to continue training with completely different atom types in the POSCAR file (remember to set up your POTCAR accordingly). The only other action required is to copy the existing database to the ML\\_AB file:  ```cp ML_ABN ML_AB  ``` Leave `ML_MODE = train` unchanged and restart VASP. The log file will contain a section describing the existing data set and after initial generation of a force field the regular on\\-the\\-fly procedure continues. In the end, the resulting ML\\_ABN will contain the training structures from both on\\-the\\-fly runs. Similarly, the ML\\_FFN file is a combined force field. In the presence of an ML\\_AB file the `train` mode will always perform a continuation run. If you would like to start from scratch just remove the ML\\_AB file from the execution directory.  | **Tip:** Apply this strategy repeatedly in order to systematically improve your MLFF, e.g., first train on water only, then on sodium chloride and finally, train on the combination of both. || --- |  **Step 4: Refit for fast prediction mode**  When on\\-the\\-fly training succeeded and the result matches your expectations with respect to applicability and residual errors there is one final step required before the force field should be applied in prediction\\-only MD runs: refitting for fast prediction mode. Copy once again the final data set to ML\\_AB:  ```cp ML_ABN ML_AB  ``` Also, set in the INCAR file:  ```ML_MODE = refit  ``` Running VASP will create a new ML\\_FFN which finally can be used for production.  | **Important:** Although it is technically possible to continue directly with step 5 given a ML\\_FFN file from steps 2 or 3 it is strongly discouraged. Without the refitting step VASP cannot enable the fast prediction mode which comes with speedup factor of approximately 20 to 100\\. You can check the ML\\_FFN ASCII header to be sure whether the contained force field supports fast prediction. || --- |  **Step 5: Applying the machine\\-learned force field in production runs**  The MLFF obtained from step 4 is now ready to be applied in the prediction\\-only mode. First, copy the ML\\_FFN file:  ```cp ML_FFN ML_FF  ``` In the INCAR file set  ```ML_MODE = run  ``` With this choice VASP will only use the predictions from the MLFF, no ab\\-initio calculations are performed. The execution time per time step will be orders of magnitude lower if compared with corresponding ab\\-initio runs.  | **Tip:** The MLFF can be transferred to larger system sizes, i.e., you may duplicate your simulation box to benefit from improved statistics. Because the method scales linearly with the number of atoms you can easily estimate the impact on computational demand. || --- | | **Warning:** Please have a look at a known issue (from date 2023\\-05\\-17\\) if you intend to use triclinic geometries with small or large lattice angles. || --- | Advice------ On\\-the\\-fly learning can be significantly more involved than, e.g., a single\\-point electronic calculation, because it combines multiple features of VASP. Each part requires a proper setup via the available INCAR tags. A misconfiguration corresponding to one part of the calculation may have severe effects on the quality of the resulting MLFF. In the worst case, successful training may even be impossible. To be more specific, on\\-the\\-fly learning requires control over the following aspects: * **Consistent convergence** It is required that all ab\\-initio reference data collected via on\\-the\\-fly training is consistent and well\\-converged with respect to the single\\-point electronic calculation setup. Mind different temperatures and densities targeted in MD runs. A MLFF can only reproduce a single potential energy landscape!* **Correct setup of molecular dynamics simulations** Consider the choice of thermodynamic ensembles, thermostat and barostat settings and an appropriate time step.* **Proper setup of machine\\-learned force field parameters** Mind system\\-dependent parameters like the cutoff radius or atomic environment descriptor resolution.* **Control over data set generation via on\\-the\\-fly learning** Monitor and control how much ab\\-initio reference data is harvested via automatic Bayesian threshold determination and sparsification.* **Quality control** Establish reasonable expectations regarding residual training errors. Benchmark the quality of resulting force fields by comparison of predictions with known quantities (from ab\\-initio). | **Tip:** Begin by thoroughly familiarizing yourself with pure ab\\-initio calculations for your system before attempting to generate a MLFF from scratch. Once you are confident in controlling the convergence, proceed to run a brief MD simulation without machine learning assistance. Validate whether the results align with expected values regarding conservation principles and so forth. Only then, move forward with the machine learning aspects of the calculation. || --- | Parallelization--------------- At present, VASP provides only MPI\\-based parallelization for the MLFF feature. Therefore, any operational mode relying exclusively on MLFF code \\- such as predictive MD simulations (ML\\_MODE \\= `run`) and local reference configuration selection (ML\\_MODE \\= `select`) \\- cannot leverage alternative forms of parallelization like OpenACC offloading to GPUs or an MPI/OpenMP hybrid approach. Conversely, a usual on\\-the\\-fly training involves both MLFF generation and ab\\-initio computations. When the latter component predominates in terms of computational demand, utilizing non\\-MPI parallelization remains practical."}
{"file_name": "ML_RCOUPLE.md", "content": "ML\\_RCOUPLE= \\[real]   Default: **ML\\_RCOUPLE** \\= 1\\.0nDescription: This tag specifies the value of the coupling parameter for the calculation of the chemical potential within the machine learning force field method.  --- For thermodynamic integration calculations please have a look at the tag ML\\_LCOUPLE."}
{"file_name": "Nucleophile_Substitution_CH3Cl_-_Standard_MD.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- The main task of this example is to learn how to monitor distances on the example of a nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl. Input----- ### POSCAR  ```CH3Cl                                            1.00000000000000         12.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000   12.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000   12.0000000000000000 C H Cl   1   3   2cart         5.91331371  7.11364924  5.78037960         5.81982231  8.15982106  5.46969017         4.92222130  6.65954232  5.88978969         6.47810398  7.03808479  6.71586385         4.32824726  8.75151396  7.80743202         6.84157897  6.18713289  4.46842049  ``` * The starting POSCAR file for this example can be found under POSCAR.init. It will be needed for the script that runs the job (run.sh).* A sufficiently large cell is chosen to minimize the interactions between neighbouring cells and hence to simulate an isolated molecular reaction. ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=1000                                           # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # metaDynamics with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probability##############################################################################  ``` * Molecular dynamics are switched on by the tag IBRION\\=0\\.* The metadynamics tag MDALGO\\=11 is only used to monitor the two C\\-Cl distances defined in the ICONST file.* Simulations are carried out in the NVT ensemble at approximately room temperature (TEBEG\\=300\\) and the Andersen thermostat is used for the temperature control. The strength of the coupling is controlled by the collision probability ANDERSEN\\_PROB\\=0\\.10\\.* The accuracy of this calculation is kept low (PREC\\=Low and ALGO\\=VeryFast), which is completely sufficient for this tutorial. For more quantitative results this tags should be investigated (of course at the cost of higher computational demand).* A charged system (due to the \"incoming\" Cl\\-) is simulated, so the number of electrons is raised by one compared to the neutral system (NELECT\\=22\\). To compensate for the charge a positive homogeneous background charge is assumed.* Although very light atoms are present in the structure (hydrogen) a time step of 1 fs (POTIM\\=1\\) is safe to use. This can be achieved by setting the mass of hydrogen to that of tritium (look for the line \"POMASS \\= 3\\.016\" in the POTCAR file). This is unproblematic since the free energy is independent of the mass of atoms. ### ICONST For this example an ICONST file is used which looks like:  ```R 1 5 0R 1 6 0S 1 -1 7  ``` * First line: This line selects the interatomic distance (R) between the first (C) and the fifth atom (Cl) in the POSCAR file. The 0 at the fourth entry would usually specify that the distances are constrained but if the coordinates are used later for special coordinates the constraining is not applied (for further information see ICONST).* Second line: Same as the first line but interatomic distance between the first (C) and the sixth atom (Cl) in the POSCAR file is selected.* Third line: This line selects a linear combination (option S) of the first two coordinates where the second and fourth column specify the coefficients of the coordinates. The setting of 1 and \\-1 corresponds to the difference between both. The 7 at the fourth entry specifies that difference between these two distances is monitored but no constraints are applied. Calculation----------- A parameter that approximates the reaction coordinate, the difference between two C\\-Cl distances, will be monitored. Expected values for reactant:   \u2248 1  \u00c5 {\\\\displaystyle \\\\approx 1\\\\mathrm {\\\\AA} } , for product:    \u2212 1  \u00c5 {\\\\displaystyle \\~\\-1\\\\mathrm {\\\\AA} } , for transition state:   0  \u00c5 {\\\\displaystyle 0\\\\mathrm {\\\\AA} }  . ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD.For practical reasons, we split our (pressumably long) molecular dynamics calculation into shorter runs of lengths of 1000 fs (NSW\\=1000 and POTIM\\=1\\). At the end of each run the CONTCAR file is copied to the POSCAR so that the simulation continues in a seamless manner. All of this is done by the script *run* provided with this example:  ```#!/bin/bash runvasp=\"mpirun -np 8 executable_path/vasp_gam\" # make sure to always start with the same structurecp POSCAR.init POSCAR  i=1 while [ $i -le 50 ]  do  # start vasp  $runvasp   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` After the execution we should obtain 50 output files. Each contains a 1000 fs run totalling to a trajectory of 50 ps. It should be mentioned that this can take several hours on 8 cores so if the user has only limited time and resources available or is only interested to learn the execution of this example the number of runs (line \"\\[ $i \\-le 50 ]\") can be changed from 50 to a smaller value. Also the number of timesteps per run can be lowered (NSW). ### Time evolution of distance * The monitored value of the distance between the two Cl\\- ions defined in the ICONST file is written for each molecular dynamics run to the REPORT file written as \"mc \\= ...\". The time evolution function of this variable is monitored using the script timeEv.sh:  ```#!/bin/bash  if test -f \"timeEvol.dat\"; then   rm timeEvol.dat fi  i=1while [ $i -le 1000 ] do   if test -f REPORT.$i   then     grep mc REPORT.$i |awk '{print $3 }' >>timeEvol.dat fi   let i=i+1done  ``` To execute this script type:  ```bash timeEv.sh  ``` It creates a file \"timeEvol.dat\" holding the value for the collective variable at every molecular dynamics step.   * After that the task is to get a histogram (or probability distribution) of the data. The user should try to write a script for itself. Otherwise the script *probability\\_distribution\\_function.py* can be used:  ```#!/usr/bin/python import sysimport reimport math #setting grid for histogramxmin=0.0xmax=5.0nx=500dx=(xmax-xmin)/nxhistogram=[0.0 for j in range(0,nx)]readfile = open(\"timeEvol.dat\",\"r\")line=readfile.readline() z=0ymin=0.0ymax=0.0#loop over lines in file timeEvol.datwhile (line):  z=z+1  line.strip()  line=re.sub('^',' ',line)  y=line.split()  if (z==1):     ymin=float(y[0])     ymax=float(y[0])  #calculate min max value for normalization  if (ymin>float(y[0])):     ymin=float(y[0])  if (ymax<float(y[0])):     ymax=float(y[0])  #calculate index of argument  ix=int(float(y[0])/float(dx)+0.5)  #check for segmentation fault  if (ix>=0 and ix<nx):     histogram[ix]=histogram[ix]+1.0  line=readfile.readline()readfile.close#normalizing and printing histogramnorm=z*(abs(xmax-xmin))/nxfor ix in range(0,nx):   x=xmin+ix*dx   pair_cor=histogram[ix]/norm   print x, pair_cor  ``` To execute this script type:  ```python probability_distribution_function.py > histogram_600K.dat  ``` To plot the histogram the user should use his favourite program. Alternatively the histogram is plotted using gnuplot:  ```gnuplot -e \"set terminal jpeg; set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'histogram_600K.dat'\" > histogram_600K.jpg  ``` The obtained histogram should look like the following: [](File_Histogram_600K.html) * The user should also calculate the mean value and variance of the Cl\\-\\-Cl\\- distance. It is recommended to the user to try to write an own script/program doing that. Otherwise the script *average\\_and\\_standard\\_deviation.py* can be used:  ```#!/usr/bin/python import sysimport reimport math data=[]readfile = open(\"timeEvol.dat\",\"r\")line=readfile.readline() z=0mean=0.0standard_deviation=0.0#loop over lines in file timeEvol.datwhile (line):  z=z+1  line.strip()  line=re.sub('^',' ',line)  y=line.split()  #calculate mean  mean=mean+float(y[0])  #save data for later  data.append(float(y[0]))  line=readfile.readline()readfile.close#calculate meanmean=mean/z#calculate for y in data:   standard_deviation=standard_deviation+(y-mean)**2.0standard_deviation=(standard_deviation/z)**0.5print \"Mean\u00a0:\",meanprint \"Standard devation\u00a0:\",standard_deviation  ``` To execute this script type:  ```python average_and_standard_deviation.py  ``` The calculated mean value and standard deviation should be around 1\\.5986   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  and 0\\.3403   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . **Exercise: Did the Cl\\- ever visit the product's region during this MD?** ### Higher temperature \\- 1000 K After that we rerun the calculation at 1000 K and perform the same analysis steps as above. We should obtain a histogram at 1000 K that looks like the following: [](File_Histogram_1000K.html) The calculated mean value and standard deviation should be around 2\\.01023596   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  and 0\\.664687047095   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . **Exercise: Explain the difference at higher temperature!** Download--------  CH3Cl\\_standard\\_Molecular\\_Dynamics.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "Plot_BSE_fatbands.md", "content": "It can be useful to inspect which electron\\-hole pairs or transitions contribute the most to a particular exciton [\\[1]](#cite_note-bokdam:scr:2016-1). In VASP it is possible to write the lowest NBSEEIG eigenvectors into the BSEFATBAND file, which can be used for making a fatband structure plot. For example, a fatband structure plot for the first bright exciton can be made following these steps: 1. Perform a BSE calculation with NBSEEIG sufficiently large to include the exciton of interest.2. Find the energy of the first bright exciton in vasprun.xml\"), i.e., the first transition with non\\-zero oscillator strength (*\\<varray name\\=\"opticaltransitions\" \\>*)3. Find the BSE eigenvector corresponding to this transition in the BSEFATBAND file.4. Extract the coupling coefficients *Abs(X\\_BSE)* (Column 6\\) and energies (Column 4 and 5\\) corresponding to k points (Columns 1\\-3\\) along high\\-symmetry paths.5. Plot the band structure with point size corresponding to the coupling coefficients Abs(X\\_BSE), i.e.,  ```|k-point|     hole        electron       Abs(X_BSE)           eigenvalue    eigenvalue    x          y1            y2        circle radius  ``` You can use the following script for extracting the *NBSE* eigenvector along G\\-L and G\\-X directions in Si:  ```#!/bin/bash#Select the BSE eigenvector of interest.NBSE=1 # The BSE product basis size.BSIZE=$(head -n 1 BSEFATBAND | awk '{print $1}') i=`echo \"($BSIZE+1)*$NBSE+1\" | bc`#Cut out the selected eigenstate.head -n $i BSEFATBAND | tail -n $BSIZE > BSE-$NBSE.datawk < BSE-$NBSE.dat '{ if ($1==$2 && $3==$2)  print sqrt($1*$1+$2*$2+$3*$3), $4, $5, $6}' > bands-GL.datawk < BSE-$NBSE.dat '{ if ($1==$3 && $2==0.0) print sqrt($1*$1+$2*$2+$3*$3), $4, $5, $6}' > bands-GX.dat  ``` [](File_Bsefatband-2.html) The fatband structure plot for one the BSE eigenvectors in Si The fatband structure plot can be done in gnuplot by running the following script:  ```set size 0.5,1set nokeyset ylabel \"Energy (eV)\"set yrange[-7:21]set xtics (\"L\" -0.866025, \"\u0413\" 0, \"X\" 0.707107)set xrange[-0.866025:0.707107]M=0.001  p \"bands-GL.dat\" u (-$1):2:(M*($4)) w circles lc rgb \"#2C68FC\", \\               \"\" u (-$1):3:(M*($4)) w circles lc rgb \"#A82C35\", \\               \"\" u (-$1):2 ps 0.5 lc \"#808080\" w d,  \\               \"\" u (-$1):3 ps 0.5 lc \"#808080\" w d,  \\   \"bands-GX.dat\" u 1:2:(M*($4)) w circles lc rgb \"#2C68FC\", \\               \"\" u 1:3:(M*($4)) w circles lc rgb \"#A82C35\",  \\               \"\" u 1:2 ps 0.5 lc \"#808080\" w d,      \\               \"\" u 1:3 ps 0.5 lc \"#808080\" w d  ```     Related tags and sections------------------------- BSEFATBAND, NBSEEIG, BSE"}
{"file_name": "VDW_R0AU.md", "content": "VDW\\_R0AU= \\[real (array)]nDescription: VDW\\_R0AU defines the   R  0 {\\\\displaystyle R\\_{0}}  parameters (bohr) for each species defined in the POSCAR file.  --- VDW\\_R0AU sets the   R  0 {\\\\displaystyle R\\_{0}}  parameters (bohr) for each species defined in the POSCAR file for the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods."}
{"file_name": "Langevin_thermostat.md", "content": "The Langevin thermostat[\\[1]](#cite_note-allen:book:1991-1)[\\[2]](#cite_note-hoover:prl:1982-2)[\\[3]](#cite_note-evans:jcp:1983-3) maintains the temperature through a modification of Newton's equations of motion  r  i  \u02d9  \\=  p  i  /  m  i  p  i  \u02d9  \\=  F  i  \u2212  \u03b3  i  p  i  \\+  f  i  , {\\\\displaystyle {\\\\dot {r\\_{i}}}\\=p\\_{i}/m\\_{i}\\\\qquad {\\\\dot {p\\_{i}}}\\=F\\_{i}\\-{\\\\gamma }\\_{i}\\\\,p\\_{i}\\+f\\_{i},} where *Fi* is the force acting on atom *i* due to the interaction potential, \u03b3i is a friction coefficient, and *fi* is a random force simulating the random kicks by the damping of particles between each other due to friction. The random numbers are chosen from a Gaussian distribution with the following variance  \u03c3  i  2  \\= 2  m  i  \u03b3  i  k  B  T  /  \u0394  t {\\\\displaystyle \\\\sigma \\_{i}^{2}\\=2\\\\,m\\_{i}\\\\,{\\\\gamma }\\_{i}\\\\,k\\_{B}\\\\,T/{\\\\Delta }t} with \u0394*t* being the time\\-step used in the MD to integrate the equations of motion. Obviously, Langevin dynamics is identical to the classical Hamiltonian in the limit of vanishing \u03b3. * NVT ensemble: The friction coefficient is set by the LANGEVIN\\_GAMMA parameter.  * NpT ensemble: As for the NVT ensemble the LANGEVIN\\_GAMMA parameter has to be set. If the NpT ensemble is used (by setting ISIF\\=3\\) additionally the friction coefficient of the lattice LANGEVIN\\_GAMMA\\_L has to be provided too. The Langevin thermostat is selected by MDALGO\\=3\\."}
{"file_name": "Wannier_Functions-2.md", "content": "Wannier functions   \\|  w  m  R  \u27e9 {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle }  are constructed by a linear combination of Bloch states   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } , i.e., the computed Kohn\\-Sham (KS) orbitals, as follows:  \\|  w  m  R  \u27e9 \\=  \u2211  n  k  e  \u2212 i  k  \u22c5  R  U  m n  k  \\|  \u03c8  n  k  \u27e9 . {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle \\=\\\\sum \\_{n\\\\mathbf {k} }e^{\\-i\\\\mathbf {k} \\\\cdot \\\\mathbf {R} }U\\_{mn\\\\mathbf {k} }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle .} Here,   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is a unitary matrix which can be generated using different approaches discussed below,   m {\\\\displaystyle m}  is an index enumerating Wannier functions with position   R {\\\\displaystyle \\\\mathbf {R} }  ,  n {\\\\displaystyle n}  is the band index, and   k {\\\\displaystyle \\\\mathbf {k} }  is the Bloch vector.Generally, one starts with an initial guess for   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  that is built from   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }} . The latter can be built from projections onto some localized\\-orbital basis. Comprehensive instructions on how to construct Wannier orbitals in VASP can be found here. One\\-shot singular\\-value decomposition (SVD)--------------------------------------------- In one\\-shot SVD,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is computed by projecting the KS orbitals onto localized orbitals basis   \u03d5  m  k {\\\\displaystyle \\\\phi \\_{m\\\\mathbf {k} }}  that is specified by the LOCPROJ tag:  A  m n  k  \\= \u27e8  \u03c8  n  k  \\|  S  \\|  \u03d5  m  k  \u27e9 , {\\\\displaystyle A\\_{mn\\\\mathbf {k} }\\=\\\\langle \\\\psi \\_{n\\\\mathbf {k} }\\|S\\|\\\\phi \\_{m\\\\mathbf {k} }\\\\rangle ,} where  \u03d5  i  k  (  r  ) \\=  e  i  k  \u22c5  r  Y  l m  (  r ^  )  R  n  ( r ) . {\\\\displaystyle \\\\phi \\_{i\\\\mathbf {k} }(\\\\mathbf {r} )\\=e^{\\\\mathrm {i} \\\\mathbf {k} \\\\cdot \\\\mathbf {r} }Y\\_{lm}({\\\\hat {r}})R\\_{n}(r).} Note that   i {\\\\displaystyle i}  encodes the quantum numbers   n {\\\\displaystyle n}  ,  l {\\\\displaystyle l} , and   m {\\\\displaystyle m} . Thus, in   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  ,  m {\\\\displaystyle m}  is not the magnetic quantum number. Then, VASP performs one\\-shot SVD for each k point  A  m n  k  \\= \\[ D \u03a3  V  \u2217  ]  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }\\=\\[D\\\\Sigma V^{\\*}]\\_{mn\\\\mathbf {k} }} to obtain the unitary matrix  U  m n  k  \\= \\[ D  V  \u2217  ]  m n  k  . {\\\\displaystyle U\\_{mn\\\\mathbf {k} }\\=\\[DV^{\\*}]\\_{mn\\\\mathbf {k} }.} Selected columns of the density matrix (SCDM)--------------------------------------------- The SCDM method [\\[1]](#cite_note-damle:mms:2018-1) is switched on using LSCDM. It has the advantage that the specification of a local basis in terms of atomic quantum numbers is omitted.  Maximally localized Wannier functions using Wannier90----------------------------------------------------- The interface of VASP with the Wannier90 code[\\[2]](#cite_note-mostofi:cpc:2014-2)[\\[3]](#cite_note-pizzi:jpcm:2020-3) is mainly controlled by LWANNIER90 and LWANNIER90\\_RUN. First, the initial guess for   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  can be created by providing the *projections block* in the **wannier90\\.win** file (also see WANNIER90\\_WIN) and setting LWANNIER90\\=True.  In order to obtain maximally localized Wannier functions,   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is constructed in a second step. For this,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  could be created using any projection method in the first step, i.e., single\\-shot SVD method (LOCPROJ), SCDM method (LSCDM), or Wannier90 (LWANNIER90). Then, Wannier90 can be executed directly or through VASP with the LWANNIER90\\_RUN tag."}
{"file_name": "XC.md", "content": "XC= Combination of functionalsn| Default: **XC** | \\= GGA | if the GGA tag is used || --- | --- | --- ||  | \\= METAGGA | if the METAGGA tag is used ||  | \\= The functional specified by LEXCH in the POTCAR file | if neither GGA nor METAGGA is used | Description: Specifies a combination of exchange\\-correlation functionals.  --- A combination of semilocal (LDA, GGA, and METAGGA) functionals can be set with the XC tag, which provides much more flexibility in the choice of the functional compared to the GGA and METAGGA tags. The functionals that can be combined are the functionals implemented in VASP (listed at GGA and METAGGA) and the functionals implemented in Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3) (listed on the Libxc website[\\[4]](#cite_note-libxc_list-4)). The combination can consist of up to 100 components; for each, a multiplication factor can be set with the XC\\_C tag. | **Mind:** This tag is available since VASP.6\\.4\\.3\\. || --- | Examples of INCAR--------------------------------------- * 50% of PBE[\\[5]](#cite_note-perdew:prl:1996-5) and 50% of PBEsol[\\[6]](#cite_note-perdew:prl:2008-6)  ```XC = PE PSXC_C = 0.5 0.5  ``` * SCAN exchange[\\[7]](#cite_note-sun:prl:15-7) combined with PBE correlation[\\[5]](#cite_note-perdew:prl:1996-5)  ```XC = SCAN_X PBE_C  ``` * 70% of B88[\\[8]](#cite_note-becke:pra:1988-8) (from Libxc) and 30% of PBE[\\[5]](#cite_note-perdew:prl:1996-5) for exchange and 100% of LYP (from Libxc) for correlation[\\[9]](#cite_note-lee:prb:1988-9)  ```XC = GGA_X_B88 PBE_X GGA_C_LYPXC_C = 0.7 0.3 1.0  ``` * 15% of HF, 63\\.75% of PBE[\\[5]](#cite_note-perdew:prl:1996-5), and 21\\.25% of B88[\\[8]](#cite_note-becke:pra:1988-8) (from Libxc) for exchange and 75% of PBE[\\[5]](#cite_note-perdew:prl:1996-5) and 25% of LYP[\\[9]](#cite_note-lee:prb:1988-9) (from Libxc) for correlation  ```LHFCALC = .TRUE.XC      = PE GGA_X_B88 GGA_C_LYPXC_C    = 0.75 0.25 0.25AEXX    = 0.15AGGAX   = 0.85  ``` The PBE exchange is multiplied by  0\\.75 \u00d70\\.85 \\=0\\.6375 {\\\\displaystyle 0\\.75\\\\times 0\\.85\\=0\\.6375}  and the B88 exchange by  0\\.25 \u00d70\\.85 \\=0\\.2125 {\\\\displaystyle 0\\.25\\\\times 0\\.85\\=0\\.2125}  .* 15% of HF, 63\\.75% of PBE[\\[5]](#cite_note-perdew:prl:1996-5), and 21\\.25% of SCAN[\\[7]](#cite_note-sun:prl:15-7) for exchange and 75% of PBE[\\[5]](#cite_note-perdew:prl:1996-5) and 25% of SCAN[\\[7]](#cite_note-sun:prl:15-7) for correlation  ```LHFCALC = .TRUE.XC      = PE SCANXC_C    = 0.75 0.25AEXX    = 0.15AGGAX   = 0.85AMGGAX  = 0.85  ``` The PBE exchange is multiplied by  0\\.75 \u00d70\\.85 \\=0\\.6375 {\\\\displaystyle 0\\.75\\\\times 0\\.85\\=0\\.6375}  and the SCAN exchange by  0\\.25 \u00d70\\.85 \\=0\\.2125 {\\\\displaystyle 0\\.25\\\\times 0\\.85\\=0\\.2125} . AGGAX and AMGGAX multiply the exchange part of PBE and SCAN, respectively."}
{"file_name": "ENCUTGWSOFT.md", "content": "ENCUTGWSOFT= \\[real]n| Default: **ENCUTGWSOFT** | \\= ENCUTGW    \u00d7 0\\.8   {\\\\displaystyle \\\\times 0\\.8}  \\times 0.8 | for ALGO\\=*ACFDT* || --- | --- | --- ||  | \\= ENCUTGW    \u00d7 0\\.8   {\\\\displaystyle \\\\times 0\\.8}  \\times 0.8 | as of VASP.6\\.3 ||  | \\= ENCUTGW | else | | **Important:** For vasp.6\\.3 and later releases ENCUTGWSOFT always defaults to ENCUTGW    \u00d7 0\\.8   {\\\\displaystyle \\\\times 0\\.8}  \\times 0.8. || --- | Descprition: The flag ENCUTGWSOFT sets the energy cutoff for the response function, such that it allows to truncate the Coulomb kernel slowly between the energyspecified by ENCUTGWSOFT and ENCUTGW using a cosine window function.  --- RPA/ACFDT correlation energies converge very slowly with respect to   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\rm {max}}}  .Thus VASP automatically extrapolates to the infinite basis set limit using a linear regression to the equation: [\\[1]](#cite_note-harl:2008-1)[\\[2]](#cite_note-harl:2010-2)[\\[3]](#cite_note-klimes:2014-3)  E  c  (  G  ) \\=  E  c  ( \u221e ) \\+  A  G  3 {\\\\displaystyle E\\_{\\\\mathrm {c} }({\\\\mathbf {G} })\\=E\\_{\\\\mathrm {c} }(\\\\infty )\\+{\\\\frac {A}{{\\\\mathbf {G} }^{3}}}}  . This usually leads to much smoother energy\\-volume curves in ACFDT calculations and MP2 calculations.The modified Coulomb kernel is in this case:  v  G  \\=  4 \u03c0  e  2  G  2  1 2  (  1 \\+ cos \u2061  (  \u03c0  \u210f  2  G  2  2  m  e  \u2212  E N C U T G W S O F T  E N C U T G W  \u2212  E N C U T G W S O F T  )  )  for  \u210f  2  G  2  2  m  e  \\>  E N C U T G W S O F T {\\\\displaystyle v\\_{G}\\={\\\\frac {4\\\\pi e^{2}}{G^{2}}}{\\\\frac {1}{2}}\\\\left(1\\+\\\\cos \\\\left(\\\\pi \\\\,{\\\\frac {{\\\\frac {\\\\hbar ^{2}G^{2}}{2m\\_{e}}}\\-\\\\mathrm {ENCUTGWSOFT} }{\\\\mathrm {ENCUTGW} \\-\\\\mathrm {ENCUTGWSOFT} }}\\\\right)\\\\right)\\\\qquad {\\\\mbox{for}}\\\\quad {\\\\frac {\\\\hbar ^{2}G^{2}}{2m\\_{e}}}\\>\\\\mathrm {ENCUTGWSOFT} } If LSCK is set to .TRUE., the squeezed Coulomb kernel is used instead of the cosine window:[\\[4]](#cite_note-riemelmoser:jcp:2020-4)  v  G  \\= 4 \u03c0  e  2  (  G  m a x  \u2212  G  m i n  ) (  G  m a x  \u2212 G )  (  G  m i n  2  \u2212 G ( 2  G  m i n  \u2212  G  m a x  )  )  2  for  E N C U T G W S O F T  \\=  \u210f  2  G  m i n  2  2  m  e  \\<  \u210f  2  G  2  2  m  e  \\<  \u210f  2  G  m a x  2  2  m  e  \\=  E N C U T G W {\\\\displaystyle v\\_{G}\\=4\\\\pi e^{2}{\\\\frac {(G\\_{max}\\-G\\_{min})(G\\_{max}\\-G)}{(G\\_{min}^{2}\\-G(2G\\_{min}\\-G\\_{max}))^{2}}}\\\\qquad {\\\\mbox{for}}\\\\quad \\\\mathrm {ENCUTGWSOFT} \\={\\\\frac {\\\\hbar ^{2}G\\_{min}^{2}}{2m\\_{e}}}\\<{\\\\frac {\\\\hbar ^{2}G^{2}}{2m\\_{e}}}\\<{\\\\frac {\\\\hbar ^{2}G\\_{max}^{2}}{2m\\_{e}}}\\=\\\\mathrm {ENCUTGW} } This kernel *squeezes* contributions from large wave vectors   G \\>  G  m a x {\\\\displaystyle G\\>G\\_{max}}  into the window given by ENCUTGWSOFT.For GW type calculations the squeezed Coulomb kernel was the default (when ENCUTGWSOFT was set in the INCAR file) before version vasp.6\\.3, butin newer releases the code always defaults to a smoothed Coulomb kernel (both for GW and RPA type calculations). If one desires to recover the behaviorof vasp.6\\.2 and older versions, LSCK\\=.TRUE. must be set in the INCAR file for GW type calculations if ENCUTGWSOFT is set in the INCAR file.   | **Mind:** The infinite basis set limit extrapolation for RPA/ACFDT is described in more detail here. || --- |"}
{"file_name": "LLRAUG.md", "content": "LLRAUG= .TRUE. \\| .FALSE.   Default: **LLRAUG** \\= .FALSE.nDescription: LLRAUG calculates the two\\-center contributions to the chemical shift tensor.  --- LLRAUG switches on two\\-center contributions to the NMR chemical shift tensor.These are contributions due to the augmentationcurrents in other PAW spheres than the sphere with the atom for which the shift tensor is calculated.Typically these contributions are safely neglected.It makes sense to include them for accurate calculations with hard potentials (\\*\\_h)on systems containing also (non\\-hydrogen) atoms from the top rows of the periodictable (B, C, N, O, F), typically with short bonds, e.g. C2H2, whereeffects up to a few ppm are possible. Effects are most significant for the H shift. For such systems using standard potentialstypically introduces larger inaccuracies. The two\\-center contributions are calculated usinga multipole expansion of the current density that is represented on the plane wave grid.[\\[1]](#cite_note-dewijs:jcp:17-1)The relevance of LLRAUG to achieve basis\\-set completeness for shieldings is discussed in Ref.[\\[2]](#cite_note-dewijs:jcp:18-2) that compares to basis\\-set converged quantum chemical calculations.[\\[3]](#cite_note-jenssen:jcp:nmr-3)"}
{"file_name": "NBANDSV.md", "content": "NBANDSV= \\[integer]nDescription: NBANDSV determines how many unoccupied orbitals are included in the Casida/BSE calculations or timepropagation.  --- For the time\\-propagation algorithm increasing NBANDSV only modestly increases the compute time.For BSE and Casida type calculations, the compute time grows with the third power of the number of included occupied and unoccupied bands  (  N  o c c  N  v i r t u a l  N  k  )  3 {\\\\displaystyle (N\\_{\\\\mathrm {occ} }N\\_{\\\\mathrm {virtual} }N\\_{\\\\mathrm {k} })^{3}} and the memory requirements increase quadratically  (  N  o c c  N  v i r t u a l  N  k  )  2 {\\\\displaystyle (N\\_{\\\\mathrm {occ} }N\\_{\\\\mathrm {virtual} }N\\_{\\\\mathrm {k} })^{2}} Please be aware that symmetry is not exploited in the BSE code, hence memory requirements can be excessive. To allow for calculations on large systems, the BSE code distributes the BSE matrix among all available cores and uses ScaLAPACK for the diagonalization. VASP always uses the orbitals closest to the Fermi\\-level, and NBANDSO (  N  o c c {\\\\displaystyle N\\_{\\\\mathrm {occ} }} ) and NBANDSV (  N  v i r t u a l {\\\\displaystyle N\\_{\\\\mathrm {virtual} }} ) determines how many occupied and unoccupied orbitals are included. The defaults are fairly \"conservative\" and equal the total number of electrons/2 (this usually implies that all occupied state are included). For highly accurate results, NBANDSV often needs to be increased, whereas for large systems one is often forced to reduce both values to much smaller numbers. Sometimes qualitative results for bandlike Wannier\\-Mott excitons can be obtained even with a single conduction and valence band. Related tag and articles------------------------ NBANDSO,BSE calculations,timepropagation Examples that use this tag  ---"}
{"file_name": "Born_effective_charges.md", "content": "The change in polarization from the displacement of an atom is not uniquely defined in periodic systems, where atoms are repeated in different cells and the charge can be generalized.[\\[1]](#cite_note-ghosez:michenaud:gonze:1998-1) Born effective charges are one way of defining this dynamical charge. Introduction============ The dynamical charge is defined as the cell volume **\u03a9**0, multiplied by the partial derivative of the macroscopic polarization **P** in the direction *i* with respect to a rigid displacement of the sublattice of atoms *\u03ba* in the direction *j*. However, the polarization is not uniquely defined in periodic systems and depends on the macroscopic electric field   E  i {\\\\displaystyle {\\\\mathcal {E}}\\_{i}}  fixed by the periodic boundary conditions. The Born effective charge **Z\\*** is the partial derivative of the polarization with respect to position *u* for zero macroscopic electric field.[\\[2]](#cite_note-gonze:prb:1997-2) As polarization is the first derivative of the total energy with respect to the macroscopic electric field, **Z\\*** may be rearranged in terms of the partial derivative of the force **F** in direction *j* on atom *\u03ba* with respect to   E  i {\\\\displaystyle {\\\\mathcal {E}}\\_{i}}  :  Z  \u03ba , i j  \u2217  \\=  \u03a9  0  e  \u2202  P  i  \u2202  u  \u03ba , j  ( q\\=0  )  \\=  1 e  \u2202  F  \u03ba , j  \u2202  E  i  i , j \\= x , y , z {\\\\displaystyle Z\\_{\\\\kappa ,ij}^{\\*}\\={\\\\frac {\\\\Omega \\_{0}}{e}}{\\\\frac {\\\\partial {\\\\mathcal {P}}\\_{i}}{\\\\partial u\\_{\\\\kappa ,j}({\\\\textbf {q\\=0}})}}\\={\\\\frac {1}{e}}{\\\\frac {\\\\partial F\\_{\\\\kappa ,j}}{\\\\partial {\\\\mathcal {E}}\\_{i}}}\\\\qquad {i,j\\=x,y,z}}   | **Mind:*** The **\\*** does not denote a complex conjugate, **Z\\*** is always a real quantity. * **Z\\*** is given in units of     \\| e \\|   {\\\\displaystyle \\\\vert e\\\\vert }   in VASP. * VASP outputs **Z***ij*\u22c6 with *i* for the macroscopic electric field, and *j* for the direction of the force. In literature, **Z***ji*\u22c6 is commonly seen, with the force direction *j* followed by the electric field direction *i*. Note, py4vasp follows the latter notation **Z***ji*\u22c6 for historic reasons. || --- | How to calculate================ There are two ways of computing Born effective charges in VASP. The first is done using LCALCEPS, where a finite electric field is applied along the three cartesian directions and the resultant forces on the atoms are calculated:  ```LCALCEPS = .TRUE.  ``` The other approach is done using LEPSILON, where the derivative of the wavefunction with respect to an electric field is calculated using density functional perturbation theory (DFPT):  ```LEPSILON = .TRUE.  ``` These may be used in combination with IBRION to obtain additional dielectric properties:  ```IBRION = 5 or 6\u00a0! Calculated using finite differences.IBRION = 7 or 8\u00a0! Calculated using DFPT  ``` For more details, see the pages for each tag. The Born effective charges including local field effects will be given in the OUTCAR file:  ```BORN EFFECTIVE CHARGES (including local field effects) (in |e|, cummulative output)  ``` Excluding local field effects============================= Previously, the local field effects have been included, that is changes in the orbitals due to the electric field induce changes in the Hartree\\- and exchange\\-correlation potentials. This may be limited to changes in the Hartree potential, by specifying:  ```LRPA = .TRUE.LCALCEPS = .TRUE.\u00a0! N.B. LEPSILON does not output the final Born effective charges.  ``` This prints out the Born effective charges excluding local field effects:  ```BORN EFFECTIVE CHARGES (excluding local field effects) (in |e|, cummulative output)  ``` These are calculated normally but remain hidden unless explicitly specified."}
{"file_name": "Installing_VASP.6.X.md", "content": "As a license holder, you can download the source code of VASP from the VASP Portal. If your system fulfills the  requirements, you can install VASP.6\\.X.X by following the steps below. There is a separate guide to installing VASP.5\\.X.X. Requirements------------ For the compilation of VASP one needs: * Compilers for Fortran (at least F2008 compliant), C, and C\\+\\+. For instance, one of the following compiler suites: \\- gcc\\- intel\\-oneapi\\-base\\-kit\\+intel\\-oneapi\\-hpc\\-kit\\- NVIDIA HPC\\-SDK\\- AOCC (for AMD CPUs) | **Mind:** For the OpenACC GPU port of VASP (to run on GPUs) on must use the compilers from the NVIDIA HPC\\-SDK (\\>\\=21\\.2\\). || --- | * Numerical libraries: FFTW, BLAS, LAPACK, and ScaLAPACK. For instance, one of the following: \\- intel\\-oneapi\\-mkl\\- FFTW \\+ OpenBLAS \\+ ScaLAPACK\\- NVIDIA HPC\\-SDK (comes with OpenBLAS and ScaLAPACK) \\+ FFTW\\- AOCL (for AMD CPUs)* An implementation of the Message Passing Interface (MPI). For instance, one of the following: \\- intel\\-oneapi\\-mpi\\- OpenMPI\\- NVIDIA HPC\\-SDK (comes with OpenMPI)To find a combination of compilers and libraries that works, have a look at our list of validated toolchains. On a personal computer, i.e., your desktop machine or laptop, you may use these validated instructions. Install VASP------------ ### Step 1: Download Download the source code of VASP from the VASP Portal, copy it to the desired location on your machine, and unzip the file to obtain the folder `/path/to/vasp.x.x.x` and reveal its content.### Step 2: Prepare makefile.include Create a makefile.include starting from a template in `/path/to/vasp.x.x.x/arch` that resembles your system:  ```cp arch/makefile.include.your_choice  ./makefile.include ``` Adapt your makefile.include file to your system and select optional features.### Step 3: Make Build VASP with  ```make DEPS=1 -jN <target> ``` where  `DEPS=1 -jN` is optional and selects the parallel mode of make with `N` being the number of jobs you want to run, and `<target>` corresponds to `std`, `gam`, `ncl` or `all`. This builds the standard, gamma\\-only, noncollinear or all versions of VASP. The executables are `vasp_std`, `vasp_gam`, and `vasp_ncl`, respectively, which are located at `/path/to/vasp.X.X.X/bin/`.### Step 4: Test | **Warning:** VASP.6\\.1\\.0, VASP.6\\.1\\.1, and VASP.6\\.1\\.2 have a potentially serious issue related to the test suite. Please read about it  here. || --- | Run the test suite with  ```make test ``` to confirm the build was successful. | **Tip:** If there are issues, the VASP Forum \\[installation issues] is the appropriate place to seek support. || --- | ### Step 5: Install Copy the executables to the system `$PATH` or append `/path/to/vasp.x.x.x/bin/` to the environment variable with  ```export PATH=$PATH:/path/to/vasp.x.x.x/bin ``` for instance in your `~/.bashrc`. You may also need to set `ulimit -s unlimited` in your `~/.bashrc`.Subdirectories in vasp.6\\.x.x----------------------------- The build system of VASP (as of versions \\>\\= 5\\.4\\.1\\) comprises the following subdirectories:  ```                  vasp.x.x.x (root directory) |         ------------------------------------------------        |        |        |         |          |         |       arch     bin     build      src     testsuite   tools |                              -------------                             |      |      |                                   lib   parser  fftlib  ``` /path/to/vasp.x.x.x/Holds the high\\-level makefile and several subdirectories./path/to/vasp.x.x.x/srcHolds the source files of VASP and a low\\-level makefile./path/to/vasp.x.x.x/src/libHolds the source of the VASP library (used to be vasp.X.lib) and a low\\-level makefile./path/to/vasp.x.x.x/src/parserHolds the source of the LOCPROJ parser (as of versions \\>\\= 5\\.4\\.4\\) and a low\\-level makefile./path/to/vasp.x.x.x/src/fftlibHolds the source of the fftlib library that may be used to cache fftw plans./path/to/vasp.x.x.x/archHolds a collection of makefile.include.\\* files./path/to/vasp.x.x.x/buildThe different versions of VASP, i.e., the standard, gamma\\-only, non\\-collinear versions will be built in separate subdirectories of this directory./path/to/vasp.x.x.x/binHere make will store the executables./path/to/vasp.x.x.x/testsuiteHolds a suite of correctness tests to check your build./path/to/vasp.x.x.x/toolsHolds several python scripts related to the use of HDF5 input/output files.Related sections---------------- Toolchains,makefile.include,Precompiler options,Compiler options,Linking to libraries,Validation tests"}
{"file_name": "LADDER.md", "content": "LADDER= \\[logical]   Default: **LADDER** \\= .NOT. LRPAnDescription: Controls whether the ladder diagrams are included in the BSE calculation. Note that the default for LRPA and therefore LADDER is somewhat convoluted; so better to always double\\-check the OUTCAR file whether VASP behaves as expected. Generally, VASP will select ladder diagrams whenever this seems reasonable. This is for instance the case for ALGO\\=\"BSE\" or \"TDHF\" calculations.  --- LADDER is used together with LHARTREE. If LADDER\\=*.FALSE.*, the ladder diagrams (i.e. the exchange terms related to   W {\\\\displaystyle W}  or the screened exchange) are not included.If LHARTREE\\=*.FALSE.*, the Hartree diagrams or bubble diagrams are not included. The following table summarizes all possible combinations: | LHARTREE | LADDER |  || --- | --- | --- || .TRUE. | .TRUE. | full BSE / TDHF || .FALSE. | .TRUE. | only excitonic effects (ladders) || .TRUE. | .FALSE. | random phase approximation (rings \\= bubbles only) || .FALSE. | .FALSE. | independent particle picture | The last combination can be useful for sanity checks: the results must be identical to the results obtained usingLOPTICS\\=*.TRUE.* in the preceding calculations. If this is not the case, it usually implies that the one\\-electronenergies have been updated in the WAVECAR file, or that the WAVEDER file is not properly set up. The end of BSE explains how to recalculatethe WAVEDER file from an existing WAVECAR file."}
{"file_name": "LIBMBD_VDW_PARAMS_KIND.md", "content": "LIBMBD\\_VDW\\_PARAMS\\_KIND= ts \\| tssurfnDefault: LIBMBD\\_VDW\\_PARAMS\\_KIND\\=ts (default in libMBD) Description: LIBMBD\\_VDW\\_PARAMS\\_KIND sets the type of free\\-atom van der Waals parameters that are used for the methods implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_VDW\\_PARAMS\\_KIND allows to choose the set of van der Waals parameters from either the original Tkatchenko\\-Scheffler method[\\[4]](#cite_note-tkatchenko:prl:09-4) (LIBMBD\\_VDW\\_PARAMS\\_KIND\\=ts) or its variant that was designed to be more accurate for systems with surface[\\[5]](#cite_note-ruiz:prb:2016-5) (LIBMBD\\_VDW\\_PARAMS\\_KIND\\=tssurf). The value is internally passed to the libMBD input **vdw\\_params\\_kind** described at the page [\\[6]](#cite_note-libmbd_input-6). LIBMBD\\_VDW\\_PARAMS\\_KIND is similar to the LTSSURF tag that is used for the VASP implementation of the Tkatchenko\\-Scheffler method. | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "Extract_zpr_cd_carbon.md", "content": "Redirect to: * Extract zpr\")"}
{"file_name": "HFLMAX.md", "content": "HFLMAX= \\[integer]   Default: **HFLMAX** \\= 4nDescription: To be compatible w.r.t. old releases, VASP also reads the flag HFLMAX to the same effect as LMAXFOCK.  ---"}
{"file_name": "IBZKPT.md", "content": "The IBZKPT file is compatible with the KPOINTS file and is generated if the automatic k\\-mesh generation is selected in the KPOINTS file. IBZKPT contains the k\\-point coordinates and weights (and if the tetrahedron method was selected additional tetrahedron connection tables are used) in the \"Entering all k\\-points explicitly\" format used for providing k\\-points \"by hand\". This file can also be generated with the external tool, *kpoints*. IBZKPT maybe copied to KPOINTS to save time, if one KPOINTS set is used several times.  ---"}
{"file_name": "Precompiler_options.md", "content": "Precompiler flags are used to activate/deactivate certain code features at the time of compilation, e.g., the use of MPI, the advanced molecular dynamics features, etc. Many precompiler flags are set by default in the templates provided for the makefile.include file. The commands are as follows:  CPPThe command to invoke the precompiler you want to use, for instance:* Using Intel's Fortran precompiler:  ```CPP=fpp -f_com=no -free -w0 $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS) ``` * Using cpp:  ```CPP=/usr/bin/cpp -P -C -traditional $*$(FUFFIX) >$*$(SUFFIX) $(CPP_OPTIONS) ``` | **Mind:** This variable has to include `$(CPP_OPTIONS)`. If not, `CPP_OPTIONS` will be ignored! || --- | CPP\\_OPTIONSSpecify the precompiler flags:  ```CPP_OPTIONS=[-Dflag1 [-Dflag2] ... ] ``` | **Mind:** `CPP_OPTIONS` is only used in makefile.include, where it is added to the `CPP` variable. || --- | Default------- ### \\-DHOST\\=\\[string] A string (20 characters max.) that describes the platform on which VASP is compiled, e.g.,  `-DHOST=\\\"LinuxIFC\\\"` for a Linux host using an Intel Fortran compiler.### \\-DMPI (Mandatory) Set this to compile the parallel version of VASP.### \\-Duse\\_collective Set this to use MPI collectives in the all\\-to\\-all communication and global summations.In case one specifies this, the value of MPI\\_BLOCK (below) will be meaningless.### \\-DMPI\\_BLOCK\\=\\[integer] Specifies the block size used by the in\\-house MPI all\\-to\\-all communication and global summations.### \\-DscaLAPACK Set this to use scaLAPACK.### \\-DCACHE\\_SIZE\\=\\[integer] Specifies the size of the cache memory. Only used by the in\\-house real\\-to\\-complex FFT routines (fft3dlib.F).By default these are no longer used, instead we use the real\\-to\\-complex FFT routines from fftw3\\.### \\-Davoidalloc Set this to use automatic instead of allocatable arrays in many routines related to the real space projection operators.### \\-Dvasp6 Set this to activate all VASP.6\\.X.X specific features.### \\-Dtbdyn Adds the advanced molecular dynamics routines.### \\-Dfock\\_dblbuf Uses double buffer technique for the computation of exchange potential. Available as of VASP.6, N/A for the CUDA\\-C GPU\\-port.### \\-D\\_OPENMP (Optional ) Switch on a combination of MPI and OpenMP for the parallelization.Specific for the OpenACC port to GPUs------------------------------------- ### \\-D\\_OPENACC Mandatory: Activate all OpenACC related code paths.### \\-DUSENCCL Mandatory: Use the NVIDIA Collective Communications Library (NCCL) instead of MPI for relevant instances of collective reduction operations (MPI\\_Allreduce).### \\-DUSENCCLP2P Optional but strongly recommended (requires NCCL \\>\\= 2\\.7\\.8\\): Use the NVIDIA Collective Communications Library (NCCL) instead of MPI for relevant instances of all\\-to\\-all operations (MPI\\_Alltoallv).### \\-Dqd\\_emulate Mandatory: To compile the OpenACC GPU\\-port you need either the NVIDIA HPC\\-SDK or a recent version (\\>\\= 19\\.10\\) of PGI's Compilers \\& Tools. Both of these compilers do not natively support quadruple precision and require the use of the QD library to emulate quadruple precision arithmetic.Optional-------- ### \\-DVASP\\_HDF5 (Strongly recommended) Set this to add HDF5 support. This option has been available since VASP 6\\.2\\.0\\.**N.B.**: one needs to add HDF5 to makefile.include.### \\-Duse\\_shmem Use shared\\-memory segments to reduce the memory demands of GW (ALGO \\= EVGW0, EVGW, QPGW0, and QPGW) and machine\\-learned\u2013force\\-field calculations.### \\-Dshmem\\_bcast\\_buffer Use shared\\-memory segments to reduce the amount of MPI communication in hybrid\\-functional calculations.### \\-Dshmem\\_rproj Use shared\\-memory segments to reduce the storage demands of the real\\-space PAW projectors.### \\-Dsysv Use ipcs shared\\-memory segments and system\\-V semaphores.### \\-DVASP2WANNIER90 Set this to include the interface between VASP and Wannier90\\. | **Deprecated:** For VASP\\<6\\.2\\.0, see \\-DVASP2WANNIER90 and \\-DVASP2WANNIER90v2 in the deprecated section below! || --- | ### \\-Dlibbeef Set this to include the GGA BEEF functional (corresponds to GGA\\=BF).**N.B.**: one needs to add libbeef to makefile.include.### \\-DDFTD4 Set this to include the DFT\\-D4 van der Waals functional.**Note** that you need to install DFT\\-D4 and add it to the makefile.include.### \\-DLIBMBD Set this to include the library libMBD of many\\-body dispersion (MBD) methods for van der Waals interactions.**Note** that you need to install LibMBD and add it to the makefile.include.### \\-DPROFILING Switches on detailed profiling of the code. This carries a (slight) performance penalty.### \\-DUSELIBXC Set this to include the library of exchange\\-correlation functionals Libxc.**Note** that you need to install Libxc \\>\\= 5\\.2\\.0 (or the master version from gitlab for the latest implemented functionals) with the option `--disable-fhc` and add this to the makefile.include.### \\-DELPA Set this to include the library of ELPA eigenvalue solvers.**N.B.**: one needs to add ELPA to makefile.include.### \\-DLAPACK36 Required for LAPACK\\-3\\.6\\.0 and newer to replaced deprecated routine DGEGV by DGGEV.Deprecated---------- | **Deprecated:** `-DNGZhalf`, `-DwNGZhalf`, `-DNGXhalf`, `-DwNGXhalf` are deprecated options. Building the standard, gamma\\-only, or non\\-collinear version of the code is specified through an additional argument to the make command as discussed in Installing VASP.6\\.X.X. || --- | ### \\-DnoAugXCmeta This option was added to compute the meta\\-GGA contributions from the non\\-augmented pseudo density (instead of the augmented density). There is a condition concerning the behavior of the von\\-Weizs\u00e4cker kinetic energy density (calculated using the first derivative of the charge density) and the kinetic energy density computed from the orbitals ingrained into TPSS and revTPSS. This condition can be strongly violated when one augments the charge density. For the TPSS and revTPSS the functionals can become unstable in those cases. SCAN and its derivates (RSCAN, R2SCAN, etc) do not assume the aforementioned conditions to be met and remain stable for the augmented density as well so this option should not be used as it may negatively affect the final results.### \\-DVASP2WANNIER90 and \\-DVASP2WANNIER90v2 Set this to include the interface between VASP and Wannier90\\.Up to VASP 6\\.1\\.x you need to set \\-DVASP2WANNIER90 to interface with Wannier90 v.1\\.x, and \\-DVASP2WANNIER90v2 for Wannier90 v.2\\.x, and add the Wannier90 library to makefile.include.Since VASP 6\\.2\\.0 you need to set \\-DVASP2WANNIER90 to interface with Wannier90 v.2\\.x or v.3\\.x.Related articles---------------- Installing VASP.6\\.X.X,makefile.include,Compiler options,Linking to libraries,OpenACC GPU port of VASP,Toolchains,Validation tests,Known issues  ---"}
{"file_name": "PROCAR.md", "content": "For static calculations, the file PROCAR contains the spd\\- and site projected wave function character of each orbital. Various schemes for determining the projected wave function character are implemented in VASP. The are usually controlled by the tags LORBIT and RWIGS. The tag RWIGS must be specified in the INCAR file whenever LORBIT\\<10 and in this case the orbitals are projected onto spherical harmonics that are non\\-zero within the region determined by RWIGS. For LORBIT\\>\\=10, the tag RWIGS is not needed and the projection is done onto the projector functions. * Format for LORBIT\\=11  ```# of k-points:    5         # of bands:   26         # of ions:    3 k-point     1\u00a0:    0.00000000 0.00000000 0.00000000     weight = 0.06250000 band     1 # energy  -17.37867948 # occ.  1.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot      1  0.144  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.145    2  0.291  0.000  0.006  0.000  0.000  0.000  0.000  0.000  0.000  0.298    3  0.291  0.000  0.006  0.000  0.000  0.000  0.000  0.000  0.000  0.298tot    0.727  0.000  0.013  0.000  0.000  0.000  0.000  0.000  0.000  0.740  ``` The header contains the information about the number of k\\-points, bands and how many ions are considered. The next line prints the k\\-point with the three coordinates in the first Brillouin zone and the corresponding k\\-point weight for the numerical integration followed by the band number and the energy and occupancy of the state. Each (k\\-point,band) pair contains the projections for every ion  \\|  \u27e8  Y  l m  \u03b1  \\|  \u03d5  n  k  \u27e9  \\|  2 {\\\\displaystyle \\|\\\\langle Y\\_{lm}^{\\\\alpha }\\|\\\\phi \\_{n\\\\mathbf {k} }\\\\rangle \\|^{2}}  ,where   Y  l m  \u03b1 {\\\\displaystyle Y\\_{lm}^{\\\\alpha }}  is the spherical harmonic centered at ion index   \u03b1 {\\\\displaystyle \\\\alpha }  ,  l , m {\\\\displaystyle l,m}  the angular moment and magnetic quantum and   \u03d5  n  k {\\\\displaystyle \\\\phi \\_{n\\\\mathbf {k} }}  the wavefunction. The line and column with \"tot\" is the corresponding sum of the line and column, respectively. For ISPIN\\=2 PROCAR contains a second set of projections for the spin down channel.  For LNONCOLLINEAR\\=.TRUE. three additional projections for each ion are printed and the output is similar to   ```ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot      1  0.144  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.145    2  0.291  0.000  0.006  0.000  0.000  0.000  0.000  0.000  0.000  0.298    3  0.291  0.000  0.006  0.000  0.000  0.000  0.000  0.000  0.000  0.298tot    0.727  0.000  0.013  0.000  0.000  0.000  0.000  0.000  0.000  0.740    1 -0.011 -0.000 -0.000 -0.000 -0.000 -0.000 -0.000  0.000 -0.000 -0.011    2 -0.023 -0.000 -0.000  0.000  0.000 -0.000 -0.000  0.000 -0.000 -0.023    3 -0.023 -0.000 -0.000  0.000  0.000 -0.000 -0.000  0.000 -0.000 -0.023tot   -0.057 -0.000 -0.001  0.000  0.000 -0.000 -0.000  0.000 -0.000 -0.058     1 -0.142 -0.000  0.000  0.000  0.000  0.000 -0.000 -0.000 -0.000 -0.142    2 -0.286  0.000 -0.006 -0.000 -0.000  0.000 -0.000 -0.000  0.000 -0.293    3 -0.286  0.000 -0.006 -0.000 -0.000  0.000 -0.000 -0.000  0.000 -0.293tot   -0.715  0.000 -0.012 -0.000 -0.000  0.000 -0.000 -0.000  0.000 -0.727    1 -0.024 -0.000  0.000 -0.000 -0.000  0.000 -0.000  0.000 -0.000 -0.024    2 -0.048  0.000 -0.001  0.000  0.000  0.000 -0.000  0.000  0.000 -0.049    3 -0.048  0.000 -0.001  0.000  0.000  0.000 -0.000  0.000  0.000 -0.049tot   -0.119  0.000 -0.002  0.000  0.000  0.000 -0.000  0.000  0.000 -0.121  ``` Here the entries correspond to the projected magnetizations  1  /  2  \u2211  \u03bc , \u03bd \\= 1  2  \u03c3  \u03bc \u03bd  j  \u27e8  \u03c7  n  k  \u03bc  \\|  Y  l m  \u03b1  \u27e9 \u27e8  Y  l m  \u03b1  \\|  \u03c7  n  k  \u03bd  \u27e9 {\\\\displaystyle 1/2\\\\sum \\_{\\\\mu ,\\\u \\=1}^{2}\\\\sigma \\_{\\\\mu \\\u }^{j}\\\\langle \\\\chi \\_{n{\\\\bf {k}}}^{\\\\mu }\\|Y\\_{lm}^{\\\\alpha }\\\\rangle \\\\langle Y\\_{lm}^{\\\\alpha }\\|\\\\chi \\_{n{\\\\bf {k}}}^{\\\u }\\\\rangle }  and are calculated for the spinor of the spinor   \\|  \u03a8  n  k  \u27e9 \\=  (  \u03c7  n  k  \u2191  \u03c7  n  k  \u2193  ) {\\\\displaystyle \\|\\\\Psi \\_{n{\\\\bf {k}}}\\\\rangle \\=\\\\left({\\\\begin{matrix}\\\\chi \\_{n{\\\\bf {k}}}^{\\\\uparrow }\\\\\\\\\\\\chi \\_{n{\\\\bf {k}}}^{\\\\downarrow }\\\\end{matrix}}\\\\right)}  and the Pauli matrices:  \u03c3  x  \\=  (  0  1  1  0  )  ,  \u03c3  y  \\=  (  0  \u2212 i  i  0  )  ,  \u03c3  z  \\=  (  1  0  0  \u2212 1  ) {\\\\displaystyle \\\\sigma ^{x}\\=\\\\left({\\\\begin{matrix}0\\&1\\\\\\\\1\\&0\\\\\\\\\\\\end{matrix}}\\\\right),\\\\quad \\\\sigma ^{y}\\=\\\\left({\\\\begin{matrix}0\\&\\-i\\\\\\\\i\\&0\\\\\\\\\\\\end{matrix}}\\\\right),\\\\quad \\\\sigma ^{z}\\=\\\\left({\\\\begin{matrix}1\\&0\\\\\\\\0\\&\\-1\\\\\\\\\\\\end{matrix}}\\\\right)} The first set is the total (absolute) magnetization, while the remaining three sets of entries correspond to the three directions   j \\= 1 , 2 , 3 {\\\\displaystyle j\\=1,2,3}  .    ---"}
{"file_name": "Including_the_Spin-Orbit_Coupling.md", "content": "Description: Spin\\-Orbit Coupling (SOC) included self\\-consistently The Magnetocrystalline Anisotropy Energy is determined by rotating all spins according to different directions. To modify the orientation of the spins in the crystal, we consider the second approach described here. For the MAGMOM\\-tag, the total local magnetic moment is written according to the z\\-direction (necessarily, the x and y\\-directions are equal to 0\\). The spin orientation   ( u , v , w ) {\\\\displaystyle (u,v,w)}  is defined by the SAXIS\\-tag in the Cartesian frame. The Magnetocrystalline Anisotropy Energy is calculated by orientating the spins in different directions and the following equation  E  MAE  \\=  E  ( u , v , w )  \u2212  E  0 {\\\\displaystyle E\\_{\\\\text{MAE}}\\=E\\_{(u,v,w)}\\-E\\_{0}} with   E  0 {\\\\displaystyle E\\_{0}}  the energy of the most stable spin orientation. More details are available in the SAXIS and LSORBIT pages. *Exercise\u00a0:* Determine the total magnetic moment by adding the orbital moment of the Ni atoms. Calculate the Magnetocrystalline Anisotropy Energy of NiO by orientating the spins along the following path\u00a0: (2,2,2\\) \\-\\-\\> (2,2,1\\) \\-\\-\\> (2,2,0\\) \\-\\-\\> ... \\-\\-\\> (2,2,\\-6\\). Identify the most stable spin orientation according to this path.  --- * INCAR  ```NiO GGA+U SOC SYSTEM    = \"NiO\" Electronic minimization  ENCUT     = 450  EDIFF     = 1E-7  LORBIT    = 11  LREAL     = .False.  ISTART    = 0  ISYM      = -1  NELMIN    = 6  LSORBIT   = .True.  LWAVE     = .False.  LCHARG    = .False.  DOS  ISMEAR    = -5 Magnetism  ISPIN     = 2  MAGMOM    = 0 0 2 0 0 -2 6*0  SAXIS     = 2 2 2 Orbital Moment  LORBMOM   = T  Mixer  AMIX      = 0.2  BMIX      = 0.00001  AMIX_MAG  = 0.8  BMIX_MAG  = 0.00001 GGA+U  LDAU      = .TRUE.  LDAUTYPE  = 2  LDAUL     = 2 -1  LDAUU     = 5.00 0.00  LDAUJ     = 0.00 0.00  LDAUPRINT = 1  LMAXMIX   = 4   ``` * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` Download--------  nio\\_SOC.tgz  ---"}
{"file_name": "POT.md", "content": "The POT file contains the local potential (in eV), including the augmentation part. It is written if LVTOT\\=T, and it can be used to restart a calculation that requires the local potential as a restart quantity, e.g., for the optimized effective potential (OEP) method.  For LVTOT\\=T and LH5\\=T, the content of the POT file is written to the restart file vaspwave.h5 instead. If you are interested in the local potential as a quantity (and not interested in restarting a calculation), we recommend the LOCPOT file and/or setting WRT\\_POTENTIAL. The format is similar to that of the LOCPOT file but it additionally contains the augmentation part at the end of each block."}
{"file_name": "ESTOP.md", "content": "ESTOP= \\[real]n| Default: **ESTOP** | \\= 0\\.05 |  || --- | --- | --- | Description: ESTOP specifies the stop condition for stochastic MP2\\.  --- ESTOP defines the energy accuracy in units of eV for each individual tau\\-point of the two individual MP2 energy contributions (direct MP2 term \\+ exchange MP2 term). Since the statistical errors of each contribution is independent, the standard deviation of the MP2 energy can be estimated as   \u03c3 \\= ESTOP  \u2217  2 \u22c5 NOMEGA  . {\\\\displaystyle \\\\sigma \\={\\\\texttt {ESTOP}}\\*{\\\\sqrt {2\\\\cdot {\\\\texttt {NOMEGA}}}}\\\\;.} According to our experience, the error of the resulting MP2 energy can then be safely estimated by   \u00b1 2 \u03c3 {\\\\displaystyle \\\\pm 2\\\\sigma }  . Thus, if you require an MP2 energy with a maximum error of   \u0394 {\\\\displaystyle \\\\Delta } , you should set  ESTOP  \\=  \u0394  2 \u22c5  2 \u22c5 NOMEGA  . {\\\\displaystyle {\\\\texttt {ESTOP}}\\={\\\\frac {\\\\Delta }{2\\\\cdot {\\\\sqrt {2\\\\cdot {\\\\texttt {NOMEGA}}}}}}\\\\;.} See this tutorial for more Information about Laplace transformed MP2\\."}
{"file_name": "Improved_Dimer_Method-2.md", "content": "The dimer method[\\[1]](#cite_note-henkelman:jpc:1999-1) is a technique for the optimization of transition states. In VASP, the improved dimer method (IDM) by Heyden et al. is implemented, and a detailed presentation of the method can be found in their paper[\\[2]](#cite_note-heyden:jpc:2005-2). The algorithm for IDM consists of the following cyclically repeated steps: * The curvature along the dimer axis is computed using finite differences. The initial dimer direction must be provided (see below).* The dimer is rotated such that its axis is parallel with the direction of the maximal negative curvature.* An optimization step is taken, and the potential energy is maximized along the unstable direction, (i.e., dimer axis) while it is minimized in all other directions. The method is invoked by setting IBRION\\=44 in the INCAR file. Furthermore, the user must specify the direction of the unstable mode. The corresponding   3 N {\\\\displaystyle 3N}  dimensional vector is defined in the POSCAR file after the lines with atomic coordinates and a separating blank line. Note that the dimer direction is automatically normalized, i.e., the norm of the dimer axis is irrelevant. An example of a POSCAR file for a simulation with the dimer method is given in the following:  ```ammonia flipping 1.6. 0. 0.0. 7. 0.0. 0. 8. H N 3 1cart       -0.872954        0.000000       -0.504000       \u00a0! coordinates for atom 1        0.000000        0.000000        1.008000        0.872954        0.000000       -0.504000        0.000000        0.000000        0.000000       \u00a0! coordinates for atom N      \u00a0! here we define trial unstable direction:        0.000001    0.522103   -0.000009       \u00a0! components for atom 1       -0.000006    0.530068    0.000000       -0.000005    0.522067   -0.000007        0.000001   -0.111442    0.000001       \u00a0! components for atom N  ``` As in the other structural optimization algorithms in VASP, convergence is controlled through the EDIFFG tag. Experienced users can affect the performance of the dimer method by modifying the numerical values of the following parameters (the given example values are the default values): * FINDIFF\\=1 Use a forward (FINDIFF\\=1\\) or central (FINDIFF\\=2\\) difference formula for the numerical differentiation to compute the curvature along the dimer direction* DIMER\\_DIST\\=0\\.01 The step size for a numerical differentiation (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  )* MINROT\\=0\\.01 Dimer is rotated only if the predicted rotation angle is greater than MINROT (rad.)* STEP\\_SIZE\\=0\\.01 Trial step size for optimization step (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  )* STEP\\_MAX\\=0\\.1 Trust radius (upper limit) for the optimization step (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ) Important information about the progress of optimization is written in the OUTCAR file after the expression *DIMER METHOD*. In particular, it is useful to check the curvature along the dimer direction, which should be a negative number (a long sequence of positive numbers usually indicates that the algorithm fails to converge to the correct transition state). | **Mind:** The current implementation does not support lattice optimizations (ISIF\\>2\\) and can be used only for the relaxation of atomic positions. || --- | Initial dimer axis------------------ The direction of an unstable vibrational mode can be obtained by performing the vibrational analysis (IBRION\\=5\\) and taking the x\\-, y\\-, and z\\- components of the imaginary vibrational mode (after division by   m {\\\\displaystyle {\\\\sqrt {m}}} !) parallel with the reaction coordinate. Note that in order to plot \"Eigenvectors after division by SQRT(mass)\", NWRITE\\=3 should be used. Practical example----------------- In this example, the transition state for the ammonia flipping is computed. All calculations discussed here were performed using the PBE functional, Brillouin zone sampling was restricted to the gamma point. This practical example can be completed in a few seconds on a standard desktop PC. The starting structure for the IDM simulation should be a reasonable guess for the transition state. A POSCAR file with the initial guess for the ammonia flipping looks like this:  ```ammonia flipping 1.6. 0. 0.0. 7. 0.0. 0. 8. H N 3 1cart       -0.872954        0.000000       -0.504000        0.000000        0.000000        1.008000        0.872954        0.000000       -0.504000        0.000000        0.000000        0.000000  ``` As an input for the dimer method, the direction of the unstable mode (dimer axis) is needed. This can be obtained by performing vibrational analysis. The INCAR file should contain the following lines:  ```NSW = 1Prec\") = NormalIBRION = 5                \u00a0! perform vibrational analysisNFREE = 2                 \u00a0! select central differences algorithmPOTIM = 0.02              \u00a0! step for the numerical differenciation NWRITE = 3                \u00a0! write down eigenvectors of dynamical matrix after division by SQRT(mass)  ``` After completing the vibrational analysis, we look up the hardest imaginary mode (Eigenvectors after division by SQRT(mass)!) in the OUTCAR file:  ``` 12 f/i=   23.224372 THz   145.923033 2PiTHz  774.681641 cm-1    96.048317 meV             X         Y         Z           dx          dy          dz      5.127046  0.000000  7.496000     0.000001    0.522103   -0.000009      0.000000  0.000000  1.008000    -0.000006    0.530068    0.000000      0.872954  0.000000  7.496000    -0.000005    0.522067   -0.000007      0.000000  0.000000  0.000000     0.000001   -0.111442    0.000001  ``` and use the last three columns to define the dimer axis in the POSCAR file:  ```ammonia flipping 1.6. 0. 0.0. 7. 0.0. 0. 8. H N 3 1cart       -0.872954        0.000000       -0.504000       \u00a0! coordinates for atom 1        0.000000        0.000000        1.008000        0.872954        0.000000       -0.504000        0.000000        0.000000        0.000000       \u00a0! coordinates for atom N       \u00a0! here we define trial unstable direction:        0.000001    0.522103   -0.000009       \u00a0! components for atom 1       -0.000006    0.530068    0.000000       -0.000005    0.522067   -0.000007        0.000001   -0.111442    0.000001       \u00a0! components for atom N  ``` In order to perform IDM calculation, the INCAR file should contain the following lines:  ```NSW = 100           Prec\")=NormalIBRION=44          \u00a0!  use the dimer method as optimization engineEDIFFG=-0.03  ``` With this setting, the algorithm converges in just a few relaxation steps. Further vibrational analysis can be performed to prove that the relaxed structure is indeed a first\\-order saddle point (one imaginary frequency)."}
{"file_name": "STEP_MAX.md", "content": "STEP\\_MAX= \\[real]   Default: **STEP\\_MAX** \\= 0\\.1nDescription: The flag STEP\\_MAX defines the trust radius (upper limit) for the optimization step (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ) in the Improved Dimer Method.  ---"}
{"file_name": "VDW_R0.md", "content": "VDW\\_R0= \\[real (array)]nDescription: VDW\\_R0 defines the   R  0 {\\\\displaystyle R\\_{0}}  parameters (  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for each species defined in the POSCAR file.  --- VDW\\_R0 sets the   R  0 {\\\\displaystyle R\\_{0}}  parameters (  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for each species defined in the POSCAR file for the DFT\\-D2, DFT\\-ulg, Tkatchenko\\-Scheffler, and Many\\-body dispersion energy methods."}
{"file_name": "VASP_workshop_2003.md", "content": "### Lectures Introduction to Computational Materials Introduction to DFT Pseudopotentials I Pseudopotentials II Sampling the Brillouin zone Ionic relaxation methods Electronic relaxation methods Computational Platforms Accuracy and Validation of results Pseudopotential Data Base DFT in depth Unpaired electrons in DFT ### Exercises Hands\\-on session 1,Example files Hands\\-on session 2,Example files Hands\\-on session 3,Example files Hands\\-on session 4,Example files  ---"}
{"file_name": "Interface_pinning_calculations.md", "content": "**Interface pinning**[\\[1]](#cite_note-pedersen:prb:13-1) is used to determine the melting point from a molecular\\-dynamics simulation of the interface between a liquid and a solid phase. The typical behavior of such a simulation is to freeze or melt, while the interface is *pinned* with a bias potential.This potential applies an energy penalty for deviations from the desired two\\-phase system.It is preferred simulating above the melting point because the bias potential prevents melting better than freezing. The Steinhardt\\-Nelson[\\[2]](#cite_note-steinhardt:prb:83-2) order parameter   Q  6 {\\\\displaystyle Q\\_{6}}  discriminates between the solid and the liquid phase.With the bias potential  U bias  (  R  ) \\=  \u03ba 2  (  Q  6  (  R  ) \u2212 A  )  2 {\\\\displaystyle U\\_{\\\\text{bias}}(\\\\mathbf {R} )\\={\\\\frac {\\\\kappa }{2}}\\\\left(Q\\_{6}(\\\\mathbf {R} )\\-A\\\\right)^{2}} penalizes differences between the order parameter for the current configuration   Q  6  (  R  ) {\\\\displaystyle Q\\_{6}({\\\\mathbf {R} })}  and the one for the desired interface   A {\\\\displaystyle A}  .  \u03ba {\\\\displaystyle \\\\kappa }  is an adjustable parameter determining the strength of the pinning. Under the action of the bias potential, the system equilibrates to the desired two\\-phase configuration.An important observable is the difference between the average order parameter   \u27e8  Q  6  \u27e9 {\\\\displaystyle \\\\langle Q\\_{6}\\\\rangle }  in equilibrium and the desired order parameter   A {\\\\displaystyle A}  .This difference relates to the the chemical potentials of the solid   \u03bc solid {\\\\displaystyle \\\\mu \\_{\\\\text{solid}}}  and the liquid   \u03bc liquid {\\\\displaystyle \\\\mu \\_{\\\\text{liquid}}}  phase  N (  \u03bc solid  \u2212  \u03bc liquid  ) \\= \u03ba (  Q  6 , solid  \u2212  Q  6 , liquid  ) ( \u27e8  Q  6  \u27e9 \u2212 A ) {\\\\displaystyle N(\\\\mu \\_{\\\\text{solid}}\\-\\\\mu \\_{\\\\text{liquid}})\\=\\\\kappa (Q\\_{6,{\\\\text{solid}}}\\-Q\\_{6,{\\\\text{liquid}}})(\\\\langle Q\\_{6}\\\\rangle \\-A)} where   N {\\\\displaystyle N}  is the number of atoms in the simulation. Computing the forces requires a differentiable   Q  6  (  R  ) {\\\\displaystyle Q\\_{6}(\\\\mathbf {R} )}  .In the VASP implementation a smooth fading function   w ( r ) {\\\\displaystyle w(r)}  is used to weight each pair of atoms at distance   r {\\\\displaystyle r}  for the calculation of the   Q  6  (  R  , w ) {\\\\displaystyle Q\\_{6}(\\\\mathbf {R} ,w)}  order parameter. This fading function is given as  w ( r ) \\=  {  1  for  r \u2264 n  (  f  2  \u2212  r  2  )  2  (  f  2  \u2212 3  n  2  \\+ 2  r  2  )  (  f  2  \u2212  n  2  )  3  for  n \\< r \\< f  0  for  f \u2264 r {\\\\displaystyle w(r)\\=\\\\left\\\\{{\\\\begin{array}{cl}1\\&{\\\\textrm {for}}\\\\,\\\\,r\\\\leq n\\\\\\\\{\\\\frac {(f^{2}\\-r^{2})^{2}(f^{2}\\-3n^{2}\\+2r^{2})}{(f^{2}\\-n^{2})^{3}}}\\&{\\\\textrm {for}}\\\\,\\\\,n\\<r\\<f\\\\\\\\0\\&{\\\\textrm {for}}\\\\,\\\\,f\\\\leq r\\\\end{array}}\\\\right.}   Here   n {\\\\displaystyle n}  and  f {\\\\displaystyle f}  are the near\\- and far\\-fading distances, respectively. The radial distribution function   g ( r ) {\\\\displaystyle g(r)}  of the crystal phase yields a good choice for the fading range.To prevent spurious stress,   g ( r ) {\\\\displaystyle g(r)}  should be small where the derivative of   w ( r ) {\\\\displaystyle w(r)}  is large.Set the near fading distance   n {\\\\displaystyle n}  to the distance where   g ( r ) {\\\\displaystyle g(r)}  goes below 1 after the first peak.Set the far fading distance   f {\\\\displaystyle f}  to the distance where   g ( r ) {\\\\displaystyle g(r)}  goes above 1 again before the second peak. How to------ **Interface pinning** uses the   N  p  z  T {\\\\displaystyle Np\\_{z}T}  ensemble where the barostat only acts along the   z {\\\\displaystyle z}  direction.This ensemble uses a Langevin thermostat and a Parrinello\\-Rahman barostat with lattice constraints in the remaining two dimensions.The solid\\-liquid interface must be in the   x {\\\\displaystyle x}  \\-  y {\\\\displaystyle y}  plane perpendicular to the action of the barostat. Set the following tags for the **interface pinning** method: OFIELD\\_Q6\\_NEARDefines the near\\-fading distance   n {\\\\displaystyle n}  .OFIELD\\_Q6\\_FARDefines the far\\-fading distance   f {\\\\displaystyle f}  .OFIELD\\_KAPPADefines the coupling strength   \u03ba {\\\\displaystyle \\\\kappa }  of the bias potential.OFIELD\\_ADefines the desired value of the order parameter   A {\\\\displaystyle A}  .The following example INCAR file calculates the interface pinning in sodium[\\[1]](#cite_note-pedersen:prb:13-1):  ```TEBEG = 400                   # temperature in KPOTIM = 4                     # timestep in fsIBRION = 0                    # run molecular dynamicsISIF = 3                      # use Parrinello-Rahman barostat for the latticeMDALGO = 3                    # use Langevin thermostatLANGEVIN_GAMMA_L = 3.0        # friction coefficient for the lattice degree of freedoms (DoF)LANGEVIN_GAMMA = 1.0          # friction coefficient for atomic DoFs for each speciesPMASS = 100                   # mass for lattice DoFsLATTICE_CONSTRAINTS = F F T   # fix x-y plane, release z lattice dynamicsOFIELD_Q6_NEAR = 3.22         # near fading distance for function w(r) in AngstromOFIELD_Q6_FAR = 4.384         # far fading distance for function w(r) in AngstromOFIELD_KAPPA = 500            # strength of bias potential in eV/(unit of Q)^2OFIELD_A = 0.15               # desired value of the Q6 order parameter  ```"}
{"file_name": "VASP_workshop.md", "content": "The lectures and tutorials listed below constitute a typical 2\\-3 day VASP workshop,as we have held many over the years. Lectures-------- * DFT, PW, and PAW: \"VASP: The basics. DFT, plane waves, PAW, ...\". Video: Part1 and Part2 * Hybrid functionals: \"VASP: Hybrid functionals\". Video * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". Video * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". Video Tutorials--------- * Atoms and Molecules \\- Tutorial* Simple Bulk Systems* A bit of Surface Science* Magnetism* Hybrid Functionals* Optical Properties and Dielectric Response* The Random\\-Phase\\-Approximation: GW and ACDFT  ---"}
{"file_name": "FERWE.md", "content": "FERWE= \\[real array]nDescription: FERWE sets the occupancies of the states for ISMEAR\\=\\-2\\.  --- To set the occupancies, specify  ``` FERWE = f(1) f(2) f(3) ... f(NBANDS\u00d7Nk)  ``` The occupancies must be specified for all bands and k points. The band index runs fastest. The occupancies must be between 0 and 1\\. In the case of spin\\-polarized calculations (ISPIN\\=2\\), FERWE sets the occupancies of the states in the up\\-spin channel. Specify the occupancies of the states in the down\\-spin channel by means of the FERDO tag.   | **Mind:** If the calculation stops with an error message when reading FERWE, then this may be due to an automatic increase of the number of bands NBANDS in parallel calculation (the new value of NBANDS is indicated in the corresponding warning message). If this is the case, then the number of occupancies provided to FERWE should be increased according to the new NBANDS. || --- |"}
{"file_name": "Practical_considerations_for_transition_state_finding_calculations.md", "content": "This page details a few practical considerations for obtaining accurate and reliable transition state energies using the Nudged Elastic Band (NEB)[\\[1]](#cite_note-mills:surf-sci:1995-1)[\\[2]](#cite_note-jonsson:book:1998-2) and  Intrinsic Reaction Coordinate (IRC) [\\[3]](#cite_note-hratchian:jpc:2002-3) methods implemented in VASP.  NEB calculations---------------- ### Restart with a better guess for the initial and final state configurations [](File_Example_neb_negative_energies.html) An example band which shows intermediate structures with lower energy than the initial and final configurations. **Problem**: While performing an NEB calculation, there might be points on the band which have lower energy than that of the initial and final state configurations (corresponding to the structures that were placed in the 00 and 0x, where x is the number of IMAGES plus one). The figure on the right shows an example where the red (computed) points of the intermediate images are more stable than the initial and final configurations. The presence of these intermediate states is not an issue for the NEB methodology. However, if we are seeking to understand elementary reaction steps of one reaction event each, then we would like to have a band consisting of only one maxima and two minima (consisting of the initial and final states). **Possible solutions** * Relax the configurations with lower energy. These structures would then correspond to new initial and final configurations. Restart the NEB with these new configurations as the endpoints of the band.* Make sure that the NEB was run with sufficient (and commensurate to the initial and final structures) accuracy. An important requirement is a small enough EDIFF, which governs the accuracy of the forces used in the NEB method. ### Band becomes \"floppy\" **Problem** The band between the IMAGES of the NEB calculation is non\\-monotonic and appears \"floppy\". In such a scenario the interpolated band is likely to oscillate between the computed points.This problem typically appears when one or more images are added to an already computed band. **Possible solutions** * This problem is likely caused by the value of SPRING being too small.* Check if EDIFF is accurate enough for computation of the forces.* Check the interpolation algorithm that you use to determine the interpolated band. A cubic spline might suffice in most cases. ### Band does not converge **Problem** The calculation does not converge, i.e., the NEB method does not find a reasonable path between an initial and final state configuration.Sometimes a completely different path is found than the desired path. **Possible solutions** * Choose a different interpolation strategy to generate your initial guessed path* Try the Improved dimer method instead* Check if the numbering of the atoms is the initial and final configurations. Different ordering of atoms will lead to an unexpected path. Visualizing the initial interpolated path should help with diagnosing any issues related to incorrectly ordered atoms. ### Checking convergence **Problem** Unsure if the highest energy point in the NEB is the first order saddle point between the initial and final state configurations **Possible solutions** * Check if there is exactly one imaginary mode by computing the second derivatives of the energy as implemented in IBRION. IRC calculations---------------- **Problem** Unrealistic structures are generated along the IRC path **Possible solution** * Make sure that a very tight force convergence criteria has been used to determine the transition state; EDIFFG must be at most \\-0\\.025\\.* Choose a smaller value of IRC\\_VNORM0 so that the path conforms with the intrinsic reaction coordinate more closely. Related articles---------------- Nudged elastic bands,IRC calculations"}
{"file_name": "LOCPROJ.md", "content": "LOCPROJ= **\\<sites\\>**\u00a0: **\\<functions\\-Ylm\\-specs\\>**\u00a0: **\\<functions\\-radial\\-specs\\>**   Default: **LOCPROJ** \\= NonenDescription: The LOCPROJ tag specifies local functions on which the orbitals are projected. These projections are written to the PROJCAR file, LOCPROJ file, and vasprun.xml\") file.  --- | **Disambiguation** May also refer to LOCPROJ file. || --- | When the LOCPROJ tag is set, VASP performs the projection of the Kohn\\-Sham orbitals   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  onto a localized orbitals basis   \\|  \u03b2  l m  \u03b1  \u27e9 {\\\\displaystyle \\|\\\\beta \\_{lm}^{\\\\alpha }\\\\rangle }  which can be written as  P  l m n  k  \u03b1  \u2261 \u27e8  \u03b2  l m  \u03b1  \\|  S  \\|  \u03c8  n  k  \u27e9 \\=  \u27e8  \u03b2  l m  \u03b1  \\|  \u03c8  n  k  \u27e9  \u23df  P  l m n  k SOFT  , \u03b1  \\+  \u2211  i j  \u27e8  \u03b2  l m  \u03b1  \\|  p \\~  i  \u27e9  Q  i j  \u27e8  p \\~  j  \\|  \u03c8  n  k  \u27e9  \u23df  P  l m n  k  AUG  , \u03b1  . {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{\\\\alpha }\\\\equiv \\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|S\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=\\\\underbrace {\\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } \\_{P\\_{lmn\\\\mathbf {k} }^{{\\\\text{SOFT}},\\\\alpha }}\\+\\\\underbrace {\\\\sum \\_{ij}\\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|{\\\\tilde {p}}\\_{i}\\\\rangle Q\\_{ij}\\\\langle {\\\\tilde {p}}\\_{j}\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } \\_{P\\_{lmn\\\\mathbf {k} }^{{\\\\text{AUG}},\\\\alpha }}.} Here, the two terms on the right\\-hand side are called soft and augmentation part, respectively.   S {\\\\displaystyle S}  is the overlap matrix,  S \\= 1 \\+  \u2211  i j  \\|  p \\~  i  \u27e9  Q  i j  \u27e8  p \\~  j  \\|  . {\\\\displaystyle S\\=1\\+\\\\sum \\_{ij}\\|{\\\\tilde {p}}\\_{i}\\\\rangle Q\\_{ij}\\\\langle {\\\\tilde {p}}\\_{j}\\|.} The radial and the angular part of   \u03b2  l m  \u03b1  (  r  ) {\\\\displaystyle \\\\beta \\_{lm}^{\\\\alpha }(\\\\mathbf {r} )}  are described by the LOCPROJ tag, which comprises three parts separated by colons that are denoted as **\\<sites\\>**, **\\<functions\\-Ylm\\-specs\\>**, and **\\<functions\\-radial\\-specs\\>**. For instance, to perform the projection onto a hydrogen\\-like *1s* function on the first ionic position specified in the POSCAR file, the tag reads  ```LOCPROJ = 1\u00a0: s\u00a0: Hy  ``` Specifying the local basis-------------------------- * **\\<sites\\>**: The sites on which the local functions are centered. It is specified either using the index of the ionic positions as defined in the POSCAR file, or in terms of direct coordinates of the real space lattice. For instance, `1 2 6-8` will select sites 1, 2, 6, 7, and 8 as defined in the POSCAR file. On the other hand, `(0.5, 0, 0)` specifies the position in terms of direct coordinates of the real space lattice. The modes of the specification can be mixed as well, e.g.,  `1 (0.5, 0, 0) 8`.* **\\<functions\\-Ylm\\-specs\\>**: The angular character of the local functions on the specified sites. Possible specifications are presented in the table below. | s |  |  |  |  |  |  |  || --- | --- | --- | --- | --- | --- | --- | --- || p | py | pz | px |  |  |  |  || d | dxy | dyz | dz2 | dxz | dx2\\-y2 |  |  || f | fy(3x2\\-y2\\) | fxyz | fyz2 | fz3 | fxz2 | fz(x2\\-y2\\) | fx(x2\\-3y2\\) || sp | sp\\-1 | sp\\-2 |  |  |  |  |  || sp2 | sp2\\-1 | sp2\\-2 | sp2\\-3 |  |  |  |  || sp3 | sp3\\-1 | sp3\\-2 | sp3\\-3 | sp3\\-4 |  |  |  || sp3d | sp3d\\-1 | sp3d\\-2 | sp3d\\-3 | sp3d\\-4 | sp3d\\-5 |  |  || sp3d2 | sp3d2\\-1 | sp3d2\\-2 | sp3d2\\-3 | sp3d2\\-4 | sp3d2\\-5 | sp3d2\\-6 |  | For more details, have a look at the section on angular functions. These functions are consistent with the definition of the *initial guesses* used by WANNIER90 (see section 3\\.4 of the WANNIER90 manual).It is possible to select multiple characters by creating a list separated by spaces, e.g., `p sp-1 dxy` performs a projection for all *p* functions (\u2261 *p*x, *p*y, and *p*z), an *sp*\\-1 function, and a *d*xy function on all sites specified by **\\<sites\\>**.* **\\<functions\\-radial\\-specs\\>**: The radial dependency of the local functions. There are three options:**Pr**: use the PAW projectors**Ps**: use the PAW pseudo partial waves**Hy**: use hydrogen\\-like (Slater type) functions (see section 3\\.4 of the WANNIER90 manual) | **Mind:** For **Pr** or **Ps**, which are radial functions derived from the PAW datasets, one can only specify spherical harmonics with *the same angular moment l* in the **\\<functions\\-Ylm\\-specs\\>** part. This means, *s*, *p*, *d*, *f*, and/or their respective separate constituents. || --- | The radial specifiers can optionally be modified using the following modification statements:**Pr** \\[ *nth\\-of\\-l* \\[ *species\\-number* ] ]*nth\\-of\\-l*: Uses the radial function of the *nth* projector with the angular moment specified in **\\<functions\\-Ylm\\-specs\\>**. The local basis of our PAW datasets typically contains 2 projectors per angular moment. By default, the projector that corresponds to the highest bound state of the relevant angular moment will be used.*species\\-number*: Specifies from which PAW dataset in the current POTCAR file the radial functions should be derived. When the positions of the local functions are specified using the ionic site indices of the POSCAR file, the code will default to the corresponding atomic types.  **Ps** \\[ *nth\\-of\\-l* \\[ *species\\-number* ] ]*nth\\-of\\-l*: Uses the radial function of the *nth* pseudo partial wave with the angular moment specified in **\\<functions\\-Ylm\\-specs\\>**. The local basis of our PAW datasets typically contains 2 pseudo partial waves per angular moment. By default, the pseudo partial wave that corresponds to the highest bound state of the relevant angular moment is used.*species\\-number*: Specifies from which PAW dataset in the current POTCAR file the radial functions should be derived. When the positions of the local functions are specified using the ionic site indices of the POSCAR file, the default is the corresponding atomic type.  **Hy** \\[ *n* \\[ *\u03b1* ] ]*n*: Main quantum number of the hydrogen\\-like radial functions. Default: *n\\=1*.*\u03b1*: controls the diffusivity of the radial functions ( *\u03b1\\=Z/a0* in \u00c5\\-1). Default: *\u03b1*\\=1\\.0 \u00c5\\-1. *n*s type Hydrogen radial wave functions | n   {\\\\displaystyle n}  n | R ( r )   {\\\\displaystyle R(r)}  R(r) || --- | --- || 1   {\\\\displaystyle 1}  1 | 2  \u03b1  3  /  2   exp \u2061 ( \u2212 \u03b1 r )   {\\\\displaystyle 2\\\\alpha ^{3/2}\\\\exp(\\-\\\\alpha r)}  2\\alpha ^{{3/2}}\\exp(-\\alpha r) || 2   {\\\\displaystyle 2}  2 | 1  2   2       \u03b1  3  /  2   ( 2 \u2212 \u03b1 r ) exp \u2061 ( \u2212 \u03b1 r  /  2 )   {\\\\displaystyle {\\\\frac {1}{2{\\\\sqrt {2}}}}\\\\alpha ^{3/2}(2\\-\\\\alpha r)\\\\exp(\\-\\\\alpha r/2\\)}  {\\frac  {1}{2{\\sqrt  2}}}\\alpha ^{{3/2}}(2-\\alpha r)\\exp(-\\alpha r/2) || 3   {\\\\displaystyle 3}  3 | 4 27     \u03b1  3  /  2   ( 1 \u2212 2 \u03b1 r  /  3 \\+ 2  \u03b1  2    r  2    /  27 ) exp \u2061 ( \u2212 \u03b1 r  /  3 )   {\\\\displaystyle {\\\\sqrt {\\\\frac {4}{27}}}\\\\alpha ^{3/2}(1\\-2\\\\alpha r/3\\+2\\\\alpha ^{2}r^{2}/27\\)\\\\exp(\\-\\\\alpha r/3\\)}  {{\\sqrt  {\\frac  {4}{27}}}}\\alpha ^{{3/2}}(1-2\\alpha r/3+2\\alpha ^{2}r^{2}/27)\\exp(-\\alpha r/3) | This is consistent with the definition of the *initial guesses* used by WANNIER90 (section 3\\.4 of the WANNIER90 manual).  | **Important:** Different projections have to be specified in multiple lines, as the LOCPROJ tag can only be set once. || --- |  For instance,  ```LOCPROJ = \"1\u00a0: s\u00a0: Hy 2           1 3\u00a0: dxy\u00a0: Ps 2 3\"  ``` performs the projection onto a hydrogen\\-like *2s* function and a *d*xy pseudo partial wave (2nd *d* channel of atomic species 3\\) on ionic site 1, and a *d*xy pseudo partial wave (identical type) on site 3\\. | **Deprecated:** For VASP versions \\<\\= 6\\.1\\.x, multiple occurrences of the LOCPROJ tag are allowed and taken into account. || --- | For other tags, the second instance of a tag in the INCAR is normally ignored. However, here  ```LOCPROJ = 1\u00a0: s\u00a0: Hy 2LOCPROJ = 1 3\u00a0: dxy\u00a0: Ps 2 3  ``` is possible. Example for LOCPROJ tag----------------------- As mentioned above, to put a hydrogen\\-like *1s* function on the first ionic position specified in the POSCAR file, the tag reads  ```LOCPROJ = 1\u00a0: s\u00a0: Hy  ``` in the INCAR file. To change this into a *2s* function, specify  ```LOCPROJ = 1\u00a0: s\u00a0: Hy 2  ``` To project the orbitals onto the PAW projectors of the valence atomic *d*xy\\-states of the atoms on sites 1 and 3, write  ```LOCPROJ = 1 3\u00a0: dxy\u00a0: Pr  ``` This will only work if the atoms on these sites have valence atomic *d*\\-states. Otherwise, the necessary projectors will not be available in the relevant PAW datasets, and the code will exit in error at startup. To forcibly use the radial function of the second *d* channel, write  ```LOCPROJ = 1 3\u00a0: dxy\u00a0: Pr 2  ``` Again, provided the PAW dataset(s) contain more than one *d* channel.Similarly, one can project onto the pseudo partial waves of the second *d* channel in the PAW dataset(s) by writing   ```LOCPROJ = 1 3\u00a0: dxy\u00a0: Ps 2  ``` To project onto the functions of the third PAW dataset in the POTCAR file, specify  ```LOCPROJ = 1 3\u00a0: dxy\u00a0: Ps 2 3  ``` LOCPROJ file------------ The LOCPROJ file contains information about the projections of the Bloch states onto the localized orbitals specified with the LOCPROJ tag described above. The file contains a header with the information about all projections: * ISITE: Index of the site in the POSCAR file.* R: Position in fractional coordinates.* Radial type: Is one of \"PAW projector\",\"PS partial wave\", \"Hydrogen\\-like\" depending on the choice of **Pr**, **Ps** or **Hy**, respectively.* Angular type: Angular character of the local functions, as presented in the table above in **\\<functions\\-Ylm\\-specs\\>**. Each Kohn\\-Sham orbital is identified by the spin, k point, band index, eigenvalue, and occupation.For each of these Kohn\\-Sham orbitals, VASP writes the real and imaginary part of the projection onto localized orbitals   \u27e8  \u03b2  l m  \u03b1  \\|  S  \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|S\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } . Note that for **vasp\\_gam** only the real part exists."}
{"file_name": "NUPDOWN.md", "content": "NUPDOWN= \\[positive real]   Default: **NUPDOWN** \\= not setnDescription: Sets the difference between the number of electrons in the up and down spin components.  ---   Allows calculations for a specific spin multiplet, i.e. the difference of the number of electrons in the up and down spin component will be kept fixed to the specified value. There is a word of caution required: If NUPDOWN is set in the INCAR file the initial moment for the charge density should be the same. Otherwise convergence can slow down. When starting from atomic charge densities (ICHARG\\=2\\), VASP will try to do this automatically by setting MAGMOM to NUPDOWN/NIONS\"). The user can of course overwrite this default by specifying a different MAGMOM (which should still result in the correct total moment). If one initializes the charge density from the one\\-electron wavefunctions, the initial moment is always correct, because VASP \"pushes\" the required number of electrons from the down to the up component. Initializing the charge density from the CHGCAR file (ICHARG\\=1\\), however, the initial moment is usually incorrect! If no value is set (or NUPDOWN\\=\\-1\\) a full relaxation will be performed. This is also the default."}
{"file_name": "VDW_A1.md", "content": "VDW\\_A1= \\[real]n| Default: **VDW\\_A1** | \\= 1\\.0 | for DFT\\-D3 with the BJ damping function || --- | --- | --- | Description: VDW\\_A1 defines the damping function parameter   a  1 {\\\\displaystyle a\\_{1}}  .  --- VDW\\_A1 sets the damping function parameter   a  1 {\\\\displaystyle a\\_{1}}  for the DFT\\-D3 (BJ damping function) and DFT\\-D4 methods."}
{"file_name": "Single_band_steepest_descent_scheme.md", "content": "The Davidson iteration scheme optimizes all bands simultaneously. Optimizing a singleband at a time would save the storage necessary for the NBANDS gradients.In a simple steepest descent scheme the preconditioned residual vector   p  n {\\\\displaystyle p\\_{n}}  is orthonormalizedto the current set of wavefunctions i.e.  g  n  \\= ( 1 \u2212  \u2211  n \u2032  \\|  \u03d5  n \u2032  \u27e9 \u27e8  \u03d5  n \u2032  \\|  S  )  \\|  p  n  \u27e9 . {\\\\displaystyle g\\_{n}\\=(1\\-\\\\sum \\_{n'}\\|\\\\phi \\_{n'}\\\\rangle \\\\langle \\\\phi \\_{n'}\\|{\\\\bf {S}})\\|p\\_{n}\\\\rangle .} Then the linear combination of this 'search direction'   g  n {\\\\displaystyle g\\_{n}} and the current wavefunction   \u03d5  n {\\\\displaystyle \\\\phi \\_{n}} is calculated which minimizes the expectation value of the Hamiltonian.This requires to solve the   2 \u00d7 2 {\\\\displaystyle 2\\\\times 2}  eigenvalue problem  \u27e8  b  i  \\|  H  \u2212 \u03f5  S  \\|  b  j  \u27e9 \\= 0 , {\\\\displaystyle \\\\langle b\\_{i}\\|{\\\\bf {H}}\\-\\\\epsilon {\\\\bf {S}}\\|b\\_{j}\\\\rangle \\=0,} with the basis set  b  i , i \\= 1 , 2  \\= {  \u03d5  n  /  g  n  } . {\\\\displaystyle b\\_{i,i\\=1,2}\\=\\\\{\\\\phi \\_{n}/g\\_{n}\\\\}.}  ---"}
{"file_name": "LASYNC.md", "content": "LASYNC= \\[logical]   Default: **LASYNC** \\= .FALSE.nDescription: Controls the overlap in communication.   --- If LASYNC\\=*.TRUE.* is set in the INCAR file, VASP will try to overlap communication with calculations.This might improve performance or degrade it depending on the MPI library and hardware you are running on.Please do your own testing and compare the runtimes and results before using this tag in production runs.Compiling VASP using the \\-DPROFILING precompiler switch provides a detailed timing of the different VASP routines which helps in determining if there is a performance gain.Please report any issues in the VASP forum. Examples that use this tag  ---"}
{"file_name": "Biased_molecular_dynamics.md", "content": "**Biased molecular dynamics** (MD) refers to advanced MD\\-simulation methods that introduce a *bias potential*. One of the most important purposes of using bias potentials is to enhance the sampling of phase space with low probability density (e.g., transition regions of chemical reactions). Depending on the type of sampling and in combination with the corresponding statistical methods one then has access to important thermodynamic quantities like, e.g., free energies. Biased molecular dynamics comes in very different flavors such as, e.g., umbrella sampling[\\[1]](#cite_note-torrie:jcp:1977-1) and umbrella integration[\\[2]](#cite_note-kaestner:jcp:2005-2), to name a few. In the following, a short theoretical overview, an introduction to the available bias potentials, and a description of how to use bias potentials in VASP is given. For a comprehensive description (especially about umbrella sampling), we refer the interested user to Ref. [\\[3]](#cite_note-frenkel:ap-book:2002-3) written by D. Frenkel and B. Smit. Theoretical background---------------------- The probability density for a geometric parameter \u03be of the system driven by a Hamiltonian  H ( q , p ) \\= T ( p ) \\+ V ( q ) , {\\\\displaystyle H(q,p)\\=T(p)\\+V(q),\\\\;} with *T*(*p*), and *V*(*q*) being kinetic, and potential energies, respectively, can be written as  P (  \u03be  i  ) \\=  \u222b \u03b4  (  \u03be ( q ) \u2212  \u03be  i  )  exp \u2061  {  \u2212 H ( q , p )  /  k  B  T  }  d q  d p  \u222b exp \u2061  {  \u2212 H ( q , p )  /  k  B  T  }  d q  d p  \\= \u27e8 \u03b4  (  \u03be ( q ) \u2212  \u03be  i  )  \u27e9  H  . {\\\\displaystyle P(\\\\xi \\_{i})\\={\\\\frac {\\\\int \\\\delta {\\\\Big (}\\\\xi (q)\\-\\\\xi \\_{i}{\\\\Big )}\\\\exp \\\\left\\\\{\\-H(q,p)/k\\_{B}\\\\,T\\\\right\\\\}dq\\\\,dp}{\\\\int \\\\exp \\\\left\\\\{\\-H(q,p)/k\\_{B}\\\\,T\\\\right\\\\}dq\\\\,dp}}\\=\\\\langle \\\\delta {\\\\Big (}\\\\xi (q)\\-\\\\xi \\_{i}{\\\\Big )}\\\\rangle \\_{H}.} The term   \u27e8 X  \u27e9  H {\\\\displaystyle \\\\langle X\\\\rangle \\_{H}}  stands for a thermal average of quantity *X* evaluated for the system driven by the Hamiltonian *H*. If the system is modified by adding a bias potential   V \\~  ( \u03be ) {\\\\displaystyle {\\\\tilde {V}}(\\\\xi )}  acting on one or multiple selected internal coordinates of the system \u03be\\=\u03be(*q*), the Hamiltonian takes the form  H \\~  ( q , p ) \\= H ( q , p ) \\+  V \\~  ( \u03be ) , {\\\\displaystyle {\\\\tilde {H}}(q,p)\\=H(q,p)\\+{\\\\tilde {V}}(\\\\xi ),} and the probability density of \u03be in the biased ensemble is  P \\~  (  \u03be  i  ) \\=  \u222b \u03b4  (  \u03be ( q ) \u2212  \u03be  i  )  exp \u2061  {  \u2212  H \\~  ( q , p )  /  k  B  T  }  d q  d p  \u222b exp \u2061  {  \u2212  H \\~  ( q , p )  /  k  B  T  }  d q  d p  \\= \u27e8 \u03b4  (  \u03be ( q ) \u2212  \u03be  i  )  \u27e9  H \\~  . {\\\\displaystyle {\\\\tilde {P}}(\\\\xi \\_{i})\\={\\\\frac {\\\\int \\\\delta {\\\\Big (}\\\\xi (q)\\-\\\\xi \\_{i}{\\\\Big )}\\\\exp \\\\left\\\\{\\-{\\\\tilde {H}}(q,p)/k\\_{B}\\\\,T\\\\right\\\\}dq\\\\,dp}{\\\\int \\\\exp \\\\left\\\\{\\-{\\\\tilde {H}}(q,p)/k\\_{B}\\\\,T\\\\right\\\\}dq\\\\,dp}}\\=\\\\langle \\\\delta {\\\\Big (}\\\\xi (q)\\-\\\\xi \\_{i}{\\\\Big )}\\\\rangle \\_{\\\\tilde {H}}.} It can be shown that the biased and unbiased averages are related via  P (  \u03be  i  ) \\=  P \\~  (  \u03be  i  )  exp \u2061  {  V \\~  ( \u03be )  /  k  B  T  }  \u27e8 exp \u2061  {  V \\~  ( \u03be )  /  k  B  T  }  \u27e9  H \\~  . {\\\\displaystyle P(\\\\xi \\_{i})\\={\\\\tilde {P}}(\\\\xi \\_{i}){\\\\frac {\\\\exp \\\\left\\\\{{\\\\tilde {V}}(\\\\xi )/k\\_{B}\\\\,T\\\\right\\\\}}{\\\\langle \\\\exp \\\\left\\\\{{\\\\tilde {V}}(\\\\xi )/k\\_{B}\\\\,T\\\\right\\\\}\\\\rangle \\_{\\\\tilde {H}}}}.} More generally, an observable  \u27e8 A  \u27e9  H  \\=  \u222b A ( q ) exp \u2061  {  \u2212 H ( q , p )  /  k  B  T  }  d q  d p  \u222b exp \u2061  {  \u2212 H ( q , p )  /  k  B  T  }  d q  d p {\\\\displaystyle \\\\langle A\\\\rangle \\_{H}\\={\\\\frac {\\\\int A(q)\\\\exp \\\\left\\\\{\\-H(q,p)/k\\_{B}\\\\,T\\\\right\\\\}dq\\\\,dp}{\\\\int \\\\exp \\\\left\\\\{\\-H(q,p)/k\\_{B}\\\\,T\\\\right\\\\}dq\\\\,dp}}} can be expressed in terms of thermal averages within the biased ensemble as   \u27e8 A  \u27e9  H  \\=  \u27e8 A ( q )  exp \u2061  {  V \\~  ( \u03be )  /  k  B  T  }  \u27e9  H \\~  \u27e8 exp \u2061  {  V \\~  ( \u03be )  /  k  B  T  }  \u27e9  H \\~  . {\\\\displaystyle \\\\langle A\\\\rangle \\_{H}\\={\\\\frac {\\\\langle A(q)\\\\,\\\\exp \\\\left\\\\{{\\\\tilde {V}}(\\\\xi )/k\\_{B}\\\\,T\\\\right\\\\}\\\\rangle \\_{\\\\tilde {H}}}{\\\\langle \\\\exp \\\\left\\\\{{\\\\tilde {V}}(\\\\xi )/k\\_{B}\\\\,T\\\\right\\\\}\\\\rangle \\_{\\\\tilde {H}}}}.} One of the most popular methods using bias potentials is umbrella sampling[\\[1]](#cite_note-torrie:jcp:1977-1). This method uses a bias potential to enhance sampling of \u03be in regions with low *P*(\u03be*i*), e.g., transition regions of chemical reactions. The correct distributions are recovered afterward using the equation for   \u27e8 A  \u27e9  H {\\\\displaystyle \\\\langle A\\\\rangle \\_{H}}  above. How to------ * First one needs to setup a standard molecular dynamics run. The bias potentials are supported in both the NVT and NpT MD simulations, regardless of the particular thermostat and/or barostat setting. | **Mind:** Mind that for VASP 5\\.x the biased molecular dynamics runs have to be chosen by adding 10 to the chosen value of MDALGO. E.g. MDALGO\\=12 instead of MDALGO\\=2 has to be chosen for Nose\\-Hoover thermostat. || --- | * Then one needs to set the geometric parameters and bias potential types. The geometric parameters \u03be, also called collective variables, that are controlled via the potentials are defined in the ICONST file. The type of bias potential is also set in this file. The format of this file follows this layout:  ```flag item(1) ... item(N) status  ``` Here `flag` specifies the type of geometric parameters (bond lengths, angles, etc.), `item(1) ... item(N)` the actual geometric items (atom numbers, etc.) and the `status` sets the type of used bias potential. Here we advise the user to also look into the description of the full capabilities of the geometric parameters.  * To avoid the update of the bias potential HILLS\\_BIN\\=NSW is set by default.* Next one needs to set the parameters of the potential in the INCAR (harmonic and step function) file or in the PENALTYPOT file (Gaussian). The following table summarizes the available potentials with their corresponding parameters: | Potential type | `status` in ICONST | INCAR parameters || --- | --- | --- || Harmonic potential | 8 | SPRING\\_K, SPRING\\_R0, optional SPRING\\_V0 || Step function | 4 | FBIAS\\_A, FBIAS\\_D, and FBIAS\\_R0 || Gaussian potential | 5 | parameters set in PENALTYPOT file | ### Available potentials [](File_Bias_potentials.html) Fig.1\\) Graphical representation of (a) harmonic, (b) Fermi function\\-shaped, and (c) and Gauss function\\-shaped bias potentials. In the following details are given on how to control the available bias potentials in VASP that are plotted in Fig.1\\. #### Harmonic potentials A sum of Harmonic potentials (curve (a) in Fig.1\\)  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  8  ) \\=  \u2211  \u03bc \\= 1  M  1 2  \u03ba  \u03bc  (  \u03be  \u03bc  ( q ) \u2212  \u03be  0 \u03bc  )  2 {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{8}})\\=\\\\sum \\_{\\\\mu \\=1}^{M}{\\\\frac {1}{2}}\\\\kappa \\_{\\\\mu }(\\\\xi \\_{\\\\mu }(q)\\-\\\\xi \\_{0\\\\mu })^{2}\\\\;} where the sum runs over all (  M  8 {\\\\displaystyle M\\_{8}} ) coordinates the potential acts upon. The potential is chosen in the ICONST file by setting the `status` to 8\\. The parameters of the potential are the force constant   \u03ba  \u03bc {\\\\displaystyle \\\\kappa \\_{\\\\mu }}  (SPRING\\_K) and the minimum or the potential   \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }}  SPRING\\_R0. These must be set in the INCAR file. Optionally, it is possible to change the value of   \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }}  every MD step at a constant rate defined via the INCAR tag SPRING\\_V0. | **Mind:** The number of items defined via SPRING\\_K, SPRING\\_R0, and SPRING\\_V0 must be equal to      M  8     {\\\\displaystyle M\\_{8}}  }. Otherwise, the calculation terminates with an error message. || --- | This form of bias potential is employed in several simulation protocols, such as the umbrella sampling[\\[1]](#cite_note-torrie:jcp:1977-1), umbrella integration, or steered MD, and is useful also in cases where the   \u03be  \u03bc {\\\\displaystyle \\\\xi \\_{\\\\mu }}  values need to be restrained.#### Step function A sum of Fermi\\-like step functions (curve (b) in Fig.1\\)  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  4  ) \\=  \u2211  \u03bc \\= 1  M  4  A  \u03bc  1 \\+  exp  \\[  \u2212  D  \u03bc  (  \u03be ( q )  \u03be  0 \u03bc  \u2212 1 )  ] {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{4}})\\=\\\\sum \\_{\\\\mu \\=1}^{M\\_{4}}{\\\\frac {A\\_{\\\\mu }}{1\\+{\\\\text{exp}}\\\\left\\[\\-D\\_{\\\\mu }({\\\\frac {\\\\xi (q)}{\\\\xi \\_{0\\\\mu }}}\\-1\\)\\\\right]}}\\\\;} where the sum runs over all (  M  4 {\\\\displaystyle M\\_{4}} ) coordinates the potential acts upon. The potential is chosen in the ICONST file by setting the `status` to 4\\. The parameters of the potential are the height of the step (  A  \u03bc {\\\\displaystyle A\\_{\\\\mu }}  set by FBIAS\\_A), the slope around the point   \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }}  (  D  \u03bc {\\\\displaystyle D\\_{\\\\mu }}  set by FBIAS\\_D), and the position of the step (  \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }}  set by FBIAS\\_R0). These must be set in the INCAR file. | **Mind:** The number of items defined via FBIAS\\_A, FBIAS\\_D, and FBIAS\\_R0 must be equal to      M  4     {\\\\displaystyle M\\_{4}}  }. Otherwise, the calculation terminates with an error message. || --- | This form of potential is suitable especially for imposing restrictions on the upper (or lower) limit of the value of   \u03be {\\\\displaystyle \\\\xi }  .#### Gaussian potential A sum of Gauss functions (curve (b) in Fig.1\\)  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  ) \\=  \u2211  \u03bd \\= 1  N  5  h  \u03bd  exp  \\[  \u2212  \u2211  \u03bc \\= 1  M  5  (  \u03be  \u03bc  ( q ) \u2212  \u03be  0 \u03bd , \u03bc  )  2  2  w  \u03bd  2  ]  , {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M})\\=\\\\sum \\_{\\\u \\=1}^{N\\_{5}}h\\_{\\\u }{\\\\text{exp}}\\\\left\\[\\-{\\\\frac {\\\\sum \\_{\\\\mu \\=1}^{M\\_{5}}(\\\\xi \\_{\\\\mu }(q)\\-\\\\xi \\_{0\\\u ,\\\\mu })^{2}}{2w\\_{\\\u }^{2}}}\\\\right],\\\\;} where   N  5 {\\\\displaystyle N\\_{5}}  is the number of Gaussian functions and   M  5 {\\\\displaystyle M\\_{5}}  is the number of coordinates the potential acts upon. The potential is chosen in the ICONST file by setting the `status` to 5\\. The parameters of the potentials,   h  \u03bd {\\\\displaystyle h\\_{\\\u }}  ,  w  \u03bd {\\\\displaystyle w\\_{\\\u }} , and   \u03be  0 \u03bd , \u03bc {\\\\displaystyle \\\\xi \\_{0\\\u ,\\\\mu }}  are defined in the PENALTYPOT file.This type of bias potential is primarily intended for use in metadynamics, but since Gaussians can be used as basis functions for more general shapes, they can also be used to prepare various atypically shaped bias potentials.### Output The values of all collective variables defined in the ICONST file for each MD step are listed in the REPORT file. Check the lines after the string Metadynamics.Examples of usage----------------- Let us consider the nucleophile substitution reaction of CH  3 {\\\\displaystyle \\_{3}} Cl with Cl  \u2212 {\\\\displaystyle ^{\\-}} . The reactant is a weak van\\-der\\-Waals complex. The corresponding POSCAR file reads   ```vdW complex CH3Cl...Cl 1.0000000000000012.0000000000000000    0.0000000000000000    0.00000000000000000.0000000000000000    12.0000000000000000    0.00000000000000000.0000000000000000    0.0000000000000000    12.0000000000000000C H Cl1 3 2cart5.91331371  7.11364924  5.780379605.81982231  8.15982106  5.469690174.92222130  6.65954232  5.889789696.47810398  7.03808479  6.715863854.32824726  8.75151396  7.807432026.84157897  6.18713289  4.46842049  ``` Due to the weak interactions between CH  3 {\\\\displaystyle \\_{3}} Cl and Cl  \u2212 {\\\\displaystyle ^{\\-}} , the complex can collapse at high temperatures. This can be avoided by setting an upper bound for the length of the non\\-bonding Cl...C interactions. This can be conveniently achieved by using a Fermi\\-like step\\-shaped bias potential. To this end, we need to define the Cl...C distance, i.e., the distance between the atoms 1 and 5, as a coordinate with status 4 in the ICONST file:  ```R 1 5 4     ``` Next, we need to set the molecular dynamics parameters and specify the bias potential parameters FBIAS\\_A, FBIAS\\_D, and FBIAS\\_R0 in the INCAR file:   ```# Molecular dynamics partIBRION = 0TEBEG = 300TEEND = 300MDALGO = 2POTIM = 2.0NSW = 10000# Bias potential partFBIAS_A  = 1FBIAS_D  = 50FBIAS_R0 = 3.5  ``` Since the bias potential acts only on one internal coordinate (  M  4  \\= 1 {\\\\displaystyle M\\_{4}\\=1} ), we need to provide only one number for each of the tags. The chosen bias potential parameters ensure that repulsive bias forces steeply increase when the C...Cl distance is increased beyond about  3\\.2  \u00c5 {\\\\displaystyle 3\\.2\\\\mathrm {\\\\AA} } . This causes a shortening of the distance in the next MD step. Notice that the bias force is essentially negligible for distances below   3  \u00c5 {\\\\displaystyle 3\\\\mathrm {\\\\AA} }  .A careful adjustment of FBIAS\\_A and FBIAS\\_D is needed to ensure that (i) the bias force is large enough to effectively limit the value of   \u03be {\\\\displaystyle \\\\xi } , and (ii) the interval of   \u03be {\\\\displaystyle \\\\xi }  values for which the bias forces are significant is broad enough to avoid overcoming via random fluctuations. A suitable setting can be found by noting that the maximal bias force of   D  A  4  \u03be  0 {\\\\displaystyle {\\\\frac {D\\\\,A}{4\\\\xi \\_{0}}}}  is exerted on the system at the point   \u03be \\=  \u03be  0 {\\\\displaystyle \\\\xi \\=\\\\xi \\_{0}} . This can be seen by inspecting the analytical expression for the potential. Related methods in VASP----------------------- * Metadynamics: In contrast to the methods discussed on this page metadynamics continuously updates the bias potential of the system to push it into unvisited parts of phase space. * Interface pinning: This employs a bias potential to pin the state of an interface between a solid and a liquid. This method uses entirely different INCAR tags than the bias potentials presented on this page."}
{"file_name": "Technical_errors.md", "content": "Technical errors fall into four categories: * Errors due to k\\-point sampling. This will be discussed in Number of k points and method for smearing. Mind that the errors due to the k\\-point mesh are not transferable i.e. a   9 \u00d7 9 \u00d7 9 {\\\\displaystyle 9\\\\times 9\\\\times 9}  k\\-points grid leads to a completely different error for fcc, bcc and sc. It is therefore absolutely essential to be very careful with respect to the k\\-point sampling.* Errors due to the cut\\-off ENCUT. This error is highly transferable, i.e. the default cutoff ENCUT (read from the POTCAR file) is in most cases safe, and one can expect that energy differences will be accurate within a few meV (see Energy cut off and FFT mesh). An exception is the stress tensor which converges notoriously slow with respect to the size of the plane wave basis set (see Energy vs volume Volume relaxations and Pulay stress).* Wrap around errors (see Wrap\\-around errors): These errors are due to an insufficient FFT mesh and they are not as well behaved as the errors due to the energy cut off (see Energy cut off and FFT mesh). But once again, if one uses the default cut off (read from the POTCAR file) the wrap around errors are usually very small (a few meV per atom) even if the FFT mesh is not sufficient. The reason is that the default cut offs in VASP are rather large, and therefore the charge density and the potentials contain only small components in the region where the wrap around error occurs.* Errors due to the real space projection: Real space projection always introduces additional (small) errors. These errors are also quite well behaved i.e. if one uses the same real space projection operators all the time, the errors are almost constants. Anyway, one should try to avoid the evaluation of energy differences between calculations with LREAL\\=*.FALSE.* and LREAL\\=*.TRUE.* (see LREAL). Mind that for LREAL\\=*Auto* (the recommended setting) the real space operators are optimized by VASP according to ENCUT and PREC i.e. one gets different real space projection operators if ENCUT or PREC is changed. In conclusion, to minimize errors one should use the same setting for ENCUT, ENAUG, PREC, LREAL and ROPT throughout all calculations, and these flags should be specified explicitly in the INCAR file. In addition it is also preferable to use the same supercell for all calculations whenever possible.  ---"}
{"file_name": "Not_enough_memory.md", "content": "Nowadays, for standard DFT and hybrid functional calculations, memory is usually not an issues.Furthermore, by increasing the number of cores, the memory requirements per core can be reduced significantly.   If memory shortage is encountered, the following steps can be taken in order to reduce the memory requirements per core. * For large and many\\-atom systems, it is advised to increase NCORE to larger values (say to 4, 8 potentially to or even beyond the number of cores per node). This allows to decrease the memory requirements per core for the storage of the non\\-local projectors. Furthermore, real space projection, LREAL\\= A, also decreases the required memory per core.* KPAR allows to distribute the k\\-points over cores. Unfortunately, only the calculations are distributed, but the storage of the orbitals is not distributed over cores. This means that using KPAR\\=1 results in the smallest memory footprint per core (but slower calculations, since VASP needs to rely on other less efficient parallelization strategies).* Switch of symmetrisation (ISYM\\=0\\). Charge symmetrisation is done locally on each node requiring three fairly large arrays. VASP.4\\.4\\.2 (and newer versions) posses a switch to run a more memory conserving symmetrization. From VASP.5 onwards, the memory conserving version, ISYM\\=2, is the default. Results might differ slightly from ISYM\\=1 (usually by about 1E\\-5 eV).* Make sure to use scaLAPACK if your system becomes large. If scaLAPACK is not available, VASP needs to store an NBANDS x NBANDS matrix on each core, in order to diagonalize the Hamiltonian in the subspace of the calculated orbitals. If scaLAPACK is compiled in and used, the matrix is distributed over all cores jointly handling one k\\-point. Note that decreasing KPAR reduces the memory demand for this matrix (if scaLAPACK is used). A final hint is in place. At some key places, the VASP code reports the required memory per core in the OUTCAR file. Please search the lines  ```total amount of memory used by VASP MPI-rank0   457796. kBytes=======================================================================  base     \u00a0:      30000. kBytes  nonlr-proj:      12085. kBytes  fftplans \u00a0:      29652. kBytes  grid     \u00a0:      54584. kBytes  one-center:        211. kBytes  wavefun  \u00a0:     331264. kBytes  ``` and inspect how much memory VASP uses per core. \"base\" is the estimated memory use for the executable and libraries, \"nonlr\\-proj\" the required memory for the non\\-local projection operators, \"grid\" that for 3D arrays representing the charge density, potentials, etc., and \"wavefun\" the requirements for the one\\-electron wavefunctions (orbitals). Storage of the orbitals is usually most memory demanding.    ---"}
{"file_name": "NHC_PERIOD.md", "content": "NHC\\_PERIOD= \\[real]   Default: **NHC\\_PERIOD** \\= 40nDescription: Time scale of the Nos\u00e9\\-Hoover chain in terms of the number of MD steps.   --- NHC\\_PERIOD sets the time scale (  \u03c4 {\\\\displaystyle \\\\tau } ) of the Nos\u00e9\\-Hoover\u2013chain thermostat NHC\\_thermostat. It is expressed in terms of the number of MD steps and must be interpreted in combination with the time step set by POTIM. The setting NHC\\_PERIOD\\=0 corresponds will generate the NVE ensemble.  | **Tip:** The value of NHC\\_PERIOD should correspond to a characteristic time scale in the system. If this is unknown, NHC\\_PERIOD should be set to a value between 20 and 200\\. || --- |"}
{"file_name": "OFIELD_Q6_FAR.md", "content": "OFIELD\\_Q6\\_FAR= \\[real]nDescription: OFIELD\\_Q6\\_FAR sets the far fading distance for the computation of a continuous   Q  6 {\\\\displaystyle Q\\_{6}}  parameter in the interface\\-pinning method.   --- The unit of OFIELD\\_Q6\\_FAR is   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ."}
{"file_name": "ZVAL.md", "content": "ZVAL= \\[real]   Default: **ZVAL** \\= values read from POTCARnDescription: ZVAL describes the valency of each atomic sphere.  --- ZVAL and POMASS determine the valency and the atomic mass of each atomic species and should be omitted usually since the values are read from the POTCAR file. If incompatibilities exist, VASP will stop."}
{"file_name": "PSTRESS.md", "content": "PSTRESS= \\[real]   Default: **PSTRESS** \\= 0nDescription: Sets the external pressure in kB or adds corrections to the stress tensor.  --- The unit of PSTRESS is kB. During ionic minimization, an energy term   E \\= V \u00d7  P S T R E S S {\\\\displaystyle E\\=V\\\\times \\\\mathrm {PSTRESS} }  is added to the total energy and the value of PSTRESS is subtracted from the diagonals of the stress tensor. This allows to perform structure optimization at a specific external pressure. In molecular\\-dynamics calculations within the NpT ensemble, PSTRESS controls the target pressure for the Parinello\\-Rahman[\\[1]](#cite_note-parrinello:prl:1980-1)[\\[2]](#cite_note-parrinello:jap:1981-2) barostat.  Generally, if a negative value is supplied, the system is under effective tensile strain and during relaxations (or molecular dynamics simulations) the volume will increase. If a positive value is supplied, the system is under compressive strain; this will decrease the volume during relaxations and molecular dynamics simulations. PSTRESS can also be used to correct errors caused by the Pulay stress, i.e., errors in the calculated stress tensor caused by the incomplete plane wave basis set. To correct for Pulay\\-stress errors, set PSTRESS to the negative value of the Pulay stress. The Pulay stress is computed by taking the difference between the external pressure at the desired cutoff and a very large energy cutoff (check the lines 'external pressure' in the OUTCAR file and calculate pressure at cutoff you want to use   \u2212 {\\\\displaystyle \\-}  pressure at large cutoff; this must be a negative value). Before using this tag in this manner, please read the following section carefully: Volume relaxation. Examples that use this tag  --- 1. \u2191 M. Parrinello and A. Rahman, Phys. Rev. Lett. **45**, 1196 (1980\\).2. \u2191 M. Parrinello and A. Rahman, J. Appl. Phys. **52**, 7182 (1981\\)."}
{"file_name": "FFNCAR.md", "content": "Redirect to: * ML FFN"}
{"file_name": "Vaspwiki_standards.md", "content": "* You might start a page on the INCAR\\-tag \"tagname\" as follows  ```{{TAGDEF|TAGNAME|val1 [{{!}} val2 {{!}} val3 {{!}} .. ] [|default] }} ``` Examples:1. ```{{TAGDEF|NELM|[integer]}} ``` NELM= \\[integer]2. ```{{TAGDEF|NELM|[integer]|60}} ``` NELM= \\[integer]   Default: **NELM** \\= 603. ```{{TAGDEF|ISTART|0 {{!}} 1  {{!}} 2|0}} ``` ISTART= 0 \\| 1 \\| 2   Default: **ISTART** \\= 0 * When an INCAR\\-tag has more than one default (a conditional default) use the following construct  ```{{TAGDEF|TAGNAME|val1 {{!}} val2 {{!}} val3}}{{DEF|TAGNAME|default1|condition1|default2|condition2 [|default3|condition3] ... }}  ``` TAGNAME\")= val1 \\| val2 \\| val3n| Default: **TAGNAME** | \\= default1 | condition1 || --- | --- | --- ||  | \\= default2 | condition2 ||  | \\= default3 | condition3 | for instance  ```{{TAGDEF|ICHARG|0 {{!}} 1 {{!}} 2 {{!}} 4}}{{DEF|ICHARG|2|if {{TAG|ISTART}}{{=}}0|0|else}}  ``` ICHARG= 0 \\| 1 \\| 2 \\| 4n| Default: **ICHARG** | \\= 2 | if ISTART\\=0 || --- | --- | --- ||  | \\= 0 | else |   The TAGDEF template can harbor up to six \"default\\|condition\" combinations. * Followed by  ```Description: {{TAG|TAGNAME}} ...----and maybe lots of text ... like if you want to know how to putin an equation in LaTeX style then have a look at the source of the {{TAG|PREC}} page  ``` Description: TAGNAME\") ...  --- and your text maybe lots of text ... like if you want to know how to putin an equation in LaTeX style then have a look at the source of an equation array. * By the way this is how to refer to all tags and files  ```{{TAG|TAGNAME}} and {{FILE|FILENAME}} ``` TAGNAME\") and FILENAME\") * If you want to know how to quote whole pieces of input and output have a look at the source of ROPT and a page with pieces of INCAR text, or to the source of this page of course. * To create a hook to which one may jump, for instance to the following equation array:  ```<span id=\"eqnarray\"><math>\\begin{align}\\frac{e}{\\pi} & =\\int_\\Omega \\psi (\\mathbf{r}) d\\mathbf{r} \\\\a & = b \\\\\\end{align}</math></span>  ```  e \u03c0  \\=  \u222b  \u03a9  \u03c8 (  r  ) d  r  a  \\= b {\\\\displaystyle {\\\\begin{aligned}{\\\\frac {e}{\\\\pi }}\\&\\=\\\\int \\_{\\\\Omega }\\\\psi (\\\\mathbf {r} )d\\\\mathbf {r} \\\\\\\\a\\&\\=b\\\\\\\\\\\\end{aligned}}}   You may then jump to the aformention equation array with  ```[[Vaspwiki_standards#eqnarray|an equation array]] ``` an equation array or to another example in another section.    * Optionally put in  ```== Related Tags and Sections =={{TAG|PREC}},[[list_of_hybrid_functionals|an internal link]] [http://www.mediawiki.org/wiki/Help:Formatting How to format text etc] [http://www.mediawiki.org/wiki/Help:Links Links in a mediawiki environment]  ``` Related Tags and Sections------------------------- PREC,an internal link How to format text etc Links in a mediawiki environment * And if applicable  ```.... in your text somewhere ... <ref name=\"name1\"/>and .. somewhere else <ref name=\"name2\"/>........=="}
{"file_name": "Improving_the_dielectric_function.md", "content": "Overview> Dielectric properties of Si using BSE> Improving the dielectric function > Plotting the BSE fatband structure of Si> List of tutorials  Task---- Calculate the dielectric function of Si using an averaging over multiple grids or a model\\-BSE to improve k\\-sampling in BSE calculations. Input-----  ``` Si 5.43000.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.00 0.25 0.25 0.25   ``` ### INCAR * This is the INCAR file for the basic DFT calculation:  ```System\")  = SiPREC = Normal\u00a0; ENCUT = 250.0ISMEAR = 0\u00a0; SIGMA = 0.01KPAR = 2EDIFF = 1.E-8  ``` ### KPOINTS  ```Automatic 0Gamma 4 4 4  0 0 0  ``` Calculation----------- The calculated spectra can be improved in two ways: * Averaging over multiple grids: Compute *N* independent dielectric functions using BSE (or any other method), using *shifted* grids of **k**\\-points, and take the average over the results.* Model\\-BSE: Use a parametrized model[\\[1]](#cite_note-bokdam:scr:6-1)[\\[2]](#cite_note-liu:bse-2) for the dielectric screening, and DFT eigenenergies moved with a *scissor* operator, instead of RPA screening and GW quasiparticle energies.### Averaging over multiple grids * Construct shifted k\\-point grid with the same density. * n \u00d7 n \u00d7 n {\\\\displaystyle n\\\\times n\\\\times n}  k\\-point grid   \u2192 {\\\\displaystyle \\\\rightarrow }    X  n {\\\\displaystyle X\\_{n}}  irreducible k\\-points   K  n {\\\\displaystyle {K\\_{n}}}  with weights   W  n {\\\\displaystyle W\\_{n}} . We do   x  n {\\\\displaystyle x\\_{n}}  calculations on a   m \u00d7 m \u00d7 m {\\\\displaystyle m\\\\times m\\\\times m}  grid, shifted of Gamma by   K  n {\\\\displaystyle K\\_{n}}  .* Extract the dielectric function of each calculation and average over them with respect to the weights   W  n {\\\\displaystyle W\\_{n}}  : We have now effectively constructed the result for a   ( n \u00d7 m ) \u00d7 ( n \u00d7 m ) \u00d7 ( n \u00d7 m ) {\\\\displaystyle (n\\\\times m)\\\\times (n\\\\times m)\\\\times (n\\\\times m)}  grid. But interactions of range longer than   m {\\\\displaystyle m}  times the supercell size have been ignored. * In our example we use   n \\= 4 {\\\\displaystyle n\\=4}  and  m \\= 4 {\\\\displaystyle m\\=4} : Effectively we use   16 \u00d7 16 \u00d7 16 {\\\\displaystyle 16\\\\times 16\\\\times 16}  k\\-points. [](File_Fig_BSE_example2_1.html) * In the script *doall\\-average.sh* the scheme is written for   n \\= 4 {\\\\displaystyle n\\=4}  and  n \\= $NKPT {\\\\displaystyle n\\={\\\\textrm {\\\\$NKPT}}} . At the end the dielectric functions are extracted and averaged accordingly. You can choose up to which level of theory (DFT, RPA, BSE) the dielectric function is computed by commenting out the corresponding lines in the script (default is all the way up to BSE).* Because of the shifted grids we have to use density functional perturbation theory to calculate the derivatives of the wave functions with respect to   k {\\\\displaystyle \\\\mathbf {k} }  and not the finite difference scheme. We also have to switch off all k\\-points symmetry in all INCAR files. These two important parameters look like the following in the INCAR file:  ```PREC = Normal\u00a0; ENCUT = 250.0 ALGO = EXACT\u00a0; NELM = 1ISMEAR = 0\u00a0; SIGMA = 0.01KPAR = 2 NBANDS = 32 # The number of bands in the consecutive BSE calculation should be the same!  LOPTICS = .TRUE.; LPEAD = .FALSE.ISYM = -1OMEGAMAX = 40  ``` * Finally the averaging over multiple grids should should give spectra that are in much closer agreement than the calculations using   4 \u00d7 4 \u00d7 4 {\\\\displaystyle 4\\\\times 4\\\\times 4}  k\\-points: [](File_Fig_BSE_example2_2.html) ### Model\\-BSE The dielectric function   \u03f5  G  ,  G \u2032  \u2212 1  (  q  ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G'} }^{\\-1}(\\\\mathbf {q} )}  is replaced by the local model function:  \u03b5  G  ,  G  \u2212 1  (  q  ) \\= 1 \u2212 ( 1 \u2212  \u03b5  \u221e  \u2212 1  )  exp  ( \u2212  \\|  q \\+ G  \\|  2  4  \u03bb  2  ) {\\\\displaystyle {\\\\varepsilon }\\_{\\\\mathbf {G} ,\\\\mathbf {G} }^{\\-1}(\\\\mathbf {q} )\\=1\\-(1\\-{{\\\\varepsilon }\\_{\\\\infty }^{\\-1}}){\\\\text{exp}}(\\-{\\\\frac {\\|\\\\mathbf {q\\+G} \\|^{2}}{4{\\\\lambda }^{2}}})}  .This makes the screened Coulomb kernel diagonal   (  G  \\=  G \u2032  ) {\\\\displaystyle (\\\\mathbf {G} \\=\\\\mathbf {G'} )}  in the screened Coulomb potential:  W  c \u2032  v \u2032  k  c v  k  \\=  4 \u03c0  e  2  \u03a9  \u2211  G  \u03f5  G  ,  G  \u2212 1  (  0  )  \\|  G  \\|  2  B  c \u2032  k  c  k  (  G  ) \\[  B  v \u2032  k  v  k  (  G  )  ]  \u2217 {\\\\displaystyle W\\_{c'v'\\\\mathbf {k} }^{cv\\\\mathbf {k} }\\={\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}\\\\sum \\\\limits \\_{\\\\mathbf {G} }{\\\\frac {\\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} }^{\\-1}(\\\\mathbf {0} )}{\\|\\\\mathbf {G} \\|^{2}}}B\\_{c'\\\\mathbf {k} }^{c\\\\mathbf {k} }(\\\\mathbf {G} )\\[B\\_{v'\\\\mathbf {k} }^{v\\\\mathbf {k} }(\\\\mathbf {G} )]^{\\*}}  ,where   B  n \u2032  k  n  k  (  G  ) {\\\\displaystyle B\\_{n'\\\\mathbf {k} }^{n\\\\mathbf {k} }(\\\\mathbf {G} )}  denote Bloch integrals of the cell\\-periodic part of the Bloch waves. * In addition to a model dielectric function we need approximate quasiparticle energies and wave functions. Approximation:* Use DFT single particle eigenvalues \\+ SCISSOR (SCISSOR\\=GW band gap \\- DFT band gap).* Use DFT single particle orbitals. * Extract   G  \\=  G \u2032 {\\\\displaystyle \\\\mathbf {G} \\=\\\\mathbf {G'} }  dielectric function from the vasprun.xml\") file from the previous GW calculation using the script *./extract\\_die\\_G.sh vasprun.xml \\> dieG\\_g6x6x6\\-GW0\\.dat'* or view the attached file *dieG\\_g6x6x6\\-GW0\\.dat*. Use AEXX\\=0\\.088 for   \u03f5  \u221e  \u2212 1 {\\\\displaystyle \\\\epsilon \\_{\\\\infty }^{\\-1}}  and HFSCREEN\\=1\\.26 for   \u03bb {\\\\displaystyle \\\\lambda } .Then fit the model to get: [](File_Fig_BSE_example2_4.html) * Check the GW\\+BSE and DFT\\+mBSE calculations for constistency: [](File_Fig_BSE_example2_5.html) * The sequence of calculations as given in the script *doall\\-model.sh* consists of two steps: * Step 1: standard DFT calculation. The INCAR file (INCAR.DFT) for this step looks as follows:  ```PREC = Normal\u00a0; ENCUT = 250.0ISMEAR = 0\u00a0; SIGMA = 0.01EDIFF = 1.E-8NBANDS = 16PRECFOCK = Normal #WAVEDER file must be made:LOPTICS = .TRUE.LPEAD = .TRUE.OMEGAMAX = 40  ``` * Step2: model BSE calculation. The INCAR file (INCAR.mBSE) for this step looks as follows:  ```PREC = Normal\u00a0; ENCUT = 250.0 ALGO = TDHFANTIRES = 0\u00a0; SIGMA = 0.01ENCUTGW = 150 EDIFF = 1.E-8NBANDS = 16NBANDSO = 4NBANDSV = 8OMEGAMAX = 20 PRECFOCK = Normal LMODELHF = .TRUE.HFSCREEN = 1.26AEXX = 0.088SCISSOR = 0.69  ``` * Finally the result of the DFT\\+mBSE should be of similar accuracy as the GW\\+BSE calculations when compared to experiment: [](File_Fig_BSE_example2_6.html) Download--------  Si\\_improve\\_eps.tgz"}
{"file_name": "NSUBSYS.md", "content": "NSUBSYS= \\[integer array]nDescription: NSUBSYS defines the atomic subsystems in calculations with multiple Anderson thermostats (in case VASP was compiled with \\-Dtbdyn).  --- Up to three user\\-defined atomic subsystems may be coupled with independent Andersen thermostats[\\[1]](#cite_note-Andersen80-1) (MDALGO\\=13\\). These subsystems are defined by specifying the last atom for each subsystem (two or three values must be supplied). For instance, if total of 20 atoms is defined in the POSCAR\\-file, and the initial 10 atoms belong to the subsystem 1, the next 7 atoms to the subsystem 2, and the last 3 atoms to the subsystem 3, NSUBSYS should be defined as follows:  ```NSUBSYS= 10 17 20  ``` Note that the last number in the previous example is actually redundant (clearly the last three atoms belong to the last subsystem) and does not have to be user\\-supplied."}
{"file_name": "IRC_STOP.md", "content": "IRC\\_STOP= integer   Default: **IRC\\_STOP** \\= 20nDescription: Sets the number of steps in which the energy must monotonously increase before an IRC calculation terminates.   --- Along the IRC pathway, from a higher energy state, i.e., the transition state or the excited state, towards a lower energy state, i.e., reactants or products, the energy generally decreases. In some cases, the IRC pathway may encounter regions with relatively constant energy (plateaus) or fluctuations due to numerical noise or complex interactions, particularly in the vicinity of transition states. IRC\\_STOP sets the number of time steps with increasing energy, after which the damped\\-velocity\\-Verlet algorithm in an IRC calculation terminates. In order to avoid a premature termination, especially close to transition states, IRC\\_STOP should always be greater than 1\\."}
{"file_name": "DMFT_BASIS.md", "content": "DMFT\\_BASIS= MLWF \\| BLOCH \\| LOCPROJnDescription: Specifies which basis is used for Coulomb matrix elements in CRPA calculations.  --- This tag is effective for ALGO\\=CRPA\\[R] and ALGO\\=2E4W and is ignored otherwise.The tag affects how NTARGET\\_STATES is interpreted. For instance   ```DMFT_BASIS = BLOCHNTARGET_STATES = 1 4 5 8   ``` evaluates the Coulomb matrix elements in the Bloch basis for band 1, 4, 5 and 8\\. In contrast,   ```DMFT_BASIS = MLWFNTARGET_STATES = 1 4 5 8   ``` evaluates the Coulomb matrix elements in the Wannier basis for the states 1, 4, 5 and 8 defined in the INCAR file or read from the WANPROJ\") file.  ###"}
{"file_name": "ML_WTSIF.md", "content": "ML\\_WTSIF= \\[real]n| Default: **ML\\_WTSIF** | \\= 5\\.0 | if ML\\_IWEIGHT\\=1 || --- | --- | --- ||  | \\= 1\\.0 | otherwise | Description: This tag sets the weight for the scaling of the stress in the training data within the machine learning force field method.  --- ML\\_IWEIGHT, ML\\_WTOTEN, ML\\_WTIFOR, ML\\_WTSIF form a group of tags which set the normalization and weighting of ab initio training data, i.e. energies, forces and stresses of the training structures. The main control tag is ML\\_IWEIGHT, please also have a look at its detailed description. If ML\\_IWEIGHT\\=1 the weight has unit kBar and is used to divide the data by it. For ML\\_IWEIGHT\\=2 and 3 the weights are unitless and multiplicative."}
{"file_name": "Profiling.md", "content": "In the most recent version of VASP, profiling routines were added to all important routines in VASP. Using profiling will print at the end of the OUTCAR a list of all routines called during the specific run of VASP, its overall execution time, the number of times it was called and the level at which it was called. Compilation----------- To add support for profiling add `-DPROFILING` to the already existing preprocessor flags  ``` CPP = $(CPP_) -DMPI .... -DPROFILING  ``` Then you have to entirely recompile VASP by executing  ``` make clean make vasp  ``` Support for new routines------------------------ If you want to include newly developed routines to the profiling, you have to include the profiling module (if it is not already included in the enclosing module your routine is in) by adding   ``` USE profiling  ``` Furthermore you have to put the following statement at the very beginning of the routine with the name `[name]`  ```#ifdef PROFILING  CALL START_PROFILING('[name]')#endif   ``` and at every possible return to the outer subroutine you have to put   ```#ifdef PROFILING  CALL STOP_PROFILING('[name]')#endif  ``` Mind that there are sometimes other `#ifdef` constructs, which change the starting or return point of subroutines. If a subroutine is not started or not stopped appropriately the profiling will get messed up. There is still some room for improvement, but it works so far.  In addition one can also profile certain parts of a routine or calls to LAPACK routines by enclosing this parts with calls to `START_PROFILING` and `STOP_PROFILING`, e.g.:  ```#ifdef PROFILING  CALL START_PROFILING('dgemvn')#endifCALL DGEMVn( 'N' , INDMAX, LMMAXC,  ONE , NONLR_S%RPROJ(1+NLIIND), &            INDMAX,  TMP(1,1+NP) , 1 , ZERO ,  WORK(1+NONLR_S%IRMAX*NP), 1)#ifdef PROFILING  CALL STOP_PROFILING('dgemvn')#endif  ``` Output------ All the timings will be summarized at the end of the OUTCAR file.  ``` PROFILE, used timers:    2017 =============================  index                 routine                    time                            calls level                                         ----------------------------------------------------------------------------------------------     1    total_time                         4134.378029                                1   1     2      initialization                       21.859301                              1   2     6        init_mpi                              2.456473                            1   3     7          m_init                                2.312794                          1   4     .           .                                   .                                  .   .     .           .                                   .                                  .   .     .           .                                   .                                  .   .    721      loop+                              4112.458616                              1   2   727        elmin_all                          3857.453593                            1   3   734          potlok                                6.538449                         20   4   735            fft3d_mpi                             2.587358                       80   5   736              fftbrc_mpi                            2.545392                     80   6   737                fftbas_plan_mpi                       2.545311                   80   7   743                  map_forward                           2.228926                120   8   745                    m_alltoallv_z                         2.208413               80   9  ``` In the first row we have just an index number, then the name of the called routine, its total execution time at this place in the program, the number of calls and the nesting level inside VASP (so `total_time` has level `1`, since it includes all other routines. `initialization` is called from inside `total_time` so it has level `2` and so on). After the detailed profile the Flat profile in printed  ```Flat profile============            routine name                   CPU           calls---------------------------------------------------------------m_sumb_d                              687.598978        6060fftbas                                550.950960      309943dllmm_kernel                          438.080414    29933568rholm_kernel                          371.424660    26191872racc0_hf                              314.036521      150528rpro1_hf                              298.218335      172032m_bcast_z_from                        187.539585       66560m_alltoall_d                          183.903689       18992roteta                                134.378198          20pw_charge_trace                       130.274880      150528vhamil_trace                          112.664470      143360linbas                                 92.481414         658pdssyex_zheevx                         87.056319         289crrexp_mul_gwave                       75.224447    29933568orth1                                  50.643717        2632rs_coulomb_green_func                  50.344199        2822       .                                   .             .       .                                   .             .       .                                   .             .  ``` Here all execution times of a routine are summed up and all timings from routines called from inside this routine are subtraced. So we get the real execution time of this routine and can track down the most time consuming routines for this specific run. INCAR Flags--------------------------------- In the INCAR the output of the profiling can be controlled by four different flag: * PTHRESHOLD* PROUTINE* PLEVEL* PFLAT"}
{"file_name": "MAXMEM.md", "content": "MAXMEM= \\[integer]   Default: **MAXMEM** \\= 2800 (VASP.5\\.4\\.4\\. and older), automatically set as of VASP.6nDescription: MAXMEM specifies the maximum memory one MPI rank will attempt to allocate (in MByte).Since, the default varies somewhat between VASP versions, it is safer to set thisflag manually. Currently the flag is only inspected in few selected routines, such asthe GW or RPA routines that can use excessive amounts of memory. It is recommended to setMAXMEM to the available memory per core minus 200 Mbyte. For instance, if one node is equippedwith 12 Gbyte, and 6 MPI ranks share this memory, the recommended setting is 12\\*1024/6\\-200 \\= 1848\\.  --- As of VASP.6 the default value of MAXMEM is set to 90 percent of the available memory per MPI rank. If more than one compute node is used, the minimum of all nodes is used. The available memory in RAM is estimated by searching the file \"/proc/meminfo\" for the entry \"MemAvailable:\". Note that \"/proc/meminfo\" is present on any Linux system and stored in RAM. In case that the file cannot be found, MAXMEM is set to 2800\\.   ---"}
{"file_name": "HISCAR.md", "content": "Redirect to: * ML HIS"}
{"file_name": "FINDIFF.md", "content": "FINDIFF= \\[integer]   Default: **FINDIFF** \\= 1nDescription: Defines whether a forward (FINDIFF\\=1\\) or a central (FINDIFF\\=2\\) difference formula for the numerical differentiation to compute the curvature along the dimer direction is used in the improved dimer method.  ---"}
{"file_name": "Bandgap_of_Si_in_GW.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorials Task---- Calculation of the bandgap of Si using various flavours of GW.  --- **Mind**: before you start doing GW calculations it might be beneficial to have a look at the examples on the description of dielectric properties.  --- To do GW calculations we have to follow a 3\\-step procedure. Step 1: DFT groundstate calculation----------------------------------- Everything starts with a standard DFT groundstate calculation (in this case PBE). * INCAR (see INCAR.DFT)  ```ISMEAR =  0SIGMA  =  0.05EDIFF  = 1E-8  ``` * KPOINTS (see KPOINTS.6\\)  ```6x6x6 0 G 6 6 6 0 0 0  ``` or to save some time use a \"quick\\-and\\-dirty\" setup (take KPOINTS.4\\):  ```4x4x4 0 G 4 4 4 0 0 0  ``` * POSCAR  ```system Si5.4300.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.000.25 0.25 0.25  ``` Step 2: obtain DFT virtual orbitals----------------------------------- To obtain a WAVECAR file with a reasonable number of virtual orbitals (50\\-100 per atom)we need to restart from the previous groundstate calculation with ALGO\\=*Exact*, and manually set thenumber of bands by means of the NBANDS\\-tag.To obtain the corresponding WAVEDER file we additionally specify LOPTICS\\=*.TRUE.*. * INCAR (see INCAR.DIAG)  ```ALGO = ExactNBANDS  = 64LOPTICS = .TRUE.\u00a0; CSHIFT = 0.1NEDOS = 2000# you might try#LPEAD = .TRUE. ISMEAR =  0SIGMA  =  0.05EDIFF  = 1E-8  ```   **Mind**: make a copy of your WAVECAR and WAVEDER files, as we will repeatedly need them in the following.For instance  ```cp WAVECAR WAVECAR.DIAGcp WAVEDER WAVEDER.DIAG  ``` Step 3: the actual GW calculation--------------------------------- Restart from the WAVECAR and WAVEDER files of the previous calculation, with * INCAR (see INCAR.GW)  ```# Frequency dependent dielectric tensor including# local field effects within the RPA (default) or# including changes in the DFT xc-potential (LRPA=.FALSE.).# N.B.: beware one first has to have done a# calculation with ALGO=Exact, LOPTICS=.TRUE.# and a reasonable number of virtual states (see above)ALGO = GW0\u00a0; LSPECTRAL = .TRUE.\u00a0; NOMEGA = 50 # be sure to take the same number of bands as for# the LOPTICS=.TRUE. calculation, otherwise the# WAVEDER file is not read correctlyNBANDS = 64 # Add this to update the quasiparticle energies# in the Green's function (GW0)#NELM = 4 ISMEAR =  0SIGMA  =  0.05EDIFF  = 1E-8  ```   At the bottom of the OUTCAR file you will find the quasi\\-particle (QP) energies.  ``` QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1 for sc-GW calculations column KS-energies equals QP-energies in previous step and V_xc(KS)=  KS-energies - (<T + V_ion + V_H > + <T+V_H+V_ion>^1  + <V_x>^1)  k-point   1\u00a0:       0.0000    0.0000    0.0000  band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation       1      -6.4888      -6.8243     -10.9766     -10.4570     -17.5189       0.6458       2.0000      2       5.4800       5.1162     -11.8859     -11.4060     -12.7290       0.7580       2.0000      3       5.4800       5.1162     -11.8859     -11.4060     -12.7290       0.7580       2.0000      4       5.4800       5.1162     -11.8859     -11.4060     -12.7290       0.7580       2.0000      5       8.0443       8.3296      -9.7235     -10.1038      -5.7364       0.7502       0.0000      6       8.0443       8.3296      -9.7235     -10.1038      -5.7364       0.7502       0.0000      7       8.0443       8.3296      -9.7235     -10.1038      -5.7364       0.7502       0.0000      8       8.8407       9.2475     -10.5130     -11.0594      -6.0662       0.7445       0.0000  k-point   2\u00a0:       0.1667    0.0000    0.0000  band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation       1      -6.1276      -6.4734     -11.0208     -10.4905     -17.3978       0.6521       2.0000      2       3.0946       2.6991     -11.4452     -10.9063     -13.1354       0.7340       2.0000      3       5.0279       4.6595     -11.7159     -11.2282     -12.6625       0.7552       2.0000      4       5.0279       4.6595     -11.7159     -11.2282     -12.6625       0.7552       2.0000      5       7.8309       8.1065      -9.8441     -10.2097      -5.8680       0.7539       0.0000      6       8.6943       8.9816      -9.8669     -10.2533      -5.6768       0.7436       0.0000      7       8.6943       8.9816      -9.8669     -10.2533      -5.6768       0.7436       0.0000      8      10.9341      11.2678     -10.4716     -10.9278      -5.5632       0.7316       0.0000      ..         ..           ..           ..           ..           ..           ..           ..      ..         ..           ..           ..           ..           ..           ..           ..      ..         ..           ..           ..           ..           ..           ..           ..      ..         ..           ..           ..           ..           ..           ..           ..   k-point  16\u00a0:      -0.3333    0.5000    0.1667  band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation       1      -2.2240      -2.5911     -11.4857     -10.9550     -16.0663       0.6917       2.0000      2      -2.2240      -2.5911     -11.4857     -10.9550     -16.0663       0.6917       2.0000      3       1.8279       1.3698     -10.7735     -10.1380     -12.9637       0.7209       2.0000      4       1.8279       1.3698     -10.7735     -10.1380     -12.9637       0.7209       2.0000      5       8.2346       8.4128      -9.3111      -9.5472      -5.1975       0.7546       0.0000      6       8.2346       8.4128      -9.3111      -9.5472      -5.1975       0.7546       0.0000      7      12.2605      12.5170      -9.7969     -10.1486      -4.3607       0.7294       0.0000      8      12.2605      12.5170      -9.7969     -10.1486      -4.3607       0.7294       0.0000  ```   To quickly find the QP\\-energy of the highest lying occupied state, try  ```./gap_GW.sh OUTCAR  ``` ### Beyond the random\\-phase\\-approximation To include local field effects beyond the random\\-phase\\-approximation in the description of the frequency dependent dielectric response function (local field effects in DFT) add the following line to your INCAR file:  ```LRPA = .FALSE.  ``` and again restart from the WAVECAR and WAVEDER files from step 2\\. ### Beyond G0W0: GW0 The most usual step beyond single\\-shot GW (G0W0) is to iterate the quasi\\-particle energies in the Greens functions.This is the socalled GW0 approximation.To have VASP do, for instance, 4 iterations of the QP\\-energies in G, add the following line to the INCAR file:  ```NELM = 4  ``` and again restart from the WAVECAR and WAVEDER files from step 2\\. To quickly find the QP\\-energy of the highest lying occupied state after 4 iterations of the QP energies in G, type:  ```./gap_GW.sh OUTCAR  ``` Download--------  Si\\_GW\\_gap.tgz Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsBack to the main page."}
{"file_name": "LORBITALREAL.md", "content": "LORBITALREAL= .TRUE. \\| .FALSE.n| Default: **LORBITALREAL** | \\= .FALSE. |  || --- | --- | --- | Description: LORBITALREAL forces VASP to make the orbitals   \u03d5 (  r  ) {\\\\displaystyle \\\\phi ({\\\\bf {r}})}  real\\-valued at theGamma point and the Brillouin zone boundary.  --- This is done by performing a Fourier transform of the orbitals to real space. Then the real part of the orbitals is transformed back to reciprocal space and the resulting orbitals are orthogonalized. If many degenerate orbitals are present, taking the real part can lead to linearly dependent orbitals. One can ensure that this problem does not occur by running the mean\\-field calculation starting from the WAVECAR file with tags ALGO\\=SUBROT and LORBITALREAL\\=.TRUE.."}
{"file_name": "LSCAAWARE.md", "content": "LSCAAWARE= \\[logical]n| Default: **LSCAAWARE** | \\= .TRUE. | if VASP is compiled with scaLAPACK support (precompiler flag \\-DscaLAPACK) || --- | --- | --- ||  | \\= .FALSE. | otherwise | Description: LSCAAWARE controls the distribution of the Hamilton matrix.   --- For LSCAAWARE\\=.TRUE., VASP distributes the Hamilton matrix among the MPI ranks. For LSCAAWARE\\=.FALSE., each MPI ranks allocates the complete Hamiltonain. In both cases LSCALAPACK decides if ScaLAPACK routines are used for diagonalization."}
{"file_name": "Transition_states.md", "content": "Redirect to: * Category:Transition states Pages in category \"Transition States\"------------------------------------- This category contains only the following page. ### P * Practical considerations for transition state finding calculations"}
{"file_name": "ENCUT.md", "content": "ENCUT= \\[real]n| Default: **ENCUT** | \\= largest ENMAX in the POTCAR file |  || --- | --- | --- | Description: ENCUT specifies the energy cutoff for the plane\\-wave basis set in eV.  --- All plane waves with a kinetic energy smaller than   E  c u t {\\\\displaystyle E\\_{\\\\mathrm {cut} }}  are included in the basis set, i.e.,  \\|  G  \\+  k  \\|  \\<  G  c u t {\\\\displaystyle \\|\\\\mathbf {G} \\+\\\\mathbf {k} \\|\\<G\\_{\\\\mathrm {cut} }}  with   E  c u t  \\=  \u210f  2  2 m  G  c u t  2 {\\\\displaystyle E\\_{\\\\mathrm {cut} }\\={\\\\frac {\\\\hbar ^{2}}{2m}}G\\_{\\\\mathrm {cut} }^{2}} With this energy cutoff, the number of plane waves included in the basis set depends on the **k**\\-point, leading to a superior behavior. For instance, for energy\\-volume calculations the total number of plane waves changes fairly smoothly according to the volume, while the criterion   \\|  G  \\|  \\<  G  c u t {\\\\displaystyle \\|\\\\mathbf {G} \\|\\<G\\_{\\\\mathrm {cut} }}  (i.e. same number of plane waves for all **k**\\-points) would lead to a very rough energy\\-volume curve and, generally, to a slower energy convergence with respect to the basis set size. The POTCAR files contain a default ENMAX (and ENMIN). Therefore, it is, in principle, not necessary to specify ENCUT in the INCAR file.For calculations with more than one species, the maximum cutoff ENMAX (or ENMIN) value is used for the calculation (see PREC). | **Important:*** The convergence of the quantity of interest with respect to the energy cutoff ENCUT should always be checked. * We strongly recommend specifying the energy cutoff ENCUT always manually in the INCAR file to ensure the same accuracy between calculations. Otherwise, the default ENCUT may differ among the different calculations (e.g., for the calculation of the cohesive energy), with the consequence that the total energies, for instance, can not be compared. || --- |"}
{"file_name": "NGY.md", "content": "NGY= \\[integer]   Default: **NGY** \\= set in accordance with PREC and ENCUTnDescription: NGY sets the number of grid points in the FFT grid along the second lattice vector.  --- By default NGY is set in accordance with the requested \"precision\" mode PREC and the plane wave kinetic energy cutoff ENCUT: | PREC | NGY || --- | --- || Normal | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Single (VASP.5\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Single (VASP.6\\) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || SingleN (VASP.6\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Accurate | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Low | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Medium | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || High | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | where  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT. Alternatively, NGY can be set to a specific value in the INCAR file."}
{"file_name": "IRC_MAXSTEP.md", "content": "IRC\\_MAXSTEP= real   Default: **IRC\\_MAXSTEP** \\= 3\\.000nDescription: Upper limit for the step size (in fs).  --- The damped\\-velocity\\-Verlet algorithm for the IRC calculations uses an adaptively varying size of the time step. It depends on the estimated accuracy of the previous step. IRC\\_MAXSTEP defines the upper limit for the step size in fs."}
{"file_name": "IRC_VNORM0.md", "content": "IRC\\_VNORM0= real   Default: **IRC\\_VNORM0** \\= 0\\.002nDescription: The constant velocity vector (in \u00c5/fs) in an IRC calculation.  --- In the damped\\-velocity\\-Verlet algorithm for IRC calculations, the damping is realized via rescaling the velocity vector to a constant value (in \u00c5/fs) defined via the parameter IRC\\_VNORM0."}
{"file_name": "Cd_Si_relaxation.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Relaxation of the internal coordinates of a perturbed cd Si structure. Input----- ### POSCAR  ```cubic diamond 5.5 0.0    0.5     0.5 0.5    0.0     0.5 0.5    0.5     0.0 2Direct -0.125 -0.125 -0.125  0.125  0.125  0.130  ``` * Break of symmetry in standard diamond structure: change z position from 0\\.125 to 0\\.130\\. ### INCAR  ```System\") = diamond SiISTART = 0\u00a0; ICHARG=2ENCUT  =    240ISMEAR = 0; SIGMA = 0.1;NSW    =  10; IBRION =  2ISIF   =  2EDIFFG = -0.0001  ``` * 10 relaxation steps (NSW\\=10\\).* Conjugate\\-gradient algorithm (IBRION\\=2\\).* Relaxation only of internal parameters (ISIF\\=2\\). ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` Calculation----------- * Example output after 10 relaxation steps:  ```POSITION                                       TOTAL-FORCE (eV/Angst)-----------------------------------------------------------------------------------     4.81253      4.81253      4.81250        -0.000724     -0.000724     -0.000031     0.68747      0.68747      0.68750         0.000724      0.000724      0.000031-----------------------------------------------------------------------------------   total drift:                                0.000000      0.000000      0.000000  ``` * Files to watch during relaxations:\t+ stdout (terminal): each electronic step is written to the terminal:\t+ OSZICAR: a copy of the terminal output.\t+ OUTCAR: more detailed information on every electronic and ionic step. * Other important files:\t+ CONTCAR: holds the structure of the last ionic step and at the end the structural result (also very important for restarting a relaxation).\t+ STOPCAR: stops a relaxation. Download--------  diamondSirel.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorialsBack to the main page."}
{"file_name": "Fcc_Ni.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Lattice parameter optimization, calculation of the DOS and bandstructure in (spin\\-polarized) fcc Ni. Input----- ### POSCAR  ```fcc: 3.53  0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0  ``` ### INCAR  ```  SYSTEM = fcc Ni  ISTART = 0\u00a0; ICHARG=2  ENCUT  =    270  ISMEAR =    1 \u00a0; SIGMA = 0.2  LORBIT = 11  ISPIN = 2  MAGMOM = 1  ``` * Initial charge\\-density from overlapping atoms in starting job.* Default energy cutoff of 270 eV used (ENCUT\\=270\\).* MP smearing used since we have a metal.* Spin\\-polarized calculation ISPIN\\=2, initial moments of 1 (MAGMOM\\=1\\).* Static calculation. ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` * Equally spaced k mesh with 56 points in the IBZ.* Odd,   \u0393 {\\\\displaystyle \\\\Gamma } \\-centered mesh. Calculation----------- * The calculations are carried out in analogy to cd Si. Please follow the instructions in that example. * Here is a sample output of the results: [](File_Fig_Ni_1.html) Download--------  fccNi.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials"}
{"file_name": "CHG.md", "content": "This file contains the lattice vectors, atomic coordinates and the total charge multiplied by the grid volume   n ( r ) \u00d7  V  g r i d {\\\\displaystyle n(r)\\\\times V\\_{\\\\mathrm {grid} }}  on the fine FFT\\-grid (NG(X,Y,Z)FF&action=edit&redlink=1 \"NG(X,Y,Z)F (page does not exist)\"), with   V  g r i d {\\\\displaystyle V\\_{\\\\mathrm {grid} }}  \\= NGXF  \u00d7 {\\\\displaystyle \\\\times } NGYF  \u00d7 {\\\\displaystyle \\\\times } NGZF) at every tenth MD step i.e.  ```MOD(NSTEP,10)==1,  ``` where NSTEP\") starts from 1\\. To save disc space less digits are written to the CHG file than to the CHGCAR. The file can be used to provide data for visualization programs, for instance IBM data explorer (for the IBM data explorer, a tool exists to convert the CHG file to a valid data explorer file). It is possible to avoid that the CHG file is written out by setting  ```LCHARG  =  .FALSE.   ``` in the INCAR file. The data arrangement of the CHG file is similar to that of the CHGCAR file, with the exception of the PAW one centre occupancies, which are missing on the CHG file.  ---"}
{"file_name": "Fcc_Ni_DOS_with_hybrid_functional.md", "content": "Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials Task---- Calculate fcc Ni DOS using HSE and PBE0 (comparison with PBE). Input----- ### POSCAR  ```fcc Ni 3.53 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0  ``` ### INCAR  ```## Plot the spin-polarized DOS of fcc Ni ## at HSE and PBE0 level, and compare with## standard PBE.## Better preconverge with PBE first!  SYSTEM = fcc Ni ISMEAR = -5 LORBIT = 11  ISPIN = 2 MAGMOM = 1 ## Selects the HSE06 hybrid functional#LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0;#ALGO = D\u00a0; TIME = 0.4\u00a0; LSUBROT = .TRUE. ## Selects the PBE0  hybrid functional#LHFCALC = .TRUE.\u00a0;#ALGO = D\u00a0; TIME = 0.4\u00a0; LSUBROT = .TRUE.  ```   ### KPOINTS  ```k-points 0Gamma  5  5  5  0  0  0  ``` Calculation----------- Download--------  fccNi\\_hybrid\\_DOS.tgz Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials"}
{"file_name": "LDIAG.md", "content": "LDIAG= \\[logical]   Default: **LDIAG** \\= .TRUE.nDescription: This tag determines whether a subspace diagonalization is performed or not within the main algorithm selected by ALGO or IALGO.  --- For ALGO \\= Normal, Fast, and VeryFast, VASP performs a diagonalization in the subspace spanned by all orbitals. This is often referred to as the Rayleigh\u2013Ritz method. This step increases the convergence rate and thus is expedient in most cases.Furthermore, the subspace diagonalization sorts the orbital/eigenvalues in ascending order. For the direct optimization algorithms (for instance ALGO \\= All or Damped),a subspace diagonalization is usually not performed, but in order to improve the accuracy of the calculated forces,after convergence has been reached one single diagonalization in the subspace spanned by all orbitals is performed. For ALGO \\= VeryFast and Damped it is possible to switch off the subspace diagonalization by specifying LDIAG \\= .FALSE. in the INCAR file.Specifically, for ALGO \\= VeryFast, LDIAG \\= .FALSE. changes from an exact Rayleigh\u2013Ritz diagonalization to Loewdin perturbation theory. Note, Loewdin perturbation theory strictly conserves the orbital order, *i.e.*, the *n*\\-th orbital will remain stored in the *n*\\-th storage slot and only small rotations into that orbital can occur.For ALGO \\= Damped and All, the final subspace diagonalization is simply skipped if LDIAG \\= .FALSE. is set.Generally using LDIAG \\= .FALSE. is only advised, if one wants to maintain a certain orbital order, for instance, when reading the orbitals from an existing WAVECAR file. For the algorithms ALGO \\= Normal or Fast, by construction it is not possible to switch off subspace diagonalization, as these algorithms require subspace diagonalizations during the iterative refinement of the orbitals.Furthermore, algorithms that minimize the total energy (ALGO \\= All) are often too \"greedy\" and tend to alternate the orbital order in the course of the SCF cycle and energy optimization.  In summary, the following combinations are potentially useful:   ```ALGO = VeryFast\u00a0; LDIAG = .FALSE.  ```  ```ALGO = Damped\u00a0; LDIAG = .FALSE.  ``` Other combinations using LDIAG \\= .FALSE. are likely to yield undesirable results. | **Warning:** ALGO \\= VeryFast is not supported for hybrid functionals. || --- |"}
{"file_name": "Output.md", "content": "Overview> Input> Preparing a Super Cell>Output> List of tutorials VASP gives several different output files, depending on which task is performed. The most important files that are produced in (almost) every calculation are described in the following:  OUTCAR------------------------------ The OUTCAR file gives detailed output of a VASP run, including: * A summary of the used input parameters.* Information about the electronic steps:   E  F e r m i {\\\\displaystyle E\\_{\\\\mathrm {Fermi} }} , KS\\-eigenvalues.* Stress tensors.* Forces on the atoms.* Local charges and magnetic moments.* Dielectric properties The amount of output written onto the OUTCAR file can be chosen by modifying the NWRITE tag in the INCAR file. OSZICAR and stdout-------------------------------------------- The OSZICAR file gives a short summary of the results: * Chosen SCF algorithm.* Convergence of the total energy, charge\\- and spin densities.* Free energies.* Magnetic moments of the cell. CONTCAR--------------------------------- The CONTCAR file gives the updated geometry data at the end of a run: * Lattice parameter.* Bravais matrix.* Ionic positions.* (Optionally velocities). The format of the CONTCAR file is the same as of the POSCAR file, hence it can be used directly for continuation runs after having been copied to the POSCAR file. XDATCAR--------------------------------- The XDATCAR file contains updated ionic positions of each ionic step. DOSCAR------------------------------ The DOSCAR file contains the total and integrated DOS and optionally the local partial DOS. CHGCAR------------------------------ The CHGCAR file contains the charges   \u03c1 \u2217 V {\\\\displaystyle \\\\rho \\*V}  . WAVECAR--------------------------------- The WAVECAR file contains the wave function coefficients.This file can be used to continue from a previous run. Overview> Input> Preparing a Super Cell>Output> List of tutorials Back to the main page."}
{"file_name": "NiO_GGA.md", "content": "*Exercise\u00a0:* Determine the most stable magnetic order between the antiferromagnetic (AFM) and ferromagnetic (FM) configurations. Compare the both DOS. * INCAR  ```NiO GGA AFM  SYSTEM   = \"NiO\" Electronic minimization  ENCUT    = 450  EDIFF    = 1E-5  LORBIT   = 11  LREAL    = .False.  ISTART   = 0  NELMIN   = 6  DOS  ISMEAR   = -5 Magnetism  ISPIN    = 2  MAGMOM   = 2.0 -2.0 2*0  # AFM order  # MAGMOM   = 2.0 2.0 2*0 # FM order Mixer  AMIX     = 0.2  BMIX     = 0.00001  AMIX_MAG = 0.8  BMIX_MAG = 0.00001   ``` * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` Download--------  nio\\_gga.tgz  ---"}
{"file_name": "Bandgap_of_Si_using_different_DFT+HF_methods.md", "content": "Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials Task---- Calculation of the band gap in Si using different DFT\\+HF schemes (PBE, B3LYP, PBE0, HSE06, and HF). Input----- ### POSCAR  ```System: Si                              5.430  0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1Cartesian0    0    00.25 0.25 0.25  ``` ### INCAR  ```## Better preconverge with PBE first## and use the WAVECAR file as inout for the DFT+HF calculation ## Selects the B3LYP hybrid functional#LHFCALC = .TRUE.\u00a0; GGA = B3\u00a0; AEXX = 0.2\u00a0; AGGAX = 0.72 #AGGAC = 0.81\u00a0; ALDAC = 0.19#ALGO = D\u00a0; TIME = 0.4  ## Selects the PBE0  hybrid functional#LHFCALC = .TRUE.\u00a0; #ALGO = D\u00a0; TIME = 0.4  ## Selects the HSE06 hybrid functional#LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; #ALGO = D\u00a0; TIME = 0.4  ## Selects HF #LHFCALC = .TRUE.\u00a0; AEXX = 1.0\u00a0; ALDAC = 0.0\u00a0; AGGAC = 0#ALGO = D\u00a0; TIME = 0.4  ## Leave this inISMEAR =  0SIGMA  =  0.01GGA    = PE  ``` ### KPOINTS  ```k-points 0Gamma  6  6  6  0  0  0  ``` ### Calculation * script to extract eigenvalues and calculate the bandgap  ```homo=`awk '/NELECT/ {print $3/2}' $1`lumo=`awk '/NELECT/ {print $3/2+1}' $1`nkpt=`awk '/NKPTS/ {print $4}' $1` e1=`grep \"     $homo     \" $1 | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e2=`grep \"     $lumo     \" $1 | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'` echo \"HOMO: band:\" $homo \" E=\" $e1echo \"LUMO: band:\" $lumo \" E=\" $e2  ``` type  ```./gap.sh OUTCAR  ```   * README.txt  ```For each HF+DFT method (B3LYP, PBE0, HSE06, and HF) compute the bandgap of Siadopting the following procedure: i) Perform a standard PBE calculationii) Perform a HF+DFT run (VASP reads in the WAVECAR from run (i)iii) Calculate the value of the bandgap by running the script 'gap':      bandgap = min(cband) - max(vband)   ``` Download--------  Si\\_hybrids\\_gap.tgz Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorialsBack to the main page."}
{"file_name": "LSPECTRAL.md", "content": "LSPECTRAL= .FALSE. \\| .TRUE.n| Default: **LSPECTRAL** | \\= .TRUE. | if NOMEGA\\>2 || --- | --- | --- | Description: LSPECTRAL specifies to use the spectral method.  --- If LSPECTRAL \\= .TRUE. is set, the imaginary part of the independent particle polarizability   \u03c7  q  0  (  G  ,  G  \u2032  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\mathbf {q} }^{0}(\\\\mathbf {G} ,\\\\mathbf {G} ',\\\\omega )}  is calculated first, and afterwards the full independent particle polarizability is determined using a Kramers\\-Kronig (or Hilbert) transform. This reduces the computational workload by almost a factor NOMEGA/2\\. The downside of the coin is that the response function must be kept in memory for all considered frequencies, which can cause excessive memory requirements. VASP, therefore, distributes the dielectric functions among the available compute nodes. A similar trick is used when the QP\\-shifts are calculated. In general it is strongly recommended to set LSPECTRAL \\= .TRUE., except if memory requirements are too excessive."}
{"file_name": "Graphite_TS_binding_energy.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- In this example you will determine the interlayer binding energy of graphite in its experimental structure using the method of Tchatchenko and Scheffler to account for van der Waals interactions. Semilocal DFT at the GGA level underestimates long\\-range dispersion interactions.In the case of graphite, PBE predicts the interlayer binding energy of \\~1 meV/atom which is too small compared to the RPA reference of 0\\.048 eV/atom [\\[1]](#cite_note-lebegue-1). In this example, the interlayer binding energy of graphite in its experimental structure is determined using the Tkatchenko\\-Scheffler method,which performs well in description of the structure of graphite (see e.g. example graphite interlayer distance).  --- Input----- ### POSCAR * Graphite:  ```graphite 1.01.22800000 -2.12695839  0.000000001.22800000  2.12695839  0.000000000.00000000  0.00000000  6.71 4direct   0.00000000  0.00000000  0.25000000   0.00000000  0.00000000  0.75000000   0.33333333  0.66666667  0.25000000   0.66666667  0.33333333  0.75000000  ``` * Graphene:  ```graphite 1.01.22800000 -2.12695839  0.000000001.22800000  2.12695839  0.000000000.00000000  0.00000000  20. 2direct   0.00000000  0.00000000  0.25000000   0.33333333  0.66666667  0.25000000  ``` ### INCAR  ```IVDW = 20            LVDW_EWALD =.TRUE. NSW = 1 IBRION = 2ISIF = 4PREC = AccurateEDIFFG = 1e-5LWAVE = .FALSE.LCHARG = .FALSE.ISMEAR = -5SIGMA = 0.01EDIFF = 1e-6ALGO = FastNPAR = 2  ```   ### KPOINTS * Graphite:  ```Monkhorst Pack 0gamma16 16 80 0 0  ``` * Graphene:  ```Monkhorst Pack 0gamma16 16 10 0 0  ``` There is no interaction of layers in z\\-direction for graphene so we need only 1 k point in this direction. Running this example-------------------- To run this example, execute the `run.sh` bash\\-script:  ``` ## To run VASP this script calls $vasp_std# (or posibly $vasp_gam and/or $vasp_ncl).# These variables can be defined by sourcing vaspcmd. vaspcmd 2> /dev/null  ## When vaspcmd is not available and $vasp_std,# $vasp_gam, and/or $vasp_ncl are not set as environment# variables, you can specify them here[ -z \"`echo $vasp_std`\" ] && vasp_std=\"mpirun -np 8 /path-to-your-vasp/vasp_std\"[ -z \"`echo $vasp_gam`\" ] && vasp_gam=\"mpirun -np 8 /path-to-your-vasp/vasp_gam\"[ -z \"`echo $vasp_ncl`\" ] && vasp_ncl=\"mpirun -np 8 /path-to-your-vasp/vasp_ncl\"  ## The real work starts here # rm results.dat drct=$(pwd) for i in graphene graphite do  cd $drct/$i  $vasp_stddone cd $drct # obtain total energy for graphite en2=$(grep \"free  ene\" graphite/OUTCAR |tail -1|awk '{print $5}')  # obtain total energy for grapheneen1=$(grep \"free  ene\" graphene/OUTCAR |tail -1|awk '{print $5}') # compute interlayer binding energy (eV/atom)deltaE=$(echo print $en2/4 - $en1/2 |python) echo \"Binding energy (eV/atom): \" $deltaE >results.dat  ``` Note that the calculation is performed in two steps (two separate single\\-point calculations) in which the energy for bulk graphite and for graphene are obtained.The binding energy is computed automatically and it is written in the file `results.dat`.(N.B.: for the latter *python* needs to be available.) Even though the TS method predicts a reasonable geometry (see the Graphite interlayer distance example) it overestimates the energetics strongly:the computed binding energy of \\-0\\.083 eV/atom is too large compared to the RPA reference of 0\\.048 eV/atom.This overestimation is \\- at least in part \\- due to neglecting the many\\-body interactions (see example Graphite MBD binding energy). Download--------  graphiteBinding\\_ts.tgz"}
{"file_name": "AEXX.md", "content": "AEXX= \\[real]n| Default: **AEXX** | \\= 0\\.25 | if LHFCALC\\=.TRUE. || --- | --- | --- ||  | \\= 0 | if LHFCALC\\=.FALSE. | Description: AEXX specifies the fraction of exact exchange in a Hartree\\-Fock\\-type/hybrid\\-functional calculation.  --- | **Mind:*** For versions of VASP prior to 6\\.4\\.0, ALDAX was constrained to be equal to 1\\.0\\-AEXX. This constraint is lifted since VASP.6\\.4\\.0\\. * For AEXX\\=1\\.0, VASP switches off correlation by default (ALDAC\\=0\\.0, AGGAC\\=0\\.0, and AMGGAC\\=0\\.0\\) and thus runs a full Hartree\\-Fock calculation. || --- |"}
{"file_name": "Validation_tests.md", "content": "As of VASP.6\\.1\\.0, each release contains a test suite for validation. | **Warning:** VASP.6\\.1\\.0, VASP.6\\.1\\.1, and VASP.6\\.1\\.2 have a potentially serious issue related to the test suite. Please read about it  here. || --- | The VASP testsuite------------------ The VASP testsuite is located in \\`root/testsuite\\` where \\`root\\` is theroot directory of the build system.  ```                        vasp.X.X.X (root directory) |         ----------------------------------------------        |              |            |          |       |       arch           bin       testsuite     build    src |                     ------------------------------------------                    |      |         |         |        |      |                  tests  README.md  tools   POTCARS  runtest makefile |           ------------------             |      |           |           test1  test2  ...  testN  ``` testsuite/Testsuite root directory. Holds several subdirectories and the main bash\\-script `runtest` that runs the tests and validates the results.testsuite/testsHolds a whole bunch of subdirectories that in turn contain the input files (INCAR.?.\\*, KPOINTS, and POSCAR), and reference output (OUTCAR.ref, OSZICAR.ref etc.) for the test calculations.testsuite/POTCARSHolds the POTCAR files (potentials), one for each individual test calculation. The naming convention for these files is:  ```POTCAR.name-of-test-subdirectory ``` testsuite/toolsContains a bash\\-script (`call_compare`) and a Fortran source file (compare\\_numbertable\\_new.f90). The latter is compiled as:  ```$(FC) -o compare_numbertable_new compare_numbertable_new.f90 ``` where the `$(FC)` is the Fortran compiler binary path that has to be set in root/makefile.include (see the  compiler variables section of Installing VASP).testsuite/runtestMain execution script that orchestrates which tests are executed based on set environment variables.testsuite/makefileAutoconf makefile containing some simple rules that either compile compare\\_numbertable\\_new.f90 (`make numbertable`), execute a small selection of tests (`make test`) or execute all test (`make test_all`).  Running the tests----------------- ### Run the tests with `make` (recommended)  --- After building the `vasp_std`, `vasp_gam`, and `vasp_ncl` executables (e.g. by means of `make all`), you can test your build by means of:  ```make test  ``` (either in root or root/testsuite).The above will run a subset of tests from the testsuite (the so\\-called FAST category of tests) that will take roughly 1\\.5 hours to complete on 4 cores. The full testsuite may be executed by means of:  ```make test_all  ``` The output of the tests (stdout\\+stderr) is written to root/testsuite/testsuite.log. Tests that fail write an ERROR to root/testsuite/testsuite.log and the tests that were not passed successfully will be listed at the end of this file (and `make` will exit in error). To clean up after running the testsuite, execute:  ```make cleantest  ``` in root/testsuite.   ### Configuring the testsuite manually  --- The testsuite may be manually configured by means of a several environment variables (with the naming convention: `VASP_TESTSUITE_*`). * `VASP_TESTSUITE_EXE_STD`: The command that runs the standard version of VASP.Default:  ```VASP_TESTSUITE_EXE_STD=\"mpirun -np 4 root/bin/vasp_std\" ``` **N.B.**: Specify the absolute path your *standard* executable (e.g. `vasp_std` or `vasp_gpu`).* `VASP_TESTSUITE_EXE_GAM`: The command that runs the gamma\\-only version of VASP.Default:  ```VASP_TESTSUITE_EXE_GAM=\"mpirun -np 4 root/bin/vasp_gam\" ``` **N.B.**: Specify the absolute path to your *gamma\\-only* executable (e.g. `vasp_gam`).* `VASP_TESTSUITE_EXE_NCL`: The command that runs the non\\-collinear version of VASP.Default:  ```VASP_TESTSUITE_EXE_NCL=\"mpirun -np 4 root/bin/vasp_ncl\" ``` **N.B.**: Specify the absolute path to your *non\\-collinear* executable (e.g. `vasp_ncl` or `vasp_gpu_ncl`).* `VASP_TESTSUITE_CUDA`: Set `VASP_TESTSUITE_CUDA=Y` to exclude all tests that can not be executed with the CUDA\\-GPU port of VASP.Default:  ```VASP_TESTSUITE_CUDA= ``` * `VASP_TESTSUITE_INCAR_PREPEND`: Additional INCAR tags used for every execution of VASP in the testsuite.Default:  ```VASP_TESTSUITE_INCAR_PREPEND= ``` * `VASP_TESTSUITE_TESTS`: Selection of tests to be executed.Default:  ```VASP_TESTSUITE_TESTS= ``` **N.B.**: A convenient way to execute a specific test is to set `VASP_TESTSUITE_TESTS` to a particular test, e.g. by means of:  ```export VASP_TESTSUITE_TESTS=\"bulk_GaAs_ACFDT\" ``` and to run `make test` from the root or root/testsuite directory.* `VASP_TESTSUITE_SKIP_TESTS`: Selection of tests to be skipped.Default:  ```VASP_TESTSUITE_SKIP_TESTS= ``` * `VASP_TESTSUITE_POTENTIALS`: Path to the POTCAR files.Default:  ```VASP_TESTSUITE_POTENTIALS=root/testsuite/POTCARS ```   #### Categories A variety of environment variables can be set to run or exclude tests belonging to specific categories. Default: not set For instance: * `VASP_TESTSUITE_SKIP_LREAL`: Skips all tests that use the real space PAW projection scheme (LREAL/\\=F) if set to: Y, i.e.,  ```export VASP_TESTSUITE_SKIP_LREAL=Y ```  or * `VASP_TESTSUITE_RUN_LREAL`: Runs only tests that use the real space PAW projection scheme (LREAL\\=A or LREAL\\=.TRUE.) if set to: Y.  ```export VASP_TESTSUITE_RUN_LREAL=Y ``` The following variables may be set to skip categories of tests: * `VASP_TESTSUITE_SKIP_NOCUDA`: Skip all tests that can not be excuted with the CUDA\\-GPU port.* `VASP_TESTSUITE_SKIP_HYB`: Skip all hybrid functional tests.* `VASP_TESTSUITE_SKIP_GAMMA`: Skip all tests of the gamma\\-only version.* `VASP_TESTSUITE_SKIP_NCL`: Skip all tests of the non\\-collinear version.* `VASP_TESTSUITE_SKIP_SOC`: Skip all tests involving Spin\\-Orbit Coupling.* `VASP_TESTSUITE_SKIP_MD`: Skip all Molecular Dynamics tests.* `VASP_TESTSUITE_SKIP_TBMD`: Skip all constrained molecular dynamics tests.* `VASP_TESTSUITE_SKIP_RPA`: Skip all tests that involve the Random\\-Phase Approximation (GW and ACFDT).* `VASP_TESTSUITE_SKIP_GW`: Skip all GW tests.* `VASP_TESTSUITE_SKIP_ACFDT`: Skip all ACFDT tests.* `VASP_TESTSUITE_SKIP_CRPA`: Skip all tests of the Constrained\\-RPA.* `VASP_TESTSUITE_SKIP_BSE`: Skip all Bethe\\-Salpeter\\-Equation tests.* `VASP_TESTSUITE_SKIP_NOSYM`: Skip all tests that do not use symmetry.* `VASP_TESTSUITE_SKIP_LREAL`: Skip all tests that use the real\\-space PAW projection scheme.* `VASP_TESTSUITE_SKIP_LRESP`: Skip all linear response tests.* `VASP_TESTSUITE_SKIP_PEAD`: Skip all tests that use the PEAD method.* `VASP_TESTSUITE_SKIP_NCORE1`: Skip all tests that may only be executed with NCORE\\=1.* `VASP_TESTSUITE_SKIP_WAN90`: Skip all tests that need to execute `wannier90`.  The following variables may be set to run only tests that belong to a specific category (or categories): * `VASP_TESTSUITE_RUN_HYB`* `VASP_TESTSUITE_RUN_GAMMA`* `VASP_TESTSUITE_RUN_NCL`* `VASP_TESTSUITE_RUN_SOC`* `VASP_TESTSUITE_RUN_MD`* `VASP_TESTSUITE_RUN_TBMD`* `VASP_TESTSUITE_RUN_RPA`* `VASP_TESTSUITE_RUN_GW`* `VASP_TESTSUITE_RUN_ACFDT`* `VASP_TESTSUITE_RUN_CRPA`* `VASP_TESTSUITE_RUN_BSE`* `VASP_TESTSUITE_RUN_NOSYM`* `VASP_TESTSUITE_RUN_LREAL`* `VASP_TESTSUITE_RUN_FAST`* `VASP_TESTSUITE_RUN_LRESP`* `VASP_TESTSUITE_RUN_PEAD`* `VASP_TESTSUITE_RUN_NCORE1`* `VASP_TESTSUITE_RUN_WAN90`   ### Directly execute the `runtest` script  --- Besides by means of `make` the testsuite may be invoked by executingthe root/testsuite/runtest script directly.There are two ways to execute the `runtest` script: 1\\. Change into the root/testsuite directory and run the tests in the FAST category by means of:  ```./runtest -f ``` or ALL tests with  ```./runtest -a ``` 2\\. Change into root/testsuite, adapt one of the example configuration files in root/testsuite and run the testsuite with:  ```./runtest your-config-file ``` **N.B.I**: To pipe the full output to a file (testsuite.log) add `> testsuite.log 2>&1` to the commands above. **N.B.II**: We maintain  a small collection of configuration templates. **N.B.III**: When you want to run the testsuite by executing the `runtest` directly you will *first* have to build the `compare_numbertable_new` utility, by means of:  ```make numbertable  ``` (in root/testsuite). For each test that fails `runtest` writes an ERROR to stdout and the tests that were not passed successfully will be listed at the end of the run. In case of a successful run, `runtest` script will exit with error code 0 (indicates successful exit on Unix\\-based OS), otherwise the error code 1 is returned.   #### Configuration templates The following configuration files are to be seen as templates to help you construct your own: *General* * all.conf : runs all tests* fast.conf: runs the FAST category of tests *Running with MPI \\+ OpenMP* * impi\\+omp.conf: for OpenMP \\+ Intel\\-MPI* ompi\\+omp.conf: for OpenMP \\+ OpenMPI *To test the CUDA\\-GPU executables* * cuda.conf **N.B.**: these configuration files are sourced by the `runtest` bash\\-script. In principle they only set (export) some environment variables. Setting these environment variables by hand and invoking `make test` (or `make test_all`) amount to the same as running these configuration files with `runtest`.   The output of the tests----------------------- If one runs the tests by means of `make`, as recommended  above all output (stdout\\+stderr) will be written to root/testsuite/testsuite.log. Tests that fail write an ERROR to root/testsuite/testsuite.log and the tests that were not passed successfully will be listed at the end of this file (and `make` will exit in error).   What if tests fail------------------ We have successfully run the testsuite (on 1, 2, 4, 6, and 8 MPI\\-ranks) using executables built with  various toolchains. When you run into trouble, *i.e.*, your testsuite runs report failing tests, we'd ask you to reproduce these errors with one of the aforementioned  toolchains if possible.If your problems persist with a validated toolchain or you have no access to any of these toolchains, please submit a bug report to the VASP\\-forum and we will look into the matter. **N.B.**: This bug report should contain all information we need to try to reproduce the problem: a list of the compilers and libraries you have used to build VASP and the logfile with the stdout\\+stderr output of your testsuite run. Please keep the other output (OUTCAR files. etc) of your failing tests as well since we might need to inspect these in addition to the logfile in the course of trying to solve your problem. Known issues------------ The testsuite scripts in vasp.6\\.1\\.0, vasp.6\\.1\\.1 and vasp.6\\.1\\.2 releases have a potentially serious issue that can lead to loss of user data unrelatedto vasp in the home directory!This issue has yet been only observed on MacOS and BSD systems, but might affect other OS as well. Avoid to use  ```make testmake test_allmake cleantest  ``` or the use of any script called   ```cleanall   ``` on MacOS or BSD systems (and potentially other OS) until we release a fix. This script is used to clean the files produced by VASP after running the test suite.The `readlink` and `dirname` commands take different arguments on Linux and BSD systems including macOS.On BSD systems this results in the `$dir` variable becoming empty, `cd` to the home folder and removing ALL files recursively that do not match the pre\\-defined patterns. Related Sections---------------- Installing VASP.6\\.X.X  ---"}
{"file_name": "FOCKCORR.md", "content": "FOCKCORR= 1 \\| 2n| Default: **FOCKCORR** | \\= 2 | if LMAXFOCKAE\\>0 || --- | --- | --- ||  | \\= 1 | else | Description: The tag FOCKCORR determines how the Coulomb convergence corrections are applied.  --- The Coulomb potential in reciprocal space   V ( G ) \\=  4 \u03c0  e  2  G  2 {\\\\displaystyle V(G)\\={\\\\frac {4\\\\pi e^{2}}{G^{2}}}} diverges for small G vectors.To alleviate this issue and improve the convergence of the exact exchange integral with respect to supercell size (or k\\-point mesh density) different methods have been proposed: the auxiliary function methods[\\[1]](#cite_note-gygi:prb:86-1), probe\\-charge Ewald [\\[2]](#cite_note-massidda:prb:93-2) (HFALPHA), and Coulomb truncation methods[\\[3]](#cite_note-spenceralavi:prb:08-3) (HFRCUT).These mostly involve modifying the Coulomb Kernel in a way that yields the same result as the unmodified kernel within the limit of large supercell sizes. These corrections are implemented in VASP either by changing the   G  \\= 0 {\\\\displaystyle \\\\mathbf {G} \\=0}  component of the Coulomb kernel when FOCKCORR\\=1   \u03a6 (  G  ) \\=  {  4 \u03c0  e  2  \u03a9  1  G  2  G  \u2260 0  \u03c7  G  \\= 0 {\\\\displaystyle \\\\Phi (\\\\mathbf {G} )\\=\\\\left\\\\{{\\\\begin{array}{lr}{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}{\\\\frac {1}{G^{2}}}\\&\\\\mathbf {G} \\\eq 0\\\\\\\\\\\\chi \\&\\\\mathbf {G} \\=0\\\\end{array}}\\\\right.} with   \u03c7 {\\\\displaystyle \\\\chi }  being the value of the correction and depends on whether HFALPHA or HFRCUT are set,or by including the original orbital scaled by the convergence correction when FOCKCORR\\=2  \u27e8  k  \\+  G  \u2032  \\|  V  x  HF  \\|  k  \\+  G  \u27e9 \\= \u2212  \u2211  m  q  f  m  q  \u2211  G  \u2033  C  m  q  \u2217  (  G  \u2032  \u2212  G  \u2033  ) \u03a6 (  k  \u2212  q  \\+  G  \u2033  )  C  m  q  (  G  \u2212  G  \u2033  ) {\\\\displaystyle \\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} '\\|V\\_{\\\\text{x}}^{\\\\text{HF}}\\|\\\\mathbf {k} \\+\\\\mathbf {G} \\\\rangle \\=\\-\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }\\\\sum \\_{\\\\mathbf {G} ''}C\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')\\\\Phi (\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} '')C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}  \u27e8  k  \\+  G  \u2032  \\|  V ^  x  HF  \\|  \u03c8  k  n  \u27e9  \\= \u2212  \u2211  m  q  f  m  q  \u2211  G  \u2033  C  m  q  \u2217  (  G  \u2032  \u2212  G  \u2033  ) \u03a6 (  k  \u2212  q  \\+  G  \u2033  )  C  m  q  (  G  \u2212  G  \u2033  )  C  n  k  (  G  )  \\= \u2212 \u03c7  \u2211  m  q  f  m  q  C  m  q  (  G  ) {\\\\displaystyle {\\\\begin{aligned}\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} '\\|{\\\\hat {V}}\\_{\\\\text{x}}^{\\\\text{HF}}\\|\\\\psi \\_{\\\\mathbf {k} n}\\\\rangle \\&\\=\\-\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }\\\\sum \\_{\\\\mathbf {G} ''}C\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')\\\\Phi (\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} '')C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')C\\_{n\\\\mathbf {k} }(\\\\mathbf {G} )\\\\\\\\\\&\\=\\-\\\\chi \\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} )\\\\end{aligned}}} For Hartree\\-Fock or hybrid functional calculations, either FOCKCORR\\=1 or FOCKCORR\\=2 can be used and should yield the same results when LMAXFOCKAE\\=\\-1 and there are no aliasing errors in the exact exchange (see PRECFOCK for more details).For post\\-DFT methods such as ACDFT, GW, and BSE the FOCKCORR\\=2 should be used because the overlap densities are reconstructed in the plane\\-wave grid (see LMAXFOCKAE tag). Note that in the case FOCKCORR\\=2 the corrections are only applied to orbitals in the   q {\\\\displaystyle \\\\mathbf {q} }  regular grid used to describe the exact exchange potential so this method cannot be used to compute band structures where this potential is applied to orbitals   n  k {\\\\displaystyle n\\\\mathbf {k} }  not in the   m  q {\\\\displaystyle m\\\\mathbf {q} }  set. | **Warning:** FOCKCORR\\=2 should **not** be used when computing the band structure along a path with the 0\\-weight scheme or KPOINTS\\_OPT || --- | In previous versions of VASP, FOCKCORR\\=1 was used when ALGO\\=Normal; LFOCKACE\\=.FALSE. andFOCKCORR\\=2 when ALGO\\=All or ALGO\\=Normal; LFOCKACE\\=.TRUE. . | **Mind:** Only available as of VASP 6\\.3\\.1\\. || --- |"}
{"file_name": "NHC_NS.md", "content": "NHC\\_NS= \\[integer] 1 \\| 3 \\| 7   Default: **NHC\\_NS** \\= 1nDescription: The number of subdivisions of each RESPA step used in the integration step used in propagation of thermostat variables in Nos\u00e9\\-Hoover\u2013chain (NHC) thermostat.   --- The RESPA steps used in in propagation of thermostat variables in Nos\u00e9\\-Hoover\u2013chain (NHC) thermostat are treated by Suzuki\\-Yoshida scheme[\\[1]](#cite_note-1)[\\[2]](#cite_note-2), whereby each step is subdivided further into NHC\\_NS parts. First, fourth, and sixth order schemes with, 1, 3, and 7 steps, respectively, are supported."}
{"file_name": "OMEGAMAX.md", "content": "OMEGAMAX= \\[real]   Default: **OMEGAMAX** \\= outermost node in dielectric function   \u03f5 ( \u03c9 ) {\\\\displaystyle \\\\epsilon (\\\\omega )} /1\\.3nDescription: OMEGAMAX specifies the maximum frequency for the dense part of the frequency grid for GW calculations (old GW code, does not apply to GWR). For CRPA calculations, OMEGAMAX is the frequency point of the interaction. For BSE calculations OMEGAMAX determines the maximum energy difference for excitation pairs to be included. Since the flag controls different aspects of the code, be careful when setting it (and remember to remove the tag, when you change the type of calculations).  --- GW type calculations: For the frequency grid along the real and imaginary axis sophisticated schemes are used, which are based on simple model functions for the macroscopic dielectric function. The grid spacing is dense up to roughly 1\\.3\\*OMEGAMAX and becomes coarser for larger frequencies. The default value for OMEGAMAX is either determined by the outermost node in the dielectric function (corresponding to a singularity in the inverse of the dielectric function) or the energy difference between the valence band minimum and the conduction band minimum. The larger of these two values is used. Except for pseudopotentials with deep lying core states, OMEGAMAX is usually determined by the node in the dielectric function. For ACFDT calculations, only OMEGAMIN and OMEGATL determine the frequency grid (using a minimax algorithm).  The defaults have been carefully tested, and it is recommended to leave them unmodified, whenever possible. The grid should be solely controlled by NOMEGA. The only other value that can be modified is the complex shift CSHIFT. In principle, CSHIFT should NOT be chosen independently of NOMEGA and OMEGAMAX: e.g. for less dense grids (smaller NOMEGA) the complex shift must be accordingly increased. The default for CSHIFT has been chosen such that the calculations are converged to 10 meV with respect to NOMEGA: i.e. if CSHIFT is kept constant and NOMEGA is increased, the QP shifts should not change by more than 10 meV; at least for LSPECTRAL \\= .TRUE.. This was the case for the considered test materials. For LSPECTRAL \\= .FALSE. this does not apply. In this case it is recommended to set CSHIFT manually and to perform careful convergence tests. For LSPECTRAL \\= .TRUE. independent convergence tests with respect to NOMEGA and CSHIFT are usually not required, and it should be sufficient to control the technical parameters via the single parameter NOMEGA. Also note that too large values for NOMEGA in combination with coarse k\\-point grids can cause a decrease in precision (see NOMEGA).    BSE and TD\\-DFT type calculations (see BSE calculations): In this case, OMEGAMAX allows to reduce the number of conduction/ valence band pairs. Usually these are determined by NBANDSV and NBANDSO. The number of pairs is roughly proportional to the products of NBANDSV, NBANDSO, and the number of k\\-points in the full Brillouin zone. If OMEGAMAX is set, pairs for which the difference of the independent particle energy is larger than OMEGAMAX will be removed from the basis set (and from the BSE calculations). This can improve performance, without significantly affecting the imaginary part of the dielectric function. The real part of the dielectric function is, however, rather sensitive to reducing OMEGAMAX, NBANDSV, NBANDSO."}
{"file_name": "Band_structure.md", "content": "Theory------ The band structure describes the eigenvalues of the orbitals throughout the Brillouin zone. It gives a detailed insight into the material determining many optical and transport properties.A band structure is often visualized along high symmetry paths.Some external tools[\\[1]](#cite_note-bilbao:kvec-1)[\\[2]](#cite_note-seekpath-2) help to identify these points for materials of any symmetry. How to------ 1. \u2191 www.cryst.ehu.es/cryst/get\\_kvec.html (2022\\).2. \u2191 www.materialscloud.org/work/tools/seekpath (2022\\). Pages in category \"Band structure\"---------------------------------- The following 5 pages are in this category, out of 5 total. ### B * Band\\-structure calculation using hybrid functionals* Band\\-structure calculation using meta\\-GGA functionals### K * KPOINTS* KPOINTS OPT### L * LORBIT"}
{"file_name": "PSUBSYS.md", "content": "PSUBSYS= \\[real array]nDescription: PSUBSYS sets the collision probabilities for the atoms in each atomic subsystem in calculations with multiple Anderson thermostats (in case VASP was compiled with \\-Dtbdyn).  --- Up to three user\\-defined atomic subsystems may be coupled with independent Andersen thermostats[\\[1]](#cite_note-Andersen80-1) (MDALGO\\=13\\). The collision probabilities for the atoms in each atomic subsystem is set by means of the PSUBSYS tag (one has to specify one number for each subsystem). Note: 0 \u2264 PSUBSYS \u2264 1 Related Tags and Sections------------------------- NSUBSYS,TSUBSYS,MDALGO Examples that use this tag"}
{"file_name": "ML_DESC_TYPE.md", "content": "ML\\_DESC\\_TYPE= \\[integer]   Default: **ML\\_DESC\\_TYPE** \\= 0nDescription: This tag selects the descriptor type of the three\\-body descriptor used in machine learning force fields. | **Mind:** This tag is only available as of VASP 6\\.4\\.3\\. || --- |  --- | **Mind:** This tag is only available for `ML_MODE = refit` and `ML_MODE = run` (but needs only to be set in `ML_MODE = refit` , since it will be read from the ML\\_FF file in `ML_MODE = run`). || --- | This tag selects how the three\\-body descriptor is calculated and the following options are available: * `ML_DESC_TYPE = 0`: Standard three\\-body descriptor. The number of descriptors in the calculations scales quadratically with the number of elements.* `ML_DESC_TYPE = 1`: Descriptor for which the number of descriptors is linearly scaling with respect to the number of chemical species. Standard descriptor------------------- The standard three\\-body descriptor (ML\\_DESC\\_TYPE\\=0\\) without self\\-interaction corrections for the   i {\\\\displaystyle i} th atom looks like the following  p  n \u03bd l  i J  J \u2032  \\=  8  \u03c0  2  2 l \\+ 1  \u2211  m \\= \u2212 l  l  c  n l m  i J  c  \u03bd l m  i  J \u2032  . {\\\\displaystyle p\\_{n\\\u l}^{iJJ'}\\={\\\\sqrt {\\\\frac {8\\\\pi ^{2}}{2l\\+1}}}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}c\\_{nlm}^{iJ}c\\_{\\\u lm}^{iJ'}.} Here   n {\\\\displaystyle n}  /  \u03bd {\\\\displaystyle \\\u }  ,  l {\\\\displaystyle l}  and  m {\\\\displaystyle m}  are radial, angular, and magnetic quantum numbers, respectively.   J {\\\\displaystyle J}  and  J \u2032 {\\\\displaystyle J'}  are indices for the element types. Both indices go over all elements in the structure. So one can see that the number of three\\-body descriptors grows quadratically with the number of element types.  Element reduced descriptor-------------------------- Another type of descriptor (ML\\_DESC\\_TYPE\\=1\\) which was proposed in Ref. [\\[1]](#cite_note-csanyi:npj:2022-1) applies a reduction of one of the intermediate coefficients   c  n l m {\\\\displaystyle c\\_{nlm}}  and is written as  p  n \u03bd l  i J  \\=  8  \u03c0  2  2 l \\+ 1  \u2211  m \\= \u2212 l  l  c  n l m  i J  \u2211  J \u2032  c  \u03bd l m  i  J \u2032  . {\\\\displaystyle p\\_{n\\\u l}^{iJ}\\={\\\\sqrt {\\\\frac {8\\\\pi ^{2}}{2l\\+1}}}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}c\\_{nlm}^{iJ}\\\\sum \\\\limits \\_{J'}c\\_{\\\u lm}^{iJ'}.} In contrast to the standard three\\-body descriptor   p  n \u03bd l  i J {\\\\displaystyle p\\_{n\\\u l}^{iJ}}  depends only linearly on the number of chemical species, since summing over   J \u2032 {\\\\displaystyle J'}  for  c  \u03bd l m  i  J \u2032 {\\\\displaystyle c\\_{\\\u lm}^{iJ'}}  is equivalent to having element agnostic intermediate coefficients. When using this descriptor everything up to the calculation of the descriptors takes the same time to calculate as for the standard descriptor, but everything that comes after that, such as e.g. kernels and forces, scales linearly with respect to the number of chemical species. Hence the factor that is gained in computational efficiency is less than the number of chemical species but the factor increases with an increasing number of local reference configurations employed in the calculations. The improved computational efficiency comes at the price of decreased accuracy. The accuracy loss is system\\-dependent and is typically around 5 to 20 percent.  Additional sparsification------------------------- All descriptors can be further combined with descriptor sparsification (ML\\_LSPARSDES\\=**.TRUE.**). Generally, the sparsification of descriptors results in a trade\\-off between accuracy and efficiency. The fraction of descriptors that is kept is specified by ML\\_RDES\\_SPARSDES. We advise the user to adjust this parameter carefully and test it individually for each system. However, we have experienced the following trends for our test cases: For ML\\_DESC\\_TYPE\\=0 a descriptor sparsification of 50 percent ML\\_RDES\\_SPARSDES\\=0\\.5 leaves the accuracy almost untouched. Since ML\\_DESC\\_TYPE\\=1 contains already much fewer descriptors than ML\\_DESC\\_TYPE\\=0, a 50 percent sparsification for ML\\_DESC\\_TYPE\\=1 results in noticeable accuracy loss (additionally to the 5 to 20 percent by the descriptor itself)."}
{"file_name": "HILLS_H.md", "content": "HILLS\\_H= \\[Real]   Default: **HILLS\\_H** \\=   10  \u2212 3 {\\\\displaystyle 10^{\\-3}}   Description: HILLS\\_H specifies the height of the Gaussian hill (in eV) used in metadynamics (in case VASP was compiled with \\-Dtbdyn).  --- In metadynamics (MDALGO\\=11 \\| 21\\), the bias potential is given as   V \\~  ( t , \u03be ) \\= h  \u2211  i \\= 1  \u230a t  /  t  G  \u230b  exp \u2061  {  \u2212  \\|  \u03be  ( t )  \u2212  \u03be  ( i \u22c5  t  G  )  \\|  2  2  w  2  }  . {\\\\displaystyle {\\\\tilde {V}}(t,\\\\xi )\\=h\\\\sum \\_{i\\=1}^{\\\\lfloor t/t\\_{G}\\\\rfloor }\\\\exp {\\\\left\\\\{\\-{\\\\frac {\\|\\\\xi ^{(t)}\\-\\\\xi ^{(i\\\\cdot t\\_{G})}\\|^{2}}{2w^{2}}}\\\\right\\\\}}.} Thre parameters (HILLS\\_H, HILLS\\_W, and HILLS\\_BIN) must be provided by the user.   The height of the Gaussian hills   h {\\\\displaystyle h}  (in eV) is set by HILLS\\_H."}
{"file_name": "Skins.vector.md", "content": "There is currently no text in this page.You can search for this page title in other pages, or search the related logs, but you do not have permission to create this page."}
{"file_name": "LUSE_VDW.md", "content": "LUSE\\_VDW= \\[logical]   Default: **LUSE\\_VDW** \\= .FALSE.nDescription: LUSE\\_VDW\\=.TRUE. switches on the use of a nonlocal vdW\\-DF functional. These functionals depend on the electron density at two points in space and model long\\-range van der Waals (dispersion) correlation effects.  ---   | **Mind:** In versions of VASP prior to 6\\.4\\.0, a meta\\-GGA functional (e.g., SCAN) could be combined only with the rVV10 nonlocal functional. Conversely, a GGA functional could be combined only with the original nonlocal functional of Dion *et al.*. This restriction is lifted since VASP.6\\.4\\.0 thanks to the introduction of the IVDW\\_NL tag. || --- |"}
{"file_name": "Compiler_options.md", "content": "The compiler options are specified by compiler variables that set the compiler and compiler flags. The Fortran compiler will then be invoked as:  ```$(FC) $(FREE) $(FFLAGS) $(OFLAG) $(INCS)  ``` Compiler variables================== ### FC The command to invoke your Fortran compiler (e.g. `gfortran`, `ifort`, `mpif90`, `mpiifort`, ... ).### FCL The command that invokes the linker. In most cases:  ```FCL=$(FC) [+ some options] ``` ### OFLAG The general level of optimization (default: `OFLAG=-O2`).### FFLAGS Additional compiler flags. To enable debugging, for instance, the following line could be added:  ```FFLAGS+=-g  ``` ### OFLAG\\_IN (default: `-O2`) In the vast majority of `makefile.include` files this variable is set:  ```OFLAG_IN=$(OFLAG) ``` ### DEBUG The optimization level with which the main program (main.F) will be compiled, usually:  ```DEBUG=-O0 ``` ### INCS Use this variable to specify objects to be included in the sense of:  ```INCS=-I/path/to/directory-with-files-to-be-included ``` ### FREE Specify the options that your Fortran compiler needs for it to accept free\\-form source layout, without line\\-length limitation. For instance:* Using Intel's Fortran compiler:  ```FREE=-free -names lowercase ``` * Using gfortran:  ```FREE=-ffree-form -ffree-line-length-none ``` MPI \\+ OpenMP parallelization----------------------------- To compile VASP with OpenMP support, add the following to the list of precompiler flags in your `makefile.include` file:  ```CPP_OPTIONS += -D_OPENMP  ``` In addition, you will have to add some compiler\\-specific options to the command that invokes your Fortran compiler (and sometimes to the linker as well). When using an Intel toolchain (ifort \\+ Intel MPI), for instance:  ```FC = mpiifort -qopenmp  ``` Special rules============= The current `src/makefile` contains a set of recipes to allow for the compilation of objects at different levels of optimization other than the general level specified by `OFLAG`.In these recipes, the compiler will be invoked as:  ```$(FC) $(FREE) $(FFLAGS_x) $(OFLAG_x) $(INCS_x)   ``` where `x` stands for: 1, 2, 3, or IN. ### FFLAGS\\_x Default: `FFLAGS_x=$(FFLAGS)`, for x\\=1, 2, 3, and IN.### OFLAG\\_x Default: `OFLAG_x=-Ox` (for x\\=1, 2, 3\\), and `OFLAG_IN=-O2`### INCS\\_x Default: `INCS_x=$(INCS)`, for x\\=1, 2, 3, and IN.The objects to be compiled in accordance with these recipes have to be specified by means of the variables: `OBJECTS_O1`, `OBJECTS_O2`, `OBJECTS_O3`, `OBJECTS_IN` Several objects are compiled at `-O1` and `-O2` by default. These lists of objects are specified in the **/path/to/vasp.X.X.X/src/.objects** file through the variables: `SOURCE_O1`, `SOURCE_O2`, `SOURCE_IN`. To completely overrule a default setting (for instance for the `-O1` special rules) you can use the following construct:  ```SOURCE_O1  =OBJECTS_O1 = .. your list of objects ..  ``` Related articles---------------- Installing VASP.6\\.X.X,makefile.include,Precompiler options,Linking to libraries,OpenACC GPU port of VASP,Toolchains,Validation tests,Known issues  ---"}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_mMD.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example a nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl is attempted via a meta dynamics calculation. Input----- ### POSCAR  ```   1.00000000000000     12.0000000000000000    0.0000000000000000    0.0000000000000000      0.0000000000000000   12.0000000000000000    0.0000000000000000      0.0000000000000000    0.0000000000000000   12.0000000000000000C H Cl   1   3   2cart         5.91331371  7.11364924  5.78037960         5.81982231  8.15982106  5.46969017         4.92222130  6.65954232  5.88978969         6.47810398  7.03808479  6.71586385         4.32824726  8.75151396  7.80743202         6.84157897  6.18713289  4.46842049  ``` * The starting POSCAR file for this example can be found under POSCAR.init. It will be needed for the script that runs the job (run.sh).* A sufficiently large cell is chosen to minimize the interactions between neighbouring cells and hence to simulate an isolated molecular reaction. ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=50000                                          # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # metaDynamics with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probabilityHILLS_BIN=50                                       # update the time-dependent bias                                                             # potential every 50 stepsHILLS_H=0.005                                      # height of the GaussianHILLS_W=0.05                                       # width of the Gaussian##############################################################################  ```   * The INCAR file in this example is the same as in the previous example (Nucleophile Substitution CH3Cl \\- Standard MD) with the exception of the metadynamics tags HILLS\\_H and HILLS\\_W.* Metadynamics molecular dynamics is formally exact in the limit of infinitesimally small hills (HILLS\\_H) and infinite update time (HILLS\\_BIN) for the time\\-dependent bias potential, hence the parameter \\[\\[]] should be as small as possible while HILLS\\_BIN should be as large as possible.* A random seed for reproducibility is used in this calculations which is added later by the *run* script.* Meta dynamics is formally exact in the limit of infinitesimally small hills and infinite update times for the time\\-dependent bias potential. Hence the parameter HILLS\\_H should be as small as possible while HILLS\\_BIN should be as large as possible. ### ICONST For this example an ICONST file is used which looks like:  ```R 1 5 0R 1 6 0S 1 -1 5  ``` * This file is the same as in the previous example Nucleophile Substitution CH3Cl \\- Standard MD with the exception that the 5 at the fourth entry in the third row specifies that a bias potential is applied to the special coordinate. Calculation----------- As in the previous example (Nucleophile Substitution CH3Cl \\- Standard MD) the reaction coordinate, the difference between two C\\-Cl distances, is monitored. Expected values for reactant:   \u2248 1  \u00c5 {\\\\displaystyle \\\\approx 1\\\\mathrm {\\\\AA} } , for product:    \u2212 1  \u00c5 {\\\\displaystyle \\~\\-1\\\\mathrm {\\\\AA} } , for transition state:   0  \u00c5 {\\\\displaystyle 0\\\\mathrm {\\\\AA} }  .   ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD. For practical reasons, we split our (pressumably long) meta dynamics calculation into shorter runs of length of 1000 fs for each (NSW\\=1000 and POTIM\\=1\\). At the end of each run, the HILLSPOT file (containing the bias potential generated in the previous run) must be copied to the PENALTYPOT file (the input file with bias potential). Meta dynamics is a fully stochastic simulation, the results can depend on the random numbers used in the calculations. To ensure best reproducibility the calculation is started from the same random seed (*rseed\\=\"RANDOM\\_SEED \\= 311137787 0 0\"*). After each step the last random seed is copied to the INCAR file for the new step. This way reproducability is ensured between each step. The calculation is executed using the \"run\" script:  ```#!/bin/bash runvasp=\"mpirun -np x executable_path\" # ensure that this sequence of MD runs is reproduciblecp POSCAR.init POSCARcp INCAR.init INCARrseed=\"RANDOM_SEED =         311137787                0                0\"echo $rseed >> INCAR  i=1while [ $i -le 50 ]  do   # start vasp  $runvasp   # ensure that this sequence of MD runs is reproducible  rseed=$(grep RANDOM_SEED REPORT |tail -1)  cp INCAR.init INCAR  echo $rseed >> INCAR   # use bias potential generated in previous mMD run  cp HILLSPOT PENALTYPOT   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` ### Expectation The meta dynamics simulation pushes the system against the reaction barrier. The amplitude of oscillation of the collective variable increases (as a larger and larger region of configuration space is visited) and at some point the collective variable switches from a positive value (corresponding to the reactant) to a negative value (corresponding to the product). ### Reality Most likely the collective variable increases to unexpectedly large values (  \\> 3  \u00c5 {\\\\displaystyle \\>3\\\\mathrm {\\\\AA} } ) while the transition region (around   0  \u00c5 {\\\\displaystyle 0\\\\mathrm {\\\\AA} } ) is either not sampled or it is smpled only in the final part of the simulation. In other words, the simulation spent most of its time sampling an uninteresting part of the configuration space related to the dissociation of the vdW complex instead pushing the configuration over the barrier. This is because meta dynamics always seeks for the path of least resistance. In the case of our model system this corresponds to the dissociation of the vdW complex because the barrier this process is much lower than that for the SN2 reaction. To verify this the time evolution of the collective variable is monitored (and written to timeEvol.dat) by calling the command:  ```bash ../timeEv.sh  ``` The time evolution is visualized using the command:  ```gnuplot -e \"set terminal jpeg; set xlabel 'Timestep'; set ylabel 'CV (Ang)'; set style data lines; plot 'timeEvol.dat'\" > timeEvol.jpg  ``` It should look like the following: [](File_TimeEvol_mMD1_CH3Cl.html) We indeed see that the transition region is never sampled and that the meta dynamics simulation takes the path of least resistance, which is the dissociation of the vdW complex.   ### Solution In order to restrict the sampling into the part of configuration space that is relevant for the process of interest (say between   \u2212 2  \u00c5 {\\\\displaystyle \\-2\\\\mathrm {\\\\AA} }  and  2  \u00c5 {\\\\displaystyle 2\\\\mathrm {\\\\AA} } ) we must use some trick which is explained in the next example. Download--------  CH3Cl\\_mMD1\\.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "FAQ.md", "content": "I can not compile the parallel version of VASP under LINUX?----------------------------------------------------------- Mind that VASP will generally not link correctly to mpi versionscompiled with g77/f77, since g77/f77 append two underscores toexternal symbols already containing one underscore (i.e. MPI\\_SEND becomes mpi\\_send\\_\\_).The portland group compiler however appends one underscore.Although the pgf90 compiler has an option to work around thisproblem, we yet faild to link against mpi libraries generatedfor g77/f77\\. Hence you must compile mpi (mpich and/or lam)yourself. This is really easy and simple, if the machine hasbeen set up properly (have a look at our makefiles).If the compilation of mpich and/or lam fails,VASP will almost certainly not work in parallel on your machine,and we strongly urge you to reinstall LINUX. Why is the cohesive energy much larger than reported in other papers?--------------------------------------------------------------------- Several reasons can be responsible for this: First, VASP calculates the cohesive energy with respect to a sphericalnon spin\\-polarised atom. One should however calculate thecohesive energy with respect to a spin polarised atom. Thesecorrections are usually called (atomic) spin\\-polarisation corrections, andthey must be subtracted manually from the calculated cohesive energy calculatedby VASP. Second, many older calculations report too small cohesive energies, sincebasis sets were often insufficient.It is now well accepted that the local density approximation overestimatesthe cohesive energy significantly in many cases. Which k\\-points should I use?----------------------------- For metallic system, k\\-point convergence is usually a critical issue.There are a few general hints which might be helpfull: * For hexagonal cells, Gamma centered k\\-point grids converge much faster than other grids. In fact, most meshes that do not include the   \u0393 {\\\\displaystyle \\\\Gamma }  point break the symmetry of the hexagonal lattice! Even with increasing grid densities the wrong results might be obtained. * Up to divisions of 8 (i.e.   8 \u00d7 8 \u00d7 1 {\\\\displaystyle 8\\\\times 8\\\\times 1}  for a surface) even Monkhorst Pack grids which do not contain the Gamma point, perform better than odd Monkhorst Pack grids (this does not apply to hexagonal cells, see above). In other words one obtains better converged results with even grids. * For adsorbates on surfaces, it is sometimes feasable to use only the k\\-points of the high symmetry Brillouin zone, even if the adsorbate breaks the symmetry. These k\\-point grids can be generated by running VASP with a POSCAR for which all adatoms have been removed. The resulting IBZKPT file can be copied to KPOINTS. For convenicene, the following k\\-point grids can be used for hexagonal cells:  ```Gamma centered 2x2Automatically generated mesh 2Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.50000000000000    0.00000000000000    0.00000000000000             3 Gamma centered 3x3Automatically generated mesh 3Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.33333333333333    0.00000000000000    0.00000000000000             6    0.33333333333333    0.33333333333333    0.00000000000000             2     Gamma centered 4x4Automatically generated mesh 4Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.25000000000000    0.00000000000000    0.00000000000000             6    0.50000000000000    0.00000000000000    0.00000000000000             3    0.25000000000000    0.25000000000000    0.00000000000000             6   Gamma centered 5x5Automatically generated mesh 5Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.20000000000000    0.00000000000000    0.00000000000000             6    0.40000000000000    0.00000000000000    0.00000000000000             6    0.20000000000000    0.20000000000000    0.00000000000000             6    0.40000000000000    0.20000000000000    0.00000000000000             6   Gamma centered 6x6Automatically generated mesh 7Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.16666666666667    0.00000000000000    0.00000000000000             6    0.33333333333333    0.00000000000000    0.00000000000000             6    0.50000000000000    0.00000000000000    0.00000000000000             3    0.16666666666667    0.16666666666667    0.00000000000000             6    0.33333333333333    0.16666666666667    0.00000000000000            12    0.33333333333333    0.33333333333333    0.00000000000000             2  ``` For cubic surface cells, the following k\\-points can be used:  ```Monkhorst Pack: 2x2x1 1Reciprocal lattice    0.25000000000000    0.25000000000000    0.00000000000000             4 Monkhorst Pack: 4x4x1 3Reciprocal lattice    0.12500000000000    0.12500000000000    0.00000000000000             4    0.37500000000000    0.12500000000000    0.00000000000000             8    0.37500000000000    0.37500000000000    0.00000000000000             4 Monkhorst Pack: 6x6x1 6Reciprocal lattice    0.08333333333333    0.08333333333333    0.00000000000000             4    0.25000000000000    0.08333333333333    0.00000000000000             8    0.41666666666667    0.08333333333333    0.00000000000000             8    0.25000000000000    0.25000000000000    0.00000000000000             4    0.41666666666667    0.25000000000000    0.00000000000000             8 Monkhorst Pack: 8x8x1 10Reciprocal lattice    0.06250000000000    0.06250000000000    0.00000000000000             4    0.18750000000000    0.06250000000000    0.00000000000000             8    0.31250000000000    0.06250000000000    0.00000000000000             8    0.43750000000000    0.06250000000000    0.00000000000000             8    0.18750000000000    0.18750000000000    0.00000000000000             4    0.31250000000000    0.18750000000000    0.00000000000000             8    0.43750000000000    0.18750000000000    0.00000000000000             8    0.31250000000000    0.31250000000000    0.00000000000000             4    0.43750000000000    0.31250000000000    0.00000000000000             8    0.43750000000000    0.43750000000000    0.00000000000000             4   ``` Question Why is convergence to the ionic groundstate so slow?------------------------------------------------------------- In general convergence depends on the eigenvalue spectrum of theHessian matrix (second derivative of the energy with respect topositions). Roughly speaking the number of steps equals  N \\=  \u03f5  m a x  \u03f5  m i n {\\\\displaystyle N\\={\\\\sqrt {\\\\frac {\\\\epsilon \\_{\\\\rm {max}}}{\\\\epsilon \\_{\\\\rm {min}}}}}} if a conjugate gradient, or Quasi\\-Newton algorithm is chosen.If a good structural start guess exists, the best convergencecan be obtained with IBRION\\=1 and NFREE (numberof degrees of freedon) set to a reasonable value.If the initial start guess is bad, it is sometimes requiredto use the safer conjugate gradient algorithm. A very important point concerns the required accuracy of theelectronic degrees of freedom. If the eigenvalue spectrumof the Hessian matrix is small, EDIFF can be rather large(EDIFF\\=1E\\-3\\). However if the eigenvalue spectrum is broad,EDIFF must be set to a smaller value EDIFF\\=1E\\-5, since otherwisethe slowly varying degrees of freedom can not be accurately determinedin the Hessian matrix. If no convergence is observed for IBRION\\=1,try to decrease EDIFF. \\=\\= I see unphysical oszillations and negative values for the chargedensity in the vacuum.Is VASP not able to give reliable results in the vacuum? \\=\\= VASP gives reliable results, but things are complicated by several issues: * Avoid, ISMEAR\\>0, when considering the wavefunctions in the vacuum. It can cause negative occupancies close to the Fermi\\-level, and since states at the Fermi\\-level decay slowest in the vacuum, the charge density in the vacuum might be negativ (energies are not effected by this, since the wavefunctions in the vacuum do not contribute significantly to the energy).* The charge density of self\\-consistent calculations might have negative values in the vacuum, since the mixer is very insensitive to the charge density in the vacuum. It is better to set LPARD\\=.TRUE. and call VASP a second time. The generated CHGCAR file contains the chargedensity calculated directly from the wavefunctions.* In VASP, pseudo charge density components from unbalanced lattice vectors are set to zero: although the charge density is initially calculated in real space and therefore positive definite, it is modified then in reciprocal space, and Fourier transformed back to real space. The final charge density has small oscillations in the vacuum. To avoid this problem, use FFT grids that avoid wrap around errors (PREC\\=Accurate). The problem can also be reduced by increasing the energy cut off.* Ultrasoft pseudopotentials require a second support grid. In VASP.4\\.4\\.4 and older version, charge density components from unbalanced lattice vectors are also zeroed on the second support grid, causing additional small oscillations in the vacuum. This problem is removed in VASP.4\\.5 and in VASP.4\\.4\\.5\\. In VASP.4\\.4\\.5 the flag *\\-DVASP45* must be specified in the *CPP* line of the makefile before compiling the VASP code. Total energies might however change by a fraction of a meV. I am running molecular dynamics and observe a large drift in the total energy, that should be conserved.-------------------------------------------------------------------------------------------------------- Three reasons can hamper the energy conservation in VASP. * First the electronic convergence might not be sufficiently tight. It is often necessary to decrease the tolerance to   10  \u2212 6 {\\\\displaystyle 10^{\\-6}}  or  10  \u2212 7 {\\\\displaystyle 10^{\\-7}}  to obtain excellent energy conservation. Alternatively NELMIN can be set to values around 6\\.* The second reason is an insufficiently accurate real space projection. This usually causes a slightly spiky and discontinuous total energy. If you observe such a behavior, you have to improve ROPT, or set LREAL\\=*.FALSE*.* Finally, consider reducing the time step. The following graph illustrates the behavior for a small liquid metallic system(Ti). It shows the energy conservation for a liquid metallic system for various settings. Please mind, that reducing ROPT from \\-0\\.002 to \\-.0005 (LREAL\\=*.A.*) hadthe same effect as using LREAL\\=*.FALSE.* [](File_Econs.html) I am running VASP on a SGI Origin, and the simple benchmark.------------------------------------------------------------ This issue appears for the benchmark (benchmark.tar.gz) usually with the following message:  ```  lib-4201\u00a0: UNRECOVERABLE library error   A READ operation tried to read past the end-of-record.   Encountered during a direct access unformatted READ from unit 21  Fortran unit 21 is connected to a direct unformatted unblocked file:  \"TMPCAR\" IOT Trap  Abort (core dumped)  ``` VASP extrapolates the wave functions between molecular dynamics time steps.To store the wave functions of the previous time steps either a temporary scratch file (TMPCAR)is used (IWAVPR\\=1\\-9\\) or large work arrays are allocated (IWAVPR\\=11\\-19\\).On the SGI, the version that uses a temporary scratch file does not compile correctly,and hence the user has to set IWAVPR to 10\\. The parallel performance of VASP is not as good as expected.------------------------------------------------------------ What does one mean by performance was not as expected\u00a0?Matter of fact, one can never obtain the same scaling on a P3/P4/Athlon XP basedworkstation cluster ason the T3D. The T3D was a very very slow machine (by todays standard) equipped with anextraordinarily fast network (that's what made the price of the T3D).A Gigabit network has roughly the same overall performance as the T3D(Gigabit has longer latency, larger node\\-to\\-node bandwidth, but smaller total aggregated bandwidth),but the P4 CPU is about 10 times faster than one T3D node.Additionally VASP was hot\\-spot optimized carefully on the T3D. Altogether VASP will run reasonable efficient on up to 8\\-16P4/Athlon XP type nodes (until k\\-point parallelization is implemented)! Why is the VASP performance so bad on a dual processor machine?--------------------------------------------------------------- It is a bad idea to run vasp on dual processor P3/P4/Athlon machines,since two CPU's with small cache have to share the small memory bandwidth(P4 RD\\-RAMS RIMM based machines are an exception).If you run two serial VASP jobs on such a machine, the performancealready drops by 20\u00a0%. If you run VASP in parallel, the CPU's haveto share additionally one Gigabit card which makes things even worse(the argument, that these two CPUs can exchange data faster, is  ```irrelevant, since most of the data exchange is not between the two localCPU's).  ``` We are using the LINUX kernel X.X.X and LAM/MPICH X.X.X but VASP fails to run.------------------------------------------------------------------------------ First, it must be emphasized that we do NOT SUPPORT VASP on parallel machines(in particular LINUX clusters). This isclearly spelled out in the manual. One reason for this policy is thatLINUX systems are too heterogeneous to foreseeall possible problems. Most problems are in fact not VASP related but relatedto very simple basic mistakes made by the system administrator, orcomplicated inconsistencies between the LINUX kernel and the LAM/MPICHinstallation, or the compilers and the installed MPICH/LAM version.Such problems can not be solved by us! But there is no reason to put off quickly.Things have certainly improved a lot in the last few years, and parallelcomputing is still an area were one kernel/LAM/MPICH upgradecan make a huge difference (both to the better or, unfortunately, to the worse). Some common failures occurring during the installation of MPICH/LAMshould be highlighted: * The compilation of MPICH/LAM fails: Certainly not a problem we can solve for you. Please contact the MPICH/LAM developers.* VASP fails to link properly: Make sure that MPICH/LAM was compiled with the same compiler as used for VASP. Try to adhere strictly to the guidelines in our vasp.4\\.X makefiles. In particular, it is not possible to link with g77/f77 compiled MPICH/LAMroutines, since g77/f77 appends two underscores to MPI\\_XXXX calls, whereas ifc and pgf90 append only one. Also make sure that the f90 linker uses the proper libraries.This can be achieved usually by using mpif90 or mpif77 as linkers instead of f90\\. But one needs to make sure that the proper mpif77 front\\-end is called (try to include the option *\\-v verbose* upon calling mpif77\\). This can be a particular problem on some LINUX installations (SUSE), that install a mpif90 and mpif77 command. Type *which mpif90* or *which mpif77* to determine which front\\-end you are using. * VASP fails to execute properly: LAM requires a daemon to run. It is essential to use a VASP executable and LAM daemon compiled using the same LAM distribution! The problem is related to the one already discussed in the previous section.* Problems with scaLAPACK: Makefiles for scaLAPACK are not distributed with either scaLAPACK, LAM/MPICH or vasp. One reason for this is that the makefiles depend to some extend on the LAM/MPICH version, on the location of the libraries, on the precisse LINUX distribution etc.* If you have done everything correctly, and VASP still fails to execute... well, then, you will need to stick to the serial version, or seek professional support from a company distributing or maintaining parallel LINUX clusters. How to evaluate the total energy properly for and adsorbed ionic species on insulating surface---------------------------------------------------------------------------------------------- I adsorb, an ionic species e.g. O  \u2212 {\\\\displaystyle ^{\\-}}  on an insulating surface. To select aspecific charge state, I have increased the number of electrons by onecompared to the neutral system. Now, I have no clue how to evalute thetotal energy properly (i.e. are there convergence corrections). Actually, you MUST NOT set the number of electrons manually for a slabcalculation. I.e., when you calculate the slab\\-O  \u2212 {\\\\displaystyle ^{\\-}}  system you are notallowed to select a specific charge state for the oxygen ion, by increasingthe number of electrons manually. Specific charge state calculationsmake sense only in 3D systems and for cluster calculations. If you conduct the calculations properly, i.e. if your slab is largeenough and the lateral dimension (x,y) of your surface is large enoughthe energy should converge to the proper value, i.e. the O should acquirethe correct charge state automatically. Reason:If you set the number of electrons in the INCAR file for a slab calculationyou end up with a charged slab. The electrostatic energy of such a slabis however only conditionally convergent and worse, in practice, even infinite(basic electrostatics).Therefore, no method whatsoever exists to correct the error in theelectrostatic energy. E.g. the energy converges towardsinfinity, when the vacuum width is increased. You can try to validatethis, by simply increasing the vacuum width in VASP for a chargedslab. You will find that the energy increases or decreases linearlywith the vacuum width. Well, there is maybe one method that can surmount the aforementioned problem.You can charge the slab and increase systematically the distance between the O  \u2212 {\\\\displaystyle ^{\\-}}  species(by increasing the lateral dimensions of your super cell) at a fixedvacuum width,and finally extrapolate the energies towards infinite lateral distances.The energy should converge towards the correct value as   1  /  d {\\\\displaystyle 1/d} , where   d {\\\\displaystyle d}  is thedistance between the adsorbed species.This might yield a converged value. The point is that, as I mentionedabove, the electrostatic energy is only conditionally convergent forthe case of a charged slab/system, and results depend on how you evaluatethe limit towards infinity.However, to the best of my knowledge, this has not been done or attemptedhereto (and therefore we can not assist you on that issue).  ---"}
{"file_name": "Electrostatics.md", "content": "Computing the properties of charged and dipolar systems requires proper treatment of the **electrostatics**. Without appropriate corrections, the energies, forces, and potentials will not correspond to the expected boundary conditions. This page provides a summary of the corrections that are implemented and the relevant INCAR tags to activate these corrections. Practical details regarding convergence, setting up, and running relevant calculations can be found in the how\\-to section.  Summary of relevant INCAR tags------------------------------ The table contains a summary of INCAR tags for performing monopole, dipole, and quadrupole corrections. Please see the relevant pages of the respective tags for more detailed information. In general, we refer to a 3D system as a system with periodicity in all three dimensions of a cell, a 2D system as having requirements of periodicity only along two out of the three dimensions (eg. a slab or a 2D\\-material such as graphene), a 1D system as having requirements of periodicity along only one out of the three dimensions (eg. a nano\\-rod) and a 0D system as having no requirements of periodicity (such as an atom or a molecule).  | Dimensionality of the system | Does the system have net charge? | Does the system have a net dipole moment? | Relevant INCAR tags for monopole/dipole corrections || --- | --- | --- | --- || Any | No | No | None || 3D | Yes | No | NELECT, LMONO, EPSILON || 3D | No | Yes | DIPOL, IDIPOL, EPSILON || 3D | Yes | Yes | NELECT, DIPOL, IDIPOL, EPSILON || 2D | Yes | No | NELECT || 2D | No | Yes | IDIPOL, LDIPOL, DIPOL || 2D | Yes | Yes | NELECT || 1D | Yes | No | NELECT || 1D | No | Yes | Not implemented || 1D | Yes | Yes | Not implemented || 0D | Yes | No | NELECT, LMONO, LDIPOL || 0D | No | Yes | LDIPOL || 0D | Yes | Yes | NELECT, LMONO, LDIPOL | | **Tip:** If an external electrostatic field is desired for slab or molecular calculations, see EFIELD. || --- | How to------ Practical guides to electrostatic corrections implemented in VASP: * Computing the work function* Monopole, Dipole and Quadrupole Corrections* Dipole correction for defects in solids Pages in category \"Electrostatics\"---------------------------------- The following 13 pages are in this category, out of 13 total. ### C * Computing the work function### D * Dipole corrections for defects in solids### E * Electrostatic corrections* EPSILON### I * IDIPOL### L * LDIPOL* LMONO* LOCPOT* LVACPOTAV* LVHAR### N * NELECT### V * VACPOTFLAT### W * WRT POTENTIAL"}
{"file_name": "ML_RDES_SPARSDES.md", "content": "ML\\_RDES\\_SPARSDES= \\[real]   Default: **ML\\_RDES\\_SPARSDES** \\= 0\\.5nDescription: Sets the ratio of descriptors kept during angular\\-descriptor sparsification. | **Mind:** This tag is only available as of VASP 6\\.4\\.3\\. || --- |  --- During angular\\-descriptor sparsification (ML\\_LSPARSDES\\=T), insignificant angular descriptors are removed based on a leverage scoring. The percentage of angular descriptors that are kept is determined by the value of ML\\_RDES\\_SPARSDES, which must be chosen between   0 \\< r \u2264 1 {\\\\displaystyle 0\\<r\\\\leq 1} . In practice, we recommend scanning a range between 0\\.1 to 0\\.9\\. Removing angular descriptors increases the performance of a force field, but it decreases accuracy at the same time. One method of finding the optimal tradeoff between accuracy and performance is to do a Pareto front with run time on the x\\-axis and accuracy on the y\\-axis."}
{"file_name": "Phonons__Theory.md", "content": "Phonons are the collective excitation of nuclei in an extended periodic system. Taylor expansion in ionic displacements--------------------------------------- To compute the phonon modes and frequencies we start by Taylor expanding the total energy (  E {\\\\displaystyle E} ) around the set of equilibrium positions of the nuclei (  {  R  0  } {\\\\displaystyle \\\\{\\\\mathbf {R} ^{0}\\\\}}  )  E ( {  R  } ) \\= E ( {  R  0  } ) \\+  \u2211  I \u03b1  \u2202 E ( {  R  0  } )  \u2202  R  I \u03b1  (  R  I \u03b1  \u2212  R  I \u03b1  0  ) \\+  \u2211  I \u03b1 J \u03b2  \u2202 E ( {  R  0  } )  \u2202  R  I \u03b1  \u2202  R  J \u03b2  (  R  I \u03b1  \u2212  R  I \u03b1  0  ) (  R  J \u03b2  \u2212  R  J \u03b2  0  ) \\+  O  (  R  3  ) , {\\\\displaystyle E(\\\\{\\\\mathbf {R} \\\\})\\=E(\\\\{\\\\mathbf {R} ^{0}\\\\})\\+\\\\sum \\_{I\\\\alpha }{\\\\frac {\\\\partial E(\\\\{\\\\mathbf {R^{0}} \\\\})}{\\\\partial R\\_{I\\\\alpha }}}(R\\_{I\\\\alpha }\\-R\\_{I\\\\alpha }^{0})\\+\\\\sum \\_{I\\\\alpha J\\\\beta }{\\\\frac {\\\\partial E(\\\\{\\\\mathbf {R} ^{0}\\\\})}{\\\\partial R\\_{I\\\\alpha }\\\\partial R\\_{J\\\\beta }}}(R\\_{I\\\\alpha }\\-R\\_{I\\\\alpha }^{0})(R\\_{J\\\\beta }\\-R\\_{J\\\\beta }^{0})\\+{\\\\mathcal {O}}(\\\\mathbf {R} ^{3}),} where   {  R  } {\\\\displaystyle \\\\{\\\\mathbf {R} \\\\}}  the positions of the nuclei.The first derivative of the total energy with respect to the nuclei corresponds to the forces  F  I \u03b1  ( {  R  0  } ) \\= \u2212  \u2202 E ( {  R  } )  \u2202  R  I \u03b1  \\|  R  \\=  R  0 {\\\\displaystyle F\\_{I\\\\alpha }(\\\\{\\\\mathbf {R} ^{0}\\\\})\\=\\-\\\\left.{\\\\frac {\\\\partial E(\\\\{\\\\mathbf {R} \\\\})}{\\\\partial R\\_{I\\\\alpha }}}\\\\right\\|\\_{\\\\mathbf {R} \\=\\\\mathbf {R^{0}} }}  ,and the second derivative to the second\\-order force\\-constants  \u03a6  I \u03b1 J \u03b2  ( {  R  0  } ) \\=  \u2202 E ( {  R  } )  \u2202  R  I \u03b1  \u2202  R  J \u03b2  \\|  R  \\=  R  0  \\= \u2212  \u2202  F  I \u03b1  ( {  R  } )  \u2202  R  J \u03b2  \\|  R  \\=  R  0  . {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }(\\\\{\\\\mathbf {R} ^{0}\\\\})\\=\\\\left.{\\\\frac {\\\\partial E(\\\\{\\\\mathbf {R} \\\\})}{\\\\partial R\\_{I\\\\alpha }\\\\partial R\\_{J\\\\beta }}}\\\\right\\|\\_{\\\\mathbf {R} \\=\\\\mathbf {R^{0}} }\\=\\-\\\\left.{\\\\frac {\\\\partial F\\_{I\\\\alpha }(\\\\{\\\\mathbf {R} \\\\})}{\\\\partial R\\_{J\\\\beta }}}\\\\right\\|\\_{\\\\mathbf {R} \\=\\\\mathbf {R^{0}} }.} Changing variables in the Taylor expansion of the total energy with   u  I \u03b1  \\=  R  I \u03b1  \u2212  R  I \u03b1  0 {\\\\displaystyle u\\_{I\\\\alpha }\\=R\\_{I\\\\alpha }\\-R\\_{I\\\\alpha }^{0}}  that corresponds to the displacement of the atoms with respect to their equilibrium position   R  I \u03b1  0 {\\\\displaystyle R\\_{I\\\\alpha }^{0}}  leads to  E ( {  R  } ) \\= E ( {  R  0  } ) \\+  \u2211  I \u03b1  \u2212  F  I \u03b1  ( {  R  0  } )  u  I \u03b1  \\+  \u2211  I \u03b1 J \u03b2  \u03a6  I \u03b1 J \u03b2  ( {  R  0  } )  u  I \u03b1  u  J \u03b2  \\+  O  (  R  3  ) {\\\\displaystyle E(\\\\{\\\\mathbf {R} \\\\})\\=E(\\\\{\\\\mathbf {R} ^{0}\\\\})\\+\\\\sum \\_{I\\\\alpha }\\-F\\_{I\\\\alpha }(\\\\{\\\\mathbf {R} ^{0}\\\\})u\\_{I\\\\alpha }\\+\\\\sum \\_{I\\\\alpha J\\\\beta }\\\\Phi \\_{I\\\\alpha J\\\\beta }(\\\\{\\\\mathbf {R} ^{0}\\\\})u\\_{I\\\\alpha }u\\_{J\\\\beta }\\+{\\\\mathcal {O}}(\\\\mathbf {R} ^{3})} Dynamical matrix and phonon modes--------------------------------- If we take the system to be in equilibrium, the forces on the atoms are zero and then the Hamiltonian of the system is  H \\=  1 2  \u2211  I \u03b1  M  I  u \u02d9  I \u03b1  2  \\+  1 2  \u2211  I \u03b1 J \u03b2  \u03a6  I \u03b1 J \u03b2  u  I \u03b1  u  J \u03b2  , {\\\\displaystyle H\\={\\\\frac {1}{2}}\\\\sum \\_{I\\\\alpha }M\\_{I}{\\\\dot {u}}\\_{I\\\\alpha }^{2}\\+{\\\\frac {1}{2}}\\\\sum \\_{I\\\\alpha J\\\\beta }\\\\Phi \\_{I\\\\alpha J\\\\beta }u\\_{I\\\\alpha }u\\_{J\\\\beta },} with   M  I {\\\\displaystyle M\\_{I}}  the mass of the   I {\\\\displaystyle I} \\-th nucleus.The equation of motion is then given by  M  I  u \u00a8  I \u03b1  \\= \u2212  \u03a6  I \u03b1 J \u03b2  u  J \u03b2  . {\\\\displaystyle M\\_{I}{\\\\ddot {u}}\\_{I\\\\alpha }\\=\\-\\\\Phi \\_{I\\\\alpha J\\\\beta }u\\_{J\\\\beta }.} We then look for solutions in the form of plane waves traveling parallel to the wave vector   q {\\\\displaystyle \\\\mathbf {q} } , i.e.  u  I \u03b1 , \u03bd  (  q  , t ) \\=  1 2  1  M  I  {  A  \u03bd  (  q  )  \u03b5  I \u03b1 , \u03bd  (  q  )  e  i \\[  q  \u22c5  R  I  \u2212  \u03c9  \u03bd  (  q  ) t ]  \\+  A  \u03bd \u2217  (  q  )  \u03b5  I \u03b1 , \u03bd  \u2217  (  q  )  e  \u2212 i \\[  q  \u22c5  R  I  \u2212  \u03c9  \u03bd  (  q  ) t ]  } {\\\\displaystyle \\\\mathbf {u} \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} ,t)\\={\\\\frac {1}{2}}{\\\\frac {1}{\\\\sqrt {M\\_{I}}}}\\\\left\\\\{A^{\\\u }(\\\\mathbf {q} )\\\\varepsilon \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} )e^{i\\[\\\\mathbf {q} \\\\cdot \\\\mathbf {\\\\mathbf {R} } \\_{I}\\-\\\\omega \\_{\\\u }(\\\\mathbf {q} )t]}\\+A^{\\\u \\*}(\\\\mathbf {q} )\\\\varepsilon \\_{I\\\\alpha ,\\\u }^{\\*}(\\\\mathbf {q} )e^{\\-i\\[\\\\mathbf {q} \\\\cdot \\\\mathbf {\\\\mathbf {R} } \\_{I}\\-\\\\omega \\_{\\\u }(\\\\mathbf {q} )t]}\\\\right\\\\}} where   \u03b5  I \u03b1 , \u03bd  (  q  ) {\\\\displaystyle \\\\varepsilon \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} )}  are the phonon mode eigenvectors and  A  \u03bd  (  q  ) {\\\\displaystyle A^{\\\u }(\\\\mathbf {q} )}  the amplitudes.Replacing it in the equation of motion we obtain the following eigenvalue problem  \u2211  J \u03b2  D  I \u03b1 J \u03b2  (  q  )  \u03b5  J \u03b2 , \u03bd  (  q  ) \\=  \u03c9  \u03bd  (  q  )  2  \u03b5  I \u03b1 , \u03bd  (  q  ) {\\\\displaystyle \\\\sum \\_{J\\\\beta }D\\_{I\\\\alpha J\\\\beta }(\\\\mathbf {q} )\\\\varepsilon \\_{J\\\\beta ,\\\u }(\\\\mathbf {q} )\\=\\\\omega \\_{\\\u }(\\\\mathbf {q} )^{2}\\\\varepsilon \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} )} with  D  I \u03b1 J \u03b2  (  q  ) \\=  1  M  I  M  J  \u03a6  I \u03b1 J \u03b2  e  i  q  \u22c5 (  R  J  \u2212  R  I  ) {\\\\displaystyle D\\_{I\\\\alpha J\\\\beta }(\\\\mathbf {q} )\\={\\\\frac {1}{\\\\sqrt {M\\_{I}M\\_{J}}}}\\\\Phi \\_{I\\\\alpha J\\\\beta }e^{i\\\\mathbf {q} \\\\cdot (\\\\mathbf {R} \\_{J}\\-\\\\mathbf {R} \\_{I})}} the dynamical matrix in the harmonic approximation.Now by solving the eigenvalue problem above we can obtain the phonon modes   \u03b5  I \u03b1 , \u03bd  (  q  ) {\\\\displaystyle \\\\varepsilon \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} )}  and frequencies  \u03c9  \u03bd  (  q  ) {\\\\displaystyle \\\\omega \\_{\\\u }(\\\\mathbf {q} )}  at any arbitrary **q** point. We can write the positions of the atoms in the supercell   R  I {\\\\displaystyle \\\\mathbf {R} \\_{I}}  in terms of integer multiples of the lattice vectors of the unit cell   l {\\\\displaystyle \\\\mathbf {l} }  such that   R  I  \u2192  R  l i  \\=  l  \\+  r  i {\\\\displaystyle \\\\mathbf {R} \\_{I}\\\\rightarrow \\\\mathbf {R} \\_{li}\\=\\\\mathbf {l} \\+\\\\mathbf {r} \\_{i}}  with   r  i {\\\\displaystyle \\\\mathbf {r} \\_{i}}  being the position of the ion in the unit cell. The force constants then become   \u03a6  I \u03b1 , J \u03b2  \u2192  \u03a6  l i \u03b1 ,  l \u2032  j \u03b2 {\\\\displaystyle \\\\Phi \\_{I\\\\alpha ,J\\\\beta }\\\\rightarrow \\\\Phi \\_{li\\\\alpha ,l'j\\\\beta }}  .The dynamical matrix is then given by  D  i \u03b1 j \u03b2  (  q  ) \\=  1  M  i  M  j  \u2211  l  \u03a6  l i \u03b1 , 0 j \u03b2  e  \u2212 i  q  \u22c5 (  l  \\+  r  i  \u2212  r  j  )  , {\\\\displaystyle D\\_{i\\\\alpha j\\\\beta }(\\\\mathbf {q} )\\={\\\\frac {1}{\\\\sqrt {M\\_{i}M\\_{j}}}}\\\\sum \\_{l}\\\\Phi \\_{li\\\\alpha ,0j\\\\beta }e^{\\-i\\\\mathbf {q} \\\\cdot (\\\\mathbf {l} \\+\\\\mathbf {r} \\_{i}\\-\\\\mathbf {r} \\_{j})},} with   l {\\\\displaystyle \\\\mathbf {l} }  chosen using the minimal image convention. This allows us to compute the phonons in the unit cell using the following equation  \u2211  j \u03b2  D  i \u03b1 j \u03b2  (  q  )  \u03b5  j \u03b2 , \u03bd  (  q  ) \\=  \u03c9  \u03bd  (  q  )  2  \u03b5  i \u03b1 , \u03bd  (  q  ) {\\\\displaystyle \\\\sum \\_{j\\\\beta }D\\_{i\\\\alpha j\\\\beta }(\\\\mathbf {q} )\\\\varepsilon \\_{j\\\\beta ,\\\u }(\\\\mathbf {q} )\\=\\\\omega \\_{\\\u }(\\\\mathbf {q} )^{2}\\\\varepsilon \\_{i\\\\alpha ,\\\u }(\\\\mathbf {q} )} with the dynamical matrix having dimension   3 n {\\\\displaystyle 3n}  with   n {\\\\displaystyle n}  the number of atoms in the unit cell. Long\\-range interatomic force constants (LO\\-TO splitting)---------------------------------------------------------- For semiconductors or insulators, the electronic screening of the ions is incomplete which leads to long\\-range (LR) interatomic force constants. To compute them explicitly would require infinitely large supercell calculations. For practical calculations, a finite size truncation is needed which leads to Gibbs oscillations in the phonon dispersion. Fortunately, this long\\-range behavior can be modeled by looking at the analytic form of the ion\\-ion contribution to the total energy. For that, follow the approach outlined in Ref. [\\[1]](#cite_note-gonze:prb:1997-1) and start by splitting the second\\-order force constants into short\\-range and long\\-range parts,  \u03a6  I \u03b1 J \u03b2  \\=  \u03a6  I \u03b1 J \u03b2  SR  \\+  \u03a6  I \u03b1 J \u03b2  LR {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }\\=\\\\Phi \\_{I\\\\alpha J\\\\beta }^{\\\\text{SR}}\\+\\\\Phi \\_{I\\\\alpha J\\\\beta }^{\\\\text{LR}}} with the long\\-range part being obtained from the analytic derivative of the long\\-range part of the ion\\-ion contribution to the total energy   E ion\\-ion {\\\\textstyle E\\_{\\\\text{ion\\-ion}}} . This contribution is typically evaluated using an Ewald sum technique in which we separate the ion\\-ion contribution to the total energy into two part, one is evaluated in real space and captures the short\\-range part and the other one in reciprocal space which captures the long\\-range part   E ion\\-ion  \\=  E ion\\-ion  SR  \\+  E ion\\-ion  LR {\\\\textstyle E\\_{\\\\text{ion\\-ion}}\\=E\\_{\\\\text{ion\\-ion}}^{\\\\text{SR}}\\+E\\_{\\\\text{ion\\-ion}}^{\\\\text{LR}}} . The separation is governed by an Ewald parameter   \u03bb {\\\\displaystyle \\\\lambda }  which represents a truncation length. This leads to the following analytical expression for the long\\-range interatomic force constants,  \u03a6  I \u03b1 J \u03b2  LR  \\=  4 \u03c0  e  2  \u03a9  0  \u2211  G  (  G  \u22c5  Z  I \u03b1  \u2217  ) (  G  \u22c5  Z  J \u03b2  \u2217  )  G  \u22c5  \u03f5  \u221e  \u22c5  G  e  i  G  \u22c5 (  R  J  \u2212  R  I  )  e  \u2212  G  \u22c5  \u03f5  \u221e  \u22c5  G  4  \u03bb  2 {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }^{\\\\text{LR}}\\={\\\\frac {4\\\\pi e^{2}}{\\\\Omega \\_{0}}}\\\\sum \\_{\\\\mathbf {G} }{\\\\frac {(\\\\mathbf {G} \\\\cdot \\\\mathbf {Z} \\_{I\\\\alpha }^{\\*})(\\\\mathbf {G} \\\\cdot \\\\mathbf {Z} \\_{J\\\\beta }^{\\*})}{\\\\mathbf {G} \\\\cdot \\\\epsilon ^{\\\\infty }\\\\cdot \\\\mathbf {G} }}e^{i\\\\mathbf {G} \\\\cdot (\\\\mathbf {R} \\_{J}\\-\\\\mathbf {R} \\_{I})}e^{\\\\frac {\\-\\\\mathbf {G} \\\\cdot \\\\epsilon ^{\\\\infty }\\\\cdot \\\\mathbf {G} }{4\\\\lambda ^{2}}}} with   \u03f5  \u221e {\\\\textstyle \\\\epsilon ^{\\\\infty }}  the ion\\-clamped dielectric tensor,   Z  I \u03b1  \u2217 {\\\\textstyle \\\\mathbf {Z} \\_{I\\\\alpha }^{\\*}}  the Born effective charges,   \u03b1 {\\\\textstyle \\\\alpha }  the Ewald parameter which is chosen such that the contributions from   e  \u2212  G  \u22c5  \u03f5  \u221e  \u22c5  G  4  \u03bb  2 {\\\\textstyle e^{\\\\frac {\\-\\\\mathbf {G} \\\\cdot \\\\epsilon ^{\\\\infty }\\\\cdot \\\\mathbf {G} }{4\\\\lambda ^{2}}}}  are negligible within a certain   G {\\\\textstyle \\\\mathbf {G} }  vector cutoff sphere PHON\\_G\\_CUTOFF. This also allows us to separate the dynamical matrix into short and long\\-range parts   D  I \u03b1 J \u03b2  (  q  ) \\=  D  I \u03b1 J \u03b2  SR  (  q  ) \\+  D  I \u03b1 J \u03b2  LR  (  q  ) , {\\\\displaystyle D\\_{I\\\\alpha J\\\\beta }(\\\\mathbf {q} )\\=D\\_{I\\\\alpha J\\\\beta }^{\\\\text{SR}}(\\\\mathbf {q} )\\+D\\_{I\\\\alpha J\\\\beta }^{\\\\text{LR}}(\\\\mathbf {q} ),} with the long\\-range part of the dynamical matrix   D  i \u03b1 j \u03b2  LR  (  q  ) \\=  4 \u03c0  e  2  \u03a9  0  \u2211  G  \u2211  l  \\[  (  G  \\+  q  ) \u22c5  Z  i \u03b1  \u2217  ]  \\[  (  G  \\+  q  ) \u22c5  Z  j \u03b2  \u2217  ]  (  G  \\+  q  ) \u22c5  \u03f5  \u221e  \u22c5 (  G  \\+  q  )  e  i (  q  \\+  G  ) \u22c5 (  l  \\+  r  i  \u2212  r  j  )  e  \u2212 (  G  \\+  q  ) \u22c5  \u03f5  \u221e  \u22c5 (  G  \\+  q  )  4  \u03bb  2  . {\\\\displaystyle D\\_{i\\\\alpha j\\\\beta }^{\\\\text{LR}}(\\\\mathbf {q} )\\={\\\\frac {4\\\\pi e^{2}}{\\\\Omega \\_{0}}}\\\\sum \\_{\\\\mathbf {G} }\\\\sum \\_{l}{\\\\frac {{\\\\big \\[}(\\\\mathbf {G} \\+\\\\mathbf {q} )\\\\cdot \\\\mathbf {Z} \\_{i\\\\alpha }^{\\*}{\\\\big ]}{\\\\big \\[}(\\\\mathbf {G} \\+\\\\mathbf {q} )\\\\cdot \\\\mathbf {Z} \\_{j\\\\beta }^{\\*}{\\\\big ]}}{(\\\\mathbf {G} \\+\\\\mathbf {q} )\\\\cdot \\\\epsilon ^{\\\\infty }\\\\cdot (\\\\mathbf {G} \\+\\\\mathbf {q} )}}e^{i(\\\\mathbf {q} \\+\\\\mathbf {G} )\\\\cdot (\\\\mathbf {l} \\+\\\\mathbf {r} \\_{i}\\-\\\\mathbf {r} \\_{j})}e^{\\\\frac {\\-(\\\\mathbf {G} \\+\\\\mathbf {q} )\\\\cdot \\\\epsilon ^{\\\\infty }\\\\cdot (\\\\mathbf {G} \\+\\\\mathbf {q} )}{4\\\\lambda ^{2}}}.} The equations above give us the practical method for computing the phonon dynamical matrices including the long\\-range force constants using a moderately sized supercell calculation with the steps:  * Compute   \u03a6  I \u03b1 J \u03b2 {\\\\textstyle \\\\Phi \\_{I\\\\alpha J\\\\beta }}  using a finite size supercell* Compute   \u03a6  I \u03b1 J \u03b2  SR  \\=  \u03a6  I \u03b1 J \u03b2  \u2212  \u03a6  I \u03b1 J \u03b2  LR {\\\\textstyle \\\\Phi \\_{I\\\\alpha J\\\\beta }^{\\\\text{SR}}\\=\\\\Phi \\_{I\\\\alpha J\\\\beta }\\-\\\\Phi \\_{I\\\\alpha J\\\\beta }^{\\\\text{LR}}} * Compute   D  i \u03b1 j \u03b2  SR  (  q  ) {\\\\textstyle D\\_{i\\\\alpha j\\\\beta }^{\\\\text{SR}}(\\\\mathbf {q} )}  using   \u03a6  I \u03b1 J \u03b2  SR {\\\\textstyle \\\\Phi \\_{I\\\\alpha J\\\\beta }^{\\\\text{SR}}} * Compute   D  i \u03b1 j \u03b2  LR  (  q  ) {\\\\displaystyle D\\_{i\\\\alpha j\\\\beta }^{\\\\text{LR}}(\\\\mathbf {q} )}  in the unit cell and add to   D  i \u03b1 j \u03b2  SR  (  q  ) {\\\\displaystyle D\\_{i\\\\alpha j\\\\beta }^{\\\\text{SR}}(\\\\mathbf {q} )} The treatment is done automatically inside VASP using the LPHON\\_POLAR\\=.TRUE. tag and specifying the dielectric tensor with PHON\\_DIELECTRIC and the Born effective charges with PHON\\_BORN\\_CHARGES. Finite differences------------------ The second\\-order force constants are computed using finite differences of the forces when each ion is displaced in each independent direction.This is done by creating systems with finite ionic displacement of atom   a {\\\\displaystyle a}  in direction   i {\\\\displaystyle i}  with magnitude   \u03bb {\\\\displaystyle \\\\lambda }  ,computing the orbitals   \u03c8  \u03bb  u  I \u03b1 {\\\\displaystyle \\\\psi \\_{\\\\lambda }^{u\\_{I\\\\alpha }}}  and the forces for these systems. The second\\-order force constants are then computed using  \u03a6  I \u03b1 J \u03b2  \\=  \u2202  2  E  \u2202  u  I \u03b1  \u2202  u  J \u03b2  \\= \u2212  \u2202  F  I \u03b1  \u2202  u  J \u03b2  \u2248 \u2212  (  F  \\[ {  \u03c8  \u03bb  u  J \u03b2  } ] \u2212  F  \\[ {  \u03c8  \u2212 \u03bb  u  J \u03b2  } ]  )  I \u03b1  2 \u03bb  ,  I \\= 1 , . . ,  N atoms  J \\= 1 , . . ,  N atoms  \u03b1 \\= x , y , z  \u03b2 \\= x , y , z {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }\\={\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{I\\\\alpha }\\\\partial u\\_{J\\\\beta }}}\\=\\-{\\\\frac {\\\\partial F\\_{I\\\\alpha }}{\\\\partial u\\_{J\\\\beta }}}\\\\approx \\-{\\\\frac {\\\\left(\\\\mathbf {F} \\[\\\\{\\\\psi \\_{\\\\lambda }^{u\\_{J\\\\beta }}\\\\}]\\-\\\\mathbf {F} \\[\\\\{\\\\psi \\_{\\-\\\\lambda }^{u\\_{J\\\\beta }}\\\\}]\\\\right)\\_{I\\\\alpha }}{2\\\\lambda }},\\\\quad {I\\=1,..,N\\_{\\\\text{atoms}}}\\\\quad {J\\=1,..,N\\_{\\\\text{atoms}}}\\\\quad {\\\\alpha \\=x,y,z}\\\\quad {\\\\beta \\=x,y,z}} where   u  I \u03b1 {\\\\displaystyle u\\_{I\\\\alpha }}  corresponds to the displacement of atom   I {\\\\displaystyle I}  in the cartesian direction   \u03b1 {\\\\displaystyle \\\\alpha }  and  F  \\[ \u03c8 ] {\\\\displaystyle \\\\mathbf {F} \\[\\\\psi ]}  retrieves the set of forces acting on all the ions given the   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  KS orbitals. Similarly, the internal strain tensor is   \u039e  I \u03b1 l  \\=  \u2202  2  E  \u2202  u  I \u03b1  \u2202  \u03b7  l  \\=  \u2202  \u03c3  l  \u2202  u  I \u03b1  \u2248  (  \u03c3  \\[ {  \u03c8  \u03bb  u  I \u03b1  } ] \u2212  \u03c3  \\[ {  \u03c8  \u2212 \u03bb  u  I \u03b1  } ]  )  l  2 \u03bb  ,  l \\= x x , y y , z z , x y , y z , z x  \u03b1 \\= x , y , z  J \\= 1 , . . ,  N atoms {\\\\displaystyle \\\\Xi \\_{I\\\\alpha l}\\={\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{I\\\\alpha }\\\\partial \\\\eta \\_{l}}}\\={\\\\frac {\\\\partial \\\\sigma \\_{l}}{\\\\partial u\\_{I\\\\alpha }}}\\\\approx {\\\\frac {\\\\left(\\\\mathbf {\\\\sigma } \\[\\\\{\\\\psi \\_{\\\\lambda }^{u\\_{I\\\\alpha }}\\\\}]\\-\\\\mathbf {\\\\sigma } \\[\\\\{\\\\psi \\_{\\-\\\\lambda }^{u\\_{I\\\\alpha }}\\\\}]\\\\right)\\_{l}}{2\\\\lambda }},\\\\qquad {l\\=xx,yy,zz,xy,yz,zx}\\\\quad {\\\\alpha \\=x,y,z}\\\\quad {J\\=1,..,N\\_{\\\\text{atoms}}}} where   \u03c3  \\[  \u03c8  n  k  ] {\\\\displaystyle \\\\mathbf {\\\\sigma } \\[\\\\psi \\_{n\\\\mathbf {k} }]}  computes the strain tensor given the   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  KS orbitals. Density functional perturbation theory-------------------------------------- **Density\\-functional\\-perturbation theory** provides a way to compute the second\\-order linear response to ionic displacement, strain, and electric fields. The equations are derived as follows. In density\\-functional theory, we solve the Kohn\\-Sham (KS) equations  H (  k  )  \\|  \u03c8  n  k  \u27e9 \\=  e  n  k  S (  k  )  \\|  \u03c8  n  k  \u27e9 , {\\\\displaystyle H(\\\\mathbf {k} )\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=e\\_{n\\\\mathbf {k} }S(\\\\mathbf {k} )\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle ,} where   H (  k  ) {\\\\displaystyle H(\\\\mathbf {k} )}  is the DFT Hamiltonian,  S (  k  ) {\\\\displaystyle S(\\\\mathbf {k} )}  is the overlap operator and,  \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  and  e  n  k {\\\\displaystyle e\\_{n\\\\mathbf {k} }}  are the KS eigenstates. Taking the derivative with respect to the ionic displacements   u  I \u03b1 {\\\\displaystyle u\\_{I\\\\alpha }} , we obtain the Sternheimer equations  \\[  H (  k  ) \u2212  e  n  k  S (  k  )  ]  \\|  \u2202  u  I \u03b1  \u03c8  n  k  \u27e9 \\= \u2212  \u2202  u  I \u03b1  \\[  H (  k  ) \u2212  e  n  k  S (  k  )  ]  \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\\\left\\[H(\\\\mathbf {k} )\\-e\\_{n\\\\mathbf {k} }S(\\\\mathbf {k} )\\\\right]\\|\\\\partial \\_{u\\_{I\\\\alpha }}\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=\\-\\\\partial \\_{u\\_{I\\\\alpha }}\\\\left\\[H(\\\\mathbf {k} )\\-e\\_{n\\\\mathbf {k} }S(\\\\mathbf {k} )\\\\right]\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } Once the derivative of the KS orbitals is computed, we can write  \\|  \u03c8  \u03bb  u  I \u03b1  \u27e9 \\=  \\|  \u03c8 \u27e9 \\+ \u03bb  \\|  \u2202  u  I \u03b1  \u03c8 \u27e9 . {\\\\displaystyle \\|\\\\psi \\_{\\\\lambda }^{u\\_{I\\\\alpha }}\\\\rangle \\=\\|\\\\psi \\\\rangle \\+\\\\lambda \\|\\\\partial \\_{u\\_{I\\\\alpha }}\\\\psi \\\\rangle .} where   \u03bb {\\\\displaystyle \\\\lambda }  is a small numeric value to use in the finite differences formulas below. The second\\-order response to ionic displacement, i.e., the force constants or Hessian matrixcan be computed using the same equation used in the case of the finite differences approach  \u03a6  I \u03b1 J \u03b2  \\=  \u2202  2  E  \u2202  u  I \u03b1  \u2202  u  J \u03b2  \\= \u2212  \u2202  F  I \u03b1  \u2202  u  J \u03b2  \u2248 \u2212  (  F  \\[ {  \u03c8  \u03bb  u  J \u03b2  } ] \u2212  F  \\[ {  \u03c8  \u2212 \u03bb  u  J \u03b2  } ]  )  I \u03b1  2 \u03bb  ,  I \\= 1 , . . ,  N atoms  J \\= 1 , . . ,  N atoms  \u03b1 \\= x , y , z  \u03b2 \\= x , y , z {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }\\={\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{I\\\\alpha }\\\\partial u\\_{J\\\\beta }}}\\=\\-{\\\\frac {\\\\partial F\\_{I\\\\alpha }}{\\\\partial u\\_{J\\\\beta }}}\\\\approx \\-{\\\\frac {\\\\left(\\\\mathbf {F} \\[\\\\{\\\\psi \\_{\\\\lambda }^{u\\_{J\\\\beta }}\\\\}]\\-\\\\mathbf {F} \\[\\\\{\\\\psi \\_{\\-\\\\lambda }^{u\\_{J\\\\beta }}\\\\}]\\\\right)\\_{I\\\\alpha }}{2\\\\lambda }},\\\\quad {I\\=1,..,N\\_{\\\\text{atoms}}}\\\\quad {J\\=1,..,N\\_{\\\\text{atoms}}}\\\\quad {\\\\alpha \\=x,y,z}\\\\quad {\\\\beta \\=x,y,z}} where again   F  \\[ { \u03c8 } ] {\\\\displaystyle \\\\mathbf {F} \\[\\\\{\\\\psi \\\\}]}  yields the forces for a given set of   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  KS orbitals. Similarly, the internal strain tensor is computed using  \u039e  I \u03b1 l  \\=  \u2202  2  E  \u2202  u  I \u03b1  \u2202  \u03b7  l  \\=  \u2202  \u03c3  l  \u2202  u  I \u03b1  \u2248  (  \u03c3  \\[ {  \u03c8  \u03bb  u  I \u03b1  } ] \u2212  \u03c3  \\[ {  \u03c8  \u2212 \u03bb  u  I \u03b1  } ]  )  l  2 \u03bb  ,  l \\= x x , y y , z z , x y , y z , z x  \u03b1 \\= x , y , z  J \\= 1 , . . ,  N atoms {\\\\displaystyle \\\\Xi \\_{I\\\\alpha l}\\={\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{I\\\\alpha }\\\\partial \\\\eta \\_{l}}}\\={\\\\frac {\\\\partial \\\\sigma \\_{l}}{\\\\partial u\\_{I\\\\alpha }}}\\\\approx {\\\\frac {\\\\left(\\\\mathbf {\\\\sigma } \\[\\\\{\\\\psi \\_{\\\\lambda }^{u\\_{I\\\\alpha }}\\\\}]\\-\\\\mathbf {\\\\sigma } \\[\\\\{\\\\psi \\_{\\-\\\\lambda }^{u\\_{I\\\\alpha }}\\\\}]\\\\right)\\_{l}}{2\\\\lambda }},\\\\qquad {l\\=xx,yy,zz,xy,yz,zx}\\\\quad {\\\\alpha \\=x,y,z}\\\\quad {J\\=1,..,N\\_{\\\\text{atoms}}}} where   \u03c3  \\[  \u03c8  n  k  ] {\\\\displaystyle \\\\mathbf {\\\\sigma } \\[\\\\psi \\_{n\\\\mathbf {k} }]}  computes the strain tensor given the   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }}  KS orbitals.The Born effective charges are then computed using Eq. (42\\) of Ref. [\\[1]](#cite_note-gonze:prb:1997-1).  Z  I \u03b1 \u03b3  \u2217  \\= 2  \u03a9  0  ( 2 \u03c0  )  3  \u222b  BZ  \u2211  n  \u27e8  \u2202  u  I \u03b1  \u03c8  n  k  \\|  (  \u03b2 \u2192  n  k  )  \u03b3  \u27e9 d  k {\\\\displaystyle Z\\_{I\\\\alpha \\\\gamma }^{\\*}\\=2{\\\\frac {\\\\Omega \\_{0}}{(2\\\\pi )^{3}}}\\\\int \\_{\\\\text{BZ}}\\\\sum \\_{n}\\\\langle \\\\partial \\_{u\\_{I\\\\alpha }}\\\\psi \\_{n\\\\mathbf {k} }\\|({\\\\vec {\\\\beta }}\\_{n\\\\mathbf {k} })\\_{\\\\gamma }\\\\rangle d\\\\mathbf {k} } where   I {\\\\displaystyle I}  is the atom index,   \u03b1 {\\\\displaystyle \\\\alpha }  the direction of the displacement of the atom,   \u03b3 {\\\\displaystyle \\\\gamma }  the polarization direction,  and  \\|  \u03b2 \u2192  n  k  \u27e9 {\\\\displaystyle \\|{\\\\vec {\\\\beta }}\\_{n\\\\mathbf {k} }\\\\rangle }  is the polarization vector defined in Eq. (30\\) in Ref. [\\[2]](#cite_note-gajdos:prb:2006-2).The results should be equivalent to the ones obtained using LCALCEPS and LEPSILON. Related tags and sections------------------------- IBRION,Phonons from finite differences,Phonons from density\\-functional\\-perturbation theory"}
{"file_name": "INCAR_tag.md", "content": "The INCAR file is the central input file. It contains **INCAR tags** that specify the parameters, algorithms and settings for the VASP calculation.  Bellow, all **INCAR tags** are listed: Pages in category \"INCAR tag\"----------------------------- The following 200 pages are in this category, out of 461 total. (previous page) (next page)### A * ADDGRID* AEXX* AGGAC* AGGAX* ALDAC* ALDAX* ALGO* ALPHA VDW* AMGGAC* AMGGAX* AMIN* AMIX* AMIX MAG* ANDERSEN PROB* ANTIRES* APACO### B * BANDGAP* BEXT* BMIX* BMIX MAG* BPARAM* BSEELECTRON* BSEHOLE* BSEPREC### C * CH LSPEC* CH NEDOS* CH SIGMA* CLL* CLN* CLNT* CLZ* CMBJ* CMBJA* CMBJB* CMBJE* CPARAM* CSHIFT* CUTOFF MU* CUTOFF SIGMA* CUTOFF TYPE### D * DEPER* DIMER DIST* DIPOL* DQ### E * EBREAK* EDIFF* EDIFFG* EFERMI* EFIELD* EFIELD PEAD* Construction:EFOR* EINT* EMAX* EMIN* ENAUG* ENCUT* ENCUTFOCK* ENCUTGW* ENCUTGWSOFT* ENINI* EPSILON* ESTOP* EVENONLY* EVENONLYGW### F * FERDO* FERWE* FINDIFF* FOCKCORR### G * GAMMA VDW* GGA* GGA COMPAT### H * HFALPHA* HFLMAX* HFRCUT* HFSCREEN* HILLS BIN* HILLS H* HILLS W* HITOLER### I * I CONSTRAINED M* IALGO* IALL IN ONE* IBAND* IBRION* ICHARG* ICHIBARE* ICORELEVEL* IDIPOL* IEPSILON* IGPAR* IMAGES* IMIX* INCREM* INIMIX* INIWAV* IPEAD* IRC DELTA0* IRC DIRECTION* IRC MAXSTEP* IRC MINSTEP* IRC STOP* IRC VNORM0* ISIF* ISMEAR* ISPIN* ISTART* ISYM* IVDW* IVDW NL* IWAVPR### K * KBLOCK* KGAMMA* KPAR* KPOINT BSE* KPOINTS OPT NKBATCH* KPUSE* KSPACING### L * LADDER* LAECHG* LALL IN ONE* LAMBDA* LANGEVIN GAMMA* LANGEVIN GAMMA L* LASPH* LASYNC* LATTICE CONSTRAINTS* LBERRY* LBLUEOUT* LBONE* LCALCEPS* LCALCPOL* LCHARG* LCHARGH5* LCHIMAG* LCORR* LDAU* LDAUJ* LDAUL* LDAUPRINT* LDAUTYPE* LDAUU* LDIAG* LDIPOL* LDISENTANGLED* LEFG* LELF* LEPSILON* LFINITE TEMPERATURE* LFOCKACE* LFOCKAEDFT* LFXC* LH5* LHARTREE* LHFCALC* LHYPERFINE* LIBMBD ALPHA* LIBMBD C6AU* LIBMBD K GRID* LIBMBD K GRID SHIFT* LIBMBD MBD A* LIBMBD MBD BETA* LIBMBD METHOD* LIBMBD N OMEGA GRID* LIBMBD PARALLEL MODE* LIBMBD R0AU* LIBMBD TS D* LIBMBD TS SR* LIBMBD VDW PARAMS KIND* LIBMBD XC* LIBXC1* LIBXC1 Pn* LIBXC2* LIBXC2 Pn* LKPOINTS OPT* LKPOINTS WAN* LKPROJ* LLRAUG* LMAXFOCK* LMAXFOCKAE* LMAXMIX* LMAXPAW* LMAXTAU* LMIXTAU* LMODELHF* LMONO* LMP2LT* LNABLA* LNMR SYM RED* LNONCOLLINEAR* LOCPROJ* LOPTICS* LORBIT* LORBMOM* LPARD* Construction:LPARDH5* LPEAD* LPHON DISPERSION* LPHON POLAR* LPHON READ FORCE CONSTANTS* LPLANE(previous page) (next page)"}
{"file_name": "Pseudopotentials.md", "content": "[](File_Sketch_Pseudopotentials.html \"Sketch of a pseudopotential and pseudowavefunction\") Sketch of a pseudopotential and pseudowavefunction **Pseudopotentials**, or effective potentials, are well\\-behaved potentials that replace the diverging ionic potentials. As a result, the pseudopotential approach significantly speeds up electronic structure calculations and makes the simulation of a wider range of materials feasible.  In a nutshell: * The pseudopotential and associated information required for a calculation must be present in a POTCAR file. * Simple instructions to set up a POTCAR file with the correct format: Preparing a POTCAR. * Recommendations on selecting potentials: Choosing pseudopotentials. * Overview of all versions and nomenclature: Available pseudopotentials Theory------ VASP employs the projector\\-augmented\\-wave (PAW) method that uses a plane\\-wave basis. A plane\\-wave basis is most convenient for periodic systems, however without the help of **pseudopotentials** the description of oscillations near the nuclei (nodal features) would necessitate an excessively high number of plane waves. The PAW method introduces a mixed basis where the Kohn\\-Sham (KS) orbitals are decomposed in three contributions: The pseudo orbitals, pseudo\\-onsite orbitals and all\\-electron onsite orbitals. The PAW potentials and resulting pseudo orbitals are identical to the true ionic potentials and KS orbitals outside a specific radius, as illustrated in the figure. These pseudo orbitals contain no nodal features and are, thus, given in a plane\\-wave basis. Inside the PAW spheres the nodal features are reintroduced on a radial logarithmic grid by subtracting the pseudo\\-onsite orbitals and adding the all\\-electron onsite orbitals. An additional approximation taken alongside the pseudopotential method is the *frozen\\-core approximation*. Here, the electrons associated with an ion are separated into valence electrons (ZVAL) that are assumed to take part in the physical/chemical property of interest and core electrons that are included as screening of the ionic potential. The separation into valence and core states depends on the property of interest and chemical bonds that occur for a specific material. For a specific atom type, VASP has a range of available pseudopotentials that vary in terms of core radius, the number of valence electrons, their ability to describe excited states, etc. The plane\\-wave coefficients of the pseudo orbitals are associated with reciprocal vectors   G {\\\\displaystyle \\\\mathbf {G} }  in Fourier space. The number of Fourier components determines the computational cost and can be controlled by the cutoff energy (ENCUT). The appropriate value depends on the pseudopotential and other factors. A potential is considered *soft* when few Fourier components are sufficient for an accurate representation, and *hard* otherwise. It is advised to perform a convergence study on ENCUT with respect to the quantity of interest. Subcategories------------- This category has the following 2 subcategories, out of 2 total. ### P * POTCAR tag* Projector\\-augmented\\-wave method Pages in category \"Pseudopotentials\"------------------------------------ The following 4 pages are in this category, out of 4 total. ### A * Available pseudopotentials### C * Choosing pseudopotentials### P * POTCAR* Preparing a POTCAR"}
{"file_name": "NKREDZ.md", "content": "NKREDZ= \\[integer]   Default: **NKREDZ** \\= 1nDescription: NKREDZ specifies a reduction factor for the **q**\\-point grid representation of the exact exchange potential along reciprocal space direction **b**3.  --- One may restrict the sum over **q** in the Fock exchange potential (or one of its short range counterparts) to a subset, {**q****k**}, of the full (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-point set, {**k**}, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell,and *C*i is the integer grid reduction factor along reciprocal lattice direction**b**i. This leads to a reduction in the computational workload by a factor:  1  C  1  C  2  C  3 {\\\\displaystyle {\\\\frac {1}{C\\_{1}C\\_{2}C\\_{3}}}} In case one sets NKRED, the grid reduction factors will be uniformly set to *C*1\\=*C*2\\=*C*3\\=NKRED. If one wants to specify separate grid reduction factors for *C*1, *C*2, and *C*3 one should use *C*1\\=NKREDX, *C*2\\=NKREDY, and *C*3\\=NKREDZ, respectively.   | **Warning:** there are circumstances under which **NKRED** and **NKREDX**,**Y**,**Z** should not be used! || --- |"}
{"file_name": "STEP_SIZE.md", "content": "STEP\\_SIZE= \\[real]   Default: **STEP\\_SIZE** \\= 0\\.01nDescription: The flag STEP\\_SIZE defines the trial step size for the optimization step (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ) in the Improved Dimer Method.  ---"}
{"file_name": "RWIGS.md", "content": "RWIGS= \\[real array]   Default: **RWIGS** \\= \\-1nDescription: RWIGS specifies the Wigner\\-Seitz radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for each atom type.  --- * RWIGS *has* to be supplied for each atom type if LORBIT is set to \\<10\\. In this case, the *spd*\\- and site projected wave function character of each band is evaluated, and the local partial DOS (see sections PROCAR and DOSCAR) and local magnetic moments are calculated. * If LORBIT \\>\\= 10, RWIGS is ignored * RWIGS *must* be set in calculations with constraining the local magnetic moments (see I\\_CONSTRAINED\\_M) For **mono\\-atomic systems** RWIGS can be definedunambiguously. The sum of the volume of the spheres around each atom should bethe same as the total volume of the cell (assuming that you do not have avacuum region within your cell). This is in the spirit of atomic sphere calculations.VASP writes a line  ```Volume of Typ   1:     98.5\u00a0%  ``` to the OUTCAR file. You should use a RWIGS value which yields avolume of approximately 100%. For systems consisting of **more than one atom type**, there is no unambiguous way to define RWIGS andseveral choices are possible. In all cases, the sum ofthe volume of the spheres should be close to the totalvolume of the cell (i.e the sum of the values given by VASP should bearound 100%). * One possible choice is to set RWIGS such that the overlap between the spheres is minimized. * a more elaborate way is to apply a Bader\\-type charge analysis to estimate the radius of an atom in a specific compound. * in most cases, it is simplest to choose the radius of each sphere such that they are close to the covalent radius as tabulated in most periodic tables. This simple criterion can be used in most cases, and it relies at least on some \\`\\`physical intuition*.*   Please keep in mind that results are **qualitative** i.e. there is no unambiguous way to determine the location of an electron(and hence the local magnetic moments). With the current implementation, it is for instancehardly possible to determine charge transfer. What can be derived from the partial DOS is the typical character of a peak in a DOS.Quantitative results can be obtained only by careful comparison with a reference system (e.g. bulk versus surface)."}
{"file_name": "ML_ABNCAR.md", "content": "In context of the machine\\-learned force fields method this file serves as an output for the collected training data set. When running VASP with `ML_MODE = train, select` it is automatically written out whenever a learning step is performed. The file format is shared with the ML\\_AB input file, for further details please have a look at the ML\\_AB Wiki entry. An ML\\_ABN file can be reused as a starting point for continuation runs (`ML_MODE = train`) and local reference configuration re\\-selection runs (`ML_MODE = select`) simply by renaming (or copying) it to ML\\_AB.  ---"}
{"file_name": "Density_of_states.md", "content": "Pages in category \"Density of states\"------------------------------------- The following 7 pages are in this category, out of 7 total. ### E * EMAX* EMIN### F * FERDO* FERWE### I * ISMEAR### L * LORBIT### N * NEDOS"}
{"file_name": "LKPOINTS_WAN.md", "content": "LKPOINTS\\_WAN= .TRUE.\\| .FALSE.n| Default: **LKPOINTS\\_WAN** | \\= .TRUE. | if KPOINTS\\_WAN file is present. || --- | --- | --- | Description: LKPOINTS\\_WAN controlls whether VASP reads the KPOINTS\\_WAN file.  --- To avoid reading the KPOINTS\\_WAN file without removing it from the working directory, the LKPOINTS\\_WAN tag can be set to `.FALSE.` in the INCAR file."}
{"file_name": "GW_method.md", "content": "Theory------ The GW approximation goes hand in hand with the RPA, since the very same diagrammatic contributions are taken into account in the screened Coulomb interaction of a system often denoted as W. However, in contrast to the RPA/ACFDT, the GW method provides access to the spectral properties of the system by means of determining the energies of the quasi\\-particles of a system using a screened exchange\\-like contribution to the self\\-energy. The GW approximation is currently one of the most accurate many\\-body methods to calculate band\\-gaps. More information about the GW method can be found on the following page: GW approximation of Hedin's equations Practical guides---------------- While more recent versions of VASP (6\\.0 and newer) support GW calculations in one go, older versions require two steps. First, a groundstate DFT calculation is performed, followed by the actual GW step.  More detailed guides for the GW method are bound below. How to------ * Practical guide to GW calculations.* Practical guide to GW calculations for large systems.* Using the GW routines for the determination of frequency\\-dependent dielectric matrix: GW and dielectric matrix.  --- Pages in category \"GW\"---------------------- The following 39 pages are in this category, out of 39 total. ### A * ALGO### C * CSHIFT### E * ENCUTGW* ENCUTGWSOFT* EVENONLYGW### G * GW and dielectric matrix### I * IALL IN ONE### L * LALL IN ONE* LFINITE TEMPERATURE* LFOCKAEDFT* LMAXFOCKAE* LRPAFORCE* LSCK* LSELFENERGY* LSINGLES* LSPECTRAL* LSPECTRALGW### M * MAXMEM### N * NATURALO* NBANDS WAVE* NBANDSEXACT* NBANDSGW* NCSHMEM* NELMGW* NKRED* NMAXFOCKAE* NMAXFOCKAE and LMAXFOCKAE* NOMEGA* NOMEGA DUMP* NOMEGAPAR* NOMEGAR* NTAUPAR### O * ODDONLY* ODDONLYGW* OMEGAMAX* OMEGAMIN* OMEGATL### P * Practical guide to GW calculations### S * SCISSOR"}
{"file_name": "WAVEDER.md", "content": "The file WAVEDER contains the derivative of the orbitals with respect to **k**, more precisely the matrix   \u27e8  \u03d5  n \u2032  k  \\|  S  \\|  \u2202  \u03d5  n k  \u2202  k  i  \u27e9 \\=  1  \u03f5  n k  \u2212  \u03f5  n \u2032  k  \u27e8  \u03d5  n \u2032  k  \\|  \u2202 (  H  \u2212  \u03f5  n k  S  )  \u2202  k  i  \\|  \u03d5  n k  \u27e9 . {\\\\displaystyle \\\\langle \\\\phi \\_{n'k}\\|{\\\\bf {S}}\\|{\\\\frac {\\\\partial \\\\phi \\_{nk}}{\\\\partial k\\_{i}}}\\\\rangle \\={\\\\frac {1}{\\\\epsilon \\_{nk}\\-\\\\epsilon \\_{n'k}}}\\\\langle \\\\phi \\_{n'k}\\|{\\\\frac {\\\\partial (\\\\mathbf {H} \\-\\\\epsilon \\_{nk}\\\\mathbf {S} )}{\\\\partial k\\_{i}}}\\|\\\\phi \\_{nk}\\\\rangle .} Related Tags and Sections------------------------- GW calculations  ---"}
{"file_name": "VDW_D.md", "content": "VDW\\_D= \\[real]n| Default: **VDW\\_D** | \\= 20 | for DFT\\-D2 and Tkatchenko\\-Scheffler || --- | --- | --- ||  | \\= 0\\.6966 | for DFT\\-ulg ||  | \\= 6 | for Many\\-body dispersion energy | Description: VDW\\_D defines the damping parameter   d {\\\\displaystyle d}  .  --- VDW\\_D sets the damping parameter   d {\\\\displaystyle d}  for the DFT\\-D2, DFT\\-ulg, Tkatchenko\\-Scheffler, and Many\\-body dispersion energy methods."}
{"file_name": "ML_SION2.md", "content": "ML\\_SION2= \\[real]   Default: **ML\\_SION2** \\= ML\\_SION1nDescription: This tag specifies the width   \u03c3 atom {\\\\displaystyle \\\\sigma \\_{\\\\text{atom}}}  of the Gaussian functions used for broadening the atomic distributions of the angular descriptor   \u03c1  i  ( 3 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}(r)}  within the machine learning force field method.  --- The angular descriptor is constructed from  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\= \u222c d  r  ^  d  s  ^  \u03b4  (  r  ^  \u22c5  s  ^  \u2212  c o s  \u03b8  )  \u2211  j \\= 1  N  a  \u2211  k \u2260 j  N  a  \u03c1  i k  (  r  r  ^  )  \u03c1  i j  (  s  s  ^  )  , where  \u03c1  i j  (  r  )  \\=  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\iint d{\\\\hat {\\\\mathbf {r} }}d{\\\\hat {\\\\mathbf {s} }}\\\\delta \\\\left({\\\\hat {\\\\mathbf {r} }}\\\\cdot {\\\\hat {\\\\mathbf {s} }}\\-\\\\mathrm {cos} \\\\theta \\\\right)\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{k\\\eq j}^{N\\_{a}}\\\\rho \\_{ik}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)\\\\rho \\_{ij}\\\\left(s{\\\\hat {\\\\mathbf {s} }}\\\\right),\\\\quad {\\\\text{where}}\\\\quad \\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right)\\=f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  and  g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is the following approximation of the delta function:  g  (  r  )  \\=  1  2  \u03c3  a t o m  \u03c0  e x p  (  \u2212  \\|  r  \\|  2  2  \u03c3  a t o m  2  )  . {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)\\={\\\\frac {1}{\\\\sqrt {2\\\\sigma \\_{\\\\mathrm {atom} }\\\\pi }}}\\\\mathrm {exp} \\\\left(\\-{\\\\frac {\\|\\\\mathbf {r} \\|^{2}}{2\\\\sigma \\_{\\\\mathrm {atom} }^{2}}}\\\\right).} The tag ML\\_SION2 sets the width   \u03c3 atom {\\\\displaystyle \\\\sigma \\_{\\\\text{atom}}}  of the above Gaussian function (see this section for more details). | **Tip:** Our test calculations indicate that ML\\_SION1 \\= ML\\_SION2 results in an optimal training performance. Furthermore, a value of 0\\.5 was found to be a good default value for both. However, the best choice is system\\-dependent, careful testing may improve machine learning results. || --- | The unit of ML\\_SION2 is   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ."}
{"file_name": "ML_LCOUPLE.md", "content": "ML\\_LCOUPLE= \\[logical]   Default: **ML\\_LCOUPLE** \\= .FALSE.nDescription: This tag specifies whether thermodynamic integration is activated in order to calculate the chemical potentials within the machine learning force field method.  --- In thermodynamic integration a coupling parameter   \u03bb {\\\\displaystyle \\\\lambda }  is introduced to the Hamiltonian to smoothly switch between a \"non\\-interacting\" reference state and a \"fully\\-interacting\" state. The change of the free energy along this path is written as  \u0394 \u03bc \\=  \u222b  0  1  \u27e8  d H ( \u03bb )  d \u03bb  \u27e9  \u03bb  d \u03bb . {\\\\displaystyle \\\\Delta \\\\mu \\=\\\\int \\\\limits \\_{0}^{1}\\\\langle {\\\\frac {dH(\\\\lambda )}{d\\\\lambda }}\\\\rangle \\_{\\\\lambda }d\\\\lambda .} Using machine learning force fields the Hamiltonian can be written as  H ( \u03bb ) \\=  \u2211  i \\= 1  N  a  \\|  p  i  \\|  2  2  m  i  \\+  \u2211  i \u2209 M  U  i  ( \u03bb ) \\+ \u03bb  \u2211  i \u2208 M  U  i  ( \u03bb ) \\+  \u2211  i  N  a  U  i ,  a t o m  . {\\\\displaystyle H(\\\\lambda )\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}{\\\\frac {\\|\\\\mathbf {p} \\_{i}\\|^{2}}{2m\\_{i}}}\\+\\\\sum \\\\limits \\_{i\\\otin M}U\\_{i}(\\\\lambda )\\+\\\\lambda \\\\sum \\\\limits \\_{i\\\\in M}U\\_{i}(\\\\lambda )\\+\\\\sum \\\\limits \\_{i}^{N\\_{a}}U\\_{i,\\\\mathbf {atom} }.} where   N  a {\\\\displaystyle N\\_{a}}  denotes the number of atoms and   U  i ,  a t o m {\\\\displaystyle U\\_{i,\\\\mathbf {atom} }}  is an atomic reference energy for a single non interacting atom. The first term in the equation describes the potential energy and the second and third term describe the potential energy of an atom   i {\\\\displaystyle i} . The index   M {\\\\displaystyle M}  denotes the atoms whose interaction is controlled by a coupling parameter. The interactions of the atoms are controlled by scaling the contributions to the atom density via the coupling parameter  \u03c1 (  r  , \u03bb ) \\=  \u2211  j \u2209 M  f  c u t  (  \\|  r  j  \u2212  r  i  \\|  )  g  \\[  r  \u2212  (  r  j  \u2212  r  i  )  ]  \\+ \u03bb  \u2211  j \u2208 M  f  c u t  (  \\|  r  j  \u2212  r  i  \\|  )  g  \\[  r  \u2212  (  r  j  \u2212  r  i  )  ]  . {\\\\displaystyle \\\\rho (\\\\mathbf {r} ,\\\\lambda )\\=\\\\sum \\\\limits \\_{j\\\otin M}f\\_{\\\\mathrm {cut} }\\\\left(\\\\left\\|\\\\mathbf {r} \\_{j}\\-\\\\mathbf {r} \\_{i}\\\\right\\|\\\\right)g\\\\left\\[\\\\mathbf {r} \\-\\\\left(\\\\mathbf {r} \\_{j}\\-\\\\mathbf {r} \\_{i}\\\\right)\\\\right]\\+\\\\lambda \\\\sum \\\\limits \\_{j\\\\in M}f\\_{\\\\mathrm {cut} }\\\\left(\\\\left\\|\\\\mathbf {r} \\_{j}\\-\\\\mathbf {r} \\_{i}\\\\right\\|\\\\right)g\\\\left\\[\\\\mathbf {r} \\-\\\\left(\\\\mathbf {r} \\_{j}\\-\\\\mathbf {r} \\_{i}\\\\right)\\\\right].}   Further details on the implementation can be found in reference [\\[1]](#cite_note-jinnouchiti:prb:2020-1). For thermodynamic integration the following parameters have to be set: * `ML_MODE = run`.* `ML_LCOUPLE = .TRUE.`.* The number of atoms for which a coupling parameter is introduced (  i \u2208 M {\\\\displaystyle i\\\\in M} ): ML\\_NATOM\\_COUPLED.* The list of atom indices that for that the coupling parameter is applied in the interaction: ML\\_ICOUPLE.* The strength of the coupling parameter   \u03bb {\\\\displaystyle \\\\lambda }  between 0 and 1: ML\\_RCOUPLE. The derivative of the hamiltonian with respect to the coupling constant   d H  /  d \u03bb {\\\\displaystyle dH/d\\\\lambda }  is written out at every MD step to the ML\\_LOGFILE. A sample output should look like this:  ```# DCOUPLE ################################# DCOUPLE This line shows the derivative of the Hamiltonian with respect to coupling constant (dH/dlambda).# DCOUPLE # DCOUPLE nstep .......... MD time step or input structure counter# DCOUPLE der_H_lambda ... dH/dlambda# DCOUPLE ################################# DCOUPLE           nstep     der_H_lambda# DCOUPLE               2                3# DCOUPLE ################################DCOUPLE                 1  -1.08332135E+01DCOUPLE                 2  -1.08132321E+01DCOUPLE                 3  -1.07631992E+01DCOUPLE                 4  -1.06786675E+01DCOUPLE                 5  -1.05493088E+01DCOUPLE                 6  -1.03561161E+01DCOUPLE                 7  -1.00762443E+01DCOUPLE                 8  -9.69961878E+00DCOUPLE                 9  -9.25531640E+00DCOUPLE                10  -8.82525354E+00 ...  ```"}
{"file_name": "Plotting_the_BSE_fatband_structure_of_Si.md", "content": "Overview> Dielectric properties of Si using BSE> Improving the dielectric function > Plotting the BSE fatband structure of Si> List of tutorials  Task---- Visualization of the BSE eigenvectors using fatbands. Input-----  ``` Si 5.43000.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.00 0.25 0.25 0.25   ``` ### INCAR * This is the INCAR file for the basic DFT calculation:  ```System\")  = Si PREC = Normal\u00a0; ENCUT = 250.0 ISMEAR = 0\u00a0; SIGMA = 0.01KPAR = 2 EDIFF = 1.E-8NBANDS = 16LOPTICS = .TRUE.  # needed for WAVEDER fileLPEAD = .TRUE.OMEGAMAX = 40  ``` ### KPOINTS The KPOINTS file will be automatically generated in this example.   Calculation----------- * In this example we will calculate and plot the first \"bright\" BSE eigenstates of silicon, also called fatbands[\\[1]](#cite_note-bokdam:scr:6-1). In this tutorial the modelBSE setup from the previous tutorial is used in combination with a 10x10x10 gamma centered k\\-point grid (Note: This calculation takes \\~ 50 min. on 16 cores, if you don't want to wait that long, a 4x4x4 grid requires only a minute.) In principle the standard BSE method can also be used instead. ### Step 1 DFT calculation We run a standard DFT calculation with the input files given above. ### Step 2 BSE calculation with fatbands * The INCAR file for the modelBSE calculation looks like the following:  ```System\")  = Si PREC = Normal\u00a0; ENCUT = 250.0 #ALGO = BSE ANTIRES = 0ISMEAR = 0\u00a0; SIGMA = 0.01ENCUTGW = 150 EDIFF = 1.E-8 # default 1.E-4NBANDS = 16   # only bands that are used are required, prepare the same set in a forgoing DFT runNBANDSO = 4NBANDSV = 8OMEGAMAX = 20 PRECFOCK = Normal ALGO = TDHFLMODELHF = .TRUE. #Turn model on HFSCREEN = 1.26  # Screening lenghtAEXX = 0.088    #Inverse of epsilon_infinitySCISSOR = 0.69  # Difference GW-DFT band gap NBSEEIG = 10 # number of BSE eigenvectors written out in BSEFATBAND  ``` * The important tag for fatband calculations is NBSEEIG. In this example this will write the 10 energetically lowest BSE eigenvectors to the output file BSEFATBAND.* After the (model)BSE calculation we first look into the vasprun.xml\") file to have a look at the BSE eigenvalues and the oscillator strengths (exact numbers can of course differ depending on the method you use and the density of your k\\-point grid):  ```<varray name=\"opticaltransitions\" > <v>      3.148           0.000 </v> <v>      3.148           0.000 </v> <v>      3.148           0.000 </v> <v>      3.149       25654.244 </v>  <v>      3.149       25660.601 </v> <v>      3.149       25665.652 </v> <v>      3.151           0.001 </v> <v>      3.151           0.001 </v> <v>      3.152         423.751 </v> <v>      3.310      216931.963 </v> <v>      3.310      216916.814 </v> <v>      3.310      216935.593 </v>  ``` The first number column shows the BSE eigenvalue and the second one the oscillator strength. We are going to plot the first \"bright\" state, that means in this case number 4\\. * We inspect the fourth band in the BSEFATBAND output file:  ```             28428                10     1BSE eigenvalue    3.14798542      IP-eigenvalue:    3.25790292  0.00000  0.00000  0.00000    -6.1302666     9.0994773       0.0000001     1     5     -0.000000+i*    -0.000000  0.00000  0.00000  0.00000     5.8415744     9.0994773       0.0876503     2     5      0.000076+i*     0.000043  0.00000  0.00000  0.00000     5.8415744     9.0994773     341.0850802     3     5      0.088630+i*    -0.329369  0.00000  0.00000  0.00000     5.8415744     9.0994773     543.1678695     4     5      0.361803+i*    -0.405130  0.00000  0.00000  0.00000    -6.1302666     9.0994773       0.0000004     1     6     -0.000000+i*     0.000000\u2026(28428-6 more lines till 2BSE eigenvalue \u2026)     4BSE eigenvalue    3.14855812      IP-eigenvalue:    3.25790292  0.00000  0.00000  0.00000    -6.1302666     9.0994773       0.0024165     1     5      0.000002+i*     0.000001  0.00000  0.00000  0.00000     5.8415744     9.0994773      31.4738813     2     5     -0.027821+i*    -0.014718  0.00000  0.00000  0.00000     5.8415744     9.0994773     187.8684774     3     5      0.049093+i*    -0.181341  0.00000  0.00000  0.00000     5.8415744     9.0994773     360.1697144     4     5      0.239775+i*    -0.268757  0.00000  0.00000  0.00000    -6.1302666     9.0994773       0.0289534     1     6      0.000019+i*    -0.000022 ...  ``` The description of the values is given as follows: 1. line: Number of e\\-h pairs in the BSE basis and value for NBSEEIG.2. line: BSE eigenvalue and minimum band gap before BSE.3. line: Columns 1\\-3 k\\-point coordinates, column 4 hole eigenvalue, column 5 electron eigenvalue, column 6 absolute value of coupling coefficient (radius of circles), column 7 hole orbitalnumber, column 8 electron orbitalnumber, column 9 real part of coupling coefficient, column 10 imaginary part of coupling coefficient. Columns 1\\-6 are used to plot the fatbands. * Plotting of data: 1. Choose the BSE eigenstate from the BSEFATBAND file that you want to plot.2. Filter out all e\\-h pairs that lie on the high symmetry k\\-lines along which you want to plot the fat bandstructure:  ```#!/bin/bashNBSE=1 #Select the BSE eigenvector of interest.BSIZE=$(head -n 1 BSEFATBAND|awk '{print $1}') # The BSE product basis size.i=`echo \"($BSIZE+1)*$NBSE+1\"|bc`head -n $i BSEFATBAND | tail -n $BSIZE > BSE-$NBSE.dat #Cut out the selected eigenstate.awk <BSE-$NBSE.dat  ' { if ($1==$2 && $3==$2) print sqrt($1*$1+$2*$2+$3*$3), $4, $5, $6 }' >bands-GL.datawk <BSE-$NBSE.dat  ' { if ($1==$3 && $2==0.0) print sqrt($1*$1+$2*$2+$3*$3), $4, $5, $6 }' >bands-GX.dat  ``` 1. Use a plotting program to plot the output in the following manner:  ```|k-point|   electron        hole          |A|           eigenvalue    eigenvalue    x          y1            y2         radius  ``` * The sample output for this tutorial should look like the following: [](File_Fig_BSE_example3_1.html) The fat band picture allows you to visually inspect which e\\-h pairs contribute the most to a particular BSE eigenstate. When k\\-point convergence is important, you can use it to truncate your e\\-h product basisset by choosing smarter NBANDSO/NBANDSV and/or OMEGAMAX values.Try NBANDSO\\=NBANDSV\\=2and check how much this effects the BSE results. Download--------  Si\\_BSEfatbands.tgz"}
{"file_name": "LNMR_SYM_RED.md", "content": "LNMR\\_SYM\\_RED= .TRUE. \\| .FALSE.   Default: **LNMR\\_SYM\\_RED** \\= .FALSE.nDescription: discard symmetry operations that are not consistent with the way *k*\\-space derivatives are calculated in the linear\\-response calculations of chemical shifts.  --- The star on which the *k*\\-space derivative is calculated is oriented along the cartesian directions in *k* space. If the symmetry operations in *k* space do not map this star onto itself, erroneous results can be obtained. To check for such operations, set LNMR\\_SYM\\_RED\\=.TRUE.. VASP then disregards such operations and the resulting first Brillouin zone (IBZ) is larger. In case of any doubt set LNMR\\_SYM\\_RED\\=.TRUE.  | **Warning:** It matters how the real\\-space\\-lattice vectors are set up relative to the cartesian coordinates in the POSCAR file. || --- |  It determines the orientation of the *k*\\-space star and, hence, can affect the efficiency via the number of *k*\\-points in the IBZ."}
{"file_name": "ML_IREG.md", "content": "ML\\_IREG= \\[integer]   Default: **ML\\_IREG** \\= 2nDescription: This tag specifies whether the regularization parameters are kept constant or not in the machine learning force field method.  --- The following cases are possible for this tag: * ML\\_IREG\\=1: The (initial) precision (ML\\_SIGV0) and noise (ML\\_SIGW0) parameters are kept constant.* ML\\_IREG\\=2: The parameters are optimized (default). For the optimization of the noise parameter   \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  see this section."}
{"file_name": "Optical_properties_and_dielectric_response_-_Tutorial.md", "content": "Overview> dielectric properties of SiC> dielectric properties of Si > Ionic contributions to the frequency dependent dielectric function of NaCl > List of tutorialsThe tutorial is made of the following parts: 1. dielectric properties of SiC2. dielectric properties of Si3. ionic contributions to the frequency dependent dielectric function of NaCl"}
{"file_name": "TMPCAR.md", "content": "TMPCAR is a binary file which is generated during dynamic simulations and relaxation jobs using full wave function predication. It contains the ionic positions and wave function of the previous two steps. Those are needed for the extrapolation of the wave functions. It is possible to use the TMPCAR file for MD continuation jobs by setting the flag ISTART\\=3 in the file INCAR file. Instead of the TMPCAR file VASP.4\\.X can also use an internal scratch file. This is faster and more efficient but requires of course more memory (see IWAVPR for more details).   ---"}
{"file_name": "BSEHOLE.md", "content": "BSEHOLE= \\[real array]nDescription: BSEHOLE sets the coordinates of the fixed hole of the exciton wavefunction  --- If BSEHOLE is set in a BSE calculation, VASP computes exciton wavefunction for the first NBSEEIG states.The coordinates are provided in direct (fractional) coordinates. When fixing the position of the particle, ensure that it is not fixed exactly at the center of an atom or coincides with a node of the wavefunction. To avoid that, shift the fixed coordinate slightly away from the center of the atom. Furthermore, the wavefunction of the fixed particle is taken at the nearest   G {\\\\displaystyle \\\\mathbf {G} } \\-vector, whose exact position is written in the OUTCAR file   ```hole position is fixed at:  ```  or  ```electron position is fixed at:  ``` Related tags and sections------------------------- BSEELECTRON, NBSEEIG, BSE calculations, Plotting exciton wavefunction  ---"}
{"file_name": "VDW_RADIUS.md", "content": "VDW\\_RADIUS= \\[real]   Default: **VDW\\_RADIUS** \\= 50nDescription: Defines the cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for the van der Waals pair interactions.   --- VDW\\_RADIUS sets the cutoff radius for the van der Waals pair interactions in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  for the DFT\\-D2, DFT\\-D3, DFT\\-ulg, DDsC, and Tkatchenko\\-Scheffler methods."}
{"file_name": "ISMEAR.md", "content": "ISMEAR= \\-5 \\| \\-4 \\| \\-3 \\| \\-2 \\| \\-1 \\| 0 \\| \\[integer]\\>0   Default: **ISMEAR** \\= 1nDescription: ISMEAR determines how the partial occupancies *f*n**k** are set for each orbital. SIGMA determines the width of the smearing in eV.  --- Tag options----------- * ISMEAR\\=*N* (*N*\\>0\\): method of Methfessel\\-Paxton order *N*. **Mind**: For the Methfessel\\-Paxton scheme the partial occupancies can be negative, as well as larger than 1\\. This can yield erroneous results for insulators.* ISMEAR\\=0: Gaussian smearing.* ISMEAR\\=\u22121: Fermi smearing.* ISMEAR\\=\u22122: partial occupancies are read in from the WAVECAR or INCAR file, and kept fixed throughout run. To set the occupancies, specify  ``` FERWE = f(1) f(2) f(3) ... f(NBANDS\u00d7Nk)  ``` and for spin\\-polarized calculations, additionally  ``` FERDO = f(1) f(2) f(3) ... f(NBANDS\u00d7Nk)  ``` in the INCAR file. The (partial) occupancies must be specified for all bands and k\\-points. The band\\-index runs fastest. The occupancies must be between 0 and 1 (for spin\\-polarized and non\\-spin\\-polarized calculations).The occupancies are even kept fixed during ionic relaxations or molecular dynamics simulations. However, keeping the orbital occupancies fixed, requires that the orbital order does not change during the self\\-consistency cycle or during the optimization of the orbitals. Imagine, for instance, that the eigenenergy of the 65th orbital moves below the orbital energy of the 64th orbital. Then the subspace diagonalization step will swap both orbitals, but the occupancies will remain as read from the INCAR file (this means that the originally unoccupied 65th orbital will move to the 64th place and it will hence become occupied). This problem can be often circumvented by specifying LDIAG\\=.FALSE. in the INCAR file.Note that the partial occupancies are also written to the OUTCAR file, but in this case they are multiplied by 2, i.e. they are between 0 and 2\\.  * ISMEAR\\=\u22123: perform a loop over smearing\\-parameters supplied in the INCAR file. In this case a tag  ``` SMEARINGS= ismear1 sigma1  ismear2 sigma2  ...  ``` must be present in the INCAR file, supplying different smearing parameters. IBRION has to be set to \\-1 and NSW to the number of supplied pairs ismeari/sigmai. The first loop is done using the tetrahedron method with Bl\u00f6chl corrections.* ISMEAR\\=\u22124: tetrahedron method (use a \u0393\\-centered **k**\\-mesh).* ISMEAR\\=\u22125: tetrahedron method with Bl\u00f6chl corrections (use a \u0393\\-centered **k**\\-mesh). | **Mind:** SIGMA is ignored for the tetrahedron method. || --- | How to set ISMEAR----------------- For the calculation of the *total energy* in bulk materials, we recommend the tetrahedron method with Bl\u00f6chl corrections (ISMEAR\\=\\-5\\). This method also gives a good account of the electronic density of states (DOS). The only drawback is that the method is not variational with respect to the partial occupancies. Therefore the calculated forces and the stress tensor can be wrong by up to 5 to 10% for metals. Only for semiconductors and insulators, the forces are correct because the partial occupancies do not vary and are either zero or one. For the calculation of forces and phonon frequencies in metals, we recommend the method of Methfessel\\-Paxton (ISMEAR\\>0\\). The method of Methfessel\\-Paxton (ISMEAR\\>0\\) also results in a very accurate description of the total energy, nevertheless, the width of the smearing (SIGMA) must be chosen carefully. Too large smearing parameters might result in an incorrect total energy, small smearing parameters require a dense mesh of **k** points. SIGMA should be as large as possible, while keeping the difference between the free energy and the total energy (i.e. the term entropy T\\*S) in the OUTCAR file negligible (1 meV/atom).  | **Warning:** Avoid using ISMEAR\\>0 for semiconductors and insulators, since this often leads to incorrect results (the occupancies of some states might be smaller than 0, or larger than 1\\). || --- |  Errors for, e.g., phonons frequencies can be substantial, i.e., exceeding 20\u00a0%. These errors are very hard to spot if you do not look carefully. For insulators, use ISMEAR\\=0 or ISMEAR\\=\\-5\\. The Gaussian\\-smearing method leads to very reasonable results in most cases. Within this method it is necessary to extrapolate from finite SIGMA results to SIGMA\\=0 results. You can find an extra line in the OUTCAR file: energy( SIGMA\u21920 ), giving the extrapolated results. Large SIGMA values lead to a similar error as the Methfessel\\-Paxton scheme, but in contrast to the Methfessel\\-Paxton scheme one can not determine how large the error due to the smearing is without systematically reducing SIGMA. In this respect, the method of Methfessel\\-Paxton is more convenient than the Gaussian smearing method. In addition, in the Gaussian smearing method forces and the stress tensor are consistent with the free energy and not the energy for SIGMA\u21920\\. Overall the Methfessel\\-Paxton method is somewhat easier to use for metallic systems. ### Summary * If you have no a priori knowledge of your system, for instance, if you do not know whether your system is an insulator, semiconductor or metal then always use Gaussian smearing ISMEAR\\=0 in combination with a small SIGMA\\=0\\.03\\-0\\.05\\. This is not the default in VASP yet, so to be on the safe side, you might want to include this setting in all your INCAR files.* For semiconductors or insulators, use the tetrahedron method (ISMEAR\\=\\-5\\), if the cell is too large (or if you use only a single or two **k** points) use ISMEAR\\=0 in combination with a small SIGMA\\=0\\.03\\-0\\.05\\. * For relaxations *in metals*, use ISMEAR\\=1 or ISMEAR\\=2 and an appropriate SIGMA value (the entropy term should be less than 1 meV per atom). For metals a reasonable value is often SIGMA\\= 0\\.2 (which is the default). **Mind again**: Avoid using ISMEAR\\>0 for semiconductors and insulators since it might cause severe problems.* For the calculations of the DOS and very accurate total\\-energy calculations (no relaxation in metals), use the tetrahedron method (ISMEAR\\=\\-5\\)."}
{"file_name": "Hellmann-Feynman_forces.md", "content": "Within the finite temperature, LDA forces are defined as the derivativeof the generalized *free energy*.This quantity can be evaluated easily. The functional   F {\\\\displaystyle F}  depends on thewavefunctions   \u03d5 {\\\\displaystyle \\\\phi } , the partial occupancies   f {\\\\displaystyle f} , and the positions of theions   R {\\\\displaystyle R} . In this section, we will shortly discuss the variationalproperties of the free energy and we will explain why we calculate theforces as a derivative of the free energy. The formulas given arevery symbolic and we do not take into account any constraints on theoccupation numbers or the wavefunctions. We denote the whole setof wavefunctions as   \u03d5 {\\\\displaystyle \\\\phi }  and the set of partial occupancies as   f {\\\\displaystyle f}  . The electronic groundstate is determined by the variational property of thefree energy i.e.  0 \\= \u03b4 F ( \u03d5 , f , R ) {\\\\displaystyle 0\\=\\\\delta F(\\\\phi ,f,R)} for arbitrary variations of   \u03d5 {\\\\displaystyle \\\\phi }  and  f {\\\\displaystyle f} . We can rewrite the right hand side ofthis equation as  \u2202 F  \u2202 \u03d5  \u03b4 \u03d5 \\+  \u2202 F  \u2202 f  \u03b4 f . {\\\\displaystyle {\\\\frac {\\\\partial F}{\\\\partial \\\\phi }}\\\\delta \\\\phi \\+{\\\\frac {\\\\partial F}{\\\\partial f}}\\\\delta f.} For arbitrary variations this quantity is zero only if   \u2202 F  \u2202 \u03d5  \\= 0 {\\\\displaystyle {\\\\frac {\\\\partial F}{\\\\partial \\\\phi }}\\=0}  and  \u2202 F  \u2202 f  \\= 0 {\\\\displaystyle {\\\\frac {\\\\partial F}{\\\\partial f}}\\=0} , leading to a system ofequations which determines   \u03d5 {\\\\displaystyle \\\\phi }  and  f {\\\\displaystyle f}  at the electronic groundstate.We define the forces as derivatives of the free energywith respect to the ionic positions i.e. force  \\=  d F ( \u03d5 , f , R )  d R  \\=  \u2202 F  \u2202 \u03d5  \u2202 \u03d5  \u2202 R  \\+  \u2202 F  \u2202 f  \u2202 f  \u2202 R  \\+  \u2202 F  \u2202 R  . {\\\\displaystyle {\\\\mbox{force}}\\={\\\\frac {dF(\\\\phi ,f,R)}{dR}}\\={\\\\frac {\\\\partial F}{\\\\partial \\\\phi }}{\\\\frac {\\\\partial \\\\phi }{\\\\partial R}}\\+{\\\\frac {\\\\partial F}{\\\\partial f}}{\\\\frac {\\\\partial f}{\\\\partial R}}\\+{\\\\frac {\\\\partial F}{\\\\partial R}}.} At the groundstate the first two terms are zero and we can write force  \\=  d F ( \u03d5 , f , R )  d R  \\=  \u2202 F  \u2202 R {\\\\displaystyle {\\\\mbox{force}}\\={\\\\frac {dF(\\\\phi ,f,R)}{dR}}\\={\\\\frac {\\\\partial F}{\\\\partial R}}} i.e. we can keep   \u03d5 {\\\\displaystyle \\\\phi }  and  f {\\\\displaystyle f}  fixed at their respective groundstatevalues and we have to calculate the partial derivative of the freeenergy with respect to the ionic positions only. This is relativelyeasy task. Previously we have mentioned that the only physical quantityis the energy for   \u03c3 \u2192 0 {\\\\displaystyle \\\\sigma \\\\to 0} . It is in principle possible to evaluatethe derivatives of   E ( \u03c3 \u2192 0 ) {\\\\displaystyle E(\\\\sigma \\\\to 0\\)}  with respect to the ioniccoordinates but this is not easy and requires additional computer time.  ---"}
{"file_name": "Ensemble_properties.md", "content": "In a molecular\\-dynamics calculation, VASP simulates a specific ensemble. In principle, any property of the system can be monitored, and then one can take the ensemble average of this property. For some observables, VASP provides convenient tags, articles, and files that help evaluate these so\\-called **ensemble properties**. Theory------ For any property   A {\\\\displaystyle {\\\\mathcal {A}}}  of the system, we can define the observable macroscopic property   A  o b s {\\\\displaystyle {\\\\mathcal {A}}\\_{\\\\mathrm {obs} }}  by taking the ensemble average:  A  o b s  \\=  \u27e8  A  (  p ( t ) , q ( t )  )  \u27e9  t i m e  \\=  lim  t  o b s  \u2192 \u221e  1  t  o b s  \u222b  0  t  o b s  A  (  p ( t ) , q ( t )  )  d  t . {\\\\displaystyle {\\\\mathcal {A}}\\_{\\\\mathrm {obs} }\\=\\\\left\\\\langle {\\\\mathcal {A}}\\\\left(p(t),q(t)\\\\right)\\\\right\\\\rangle \\_{\\\\mathrm {time} }\\=\\\\lim \\_{t\\_{\\\\mathrm {obs} }\\\\to \\\\infty }{\\\\frac {1}{t\\_{\\\\mathrm {obs} }}}\\\\int \\_{0}^{t\\_{\\\\mathrm {obs} }}\\\\,{\\\\mathcal {A}}\\\\left(p(t),q(t)\\\\right)\\\\,\\\\mathrm {d} t.} Here,   t  o b s {\\\\displaystyle t\\_{\\\\mathrm {obs} }}  corresponds to the simulation time,   p ( t ) {\\\\displaystyle p(t)}  and  q ( t ) {\\\\displaystyle q(t)}  are the canonical momenta and positions, and an average of   A  (  p ( t ) , q ( t )  ) {\\\\displaystyle {\\\\mathcal {A}}\\\\left(p(t),q(t)\\\\right)}  is taken over time   t {\\\\displaystyle t}  . How to------"}
{"file_name": "LPHON_POLAR.md", "content": "LPHON\\_POLAR= .TRUE. \\| .FALSE.n| Default: **LPHON\\_POLAR** | \\= .FALSE. |  || --- | --- | --- | Description: LPHON\\_POLAR includes dipole\\-dipole corrections in the computation of the phonon dispersion. For this mode, PHON\\_DIELECTRIC and PHON\\_BORN\\_CHARGES must also be set.  --- If the material is non\\-metallic and polar (i.e. two or more atoms in the unit cell carry nonzero Born effective charge tensors), a special treatment of the long\\-range dipole\\-dipole interaction is required to obtain a smooth phonon dispersion.This is activated by setting LPHON\\_POLAR\\=.TRUE. and supplying the static dielectric tensor (PHON\\_DIELECTRIC) and the Born\\-effective charges (PHON\\_BORN\\_CHARGES) which can be obtained in a separate VASP calculation using the LEPSILON or LCALCEPS tag. The dipole\\-dipole part of the interatomic force\\-constants is evaluated using an Ewald summation with the number of   G {\\\\displaystyle \\\\mathbf {G} }  vectors determined by the cutoff length (PHON\\_G\\_CUTOFF). In the case of metals, the dielectric function is infinite, for nonpolar semiconductors the Born effective charges are zero which in both cases means that the long\\-range interatomic force\\-constants are zero and this dipole\\-dipole correction does not need to be applied. | **Mind:** Only available as of VASP 6\\.3\\.2\\. || --- |"}
{"file_name": "Machine-learned_force_fields.md", "content": "**Machine\\-learned force fields** used in combination with ab\\-initio molecular dynamics (MD) allow capturing the underlying physics from first principles and still reach long simulation times relatively cheaply. Generally, an ab\\-initio MD step is computationally expensive due to the quantum\\-mechanical treatment of the electrons, e.g., within density\\-functional theory (DFT). In fully classical MD calculations, **force fields** are used to evaluate the force acting on each atom instead of DFT. These interatomic potentials are traditionally based on experimental observation and empirical inclusion of known forces, such as the van\\-der\\-Waals force, electrostatic charges, etc. Therefore, the quality of the force field depends on how well interactions in the specific system are known.  VASP offers **machine learning force fields on\\-the\\-fly** to overcome these two issues. Namely, the high computational cost required for ab\\-initio MD and the empirical knowledge necessary to construct a force field the traditional way. To learn more about on\\-the\\-fly machine learning read about the theory of on\\-the\\-fly machine learning force fields or about the  setup of a basic calculation! Also, check out the description on best practices on how to construct, test, and retrain force fields, as well as the basic tutorial that provides hands\\-on experience for silicon and this tutorial: Liquid Si \\- MLFF. Theory------ VASP uses a Bayesian\\-learning algorithm for on\\-the\\-fly machine learning. The total energy and forces are predicted based on the machine\\-learned force field at each time step of the MD simulation. If the Bayesian error estimate exceeds a certain threshold an ab\\-initio calculation is performed, where electrons are treated quantum mechanically. Subsequently, previously untrained atomic environments are identified and added to a set of so\\-called local reference configurations. This set serves as a comparison database for future force field predictions. With new information in the form of total energy and atomic forces obtained from the triggered ab\\-initio calculation the machine\\-learned force field is updated and the MD simulation continues. In this way the force field is iteratively improved in the course of the MD simulation. Ideally, it will reach such high prediction quality that no more ab\\-initio calculations are required. For details on the algorithm, check out the theory article about machine learning force fields.  How to------ All related INCAR tags and  input/output files begin with the prefix *ML\\_*.To learn about machine learning force fields, visit: * Machine learning force field calculations: Basics.* Best practices for machine\\-learned force fields include how to construct, test, and retrain force fields.* Basic tutorial that provides hands\\-on experience for silicon.* Liquid Si \\- MLFF. ### Input Depending on whether the calculation is training, retraining, or applying the force field (see ML\\_MODE), VASP may require the following input files in addition to the usual input files (INCAR, POSCAR, etc.): * ML\\_AB Ab\\-initio training data.* ML\\_FF Force\\-field parameters. ### Output The machine\\-learning\u2013force\\-field method generates the following output files: * ML\\_LOGFILE Main output file.* ML\\_ABN Generated ab\\-initio training data. It is used as ML\\_AB file to restart a calculation.* ML\\_REG Summary of regression results.* ML\\_HIS Summary of the histogram data.* ML\\_FFN Force\\-field parameters. It is used as ML\\_FF file to restart a calculation.* ML\\_EATOM Local atomic energies.* ML\\_HEAT Local heat flux. ### Hyperparameters Hyperparameters are user\\-defined parameters of the MLFF model that will not be optimized during training of the MLFF. For instance, cutoff radii (ML\\_RCUT1, ML\\_RCUT2), the normalization and weighting of ab\\-initio training data (ML\\_IWEIGHT, ML\\_WTOTEN, ML\\_WTIFOR, ML\\_WTSIF), threshold and the total number of descriptors in the sparsification (ML\\_EPS\\_LOW, ML\\_RDES\\_SPARSDES). We recommend optimizing these in cross\\-validation by means of systematically varying the parameters and refitting the force field (ML\\_MODE\\=refit). In principle, it is necessary to do that for all hyperparameters available in VASP to obtain the best MLFF model. In practice, usually the default values are a good guess. The default parameters of VASP were optimized on a selected set of bulk materials and on a molecular data base.  --- Pages in category \"Machine\\-learned force fields\"------------------------------------------------- The following 70 pages are in this category, out of 70 total. ### B * Best practices for machine\\-learned force fields### M * Machine learning force field calculations: Basics* Machine learning force field: Theory* ML AB* ML ABN* ML AFILT2* ML CDOUB* ML CSIG* ML CSLOPE* ML CTIFOR* ML CX* ML DESC TYPE* ML EATOM* ML EATOM REF* ML EPS LOW* ML EPS REG* ML FF* ML FFN* ML HEAT* ML HIS* ML IAFILT2* ML IALGO LINREG* ML ICOUPLE* ML ICRITERIA* ML IERR* ML IREG* ML ISCALE TOTEN* ML ISTART* ML IWEIGHT* ML LAFILT2* ML LBASIS DISCARD* ML LCOUPLE* ML LEATOM* ML LERR* ML LFAST* ML LHEAT* ML LMAX2* ML LMLFF* ML LOGFILE* ML LSPARSDES* ML LUSE NAMES* ML MB* ML MB MIN* ML MCONF* ML MCONF NEW* ML MHIS* ML MODE* ML MRB1* ML MRB2* ML NATOM COUPLED* ML NHYP* ML NMDINT* ML NRANK SPARSDES* ML OUTBLOCK* ML OUTPUT MODE* ML RCOUPLE* ML RCUT1* ML RCUT2* ML RDES SPARSDES* ML REG* ML SCLC CTIFOR* ML SIGV0* ML SIGW0* ML SION1* ML SION2* ML W1* ML WTIFOR* ML WTOTEN* ML WTSIF### S * Shared memory"}
{"file_name": "LFOCKACE.md", "content": "LFOCKACE= .TRUE. \\| .FALSE.   Default: **LFOCKACE** \\= .TRUE.n| Default: **LFOCKACE** | \\= .TRUE. | for VASP.6 || --- | --- | --- ||  | \\= N/A | for VASP.5\\.X and older | Description: LFOCKACE determines whether the Adaptively Compressed Exchange Operator is used.[\\[1]](#cite_note-linlin:jctc:2016-1) * N.B.:Available for CPU and OpenACC version of VASP.6 when compiled with \\-Dfock\\_dblbuf.  --- For LFOCKACE\\=.TRUE. the Cholesky decomposition   X \\= L  L  \u2020 {\\\\displaystyle X\\=LL^{\\\\dagger }}  of the Fock exchange matrix   X  i j  \\= \u27e8  \u03c8 \\~  i  \u2223  V \\~  X  \u2223  \u03c8 \\~  j  \u27e9 {\\\\displaystyle X\\_{ij}\\=\\\\langle {\\\\tilde {\\\\psi }}\\_{i}\\\\mid {\\\\tilde {V}}\\_{X}\\\\mid {\\\\tilde {\\\\psi }}\\_{j}\\\\rangle }  is calculated and the adaptively compressed exchange operator   V \\~  A C E  \\= \u2212  \u2211  i  \u2223  X \\~  i  \u27e9 \u27e8  X \\~  i  \u2223 {\\\\displaystyle {\\\\tilde {V}}\\_{ACE}\\=\\-\\\\sum \\_{i}\\\\mid {\\\\tilde {X}}\\_{i}\\\\rangle \\\\langle {\\\\tilde {X}}\\_{i}\\\\mid }  is used for the action of the Fock exchange on the pseudo orbitals. This method can be used for hybrid functionals in combination with the Davidson algorithm (ALGO\\=Normal) to save a factor of   \u2248 3 {\\\\displaystyle \\\\approx 3}  in computation time.  For LFOCKACE\\=.FALSE. the conventional orbital representation is used.  Note: it is good scientific practice to cite the original publication (Ref. [\\[1]](#cite_note-linlin:jctc:2016-1)) if you use this feature. The feature is used by default, if the Davidson algorithm (ALGO \\= Normal) is used; ACE is not used for ALGO \\= Damped or ALGO \\= All."}
{"file_name": "LUSENCCL.md", "content": "LUSENCCL= \\[logical]   Default: **LUSENCCL** \\= .TRUE.nDescription: LUSENCCL allows deactivating the NVIDIA Collective Communications Library (NCCL) during runtime when the code was compiled with the \\-DUSENCCL option."}
{"file_name": "LWRITE_MMN_AMN.md", "content": "LWRITE\\_MMN\\_AMN= .TRUE. \\| .FALSE.n| Default: **LWRITE\\_MMN\\_AMN** | \\= .TRUE. | if LWANNIER90\\=.TRUE. || --- | --- | --- ||  | \\= .FALSE. | otherwise | Description: LWRITE\\_MMN\\_AMN\\=.TRUE. tells the VASP2WANNIER90 interface to write the **wannier90\\.mmn** and **wannier90\\.amn** files.  --- When running WANNIER90 in library mode (LWANNIER90\\_RUN\\=.TRUE.), the **wannier90\\.mmn** and **wannier90\\.amn** files are not written. The information these files normally contain is passed on to wannier\\_run internally. If you want these files to be written anyway, for instance, to be able to run WANNIER90 standalone later on, set LWRITE\\_MMN\\_AMN\\=.TRUE. in the INCAR file."}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_Standard_MD.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- The main task of this example is to learn how to monitor distances on the example of a nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl. Input----- ### POSCAR  ```CH3Cl                                            1.00000000000000         12.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000   12.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000   12.0000000000000000 C H Cl   1   3   2cart         5.91331371  7.11364924  5.78037960         5.81982231  8.15982106  5.46969017         4.92222130  6.65954232  5.88978969         6.47810398  7.03808479  6.71586385         4.32824726  8.75151396  7.80743202         6.84157897  6.18713289  4.46842049  ``` * The starting POSCAR file for this example can be found under POSCAR.init. It will be needed for the script that runs the job (run.sh).* A sufficiently large cell is chosen to minimize the interactions between neighbouring cells and hence to simulate an isolated molecular reaction. ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=1000                                           # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # metaDynamics with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probability##############################################################################  ``` * Molecular dynamics are switched on by the tag IBRION\\=0\\.* The metadynamics tag MDALGO\\=11 is only used to monitor the two C\\-Cl distances defined in the ICONST file.* Simulations are carried out in the NVT ensemble at approximately room temperature (TEBEG\\=300\\) and the Andersen thermostat is used for the temperature control. The strength of the coupling is controlled by the collision probability ANDERSEN\\_PROB\\=0\\.10\\.* The accuracy of this calculation is kept low (PREC\\=Low and ALGO\\=VeryFast), which is completely sufficient for this tutorial. For more quantitative results this tags should be investigated (of course at the cost of higher computational demand).* A charged system (due to the \"incoming\" Cl\\-) is simulated, so the number of electrons is raised by one compared to the neutral system (NELECT\\=22\\). To compensate for the charge a positive homogeneous background charge is assumed.* Although very light atoms are present in the structure (hydrogen) a time step of 1 fs (POTIM\\=1\\) is safe to use. This can be achieved by setting the mass of hydrogen to that of tritium (look for the line \"POMASS \\= 3\\.016\" in the POTCAR file). This is unproblematic since the free energy is independent of the mass of atoms. ### ICONST For this example an ICONST file is used which looks like:  ```R 1 5 0R 1 6 0S 1 -1 7  ``` * First line: This line selects the interatomic distance (R) between the first (C) and the fifth atom (Cl) in the POSCAR file. The 0 at the fourth entry would usually specify that the distances are constrained but if the coordinates are used later for special coordinates the constraining is not applied (for further information see ICONST).* Second line: Same as the first line but interatomic distance between the first (C) and the sixth atom (Cl) in the POSCAR file is selected.* Third line: This line selects a linear combination (option S) of the first two coordinates where the second and fourth column specify the coefficients of the coordinates. The setting of 1 and \\-1 corresponds to the difference between both. The 7 at the fourth entry specifies that difference between these two distances is monitored but no constraints are applied. Calculation----------- A parameter that approximates the reaction coordinate, the difference between two C\\-Cl distances, will be monitored. Expected values for reactant:   \u2248 1  \u00c5 {\\\\displaystyle \\\\approx 1\\\\mathrm {\\\\AA} } , for product:    \u2212 1  \u00c5 {\\\\displaystyle \\~\\-1\\\\mathrm {\\\\AA} } , for transition state:   0  \u00c5 {\\\\displaystyle 0\\\\mathrm {\\\\AA} }  . ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD.For practical reasons, we split our (pressumably long) molecular dynamics calculation into shorter runs of lengths of 1000 fs (NSW\\=1000 and POTIM\\=1\\). At the end of each run the CONTCAR file is copied to the POSCAR so that the simulation continues in a seamless manner. All of this is done by the script *run* provided with this example:  ```#!/bin/bash runvasp=\"mpirun -np 8 executable_path/vasp_gam\" # make sure to always start with the same structurecp POSCAR.init POSCAR  i=1 while [ $i -le 50 ]  do  # start vasp  $runvasp   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` After the execution we should obtain 50 output files. Each contains a 1000 fs run totalling to a trajectory of 50 ps. It should be mentioned that this can take several hours on 8 cores so if the user has only limited time and resources available or is only interested to learn the execution of this example the number of runs (line \"\\[ $i \\-le 50 ]\") can be changed from 50 to a smaller value. Also the number of timesteps per run can be lowered (NSW). ### Time evolution of distance * The monitored value of the distance between the two Cl\\- ions defined in the ICONST file is written for each molecular dynamics run to the REPORT file written as \"mc \\= ...\". The time evolution function of this variable is monitored using the script timeEv.sh:  ```#!/bin/bash  if test -f \"timeEvol.dat\"; then   rm timeEvol.dat fi  i=1while [ $i -le 1000 ] do   if test -f REPORT.$i   then     grep mc REPORT.$i |awk '{print $3 }' >>timeEvol.dat fi   let i=i+1done  ``` To execute this script type:  ```bash timeEv.sh  ``` It creates a file \"timeEvol.dat\" holding the value for the collective variable at every molecular dynamics step.   * After that the task is to get a histogram (or probability distribution) of the data. The user should try to write a script for itself. Otherwise the script *probability\\_distribution\\_function.py* can be used:  ```#!/usr/bin/python import sysimport reimport math #setting grid for histogramxmin=0.0xmax=5.0nx=500dx=(xmax-xmin)/nxhistogram=[0.0 for j in range(0,nx)]readfile = open(\"timeEvol.dat\",\"r\")line=readfile.readline() z=0ymin=0.0ymax=0.0#loop over lines in file timeEvol.datwhile (line):  z=z+1  line.strip()  line=re.sub('^',' ',line)  y=line.split()  if (z==1):     ymin=float(y[0])     ymax=float(y[0])  #calculate min max value for normalization  if (ymin>float(y[0])):     ymin=float(y[0])  if (ymax<float(y[0])):     ymax=float(y[0])  #calculate index of argument  ix=int(float(y[0])/float(dx)+0.5)  #check for segmentation fault  if (ix>=0 and ix<nx):     histogram[ix]=histogram[ix]+1.0  line=readfile.readline()readfile.close#normalizing and printing histogramnorm=z*(abs(xmax-xmin))/nxfor ix in range(0,nx):   x=xmin+ix*dx   pair_cor=histogram[ix]/norm   print x, pair_cor  ``` To execute this script type:  ```python probability_distribution_function.py > histogram_600K.dat  ``` To plot the histogram the user should use his favourite program. Alternatively the histogram is plotted using gnuplot:  ```gnuplot -e \"set terminal jpeg; set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'histogram_600K.dat'\" > histogram_600K.jpg  ``` The obtained histogram should look like the following: [](File_Histogram_600K.html) * The user should also calculate the mean value and variance of the Cl\\-\\-Cl\\- distance. It is recommended to the user to try to write an own script/program doing that. Otherwise the script *average\\_and\\_standard\\_deviation.py* can be used:  ```#!/usr/bin/python import sysimport reimport math data=[]readfile = open(\"timeEvol.dat\",\"r\")line=readfile.readline() z=0mean=0.0standard_deviation=0.0#loop over lines in file timeEvol.datwhile (line):  z=z+1  line.strip()  line=re.sub('^',' ',line)  y=line.split()  #calculate mean  mean=mean+float(y[0])  #save data for later  data.append(float(y[0]))  line=readfile.readline()readfile.close#calculate meanmean=mean/z#calculate for y in data:   standard_deviation=standard_deviation+(y-mean)**2.0standard_deviation=(standard_deviation/z)**0.5print \"Mean\u00a0:\",meanprint \"Standard devation\u00a0:\",standard_deviation  ``` To execute this script type:  ```python average_and_standard_deviation.py  ``` The calculated mean value and standard deviation should be around 1\\.5986   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  and 0\\.3403   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . **Exercise: Did the Cl\\- ever visit the product's region during this MD?** ### Higher temperature \\- 1000 K After that we rerun the calculation at 1000 K and perform the same analysis steps as above. We should obtain a histogram at 1000 K that looks like the following: [](File_Histogram_1000K.html) The calculated mean value and standard deviation should be around 2\\.01023596   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  and 0\\.664687047095   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . **Exercise: Explain the difference at higher temperature!** Download--------  CH3Cl\\_standard\\_Molecular\\_Dynamics.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "Berry_phases_and_finite_electric_fields.md", "content": "Modern Theory of Polarization----------------------------- ### Berry phase expression for the macroscopic polarization Calculating the change in dipole moment per unit cell under PBC's, is a nontrivial task. In general one *cannot* define it as the first moment of the induced change in charge density \u03b4(**r**), through  \u0394  P  \\=  1  \u03a9  0  \u222b  \u03a9  0  r  \u03b4  (  r  )  d  3  r {\\\\displaystyle \\\\Delta \\\\mathbf {P} \\={\\\\frac {1}{\\\\Omega \\_{0}}}\\\\int \\_{\\\\Omega \\_{0}}\\\\mathbf {r} \\\\delta \\\\left(\\\\mathbf {r} \\\\right)d^{3}r} without introducing a dependency on the shape of \u03a90, the chosen unit cell.[\\[1]](#cite_note-Vogl78-1) Recently King\\-Smith and Vanderbilt[\\[2]](#cite_note-Vanderbilt93I-2), building on the work of Resta[\\[3]](#cite_note-Resta92-3), showed that the electronic contribution to the difference in polarization \u0394**P**e, due to a finite adiabatic change in the Hamiltonian of a system, can be identified as a *geometric quantum phase* or *Berry phase* of the valence wave functions. We will briefly summarize the essential results (for a review of geometric quantum phases in polarization theory see the papers of Resta[\\[4]](#cite_note-Resta94-4)[\\[5]](#cite_note-Resta96-5)). Central to the modern theory of polarization is the proposition of Resta[\\[3]](#cite_note-Resta92-3) to write the electronic contribution to the change in polarization due to a finite adiabatic change in the Kohn\\-Sham Hamiltonian of the crystalline solid, as  \u0394  P  e  \\=  \u222b  \u03bb  1  \u03bb  2  \u2202  P  e  \u2202 \u03bb  d \u03bb {\\\\displaystyle \\\\Delta \\\\mathbf {P} \\_{e}\\=\\\\int \\_{\\\\lambda \\_{1}}^{\\\\lambda \\_{2}}{\\\\partial \\\\mathbf {P} \\_{e} \\\\over \\\\partial \\\\lambda }d\\\\lambda } with  \u2202  P  e  \u2202 \u03bb  \\=  i  \\|  e  \\|  \u210f  N  \u03a9  0  m  e  \u2211  k  \u2211  n \\= 1  M  \u2211  m \\= M \\+ 1  \u221e  \u27e8  \u03c8  n  k  ( \u03bb )  \\|  p ^  \\|  \u03c8  m  k  ( \u03bb )  \u27e9 \u27e8  \u03c8  m  k  ( \u03bb )  \\|  \u2202  V  ( \u03bb )  /  \u2202 \u03bb  \\|  \u03c8  n  k  ( \u03bb )  \u27e9  (  \u03f5  n  k  ( \u03bb )  \u2212  \u03f5  m  k  ( \u03bb )  )  2  \\+  c . c . {\\\\displaystyle {\\\\partial \\\\mathbf {P} \\_{e} \\\\over \\\\partial \\\\lambda }\\={i\\|e\\|\\\\hbar \\\\over N\\\\Omega \\_{0}m\\_{e}}\\\\sum \\_{\\\\mathbf {k} }\\\\sum \\_{n\\=1}^{M}\\\\sum \\_{m\\=M\\+1}^{\\\\infty }{\\\\langle \\\\psi \\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\|\\\\mathbf {\\\\hat {p}} \\|\\\\psi \\_{m\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\\\rangle \\\\langle \\\\psi \\_{m\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\|\\\\partial V^{\\\\left(\\\\lambda \\\\right)}/\\\\partial \\\\lambda \\|\\\\psi \\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\\\rangle \\\\over \\\\left(\\\\epsilon \\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\-\\\\epsilon \\_{m\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\\\right)^{2}}\\+\\\\mathrm {c.c.} } where *me* and *e* are the electronic mass and charge, *N* is the number of unit cells in the crystal, \u03a90 is the unit cell volume, *M* is the number of occupied bands, **p** is the momentum operator, and the functions \u03c8(\u03bb)n**k** are the usual Bloch solutions to the crystalline Hamiltonian. Within Kohn\\-Sham density\\-functional theory, the potential V(\u03bb) is to be interpreted as the Kohn\\-Sham potential V(\u03bb)KS, where \u03bb parameterizes some change in this potential, for instance due to the displacement of an atom in the unit cell. King\\-Smith and Vanderbilt[\\[2]](#cite_note-Vanderbilt93I-2) have cast this expression in a form in which the conduction band states \u03c8(\u03bb)m**k** no longer explicitly appear, and they show that the change in polarization along an arbitrary path, can be found from only a knowledge of the system at the end points  \u0394  P  e  \\=  P  e  (  \u03bb  2  )  \u2212  P  e  (  \u03bb  1  ) {\\\\displaystyle \\\\Delta \\\\mathbf {P} \\_{e}\\=\\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\_{2}\\\\right)}\\-\\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\_{1}\\\\right)}} with  P  e  ( \u03bb )  \\= \u2212  i f  \\|  e  \\|  8  \u03c0  3  \u2211  n \\= 1  M  \u222b  B Z  d  3  k \u27e8  u  n  k  ( \u03bb )  \\|  \u2207  k  \\|  u  n  k  ( \u03bb )  \u27e9 {\\\\displaystyle \\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\\\right)}\\=\\-{if\\|e\\| \\\\over 8\\\\pi ^{3}}\\\\sum \\_{n\\=1}^{M}\\\\int \\_{BZ}d^{3}k\\\\langle u\\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\|\\\abla \\_{\\\\mathbf {k} }\\|u\\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\\\rangle } where *f* is the occupation number of the states in the valence bands, u(\u03bb)n**k** is the cell\\-periodic part of the Bloch function \u03c8(\u03bb)n**k**, and the sum *n* runs over all *M* occupied bands. The physics behind the equation above becomes more transparent when this expression is written in terms of the Wannier functions of the occupied bands,  P  e  ( \u03bb )  \\= \u2212  f  \\|  e  \\|  \u03a9  0  \u2211  n \\= 1  M  \u27e8  W  n  ( \u03bb )  \\|  r  \\|  W  n  ( \u03bb )  \u27e9 {\\\\displaystyle \\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\\\right)}\\=\\-{f\\|e\\| \\\\over \\\\Omega \\_{0}}\\\\sum \\_{n\\=1}^{M}\\\\langle W\\_{n}^{\\\\left(\\\\lambda \\\\right)}\\|\\\\mathbf {r} \\|W\\_{n}^{\\\\left(\\\\lambda \\\\right)}\\\\rangle } where Wn is the Wannier function corresponding to valence band *n*. This shows the change in polarization of a solid, induced by an adiabatic change in the Hamiltonian, to be proportional to the displacement of the charge centers **r**n\\=\u27e8 W(\u03bb)n\\|**r**\\| W(\u03bb)n\u27e9, of the Wannier functions corresponding to the valence bands. It is important to realize that the polarization in terms of Bloch or Wannier functions, and consequently the change in polarization, is only well\\-defined modulo *fe***R**/\u03a90, where **R** is a lattice vector. This indeterminacy stems from the fact that the charge center of a Wannier function is only invariant modulo **R**, with respect to the choice of phase of the Bloch functions. In practice one is usually interested in polarization changes \\|\u0394**P**e\\| \\<\\< \\|*fe***R**1/\u03a90\\|, where **R**1 is the shortest nonzero lattice vector. An arbitrary term *fe***R**/\u03a90 can therefore often be removed by simple inspection of the results. In cases where \\|\u0394**P**e\\| is of the same order of magnitude as *fe***R**1/\u03a90 any uncertainty can always be removed by dividing the total change in the Hamiltonian \u03bb1\u2192\u03bb2 into a number of intervals. ### Computational aspects In general, the direct evaluation of **P**e(\u03bb) is useless, because there is no specific relationship between the phases of the eigenvectors u(\u03bb)**k**n generated by a numerical diagonalizationroutine. This problem is circumvented by dividing the Brillouin zone integration in two parts, a two\\-dimensional integral and a line integral, and by transforming the above into three equations, which separately provide the components of **P**e(\u03bb) along the directions of three reciprocal lattice vectors **G**1, **G**2, and **G**3, which together span a unit cell of the reciprocal lattice. The component of **P**e(\u03bb) along for instance **G**1 can be found from  G  1  \u22c5  P  e  ( \u03bb )  \\= \u2212  i f  \\|  e  \\|  8  \u03c0  3  \u222b  A  d  k  2  d  k  3  \u2211  n \\= 1  M  \u222b  0  \\|  G  1  \\|  d  k  1  \u27e8  u  n  k  ( \u03bb )  \\|  \u2202  /  \u2202  k  1  \\|  u  n  k  ( \u03bb )  \u27e9 {\\\\displaystyle \\\\mathbf {G} \\_{1}\\\\cdot \\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\\\right)}\\=\\-{if\\|e\\| \\\\over 8\\\\pi ^{3}}\\\\int \\_{A}dk\\_{2}dk\\_{3}\\\\sum \\_{n\\=1}^{M}\\\\int \\_{0}^{\\|\\\\mathbf {G} \\_{1}\\|}dk\\_{1}\\\\langle u\\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\|\\\\partial /\\\\partial k\\_{1}\\|u\\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\\\rangle } where the two\\-dimensional integral is taken over the area *A*, spanned by **G**2 and **G**3, and the line integral runs over a line segment parallel to **G**1. Interchanging the indices *1*, *2* and *3* in  the equation above yields the expressions for two other components of **P**e(\u03bb). Thus the electronic part of the polarization **P**e(\u03bb) is given (modulo *fe***R**/\u03a90) by the sum  \u2211  i \\= 1  3  (  P  e  ( \u03bb )  )  i  \\=  \u2211  i \\= 1  3  (  G  i  \u22c5  P  e  ( \u03bb )  )  R  i  2 \u03c0 {\\\\displaystyle \\\\sum \\_{i\\=1}^{3}(\\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\\\right)})\\_{i}\\=\\\\sum \\_{i\\=1}^{3}\\\\left(\\\\mathbf {G} \\_{i}\\\\cdot \\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\\\right)}\\\\right){\\\\mathbf {R} \\_{i} \\\\over 2\\\\pi }} where the lattice vectors **R**i obey the relationship **R**i\u00b7**G**j\\=2\u03c0\u03b4ij. The integration over *A* in the above, is straightforward and can be performed by sampling a 2D Monkhorst\\-Pack mesh of *k*\\-points,[\\[6]](#cite_note-MonkhorstPack-6) termed the *perpendicular mesh* or **k**\u22a5\\-mesh by King\\-Smith and Vanderbilt. However, to remove the influence of the random phase of the functions u(\u03bb)n**k**, introduced by the diagonalization routine, King\\-Smith and Vanderbilt[\\[2]](#cite_note-Vanderbilt93I-2) propose to replace the line integral alias integration in the *parallel* or **G**\\|\\| direction by,  \u03d5  J  ( \u03bb )  (  k  \u22a5  )  \\=  I m  {  ln \u2061  \u220f  j \\= 0  J \u2212 1  d e t  (  \u27e8  u  m  k  j  ( \u03bb )  \\|  u  n  k  j \\+ 1  ( \u03bb )  \u27e9  )  } {\\\\displaystyle \\\\phi \\_{J}^{\\\\left(\\\\lambda \\\\right)}\\\\left(\\\\mathbf {k} \\_{\\\\perp }\\\\right)\\=\\\\mathrm {Im} \\\\left\\\\{\\\\ln \\\\prod \\_{j\\=0}^{J\\-1}\\\\mathrm {det} \\\\left(\\\\langle u\\_{m\\\\mathbf {k} \\_{j}}^{\\\\left(\\\\lambda \\\\right)}\\|u\\_{n\\\\mathbf {k} \\_{j\\+1}}^{\\\\left(\\\\lambda \\\\right)}\\\\rangle \\\\right)\\\\right\\\\}} which is evaluated by calculating the cell\\-periodic parts of the wave functions at a string of *J* *k*\\-points, **k**j\\= **k**\u22a5\\+j**G**\\|\\|/*J* (with *j*\\=0,..,*J*\\-1\\), and where for sufficiently large *J* one has that  \u03d5  J  ( \u03bb )  (  k  \u22a5  )  \\= \u2212 i  \u2211  n \\= 1  M  \u222b  0  \\|  G  \u2225  \\|  d  k  \u2225  \u27e8  u  n  k  ( \u03bb )  \\|  \u2202  /  \u2202  k  \u2225  \\|  u  n  k  ( \u03bb )  \u27e9 {\\\\displaystyle \\\\phi \\_{J}^{\\\\left(\\\\lambda \\\\right)}\\\\left(\\\\mathbf {k} \\_{\\\\perp }\\\\right)\\=\\-i\\\\sum \\_{n\\=1}^{M}\\\\int \\_{0}^{\\|\\\\mathbf {G} \\_{\\\\parallel }\\|}dk\\_{\\\\parallel }\\\\langle u\\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\|\\\\partial /\\\\partial k\\_{\\\\parallel }\\|u\\_{n\\\\mathbf {k} }^{\\\\left(\\\\lambda \\\\right)}\\\\rangle } **Note**: the determinant appearing in the equation above is the determinant of the *M*\u00d7*M* matrix formed by letting *n* and *m* run over all valence bands. The crucial step, instrumental in removing the random phase, is that the functions u(\u03bb)n**k**J are not obtained from an independent diagonalization, but found through their relationship with the functions u(\u03bb)n**k**0,  u  n  k  J  ( \u03bb )  (  r  ) \\=  e  \u2212 i  G  \u2225  \u22c5  r  u  n  k  0  ( \u03bb )  (  r  ) {\\\\displaystyle u\\_{n\\\\mathbf {k} \\_{J}}^{\\\\left(\\\\lambda \\\\right)}(\\\\mathbf {r} )\\=e^{\\-i\\\\mathbf {G} \\_{\\\\parallel }\\\\cdot \\\\mathbf {r} }u\\_{n\\\\mathbf {k} \\_{0}}^{\\\\left(\\\\lambda \\\\right)}(\\\\mathbf {r} )} This way the product \u03c6J(\u03bb) becomes cyclic, and contains both u(\u03bb)n**k**j as well as its complex conjugate for every *k*\\-point in the string, thus removing the random phase. In practice **G**\\|\\|\u00b7**P**e(\u03bb) is evaluated by way of the following summation over the **k**\u22a5\\-mesh,  (  P  e  ( \u03bb )  )  i  \\=  f  \\|  e  \\|  R  i  2 \u03c0  \u03a9  0  (  1  N  k  \u22a5  \u2211  k  \u22a5  I m  ln \u2061  D  J  ( \u03bb )  (  k  \u22a5  )  \u27e8 D \u27e9  \\+  I m  ln \u2061 \u27e8 D \u27e9  ) {\\\\displaystyle (\\\\mathbf {P} \\_{e}^{\\\\left(\\\\lambda \\\\right)})\\_{i}\\={\\\\frac {f\\|e\\|\\\\mathbf {R} \\_{i}}{2\\\\pi \\\\Omega \\_{0}}}\\\\left({\\\\frac {1}{N\\_{k\\_{\\\\perp }}}}\\\\sum \\_{\\\\mathbf {k} \\_{\\\\perp }}\\\\mathrm {Im} \\\\ln {\\\\frac {D\\_{J}^{\\\\left(\\\\lambda \\\\right)}\\\\left(\\\\mathbf {k} \\_{\\\\perp }\\\\right)}{\\\\langle D\\\\rangle }}\\+\\\\mathrm {Im} \\\\ln \\\\langle D\\\\rangle \\\\right)} where  D  J  ( \u03bb )  (  k  \u22a5  )  \\=  \u220f  j \\= 0  J \u2212 1  d e t  (  \u27e8  u  m  k  j  ( \u03bb )  \\|  u  n  k  j \\+ 1  ( \u03bb )  \u27e9  ) {\\\\displaystyle D\\_{J}^{\\\\left(\\\\lambda \\\\right)}\\\\left(\\\\mathbf {k} \\_{\\\\perp }\\\\right)\\=\\\\prod \\_{j\\=0}^{J\\-1}\\\\mathrm {det} \\\\left(\\\\langle u\\_{m\\\\mathbf {k} \\_{j}}^{\\\\left(\\\\lambda \\\\right)}\\|u\\_{n\\\\mathbf {k} \\_{j\\+1}}^{\\\\left(\\\\lambda \\\\right)}\\\\rangle \\\\right)} with **k**j\\= **k**\u22a5\\+j**G**\\|\\|/*J* (with *j*\\=0,..,*J*\\-1\\), and  \u27e8 D \u27e9 \\=  1  N  k  \u22a5  \u2211  k  \u22a5  D  J  ( \u03bb )  (  k  \u22a5  )  , {\\\\displaystyle \\\\langle D\\\\rangle \\={\\\\frac {1}{N\\_{k\\_{\\\\perp }}}}\\\\sum \\_{\\\\mathbf {k} \\_{\\\\perp }}D\\_{J}^{\\\\left(\\\\lambda \\\\right)}\\\\left(\\\\mathbf {k} \\_{\\\\perp }\\\\right),} and where we used **R**i\u00b7**G**j\\=2\u03c0\u03b4ij. Assuming the *D*J(\u03bb)(**k**\u22a5) are reasonably well\\-clustered around \u27e8*D*\u27e9, all terms *D*J(\u03bb)(**k**\u22a5)/\u27e8*D*\u27e9 will lie on the same branch of the logarithm.This makes it less likely that (**P**e(\u03bb))i will pick up a spurious contribution (of *n***R**i/*N***k**\u22a5). Self\\-consistent response to finite electric fields--------------------------------------------------- As of version 5\\.2, VASP can calculate the ground state of an insulating system under the application of a finite homogeneous electric field. The VASP implementation closely follows the *PEAD* (Perturbation Expression After Discretization) approach of Nunes and Gonze[\\[7]](#cite_note-nunes:prb:01-7) and the work of Souza *et al.*.[\\[8]](#cite_note-souza:prl:02-8) In short: to determine the ground state of an insulating system under the application of a finite homogeneous electric field *\u03b5*, VASP solves for the field\\-polarized Bloch functions {*\u03c8*(*\u03b5*)} by minimizing the electric enthalpy functional:  E \\[ {  \u03c8  (  E  )  } ,  E  ] \\=  E  0  \\[ {  \u03c8  (  E  )  } ] \u2212 \u03a9  E  \u22c5  P  \\[ {  \u03c8  (  E  )  } ] , {\\\\displaystyle E\\[\\\\{\\\\psi ^{({\\\\mathcal {E}})}\\\\},{\\\\mathcal {E}}]\\=E\\_{0}\\[\\\\{\\\\psi ^{({\\\\mathcal {E}})}\\\\}]\\-\\\\Omega {\\\\mathcal {E}}\\\\cdot \\\\mathbf {P} \\[\\\\{\\\\psi ^{({\\\\mathcal {E}})}\\\\}],} where **P**\\[{*\u03c8*(*\u03b5*)}] is the macroscopic polarization as defined in the modern theory of polarization:  P  \\[ {  \u03c8  (  E  )  } ] \\= \u2212  2 i e  ( 2 \u03c0  )  3  \u2211  n  \u222b  B Z  d  k  \u27e8  u  n  k  (  E  )  \\|  \u2207  k  \\|  u  n  k  (  E  )  \u27e9 {\\\\displaystyle \\\\mathbf {P} \\[\\\\{\\\\psi ^{({\\\\mathcal {E}})}\\\\}]\\=\\-{\\\\frac {2ie}{(2\\\\pi )^{3}}}\\\\sum \\_{n}\\\\int \\_{\\\\mathrm {BZ} }d\\\\mathbf {k} \\\\langle u\\_{n\\\\mathbf {k} }^{({\\\\mathcal {E}})}\\|\\\abla \\_{\\\\mathbf {k} }\\|u\\_{n\\\\mathbf {k} }^{({\\\\mathcal {E}})}\\\\rangle } and u(*\u03b5*)n**k** is the cell\\-periodic part of *\u03c8*(*\u03b5*)n**k**. The second term on the right\\-hand side of the electric enthalpy functional introduces a corresponding additional term to the Hamiltonian  H  \\|  \u03c8  n  k  (  E  )  \u27e9 \\=  H  0  \\|  \u03c8  n  k  (  E  )  \u27e9 \u2212 \u03a9  E  \u22c5  \u03b4  P  \\[  {  \u03c8  (  E  )  }  ]  \u03b4 \u27e8  \u03c8  n  k  (  E  )  \\|  . {\\\\displaystyle H\\|\\\\psi \\_{n\\\\mathbf {k} }^{({\\\\mathcal {E}})}\\\\rangle \\=H\\_{0}\\|\\\\psi \\_{n\\\\mathbf {k} }^{({\\\\mathcal {E}})}\\\\rangle \\-\\\\Omega {\\\\mathcal {E}}\\\\cdot {\\\\frac {\\\\delta \\\\mathbf {P} \\\\left\\[\\\\{\\\\psi ^{({\\\\mathcal {E}})}\\\\}\\\\right]}{\\\\delta \\\\langle \\\\psi \\_{n\\\\mathbf {k} }^{({\\\\mathcal {E}})}\\|}}.} Following the work of Nunes and Gonze[\\[7]](#cite_note-nunes:prb:01-7) we write,  \u03b4  P  \\[  {  \u03c8  (  E  )  }  ]  \u03b4 \u27e8  \u03c8  n  k  (  E  )  \\|  \\= \u2212  i e  2 \u0394 k  \u2211  m \\= 1  N  \\[  \\|  u  m  k  j \\+ 1  (  E  )  \u27e9  S  m n  \u2212 1  (  k  j  ,  k  j \\+ 1  ) \u2212  \\|  u  m  k  j \u2212 1  (  E  )  \u27e9  S  m n  \u2212 1  (  k  j  ,  k  j \u2212 1  )  ] {\\\\displaystyle {\\\\frac {\\\\delta \\\\mathbf {P} \\\\left\\[\\\\{\\\\psi ^{({\\\\mathcal {E}})}\\\\}\\\\right]}{\\\\delta \\\\langle \\\\psi \\_{n\\\\mathbf {k} }^{({\\\\mathcal {E}})}\\|}}\\=\\-{\\\\frac {ie}{2\\\\Delta k}}\\\\sum \\_{m\\=1}^{N}\\\\left\\[\\|u\\_{m\\\\mathbf {k} \\_{j\\+1}}^{({\\\\mathcal {E}})}\\\\rangle S\\_{mn}^{\\-1}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\+1})\\-\\|u\\_{m\\\\mathbf {k} \\_{j\\-1}}^{({\\\\mathcal {E}})}\\\\rangle S\\_{mn}^{\\-1}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\-1})\\\\right]} where *m* runs over the *N* occupied bands of the system, \u0394*k*\\=\\|**k**j\\+1\\-**k**j\\|, and  S  n m  (  k  j  ,  k  j \\+ 1  ) \\= \u27e8  u  n  k  j  (  E  )  \\|  u  m  k  j \\+ 1  (  E  )  \u27e9 . {\\\\displaystyle S\\_{nm}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\+1})\\=\\\\langle u\\_{n\\\\mathbf {k} \\_{j}}^{({\\\\mathcal {E}})}\\|u\\_{m\\\\mathbf {k} \\_{j\\+1}}^{({\\\\mathcal {E}})}\\\\rangle .} This Hamiltonian allows one to solve for {*\u03c8*(*\u03b5*)} by means of a direct optimization method\"). **Note**: By analogy, it can be shown that  \u2202  \\|  u  n  k  j  \u27e9  \u2202 k  \\=  i e  2 \u0394 k  \u2211  m \\= 1  N  \\[  \\|  u  m  k  j \\+ 1  (  E  )  \u27e9  S  m n  \u2212 1  (  k  j  ,  k  j \\+ 1  ) \u2212  \\|  u  m  k  j \u2212 1  (  E  )  \u27e9  S  m n  \u2212 1  (  k  j  ,  k  j \u2212 1  )  ] {\\\\displaystyle {\\\\frac {\\\\partial \\|u\\_{n\\\\mathbf {k} \\_{j}}\\\\rangle }{\\\\partial k}}\\={\\\\frac {ie}{2\\\\Delta k}}\\\\sum \\_{m\\=1}^{N}\\\\left\\[\\|u\\_{m\\\\mathbf {k} \\_{j\\+1}}^{({\\\\mathcal {E}})}\\\\rangle S\\_{mn}^{\\-1}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\+1})\\-\\|u\\_{m\\\\mathbf {k} \\_{j\\-1}}^{({\\\\mathcal {E}})}\\\\rangle S\\_{mn}^{\\-1}(\\\\mathbf {k} \\_{j},\\\\mathbf {k} \\_{j\\-1})\\\\right]} in the sense of a first\\-order finite difference scheme (higher\\-order stencils may be similarly defined).[\\[7]](#cite_note-nunes:prb:01-7) **Note**: One should be aware that when the electric field is chosen to be too large, the electric enthalpy functional will lose its minima, and VASP will not be able to find a stationary solution for the field\\-polarized orbitals.This is discussed in some detail by Souza *et al.*.[\\[8]](#cite_note-souza:prl:02-8)VASP will produce a warning if:  e  \\|  E  \u22c5  a  i  \\|  \\>  1 10  E  g a p  /  N  i  , {\\\\displaystyle e\\|{\\\\mathcal {E}}\\\\cdot \\\\mathbf {a} \\_{i}\\|\\>{\\\\frac {1}{10}}E\\_{\\\\mathrm {gap} }/N\\_{i},} where *E*gap is the bandgap, **a**i are the lattice vectors, and *N*i is the number of **k**\\-points along the reciprocal lattice vector *i*, in the regular (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-mesh. The factor 1/10 is chosen to be on the safe side. If one does not include unoccupied bands, VASP is obviously not able to determine the bandgap and can not check whether the electric field might be too large. This will also produce a warning message. ### Response properties The change in the macroscopic polarization due to the electric field *\u03b5* defines the ion\\-clamped static dielectric tensor  \u03f5  i j  \u221e  \\=  \u03b4  i j  \\+  4 \u03c0  \u03f5  0  \u2202  P  i  \u2202  E  j  ,  i , j \\= x , y , z  , {\\\\displaystyle \\\\epsilon \\_{ij}^{\\\\infty }\\=\\\\delta \\_{ij}\\+{\\\\frac {4\\\\pi }{\\\\epsilon \\_{0}}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}},\\\\qquad {i,j\\=x,y,z},} the change in the Hellmann\\-Feynman forces due to *\u03b5*, the Born effective charge tensors  Z  i j  \u2217  \\=  \u03a9 e  \u2202  P  i  \u2202  u  j  \\=  1 e  \u2202  F  i  \u2202  E  j  ,  i , j \\= x , y , z  , {\\\\displaystyle Z\\_{ij}^{\\*}\\={\\\\frac {\\\\Omega }{e}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial u\\_{j}}}\\={\\\\frac {1}{e}}{\\\\frac {\\\\partial F\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}},\\\\qquad {i,j\\=x,y,z},} and the ion\\-clamped piezoelectric tensor of the system  e  i j  ( 0 )  \\= \u2212  \u2202  \u03c3  i  \u2202  E  j  ,  i \\= x x , y y , z z , x y , y z , z x  j \\= x , y , z  , {\\\\displaystyle e\\_{ij}^{(0\\)}\\=\\-{\\\\frac {\\\\partial \\\\sigma \\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}},\\\\qquad {i\\=xx,yy,zz,xy,yz,zx}\\\\quad {j\\=x,y,z},} is found as the change in the stress tensor. Related Tags and Sections------------------------- LCALCPOL,LCALCEPS,EFIELD\\_PEAD,LPEAD,IPEAD,LBERRY,IGPAR,NPPSTR,DIPOL"}
{"file_name": "NGX.md", "content": "NGX= \\[integer]   Default: **NGX** \\= set in accordance with PREC and ENCUTnDescription: NGX sets the number of grid points in the FFT grid along the first lattice vector.  --- By default NGX is set in accordance with the requested \"precision\" mode PREC and the plane wave kinetic energy cutoff ENCUT: | PREC | NGX || --- | --- || Normal | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Single (VASP.5\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Single (VASP.6\\) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || SingleN (VASP.6\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Accurate | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Low | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Medium | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || High | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | where  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT. Alternatively, NGX can be set to a specific value in the INCAR file."}
{"file_name": "Downsampling_of_the_Hartree-Fock_operator.md", "content": "### Downsampling Consider the description of a certain bulk system, using a supercell made up of  N {\\\\displaystyle N}  primitive cells, in such a way that, {**A** i' }, the lattice vectorsof the supercell are given by **A** i' \\=*n* i**A** i (i\\=1,2,3\\), where {**A** i} are the lattice vectors of the primitive cell. Let  R  m a x  \\= 2  /  \u03bc {\\\\displaystyle R\\_{\\\\rm {max}}\\=2/\\\\mu }  be the distance for which  e r f c  (  \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\|  \u2248 0  f o r  \\|  r  \u2212  r  \u2032  \\|  \\>  R  m a x  . {\\\\displaystyle {\\\\frac {\\\\mathrm {erfc} \\\\left(\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|\\\\right)}{\\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|}}\\\\approx 0\\\\quad \\\\mathrm {for} \\\\quad {\\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|}\\>R\\_{\\\\mathrm {max} }.} When the nearest neighbour distance between the periodically repeated imagesof the supercell   R  N N  \\> 2  R  m a x {\\\\displaystyle R\\_{NN}\\>2R\\_{\\\\rm {max}}}  (i.e.   R  N N  \\> 4  /  \u03bc {\\\\displaystyle R\\_{NN}\\>4/\\\\mu } ), the short\\-range Hartree\\-Fock potential can be represented exactly, sampling the BZ at the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only, i.e.,  V  x  S R  (  r  ,  r  \u2032  )  \\= \u2212  e  2  2  \u2211  m  f  m  \u0393  u  m  \u0393  \u2217  (  r  \u2032  )  u  m  \u0393  (  r  )  e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\|  . {\\\\displaystyle V\\_{x}^{\\\\mathrm {SR} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m}f\\_{m{\\\\Gamma }}u\\_{m{\\\\Gamma }}^{\\*}(\\\\mathbf {r} ')u\\_{m{\\\\Gamma }}(\\\\mathbf {r} ){\\\\frac {\\\\mathrm {erfc} (\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|)}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}.} This is equivalent to a representation of the bulk system using the primitive cell and a   n  1  \u00d7  n  2  \u00d7  n  3 {\\\\displaystyle n\\_{1}\\\\times n\\_{2}\\\\times n\\_{3}}  sampling of the BZ,   V  x  S R  (  r  ,  r  \u2032  )  \\= \u2212  e  2  2  \u2211  m \u2032  q  f  m \u2032  q  e  \u2212 i  q  \u22c5  r  \u2032  u  m \u2032  q  \u2217  (  r  \u2032  )  u  m \u2032  q  (  r  )  e  i  q  \u22c5  r  \u00d7  e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle V\\_{x}^{\\\\mathrm {SR} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m'\\\\mathbf {q} }f\\_{m'\\\\mathbf {q} }e^{\\-i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} '}u\\_{m'\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')u\\_{m'\\\\mathbf {q} }(\\\\mathbf {r} )e^{i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} }\\\\times {\\\\frac {\\\\mathrm {erfc} (\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|)}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}} where the set of   q {\\\\displaystyle {\\\\mathbf {q} }}  vectors is given by  {  q  } \\= { i  G  1  \\+ j  G  2  \\+ k  G  3  } , {\\\\displaystyle \\\\{\\\\mathbf {q} \\\\}\\=\\\\{i\\\\mathbf {G} \\_{1}\\+j\\\\mathbf {G} \\_{2}\\+k\\\\mathbf {G} \\_{3}\\\\},} for *i* \\=1,..,*n* 1, *j* \\=1,..,n 2, and *k* \\=1,..,n 3, with **G**1,2,3 being the reciprocal lattice vectors of the supercell. In light of the above it is clear that the number of   q {\\\\displaystyle {\\\\mathbf {q} }} \\-points needed to representthe short\\-range Hartree\\-Fock potential decreases with decreasing   R  m a x {\\\\displaystyle R\\_{\\\\rm {max}}} (i.e., with increasing   \u03bc {\\\\displaystyle \\\\mu }  ).Furthermore, one should realize that the maximal range of the exchange interactionsis not only limited by the   e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  /  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle {\\\\rm {erfc}}(\\\\mu \\|{\\\\bf {r}}\\-{\\\\bf {r}}'\\|)/\\|{\\\\bf {r}}\\-{\\\\bf {r}}'\\|} kernel, but depends on the extent of the spatial overlap of the orbitals as well (this can easily be shown for the Hartree\\-Fock exchange energy when one adopts a Wannier representation of the orbitals);  R  m a x  \\= 2  /  \u03bc {\\\\displaystyle R\\_{\\\\rm {max}}\\=2/\\\\mu } ; (as defined above), therefore, provides an upper limitfor the range of the exchange interactions, consistent with maximal spatialoverlap of the orbitals. It is thus well conceivable that the situation arises where the short\\-range Hartree\\-Fock potential may be represented on a considerably coarser mesh of points in the BZ than the other contributions to the Hamiltonian.To take advantage of this situation one may, for instance, restrict the sum over   q {\\\\displaystyle {\\\\bf {q}}}  in the short range exchange potential to a subset, {  q  k {\\\\displaystyle {\\\\bf {q\\_{k}}}} }, of the full   N  1  \u00d7  N  2  \u00d7  N  3 {\\\\displaystyle N\\_{1}\\\\times N\\_{2}\\\\times N\\_{3}}    k {\\\\displaystyle {\\\\bf {k}}} \\-point set, {  k {\\\\displaystyle {\\\\bf {k}}} }, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell, and  C  i {\\\\displaystyle C\\_{i}}  is the integer grid reduction factor along reciprocal lattice direction**b** i. This leads to a reduction in the computational workload by a factor:  1  C  1  C  2  C  3 {\\\\displaystyle {\\\\frac {1}{C\\_{1}C\\_{2}C\\_{3}}}} **Note**: From the above, one should not get the impression that the grid reduction can only be used (or is useful) only in conjunction with range\\-separated functionals (e.g., HSE03/HSE06\\). It can be applied, for instance, in the PBE0 and pure HF cases as well, although from the above it might be clear that the range\\-separated functionals, in general, will allow for a larger reduction of the grid.[\\[1]](#cite_note-paier:jcp:06-1) #### Caveat: when one should not use downsampling In metallic systems, downsampling the exact exchange potential (NKRED, NKREDX, NKREDY, and/or NKREDZ \u2260 1\\) must be used with great care, and results might be wrong, if downsampling is applied. Problematic cases include electron or hole doped semiconductors or insulators. If two electrons are added to a bulk TiO2 cell containing 72 atoms, and calculations are performed using   2 \u00d7 2 \u00d7 2 {\\\\displaystyle 2\\\\times 2\\\\times 2}    k {\\\\displaystyle {\\\\bf {k}}} \\-points, the following results are obtained for the one\\-electron energies and occupancies with and without NKRED\\=2 (LHFCALC\\=.TRUE.\u00a0; AEXX\\=0\\.2\u00a0; HFSCREEN \\= 0\\.2\\):  ```k-point   1: 0.0000    0.0000    0.0000            DOPED NKRED = 2           DOPED NKRED = 1              UNDOPED CASE band No.  band energies occupation   band energies occupation   band energies occupationvalence bands   262       2.4107      2.00000        2.4339      2.00000        2.4082      2.00000   263       2.4107      2.00000        2.4339      2.00000        2.4082      2.00000   264       2.8522      2.00000        2.8597      2.00000        2.8566      2.00000conduction bands\t\t\t\t\t\t    265       5.4046      2.00000        5.8240      1.87262        5.8126      0.00000   266       5.4908      2.00000        5.8695      1.62151        5.8424      0.00000   267       5.4894      2.00000        5.8695      1.62192        5.8424      0.00000  ```  ```k-point   2: 0.5000    0.0000    0.0000            DOPED NKRED = 2           DOPED NKRED = 1              UNDOPED CASE band No.  band energies occupation   band energies occupation  band energies occupationvalence bands   262       2.0015      2.00000        2.0144      2.00000       2.0160      2.00000          263       2.5961      2.00000        2.6072      2.00000       2.6046      2.00000   264       2.5961      2.00000        2.6072      2.00000       2.6045      2.00000conduction bands\t\t\t\t\t                                 265       6.1904      0.00000        6.1335      0.00435       6.0300      0.00000   266       6.1904      0.00000        6.1335      0.00435       6.0300      0.00000   267       6.1907      0.00000        6.1340      0.00426       6.0305      0.00000  ```  ```k-point   3\u00a0:  0.5000    0.5000    0.0000            DOPED NKRED = 2           DOPED NKRED = 1              UNDOPED CASE band No.  band energies occupation   band energies occupation  band energies occupation valence bands   262       2.4237      2.00000        2.4433      2.00000       2.4287      2.00000   263       2.4238      2.00000        2.4432      2.00000       2.4287      2.00000   264       2.4239      2.00000        2.4433      2.00000       2.4287      2.00000conduction bands\t\t\t\t\t\t                         265       5.8966      0.42674        5.9100      1.24121       5.8817      0.00000   266       5.8780      0.54128        5.9100      1.24143       5.8817      0.00000   267       5.8826      0.50661        5.9100      1.24261       5.8817      0.00000  ``` Without NKRED, the one electron energies are pretty similar to the one electron energies in the undoped system (last two columns), whereas using NKRED a strong reduction of the \"gap\" between the valence and conduction band is observed, in particular, close to the conduction band minimum (in this case the point). This result is an artifact of the approximation used for NKRED\\=2\\. The nonlocal exchange operator cancels the self\\-interaction present in the Hartree\\-potential. For NKRED\\=2 and   2 \u00d7 2 \u00d7 2 {\\\\displaystyle 2\\\\times 2\\\\times 2}    k {\\\\displaystyle {\\\\bf {k}}} \\-points, the nonlocal exchange operator at each   k {\\\\displaystyle {\\\\bf {k}}} \\-point is evaluated using the one\\-electron orbitals at this   k {\\\\displaystyle {\\\\bf {k}}} \\-point only, e.g.:  V  k  (  G  ,  G  \u2032  )  \\= \u27e8  k  \\+  G  \\|  V  x  \\|  k  \\+  G  \u2032  \u27e9 \\= \u2212  4 \u03c0  e  2  \u03a9  f  m  k  \u2211  G  \u2033  C  m  k  \u2217  (  G  \u2032  \u2212  G  \u2033  )  C  m  k  (  G  \u2212  G  \u2033  )  \\|  G  \u2033  \\|  2 {\\\\displaystyle V\\_{\\\\mathbf {k} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)\\=\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|V\\_{x}\\|\\\\mathbf {k} \\+\\\\mathbf {G} '\\\\rangle \\=\\-{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}f\\_{m\\\\mathbf {k} }\\\\sum \\_{\\\\mathbf {G} ''}{\\\\frac {C\\_{m\\\\mathbf {k} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')C\\_{m\\\\mathbf {k} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}{\\|\\\\mathbf {G} ''\\|^{2}}}} The sum over   q {\\\\displaystyle {\\\\bf {q}}}  in the Hartree\\-Fock exchange potential reduces to a single   k {\\\\displaystyle {\\\\bf {k}}} \\-point. This reduces the self\\-interaction for states that originally have an occupancy larger than one, concomitantly pulling those states to lower energies. Initially, empty states (occupancy smaller one) are pushed up slightly. Since this is an artifact, NKRED must be used with utmost care for large supercells with coarse   k {\\\\displaystyle {\\\\bf {k}}} \\-point sampling. Please always check whether occupancies are similar at all   k {\\\\displaystyle {\\\\bf {k}}}  points if thisis not the case. The calculations should be double\\-checked without downsampling. Since HF type calculations using   2 \u00d7 2 \u00d7 2 {\\\\displaystyle 2\\\\times 2\\\\times 2}    k {\\\\displaystyle {\\\\bf {k}}}  points without NKRED, are roughly 64 times more expensive than those using the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only, it might seem impossible to do anything but   \u0393 {\\\\displaystyle \\\\Gamma } \\-point only calculations. However, VASP allows to generate special   k {\\\\displaystyle {\\\\bf {k}}}  points using generating lattices.  The following   k {\\\\displaystyle {\\\\bf {k}}} \\-point sets are particularly useful for HF\\-type calculations:  ```k-point set generating a bcc like lattice in the BZ ->  2 k points in BZ 0direct 0.5 0.5 0.5 -.5 -.5 0.5 0.5 -.5 -.5 0 0 0  ``` This KPOINTS file generates two 2   k {\\\\displaystyle {\\\\bf {k}}}  points, one at the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point and one along the space diagonal at the BZ boundary (*R* point). The following KPOINTS file generates 4   k {\\\\displaystyle {\\\\bf {k}}}  points, one at the   \u0393 {\\\\displaystyle \\\\Gamma }  point and three at the *S* points (the latter ones might be symmetry equivalent for cubic cells).  ```k-point set generating an fcc lattice ->  4 k points in BZ 0direct 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 0 0 0  ``` Using such grids, sensible and fairly rapidly converging results are obtained, e.g., for electron and hole doped materials, even if the conduction or valence band is partially occupied or depleted. For instance, the following energies are obtained for TiO2:  ```Gamma only     TOTEN  =      -837.759900 eV2 k-points     TOTEN  =      -838.039157 eV4 k-points     TOTEN  =      -838.129712 eV2x2x2          TOTEN  =      -838.104787 eV2x2x2 NKRED=2  TOTEN  =      -838.418681 eV  ```"}
{"file_name": "Spin-orbit_coupling_in_a_Fe_monolayer.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials Task---- Spin\\-orbit coupling (SOC) in a freestanding Fe monolayer. This example is carried out in total analogy to Spin\\-orbit coupling in a Ni monolayer. Input----- ### POSCAR  ```fcc Fe 100 surface 3.45   .50000   .50000   .00000  -.50000   .50000   .00000   .00000   .00000  5.00000 1Cartesian   .00000   .00000   .00000  ``` ### INCAR  ```SYSTEM        = Fe (100) monolayerISTART        = 0ENCUT         = 270.00LNONCOLLINEAR = .TRUE.MAGMOM        = 0.0 0.0 3.0VOSKOWN       = 1LSORBIT       = .TRUE. LMAXMIX       = 4  ``` * For the second calculation, switch to in\\-plane magnetiztion by setting MAGMOM\\= 3\\.0 0\\.0 0\\.0\\. ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * From the energy differences of the calculations using in plane and out of plane magnetization we see that the easy axis lies (in contrast to Ni) out of plane:  E  MAE  \\= E (  m  \u22a5  ) \u2212 E (  m  \u2225  ) \\= \u22120\\.2  meV {\\\\displaystyle E\\_{\\\\textrm {MAE}}\\=E(m\\_{\\\\perp })\\-E(m\\_{\\\\parallel })\\=\\-0\\.2\\\\,{\\\\textrm {meV}}} Download--------  4\\_4\\_SOI\\_Fe.tgz Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials"}
{"file_name": "NBANDSO.md", "content": "NBANDSO= \\[integer]n| Default: **NBANDSO** | \\= number of occupied orbitals |  || --- | --- | --- | Description: NBANDSO determines how many occupied orbitals are included in the Casida/BSE calculations or time propagation (ALGO\\=TIMEEV.  --- For the time\\-propagation algorithm increasing NBANDSO only modestly increases the compute time.For BSE and Casida\\-type calculations, the compute time grows with the third power of the number of included occupied and unoccupied bands  (  N  o c c  N  v i r t u a l  N  k  )  3 {\\\\displaystyle (N\\_{\\\\mathrm {occ} }N\\_{\\\\mathrm {virtual} }N\\_{\\\\mathrm {k} })^{3}} and the memory requirements increase quadratically  (  N  o c c  N  v i r t u a l  N  k  )  2 {\\\\displaystyle (N\\_{\\\\mathrm {occ} }N\\_{\\\\mathrm {virtual} }N\\_{\\\\mathrm {k} })^{2}} Please be aware that symmetry is not exploited in the BSE code, hence memory requirements can be excessive. To allow for calculations on large systems, the BSE code distributes the BSE matrix among all available cores and uses ScaLAPACK for the diagonalization. VASP always uses the orbitals closest to the Fermi\\-level, and NBANDSO (  N  o c c {\\\\displaystyle N\\_{\\\\mathrm {occ} }} ) and NBANDSV (  N  v i r t u a l {\\\\displaystyle N\\_{\\\\mathrm {virtual} }} ) determines how many occupied and unoccupied orbitals are included. The defaults are fairly \"conservative\" and equal the total number of electrons/2 (this usually implies that all occupied states are included). For highly accurate results, NBANDSV often needs to be increased, whereas for large systems one is often forced to reduce both values to much smaller numbers. Sometimes qualitative results for bandlike Wannier\\-Mott excitons can be obtained even with a single conduction and valence band."}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_SG.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example the nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl is simulated using a slow growth approach. Input----- ### POSCAR  ```   1.00000000000000     12.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    12.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    12.0000000000000000C H Cl   1   3   2direct0.53294865 0.56575027 0.496133880.53110276 0.65294003 0.502414340.44611198 0.52863033 0.514500560.58463838 0.52611078 0.559686440.32726066 0.74478226 0.649363010.57915789 0.51894916 0.36275174  ``` ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=1000                                           # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # md with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probabilityLBLUEOUT=.TRUE.                                    # write the BM stuff on the outputINCREM=-1e-4                                       # rate at which CV increases each step##############################################################################  ``` * The setting LBLUEOUT\\=*.TRUE.* tells VASP to write out the information needed for the computation of free energies. ### ICONST  ```R 1 5 0R 1 6 0S 1 -1 0  ``` Calculation----------- In a slow growth simulation, an approximation of the collective variable is increased by the value INCREM every time step. In order for the transformation between the initial and final state to be reversible, the value of INCREM must be infinitesimaly small. In practice we are limited by the desired length of trajectory causing that irreversible rather than reversible work is computed in a slow\\-growth simulation. Slow\\-growth simulations should be considered as an approximate method of free energy calculations whose quality depends strongly on the transformation rate (INCREM). The quality of the simulation can be judged from the hysteresis in the free energy profiles computed for the forward (i.e. reactant \\-\\> product) and reverse (i.e. product \\-\\> reactant) transformations. Alternatively, free energies can be computed from a series of slow\\-growth simulations using the Jarzyski identity[\\[1]](#cite_note-jarzynski:prl:1997-1). **The method is most useful as a quick test of the quality of the collective variable before launching any more accurate and time\\-consuming simulations.**   ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD (note that the free energy is independent of the masses of atoms).  For practical reasons, we split our (presumably long) meta dynamics calculation into shorter runs of length of 1000 fs (NSW\\=1000; POTIM\\=1\\). This is done automatically in the script *run* which looks as follows:  ```#!/bin/bash  runvasp=\"mpirun -np x executable_path\" # ensure that this sequence of MD runs is reproduciblecp POSCAR.init POSCARcp INCAR.init INCARrseed=\"RANDOM_SEED =         311137787                0                0\"echo $rseed >> INCAR  i=1while [ $i -le 50 ]  do   # start vasp  $runvasp   # ensure that this sequence of MD runs is reproducible  rseed=$(grep RANDOM_SEED REPORT |tail -1)  cp INCAR.init INCAR  echo $rseed >> INCAR   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` ### Free energy profile The following script *fgradSG.sh* extracts approximate free energy gradients from *REPORT.\\** files obtained in the slow\\-growth simulation and stores them along with the collectible variables in the file *grad.dat*:  ```#!/bin/bash rm grad.dat  i=1 while [ $i -le 1000 ] do  if test -f REPORT.$i  then    grep cc REPORT.$i |awk '{print $3}' >xxx    grep b_m REPORT.$i |awk '{print $2}' >fff    paste xxx fff >> grad.dat fi  let i=i+1done  sort -n grad.dat >grad_.datmv grad_.dat grad.datrm xxxrm fff  ``` To execute it please type the following:  ```bash ./fgradSG.sh  ``` The free energy profile along the collective variable is plotted using the script *integrateForward.py*: **Click to show/integrateForward.py**  ```#!/usr/bin/python import stringimport sys f=sys.argv[1] f=open(f,'r') r=[]g=[] for line in f.readlines():  line=string.split(line)  num=len(line)  if len(line)==2:    r.append(float(line[0]))    g.append(float(line[1])) f.close() tg=0.0print r[0],tgfor i in range(1,len(r)):  gg=0.5*(r[i]-r[i-1])*(g[i]+g[i-1])  tg+=gg  print r[i],tg  ``` This script obtains the free energy vs. the collective variable via a simple integration by trapezoid rule. The output is written to standard out so it has to be redirected to a file (we will arbitrarily choose the name *free\\_energy.dat*). To execute the script type the following command:  ```python integrateForward.py grad.dat > free_energy.dat  ``` To plot that script via Gnuplot please use the following:  ```gnuplot -e \"set terminal jpeg; set xlabel 'Collective variable (Ang)'; set ylabel 'Free energy (eV)'; set style data lines; plot 'free_energy.dat'\" > free_energy.jpg  ``` The free energy profile should look like the following: [](File_Free_energy_CH3Cl_SG.html) Again this method is only supposed to give a rough estimate for the free energy profile of a material."}
{"file_name": "Input_and_Output.md", "content": "Overview> Input> Preparing a Super Cell>Output> List of tutorials The tutorial is made of the following parts: 1. Input2. Preparing a Super Cell3. Output"}
{"file_name": "ML_NATOM_COUPLED.md", "content": "ML\\_NATOM\\_COUPLED= \\[integer]   Default: **ML\\_NATOM\\_COUPLED** \\= 0nDescription: This tag specifies the number of atoms for which a coupling parameter is introduced to calculate the chemical potential within the machine learning force field method.   --- For thermodynamic integration calculations please have a look at the tag ML\\_LCOUPLE."}
{"file_name": "Matsubara_Formalism-2.md", "content": "The zero\\-temperature formalism of many\\-body perturbation theory breaks down for metals (systems with zero energy band\\-gap) as pointed out by Kohn and Luttinger.[\\[1]](#cite_note-KohnLuttinger:PR:1960-1) This conundrum is lifted by considering diagrammatic perturbation theory at finite temperature   T \\> 0 {\\\\displaystyle T\\>0} , which may be understood by an analytical continuation of the real\\-time   t {\\\\displaystyle t}  to the imaginary time axis   \u2212 i \u03c4 {\\\\displaystyle \\-i\\\\tau } . Matsubara has shown that this Wick rotation in time   t \u2192 \u2212 i \u03c4 {\\\\displaystyle t\\\\to \\-i\\\\tau }  reveals an intriguing connection to the inverse temperature   \u03b2 \\= 1  /  T {\\\\displaystyle \\\\beta \\=1/T}  of the system.[\\[2]](#cite_note-Matsubara:PTP:1955-2) More precisely, Matsubara has shown that all terms in perturbation theory at finite temperature can be expressed as integrals of imaginary time quantities (such as the polarizability   \u03c7 ( \u2212 i \u03c4 ) {\\\\displaystyle \\\\chi (\\-i\\\\tau )} ) over the fundamental interval   \u2212 \u03b2 \u2264 \u03c4 \u2264 \u03b2 {\\\\displaystyle \\-\\\\beta \\\\leq \\\\tau \\\\leq \\\\beta }  . As a consequence, one decomposes imaginary time quantities into a Fourier series with period   \u03b2 {\\\\displaystyle \\\\beta } that determines the spacing of the Fourier modes. For instance the imaginary polarizability can be written as  \u03c7 ( \u2212 i \u03c4 ) \\=  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  \u03c7 \\~  ( i  \u03bd  m  )  e  \u2212 i  \u03bd  m  \u03c4  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\chi (\\-i\\\\tau )\\={\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\tilde {\\\\chi }}(i\\\u \\_{m})e^{\\-i\\\u \\_{m}\\\\tau },\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } and the corresponding random\\-phase approximation of the correlation energy at finite temperature becomes a series over (in this case, bosonic) Matsubara frequencies  \u03a9  c  R P A  \\=  1 2  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  ]  \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  }  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\Omega \\_{c}^{\\\\rm {RPA}}\\={\\\\frac {1}{2}}{\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right]\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right\\\\rbrace ,\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } The Matsubara formalism has the advantage that all contributions to the Green's function and the polarizability are mathematically well\\-defined, including contributions from states close to the chemical potential   \u03f5  n  k  \u2248 \u03bc {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\approx \\\\mu } , such that Matsubara series also converge for metallic systems. Although formally convenient, the Matsubara series converges poorly with the number of considered terms in practice. VASP, therefore, uses a compressed representation of the Fourier modes by employing the Minimax\\-Isometry method.[\\[3]](#cite_note-Kaltak:PRB:2020-3) This approach converges exponentially with the number of considered frequency points. 1. \u2191 W. Kohn and J. M. Luttinger, Phys. Rev. **118**, 41 (1960\\).2. \u2191 T. Matsubara, Prog. Theor. Phys. **14**, 351 (1955\\).3. \u2191 M. Kaltak and G. Kresse, Phys. Rev. B. **101**, 205145 (2020\\)."}
{"file_name": "Graphite_MBD_binding_energy.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- In this example you will determine the interlayer binding energy of graphite in its experimental structure using the MBD@rsSCS method of Tchatchenko *et al.* to account for van der Waals interactions. Semilocal DFT at the GGA level underestimates long\\-range dispersion interactions.In the case of graphite, PBE predicts the interlayer binding energy of \\~1 meV/atom which is too small compared to the RPA reference of 0\\.048 eV/atom [\\[1]](#cite_note-lebegue-1).In contrast, the pairwise correction scheme of Tkatchenko and Scheffler, overestimates this quantity strongly (0\\.083 eV/atom, see the Graphite TS binding energy example).Here we show that this problem can be eliminated by if many\\-body effects in dispersion energy are taken into account using the MBD@rsSCS method of Tchatchenko et al. (see Many\\-body dispersion energy). Input----- ### POSCAR * Graphite:  ```graphite 1.01.22800000 -2.12695839  0.000000001.22800000  2.12695839  0.000000000.00000000  0.00000000  6.71 4direct   0.00000000  0.00000000  0.25000000   0.00000000  0.00000000  0.75000000   0.33333333  0.66666667  0.25000000   0.66666667  0.33333333  0.75000000  ``` * Graphene:  ```graphite 1.01.22800000 -2.12695839  0.000000001.22800000  2.12695839  0.000000000.00000000  0.00000000  20. 2direct   0.00000000  0.00000000  0.25000000   0.33333333  0.66666667  0.25000000  ``` ### INCAR  ```IVDW = 202           LVDWEXPANSION =.TRUE. NSW = 1 IBRION = 2ISIF = 4PREC = AccurateEDIFFG = 1e-5LWAVE = .FALSE.LCHARG = .FALSE.ISMEAR = -5SIGMA = 0.01EDIFF = 1e-6ALGO = FastNPAR = 2  ``` ### KPOINTS * Graphite:  ```Monkhorst Pack 0gamma16 16 80 0 0  ``` * Graphene:  ```Monkhorst Pack 0gamma16 16 10 0 0  ```   Running this example-------------------- To run this example, execute the `run.sh` bash\\-script:  ``` ## To run VASP this script calls $vasp_std# (or posibly $vasp_gam and/or $vasp_ncl).# These variables can be defined by sourcing vaspcmd. vaspcmd 2> /dev/null  ## When vaspcmd is not available and $vasp_std,# $vasp_gam, and/or $vasp_ncl are not set as environment# variables, you can specify them here[ -z \"`echo $vasp_std`\" ] && vasp_std=\"mpirun -np 8 /path-to-your-vasp/vasp_std\"[ -z \"`echo $vasp_gam`\" ] && vasp_gam=\"mpirun -np 8 /path-to-your-vasp/vasp_gam\"[ -z \"`echo $vasp_ncl`\" ] && vasp_ncl=\"mpirun -np 8 /path-to-your-vasp/vasp_ncl\"  ## The real work starts here # # Here the work startsrm results.dat drct=$(pwd) for i in graphene graphite do  cd $drct/$i  $vasp_stddone cd $drct # obtain total energy for graphite en2=$(grep \"free  ene\" graphite/OUTCAR |tail -1|awk '{print $5}')  # obtain total energy for grapheneen1=$(grep \"free  ene\" graphene/OUTCAR |tail -1|awk '{print $5}') # compute interlayer binding energy (eV/atom)deltaE=$(echo print $en2/4 - $en1/2 |python) echo \"Binding energy (eV/atom): \" $deltaE >results.dat  ``` Note that the calculation is performed in two steps (two separate single\\-point calculations) in which the energy for bulk graphite and for graphene are obtained.The binding energy is computed automatically and it is written in the file `results.dat`.(N.B.: for the latter *python* needs to be available.) The computed value of 0\\.050 eV/A is now fairly close to the RPA reference of 0\\.048 eV/atom [\\[1]](#cite_note-lebegue-1). Download--------  graphiteBinding\\_mdb.tgz"}
{"file_name": "LMAXFOCK.md", "content": "LMAXFOCK= \\[integer]   Default: **LMAXFOCK** \\= 4nDescription: LMAXFOCK sets the maximum angular momentum quantum number *L* for the augmentation of charge densities in Hartree\\-Fock type routines.  --- In the PAW method, the difference between the charge density of the all\\-electron partial waves   \u03d5  \u03b2 {\\\\displaystyle \\\\phi \\_{\\\\beta }}  andthe pseudo partial waves   \u03d5 \\~  \u03b2 {\\\\displaystyle {\\\\tilde {\\\\phi }}\\_{\\\\beta }}  Q  \u03b1 \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\*}({\\\\mathbf {r} })\\\\phi \\_{\\\\beta }({\\\\mathbf {r} })\\-{\\\\tilde {\\\\phi }}\\_{\\\\alpha }^{\\*}({\\\\mathbf {r} }){\\\\tilde {\\\\phi }}\\_{\\\\beta }({\\\\mathbf {r} })} is usually treated on spherical grids centered at each atom(one\\-center terms inside the PAW spheres, see PAW method). To describe long range electrostatic effects, the *moments* of the differences of the all\\-electron and pseudo charge density also need to be added on the plane wave grid (compensation density, see PAW method).These compensation charges exactly restore the moments of the all\\-electron density on the plane wavegrid. For the charge densities used in the Hartree and DFT term, the augmentation is done exactly up to the maximum *L* quantum number required by the POTCAR files, whereas for the Fock exchange, for reasons of efficiency, the augmentation on the plane wave grid is controlled by LMAXFOCK. Specifically, when the exchange energy is evaluated  E  x  \\= \u2212  e  2  2  \u2211  n  k  , m  q  f  n  k  f  m  q  \u00d7 \u222b \u222b  d  3  r  d  3  r  \u2032  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  n  k  (  r  \u2032  )  \u03c8  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle E\\_{\\\\mathrm {x} }\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{n\\\\mathbf {k} ,m\\\\mathbf {q} }f\\_{n\\\\mathbf {k} }f\\_{m\\\\mathbf {q} }\\\\times \\\\int \\\\int d^{3}\\\\mathbf {r} d^{3}\\\\mathbf {r} '{\\\\frac {\\\\psi \\_{n\\\\mathbf {k} }^{\\*}(\\\\mathbf {r} )\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}} the overlap density   \u03c8  n  k  \u2217  (  r  )  \u03c8  m  q  (  r  ) {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {k} }^{\\*}(\\\\mathbf {r} )\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )} between two Bloch orbitals needs to be calculated on the plane wave grid (see PAW method). The tag LMAXFOCKcontrols up to which *L* quantum number, the compensation charge   n ^  (  r  ) {\\\\displaystyle {\\\\widehat {n}}(\\\\mathbf {r} )}  is calculated on the plane wave grid (compared PAW method compensation charge):  n ^  (  r  ) \\=  \u2211  \u03b1 , \u03b2 , L M  Q ^  \u03b1 , \u03b2  L M  (  r  )  \u27e8  \u03c8 \\~  n k  \\|  p \\~  \u03b1  \u27e9 \u27e8  p \\~  \u03b2  \\|  \u03c8 \\~  m k  \u27e9 . {\\\\displaystyle {\\\\widehat {n}}(\\\\mathbf {r} )\\=\\\\sum \\_{\\\\alpha ,\\\\beta ,LM}{\\\\widehat {Q}}\\_{\\\\alpha ,\\\\beta }^{LM}(\\\\mathbf {r} )\\\\,\\\\langle {\\\\widetilde {\\\\psi }}\\_{nk}\\|{\\\\widetilde {p}}\\_{\\\\alpha }\\\\rangle \\\\langle {\\\\widetilde {p}}\\_{\\\\beta }\\|{\\\\widetilde {\\\\psi }}\\_{mk}\\\\rangle .} To accelerate convergence with respect to LMAXFOCK, VASP uses a small trick: the contributions from the Hartree\\-Fock one\\-center terms are evaluated for the pseudo orbitals also only up to *L*\\=LMAXFOCK, whereas the one\\-center terms for the exact all\\-electron orbitals are evaluated up to the maximum required *L* (twice the angular quantum number of the partial wave with the highest *l*). The default is LMAXFOCK\\=4, and it might be necessary to increase this parameter, if the system contains f\\-electrons. Since this increases the computational load considerably (about factor 2\\), it is recommended to perform tests, whether the results are already reasonably converged using the default LMAXFOCK\\=4\\. To be compatible w.r.t. old releases, VASP also reads the flag HFLMAX to the same effect as LMAXFOCK."}
{"file_name": "NCORES_PER_BAND.md", "content": "NCORES\\_PER\\_BAND= \\[integer]   Default: **NCORES\\_PER\\_BAND** \\= 1nDescription: NCORES\\_PER\\_BAND determines the number of compute cores that work on an individual orbital. | **Deprecated:** Use the equivalent and more compact NCORE instead. || --- |"}
{"file_name": "ML_NRANK_SPARSDES.md", "content": "ML\\_NRANK\\_SPARSDES= \\[integer]   Default: **ML\\_NRANK\\_SPARSDES** \\= 5nDescription: This tag sets the number of highest eigenvalues to which the correlation is measured within the angular descriptor sparsification (within the machine learning force field method). | **Mind:** This tag is only available as of VASP 6\\.4\\.3\\. || --- |  --- This tag usually does not need to be changed by the user! For details on the theory of angular descriptor sparsification see here. For details on how to use the sparsification see the tag ML\\_LSPARSDES."}
{"file_name": "NPAR.md", "content": "NPAR= \\[integer]   Default: **NPAR** \\= number of coresnDescription: NPAR determines the number of bands that are treated in parallel.   --- VASP currently offers parallelization and data distribution over bands and/or over plane wave coefficients, and as of VASP.5\\.3\\.2, parallelization over **k**\\-points (no data distribution, see KPAR).To obtain high efficiency on massively parallel systems or modern multi\\-core machines, it is strongly recommended to use all at the same time. Most algorithms work with any data distribution (except for the single band conjugated gradient, which is considered to be obsolete). NPAR determines how many bands are treated in parallel. The current default is NPAR\\=*number of cores*, meaning that one orbital is treated by one core. NCORE is then set to 1\\. If NPAR\\=1, NCORE is set to the number of cores. This implies data distribution over plane wave coefficients only: all cores will work together on every individual band, i.e., the plane wave coefficients of each band are distributed over all cores. This is usually very slow and should be avoided. NPAR\\=*number of cores* is the optimal setting for platforms with a small communication bandwidth and is a good choice for up to 8 cores, as well as for machines with a single core per node and a Gigabit network. However, this mode substantially increases the memory requirements, because the non\\-local projector functions must be stored entirely on each core. In addition, substantial all\\-to\\-all communications are required to orthogonalize the bands. On massively parallel systems and modern multi\\-core machines we strongly urge to set  NPAR  \u2248 \\\\\\#of cores {\\\\displaystyle {\\\\textrm {NPAR}}\\\\approx {\\\\sqrt {{\\\\textrm {\\\\\\#of}}\\\\;{\\\\textrm {cores}}}}}  or NCORE  \\= \\\\\\#of cores  per compute node {\\\\displaystyle {\\\\textrm {NCORE}}\\={\\\\textrm {\\\\\\#of}}\\\\;{\\\\textrm {cores}}\\\\;{\\\\textrm {per}}\\\\;{\\\\textrm {compute}}\\\\;{\\\\textrm {node}}}   In selected cases, we found that this improves the performance by a factor of up to four compared to the default, and it also significantly improves the stability of the code due to reduced memory requirements. NCORE is available from VASP.5\\.2\\.13 on, and is more handy than the previous parameter NPAR.The user should either specify NCORE or NPAR, where NPAR takes a higher preference.The relation between both parameters is  NCORE  \\= \\\\\\#of cores  / NPAR {\\\\displaystyle {\\\\textrm {NCORE}}\\={\\\\textrm {\\\\\\#of}}\\\\;{\\\\textrm {cores}}/{\\\\textrm {NPAR}}}   The optimum settings for NPAR and LPLANE depend strongly on the type of machine you are using.Some recommended setups: * LINUX cluster linked by Infiniband, modern multicore machines: On a LINUX cluster with multicore machines linked by a fast network we recommend to set  ```LPLANE = .TRUE.NCORE  = number of cores per node (e.g. 4 or 8)LSCALU = .FALSE.NSIM   = 4  ``` If very many nodes are used, it might be necessary to set LPLANE\\=.FALSE., but usually this offers very little advantage. For long (e.g. molecular dynamics runs), we recommend to optimize NPAR by trying short runs for different settings.* LINUX cluster linked by 1 Gbit Ethernet, and LINUX clusters with single cores: On a LINUX cluster linked by a relatively slow network, LPLANE must be set to .TRUE., and the NPAR flag should be equal to the number of cores:  ```LPLANE = .TRUE.NCORE  = 1LSCALU = .FALSE.NSIM   = 4  ``` Mind that you need at least a 100 Mbit full duplex network, with a fast switch offering at least 2 Gbit switch capacity to find usefull speedups. Multi\\-core machines should be always linked by an Infiniband, since Gbit is too slow for multi\\-core machines.* Massively parallel machines (Cray, Blue Gene): On many massively parallel machines one is forced to use a huge number of cores. In this case load balancing problems and problems with the communication bandwidth are likely to be experienced. In addition the local memory is fairly small on some massively parallel machines; too small keep the real space projectors in the cache with any setting. Therefore, we recommend to set NPAR on these machines to \u221a*\\# of cores* (explicit timing can be helpful to find the optimum value). The use of LPLANE\\=.TRUE. is only recommended if the number of nodes is significantly smaller than NGX, NGY and NGZ.In summary, the following setting is recommended  ```LPLANE = .FALSE.NPAR   = sqrt(number of cores)NSIM   = 1  ```"}
{"file_name": "BSEELECTRON.md", "content": "BSEELECTRON= \\[real array]nDescription: BSEELECTRON sets the coordinates of the fixed electron of the exciton wavefunction  --- If BSEELECTRON is set in a BSE calculation, VASP computes exciton wavefunction for the first NBSEEIG states.The coordinates are provided in direct (fractional) coordinates. When fixing the position of the particle, ensure that it is not fixed exactly at the center of an atom or coincides with a node of the wavefunction. To avoid that, shift the fixed coordinate slightly away from the center of the atom. Furthermore, the wavefunction of the fixed particle is taken at the nearest   G {\\\\displaystyle \\\\mathbf {G} } \\-vector, whose exact position is written in the OUTCAR file   ```hole position is fixed at:  ```  or  ```electron position is fixed at:  ``` Related tags and sections------------------------- BSEHOLE, NBSEEIG, BSE calculations, Plotting exciton wavefunction  ---"}
{"file_name": "Intrinsic-reaction-coordinate_calculations.md", "content": "The potential energy profiles along the **intrinsic reaction coordinate** (IRC) can be computed via the method of Hratchian and Schlegel[\\[1]](#cite_note-hratchian:jpc:2002-1). The algorithm starts from the transition state and propagates the system via the damped\\-velocity\\-Verlet algorithm. The damping is realized via rescaling the velocity vector to a constant value (  v  0 {\\\\displaystyle v\\_{0}} ) after each propagation step. At the same time, the time step is adaptively changed so as to ensure that the trajectory generated by the algorithm does not differ from true IRC by more than the predefined tolerance factor   \u0394  0 {\\\\displaystyle \\\\Delta \\_{0}} . As an input, the structure of a well\\-relaxed transition state and the direction of the unstable vibration mode must be provided. For that purpose, a CONTCAR file from an improved\\-dimer\\-method calculation converged with a tight relaxation criterion (e.g., EDIFFG \\=\\-0\\.005\\) can be used. To obtain a complete energy profile along the IRC connecting two stable states, two independent calculations with positive (IRC\\_DIRECTION \\=1\\) and negative (IRC\\_DIRECTION \\=\\-1\\) initial displacement along the direction of the unstable mode must be performed.  The following parameters can be modified to affect the performance of the method:  * IRC\\_DIRECTION  direction of the initial displacement (\\-1\\|1 \u2013 negative\\|positive)* IRC\\_STOP the number of steps the energy must monotonously increase before the algorithm terminates. In order to avoid a premature termination, especially close to transition states., e.g., due to numerical noise, IRC\\_STOP should always be greater than 1\\.* IRC\\_DELTA0 the tolerance factor   \u0394  0 {\\\\displaystyle \\\\Delta \\_{0}}  in \u00c5* IRC\\_MINSTEP specifies the lower limit for the time step in fs* IRC\\_MAXSTEP specifies the upper limit for the time step in fs* IRC\\_VNORM0 the value of   v  0 {\\\\displaystyle v\\_{0}}  in \u00c5/fs \\- the smaller the value, the closer the computed trajectory follows the true IRC (but the more ionic steps are required, which might be a limitation if the calculation is performed at a DFT level) | **Mind:** This method is presently available only for fixed cell shape (i.e., ISIF \\= 2\\) simulations. || --- | | **Mind:** The calculation must be initialized from a very well\\-relaxed transition state (EDIFFG \\= \\-0\\.005 or less in absolute value). || --- | | **Mind:** This type of calculation can be also performed at the MLFF level. || --- | Practical example----------------- As practical example, let us consider the SN2 reaction of CH3Cl with Cl\\- for which we wish to determine potential energy profile along IRC using machine learned forcefield trained to reproduce PBE density functional approximation. The IRC calculation consists of two independent simulations corresponding to parts of path linking transition state with reactant and with product, respectively. For practical reasons, we shall therefore run the simulations in two different directories called, say, m and p, both of which should contain POSCAR, KPOINTS, POTCAR, INCAR and ML\\_FF files. The POSCAR file:  ```transition state for the SN2 reaction of CH3Cl with Cl-  1.00000000000000   12.0000000000000000    0.0000000000000000    0.0000000000000000    0.0000000000000000   12.0000000000000000    0.0000000000000000    0.0000000000000000    0.0000000000000000   12.0000000000000000  C    H    Cl    1     3     2 Direct 0.5850734246784209  0.5520914206000113  0.6939676081570985\u00a0! coordinates for atom 1 0.6198799799863561  0.5166828822917992  0.6192173893914401 0.5120438703668218  0.5155341457726120  0.7311383922253840 0.6232988535554732  0.6240585575728448  0.7315296645899942 0.4727762112937258  0.6675904758190063  0.5870243322899322 0.6973145053782144  0.4366510550400121  0.8010186348593505\u00a0! coordinates for atom N! unstable direction optimized by the dimer method 0.50309310E+00 -0.52116977E+00  0.48103627E+00            \u00a0! components for atom 1-0.29990134E-01  0.31072124E-01 -0.24160721E-01-0.37734828E-01  0.43431417E-01 -0.39422281E-01-0.41647034E-01  0.41752749E-01 -0.38921427E-01-0.20205452E+00  0.20762993E+00 -0.17619553E+00-0.19166655E+00  0.19728353E+00 -0.20233630E+00            \u00a0! components for atom N  ``` is simply a copy of a CONTCAR file from a well converged improved dimer calculation. Notice that besides usual structural input, POSCAR must contain unstable direction that is needed to initialize the algorithm. To obtain the ML\\_FF used in this example, the data included in compressed directory File:GenerateMLFF.zip should be used. The POTCAR file should be prepared for atoms C, H, and Cl and the KPOINTS file  ```Automatic 0Gamma1  1  10. 0. 0.  ``` The INCAR file located in directory m should contain the following lines:  ```IBRION = 40                  # invokes the IRC calculationIRC_DIRECTION = -1           # negative initial direction of movementIRC_STOP = 20                # terminate when IRC_STOP energies in row increaseIRC_VNORM0 = 0.0005          # affects accuracy, the smaller the better but the more                              # ionic steps neededNSW = 5000                   # maximal number of steps ISIF = 2NELECT = 22                  # the overall charge of this                             # system is -1 hence the number                             # of electrons is increased (not really needed when                              # the calculation is done at the MLFF level) ML_LMLFF = .TRUE.            # invoke MLFF ML_ISTART = 2                # sets the mode of MLFF to production   ``` The INCAR file located in directory p should differ from that in directory m only in the value of parameter IRC\\_DIRECTION , which should be set to positive 1\\. [](File_IrcExample1.html) Potential energy profile along intrinsic reaction coordinate generated in this practical example for the SN2 reaction of CH3Cl with Cl\\-.             Both calculations can be finished in just a few seconds and the potential energy profile along IRC: Both calculations can be finished in just a few seconds and the potential energy profile along IRC: shown on the figure above, can be obtained by a simple post\\-processing. For instance, this simple bash script ircShift.sh:  ```#!/usr/bin/bash e0=$(grep \"IRC (A):\" m/OUTCAR|awk '{print $5}'|head -1) grep \"IRC (A):\" m/OUTCAR|awk '{print $3,$5 - \"'${e0}'\"}' >tmp.tmpgrep \"IRC (A):\" p/OUTCAR|awk '{print $3,$5 - \"'${e0}'\"}' >>tmp.tmp sort -n tmp.tmp >ircShift.dat  ``` executed in a directory one level above directories m and p generates the file ircShift.dat containing data in two\\-column format that can be visualized using gnuplot, xmgrace, origin, or many other popular visualization tools."}
{"file_name": "ML_ABN.md", "content": "In context of the machine\\-learned force fields method this file serves as an output for the collected training data set. When running VASP with `ML_MODE = train, select` it is automatically written out whenever a learning step is performed. The file format is shared with the ML\\_AB input file, for further details please have a look at the ML\\_AB Wiki entry. An ML\\_ABN file can be reused as a starting point for continuation runs (`ML_MODE = train`) and local reference configuration re\\-selection runs (`ML_MODE = select`) simply by renaming (or copying) it to ML\\_AB.  ---"}
{"file_name": "Output_files.md", "content": "The main output file of VASP is the OUTCAR. The vasprun.xml\") contains similar information but in an xml format. The OSZICAR file contains the total energies of the electronic and ionic SCF steps, and it is useful for the monitoring of the calculation. When HDF5 support is enabled, a vaspout.h5 file is produced containing the main results of the VASP calculation. Here is a comprehensive list of all important output files: | BSEFATBAND | BSE eigenvalues used for \"fatband\" plots. || --- | --- || CHG | Contains charge density, lattice vectors and atomic coordinates. Should be used for visualization. || CHGCAR | Same as CHG but it contains also one\\-center occupancies. Should be used to restart VASP from existing charge density. || CONTCAR | Is the updated POSCAR file after each calculation, whether ionic movement was performed or not. || DOSCAR | Contains DOS and integrated DOS. || EIGENVAL | Contains Kohn\\-Sham eigenvalues for each k point after the end of the calculation. || ELFCAR | Contains electron localization function. || IBZKPT | Contains k\\-point coordinates and weights. || LOCPOT | Contains total local potential in eV. || OSZICAR | Information on each electronic and ionic SCF step. || OUTCAR | Main output file. || PARCHG | Contains partial charge densities. || PCDAT | Contains the pair correlation function. || PROCAR | Contains spd and site\\-projected wave function character. || PROOUT | Contains projection of wavefunction onto spherical harmonics. || REPORT | Contains output of various molecular dynamics caculations (umbrella integration, etc.). || TMPCAR | Contains wavefunction and ionic positions of previous ionic step. || vasprun.xml\") | Main output file in xml format. || vaspout.h5 | Main output file in hdf5 format. Required for the postprocessing with py4vasp. || vaspwave.h5 | Contains charge density and wave functions when output is directed to hdf5\\. || Wxxxx.tmp | Contains diagonal elements of screened exchange in BSE calculations. || WAVECAR | Binary file containing information such as wave function coefficients, eigenvalues, Fermi weights, etc. || WAVEDER | Contains derivative of wave functions with respect to k point. || WFULLxxxx.tmp | Store full screened exchange in BSE calculations. || XDATCAR | Contains ionic configuration for each output step of molecular dynamics simulations. | Pages in category \"Output files\"-------------------------------- The following 12 pages are in this category, out of 12 total. ### B * BSEFATBAND### C * CHGCAR* CONTCAR### D * DYNMATFULL### O * PCDAT### P * POT### V * Vaspout.h5* Vaspwave.h5### W * WAVECAR* WAVEDER* WFULLxxxx.tmp* Wxxxx.tmp"}
{"file_name": "EIGENVAL.md", "content": "The EIGENVAL file contains the Kohn\\-Sham\\-eigenvalues for all k\\-points, at the end of the simulation. For dynamic simulations (IBRION\\=0\\) the eigenvalues on the file are usually the ones predicted for the next step: i.e. the file is compatible with the CONTCAR file. For static calculations and relaxations (IBRION\\=\\-1\\|1\\|2\\) the eigenvalues are the solution of the KS\\-equations for the last step. Mind: For dynamic simulations (IBRION\\=0\\) the EIGENVAL filecontains predicted wavefunctions compatible with the CONTCAR file. If you want to use the eigenvalues for additional calculations, first copy the CONTCAR file to the POSCAR file and make another static (ISTART\\=1, NSW\\=0\\) continuation run with ICHARG\\=1\\.    ---"}
{"file_name": "HFRCUT.md", "content": "HFRCUT= \\[real]   Default: **HFRCUT** \\= 0nDescription: HFRCUT specifies how the Coulomb kernel is approximated at G\\=0 when the Fock energy and the exchange potential are evaluated.  --- In systems with periodic boundary conditions, the Coulomb energy and the Coulomb potential are usually evaluated under the assumption of a compensating background by introducing a compensation charge density. This is well\\-justified for the Hartree energy, where the compensation charge density stems from the ions. Yet, this assumption is not valid for the Fock exchange, which causes an error. For the Fock exchange potential and energy, one can correct the resulting error by assuming that the density matrix is local. The leading order correction is given by the difference between the electrostatic energy of a localized model charge density in a homogeneous background periodically repeated and the same model charge density in isolation. For details we refer to J. Paier *et al.,*[\\[1]](#cite_note-paier:jcp:05-1) Section II. D. 4\\.  * HFRCUT \\= 0: Ewald summation *or* method of Massida, Posternak, and Baldereschi depending on k\\-mesh[\\[2]](#cite_note-gygi:prb:86-2)[\\[3]](#cite_note-massidda:prb:93-3) If a regular automatic k\\-mesh and the standard 1/r Coulomb kernel are used, the correction is computed using Ewald summations. If the k\\-mesh is *not* regular (e.g., if the k\\-points are explicitly listed in the KPOINTS file) or if kernels different from the bare Coulomb kernel are used (e.g., HSE functional), the method of Massida, Posternak, and Baldereschi[\\[2]](#cite_note-gygi:prb:86-2)[\\[3]](#cite_note-massidda:prb:93-3) is used. This approach assumes that the model charge density is an error\\-function\\-like charge distribution in real space in order to handle the long\\-range nature of the potential in reciprocal space. It requires setting a decay constant for the error function, see HFALPHA. Both methods, the Ewald summation and the method of Massida, Posternak, and Baldereschi, are strictly equivalent for regular k\\-mesh.* HFRCUT \\= \\-1: Automated cutoff radius[\\[4]](#cite_note-spenceralavi:prb:08-4) An alternative recipe is to replace the 1/r Coulomb kernel with a truncated Coulomb kernel that is strictly zero beyond a certain cutoff radius. If HFRCUT is set to \\-1, the radial cutoff is chosen to be equivalent to the radius of the sphere with a volume of the unit cell times the total number of k\\-points in the full Brillouin zone. For instance, for a 4x4x4 k\\-point grid, that yields 64 times the volume of the unit cell.* HFRCUT \\= \\[cutoff radius]: Manually set cutoff radius in \u00c5ngstr\u00f6m. In the limit of many k\\-points, both methods (HFRCUT\\=\\-1 and HFRCUT\\=0\\) should yield identical results. In our experience, the HFRCUT\\=\\-1 converges more rapidly for systems with a gap, as well as molecules and atoms, whereas HFRCUT\\=0 converges faster for metallic systems. It is expedient to first converge the energies with respect to the number of k\\-points for both methods and then select for subsequent calculations the method that converges more rapidly. A detailed comparison of the convergence of the different methods for metallic and gapped materials was made by Sundararaman and Arias[\\[5]](#cite_note-sundararamanarias:prb:13-5)."}
{"file_name": "INCREM.md", "content": "INCREM= \\[real array]   Default: **INCREM** \\= 0nDescription: INCREM controls the transformation velocity in the slow\\-growth approach (in case VASP was compiled with \\-Dtbdyn).  --- In slow\\-growth simulations (MDALGO\\=1 \\| 2\\), the value of each controlled geometric parameter with STATUS\\=0 is increased by INCREM in every simulation step. It must be supplied for each controlled geometric parameter for which STATUS\\=0 was specified in the ICONST\\-file."}
{"file_name": "VACPOTFLAT.md", "content": "VACPOTFLAT= \\[real]   Default: **VACPOTFLAT** \\= 0\\.1nDescription: Maximum permissible 2D\\-averaged electric field for a region considered to be field\\-free in eV/\u00c5.  --- A region of space is considered to be field\\-free if the 2D\\-averaged electric field (LVACPOTAV\\=True) is smaller than VACPOTFLAT. | **Tip:** Increase VACPOTFLAT for a quick estimation of the vacuum potential and decrease for a precise value. If the cell is large and EDIFF small, the final result of LVACPOTAV should be independent of VACPOTFLAT. || --- |"}
{"file_name": "Standard_relaxation.md", "content": "Used INCAR Tags--------------- ANDERSEN\\_PROB, EDIFF, EDIFFG, ENMAX, IBRION, ISMEAR, MDALGO, NSW, POTIM, SIGMA, SYSTEM, TEBEG, TEEND Download-------- h2o\\_on\\_tio2\\.tgz, sub\\-folder std\\_relaxation  --- To the list of examples\") or to the main page"}
{"file_name": "APACO.md", "content": "APACO= \\[real]   Default: **APACO** \\= 10nDescription: APACO sets the maximum distance in the evaluation of the pair\\-correlation function (in \u00c5).  --- VASP evaluates the pair\\-correlation function each NBLOCK steps and writes it after NBLOCK\u00d7KBLOCK steps to the PCDAT file."}
{"file_name": "FBIAS_R0.md", "content": "FBIAS\\_R0= \\[real (array)]nDescription: Defines the half\\-step position for the bias potential.  --- FBIAS\\_R0 defines the half\\-step position (  \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }} ) for the Fermi\\-like step\\-shaped bias potential of the following form:  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  4  ) \\=  \u2211  \u03bc \\= 1  M  4  A  \u03bc  1 \\+  exp  \\[  \u2212  D  \u03bc  (  \u03be ( q )  \u03be  0 \u03bc  \u2212 1 )  ]  , {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{4}})\\=\\\\sum \\_{\\\\mu \\=1}^{M\\_{4}}{\\\\frac {A\\_{\\\\mu }}{1\\+{\\\\text{exp}}\\\\left\\[\\-D\\_{\\\\mu }({\\\\frac {\\\\xi (q)}{\\\\xi \\_{0\\\\mu }}}\\-1\\)\\\\right]}},\\\\;} where the sum runs over all (  M  4 {\\\\displaystyle M\\_{4}} ) coordinates the potential acts upon, which are defined in the ICONST file by setting the `status` to 4\\.The units of   \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }}  correspond to units of the coordinate the potential acts upon (e.g.,   \u00c5 {\\\\displaystyle {\\\\mathrm {\\\\AA} }}  for coordinates with `flag` R,   r a d . {\\\\displaystyle rad.}  for coordinates with `flag` A, dimensionless for coordinates with `flag` W, etc...).The number of items defined via FBIAS\\_R0 must be equal to   M  4 {\\\\displaystyle M\\_{4}} . Otherwise, the calculation terminates with an error message."}
{"file_name": "CUTOFF_SIGMA.md", "content": "CUTOFF\\_SIGMA= \\[real] ( \\[real] )n| Default: **CUTOFF\\_SIGMA** | \\= 0\\.1 |  || --- | --- | --- | Description: CUTOFF\\_SIGMA specifies the broadening   \u03c3 {\\\\displaystyle \\\\sigma }  in eV for the cutoff function specified by CUTOFF\\_TYPE.  --- Corresponds to a broadening of the cutoff function used in the  one\\-shot method \"Wannier functions\") to obtain Wannier functions.The meaning of   \u03c3 {\\\\displaystyle \\\\sigma }  depends on the CUTOFF\\_TYPE tag. For spin\\-polarized calculations (`ISPIN = 2`), two values can be specified for CUTOFF\\_SIGMA, one for each spin channel.If only a single value is specified, it will be used for both spin channels."}
{"file_name": "Main_page.md", "content": "| Take a tour | Install VASP | Get a license || --- | --- | --- || Release notes | VASP website and news | Forum || Learn, examples, Wiki tutorials | py4vasp | Portal | Featured topics--------------- | **Category** | *subtopics (amongst others)* || --- | --- || Theoretical background | Pseudopotentials,  PAW formalism, phonons, machine learning force fields, hybrid functionals, GW approximation, etc. || Calculation setup | Installation, input files, pseudopotentials, output files, INCAR tags, How to's, etc. || Electronic minimization | Self\\-consistency cycle, blocked\\-Davidson algorithm, RMM\\-DIIS, direct optimization of the orbitals, preconditioning, density mixing, etc. || Electronic ground\\-state properties | Band structure, density of states, partial DOS and on\\-site charge and magnetization (LORBIT), electrostatics, charge density, potential, etc. || Spin degree of freedom | Spin\\-orbit coupling, noncollinear magnetism, spin spirals, constrained magnetism, etc. || Exchange\\-correlation functionals | LDA, GGA, meta\\-GGA, DFT\\+U, hybrid functionals, van der Waals functionals. || Symmetry and structure | Crystal symmetry, reciprocal space, surfaces, pair\\-correlation function for liquids, etc. || Ionic mimimization | Structure optimization, ionic\\-mimimization methods, forces, transition states, etc. || Molecular dynamics | Barostats, thermostats, ensembles, etc. || Ensemble properties | Monitoring geometric parameters, pair\\-correlation function, thermal conductivity, diffusion, etc. || Advanced molecular\\-dynamics sampling | Interface pinning, constrained molecular dynamics, metadynamics, thermodynamic integration, etc. || Machine\\-learned force fields | Training and application of force fields. || Phonons | Lattice vibrations,  electron\\-phonon interactions. || Response theory | Static and frequency\\-dependent dielectric properties, Berry phases, spectroscopy (UV, VIS, X\\-ray), phonons, etc. || Many\\-body perturbation theory | ACFDT, BSE, GW, MP2, CRPA. || Localized basis and projection | Obtaining Wannier functions, SCDM, partial DOS and on\\-site charge and magnetization (LORBIT), Constrained\\-random\\-phase approximation || Performance | Parallelization, memory management, profiling, etc. | Support------- If you have questions or run into trouble, please have a look at the known issues and/or post a question on the VASP Forum. | **Mind:** We offer support on a courtesy basis only, not as a contractual service. || --- |  --- Back to the top"}
{"file_name": "NEDOS.md", "content": "NEDOS= \\[integer]   Default: **NEDOS** \\=   301 {\\\\displaystyle 301}   Description: NEDOS specifies the number of grid points on which the DOS is evaluated  --- The energy range between EMIN and EMAX is divided intoNEDOS intervals, the DOS for each corresponding energy is written inDOSCAR. **Mind**: If the DOS has narrow peaks, the default NEDOS may be toosmall to resolve all peaks properly. It may be helpful to compare the DOSto the integrated DOS (also written on DOSCAR) to find out whetherthis is the case: at least one peak should show up at every step of the integrated DOS.If so, the smallest peak widths from the dispersion ofthe respective bands can be estimated by having a look at the Kohn\\-Sham eigenvalues writtenin OUTCAR. NEDOS has to be chosen sufficiently large to resolve this dispersion. Alternatively, theenergy interval defined by EMIN and EMAX can be modified. NEDOS is also used to set the total number of frequency points when calculating the dielectric function."}
{"file_name": "ML_MCONF_NEW.md", "content": "ML\\_MCONF\\_NEW= \\[integer]   Default: **ML\\_MCONF\\_NEW** \\= 5nDescription: This tag sets the number of configurations that are stored temporarily as candidates for the training data in the machine learning force field method.  --- | **Warning:** This value is close to optimal for on\\-the\\-fly learning, and should usually not be changed. || --- | The use of this tag in combination with the learning algorithms is described here: here.If force fields are reparameterized (`ML_MODE = select`), calculations are usually more efficient if this parameter is increased to values around 10\\-16 and setting `ML_CDOUB = 4`. This is particularly relevant if the ML\\_AB file is large."}
{"file_name": "HILLSPOT.md", "content": "During the metadynamics simulation, the time\\-dependent bias potential (see MDALGO) is written in file HILLSPOT using the same format as for the PENALTYPOT file. If the metadynamics is performed as a sequence of shorter runs (which is recommended), the HILLSPOT file should be copied into PENALTYPOT at the end of each run. The following is an example of script running the sequence of 100 simulations:  ```#!/bin/bash i=1while [ $i -le 100 ] do  cp POSCAR POSCAR.$i  ./vasp  cp CONTCAR POSCAR  cp REPORT REPORT.$i  cp HILLSPOT PENALTYPOT  let i=i+1done  ``` Related Tags and Sections------------------------- HILLS\\_BIN,HILLS\\_H,HILLS\\_W,MDALGO  ---"}
{"file_name": "ALGO.md", "content": "ALGO= Normal \\| VeryFast \\| Fast \\| Conjugate \\| All \\| Damped \\| Subrot \\| Eigenval \\| Exact \\| None \\| Nothing \\| CHI \\| G0W0 \\| GW0 \\| GW \\| scGW0 \\| scGW \\| G0W0R \\| GW0R \\| GWR \\| scGW0R \\| scGWR \\| ACFDT \\| RPA \\| ACFDTR \\| RPAR \\| BSE \\| TDHF   Default: **ALGO** \\= NormalnDescription: the ALGO tag is a convenient option to specify the electronic minimization algorithm (as of VASP.4\\.5\\) and/or to select the type of GW calculations.   --- * ALGO\\=Normal selects IALGO\\=38 (blocked\\-Davidson\\-iteration scheme). * ALGO\\=VeryFast selects IALGO\\=48 (RMM\\-DIIS). This algorithm has been updated for vasp.6 to increase robustness. To select the version that was available in vasp.5, select \"Old VeryFast\". hybrid functionals are not supported for ALGO\\=VeryFast. The algorithm can be combined with LDIAG\\=.FALSE. to conserve the initial orbital order (when orbitals are read from the WAVECAR file). * ALGO\\=Old VeryFast (or \"ov\" or \"vo\") selects IALGO\\=48 (RMM\\-DIIS). This option is available in vasp.6 and selects the version of the RMM\\-DIIS algorithm that was available in vasp.5\\. * ALGO\\=Fast selects a fairly robust mixture of the blocked\\-Davidson and RMM\\-DIIS algorithms. In this case, blocked Davidson (IALGO\\=38\\) is used for the initial phase, and then VASP switches to RMM\\-DIIS (IALGO\\=48\\). Subsequently, for each ionic update, one IALGO\\=38 sweep is performed for each ionic step (except the first one). This algorithm has been updated for vasp.6 to increase robustness. To select the version that was available in vasp.5, select \"Old Fast\". * ALGO\\=Old Fast (or \"of\" or \"fo\"). This option is available in vasp.6 and selects the ALGO\\=Fast algorithm that was available in vasp.5\\. * ALGO\\=Conjugate or ALGO\\=All selects an \"all band simultaneous update of orbitals\" (IALGO\\=58, both tags are synonymous). * ALGO\\=Damped selects a damped velocity friction algorithm (IALGO\\=53\\). The algorithm can be combined with LDIAG\\=.FALSE. to conserve the initial orbital order (when orbitals are read from the WAVECAR file). * ALGO\\=Exact performs an exact diagonalization (IALGO\\=90\\). * ALGO\\=Subrot selects subspace rotation or diagonalization in the sub\\-space spanned by the orbitals (IALGO\\=4\\). * ALGO\\=Eigenval allows to recalculate one\\-electron energies, the density of state and perform selected postprocessing using the current orbitals (IALGO\\=3\\) e.g. read from the WAVECAR file. * ALGO\\=None or ALGO\\=Nothing allows to recalculate the density of states or perform selected postprocessing, using the current orbitals and one electron energies (IALGO\\=2\\) e.g. read from the WAVECAR file. More details can be found under the documentation for the tag IALGO. | **Tip:** Except for 'None', 'Nothing' and 'Exact' (which must be spelled out), the first letter determines the applied algorithm. || --- | Conjugate, Subrot, Eigenval, None and Nothing are only supported by vasp.5\\.2\\.9 and newer versions. | **Warning:** For fast convergence, LMAXMIX must be set appropriately. E.g. LMAXMIX\\=6 for systems including f electrons. || --- | ALGO for response functions and GW calculations and ACFDT/RPA calculations---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- The following tags are available as of VASP.5\\.X.  * ALGO\\=CHI calculates the response functions only. * ALGO\\=TDHF selects TDHF calculations using the VASP internal Cassida code see BSE calculations, (available as of VASP.5\\.2\\.12\\) * ALGO\\=BSE selects BSE calculations using the VASP internal Cassida code see BSE calculations, (available as of VASP.5\\.4\\.1\\) * ALGO\\=Timeev performs a delta\\-pulse in time and then performs timepropagation * ALGO\\=ACFDT selects RPA total energy calculations see ACFDT/RPA calculations * ALGO\\=RPA synonymous to ACFDT see ACFDT/RPA calculations (available as of VASP.5\\.3\\.1\\) GW tags have been renamed in VASP as follows | \\< 5\\.2\\.12 | scGW | scGW0 | GW | GW0 | N/A | N/A || --- | --- | --- | --- | --- | --- | --- || \\>\\= 5\\.2\\.12, \\< 6 | QPGW | QPGW0 | GW | GW0 | N/A | N/A || \\>\\= 6 | QPGW | QPGW0 | EVGW | EVGW0 | GWR | GW0R | * ALGO\\=EVGW0 selects single\\-shot *G*0*W*0 calculations or partially self\\-consistent *GW* calculations. The orbitals (wavefunctions) of the previous groundstate calculations are maintained, and G0W0 calculations are performed. If NELM is set, several iterations are performed, and the QP energies are updated in the calculation of *G* (for details, see EVGW0 calculations). * ALGO\\=EVGW selects single\\-shot *G*0*W*0 calculations or partially self\\-consistent *GW* calculations. The orbitals of the previous groundstate calculations are maintained, and G0W0 calculations are performed. If NELM is set, several iterations are performed, and the QP energies are updated in the calculation of *G* AND *W* (for details, see self\\-consistent EVGW and QPGW calculations). * ALGO\\=QPGW0 selects self\\-consistent *GW* calculations including off\\-diagonal components of the selfenergy. A full update of the QP energies AND one\\-electron orbitals is performed in the calculation of *G* only (for details see QPGW0 calculations). * ALGO\\=QPGW selects self\\-consistent *GW* calculations, including off\\-diagonal components of the selfenergy. A full update of the QP energies AND one\\-electron orbitals is performed in the calculations of *G* AND *W* (for details, see QPGW calculations). Following tags are available as of VASP.6 * ALGO\\=RPAR selects low scaling RPA total energy calculations (for details see ACFDT/RPA calculations) * ALGO\\=ACFDTR synonym for RPAR (for details see ACFDT/RPA calculations) * ALGO\\=ACFDTRK in combination with LMP2LT \\= .TRUE. selects the low scaling MP2 total energy calculations (for details see the MP2 ground state Tutorial) * ALGO\\=GW0R selects self\\-consistent GW0 calculations, where only the Green's function *G* is updated from the corresponding Dyson. The screened potential *W* remains unchanged after the first iteration. NELM iteration cycles are performed (see self\\-consistent GW calculations). * ALGO\\=GWR selects self\\-consistent GW calculations, where both, *G* and *W* are updated from the corresponding Dyson equation. NELM iteration cycles are performed. (for details see self\\-consistent GW calculations). * ALGO\\=G0W0R selects single\\-shot GW calculations, non\\-interacting *G* and *W* are determined from Kohn\\-Sham system and NELM tag is ignored. Use this tag for single\\-shot QP energies and first\\-order corrections to the density matrix (for details, see single\\-shot GW calculations). | **Important:** Changes as of VASP.6\\.3: || --- | * NELMGW replaces NELM in self\\-consistent GW calculations. * ALGO\\=CRPA selects constrained RPA alculations. | **Important:** available as of VASP.6\\.4: || --- | * ALGO\\=EVGW0R selects the low\\-scaling analog of EVGW0, that is the low\\-scaling partially self\\-consistent GW calculations, where non\\-interacting *G* and *W* are determined from Kohn\\-Sham system and NELMGW specifies the number of self\\-consistent loops for *G*. *W* is kept on the Kohn\\-Sham level. Related tags and sections------------------------- IALGO,LDIAG,Electronic minimization Examples that use this tag  ---"}
{"file_name": "Hydrogenic_radial_function.md", "content": "*n*s type Hydrogen radial wave functions | n   {\\\\displaystyle n}  n | R ( r )   {\\\\displaystyle R(r)}  R(r) || --- | --- || 1   {\\\\displaystyle 1}  1 | 2  \u03b1  3  /  2   exp \u2061 ( \u2212 \u03b1 r )   {\\\\displaystyle 2\\\\alpha ^{3/2}\\\\exp(\\-\\\\alpha r)}  2\\alpha ^{{3/2}}\\exp(-\\alpha r) || 2   {\\\\displaystyle 2}  2 | 1  2   2       \u03b1  3  /  2   ( 2 \u2212 \u03b1 r ) exp \u2061 ( \u2212 \u03b1 r  /  2 )   {\\\\displaystyle {\\\\frac {1}{2{\\\\sqrt {2}}}}\\\\alpha ^{3/2}(2\\-\\\\alpha r)\\\\exp(\\-\\\\alpha r/2\\)}  {\\frac  {1}{2{\\sqrt  2}}}\\alpha ^{{3/2}}(2-\\alpha r)\\exp(-\\alpha r/2) || 3   {\\\\displaystyle 3}  3 | 4 27     \u03b1  3  /  2   ( 1 \u2212 2 \u03b1 r  /  3 \\+ 2  \u03b1  2    r  2    /  27 ) exp \u2061 ( \u2212 \u03b1 r  /  3 )   {\\\\displaystyle {\\\\sqrt {\\\\frac {4}{27}}}\\\\alpha ^{3/2}(1\\-2\\\\alpha r/3\\+2\\\\alpha ^{2}r^{2}/27\\)\\\\exp(\\-\\\\alpha r/3\\)}  {{\\sqrt  {\\frac  {4}{27}}}}\\alpha ^{{3/2}}(1-2\\alpha r/3+2\\alpha ^{2}r^{2}/27)\\exp(-\\alpha r/3) |"}
{"file_name": "LSMP2LT.md", "content": "LSMP2LT= .FALSE. \\| .TRUE.n| Default: **LSMP2LT** | \\= .FALSE. |  || --- | --- | --- | Description: LSMP2LT selects a stochastic Laplace transformed MP2 algorithm.  --- If LSMP2LT\\=.TRUE. and ALGO\\=ACFTDRK is set, a quartic scaling stochastic Laplace transformed MP2 algorithm is selected.[\\[1]](#cite_note-schaefer:JCP2017-1) This tag should be used in combination with KPAR to tweak parallelization as described in this tutorial."}
{"file_name": "VALUE_MIN.md", "content": "VALUE\\_MIN= \\[real array]nDescription: VALUE\\_MIN sets the lower limits for the monitoring of geometric parameters (in case VASP was compiled with \\-Dtbdyn).  --- For MDALGO\\=1 \\| 2, the geometric parameters defined in the ICONST file may be monitored without being subjected to a constraint or bias potential (STATUS\\=7 in the ICONST file). If all values of monitored parameters defined in the ICONST file (STATUS\\=7) are smaller than VALUE\\_MIN or larger than VALUE\\_MAX, the simulation terminates. Upper limits for monitored coordinates, must be supplied for each geometric parameter in the ICONST file with STATUS\\=7."}
{"file_name": "LATTICE_CONSTRAINTS.md", "content": "LATTICE\\_CONSTRAINTS= \\[logical]\\[logical]\\[logical]nDescription: Sets three boolean to selectively allow changes in the lattice vectors.  --- The lattice in VASP is defined by 3 lattice vectors   a  1 {\\\\displaystyle \\\\mathbf {a} \\_{1}}  ,  a  2 {\\\\displaystyle \\\\mathbf {a} \\_{2}}  ,  a  3 {\\\\displaystyle \\\\mathbf {a} \\_{3}} , whichare defined in the POSCAR file. The lattice can be represented by the following matrix:  A  \\=  \\[  a  11  a  12  a  13  a  21  a  22  a  23  a  31  a  32  a  33  ]  . {\\\\displaystyle \\\\mathbf {A} \\={\\\\begin{bmatrix}a\\_{11}\\&a\\_{12}\\&a\\_{13}\\\\\\\\a\\_{21}\\&a\\_{22}\\&a\\_{23}\\\\\\\\a\\_{31}\\&a\\_{32}\\&a\\_{33}\\\\end{bmatrix}}.} The tag LATTICE\\_CONSTRAINTS can be used to constrain certain entries of this matrix. Orthorhombic case----------------- For orthorhombic boxes the lattice   A {\\\\displaystyle \\\\mathbf {A} }  will be a diagonal matrix of the form:  A  \\=  \\[  a  11  0  0  0  a  22  0  0  0  a  33  ]  , {\\\\displaystyle \\\\mathbf {A} \\={\\\\begin{bmatrix}a\\_{11}\\&0\\&0\\\\\\\\0\\&a\\_{22}\\&0\\\\\\\\0\\&0\\&a\\_{33}\\\\end{bmatrix}},} Therefore by setting one of the entries of LATTICE\\_CONSTRAINTS to FALSE the lattice parameter in this direction will not be allowed to change. For MD simulations (IBRION\\=0\\), we recommend using LATTICE\\_CONSTRAINTS for (orthorhombic) liquids in the isobaric\\-isothermal (NpT) ensemble in the following way:  ```LATTICE_CONSTRAINTS = .FALSE. .FALSE. .TRUE.  ``` This way, the first two lattice constants are not allowed to change. The third lattice constant needs to be free to allow volume changes for the barostat. The system is then like a piston. The constraints are necessary for liquids in NpT simulations because if all lattice degrees of freedom are allowed to relax, irreversible deformations of the cell are very likely to happen. This can lead to undesirable results like a very flat supercell, which cannot be used to obtain valid MD trajectories. For structure relaxation (IBRION\\=1,2\\), LATTICE\\_CONSTRAINTS is useful to relax the lattice constants of 2D materials. In case of a slab in the   a  1 {\\\\displaystyle \\\\mathbf {a} \\_{1}}  \\-  a  2 {\\\\displaystyle \\\\mathbf {a} \\_{2}}  plane, add vacuum padding along   a  3 {\\\\displaystyle \\\\mathbf {a} \\_{3}}  and set  ```LATTICE_CONSTRAINTS = .TRUE. .TRUE. .FALSE.  ``` Non\\-orthorhombic case---------------------- For non\\-orthorhombic boxes LATTICE\\_CONSTRAINTS is more complicated to use. The tag will set certain rows and columns of the stress tensor  \u03c3  \\=  \\[  x x  x y  x z  y x  y y  y z  z x  z y  z z  ]  , {\\\\displaystyle \\\\mathbf {\\\\sigma } \\={\\\\begin{bmatrix}xx\\&xy\\&xz\\\\\\\\yx\\&yy\\&yz\\\\\\\\zx\\&zy\\&zz\\\\end{bmatrix}},} to zero. By setting certain entries of the stress tensor to zero the corresponding entries of the lattice   A {\\\\displaystyle \\\\mathbf {A} }  will not be updated.For example when setting LATTICE\\_CONSTRAINTS \\= .FALSE. .TRUE. .TRUE. the used stress tensor will look like  \u03c3  \\=  \\[  0  0  0  0  y y  y z  0  z y  z z  ]  , {\\\\displaystyle \\\\mathbf {\\\\sigma } \\={\\\\begin{bmatrix}0\\&0\\&0\\\\\\\\0\\&yy\\&yz\\\\\\\\0\\&zy\\&zz\\\\end{bmatrix}},} and therefore the first row and the first column of the lattice   A {\\\\displaystyle \\\\mathbf {A} }  will not change.Another example would be to set LATTICE\\_CONSTRAINTS \\= .FALSE. .TRUE. .FALSE. resulting in the followingstress tensor  \u03c3  \\=  \\[  0  0  0  0  y y  0  0  0  0  ] {\\\\displaystyle \\\\mathbf {\\\\sigma } \\={\\\\begin{bmatrix}0\\&0\\&0\\\\\\\\0\\&yy\\&0\\\\\\\\0\\&0\\&0\\\\end{bmatrix}}} So only the   y y {\\\\displaystyle yy}  /  a  22 {\\\\displaystyle a\\_{22}}  entry of the lattice   A {\\\\displaystyle \\\\mathbf {A} }  will change.  | **Mind:** Note that for non\\-orthorhombic boxes the angles between the lattice vectors       a   1     {\\\\displaystyle \\\\mathbf {a} \\_{1}}   _{1}},       a   2     {\\\\displaystyle \\\\mathbf {a} \\_{2}}   _{2}},       a   3     {\\\\displaystyle \\\\mathbf {a} \\_{3}}   _{3}} will not be conserved. || --- | | **Mind:** LATTICE\\_CONSTRAINTS in combination with IBRION\\=1,2 is available from VASP 6\\.4\\.3\\. || --- |"}
{"file_name": "Molecular_dynamics_calculations.md", "content": "To run a basic molecular dynamics calculation perform the following steps: * Choose a POSCAR containing a large enough super cell.* If a continuation run is performed copy CONTCAR to POSCAR or possibly deliver initial velocities in the POSCAR file. They are written after the Wycoff positions in an own paragraph. If no initial velocities are provided random velocities are assumed at the beginning of the calculation. This is fully ok but the user should be aware that due to the initial random velocities the trajectories obtained from different calculations are difficult to compare.* Set main INCAR tags:\t+ IBRION\\=0: Molecular dynamics calculations are enabled by setting the IBRION tag to 0\\.\t+ POTIM: This tag sets the time step in fs for the molecular dynamics run.\t+ NSW: This tag sets the number of steps performed in the molecular dynamics run.\t+ TEBEG: If a thermostat is used define the desired temperature at which the molecular dynamics calculations should run.\t+ ISIF (optional).\t+ MDALGO: This tag decides with which thermostat the molecular dynamics calculation is executed. For regular molecular dynamics calculations the thermostat is selected by a one digit number (e.g. 1 for Andersen, 2 for Nose\\-Hoover etc.). For biased molecular dynamics, metadynamics etc. the thermostat is selected the same way from VASP 6 or higher. In VASP 5\\.x it is selected by a two digit number where the first digit corresponds to the thermostat analogously to regular molecular dynamics and the second digit corresponds to the molecular dynamics type (e.g. 11 metadynamics with Andersen thermostat, 21 metadynamics with Nose\\-Hoover thermostat etc.). The NVE ensemble is a special case. It is available by selecting the Andersen thermostat and setting no collisions with the heat bath (ANDERSEN\\_PROB\\=0\\).\t+ ISIF: In molecular dynamics calculations this tag is used to choose the NVT ensemble or NpT ensemble (the NVE ensemble is a special case!). For ISIF\\=2 the volume is kept constant and the NVT ensemble is used. Using this tag the stress tensor is calculated and hence the pressure can be monitored. For ISIF\\=3 the stress tensor (pressure) is kept constant and the NpT ensemble is used. Using this tag the volume is calculated and can be monitored.* Decide which ensemble to use:\t+ NVT ensemble: Set ISIF\\=2\\.\t+ NpT ensemble: Set ISIF\\=3\\.\t+ NVE ensemble: Set MDALGO\\=1 and ANDERSEN\\_PROB\\=0\\.0\\.* Decide which thermostat to use (the combination of thermostats and ensembles is given in table):\t+ Andersen thermostat: Set MDALGO\\=1\\. Also set ANDERSEN\\_PROB\\>0\\.0 to control the stochastic update frequency of the thermostat.\t+ Nose\\-Hoover thermostat: Set MDALGO\\=2\\. Also set SMASS\\>0\\.0 to control the coupling to the heat bath.\t+ Langevin thermostat: Set MDALGO\\=3\\. Also set LANGEVIN\\_GAMMA\\>0\\.0 to control the friction parameter. If the NpT ensemble is used (by setting ISIF\\=3\\) additionally the friction coefficient of the lattice LANGEVIN\\_GAMMA\\_L has to be provided too. The following combinations of thermostats and barostats is possible: |  | Thermostat | | | || --- | --- | --- | --- | --- || Ensemble | Andersen | Nose\\-Hoover | Langevin | Multiple Andersen || Microcanonical (NVE) | MDALGO\\=1, ANDERSEN\\_PROB\\=0\\.0 | | | || Canonical (NVT) | MDALGO\\=1 | MDALGO\\=2 | MDALGO\\=3 | MDALGO\\=13 || ISIF\\=2 | ISIF\\=2 | ISIF\\=2 | ISIF\\=2 || Isobaric\\-isothermal (NpT) | not available | not available | MDALGO\\=3 | not available || ISIF\\=3 || Isoenthalpic\\-isobaric (NpH) | MDALGO\\=3, ISIF\\=3, LANGEVIN\\_GAMMA\\=LANGEVIN\\_GAMMA\\_L\\=0\\.0 | | | | Compilation----------- To run molecular dynamics calculation VASP has to be compiled using the \\-Dtbdyn precompiler flag in the makefile.include file. A sample input using this tag would look like this:  ```CPP     = $(CPP_) -DHOST=\\\"IFC9_fftw\\\" \\          -Dkind8 -DNGXhalf  -DCACHE_SIZE=12000 -DPGF90 -Davoidalloc  \\          -Dtbdyn  ```  ---"}
{"file_name": "KPUSE.md", "content": "KPUSE= \\[integer array]   Default: **KPUSE** \\= not setnDescription: KPUSE sets a list of **k** points that contribute to calculating the partial charge density.  --- IBAND selects a subset of *k'* points for which the partial charge density is calculated when LPARD \\= .TRUE..Partial charge densities are written to the PARCHG file, or one of its variants, depending on the setting of LSEPB and LSEPK. | **Mind:** All **k** point weights will be internally reset to 1 if KPUSE is specified. Thus results are usually only correct if the groundstate calculation and the partial charge post\\-processing is performed with ISYM \\= \\-1\\. || --- | E.g. if `KPUSE = 1 4 7`the charge density will be calculated for the three **k** points 1, 4, and 7\\."}
{"file_name": "SYMPREC.md", "content": "SYMPREC= \\[real]   Default: **SYMPREC** \\=   10  \u2212 5 {\\\\displaystyle 10^{\\-5}}   Description: SYMPREC determines to which accuracy the positions in the POSCAR file must be specified (as of VASP.4\\.4\\.4\\).  --- SYMPREC determines how accurately the positions in the POSCAR file must be specified.The default, SYMPREC\\=10\\-5, is usually large enough, even if the POSCAR file has been generated with single precision accuracy.Increasing SYMPREC means that the positions in the POSCAR file can be specified with less accuracy (increasing fuzziness). Please also have a look at this section."}
{"file_name": "BPARAM.md", "content": "BPARAM= \\[real]   Default: **BPARAM** \\= 6\\.3nDescription: The tag BPARAM specifies the value of the parameter   b {\\\\displaystyle b}  in the kernel of the nonlocal rVV10 correlation functional.  --- BPARAM should be set to 6\\.3, 15\\.7, 10, or 11\\.95 for the rVV10,[\\[1]](#cite_note-sabatini:prb:2013-1) SCAN\\+rVV10,[\\[2]](#cite_note-peng:prx:2016-2) PBE\\+rVV10L,[\\[3]](#cite_note-peng:prb:2017-3) and r  2 {\\\\displaystyle ^{2}} SCAN\\+rVV10 [\\[4]](#cite_note-ning:prb:2022-4) functionals, respectively."}
{"file_name": "NHC_NRESPA.md", "content": "NHC\\_NRESPA= \\[integer]   Default: **NHC\\_NRESPA** \\= 1nDescription: The number of subdivisions of the integration step used in propagation of thermostat variables in Nos\u00e9\\-Hoover\u2013chain (NHC) thermostat.   --- NHC\\_NRESPA sets the number of subdivisions of the integration step used in propagation of thermostat variables in Nos\u00e9\\-Hoover\u2013chain (NHC) thermostat. This might be needed in accurate calculations where, due to rapidly varying terms appearing in thermostat variables propagators could cause significant drifts of total energy (including energy contributions due to thermostat), which is a conserved quantity."}
{"file_name": "LDAUJ.md", "content": "LDAUJ= \\[real array]   Default: **LDAUJ** \\= NTYP\\*0\\.0nDescription: Sets the effective on\\-site exchange interactions (eV).  --- LDAUJ specifies the strength of the effective on\\-site exchange interactions in eV. It must hold one value for each atomic species. | **Warning:** The total energy will depend on the parameters     U   {\\\\displaystyle U}  U (LDAUU) and     J   {\\\\displaystyle J}   (LDAUJ). It is, therefore, not meaningful to compare the total energies resulting from calculations with different     U   {\\\\displaystyle U}  U and/or     J   {\\\\displaystyle J}  ; or     U \u2212 J   {\\\\displaystyle U\\-J}   in the case of Dudarev's approach (LDAUTYPE\\=2\\). || --- | | **Mind:** For LDAUTYPE\\=3, the LDAUU and LDAUJ tags specify the strength (in eV) of the spherical potential acting on the spin\\-up and spin\\-down manifolds, respectively. || --- |"}
{"file_name": "Self-consistency_cycle.md", "content": "[](File_SCC.html) Fig. 1: the self\\-consistency cycle The term **self\\-consistency cycle** (SCC) denotes a category of algorithms that determine the electronic ground state by a combination of iterative matrix diagonalization and density mixing. Figure 1\\. shows a procedural flowchart of the self\\-consistency cycle: 1. When starting from scratch, the SCC starts with an initial guess for the electronic density of the system under consideration: VASP uses the approximation of overlapping atomic charge densities. The orbitals are initialized with random numbers. Alternatively, the SCC may (re\\-)start from the orbitals and/or electronic density obtained in a previous calculation.2. The density defines the Hamiltonian.3. By means of iterative matrix diagonalization techniques, one obtains the NBANDS lowest lying eigenstates of the Hamiltonian. The iterative matrix diagonalization algorithms implemented in VASP are the blocked\\-Davidson algorithm and the residual\\-minimization method with direct inversion in the iterative subspace (RMM\\-DIIS). Per default VASP uses the blocked\\-Davidson algorithm (ALGO \\= Normal). This step is often referred to as *iterative optimization/refinement of the orbitals*.4. After the eigenstates and eigenvalues of the Hamiltonian, i.e., orbitals and one\\-electron energies, have been determined with sufficient accuracy, the corresponding partial occupancies of the orbitals are calculated.5. From the one\\-electron energies and partial occupancies, the free energy of the system is computed.6. From the orbitals and partial occupancies, a new electronic density is constructed.7. In principle, the new density could be directly used to define a new Hamiltonian. In most cases, however, this does not lead to a stable algorithm (on account of, e.g., charge sloshing). Instead, the new density is not used directly but is mixed with the old density. By default VASP uses a Broyden mixer (IMIX). The resulting density then defines the new Hamiltonian for the next round of iterative matrix diagonalization. Steps 2\\-7 are repeated until the change in the free energy from one cycle to the next drops below a specific threshold (EDIFF). Note that when starting from scratch (ISTART \\= 0\\), the self\\-consistency cycle procedure of VASP always begins with several (NELMDL) cycles where the density is kept fixed at the initial approximation (overlapping atomic charge densities).This ensures that the wavefunctions that are initialized with random numbers have converged to something sensible before they are used to construct a new charge density. Especially in case of the RMM\\-DIIS the initial set of orbitals plays a critical role.Therefore, either the number of non\\-selfconsistent cycles is chosen to be large (NELMDL \\= 12, for ALGO \\= VeryFast), or the non\\-selfconsistent cycles are done with the blocked\\-Davidson algorithm before switching over to the use of the RMM\\-DIIS (ALGO \\= Fast). Furthermore, note that per default (LDIAG\\=.TRUE.) the iterative refinement of the orbitals is preceded (RMM\\-DIIS) or followed (blocked\\-Davidson) by a diagonalization of the subspace spanned by the current orbitals.In case of the RMM\\-DIIS, the optimization step is additionally followed by an orthogonalization of the refined orbitals. With respect to the aforementioned it should be emphasized that, in principle, the RMM\\-DIIS method should also converge without any explicit subspace diagonalization and/or re\\-orthonormalization. However, in our experience their inclusion speeds up the convergence of the self\\-consistency cycle so substantially that it shortens the time\\-to\\-solution of most calculations, even though these operations scale as   O (  N  3  ) {\\\\displaystyle O(N^{3})}  . For (a lot) more details on the self\\-consistency cycle and associated algorithms in VASP, we recommend the seminal papers by Kresse and Furthm\u00fcller.[\\[1]](#cite_note-kresse:cms:1996-1)[\\[2]](#cite_note-kresse:prb:96-2)"}
{"file_name": "Machine_learning_force_fields__Theory.md", "content": "Here we present the theory for on\\-the\\-fly machine learning force fields. The theory will be presented in a very condensed manner and for a more detailed description of the methods, we refer the readers to Refs. [\\[1]](#cite_note-jinnouchi:prl:2019-1), [\\[2]](#cite_note-jinnouchi2:arx:2019-2) and [\\[3]](#cite_note-jinnouchi:jcm:20-3). Introduction------------ Molecular dynamics is one of the most important methods for the determination of dynamic properties. The quality of the molecular dynamics simulation depends very strongly on the accuracy of the calculational method, but higher accuracy usually comes at the cost of increased computational demand. A very accurate method is ab initio molecular dynamics, where the interactions of atoms and electrons are calculated fully quantum mechanically from ab initio calculations (such as e.g. DFT). Unfortunately, this method is very often limited to small simulation cells and simulation times. One way to hugely speed up these calculations is by using force fields, which are parametrizations of the potential energy. These parametrizations can range from very simple functions with only empirical parameters, to very complex functions parametrized using thousands of ab initio calculations. Usually making accurate force fields manually is a very time\\-consuming task that needs tremendous expertise and know\\-how.  Another way to greatly reduce computational cost and required human intervention is by machine learning. Here, in the prediction of the target property, the method automatically interpolates between known training systems that were previously calculated ab initio. This way the generation of force fields is already significantly simplified compared to a classical force field which needs manual (or even empirical) adjustment of the parameters. Nevertheless, there is still the problem of how to choose the proper (minimal) training data. One very efficient and automatic way to solve that is to adapt on\\-the\\-fly learning. Here an MD calculation is used for the learning. During the run of the MD calculation, ab initio data is picked out and added to the training data. From the existing data, a force field is continuously built up. At each step, it is judged whether to make an ab initio calculation and possibly add the data to the force field or to use the force field for that step and actually skip learning for that step. Hence the name \"on the fly\" learning. The crucial point here is the probability model for the estimation of errors. This model is built up from newly sampled data. Hence, the more accurate the force field gets the less sampling is needed and the more expensive ab initio steps are skipped. This way not only the convergence of the force field can be controlled but also a very widespread scan through phase space for the training structures can be performed. The crucial point for on\\-the\\-fly machine learning which will be explained with the rest of the methodology in the following subsections is to be able to predict errors of the force field on a newly sampled structure without the necessity to perform an ab initio calculation on that structure. Algorithms---------- ### On\\-the\\-fly machine\\-learning algorithm [](File_MLFF_main_algorithm.html) Fig. 1: On\\-the\\-fly machine learning force field generation scheme. To obtain the machine\\-learning force field several **structure datasets** are required. A structure dataset defines the Bravais lattice and the atomic positions of the system and contains the total energy, the forces, and the stress tensor calculated by first principles. Given these structure datasets, the machine identifies **local configurations** around an atom to learn what force field is appropriate. The local configuration measures the radial and angular distribution of neighboring atoms around this given site and is captured in the so\\-called **descriptors**. The on\\-the\\-fly force field generation scheme is given by the following steps (a flowchart of the algorithm is shown in Fig. 1\\): 1. The machine predicts the energy, the forces, and the stress tensor and their uncertainties for a given structure using the existing force field.2. The machine decides whether to perform a first\\-principles calculation (proceed with step 3\\); otherwise we skip to step 5\\.3. Performing the first principles calculation, we obtain a new structure dataset that may improve the force field.4. If the number of newly collected structures reaches a certain threshold or if the predicted uncertainty becomes too large, the machine learns an improved force field by including the new structure datasets and local configurations.5. Atomic positions and velocities are updated by using the force field (if accurate enough) or the first principles calculation.6. If the desired total number of ionic steps (NSW) is reached we are done; otherwise proceed with step 1\\. ### Sampling of training data and local reference configurations We employ a learning scheme where structures are only added to the list of training structures when local reference configurations are picked for atoms that have an error in the force higher than a given threshold. So in the following, it is implied that whenever a new training structure is obtained, also local reference configurations from this structure are obtained. Usually one can employ that the force field doesn't necessarily need to be retrained immediately at every step when a training structure with corresponding local configurations is added. Instead, one can also collect candidates and do the learning in a later step for all structures simultaneously (blocking). This way saving significant computational costs. Of course learning after every new configuration or after every block can have different results, but with not too large block sizes the difference should be small. The tag ML\\_MCONF\\_NEW sets the block size for learning.The force field is usually not updated at every molecular\\-dynamics step. The update happens under the following conditions: * If there is no force field present, all atoms of a structure are sampled as local reference configurations and a force field is constructed.* If the Bayesian error of the force for any atom is above the strict threshold set by ML\\_CDOUB  \u00d7 {\\\\displaystyle \\\\times } ML\\_CTIFOR, the local reference configurations are sampled and a new force field is constructed.* If the Bayesian error of the force for any atom is above the threshold ML\\_CTIFOR but below ML\\_CDOUB  \u00d7 {\\\\displaystyle \\\\times } ML\\_CTIFOR, the structure is added to the list of new training structure candidates. Whenever the number of candidates is equal to ML\\_MCONF\\_NEW they are added to the entire set of training structures and the force field is updated. To avoid sampling too similar structures, the next step, from which training structures are allowed to be taken as candidates, is set by ML\\_NMDINT. All ab initio calculations within this distance are skipped if the Bayesian error for the force on all atoms is below ML\\_CDOUB  \u00d7 {\\\\displaystyle \\\\times } ML\\_CTIFOR. ### Threshold for error of forces Training structures and their corresponding local configurations are only chosen if the error in the forces of any atom exceeds a chosen threshold. The initial threshold is set to the value provided by ML\\_CTIFOR (the unit is eV/Angstrom).The behavior of how the threshold is further controlled is given by ML\\_ICRITERIA. The following options are available: * ML\\_ICRITERIA \\= 0: No update of initial value of ML\\_CTIFOR is done.* ML\\_ICRITERIA \\= 1: Update of criteria using an average of the Bayesian errors of the forces from history (see description of the method below).* ML\\_ICRITERIA \\= 2: Update of criteria using gliding average of Bayesian errors (probably more robust but **not well tested**). Generally, it is recommended to automatically update the threshold ML\\_CTIFOR during machine learning. Details on how and when the update is performed are controlled by ML\\_CSLOPE, ML\\_CSIG and ML\\_MHIS. Description of ML\\_ICRITERIA\\=1: ML\\_CTIFOR is updated using the average Bayesian error in the previous steps. Specifically, it is set to  ML\\_CTIFOR \\= (average of the stored Bayesian errors) \\*(1\\.0 \\+ ML\\_CX). The number of entries in the history of the Bayesian errors is controlled by ML\\_MHIS. To avoid noisy data or an abrupt jump of the Bayesian error causing issues, the standard error of the history must be below the threshold ML\\_CSIG, for the update to take place. Furthermore, the slope of the stored data must be below the threshold ML\\_CSLOPE. In practice, the slope and the standard errors are at least to some extent correlated: often the standard error is proportional to ML\\_MHIS/3 times the slope or somewhat larger. We recommend to vary only ML\\_CSIG and keep ML\\_CSLOPE fixed to its default value. Local energies-------------- The potential energy   U {\\\\displaystyle U}  of a structure with   N  a {\\\\displaystyle N\\_{a}}  atoms is approximated as  U \\=  \u2211  i \\= 1  N  a  U  i  . {\\\\displaystyle U\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{\\\\mathrm {a} }}U\\_{i}.} The local energies   U  i {\\\\displaystyle U\\_{i}}  are functionals   U  i  \\= F \\[  \u03c1  i  (  r  ) ] {\\\\displaystyle U\\_{i}\\=F\\[\\\\rho \\_{i}(\\\\mathbf {r} )]}  of the probability density   \u03c1  i {\\\\displaystyle \\\\rho \\_{i}}  to find another atom   j {\\\\displaystyle j}  at the position   r {\\\\displaystyle \\\\mathbf {r} }  around the atom   i {\\\\displaystyle i}  within a cut\\-off radius   R  c u t {\\\\displaystyle R\\_{\\\\mathrm {cut} }}  defined as  \u03c1  i  (  r  )  \\=  \u2211  j \\= 1  N  a  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  )  ,  r  i j  \\=  \\|  r  i j  \\|  \\=  \\|  r  j  \u2212  r  i  \\|  . {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\=1}^{N\\_{\\\\mathrm {a} }}f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right),\\\\qquad \\\\qquad \\\\qquad \\\\qquad r\\_{ij}\\=\\|\\\\mathbf {r} \\_{ij}\\|\\=\\|\\\\mathbf {r} \\_{j}\\-\\\\mathbf {r} \\_{i}\\|.} Here   f  c u t {\\\\displaystyle f\\_{\\\\mathrm {cut} }}  is a cut\\-off function that goes to zero for   r  i j  \\>  R  c u t {\\\\displaystyle r\\_{ij}\\>R\\_{\\\\mathrm {cut} }}  and  g  (  r  \u2212  r  i j  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  is a delta function. The atom distribution can also be written as a sum of individual distributions:  \u03c1  i  (  r  )  \\=  \u2211  j \u2260 i  N  a  \u03c1  i j  (  r  )  . {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\\eq i}^{N\\_{\\\\mathrm {a} }}\\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right).} Here   \u03c1  i j  (  r  ) {\\\\displaystyle \\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right)}  describes the probability of find an atom   j {\\\\displaystyle j}  at a position   r {\\\\displaystyle \\\\mathbf {r} }  with respect to atom   i {\\\\displaystyle i}  . Descriptors----------- Similar to the Smooth Overlap of Atomic Positions[\\[4]](#cite_note-bartok:prb:2013-4) (SOAP) method the delta function   g (  r  ) {\\\\displaystyle g(\\\\mathbf {r} )}  is approximated as   g  (  r  )  \\=  1  \u03c3  a t o m  2 \u03c0  e x p  (  \u2212  \\|  r  \\|  2  2  \u03c3  a t o m  2  )  . {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)\\={\\\\frac {1}{\\\\sigma \\_{\\\\mathrm {atom} }{\\\\sqrt {2\\\\pi }}}}\\\\mathrm {exp} \\\\left(\\-{\\\\frac {\\|\\\\mathbf {r} \\|^{2}}{2\\\\sigma \\_{\\\\mathrm {atom} }^{2}}}\\\\right).} [](File_MLFF_rad_and_ang_descriptor.html) Fig. 2: Radial and angular descriptors.   Unfortunately   \u03c1  i  (  r  ) {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)}  is not rotationally invariant. To deal with this problem intermediate functions or *descriptors* depending on   \u03c1  i  (  r  ) {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)}  possessing rotational invariance are introduced: ### Radial descriptor This is the simplest descriptor which relies on the radial distribution function  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u222b  \u03c1  i  (  r  r  ^  )  d  r  ^  , {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{4\\\\pi }}\\\\int \\\\rho \\_{i}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)d{\\\\hat {\\\\mathbf {r} }},} where   r  ^ {\\\\displaystyle {\\\\hat {\\\\mathbf {r} }}}  denotes the unit vector of the vector   r {\\\\displaystyle \\\\mathbf {r} }  between atoms   i {\\\\displaystyle i}  and  j {\\\\displaystyle j}  \\[see Fig. 2 (a)].The Radial descriptor can also be regarded as a two\\-body descriptor. ### Angular descriptor In most cases the radial descriptor is not enough to distinguish different probability densities   \u03c1  i {\\\\displaystyle \\\\rho \\_{i}} , since two different   \u03c1  i {\\\\displaystyle \\\\rho \\_{i}}  can yield the same   \u03c1  i  ( 2 ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}} . To improve on this angular information between two radial descriptors is also incorporated within an angular descriptor  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\= \u222c d  r  ^  d  s  ^  \u03b4  (  r  ^  \u22c5  s  ^  \u2212  c o s  \u03b8  )  \u2211  j \\= 1  N  a  \u2211  k \u2260 j  N  a  \u03c1  i k  (  r  r  ^  )  \u03c1  i j  (  s  s  ^  ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\iint d{\\\\hat {\\\\mathbf {r} }}d{\\\\hat {\\\\mathbf {s} }}\\\\delta \\\\left({\\\\hat {\\\\mathbf {r} }}\\\\cdot {\\\\hat {\\\\mathbf {s} }}\\-\\\\mathrm {cos} \\\\theta \\\\right)\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{k\\\eq j}^{N\\_{a}}\\\\rho \\_{ik}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)\\\\rho \\_{ij}\\\\left(s{\\\\hat {\\\\mathbf {s} }}\\\\right)} where   \u03b8 {\\\\displaystyle \\\\theta }  denotes the angle between two vectors   r  i j {\\\\displaystyle \\\\mathbf {r} \\_{ij}}  and  r  i k {\\\\displaystyle \\\\mathbf {r} \\_{ik}}  \\[see Fig. 2 (b)]. The important difference of the function   \u03c1  i  ( 3 ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}}  compared to the angular distribution function (also called power spectrum within the Gaussian Approximation Potential) used in reference [\\[5]](#cite_note-bartok:prl:2010-5) is that no self interaction is included, where   j {\\\\displaystyle j}  and  k {\\\\displaystyle k}  have the same distance from   i {\\\\displaystyle i}  and the angle between the two is zero. It can be shown [\\[3]](#cite_note-jinnouchi:jcm:20-3) that the self\\-interaction component is equivalent to the two body descriptors. This means that our angular descriptor is a pure angular descriptor, containing no two\\-body components and it cannot be expressed as linear combinations of the power spectrum. The advantage of this descriptor is that it enables us to separately control the effects of two\\- and three\\-body descriptors. ### Basis set expansion and descriptors The atomic probability density can be also expanded in terms of basis functions  \u03c1  i  (  r  )  \\=  \u2211  l \\= 1  L  m a x  \u2211  m \\= \u2212 l  l  \u2211  n \\= 1  N  R  l  c  n l m  i  \u03c7  n l  ( r )  Y  l m  (  r  ^  )  , {\\\\displaystyle \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}c\\_{nlm}^{i}\\\\chi \\_{nl}\\\\left(r\\\\right)Y\\_{lm}\\\\left({\\\\hat {\\\\mathbf {r} }}\\\\right),} where   c  n l m  i {\\\\displaystyle c\\_{nlm}^{i}}  ,  \u03c7  n l {\\\\displaystyle \\\\chi \\_{nl}}  and  Y  l m {\\\\displaystyle Y\\_{lm}}  denote expansion coefficients, radial basis functions and spherical harmonics, respectively. The indices   n {\\\\displaystyle n}  ,  l {\\\\displaystyle l}  and  m {\\\\displaystyle m}  denote radial numbers, angular and magnetic quantum numbers, respectively. By using the above equation the radial descriptor and angular descriptor can be written as  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u2211  n \\= 1  N  R  0  c  n 00  i  \u03c7  n 0  ( r )  , {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{\\\\sqrt {4\\\\pi }}}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{0}}c\\_{n00}^{i}\\\\chi \\_{n0}\\\\left(r\\\\right),}  and  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\=  \u2211  l \\= 1  L  m a x  \u2211  n \\= 1  N  R  l  \u2211  \u03bd \\= 1  N  R  l  2 l \\+ 1  2  p  n \u03bd l  i  \u03c7  n l  ( r )  \u03c7  \u03bd l  ( s )  P  l  (  c o s  \u03b8  )  , {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}\\\\sum \\\\limits \\_{\\\u \\=1}^{N\\_{\\\\mathrm {R} }^{l}}{\\\\sqrt {\\\\frac {2l\\+1}{2}}}p\\_{n\\\u l}^{i}\\\\chi \\_{nl}\\\\left(r\\\\right)\\\\chi \\_{\\\u l}\\\\left(s\\\\right)P\\_{l}\\\\left(\\\\mathrm {cos} \\\\theta \\\\right),} where   \u03c7  \u03bd l {\\\\displaystyle \\\\chi \\_{\\\u l}}  and  P  l {\\\\displaystyle P\\_{l}}  represent normalized spherical Bessel functions and Legendre polynomials of order   l {\\\\displaystyle l} , respectively. The expansion coefficients for the angular descriptor can be converted to  p  n \u03bd l  i  \\=  8  \u03c0  2  2 l \\+ 1  \u2211  m \\= \u2212 l  l  \\[  c  n l m  i  c  \u03bd l m  i \u2217  \u2212  \u2211  j  N  a  c  n l m  i j  c  \u03bd l m  i j \u2217  ]  , {\\\\displaystyle p\\_{n\\\u l}^{i}\\={\\\\sqrt {\\\\frac {8\\\\pi ^{2}}{2l\\+1}}}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\left\\[c\\_{nlm}^{i}c\\_{\\\u lm}^{i\\*}\\-\\\\sum \\\\limits \\_{j}^{N\\_{a}}c\\_{nlm}^{ij}c\\_{\\\u lm}^{ij\\*}\\\\right],} where   c  n l m  i j {\\\\displaystyle c\\_{nlm}^{ij}}  denotes expansion coefficients of the distribution   \u03c1  i j  (  r  ) {\\\\displaystyle \\\\rho \\_{ij}(\\\\mathbf {r} )}  with respect to   \u03c7  \u03bd l {\\\\displaystyle \\\\chi \\_{\\\u l}}  and  P  l {\\\\displaystyle P\\_{l}}  \u03c1  i j  (  r  ) \\=  \u2211  l \\= 1  L  m a x  \u2211  m \\= \u2212 l  l  \u2211  n \\= 1  N  R  l  c  n l m  i j  \u03c7  n l  ( r )  Y  l m  (  r  ^  ) {\\\\displaystyle \\\\rho \\_{ij}(\\\\mathbf {r} )\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}c\\_{nlm}^{ij}\\\\chi \\_{nl}\\\\left(r\\\\right)Y\\_{lm}\\\\left({\\\\hat {\\\\mathbf {r} }}\\\\right)}  and  c  n l m  i  \\=  \u2211  j  N  a  c  n l m  i j  . {\\\\displaystyle c\\_{nlm}^{i}\\=\\\\sum \\\\limits \\_{j}^{N\\_{a}}c\\_{nlm}^{ij}.} #### Angular filtering In many cases   \u03c7  n l {\\\\displaystyle \\\\chi \\_{nl}}  is multiplied with an angular filtering function[\\[6]](#cite_note-boyd:book:2000-6)   \u03b7 {\\\\displaystyle \\\\eta }  (ML\\_IAFILT2), which can noticably reduce the necessary basis set size without losing accuracy in the calculations  \u03b7  l ,  a  F I L T  \\=  1  1 \\+  a  F I L T  \\[ l ( l \\+ 1 )  ]  2 {\\\\displaystyle \\\\eta \\_{l,a\\_{\\\\mathrm {FILT} }}\\={\\\\frac {1}{1\\+a\\_{\\\\mathrm {FILT} }\\[l(l\\+1\\)]^{2}}}} where   a  F I L T {\\\\displaystyle a\\_{\\\\mathrm {FILT} }}  (ML\\_AFILT2) is a parameter controlling the extent of the filtering. A larger value for the parameter should provide more filtering. #### Reduced descriptors A descriptor that reduces the number of descriptors with respect to the number of elements[\\[7]](#cite_note-csanyi:npj:2022-7) is written as  p  n \u03bd l  i J  \\=  8  \u03c0  2  2 l \\+ 1  \u2211  m \\= \u2212 l  l  c  n l m  i J  \u2211  J \u2032  c  \u03bd l m  i  J \u2032  . {\\\\displaystyle p\\_{n\\\u l}^{iJ}\\={\\\\sqrt {\\\\frac {8\\\\pi ^{2}}{2l\\+1}}}\\\\sum \\\\limits \\_{m\\=\\-l}^{l}c\\_{nlm}^{iJ}\\\\sum \\\\limits \\_{J'}c\\_{\\\u lm}^{iJ'}.} For more details on the effects of this descriptor please see following site: ML\\_DESC\\_TYPE. Potential energy fitting------------------------ It is convenient to express the local potential energy of atom   i {\\\\displaystyle i}  in structure   \u03b1 {\\\\displaystyle \\\\alpha }  in terms of linear coefficients   w  i  B {\\\\displaystyle w\\_{i\\_{\\\\mathrm {B} }}}  and a kernel   K  (  X  i  ,  X  i  B  ) {\\\\displaystyle K\\\\left(\\\\mathbf {X} \\_{i},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)}  as follows  U  i  \u03b1  \\=  \u2211  i  B  \\= 1  N  B  w  i  B  K  (  X  i  \u03b1  ,  X  i  B  ) {\\\\displaystyle U\\_{i}^{\\\\alpha }\\=\\\\sum \\\\limits \\_{i\\_{\\\\mathrm {B} }\\=1}^{N\\_{\\\\mathrm {B} }}w\\_{i\\_{\\\\mathrm {B} }}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha },\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)} where   N  B {\\\\displaystyle N\\_{\\\\mathrm {B} }}  is the basis set size. The kernel   K  (  X  i  ,  X  i  B  ) {\\\\displaystyle K\\\\left(\\\\mathbf {X} \\_{i},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)}  measures the similarity between a *local* configuration from the training set   \u03c1  i  (  r  ) {\\\\displaystyle \\\\rho \\_{i}(\\\\mathbf {r} )}  and basis set   \u03c1  i  B  (  r  ) {\\\\displaystyle \\\\rho \\_{i\\_{\\\\mathrm {B} }}(\\\\mathbf {r} )} . Using the radial and angular descriptors it is written as  K  (  X  i  ,  X  i  B  )  \\=  \\[  \u03b2  X  i  ( 2 )  \u22c5  X  i  B  ( 2 )  \\+ ( 1 \u2212 \u03b2 )  X ^  i  ( 3 )  \u22c5  X ^  i  B  ( 3 )  ]  \u03b6  . {\\\\displaystyle K\\\\left(\\\\mathbf {X} \\_{i},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}\\\\right)\\=\\\\left\\[\\\\beta \\\\mathbf {X} \\_{i}^{(2\\)}\\\\cdot \\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }}^{(2\\)}\\+(1\\-\\\\beta )\\\\mathbf {\\\\hat {X}} \\_{i}^{(3\\)}\\\\cdot \\\\mathbf {\\\\hat {X}} \\_{i\\_{\\\\mathrm {B} }}^{(3\\)}\\\\right]^{\\\\zeta }.} Here the vectors   X  i  ( 2 ) {\\\\displaystyle \\\\mathbf {X} \\_{i}^{(2\\)}}  and  X ^  i  ( 3 ) {\\\\displaystyle \\\\mathbf {\\\\hat {X}} \\_{i}^{(3\\)}}  contain all coefficients   c  n 00  i {\\\\displaystyle c\\_{n00}^{i}}  and  p  n \u03bd l  i {\\\\displaystyle p\\_{n\\\u l}^{i}} , respectively. The notation   X ^  i  ( 3 ) {\\\\displaystyle \\\\mathbf {\\\\hat {X}} \\_{i}^{(3\\)}}  indicates that it is a normalized vector of   X  i  ( 3 ) {\\\\displaystyle \\\\mathbf {X} \\_{i}^{(3\\)}} . The parameter   \u03b2 {\\\\displaystyle \\\\beta }  (ML\\_W1) controls the weighting of the radial and angular terms, respectively. The parameter   \u03b6 {\\\\displaystyle \\\\zeta }  (ML\\_NHYP) controls the sharpness of the kernel and the order of the many\\-body interactions. ### Matrix vector form of linear equations Similarly to the energy   U  i  \u03b1 {\\\\displaystyle U\\_{i}^{\\\\alpha }} the forces and the stress tensor are also described as linear functions of the coefficients   w  i  B {\\\\displaystyle w\\_{i\\_{\\\\mathrm {B} }}} . All three are fitted simultaneously which leads to the following matrix\\-vector form  Y  \\=  \u03a6  w {\\\\displaystyle \\\\mathbf {Y} \\=\\\\mathbf {\\\\Phi } \\\\mathbf {w} } where   Y {\\\\displaystyle \\\\mathbf {Y} }  is a super vector consisting of the sub vectors   {  y  \u03b1  \\|  \u03b1 \\= 1 , . . . ,  N  s t  } {\\\\displaystyle \\\\{\\\\mathbf {y} ^{\\\\alpha }\\|\\\\alpha \\=1,...,N\\_{\\\\mathrm {st} }\\\\}} . Here each   y  \u03b1 {\\\\displaystyle \\\\mathbf {y} ^{\\\\alpha }}  contains the first principle energies per atom, forces and stress tensors for each structure   \u03b1 {\\\\displaystyle \\\\alpha }  .  N  s t {\\\\displaystyle N\\_{\\\\mathrm {st} }}  denotes the total number of structures. The size of   Y {\\\\displaystyle \\\\mathbf {Y} }  is  N  s t  \u00d7 ( 1 \\+ 3  N  a  \u03b1  \\+ 6 ) {\\\\displaystyle N\\_{\\\\mathrm {st} }\\\\times (1\\+3N\\_{a}^{\\\\alpha }\\+6\\)}  . The matrix   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  is also called as *design* matrix[\\[8]](#cite_note-bishop:book:2006-8). The rows of this matrix are blocked for each structure   \u03b1 {\\\\displaystyle \\\\alpha } , where the first line of each block consists of the kernel used to calculate the energy. The subsequent   3  N  a  \u03b1 {\\\\displaystyle 3N\\_{a}^{\\\\alpha }}  lines consist of the derivatives of the kernel with respect to the atomic coordinates used to calculate the forces. The final 6 lines within each structure consist of the derivatives of the kernel with respect to the unit cell coordinates used to calculate the stress tensor components. The overall size of   Y {\\\\displaystyle \\\\mathbf {Y} }  is  N  s t  \u00d7 ( 1 \\+ 3  N  a  \u03b1  \\+ 6 ) \u00d7  N  B {\\\\displaystyle N\\_{\\\\mathrm {st} }\\\\times (1\\+3N\\_{a}^{\\\\alpha }\\+6\\)\\\\times N\\_{\\\\mathrm {B} }}  looking like as follows  \u03a6  \\=  \\[  \u2211  i  1  N  a  \u03b1 \\= 1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  1  N  a  \u03b1 \\= 1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 1  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2211  i  1  N  a  \u03b1 \\= 2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  1  N  a  \u03b1 \\= 2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  1  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  x  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  y  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 1  )  \u2211  i  \u2207  z  2  K  (  X  i  \u03b1 \\= 2  ,  X  i  B  \\= 2  )  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  \u2026  ]  . {\\\\displaystyle \\\\mathbf {\\\\Phi } \\={\\\\begin{bmatrix}\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=1}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=1}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=1},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=2}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}{\\\\frac {1}{N\\_{\\\\mathrm {a} }^{\\\\alpha \\=2}}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{1}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{x\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{y\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=1}\\\\right)\\&\\\\sum \\_{i}\\\abla \\_{z\\_{2}}K\\\\left(\\\\mathbf {X} \\_{i}^{\\\\alpha \\=2},\\\\mathbf {X} \\_{i\\_{\\\\mathrm {B} }\\=2}\\\\right)\\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\\\\\\\\\ldots \\&\\\\ldots \\&\\\\dots \\&\\\\dots \\&\\\\dots \\\\end{bmatrix}}.} Bayesian linear regression-------------------------- Ultimately for error prediction we want to get the maximized probability of observing a new structure   y {\\\\displaystyle \\\\mathbf {y} }  on basis of the training set   Y {\\\\displaystyle \\\\mathbf {Y} } , which is denoted as   p  (  y  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)} . For this we need to get from the error of the linear fitting coefficients   w {\\\\displaystyle \\\\mathbf {w} }  in the reproduction of the training data   p  (  w  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)}  to  p  (  y  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)}  which is explained in the following. First we obtain   p  (  w  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)}  from the Bayesian theorem  p  (  w  \\|  Y  )  \\=  p  (  Y  \\|  w  )  p  (  w  )  p  (  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)\\={\\\\frac {p\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {w} \\\\right)p\\\\left(\\\\mathbf {w} \\\\right)}{p\\\\left(\\\\mathbf {Y} \\\\right)}}}  , where we assume multivariate Gaussian distributions   N {\\\\displaystyle {\\\\mathcal {N}}}  for the likelihood function  p  (  Y  \\|  w  )  \\=  N  (  Y  \\|  \u03a6  w  ,  \u03c3  v  2  I  ) {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {w} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {\\\\Phi } \\\\mathbf {w} ,\\\\sigma \\_{\\\\mathrm {v} }^{2}\\\\mathbf {I} \\\\right)} and the (conjugate) prior  p  (  w  )  \\=  N  (  w  \\|  0  ,  \u03c3  w  2  I  )  . {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {0} ,\\\\sigma \\_{\\\\mathrm {w} }^{2}\\\\mathbf {I} \\\\right).} The parameters   \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  and  \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  need to be optimized to balance the accuracy and robustness of the force field (see below). The normalization is obtained by  p  (  Y  )  \\= \u222b p  (  Y  \\|  w  )  p  (  w  )  d  w  . {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\\\right)\\=\\\\int p\\\\left(\\\\mathbf {Y} \\|\\\\mathbf {w} \\\\right)p\\\\left(\\\\mathbf {w} \\\\right)d\\\\mathbf {w} .} Using the equations from above and the completing square method[\\[8]](#cite_note-bishop:book:2006-8)   p  (  w  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)}  is obtained as follows  p  (  w  \\|  Y  )  \\=  N  (  w  \\|  w \u00af  ,  \u03a3  )  . {\\\\displaystyle p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\Sigma } \\\\right).} Since the prior and the likelood function are described by multivariate Gaussian distributions the posterior   N  (  w  \\|  w \u00af  ,  \u03a3  ) {\\\\displaystyle {\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\Sigma } \\\\right)}  describes a multivariate Gaussian written as  N  (  w  \\|  w \u00af  ,  \u03a3  )  \\=  1  (  2 \u03c0  )  N  B  d e t  \u03a3  e x p  \\[  \u2212  (  w  \u2212  w \u00af  )  T  \u03a3  \u2212 1  (  w  \u2212  w \u00af  )  2  ] {\\\\displaystyle {\\\\mathcal {N}}\\\\left(\\\\mathbf {w} \\|\\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\Sigma } \\\\right)\\={\\\\frac {1}{\\\\sqrt {\\\\left(2\\\\pi \\\\right)^{N\\_{\\\\mathrm {B} }}\\\\mathrm {det} \\\\mathbf {\\\\Sigma } }}}\\\\mathrm {exp} \\\\left\\[\\-{\\\\frac {\\\\left(\\\\mathbf {w} \\-\\\\mathbf {\\\\bar {w}} \\\\right)^{\\\\mathrm {T} }\\\\mathbf {\\\\Sigma } ^{\\-1}\\\\left(\\\\mathbf {w} \\-\\\\mathbf {\\\\bar {w}} \\\\right)}{2}}\\\\right]} where we use the following definitions for the center of the Guassian distribution   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  and the covariance matrix   \u03a3 {\\\\displaystyle \\\\mathbf {\\\\Sigma } }  w \u00af  \\=  s  v  \u03a3  \u03a6  T  Y  , {\\\\displaystyle \\\\mathbf {\\\\bar {w}} \\=s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Sigma } \\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {Y} ,}  \u03a3  \u2212 1  \\=  s  w  I  \\+  s  v  \u03a6  T  \u03a6  . {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}\\=s\\_{\\\\mathrm {w} }\\\\mathbf {I} \\+s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Phi } .} Here we have used the following definitions  s  v  \\=  1  \u03c3  v  2 {\\\\displaystyle s\\_{\\\\mathrm {v} }\\={\\\\frac {1}{\\\\sigma \\_{\\\\mathrm {v} }^{2}}}}  and  s  w  \\=  1  \u03c3  w  2  . {\\\\displaystyle s\\_{\\\\mathrm {w} }\\={\\\\frac {1}{\\\\sigma \\_{\\\\mathrm {w} }^{2}}}.} ### Regression We want to obtain the weights   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  for the linear equations   Y  \\=  \u03a6  w \u00af  . {\\\\displaystyle \\\\mathbf {Y} \\=\\\\mathbf {\\\\Phi } \\\\mathbf {\\\\bar {w}} .}   #### Solution via Inversion By using directly the covariance matrix   \u03a3 {\\\\displaystyle \\\\mathbf {\\\\Sigma } }  the equation from above  w \u00af  \\=  s  v  \u03a3  \u03a6  T  Y  , {\\\\displaystyle \\\\mathbf {\\\\bar {w}} \\=s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Sigma } \\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {Y} ,} can be solved straightforwardly. However, only   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  is directly accesible and   \u03a3 {\\\\displaystyle \\\\mathbf {\\\\Sigma } }  must be obtained from   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  via inversion. This inversion is numerically unstable and leads to lower accuracy. **Hence we don't use this method.**   #### Solution via LU factorization Here we directly use the invers of the covariance matrix   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  by solving the following equation for the weights   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  \u03a3  \u2212 1  w \u00af  \\=  s  v  \u03a6  T  Y  . {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}\\\\mathbf {\\\\bar {w}} \\=s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {Y} .} For that   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  is decomposed into it's LU factorized components   P  \u2217  L  \u2217  U {\\\\displaystyle \\\\mathbf {P} \\*\\\\mathbf {L} \\*\\\\mathbf {U} }  .After that the   L  \u2217  U {\\\\displaystyle \\\\mathbf {L} \\*\\\\mathbf {U} }  factors are used to solve the previous linear equation for the weights   w \u00af {\\\\displaystyle \\\\mathbf {\\\\bar {w}} }  .This method is noticeably more accurate than the method via inversion of   \u03a3  \u2212 1 {\\\\displaystyle \\\\mathbf {\\\\Sigma } ^{\\-1}}  while being on the same order of magnitude in terms of computational cost. **Hence it is the method used in on\\-the\\-fly learning.**   #### Solution via regularized SVD The regression problem can also be solved by using the singular value decomposition to factorize   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  as  \u03a6  \\=  U  \u039b  V  T  . {\\\\displaystyle \\\\mathbf {\\\\Phi } \\=\\\\mathbf {U} \\\\mathbf {\\\\Lambda } \\\\mathbf {V} ^{T}.} To add the regularization the diagonal matrix   \u039b {\\\\displaystyle \\\\mathbf {\\\\Lambda } }  containing the singular values is rewritten as  \u039b  \\~  \\=  \u039b  \\+  s  w  s  v  \u039b  \u2212 1  . {\\\\displaystyle {\\\\tilde {\\\\mathbf {\\\\Lambda } }}\\=\\\\mathbf {\\\\Lambda } \\+{\\\\frac {s\\_{\\\\mathrm {w} }}{s\\_{\\\\mathrm {v} }}}\\\\mathbf {\\\\Lambda } ^{\\-1}.} By using the orthogonality of the left and right eigenvector matrices   U  T  U  \\=  I  n {\\\\displaystyle \\\\mathbf {U} ^{T}\\\\mathbf {U} \\=\\\\mathbf {I} \\_{n}}  and  V  V  T  \\=  I  n {\\\\displaystyle \\\\mathbf {V} \\\\mathbf {V} ^{T}\\=\\\\mathbf {I} \\_{n}}  the regression problem has the following solution  w  \\~  \\=  V  \u039b  \\~  \u2212 1  U  T  Y  . {\\\\displaystyle {\\\\tilde {\\\\mathbf {w} }}\\=\\\\mathbf {V} {\\\\tilde {\\\\mathbf {\\\\Lambda } }}^{\\-1}\\\\mathbf {U} ^{T}\\\\mathbf {Y} .}   #### Evidence approximation Finally to get the best results and to prevent overfitting the parameters   \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  and  \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  have to be optimized. To achieve this, we use the evidence approximation[\\[9]](#cite_note-gull:book:1989-9)[\\[10]](#cite_note-mackay:neu:2012-10)[\\[11]](#cite_note-jinnouchi:pcl:2017-11) (also called as empirical bayes, 2 maximum likelihood or generalized maximum likelihood), which maximizes the evidence function (also called model evidence) defined as  p  (  Y  \\|  \u03c3  v  2  ,  \u03c3  w  2  )  \\=  (  1  2 \u03c0  \u03c3  v  2  )  M  (  1  2 \u03c0  \u03c3  w  2  )  N  B  \u222b  e x p  \\[  \u2212 E  (  w  )  ]  d  w  , {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\|\\\\sigma \\_{\\\\mathrm {v} }^{2},\\\\sigma \\_{\\\\mathrm {w} }^{2}\\\\right)\\=\\\\left({\\\\frac {1}{\\\\sqrt {2\\\\pi \\\\sigma \\_{\\\\mathrm {v} }^{2}}}}\\\\right)^{M}\\\\left({\\\\frac {1}{\\\\sqrt {2\\\\pi \\\\sigma \\_{\\\\mathrm {w} }^{2}}}}\\\\right)^{N\\_{\\\\mathrm {B} }}\\\\int \\\\mathrm {exp} \\\\left\\[\\-E\\\\left(\\\\mathbf {w} \\\\right)\\\\right]d\\\\mathbf {w} ,}  E  (  w  )  \\=  s  v  2  \\|  \\|  \u03a6  w  \u2212  Y  \\|  \\|  2  \\+  s  w  2  \\|  \\|  w  \\|  \\|  2  . {\\\\displaystyle E\\\\left(\\\\mathbf {w} \\\\right)\\={\\\\frac {s\\_{\\\\mathrm {v} }}{2}}\\|\\|\\\\mathbf {\\\\Phi } \\\\mathbf {w} \\-\\\\mathbf {Y} \\|\\|^{2}\\+{\\\\frac {s\\_{\\\\mathrm {w} }}{2}}\\|\\|\\\\mathbf {w} \\|\\|^{2}.} The function   p  (  Y  \\|  \u03c3  v  2  ,  \u03c3  w  2  ) {\\\\displaystyle p\\\\left(\\\\mathbf {Y} \\|\\\\sigma \\_{\\\\mathrm {v} }^{2},\\\\sigma \\_{\\\\mathrm {w} }^{2}\\\\right)}  corresponds to the probability that the regression model with parameters   \u03c3  v  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {v} }^{2}}  and  \u03c3  w  2 {\\\\displaystyle \\\\sigma \\_{\\\\mathrm {w} }^{2}}  provides the reference data   Y {\\\\displaystyle \\\\mathbf {Y} } . Hence the best fit is optimized by maximizing this probability. The maximization is carried out by simultaneously solving the following equations  s  w  \\=  \u03b3  \\|  w \u00af  \\|  2  , {\\\\displaystyle s\\_{\\\\mathrm {w} }\\={\\\\frac {\\\\gamma }{\\|\\\\mathbf {\\\\bar {w}} \\|^{2}}},}  s  v  \\=  M \u2212 \u03b3  \\|  T  \u2212  \u03d5  w \u00af  \\|  2  , {\\\\displaystyle s\\_{\\\\mathrm {v} }\\={\\\\frac {M\\-\\\\gamma }{\\|\\\\mathbf {T} \\-\\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} \\|^{2}}},}  \u03b3 \\=  \u2211  k \\= 1  N  B  \u03bb  k  \u03bb  k  \\+  s  w {\\\\displaystyle \\\\gamma \\=\\\\sum \\\\limits \\_{k\\=1}^{N\\_{\\\\mathrm {B} }}{\\\\frac {\\\\lambda \\_{k}}{\\\\lambda \\_{k}\\+s\\_{\\\\mathrm {w} }}}} where   \u03bb  k {\\\\displaystyle \\\\lambda \\_{k}}  are the eigenvalues of the matrix   s  v  \u03a6  T  \u03a6 {\\\\displaystyle s\\_{\\\\mathrm {v} }\\\\mathbf {\\\\Phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Phi } }  . The evidence approximation can be done for any of the above\\-described regression methods, but we combine it only with the solutions from LU factorization since solutions via SVD are calculationally too expensive to be carried out multiple times. ### Prediction and error estimates By using the relation  p  (  y  \\|  Y  )  \\= \u222b p  (  y  \\|  w  )  p  (  w  \\|  Y  )  d  w {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)\\=\\\\int p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {w} \\\\right)p\\\\left(\\\\mathbf {w} \\|\\\\mathbf {Y} \\\\right)d\\\\mathbf {w} } and the completing square method[\\[8]](#cite_note-bishop:book:2006-8) the distribution of   p  (  y  \\|  Y  ) {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)}  is written as  p  (  y  \\|  Y  )  \\=  N  (  \u03d5  w \u00af  ,  \u03c3  )  , {\\\\displaystyle p\\\\left(\\\\mathbf {y} \\|\\\\mathbf {Y} \\\\right)\\={\\\\mathcal {N}}\\\\left(\\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} ,\\\\mathbf {\\\\sigma } \\\\right),}  \u03c3  \\=  1  s  v  I  \\+  \u03d5  T  \u03a3  \u03d5  . {\\\\displaystyle \\\\mathbf {\\\\sigma } \\={\\\\frac {1}{s\\_{\\\\mathrm {v} }}}\\\\mathbf {I} \\+\\\\mathbf {\\\\phi } ^{\\\\mathrm {T} }\\\\mathbf {\\\\Sigma } \\\\mathbf {\\\\phi } .} Here   \u03d5 {\\\\displaystyle \\\\mathbf {\\\\phi } }  is similar to   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  but only for the new structure   y {\\\\displaystyle \\\\mathbf {y} }  . The mean vector   \u03d5  w \u00af {\\\\displaystyle \\\\mathbf {\\\\phi } \\\\mathbf {\\\\bar {w}} }  contains the results of the predictions on the dimensionless energy per atom, forces, and stress tensor.The diagonal elements of   \u03c3 {\\\\displaystyle \\\\mathbf {\\\\sigma } } , which correspond to the variances of the predicted results, are used as the uncertainty in the prediction. Sparsification-------------- Within the machine learning force field methods the sparsification of local reference configurations and the angular descriptors is supported.The sparsification of local reference configurations is by default used and the extent is mainly controlled by ML\\_EPS\\_LOW. This is procedure is important to avoid overcompleteness and to dampen the acquisition of new configurations in special cases. The sparsification of angular descriptors is by default not used and should be used very cautiously and only if it's necessary. The description of the usage of this feature is given in ML\\_LSPARSDES. ### Sparsification of local reference configurations We start by defining the similarity kernel (or Gram matrix) for the local configurations with each other  K  i  B  ,  j  B  \\=  K  (  X  i  B  ,  X  j  B  )  . {\\\\displaystyle \\\\mathbf {K} \\_{i\\_{B},j\\_{B}}\\=\\\\mathbf {K} \\\\left(\\\\mathbf {X} \\_{i\\_{B}},\\\\mathbf {X} \\_{j\\_{B}}\\\\right).} The CUR algorithm starts out from the diagonalization of this matrix  U  T  K  U  \\=  L  \\= diag  (  l  1  ,  l  2  , . . . ,  l  N  B  ) , {\\\\displaystyle \\\\mathbf {U} ^{T}\\\\mathbf {K} \\\\mathbf {U} \\=\\\\mathbf {L} \\={\\\\textrm {diag}}(l\\_{1},l\\_{2},...,l\\_{N\\_{B}}),} where   U {\\\\displaystyle \\\\mathbf {U} }  is the matrix of the eigenvectors   u  j {\\\\displaystyle \\\\mathbf {u\\_{j}} }  U  \\= (  u  1  ,  u  2  , . . . ,  u  N  B  ) ,  u  j  \\=  (  u  1 j  u  2 j  . . .  u  N  B  j  ) {\\\\displaystyle \\\\mathbf {U} \\=(\\\\mathbf {u} \\_{1},\\\\mathbf {u} \\_{2},...,\\\\mathbf {u} \\_{N\\_{B}}),\\\\qquad \\\\mathbf {u} \\_{j}\\=\\\\left({\\\\begin{array}{c}u\\_{1j}\\\\\\\\u\\_{2j}\\\\\\\\...\\\\\\\\u\\_{N\\_{B}j}\\\\end{array}}\\\\right)} In contrast to the original CUR algorithm[\\[12]](#cite_note-mahoney:pnas:2009-12) that was developed to efficiently select a few significant columns of the matrix   K {\\\\displaystyle \\\\mathbf {K} }  ,we search for (few) insignificant local configurations and remove them.We dispose of the columns of   K {\\\\displaystyle \\\\mathbf {K} }  that are correlated with the   N  l o w {\\\\displaystyle N\\_{\\\\mathrm {low} }}  eigenvectors   u  \u03c7 {\\\\displaystyle u\\_{\\\\chi }}  with the smallest eigenvalues   l  \u03c7 {\\\\displaystyle l\\_{\\\\chi }} . The correlation is measured by the statistical leverage scoring measured for each column   j {\\\\displaystyle j}  of  K {\\\\displaystyle \\\\mathbf {K} }  as  \u03c9  j  \\=  1  N  l o w  \u2211  \u03c7 \\= 1  N  B  \u03b3  \u03c7 , j  , {\\\\displaystyle \\\\omega \\_{j}\\={\\\\frac {1}{N\\_{\\\\mathrm {low} }}}\\\\sum \\\\limits \\_{\\\\chi \\=1}^{N\\_{B}}\\\\gamma \\_{\\\\chi ,j},}  \u03b3  \u03c7 , j  \\=  {  u  j \u03c7  2  i f  l  \u03c7  \\>  \u03f5  l o w  0  o t h e r w i s e  , {\\\\displaystyle \\\\gamma \\_{\\\\chi ,j}\\=\\\\left\\\\{{\\\\begin{array}{cl}u\\_{j\\\\chi }^{2}\\&\\\\mathrm {if} \\\\,\\\\,l\\_{\\\\chi }\\>\\\\epsilon \\_{\\\\mathrm {low} }\\\\\\\\0\\&\\\\mathrm {otherwise} \\\\end{array}}\\\\right.,} where   \u03f5  l o w {\\\\displaystyle \\\\epsilon \\_{\\\\mathrm {low} }}  (see also ML\\_EPS\\_LOW) is the threshold for the lowest eigenvalues. One can prove (using the orthogonality of the eigenvectors and their completeness relation) that this is equivalent to the usual CUR leverage scoring algorithm, i.e. removing the least significant columns will result in those columns that are most strongly \"correlated\" to the largest eigenvalues. ### Sparsification of angular descriptors The sparsification of the angular descriptors is done in a similar manner as for the local reference configurations.We start by defining the   N  D  \u00d7  N  D {\\\\displaystyle N\\_{D}\\\\times N\\_{D}}  square matrix  A  \\=  X  X  T  . {\\\\displaystyle \\\\mathbf {A} \\=\\\\mathbf {X} \\\\mathbf {X} ^{T}.} Here   N  D {\\\\displaystyle N\\_{D}}  denotes the number of angular descriptors given by   N  D  \\=  \u2211  l \\= 1  L  m a x  1 2  N  R  l  (  N  R  l  \\+ 1  )  (  L  m a x  \\+ 1  )  . {\\\\displaystyle N\\_{D}\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}{\\\\frac {1}{2}}N\\_{R}^{l}\\\\left(N\\_{R}^{l}\\+1\\\\right)\\\\left(L\\_{\\\\mathrm {max} }\\+1\\\\right).} In this equation the symmetry of the descriptors   \u03c1  n \u03bd l  \\=  \u03c1  \u03bd n l {\\\\displaystyle \\\\rho \\_{n\\\u l}\\=\\\\rho \\_{\\\u nl}}  is already taken into account.The matrix   X {\\\\displaystyle \\\\mathbf {X} }  is constructed from the vectors of the angular descriptors   (  x  1  ( 3 )  ,  x  2  ( 3 )  , . . . ,  x  N  B  ( 3 )  ) {\\\\displaystyle \\\\left(\\\\mathbf {x} \\_{1}^{(3\\)},\\\\mathbf {x} \\_{2}^{(3\\)},...,\\\\mathbf {x} \\_{N\\_{B}}^{(3\\)}\\\\right)} . The matrix   X {\\\\displaystyle \\\\mathbf {X} }  has dimension   N  D  \u00d7  N  B {\\\\displaystyle N\\_{D}\\\\times N\\_{B}}  and the matrix product is done over the   N  B {\\\\displaystyle N\\_{B}}  elements of the local configurations. In analogy to the local configurations the   j {\\\\displaystyle j} th element of the matrix   A {\\\\displaystyle \\\\mathbf {A} }  is written as   a  j  \\=  \u2211  \u03c7 \\= 1  N  D  (  u  j \u03c7  l  \u03c7  )  u  \u03c7  . {\\\\displaystyle \\\\mathbf {a} \\_{j}\\=\\\\sum \\\\limits \\_{\\\\chi \\=1}^{N\\_{D}}(u\\_{j\\\\chi }l\\_{\\\\chi })\\\\mathbf {u\\_{\\\\chi }} .} In contrast to the sparsification of the local configuration and more in line with the original CUR method, the columns of matrix   A {\\\\displaystyle \\\\mathbf {A} }  are kept when they are strongly correlated to the   k {\\\\displaystyle k}  (see also ML\\_NRANK\\_SPARSDES) eigenvectors   u  \u03c7 {\\\\displaystyle u\\_{\\\\chi }}  which have the largest eigenvalues   l  \u03c7 {\\\\displaystyle l\\_{\\\\chi }} . The correlation of the eigenvalues is then measured via a leverage scoring  \u03c9  j  \\=  1 k  \u2211  \u03c7 \\= 1  k  u  j \u03c7  2  . {\\\\displaystyle \\\\omega \\_{j}\\={\\\\frac {1}{k}}\\\\sum \\\\limits \\_{\\\\chi \\=1}^{k}u\\_{j\\\\chi }^{2}.} From the leverage scorings, the ones with the highest values are selected until the ratio of the selected descriptors to the total number of descriptors becomes a previously selected value   x  s p a r s {\\\\displaystyle x\\_{\\\\mathrm {spars} }}  (see also ML\\_RDES\\_SPARSDES)."}
{"file_name": "PENALTYPOT.md", "content": "File that defines the bias potential for a biased molecular\\-dynamics run. At the beginning of each metadynamics simulation, VASP attempts to read the file PENALTYPOT containing the bias potential acting on the geometric parameters with `STATUS=5` defined in the ICONST file. In analogy to the time\\-dependent bias potential generated in metadynamics, the bias potential is defined as a superposition of Gaussian hills. Each line in the PENALTYPOT file represents one (multidimensional) Gaussian:  x  1  x  2  . . .  x  m  h w {\\\\displaystyle x\\_{1}x\\_{2}...x\\_{m}hw}  ,where   x  1 {\\\\displaystyle x\\_{1}}  to  x  m {\\\\displaystyle x\\_{m}}  stand for the position in the space of active coordinates, and   h {\\\\displaystyle h}  and  w {\\\\displaystyle w}  are the height and width of the Gaussian, respectively. Note that both positive and negative values are allowed for the parameter   h {\\\\displaystyle h}  . For example, if two active coordinates with `STATUS=5` are defined in the ICONST file:  ```R 1 5 5R 1 6 5   ``` then each line in the PENALTYPOT must contain four items. The bias potential is defined in the following lines:  ```1.6 0.8 1.0 0.21.6 1.0 1.0 0.21.6 1.2 1.0 0.21.6 1.4 1.0 0.21.6 1.6 1.0 0.21.6 1.8 1.0 0.21.6 2.0 1.0 0.2  ```"}
{"file_name": "NVE_ensemble.md", "content": "The NVE ensemble (micro\\-canonical ensemble) is a statistical ensemble that is used to study material properties under the conditions of a constant particle number N, constant volume V and a conserved internal energy E (up to numerical inaccuracies). This page describes how to sample the NVE ensemble from a molecular\\-dynamics run.  **Instructions for setting up a NVE ensemble**  There are two choices of thermostats which can be adjusted to set up a molecular\\-dynamics run.The Andersen thermostat can be used by setting the collision probability (ANDERSEN\\_PROB) with the fictitious heat bath to zero and the Nose\\-Hoover thermostat by setting the mass of the virtual degree of freedom (SMASS) to minus three. Both settings will switch the thermostat off, such that the velocities are determined by the Hellmann\\-Feynman forces or Machine\\-learned force fields only.See table for the corresponding MDALGO setting and related tags. | NVE ensemble | Andersen | Nose\\-Hoover || --- | --- | --- || MDALGO | 1 | 0 or 2 || additional tags to set | ANDERSEN\\_PROB\\=0\\.0 | SMASS\\=\\-3 | The additional tags in the column for every thermostat have to be set to the given values. Otherwise the NVE ensemble will not be realized.There are two implementations of the Nose\\-Hoover thermostat in VASP which will give the same results. The MDALGO\\=0 version can be used even if the code was compiled without the precompiler option \\-Dtbdyn. To enforce constant volume throughout the calculation, ISIF has to be set to less than three. The cell shape and volume have to be preoptimized when doing NVT simulations. This can either be done with a NPT molecular\\-dynamics run or by performing structure and volume optimization with IBRION\\=1 or 2 and setting ISIF\\>2\\.A general guide for molecular\\-dynamics simulations can be found on the molecular\\-dynamics page. *An example INCAR file for the Andersen thermostat*  ``` #INCAR molecular-dynamics tags NVE ensemble  IBRION = 0                   # choose molecular-dynamics  MDALGO = 1                   # using Andersen thermostat ISIF = 2                     # compute stress tensor but do not change box volume/shape  TEBEG = 300                  # set temperature  NSW = 10000                  # number of time steps  POTIM = 1.0                  # time step in femto seconds  ANDERSEN_PROB = 0.0          # setting Andersen collision probability to zero to get NVE enseble  ``` | **Mind:** This INCAR file only contains the parameters for the molecular\\-dynamics part. The electronic minimization or the machine learning tags have to be added. || --- |"}
{"file_name": "Performance.md", "content": "The performance of VASP depends on multiple factors that the user can influence. First of all, state\\-of\\-the\\-art computer architecture, proper use of libraries, and compilation are prerequisites for good performance; see the instructions on installation.  Then, there are many features and algorithms implemented in VASP. Sometimes different algorithms can compute the same quantity with one algorithm being better performing for specific systems. For instance, one algorithm is faster for metallic systems, or another is suitable for systems with many atoms, etc. Next, there are two main aspects of performance: memory consumption and compute time. These are discussed in detail on the following pages:  * Memory* Parallelization Subcategories------------- This category has the following 3 subcategories, out of 3 total. ### G * GPU### M * Memory### P * Parallelization Pages in category \"Performance\"------------------------------- The following 35 pages are in this category, out of 35 total. ### C * Compiler options* CUDA\\-C GPU port of VASP### F * FAQ### I * Installing VASP.5\\.X.X* Installing VASP.6\\.X.X### K * KBLOCK* KPAR### L * LASYNC* Linking to libraries* LPLANE* LSCAAWARE* LSCALAPACK* LSCALU* LUSENCCL### M * Makefile.include* Construction:Memory requirement for machine\\-learned force fields* Memory requirements### N * NBLK* NBLOCK* NCORE* NCSHMEM* NOMEGAPAR* Not enough memory* NSIM* NTAUPAR### O * OpenACC GPU port of VASP### P * Performance issues, try NCORE, KPAR, ALGO, LREAL* PFLAT* PLEVEL* Precompiler options* Profiling* PROUTINE* PTHRESHOLD### S * Shared memory### T * Toolchains"}
{"file_name": "Bethe-Salpeter-equations_calculations.md", "content": "VASP offers a powerful module for solving the Bethe\\-Salpeter (BSE) equation[\\[1]](#cite_note-albrecht:prl:98-1)[\\[2]](#cite_note-rohlfing:prl:98-2). The BSE can be used for obtaining the frequency\\-dependent dielectric function with the excitonic effects and can be based on the ground\\-state electronic structure in the DFT, hybrid\\-functional or *GW* approximations.  Solving Bethe\\-Salpeter equation-------------------------------- To take into account the excitonic effects or the electron\\-hole interaction, one has to use approximations beyond the independent\\-particle (IP) and the random\\-phase approximations (RPA). In VASP, it is done via the algorithm selected by ALGO \\= BSE. These essentially solves the same equations (Casida/Bethe\\-Salpeter) but differ in the way the screening of the Coulomb potential is treated. The TDHF approach uses the exact\\-correlation kernel   f  x c {\\\\displaystyle f\\_{\\\\rm {xc}}} , whereas BSE requires the   W ( \u03c9 \u2192 0 ) {\\\\displaystyle W(\\\\omega \\\\to 0\\)}  from a preceding *GW*  calculation. Thus, in order to perform TDHF or BSE calculations, one has to provide the ground\\-state orbitals (WAVECAR) and the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  (WAVEDER). In addition, the BSE calculation requires files storing the screened Coulomb kernel produced in a *GW* calculation, i.e., Wxxxx.tmp. In summary, both TDHF and BSE approaches require a preceding ground\\-state calculation, however, the TDHF does not need the preceding *GW* and can be performed with the DFT or hybrid\\-functional orbitals and energies. Bethe\\-Salpeter equation calculation------------------------------------ The BSE calculations require a preceding *GW* step to determine the screened Coulomb kernel   W  G  G \u2032  ( q , \u03c9 \u2192 0 ) {\\\\displaystyle W\\_{GG'}(q,\\\\omega \\\\to 0\\)} . The details on *GW* calculations can be found in the practical guide to *GW*  calculations. Here, we note that during the *GW* calculation, VASP writes this kernel into the following files  ```W0001.tmp, W0002.tmp, ..., W{NKPTS}.tmp  ```  and  ```WFULL0001.tmp, WFULL0002.tmp, ..., WFULL{NKPTS}.tmp.  ``` The files Wxxxx.tmp store only the diagonal terms of the kernel and are fairly small, whereas the files WFULLxxxx.tmp store the full matrix. It is important to make sure in the *GW* step that the flag LWAVE \\= .TRUE. is set, so that the WAVECAR stores the one\\-electron *GW* energies and the one\\-electron orbitals, if the *GW* calculation is self\\-consistent. For the self\\-consistent *GW* calculations the following flags should be added  ```LOPTICS   = .TRUE. LPEAD     = .TRUE.  ``` in order to update the WAVEDER using finite differences (LPEAD \\= .TRUE.). The type of *GW* calculation is selected with the ALGO tag, which is discussed in great detail in the practical guide to *GW* calculations. Once the *GW* step is completed, the BSE calculation can be performed using the following setup  ```SYSTEM    = SiNBANDS    = same as in GW calculationISMEAR    = 0SIGMA     = 0.05ALGO      = BSENBANDSO   = 4      \u00a0! determines how many occupied bands are usedNBANDSV   = 8      \u00a0! determines how many unoccupied (virtual) bands are usedOMEGAMAX  = desired_maximum_excitation_energy   ``` Considering that quasiparticle energies in *GW* converge very slowly with the number of unoccupied bands and require large NBANDS, the number of bands included in the BSE calculation should be restricted explicitly by setting the occupied and unoccupied bands (NBANDSO and NBANDSV) included in the BSE Hamiltonian. VASP tries to use sensible defaults, but it is highly recommended to check the OUTCAR file and make sure that the right bands are included. The tag OMEGAMAX specifies the maximum excitation energy of included electron\\-hole pairs and the pairs with the one\\-electron energy difference beyond this limit are not included in the BSE Hamiltonian. Hint: The convergence with respect to NBANDSV and OMEGAMAX should be thoroughly checked as the real part of the dielectric function, as well as the correlation energy, is usually very sensitive to these values, whereas the imaginary part of the dielectric function converges quickly. At the beginning of the BSE calculation, VASP will try to read the WFULLxxxx.tmp files and if these files are not found, VASP will read the Wxxxx.tmp files. For small isotropic bulk systems, the diagonal approximation of the dielectric screening may be sufficient and yields results very similar to the calculation with the full dielectric tensor WFULLxxxx.tmp. Nevertheless, for molecules and atoms as well as surfaces, the full\\-screened Coulomb kernel is strictly required. Both TDHF and BSE approaches write the calculated frequency\\-dependent dielectric function as well as the excitonic energies in the vasprun.xml\") file. Model BSE (mBSE)---------------- BSE calculations can be performed using a model dielectric function[\\[3]](#cite_note-bokdam:scr:2016-3)[\\[4]](#cite_note-tal:prr:2020-4). In this approach the calculation of the screened Coulomb potential is not required. Instead, the model dielectric function can be used to describe the screening of the Coulomb potential by setting the tag LMODELHF with parameters AEXX and HFSCREEN. Model BSE calculation can be performed the following steps:  1. ground\\-state calculation2. GW calculation (optional in model BSE calculation)3. optical absorption calculation via model BSE For example, an optical absorption calculation of bulk Si can be performed using a model dielectric function as described in Ref. [\\[4]](#cite_note-tal:prr:2020-4).  ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     \u00a0! or any larger desired valueALGO      = D      \u00a0! Damped algorithm often required for HF type calculations, ALGO = Normal might work as wellLHFCALC   = .TRUE. LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22LOPTICS   = .TRUE. \u00a0! can also be done in an additional intermediate step  ``` In the second step, the dielectric function is evaluated by solving the Casida equation   ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     ALGO      = TDHFIBSE      = 0NBANDSO   = 4      \u00a0! number of occupied bandsNBANDSV   = 8      \u00a0! number of unoccupied bandsLHARTREE  = .TRUE.LADDER    = .TRUE.LFXC      = .FALSE.\u00a0! local xc kernel is disabled in mBSE LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22  ``` Calculations beyond Tamm\\-Dancoff approximation----------------------------------------------- The TDHF and BSE calculations beyond the Tamm\\-Dancoff approximation (TDA)[\\[5]](#cite_note-sander:prb:15-5) can be performed by setting the ANTIRES \\= 2 in the INCAR file  ```SYSTEM       = SiNBANDS       = same as in GW calculationISMEAR       = 0SIGMA        = 0.05ALGO         = BSE  ANTIRES      = 2     \u00a0! beyond Tamm-DancoffLORBITALREAL = .TRUE. NBANDSO      = 4 NBANDSV      = 8  ``` The flag LORBITALREAL \\= .TRUE. forces VASP to make the orbitals   \u03d5 (  r  ) {\\\\displaystyle \\\\phi ({\\\\bf {r}})}  real valued at the Gamma point as well as k\\-points at the edges of the Brillouin zone. This can improve the performance of BSE/TDHF calculations but it should be used consistently with the ground\\-state calculation. Calculations at finite wavevectors---------------------------------- VASP can also calculate the dielectric function at a   q {\\\\displaystyle {\\\\bf {q}}} \\-vector compatible with the k\\-point grid (finite\\-momentum excitons).   ```SYSTEM       = SiNBANDS       = same as in GW calculationISMEAR       = 0 SIGMA        = 0.05ALGO         = BSE  ANTIRES      = 2 KPOINT_BSE   = 3 -1 0 0 \u00a0! q-point index,  three integersLORBITALREAL = .TRUE.NBANDSO      = 4 NBANDSV      = 8  ``` The tag KPOINT\\_BSE sets the   q {\\\\displaystyle {\\\\bf {q}}} \\-point and the shift at which the dielectric function is calculated. The first integer specifies the index of the   q {\\\\displaystyle {\\\\bf {q}}} \\-point and the other three values shift the provided   q {\\\\displaystyle {\\\\bf {q}}} \\-point by an arbitrary reciprocal vector   G {\\\\displaystyle {\\\\bf {G}}} . The reciprocal lattice vector is supplied by three integer values   n  i {\\\\displaystyle n\\_{i}}  with   G  \\=  n  1  G  1  \\+  n  2  G  2  \\+  n  3  G  3 {\\\\displaystyle {\\\\bf {G}}\\=n\\_{1}{\\\\bf {G}}\\_{1}\\+n\\_{2}{\\\\bf {G}}\\_{2}\\+n\\_{3}{\\\\bf {G}}\\_{3}} . This feature is only supported as of VASP.6 (in VASP.5 the feature can be enabled, but the results are erroneous). Consistency tests----------------- In order to verify the results obtained in the BSE calculation, one can perform a number of consistency tests. ### First test: IP dielectric function The BSE code can be used to reproduce the independent particle spectrum if the RPA and the ladder diagrams are switched off  ```LADDER   = .FALSE. LHARTREE = .FALSE.  ``` This should yield exactly the same dielectric function as the preceding calculation with LOPTICS \\= .TRUE. We recommend to set the complex shift manually in the BSE as well as the preceding optics calculations, e.g. CSHIFT \\= 0\\.4\\. The dielectric functions produced in these calculations should be identical. ### Second test: RPA dielectric function The RPA/*GW* dielectric function can be used to verify the correctness of the RPA dielectric function calculated via the BSE algorithm. The RPA dielectric function in the BSE code can be calculated by switching off the ladder diagrams while keeping the RPA terms, i.e., the BSE calculation should be performed with the following tags  ```ANTIRES   = 2LHARTREE  = .TRUE.LADDER    = .FALSE.CSHIFT    = 0.4  ``` The same dielectric function should be obtained via the *GW* code by setting these flags  ```ALGO      = CHI NOMEGA    = 200CSHIFT    = 0.4  ``` Make sure that a large CSHIFT is selected as the *GW* code calculates the polarizability at very few frequency points. Note that the *GW* code does not use the TDA, so ANTIRES \\= 2 is required for the TDHF/BSE calculation. In our experience, the agreement can be made practically perfect provided sufficient frequency points are used and all available occupied and virtual orbitals are included in the BSE step. ### Third test: RPA correlation energy The BSE code can be used to calculate the correlation energy via the plasmon equation. This correlation energy can be compared with the RPA contributions to the correlation energies for each   q {\\\\displaystyle {\\\\bf {q}}} \\-point, which can be found in the OUTCAR file of the ACFDT/RPA calculation performed with ALGO \\= RPA:  ```q-point correlation energy      -0.232563      0.000000q-point correlation energy      -0.571667      0.000000q-point correlation energy      -0.176976      0.000000  ``` For instance, if the BSE calculation is performed at the second   q {\\\\displaystyle {\\\\bf {q}}} \\-point   ```ANTIRES    = 2LADDER     = .FALSE.LHARTREE   = .TRUE.KPOINT_BSE = 2 0 0 0  ``` the same correlation energy should be found in the corresponding OUTCAR file:  ```plasmon correlation energy        -0.5716670828  ``` For exact compatibility, ENCUT and ENCUTGW should be set to the same values in all calculations, while the head and wings of the dielectric matrix should not be included in the ACFDT/RPA calculations, i.e., remove the WAVEDER file prior to the ACFDT/RPA calculation. In the BSE/RPA calculation removing the WAVEDER file is not required. Furthermore, NBANDS in the ACFDT/RPA calculation must be identical to the number of included bands NBANDSO plus NBANDSV in the BSE/RPA, so that the same number of excitation pairs are included in both calculations. Also, the OMEGAMAX tag in the BSE calculation should not be set. Common issues------------- If the dielectric matrix contains only zeros in the vasprun.xml\") file, the WAVEDER file was not read or is incompatible to the WAVEDER file. This requires a recalculation of the WAVEDER file. This can be achieved even after *GW* calculations using the following intermediate step:  ```ALGO      = NothingLOPTICS   = .TRUE.LPEAD     = .TRUE.  ``` The flag LPEAD \\= .TRUE. is strictly required and enforces a \"numerical\" differentiation of the orbitals with respect to   k {\\\\displaystyle k} . Calculating the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  analytically is not possible at this point, since the Hamiltonian that was used to determine the orbitals is unknown to VASP."}
{"file_name": "LCHIMAG.md", "content": "LCHIMAG= .TRUE. \\| .FALSE.   Default: **LCHIMAG** \\= .FALSE.nDescription: calculate the chemical shifts by means of linear response.  --- For LCHIMAG\\=.TRUE., VASP calculates the chemical shift tensors. The chemical shielding tensor is defined as:  \u03c3  i j  (  R  ) \\= \u2212  \u2202  B  i  i n d  (  R  )  \u2202  B  j  e x t {\\\\displaystyle \\\\sigma \\_{ij}(\\\\mathbf {R} )\\=\\-{\\\\frac {\\\\partial B\\_{i}^{\\\\mathrm {ind} }(\\\\mathbf {R} )}{\\\\partial B\\_{j}^{\\\\mathrm {ext} }}}} Here   R {\\\\displaystyle \\\\mathbf {R} }  denotes the atomic nuclear site,   i {\\\\displaystyle i}  and  j {\\\\displaystyle j}  denote cartesian indices,   B  e x t {\\\\displaystyle B^{\\\\mathrm {ext} }}  an applied DC external magnetic field and   B  i n d  (  R  ) {\\\\displaystyle B^{\\\\mathrm {ind} }(\\\\mathbf {R} )}  the induced magnetic field at the nucleus.NMR experiments yield information on the symmetric part of the tensor. Typical NMR experiments yield information on the shielding relative to that of a reference compound:  \u03b4  i j  (  R  ) \\=  \u03c3  i j  r e f  \u2212  \u03c3  i j  (  R  ) {\\\\displaystyle \\\\delta \\_{ij}(\\\\mathbf {R} )\\=\\\\sigma \\_{ij}^{\\\\mathrm {ref} }\\-\\\\sigma \\_{ij}(\\\\mathbf {R} )} In this (approximate) formula   \u03c3  i j  r e f {\\\\displaystyle \\\\sigma \\_{ij}^{\\\\mathrm {ref} }}  is the isotropic shielding of the nucleous in the reference compound.   \u03b4  i j  (  R  ) {\\\\displaystyle \\\\delta \\_{ij}(\\\\mathbf {R} )}  is the chemical shift tensor. In VASP the chemical \"shift\" tensor is calculated as:  \u03b4  i j  (  R  )  \\[ V A S P ]  \\=  \u2202  B  i  i n d  (  R  )  \u2202  B  j  e x t {\\\\displaystyle \\\\delta \\_{ij}(\\\\mathbf {R} )\\\\mathrm {\\[VASP]} \\={\\\\frac {\\\\partial B\\_{i}^{\\\\mathrm {ind} }(\\\\mathbf {R} )}{\\\\partial B\\_{j}^{\\\\mathrm {ext} }}}} This is minus the shielding tensor. It is not the true chemical shift tensor. To convert it to the real shift tensor one should add thereference shielding:  \u03b4  i j  (  R  ) \\=  \u03c3  i j  r e f  \\+  \u03b4  i j  (  R  )  \\[ V A S P ] {\\\\displaystyle \\\\delta \\_{ij}(\\\\mathbf {R} )\\=\\\\sigma \\_{ij}^{\\\\mathrm {ref} }\\+\\\\delta \\_{ij}(\\\\mathbf {R} )\\\\mathrm {\\[VASP]} } VASP calculates chemical \"shifts\" for non\\-metallic crystalline systems using the linear response method of Yates, Pickard and Mauri.[\\[1]](#cite_note-pickard:prb:01-1)[\\[2]](#cite_note-yates:prb:07-2) **INPUT** A typical INCAR could look like this:  ```PREC = A               # niceENCUT = 600.0          # typically higher cutoffs than usual are neededEDIFF = 1E-8           # you need much smaller EDIFFs than normal.ISMEAR = 0; SIGMA = 0.1 # no fancy smearings, SIGMA sufficiently smallLREAL = A              # helps for speed for large systems, not necessary per se LCHIMAG = .TRUE.       # to switch on linear response for chemical shiftsDQ = 0.001             # often the default is sufficientICHIBARE = 1           # often the default is sufficientLNMR_SYM_RED = .TRUE.  # be on the safe sideNLSPLINE = .TRUE.      # only needed if LREAL is NOT set.  ``` The first block of tags in the INCAR above expresses the fact that the calculations of chemical shifts by means of linear response often require a high accuracy (PREC\\=A, EDIFF\u22641E\\-8, high ENCUT). The chemical shifts are calculated from the orbital magnetic response under the assumption that the system is an insulator. It makes no sense to use smearing schemes intended for metals, indeed, doing so can generate nonsense. It is safe to use ISMEAR\\=0 and make SIGMA so small that states have no fractional occupancies. The se\u00e7ond block of tags switches on the calculation of the chemical shifts (LCHIMAG\\=.TRUE.), and controls several aspects of the finite difference *k*\\-space derivatives (Eqs. 38, 40, and 47 in the work of Yates *et al.*[\\[2]](#cite_note-yates:prb:07-2)): * DQ is the step size for the finite difference *k*\\-space derivative. Typical values are in the range \\[0\\.001 \\- 0\\.003]. The default (DQ\\=0\\.001\\) is often sufficient. * ICHIBARE is the order of the finite difference stencil used to calculate the magnetic susceptibility (second order derivative in Eq. 47 of Yates *et al.*[\\[2]](#cite_note-yates:prb:07-2)). ICHIBARE may be set to 1, 2, or 3\\. Often the default (ICHIBARE\\=1\\) is sufficient. A higher ICHIBARE results in a substantial increase of the computational load. * For NLSPLINE\\=.TRUE., the PAW projectors in reciprocal space (LREAL\\=.FALSE.) are set up using a spline interpolation so that they are *k*\\-differentiable. This improves the susceptibility contribution to the shifts (via the aforementioned Eq. 47\\). It only slightly affects the other contributions to the shifts (Eqs. 38 and 40\\). It is advised to set NLSPLINE\\=.TRUE. if PAW projectors are applied in reciprocal space, but only in case of calculation of chemical shifts. As this option also gives slightly different total energies, it is advised to use the default NLSPLINE\\=.FALSE. in all other calculations for reasons of compatibility. Real space projectors are *k*\\-differentiable by construction, hence do not require to set NLSPLINE\\=.TRUE. * The star on which the *k*\\-space derivative is calculated is oriented along the cartesian directions in *k*\\-space. If the symmetry operations in *k*\\-space do not map this star onto itself, erroneous results can be obtained. To have VASP check for such operations, set LNMR\\_SYM\\_RED\\=.TRUE., and such operations will be discarded, resulting in a larger IBZ. In case of any doubt set LNMR\\_SYM\\_RED\\=.TRUE. Beware: It matters how the real space lattice vectors are set up relative to the cartesian coordinates in POSCAR. It determines the orientation of the *k*\\-space star and hence can affect the efficiency via the number of *k*\\-points in the IBZ. The chemical shift is calculated via the induced current.[\\[1]](#cite_note-pickard:prb:01-1)[\\[2]](#cite_note-yates:prb:07-2)It has contributions from the plane wave grid and one\\-center contributions (the induced fieldat the center of a PAW sphere due to the augmentation current inside that sphere). Two\\-center contributions (induced fields due to augmentation currents inother PAW spheres) are standard neglected. These contributions can be switched on using LLRAUG. For very high accuracy calculations use LASPH. No special POTCAR files are necessary. The GIPAW is applied using the projectors functions and partial waves that are stored in the regular POTCAR files. A few remarks, however, on accuracy in relation to the different POTCAR flavours: * Results sensitively depend on the quality, *i.e.*, completeness of the partial wave/projector function set in the energy range needed for good chemical transferability. Result obtained with different POTCAR flavours can differ a few ppm for first and second row *sp*\\-bonded elements (except for H). * Use POTCAR files generated with a consistent exchange\\-correlation functional. The PAW reconstruction with AE partial waves is crucial as the field on the nucleus needs to be calculated. So avoid, if possible, overriding LEXCH from POTCAR with an explicit GGA\\-tag in the INCAR. **OUTPUT** At the end of the OUTCAR file, VASP prints the chemical shift tensors both before and after space group symmetrization. These are the absolute tensors for the infinite lattice, excluding core contributions. Next lines \"Q\\=0 CONTRIBUTION TO CHEMICAL SHIFT\" are printed.This is a shift tensor arising solely from the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  component of the induced field. This component is related to the shape of the sample and depends only on the induced macroscopic surface currents.It is printed for a spherical sample (for which is it nucleus independent), and calculated from the orbital magnetic susceptibility (see below), that is also printed.To obtain the full absolute tensors requires adding both the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution and the contributions due to the core electrons. The latter consist of contributions for each chemical species separately(depending on POTCAR) and a global   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  susceptibility contribution. Finally the tensor is processed and its (CSA) characteristics are printed on OUTCAR. The tensor is symmetrized (  \u03c3  i j  \\=  \u03c3  j i {\\\\displaystyle \\\\sigma \\_{ij}\\=\\\\sigma \\_{ji}}  is enforced) and diagonalized. From the three diagonal values the isotropic chemical \"shift\"   \u03b4  i s o  \\[ V A S P ] {\\\\displaystyle \\\\delta \\_{\\\\mathrm {iso} }\\\\mathrm {\\[VASP]} } , span   \u03a9 {\\\\displaystyle \\\\Omega }  and skew   \u03ba {\\\\displaystyle \\\\kappa }  are calculated and printed.[\\[3]](#cite_note-mason:ssn:93-3) Note that   \u03ba {\\\\displaystyle \\\\kappa }  is ill\\-defined if   \u03a9 \\= 0 {\\\\displaystyle \\\\Omega \\=0} . Note that the isotropic chemical shift   \u03b4  i s o  \\[ V A S P ] {\\\\displaystyle \\\\delta \\_{\\\\mathrm {iso} }\\\\mathrm {\\[VASP]} }  (ISO\\_SHIFT) as printed is actually minus the isotropic shielding. To make it a *real shift* one should add the reference shielding. Also note that   \u03a9 {\\\\displaystyle \\\\Omega }  (SPAN) and   \u03ba {\\\\displaystyle \\\\kappa }  (SKEW) are unambiguously defined.[\\[3]](#cite_note-mason:ssn:93-3) Units are ppm, except for the skew. This typically looks like:  ```  ---------------------------------------------------------------------------------   CSA tensor (J. Mason, Solid State Nucl. Magn. Reson. 2, 285 (1993))  ---------------------------------------------------------------------------------              EXCLUDING G=0 CONTRIBUTION             INCLUDING G=0 CONTRIBUTION          -----------------------------------   -----------------------------------   ATOM    ISO_SHIFT        SPAN        SKEW     ISO_SHIFT        SPAN        SKEW  ---------------------------------------------------------------------------------   (absolute, valence only)      1    4598.8125      0.0000      0.0000     4589.9696      0.0000      0.0000      2     291.5486      0.0000      0.0000      282.7058      0.0000      0.0000      3     736.5979    344.8803      1.0000      727.7550    344.8803      1.0000      4     736.5979    344.8803      1.0000      727.7550    344.8803      1.0000      5     736.5979    344.8803      1.0000      727.7550    344.8803      1.0000  ---------------------------------------------------------------------------------   (absolute, valence and core)      1   -6536.1417      0.0000      0.0000    -6547.9848      0.0000      0.0000      2   -5706.3864      0.0000      0.0000    -5718.2296      0.0000      0.0000      3   -2369.4015    344.8803      1.0000    -2381.2446    344.8803      1.0000      4   -2369.4015    344.8803      1.0000    -2381.2446    344.8803      1.0000      5   -2369.4015    344.8803      1.0000    -2381.2446    344.8803      1.0000  ---------------------------------------------------------------------------------   IF SPAN.EQ.0, THEN SKEW IS ILL-DEFINED  ---------------------------------------------------------------------------------   ``` The columns excluding the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution are useful for supercell calculations on molecules.The columns including the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution are for crystals.The upper block gives the shielding due to only the electrons included in the SCF calculation.The lower block has the contributions due to the frozen PAW cores added. These core contributions are rigid.[\\[4]](#cite_note-gregor:jcp:99-4) They depend on POTCAR and are isotropic, i.e. affect neither SPAN nor SKEW. By default the orbital **magnetic susceptibility** is calculated using the so\\-called *pGv*\\-approximation, i.e. Eqs. 46\\-48 of Yates  *et al.*[\\[2]](#cite_note-yates:prb:07-2)As of vasp.6\\.4\\.0 also the *vGv*\\-approximation of the susceptibility is calculated. By default, the *pGv* resultis applied for the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution to the shifts. With LVGVAPPL one can force VASP to use the *vGv* result for the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution instead. With LVGVCALC one can suppress calculation of the *vGv* susceptibility. For details see LVGVCALC. **Beware** the treatment of the orbital magnetism is non\\-relativistic. This is fine for light nuclei.The standard POTCARs are scalar\\-relativistic and account partially for relativistic effects.The accuracy can be improved using LBONE, that restores the small B\\-component of the wave function inside the PAW spheres.Spin\\-orbit coupling is not implemented for chemical shift calculations. **What to do in case of insufficient memory?** VASP trades off memory savings against speed, opting for the latter.The response calculation is inherently parallel over *k*\\-points. This can be used to economize on memory:First do a regular self\\-consistent calculation at high accuracy for the full *k*\\-point mesh. Save the CHGCAR file.Next do a chemical shift calculation for each *k*\\-point in the IBZ separately, starting from CHGCAR, *i.e.*, using ICHARG\\=11\\.Finally calculate the shifts as a *k*\\-point weighted average of the symmetrized shifts of the individual *k*\\-points."}
{"file_name": "Matsubara_formalism.md", "content": "The zero\\-temperature formalism of many\\-body perturbation theory breaks down for metals (systems with zero energy band\\-gap) as pointed out by Kohn and Luttinger.[\\[1]](#cite_note-KohnLuttinger:PR:1960-1) This conundrum is lifted by considering diagrammatic perturbation theory at finite temperature   T \\> 0 {\\\\displaystyle T\\>0} , which may be understood by an analytical continuation of the real\\-time   t {\\\\displaystyle t}  to the imaginary time axis   \u2212 i \u03c4 {\\\\displaystyle \\-i\\\\tau } . Matsubara has shown that this Wick rotation in time   t \u2192 \u2212 i \u03c4 {\\\\displaystyle t\\\\to \\-i\\\\tau }  reveals an intriguing connection to the inverse temperature   \u03b2 \\= 1  /  T {\\\\displaystyle \\\\beta \\=1/T}  of the system.[\\[2]](#cite_note-Matsubara:PTP:1955-2) More precisely, Matsubara has shown that all terms in perturbation theory at finite temperature can be expressed as integrals of imaginary time quantities (such as the polarizability   \u03c7 ( \u2212 i \u03c4 ) {\\\\displaystyle \\\\chi (\\-i\\\\tau )} ) over the fundamental interval   \u2212 \u03b2 \u2264 \u03c4 \u2264 \u03b2 {\\\\displaystyle \\-\\\\beta \\\\leq \\\\tau \\\\leq \\\\beta }  . As a consequence, one decomposes imaginary time quantities into a Fourier series with period   \u03b2 {\\\\displaystyle \\\\beta } that determines the spacing of the Fourier modes. For instance the imaginary polarizability can be written as  \u03c7 ( \u2212 i \u03c4 ) \\=  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  \u03c7 \\~  ( i  \u03bd  m  )  e  \u2212 i  \u03bd  m  \u03c4  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\chi (\\-i\\\\tau )\\={\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\tilde {\\\\chi }}(i\\\u \\_{m})e^{\\-i\\\u \\_{m}\\\\tau },\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } and the corresponding random\\-phase approximation of the correlation energy at finite temperature becomes a series over (in this case, bosonic) Matsubara frequencies  \u03a9  c  R P A  \\=  1 2  1 \u03b2  \u2211  m \\= \u2212 \u221e  \u221e  T r  {  ln \u2061  \\[  1 \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  ]  \u2212  \u03c7 \\~  ( i  \u03bd  m  ) V  }  ,  \u03bd  m  \\=  2 m  \u03b2  \u03c0 {\\\\displaystyle \\\\Omega \\_{c}^{\\\\rm {RPA}}\\={\\\\frac {1}{2}}{\\\\frac {1}{\\\\beta }}\\\\sum \\_{m\\=\\-\\\\infty }^{\\\\infty }{\\\\rm {Tr}}\\\\left\\\\lbrace \\\\ln \\\\left\\[1\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right]\\-{\\\\tilde {\\\\chi }}(i\\\u \\_{m})V\\\\right\\\\rbrace ,\\\\quad \\\u \\_{m}\\={\\\\frac {2m}{\\\\beta }}\\\\pi } The Matsubara formalism has the advantage that all contributions to the Green's function and the polarizability are mathematically well\\-defined, including contributions from states close to the chemical potential   \u03f5  n  k  \u2248 \u03bc {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\approx \\\\mu } , such that Matsubara series also converge for metallic systems. Although formally convenient, the Matsubara series converges poorly with the number of considered terms in practice. VASP, therefore, uses a compressed representation of the Fourier modes by employing the Minimax\\-Isometry method.[\\[3]](#cite_note-Kaltak:PRB:2020-3) This approach converges exponentially with the number of considered frequency points. 1. \u2191 W. Kohn and J. M. Luttinger, Phys. Rev. **118**, 41 (1960\\).2. \u2191 T. Matsubara, Prog. Theor. Phys. **14**, 351 (1955\\).3. \u2191 M. Kaltak and G. Kresse, Phys. Rev. B. **101**, 205145 (2020\\)."}
{"file_name": "XDATCAR.md", "content": "This file contains the ionic configuration of the system after a given number of ionic steps which are set by the tag NBLOCK in the INCAR file.   ---"}
{"file_name": "ICHARG.md", "content": "ICHARG= 0 \\| 1 \\| 2 \\| 4n| Default: **ICHARG** | \\= 2 | if ISTART\\=0 || --- | --- | --- ||  | \\= 0 | else | Description: ICHARG determines how VASP constructs the *initial* charge density.  --- * ICHARG\\=0 Calculate the charge density from initial wave functions.If ISTART is *internally reset* due to an invalid WAVECAR file, ICHARG will be set to ICHARG\\=2\\.* ICHARG\\=1 Read the charge density from CHGCAR file, and extrapolate from the old positions (on CHGCAR) to the new positions using a linear combination of atomic charge densities.In the PAW method, there is, however, one important point to keep in mind: For the on\\-site densities (that is, the densities within the PAW sphere), only l\\-decomposed charge densities up to LMAXMIX are written. Upon restart, the energies might, therefore, differ slightly from the fully converged energies. The discrepancies can be large for the DFT\\+U method. In this case, one might need to increase LMAXMIX to 4 (d\\-elements) or even 6 (f\\-elements). | **Tip:** To improve convergence and reduce the number of electronic steps, it is recommended to set ICHARG \\= 1 when starting calculations repeatedly with small changes in the input parameters. || --- | * ICHARG\\=2 Take superposition of atomic charge densities.* ICHARG\\=4 Read potential from file POT. The local potential on the file POT is written by the optimized\\-effective\\-potential methods (OEP), if the flag LVTOT\\=.TRUE. is supplied in the INCAR file. Supported as of VASP.5\\.1\\.* ICHARG\\=10 non\\-selfconsistent calculations: Adding 10 to the value of ICHARG, e.g., ICHARG\\=11 or 12 (or the less convenient value 10\\) means that the charge density will be kept constant during the *entire electronic minimization*.There are several reasons why to keep the charge density constant:* ICHARG\\=11 To obtain the eigenvalues (for band\\-structure plots) or the density of states (DOS) of a given charge density read from CHGCAR. The self\\-consistent CHGCAR file must be determined beforehand by a fully self\\-consistent calculation with a k\\-point grid spanning the entire Brillouin zone.* ICHARG\\=12 Non\\-self\\-consistent calculations for a superposition of atomic charge densities. This is in the spirit of the non\\-self\\-consistent Harris\\-Foulkes functional. The stress and the forces calculated by VASP are correct, and it is possible to perform an ab\\-initio MD for the non\\-selfconsistent Harris\\-Foulkes functional. | **Tip:** If ICHARG is set to 11 or 12, it is strongly recommended to set LMAXMIX to twice the maximum l\\-quantum number in the pseudopotentials. Thus, for s and p elements LMAXMIX should be set to 2, for d elements LMAXMIX should be set to 4, and for f elements LMAXMIX should be set to 6\\. || --- | The initial charge density is of importance in the following cases: * If ICHARG\u226510 the charge density remains constant during the run. * For all algorithms except IALGO\\=5X the initial charge density is used to set up the initial Hamiltonian that is used in the first few non\\-selfconsistent steps, c.f., NELMDL tag."}
{"file_name": "PAW_control_tags.md", "content": "There are a few tags that controlthe behavior of the PAW implementation.The first one is LMAXPAW\\=*l*. This flag sets the maximum *l*\\-quantum number forthe evaluation of the on\\-site terms on theradial support grids in the PAW method. The default for LMAXPAW is  2 \u2217  l  m a x {\\\\displaystyle 2\\*l\\_{max}} , where   l  m a x {\\\\displaystyle l\\_{max}}  is the maximum angularquantum number of the partial waves.A useful setting for this tag is for instance LMAXPAW\\=0\\. In this case, only spherical terms are evaluated on theradial grid. This does not mean that a\\-spherical termsare totally neglected, because the compensation chargesare always expanded up to   2 \u2217  l  m a x {\\\\displaystyle 2\\*l\\_{max}}  on the plane wavegrid. For LMAXPAW\\=\\-1, no on\\-site correction terms are evaluated on the radialsupport grid, which effectively means that thebehavior of US\\-PP's is recovered with PAW input datasets.Usually this allows very efficient and fast calculations,and this switch might be of interest for relaxationsand molecular dynamics runs. Energies should be evaluatedwith the default setting for LMAXPAW. An additional tag LMAXMIX\\=*l* controls up to which *l* quantum number the on\\-site PAWcharge densities are passed through the charge density mixer and writtento the CHGCAR file. The default is LMAXMIX}\\=2\\. Higher l\\-quantum numbers are usually **not**handled by the mixer, i.e. a straight mixing is applied for them(the PAW on\\-site charge density for higher l quantum numbers is reset preciselyto the value corresponding to the present orbitals). Usually,it is not required to increase LMAXMIX, but the following two casesare exceptions: * L(S)DA\\+U calculations require in many cases an increase of LMAXMIX to 4 (or 6 for f\\-elements) in order to obtain fast convergence to the groundstate.* The CHGCAR file also contains only information up to LMAXMIX for the on\\-site PAW occupancy matrices. When the CHGCAR file is read and kept fixed in the course of the calculations (ICHARG\\=11\\), the results will be necessarily not identical to a self\\-consistent run. The deviations can be (or actually are) large for L(S)DA\\+U calculations. For the calculation of band structures within the L(S)DA\\+U approach it is strictly required to increase LMAXMIX to 4 (d elements) and 6 (f elements). The second switch, that is useful in the context of thePAW method (and US\\-PP) is ADDGRID.The default is ADDGRID\\=*.FALSE.*. If ADDGRID\\=*.TRUE.* is written in the INCAR file, an additional (third) support grid isused for the evaluation of the augmentation charges. Thisthird grid contains 8 times more points than the finegrid NGXF, NGYF, NGZF.Whenever terms involving augmentation charges are evaluated, thisthird grid is used.For instance: The augmentation charge is evaluated firstin real space on this fine grid, FFT\\-transformed to reciprocal spaceand then added to the total charge density on thegrid NGXF, NGYF, NGZF.The additional grid helps to reduce the noise in the forces significantly.In many cases, it even allows to perform calculations in whichNGXF\\=NGX etc. This can be achieved by settingENAUG \\= 1 and ADDGRID\\=*.TRUE.* in the INCAR file. The flag can also be used for US\\-PPs,in particular, to reduce the noise in the forces."}
{"file_name": "MgO_optimum_mixing.md", "content": "Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials Task---- Find optimum HSE mixing parameter for MgO.  Input----- ### POSCAR  ``` MgO-18.793500000000000000000.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 1 1cart0.00 0.00 0.000.50 0.0 0.0  ``` ### INCAR  ```################################################ Optimum HSE mixing parameter (AEXX) for MgO## Expt gap = 7.8 eV## fit gap wrt. 0<AEXX<1## Compute the bandgap using different value of AEXX ## in the range (0,1) and find the value which leads ## to the best agreement with the experimental gap. ## hint: the gap grows lineraly with AEXX## Better preconverge with PBE first!############################################## ## Selects the HSE06 hybrid functional#LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX=0.25  #ALGO = D\u00a0; TIME = 0.4  ## Leave this inISMEAR =  0SIGMA  =  0.01GGA    = PE  ``` ### KPOINTS  ```k-points 0Gamma  4  4  4  0  0  0  ``` Calculation----------- * script to extract G\\-eigenvalues and calculate the bandgap  ```grep \"      4     \" OUTCAR | head -8 | \\awk 'BEGIN{i=1}{a[i]=$2\u00a0; i=2} END{for (j=1;j<i;j++) print j,a[j]}' > vband.datgrep \"      5     \" OUTCAR | head -8 | \\awk 'BEGIN{i=1}{a[i]=$2\u00a0; i=2} END{for (j=1;j<i;j++) print j,a[j]}' > cband.dat  ``` The bandgap is obainted by substracting the eigenvalues written in cband.dat (conduction band minimum at Gamma) and vband.dat (valence band maximum at Gamma) Download--------  5\\_2\\_MgO\\_mixing.tgz Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials"}
{"file_name": "BSE_calculations.md", "content": "VASP offers a powerful module for solving the Bethe\\-Salpeter (BSE) equation[\\[1]](#cite_note-albrecht:prl:98-1)[\\[2]](#cite_note-rohlfing:prl:98-2). The BSE can be used for obtaining the frequency\\-dependent dielectric function with the excitonic effects and can be based on the ground\\-state electronic structure in the DFT, hybrid\\-functional or *GW* approximations.  Solving Bethe\\-Salpeter equation-------------------------------- To take into account the excitonic effects or the electron\\-hole interaction, one has to use approximations beyond the independent\\-particle (IP) and the random\\-phase approximations (RPA). In VASP, it is done via the algorithm selected by ALGO \\= BSE. These essentially solves the same equations (Casida/Bethe\\-Salpeter) but differ in the way the screening of the Coulomb potential is treated. The TDHF approach uses the exact\\-correlation kernel   f  x c {\\\\displaystyle f\\_{\\\\rm {xc}}} , whereas BSE requires the   W ( \u03c9 \u2192 0 ) {\\\\displaystyle W(\\\\omega \\\\to 0\\)}  from a preceding *GW*  calculation. Thus, in order to perform TDHF or BSE calculations, one has to provide the ground\\-state orbitals (WAVECAR) and the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  (WAVEDER). In addition, the BSE calculation requires files storing the screened Coulomb kernel produced in a *GW* calculation, i.e., Wxxxx.tmp. In summary, both TDHF and BSE approaches require a preceding ground\\-state calculation, however, the TDHF does not need the preceding *GW* and can be performed with the DFT or hybrid\\-functional orbitals and energies. Bethe\\-Salpeter equation calculation------------------------------------ The BSE calculations require a preceding *GW* step to determine the screened Coulomb kernel   W  G  G \u2032  ( q , \u03c9 \u2192 0 ) {\\\\displaystyle W\\_{GG'}(q,\\\\omega \\\\to 0\\)} . The details on *GW* calculations can be found in the practical guide to *GW*  calculations. Here, we note that during the *GW* calculation, VASP writes this kernel into the following files  ```W0001.tmp, W0002.tmp, ..., W{NKPTS}.tmp  ```  and  ```WFULL0001.tmp, WFULL0002.tmp, ..., WFULL{NKPTS}.tmp.  ``` The files Wxxxx.tmp store only the diagonal terms of the kernel and are fairly small, whereas the files WFULLxxxx.tmp store the full matrix. It is important to make sure in the *GW* step that the flag LWAVE \\= .TRUE. is set, so that the WAVECAR stores the one\\-electron *GW* energies and the one\\-electron orbitals, if the *GW* calculation is self\\-consistent. For the self\\-consistent *GW* calculations the following flags should be added  ```LOPTICS   = .TRUE. LPEAD     = .TRUE.  ``` in order to update the WAVEDER using finite differences (LPEAD \\= .TRUE.). The type of *GW* calculation is selected with the ALGO tag, which is discussed in great detail in the practical guide to *GW* calculations. Once the *GW* step is completed, the BSE calculation can be performed using the following setup  ```SYSTEM    = SiNBANDS    = same as in GW calculationISMEAR    = 0SIGMA     = 0.05ALGO      = BSENBANDSO   = 4      \u00a0! determines how many occupied bands are usedNBANDSV   = 8      \u00a0! determines how many unoccupied (virtual) bands are usedOMEGAMAX  = desired_maximum_excitation_energy   ``` Considering that quasiparticle energies in *GW* converge very slowly with the number of unoccupied bands and require large NBANDS, the number of bands included in the BSE calculation should be restricted explicitly by setting the occupied and unoccupied bands (NBANDSO and NBANDSV) included in the BSE Hamiltonian. VASP tries to use sensible defaults, but it is highly recommended to check the OUTCAR file and make sure that the right bands are included. The tag OMEGAMAX specifies the maximum excitation energy of included electron\\-hole pairs and the pairs with the one\\-electron energy difference beyond this limit are not included in the BSE Hamiltonian. Hint: The convergence with respect to NBANDSV and OMEGAMAX should be thoroughly checked as the real part of the dielectric function, as well as the correlation energy, is usually very sensitive to these values, whereas the imaginary part of the dielectric function converges quickly. At the beginning of the BSE calculation, VASP will try to read the WFULLxxxx.tmp files and if these files are not found, VASP will read the Wxxxx.tmp files. For small isotropic bulk systems, the diagonal approximation of the dielectric screening may be sufficient and yields results very similar to the calculation with the full dielectric tensor WFULLxxxx.tmp. Nevertheless, for molecules and atoms as well as surfaces, the full\\-screened Coulomb kernel is strictly required. Both TDHF and BSE approaches write the calculated frequency\\-dependent dielectric function as well as the excitonic energies in the vasprun.xml\") file. Model BSE (mBSE)---------------- BSE calculations can be performed using a model dielectric function[\\[3]](#cite_note-bokdam:scr:2016-3)[\\[4]](#cite_note-tal:prr:2020-4). In this approach the calculation of the screened Coulomb potential is not required. Instead, the model dielectric function can be used to describe the screening of the Coulomb potential by setting the tag LMODELHF with parameters AEXX and HFSCREEN. Model BSE calculation can be performed the following steps:  1. ground\\-state calculation2. GW calculation (optional in model BSE calculation)3. optical absorption calculation via model BSE For example, an optical absorption calculation of bulk Si can be performed using a model dielectric function as described in Ref. [\\[4]](#cite_note-tal:prr:2020-4).  ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     \u00a0! or any larger desired valueALGO      = D      \u00a0! Damped algorithm often required for HF type calculations, ALGO = Normal might work as wellLHFCALC   = .TRUE. LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22LOPTICS   = .TRUE. \u00a0! can also be done in an additional intermediate step  ``` In the second step, the dielectric function is evaluated by solving the Casida equation   ```SYSTEM    = SiISMEAR    = 0 SIGMA     = 0.05NBANDS    = 16     ALGO      = TDHFIBSE      = 0NBANDSO   = 4      \u00a0! number of occupied bandsNBANDSV   = 8      \u00a0! number of unoccupied bandsLHARTREE  = .TRUE.LADDER    = .TRUE.LFXC      = .FALSE.\u00a0! local xc kernel is disabled in mBSE LMODELHF  = .TRUE. AEXX      = 0.083HFSCREEN  = 1.22  ``` Calculations beyond Tamm\\-Dancoff approximation----------------------------------------------- The TDHF and BSE calculations beyond the Tamm\\-Dancoff approximation (TDA)[\\[5]](#cite_note-sander:prb:15-5) can be performed by setting the ANTIRES \\= 2 in the INCAR file  ```SYSTEM       = SiNBANDS       = same as in GW calculationISMEAR       = 0SIGMA        = 0.05ALGO         = BSE  ANTIRES      = 2     \u00a0! beyond Tamm-DancoffLORBITALREAL = .TRUE. NBANDSO      = 4 NBANDSV      = 8  ``` The flag LORBITALREAL \\= .TRUE. forces VASP to make the orbitals   \u03d5 (  r  ) {\\\\displaystyle \\\\phi ({\\\\bf {r}})}  real valued at the Gamma point as well as k\\-points at the edges of the Brillouin zone. This can improve the performance of BSE/TDHF calculations but it should be used consistently with the ground\\-state calculation. Calculations at finite wavevectors---------------------------------- VASP can also calculate the dielectric function at a   q {\\\\displaystyle {\\\\bf {q}}} \\-vector compatible with the k\\-point grid (finite\\-momentum excitons).   ```SYSTEM       = SiNBANDS       = same as in GW calculationISMEAR       = 0 SIGMA        = 0.05ALGO         = BSE  ANTIRES      = 2 KPOINT_BSE   = 3 -1 0 0 \u00a0! q-point index,  three integersLORBITALREAL = .TRUE.NBANDSO      = 4 NBANDSV      = 8  ``` The tag KPOINT\\_BSE sets the   q {\\\\displaystyle {\\\\bf {q}}} \\-point and the shift at which the dielectric function is calculated. The first integer specifies the index of the   q {\\\\displaystyle {\\\\bf {q}}} \\-point and the other three values shift the provided   q {\\\\displaystyle {\\\\bf {q}}} \\-point by an arbitrary reciprocal vector   G {\\\\displaystyle {\\\\bf {G}}} . The reciprocal lattice vector is supplied by three integer values   n  i {\\\\displaystyle n\\_{i}}  with   G  \\=  n  1  G  1  \\+  n  2  G  2  \\+  n  3  G  3 {\\\\displaystyle {\\\\bf {G}}\\=n\\_{1}{\\\\bf {G}}\\_{1}\\+n\\_{2}{\\\\bf {G}}\\_{2}\\+n\\_{3}{\\\\bf {G}}\\_{3}} . This feature is only supported as of VASP.6 (in VASP.5 the feature can be enabled, but the results are erroneous). Consistency tests----------------- In order to verify the results obtained in the BSE calculation, one can perform a number of consistency tests. ### First test: IP dielectric function The BSE code can be used to reproduce the independent particle spectrum if the RPA and the ladder diagrams are switched off  ```LADDER   = .FALSE. LHARTREE = .FALSE.  ``` This should yield exactly the same dielectric function as the preceding calculation with LOPTICS \\= .TRUE. We recommend to set the complex shift manually in the BSE as well as the preceding optics calculations, e.g. CSHIFT \\= 0\\.4\\. The dielectric functions produced in these calculations should be identical. ### Second test: RPA dielectric function The RPA/*GW* dielectric function can be used to verify the correctness of the RPA dielectric function calculated via the BSE algorithm. The RPA dielectric function in the BSE code can be calculated by switching off the ladder diagrams while keeping the RPA terms, i.e., the BSE calculation should be performed with the following tags  ```ANTIRES   = 2LHARTREE  = .TRUE.LADDER    = .FALSE.CSHIFT    = 0.4  ``` The same dielectric function should be obtained via the *GW* code by setting these flags  ```ALGO      = CHI NOMEGA    = 200CSHIFT    = 0.4  ``` Make sure that a large CSHIFT is selected as the *GW* code calculates the polarizability at very few frequency points. Note that the *GW* code does not use the TDA, so ANTIRES \\= 2 is required for the TDHF/BSE calculation. In our experience, the agreement can be made practically perfect provided sufficient frequency points are used and all available occupied and virtual orbitals are included in the BSE step. ### Third test: RPA correlation energy The BSE code can be used to calculate the correlation energy via the plasmon equation. This correlation energy can be compared with the RPA contributions to the correlation energies for each   q {\\\\displaystyle {\\\\bf {q}}} \\-point, which can be found in the OUTCAR file of the ACFDT/RPA calculation performed with ALGO \\= RPA:  ```q-point correlation energy      -0.232563      0.000000q-point correlation energy      -0.571667      0.000000q-point correlation energy      -0.176976      0.000000  ``` For instance, if the BSE calculation is performed at the second   q {\\\\displaystyle {\\\\bf {q}}} \\-point   ```ANTIRES    = 2LADDER     = .FALSE.LHARTREE   = .TRUE.KPOINT_BSE = 2 0 0 0  ``` the same correlation energy should be found in the corresponding OUTCAR file:  ```plasmon correlation energy        -0.5716670828  ``` For exact compatibility, ENCUT and ENCUTGW should be set to the same values in all calculations, while the head and wings of the dielectric matrix should not be included in the ACFDT/RPA calculations, i.e., remove the WAVEDER file prior to the ACFDT/RPA calculation. In the BSE/RPA calculation removing the WAVEDER file is not required. Furthermore, NBANDS in the ACFDT/RPA calculation must be identical to the number of included bands NBANDSO plus NBANDSV in the BSE/RPA, so that the same number of excitation pairs are included in both calculations. Also, the OMEGAMAX tag in the BSE calculation should not be set. Common issues------------- If the dielectric matrix contains only zeros in the vasprun.xml\") file, the WAVEDER file was not read or is incompatible to the WAVEDER file. This requires a recalculation of the WAVEDER file. This can be achieved even after *GW* calculations using the following intermediate step:  ```ALGO      = NothingLOPTICS   = .TRUE.LPEAD     = .TRUE.  ``` The flag LPEAD \\= .TRUE. is strictly required and enforces a \"numerical\" differentiation of the orbitals with respect to   k {\\\\displaystyle k} . Calculating the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  analytically is not possible at this point, since the Hamiltonian that was used to determine the orbitals is unknown to VASP."}
{"file_name": "LALL_IN_ONE.md", "content": "LALL\\_IN\\_ONE= .FALSE. \\| .TRUE.n| Default: **LALL\\_IN\\_ONE** | \\= .FALSE. | for NBANDS\\>0 || --- | --- | --- ||  | \\= .TRUE. | for NBANDS\\<0 | Description: LALL\\_IN\\_ONE\\=.TRUE. enables the all\\-in\\-one mode for many\\-body perturbation theory calculations,i.e., ALGO\\=[ACFDT\\[R]](ACFDT/RPA_calculations.html \"ACFDT/RPA calculations\"), [\\[EV]GW0\\[R]](Practical_guide_to_GW_calculations.html \"Practical guide to GW calculations\"), GWR.  | **Mind:** available as of VASP.6\\.4\\.0 || --- |  --- In the all\\-in\\-one mode, VASP automatically performs the necessary DFT steps prior to the many\\-body perturbation theory (MBPT) calculation, i.e. a DFT calculation with NBANDS, followed by an exact diagonalization of the Kohn\\-Sham Hamiltonian with NBANDSEXACT bands. Note, NBANDSEXACT is set by default to the maximum number of plane\\-waves given by the chosen energy cutoff for the orbitals ENCUT. In the all\\-in\\-one mode, the actual GW/RPA calculation is also performed with NBANDSEXACT bands. If NBANDS\\_WAVE is not set, all orbitals are written to WAVECAR, which potentially becomes huge in file size. | **Tip:** The NBANDS\\_WAVE tag can be used to limit the number of bands written to WAVECAR if LALL\\_IN\\_ONE\\=.TRUE. || --- | The all\\-in\\-one mode is automatically enabled for ALGO\\=\\[EV]GW\\[0]R, RPA\\[R],ACFDT\\[R] if NBANDS is not set."}
{"file_name": "Dielectric_properties.md", "content": "Dielectric function------------------- When an external electric field   E {\\\\displaystyle \\\\mathbf {E} }  acts on a medium, both the electronic and ionic charges will react to the perturbing field. For dielectric materials, in a very simplistic approach, one can think that the bound charges will create dipoles inside the medium leading to an induced polarization,   P {\\\\displaystyle \\\\mathbf {P} } . The combined effects of both fields are expressed in the electric displacement field   D {\\\\displaystyle \\\\mathbf {D} } , given by  D  \\=  E  \\+ 4 \u03c0  P {\\\\displaystyle \\\\mathbf {D} \\=\\\\mathbf {E} \\+4\\\\pi \\\\mathbf {P} }  .If the external field is not strong enough to significantly change the properties of the dielectric medium, one can treat the induced polarization within the so\\-called linear response regime. Here, the information on how the dielectric reacts on the external field is given by the **dielectric function**:  \u03f5  \u03b1 \u03b2  \\=  \u03b4  \u03b1 \u03b2  \\+ 4 \u03c0  \u2202  P  i  \u2202  E  j {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }\\=\\\\delta \\_{\\\\alpha \\\\beta }\\+4\\\\pi {\\\\frac {\\\\partial P\\_{i}}{\\\\partial E\\_{j}}}}  ,which (assuming that the system has time\\-reversal symmetry) leads to   D  \u03b1  ( \u03c9 ) \\=  \u03f5  \u03b1 \u03b2  ( \u03c9 )  E  \u03b2  ( \u03c9 ) {\\\\displaystyle D\\_{\\\\alpha }(\\\\omega )\\=\\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )E\\_{\\\\beta }(\\\\omega )}  .Depending on the nature of the external field, there are different approaches for the calculation of   \u03f5 {\\\\displaystyle \\\\epsilon } . If   E {\\\\displaystyle \\\\mathbf {E} }  is static, then one can rely on perturbative methods based on finite differences or density functional perturbation theory (DFPT). However, if the perturbation is a time\\-dependent   E {\\\\displaystyle \\\\mathbf {E} } \\-field, (e.g., in measurements of the optical absorption, reflectance, magneto\\-optical Kerr effect (MOKE), etc.), the response will depend on the frequency of the external field. For these cases, one must employ methods based on time\\-dependent linear response, (e.g., Green\\-Kubo) or many\\-body perturbation theory. Below we present an overview of all possible cases where VASP employs either one of such methods for the calculation of   \u03f5 {\\\\displaystyle \\\\epsilon }  . ### Static response #### LEPSILON: density\\-functional\\-perturbation theory (DFPT) By setting LEPSILON\\=.True., VASP uses DFPT to compute the static ion\\-clamped dielectric matrix with or without local field effects (LRPA). Derivatives are evaluated using Sternheimer equations, avoiding the explicit computation of derivatives of the periodic part of the wave function. This method does not require the inclusion of empty states via NBANDS.At the end of the calculation, both the values of   \u03f5 {\\\\displaystyle \\\\epsilon }  including (LRPA\\=.True.) or excluding (LRPA\\=.False.) local\\-field effects are printed in the OUTCAR file. Perform a consistency check by comparing the values excluding local\\-field effects and static limit of   \u03f5 {\\\\displaystyle \\\\epsilon }  obtained with LOPTICS\\=.True., i.e.,   lim  \u03c9 \u2192 0  \u03f5 ( \u03c9 ) {\\\\displaystyle \\\\lim \\_{\\\\omega \\\\to 0}\\\\epsilon (\\\\omega )}  .#### LCALCEPS: finite differences approach With LCALCEPS\\=.True., the dielectric tensor is computed from the derivative of the polarization, using  \u03f5  i j  \u221e  \\=  \u03b4  i j  \\+  4 \u03c0  \u03f5  0  \u2202  P  i  \u2202  E  j  i , j \\= x , y , z  . {\\\\displaystyle \\\\epsilon \\_{ij}^{\\\\infty }\\=\\\\delta \\_{ij}\\+{\\\\frac {4\\\\pi }{\\\\epsilon \\_{0}}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}}\\\\qquad {i,j\\=x,y,z}.} However, here the derivative is evaluated explicitly by employing finite differences. The direction and intensity of the perturbing electric field have to be specified in the INCAR file using the EFIELD\\_PEAD tag. As with DFPT, at the end of the calculation, VASP will write the dielectric tensor in the OUTCAR file. Control over the inclusion of local\\-field effects is done with the variable LRPA.### Dynamical response: Green\\-Kubo and many\\-body perturbation theory #### LOPTICS: Green\\-Kubo formula LOPTICS allows for the evaluation of the frequency\\-dependent dielectric function once the ground state is computed. It uses the explicit expression to evaluate the imaginary part of   \u03f5 {\\\\displaystyle \\\\epsilon }  :  \u03f5  \u03b1 \u03b2  ( 2 )  ( \u03c9 )  \\=  4  \u03c0  2  e  2  \u03a9  l i m  q \u2192 0  1  q  2  \u2211  c , v ,  k  2  w  k  \u03b4 (  \u03f5  c  k  \u2212  \u03f5  v  k  \u2212 \u03c9 ) \u00d7 \u27e8  u  c  k  \\+  e  \u03b1  q  \\|  u  v  k  \u27e9 \u27e8  u  v  k  \\|  u  c  k  \\+  e  \u03b2  q  \u27e9 , {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}\\\\left(\\\\omega \\\\right)\\={\\\\frac {4\\\\pi ^{2}e^{2}}{\\\\Omega }}\\\\mathrm {lim} \\_{q\\\\rightarrow 0}{\\\\frac {1}{q^{2}}}\\\\sum \\_{c,v,\\\\mathbf {k} }2w\\_{\\\\mathbf {k} }\\\\delta (\\\\epsilon \\_{c\\\\mathbf {k} }\\-\\\\epsilon \\_{v\\\\mathbf {k} }\\-\\\\omega )\\\\times \\\\langle u\\_{c\\\\mathbf {k} \\+\\\\mathbf {e} \\_{\\\\alpha }q}\\|u\\_{v\\\\mathbf {k} }\\\\rangle \\\\langle u\\_{v\\\\mathbf {k} }\\|u\\_{c\\\\mathbf {k} \\+\\\\mathbf {e} \\_{\\\\beta }q}\\\\rangle ,} while the real part is evaluated using the Kramers\\-Kroing relation. At this level, there are no effects coming from local fields.This method requires two steps: First, obtain the electronic ground state. Secondly, increase the value of NBANDS in the INCAR file to include unoccupied states. Always check for convergence w.r.t. the number of unoccupied states.Furthermore, the INCAR should also include values for CSHIFT (the broadening applied to the Lorentzian function which replaces the   \u03b4 {\\\\displaystyle \\\\delta } \\-function), and NEDOS (the frequency grid for   \u03c9 {\\\\displaystyle \\\\omega }  ).#### ALGO \\= TDHF: Casida equation This option performs a time\\-dependent Hartree\\-Fock or time\\-dependent density\\-functional\\-theory (TDDFT) calculation. It follows the Casida equation and uses a Fourier transform of the time\\-evolving dipoles to compute   \u03f5 {\\\\displaystyle \\\\epsilon }  .The number of NBANDS controls how many bands are present in the time evolution. This can be fewer empty states compared to LOPTICS.The choice of time\\-dependent kernel is controlled by AEXX, HFSCREEN, and LFXC tags. For calculations using hybrid functionals, AEXX controls the fraction of exact exchange used in the exchange\\-correlation potential, while HFSCREEN specifies the range\\-separation parameter. For a pure TDDFT calculation, LFXC uses the local exchange\\-correlation kernel in the time\\-evolution equations.#### ALGO \\= TIMEEV: delta\\-pulse electric field Uses a delta\\-pulse electric field to probe all transitions and calculate the dielectric function by following the evolution in time of the dipole momenta. This algorithm is able to fully reproduce the absorption spectra from standard Bethe\\-Salpeter calculations by setting the correct time\\-dependent kernel with LHARTREE\\=.True. and LFXC\\=.True.The time step is controlled automatically by the CSHIFT and PREC. This means that the smaller the value of CSHIFT and the more accurate the level of precision chosen by the user, the higher the number of time steps that VASP will perform, and the higher the cost of the calculation.The number of valence and conduction bands involved in the time propagation is set by the NBANDSO and NBANDSV tags, respectively. Choose a small number of bands near the band gap to reproduce optical measurements.Finally, the maximum energy used in both the Fourier transform and in calculating the frequency\\-dependent dielectric function is set by OMEGAMAX, and the sampling of the frequency grid is controlled by NEDOS.#### ALGO \\= CHI: polarizability within RPA approximation Here, the frequency dielectric function is computed within the Random\\-Phase approximation. VASP will compute the polarizability   \u03c7 {\\\\displaystyle \\\\chi }  by setting ALGO\\=Chi in the INCAR file and then use  \u03f5  G  G  \u2032  \u2212 1  (  q  , \u03c9 ) \\=  \u03b4  G  G  \u2032  \\+ v (  q  \\+  G  )  \u03c7  G  G  \u2032  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} \\\\mathbf {G} '}^{\\-1}(\\\\mathbf {q} ,\\\\omega )\\=\\\\delta \\_{\\\\mathbf {G} \\\\mathbf {G} '}\\+v(\\\\mathbf {q} \\+\\\\mathbf {G} )\\\\chi \\_{\\\\mathbf {G} \\\\mathbf {G} '}(\\\\mathbf {q} ,\\\\omega )} to compute the dielectric function. Here,   v {\\\\displaystyle v}  is the bare Coulomb potential describing electron\\-electron interaction. This requires increasing NBANDS to include unoccupied states as generally the case for GW calculations.Two methods for computing the polarizability are available: For LSPECTRAL\\=.True., VASP will avoid direct computation of   \u03c7 {\\\\displaystyle \\\\chi }  and use a fast matrix\\-vector product. However, this can introduce spurious peaks at low frequencies for some values of CSHIFT and NOMEGA. The second method computes   \u03c7 {\\\\displaystyle \\\\chi }  directly and is activated by setting LSPECTRAL\\=.False.. However, it is much slower than the former method.#### ALGO \\= BSE: macroscopic dielectric function including excitons Setting ALGO\\=BSE computes the macroscopic dielectric function   \u03f5  M {\\\\displaystyle \\\\epsilon \\_{M}}  by solving the Bethe\\-Salpeter equations. The electron\\-hole pairs are treated as a new quasi\\-particle called exciton, and the dielectric function is built using the eigenvectors (  X  \u03bb  c v  k {\\\\displaystyle X\\_{\\\\lambda }^{cv\\\\mathbf {k} }} ) and eigenvalues (  \u03c9  \u03bb {\\\\displaystyle \\\\omega \\_{\\\\lambda }}  ):  \u03f5  M  (  q  , \u03c9 ) \\= 1 \\+ v (  q  )  \u2211  \u03bb  \u03bb \u2032  \u2211  c , v ,  k  \u2211  c \u2032  ,  v \u2032  ,  k  \u2032  \u27e8 c  k  \\|  e  i  q r  \\|  v  k  \u27e9  X  \u03bb  c v  k  \u27e8  c \u2032  k \u2032  \\|  e  \u2212 i  q r  \\|  v \u2032  k \u2032  \u27e9  X  \u03bb \u2032  c \u2032  v \u2032  k  \u2032  , \u2217  \u00d7  S  \u03bb ,  \u03bb \u2032  \u2212 1  (  1  \u03c9  \u03bb  \u2212 \u03c9 \u2212 i \u03b4  \\+  1  \u03c9  \u03bb  \\+ \u03c9 \\+ i \u03b4  )   . {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\=1\\+v(\\\\mathbf {q} )\\\\sum \\_{\\\\lambda \\\\lambda '}\\\\sum \\_{c,v,\\\\mathbf {k} }\\\\sum \\_{c',v',\\\\mathbf {k} '}\\\\langle c\\\\mathbf {k} \\|e^{i\\\\mathbf {qr} }\\|v\\\\mathbf {k} \\\\rangle X\\_{\\\\lambda }^{cv\\\\mathbf {k} }\\\\langle c'\\\\mathbf {k'} \\|e^{\\-i\\\\mathbf {qr} }\\|v'\\\\mathbf {k'} \\\\rangle X\\_{\\\\lambda '}^{c'v'\\\\mathbf {k} ',\\*}\\\\times S\\_{\\\\lambda ,\\\\lambda '}^{\\-1}\\\\left({\\\\frac {1}{\\\\omega \\_{\\\\lambda }\\-\\\\omega \\-i\\\\delta }}\\+{\\\\frac {1}{\\\\omega \\_{\\\\lambda }\\+\\\\omega \\+i\\\\delta }}\\\\right)\\~.} Here,   S  \u03bb  \u03bb \u2032 {\\\\displaystyle S\\_{\\\\lambda \\\\lambda '}}  is the overlap between exciton states of indices   \u03bb {\\\\displaystyle \\\\lambda }  and  \u03bb \u2032 {\\\\displaystyle \\\\lambda '}  (in general, the BSE Hamiltonian is not hermitian, so eigenstates associated to different eigenvalues are not necessarily orthogonal).The number of occupied and unoccupied states that are included in the BSE Hamiltonian is controlled by the NBANDSO and NBANDSV, respectively. Normally only a few bands above and below the band gap are required to converge the optical spectrum, and the memory requirements increase quickly with the number of bands. Thus, be careful in setting up these two tags.Regarding the comparison with optical experiments, (e.g., absorption, MOKE, reflectance),   q {\\\\displaystyle q}  is the photon momentum. Often, the   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  limit is considered. Furthermore, the coupling between the resonant and anti\\-resonant terms can be switched off, in what is called the Tamm\\-Dancoff approximation. This approximation can be activated with the variable ANTIRES set to 0\\. Setting this variable to 1 or 2 will include the coupling, but increase the computational cost.Level of approximation---------------------- ### Microscopic and macroscopic quantities It is important to distinguish between macroscopic quantities, measured over several repetitions of the unit cell, and microscopic quantities, which include fields that change rapidly in all regions of the unit cell. When measuring a property experimentally, it is the macroscopic version that will be represented in the experimental data. On the other hand, computationally, the microscopic quantities are more accessible. In other words, in order to compare experimental and computational results, the microscopic quantities, e.g., the dielectric function, must be averaged over several repetitions of the unit cell. It is possible to show that the macroscopic dielectric function,   \u03f5  M  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )}  is related to the microscopic one via  \u03f5  M  (  q  , \u03c9 ) \\=  1  \u03f5  G  \\= 0 ,  G  \u2032  \\= 0  \u2212 1  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\={\\\\frac {1}{\\\\epsilon \\_{\\\\mathbf {G} \\=0,\\\\mathbf {G} '\\=0}^{\\-1}(\\\\mathbf {q} ,\\\\omega )}}} where   \u03f5  G  \\= 0 ,  G  \u2032  \\= 0  \u2212 1  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} \\=0,\\\\mathbf {G} '\\=0}^{\\-1}(\\\\mathbf {q} ,\\\\omega )}  is the inverse dielectric function at   G  \\=  G  \u2032  \\= 0 {\\\\displaystyle \\\\mathbf {G} \\=\\\\mathbf {G} '\\=0}  . Note that this does not mean that   \u03f5  M  (  q  , \u03c9 ) \\=  \u03f5  G  \\= 0 ,  G  \u2032  \\= 0  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\=\\\\epsilon \\_{\\\\mathbf {G} \\=0,\\\\mathbf {G} '\\=0}(\\\\mathbf {q} ,\\\\omega )} ! The full matrix   \u03f5  G  ,  G  \u2032  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} '}(\\\\mathbf {q} ,\\\\omega )}  has to be inverted and it is the component at   G  \\=  G  \u2032  \\= 0 {\\\\displaystyle \\\\mathbf {G} \\=\\\\mathbf {G} '\\=0}  that is used to calculate   \u03f5  M  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )}  . ### Finite momentum dielectric function In the optical limit, the momentum of the incoming photon,   q {\\\\displaystyle \\\\mathbf {q} } , is almost zero, since the wavelength of the electric field is several times larger than the dimensions of the unit cell. Since the Coulomb potential diverges at very small momenta, the optical limit of the dielectric function must be obtained by taking with the limit of   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  instead of setting   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  .For instance, in the case of the independent particle approximation of full BSE, one yields  lim  q  \u2192 0  \u27e8 c  k  \\+  q  \\|  e  i  q  \u22c5  r  \\|  v  k  \u27e9  q  \u2248  lim  q  \u2192 0  \u27e8 c  k  \\+  q  \\|  1 \\+  i  q  \u22c5  r  \\|  v  k  \u27e9  q  \\=  q  ^  \u22c5 \u27e8 c  k  \\+  q  \\|  r  \\|  v  k  \u27e9 . {\\\\displaystyle \\\\lim \\_{\\\\mathbf {q} \\\\to 0}{\\\\frac {\\\\langle c\\\\mathbf {k} \\+\\\\mathbf {q} \\|e^{\\\\mathrm {i} \\\\mathbf {q} \\\\cdot \\\\mathbf {r} }\\|v\\\\mathbf {k} \\\\rangle }{q}}\\\\approx \\\\lim \\_{\\\\mathbf {q} \\\\to 0}{\\\\frac {\\\\langle c\\\\mathbf {k} \\+\\\\mathbf {q} \\|1\\+\\\\mathrm {i} \\\\mathbf {q} \\\\cdot \\\\mathbf {r} \\|v\\\\mathbf {k} \\\\rangle }{q}}\\={\\\\hat {\\\\mathbf {q} }}\\\\cdot \\\\langle c\\\\mathbf {k} \\+\\\\mathbf {q} \\|\\\\mathbf {r} \\|v\\\\mathbf {k} \\\\rangle .} VASP can also analyze the effects of finite momentum excitons. This is important, e.g., in the case of the optical absorption of bulk hexagonal BN. To calculate the absorption spectrum at finite momentum, set KPOINT\\_BSE to the index of the desired **q** point.  ### Local fields in the Hamiltonian Local fields, i.e., terms with finite   G {\\\\displaystyle \\\\mathbf {G} } , can be turned on or off in the Coulomb potential when evaluating the polarizability. VASP will distinguish the results in the OUTCAR file with:  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects)   ```  ```BORN EFFECTIVE CHARGES (including local field effects)   ```  ```PIEZOELECTRIC TENSOR (including local field effects)   ```  and  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (excluding local field effects)   ```  ```BORN EFFECTIVE CHARGES (excluding local field effects)   ```  ```PIEZOELECTRIC TENSOR (excluding local field effects)  ``` for both cases.  Another approximation can also be taken, where the contributions from the exchange\\-correlation kernel are neglected when evaluating the polarizability. This is equivalent to the so\\-called random\\-phase approximation (RPA) and can be activated by setting LRPA\\=.True. in the INCAR. ### Ion\\-clamped vs relaxed\\-ion/dressed dielectric function The dielectric function computed either in the static or dynamical response regimes does not consider the effects coming from changes of the ionic positions due to the incoming electric field. This can be corrected by computing the relaxed\\-ion (or dressed) dielectric function   \u03f5 \u00af {\\\\displaystyle {\\\\bar {\\\\epsilon }}} [\\[1]](#cite_note-wu:prb:2005-1)  \u03f5 \u00af  \u03b1 \u03b2  \\=  \u03f5  \u03b1 \u03b2  \\+  \u03a9  0  \u2212 1  Z  m \u03b1  (  \u03a6  \u2212 1  )  m n  Z  n \u03b2  , {\\\\displaystyle {\\\\bar {\\\\epsilon }}\\_{\\\\alpha \\\\beta }\\=\\\\epsilon \\_{\\\\alpha \\\\beta }\\+\\\\Omega \\_{0}^{\\-1}Z\\_{m\\\\alpha }(\\\\Phi ^{\\-1})\\_{mn}Z\\_{n\\\\beta },} where   \u03a9  0 {\\\\displaystyle \\\\Omega \\_{0}}  is the volume of the unit cell,   Z  n \u03b1 {\\\\displaystyle Z\\_{n\\\\alpha }}  is the Born effective charge, and   \u03a6  m n {\\\\displaystyle \\\\Phi \\_{mn}}  is the force constants matrix. ### Density\\-density versus current\\-current response functions The inclusion of an electromagnetic field in the Hamiltonian is subject to a gauge choice. For instance, a classical electric field can be described by either a scalar potential   \u03d5 {\\\\displaystyle \\\\phi }  or a longitudinal vector potential   A {\\\\displaystyle \\\\mathbf {A} }  in the incomplete Weyl gauge (  \u03d5 {\\\\displaystyle \\\\phi }  \\= 0\\). The former means that the perturbing potential couples to the electronic density, while the second, implies a vector potential couples to a current. The fundamental consequence is that one can define two different response functions: a density\\-density response function for the first,   \u03c7  \u03c1 \u03c1 {\\\\displaystyle \\\\chi \\_{\\\\rho \\\\rho }} ; and a current\\-current response function,   \u03c7  j j {\\\\displaystyle \\\\chi \\_{jj}} . This circumstance is a common source of error when comparing experimental and computational optical properties of periodic systems, as discussed by Sangalli et al.[\\[2]](#cite_note-sangalli:prb:2017-2). Infact, perturbations associated with longitudinal fields will be described by the density\\-density polarisability function   \u03c7  \u03c1 \u03c1 {\\\\displaystyle \\\\chi \\_{\\\\rho \\\\rho }} , (e.g., laser fields taken in the classical limit), while transverse fields will be described by the current\\-current polarizability   \u03c7  j j {\\\\displaystyle \\\\chi \\_{jj}} , which is in fact a 3x3 tensor, (e.g., required to obtain the MOKE). Fundamentally, the time\\-dependent density is associated only with the longitudinal part of the current via the continuity equation. This also links both response functions via  q  2  \u03c7  j j  (  q  , \u03c9 ) \\=  \u03c9  2  \u03c7  \u03c1 \u03c1  (  q  , \u03c9 ) . {\\\\displaystyle q^{2}\\\\chi \\_{jj}(\\\\mathbf {q} ,\\\\omega )\\=\\\\omega ^{2}\\\\chi \\_{\\\\rho \\\\rho }(\\\\mathbf {q} ,\\\\omega ).} It guarantees that the dielectric functions obtained from either approach match at finite momentum and frequency:   \u03f5 \\[  \u03c7  \u03c1 \u03c1  ] \\= \u03f5 \\[  \u03c7  j j  ] {\\\\displaystyle \\\\epsilon \\[\\\\chi \\_{\\\\rho \\\\rho }]\\=\\\\epsilon \\[\\\\chi \\_{jj}]}  . The current\\-current dielectric function is exact at both   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  and at   q  \\= 0 {\\\\displaystyle \\\\mathbf {q} \\=0} . Especially for metals, it will reproduce the proper behavior of the Drude tail at   \u03c9 \\= 0 {\\\\displaystyle \\\\omega \\=0} . However,   \u03c7  j j {\\\\displaystyle \\\\chi \\_{jj}}  is more prone to numerical instabilities. Other dielectric properties--------------------------- ### Electron energy loss spectroscopy (EELS) In EELS experiments a narrow beam of electrons with a well defined energy is shot at the sample. These electrons then lose energy to the sample by exciting plasmons, electron\\-hole pairs, or other higher\\-order quasiparticles. The loss function can then be expressed as   E E L S  \\= \u2212  I m  \\[  \u03f5  \u2212 1  ( \u03c9 )  ]  . {\\\\displaystyle \\\\mathrm {EELS} \\=\\-\\\\mathrm {Im} \\\\left\\[\\\\epsilon ^{\\-1}(\\\\omega )\\\\right].} ### Optical conductivity From Maxwell's equations and the microscopic form of Ohm's law it is possible to arrive at the following relation between the tensorial dielectric function and the optical conductivity   \u03c3 ( \u03c9 ) {\\\\displaystyle \\\\sigma (\\\\omega )}  \u03c3  \u03b1 \u03b2  ( \u03c9 ) \\=  i  \u03c9  4 \u03c0  \\[  \u03b4  \u03b1 \u03b2  \u2212  \u03f5  \u03b1 \u03b2  ( \u03c9 )  ]  . {\\\\displaystyle \\\\sigma \\_{\\\\alpha \\\\beta }(\\\\omega )\\=\\\\mathrm {i} {\\\\frac {\\\\omega }{4\\\\pi }}\\\\left\\[\\\\delta \\_{\\\\alpha \\\\beta }\\-\\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )\\\\right].} ### Optical absorption For an electromagnetic wave traveling through a medium, one can express the electric field as   E  (  r  , t ) \\=  E  0  e  \u2212  i  ( \u03c9 t \u2212  q  \u22c5  r  ) {\\\\displaystyle \\\\mathbf {E} (\\\\mathbf {r} ,t)\\=\\\\mathbf {E} \\_{0}e^{\\-\\\\mathrm {i} (\\\\omega t\\-\\\\mathbf {q} \\\\cdot \\\\mathbf {r} )}} , and the effects of the medium in the wave propagation are contained inside the dispersion relation   \u03c9 \\= \u03c9 (  q  ) {\\\\displaystyle \\\\omega \\=\\\\omega (\\\\mathbf {q} )} . Using Maxwell's equations, one can arrive at   q  2  \\=  \u03c9  2  c  2  \u03f5 ( \u03c9 ) . {\\\\displaystyle q^{2}\\={\\\\frac {\\\\omega ^{2}}{c^{2}}}\\\\epsilon (\\\\omega ).} If the magnetic permeability of the material is assumed to be equal to that of vacuum, the equation above implies that the refractive index can be written as   n \\=  \u03f5 ( \u03c9 )  \\=  n \\~  \\+  i  k {\\\\displaystyle n\\={\\\\sqrt {\\\\epsilon (\\\\omega )}}\\={\\\\tilde {n}}\\+\\\\mathrm {i} k} . Since   n {\\\\displaystyle n}  is complex, the exponential factor in   E  (  r  , t ) {\\\\displaystyle \\\\mathbf {E} (\\\\mathbf {r} ,t)}  will have a dampening factor,   e  \u2212  \u03c9 c  k  q ^  \u22c5  r {\\\\displaystyle e^{\\-{\\\\frac {\\\\omega }{c}}k{\\\\hat {q}}\\\\cdot \\\\mathbf {r} }} , which accounts for the absorption of electromagnetic energy by the medium. With this relation one can define the absorption coefficient,   \u03b1 ( \u03c9 ) {\\\\displaystyle \\\\alpha (\\\\omega )}  as  \u03b1 ( \u03c9 ) \\=  2 \u03c9  c  k ( \u03c9 ) . {\\\\displaystyle \\\\alpha (\\\\omega )\\={\\\\frac {2\\\\omega }{c}}k(\\\\omega ).} ### Reflectance From the previous subsection, one can also define the reflectivity coefficient at normal incidence as  R \\=  ( 1 \u2212  n \\~  )  2  \\+  k  2  ( 1 \\+  n \\~  )  2  \\+  k  2  . {\\\\displaystyle R\\={\\\\frac {(1\\-{\\\\tilde {n}})^{2}\\+k^{2}}{(1\\+{\\\\tilde {n}})^{2}\\+k^{2}}}.} This equation can be generalized for any angle of incidence   \u03b8 {\\\\displaystyle \\\\theta } , resulting in the general form of Fresnel equations. ### Magneto\\-optical Kerr effect (MOKE) The incoming electromagnetic wave interacts with the finite magnetic moment of the material. Usually, the interaction is with the magnetization of the medium, but there are also antiferromagnetic systems that can observe a finite MOKE.Generally, the reflected wave will gain an extra complex phase with respect to the incident   E {\\\\displaystyle \\\\mathbf {E} } \\-field. For a surface or two\\-dimensional material, (e.g., hexagonal BN, MoS  2 {\\\\displaystyle \\_{2}} ), this phase can be computed using the off\\-diagonal components of the current\\-current dielectric tensor:  \u03b8  K  ( \u03c9 ) \\= \u2212  R e  \\[  \u03f5  x y  ( \u03c9 )  (  \u03f5  x x  ( \u03c9 ) \u2212 1 )  \u03f5  x x  ( \u03c9 )  ]  . {\\\\displaystyle \\\\theta \\_{\\\\mathrm {K} }(\\\\omega )\\=\\-\\\\mathrm {Re} \\\\left\\[{\\\\frac {\\\\epsilon \\_{xy}(\\\\omega )}{(\\\\epsilon \\_{xx}(\\\\omega )\\-1\\){\\\\sqrt {\\\\epsilon \\_{xx}(\\\\omega )}}}}\\\\right].} Electric response combined with perturbations of the ionic degrees of freedom----------------------------------------------------------------------------- ### Low\\-frequency corrections from atomic displacements The corrections from ionic motion to the low frequency regime can be added to   \u03f5  \u03b1 \u03b2  \u221e {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{\\\\infty }}  following[\\[3]](#cite_note-gonze:prb:1997-3)  \u03f5  \u03b1 \u03b2  ( \u03c9 ) \\=  \u03f5  \u03b1 \u03b2  \u221e  \\+  4 \u03c0  e  2  \u03a9  0  \u2211  \u03bd  S  \u03b1 \u03b2 , \u03bd  \u03c9  \u03bd  2  \u2212 ( \u03c9 \\+  i  \u03b7  )  2  , {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )\\=\\\\epsilon \\_{\\\\alpha \\\\beta }^{\\\\infty }\\+{\\\\frac {4\\\\pi e^{2}}{\\\\Omega \\_{0}}}\\\\sum \\_{\\\u }{\\\\frac {S\\_{\\\\alpha \\\\beta ,\\\u }}{\\\\omega \\_{\\\u }^{2}\\-(\\\\omega \\+\\\\mathrm {i} \\\\eta )^{2}}},} where   \u03c9  \u03bd {\\\\displaystyle \\\\omega \\_{\\\u }}  is the phonon frequency of mode   \u03bd {\\\\displaystyle \\\u } , and   S  \u03b1 \u03b2 , \u03bd {\\\\displaystyle S\\_{\\\\alpha \\\\beta ,\\\u }}  is the mode\\-oscillator strength, defined by  S  \u03b1 \u03b2 , \u03bd  \\=  (  \u2211  I , \u03b4  Z  I \u03b1 \u03b4  \u2217  \u03b5  I \u03b4 , \u03bd  \u2217  (  q \\= 0  )  )  (  \u2211  J ,  \u03b4 \u2032  Z  J \u03b2  \u03b4 \u2032  \u2217  \u03b5  J  \u03b4 \u2032  , \u03bd  (  q \\= 0  )  )  . {\\\\displaystyle S\\_{\\\\alpha \\\\beta ,\\\u }\\=\\\\left(\\\\sum \\_{I,\\\\delta }Z\\_{I\\\\alpha \\\\delta }^{\\*}\\\\varepsilon \\_{I\\\\delta ,\\\u }^{\\*}(\\\\mathbf {q\\=0} )\\\\right)\\\\left(\\\\sum \\_{J,\\\\delta '}Z\\_{J\\\\beta \\\\delta '}^{\\*}\\\\varepsilon \\_{J\\\\delta ',\\\u }(\\\\mathbf {q\\=0} )\\\\right).} Here   Z  J \u03b2  \u03b4 \u2032  \u2217 {\\\\displaystyle Z\\_{J\\\\beta \\\\delta '}^{\\*}}  are the Born effective charges and   \u03b5  J  \u03b4 \u2032  , \u03bd  (  q \\= 0  ) {\\\\displaystyle \\\\varepsilon \\_{J\\\\delta ',\\\u }(\\\\mathbf {q\\=0} )}  are the eigendisplacements associated with the vibration mode   \u03bd {\\\\displaystyle \\\u }  for atom   J {\\\\displaystyle J}  along direction   \u03b4 \u2032 {\\\\displaystyle \\\\delta '} . More information on the theory and methods behind the computation of phonon frequencies and eigendisplacements can be found in the phonons dedicated page. Inclusion of the low\\-frequency corrections can be activated in the INCAR file with either IBRION \\= 5,6 (DFPT) or 7,8 (finite differences), and by setting to .True. the variables LEPSILON or LCALCEPS.  #### Polar materials For polar materials it is important to recall that there is a discontinuity near   \u0393 {\\\\displaystyle \\\\Gamma } , i.e.   \u03c9  \u03bd  2  (  q \u2192 0  ) \u2260  \u03c9  \u03bd  2  (  q \\= 0  ) {\\\\displaystyle \\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\\\to 0} )\\\eq \\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\=0} )} , and in fact, for a given unitary directional vector   q {\\\\displaystyle \\\\mathbf {q} } , it can be shown that the Lyddane\\-Sachs\\-Teller relationship holds[\\[3]](#cite_note-gonze:prb:1997-3)  \u220f  \u03bd  \u03c9  \u03bd  2  (  q \u2192 0  ) \u2212  \u03c9  2  \u03c9  \u03bd  2  (  q \\= 0  ) \u2212  \u03c9  2  \\=  \u2211  \u03b1 \u03b2  q  \u03b1  \u03f5  \u03b1 \u03b2  ( \u03c9 )  q  \u03b2  \u2211  \u03b1 \u03b2  q  \u03b1  \u03f5  \u03b1 \u03b2  \u221e  q  \u03b2  , {\\\\displaystyle \\\\prod \\_{\\\u }{\\\\frac {\\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\\\to 0} )\\-\\\\omega ^{2}}{\\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\=0} )\\-\\\\omega ^{2}}}\\={\\\\frac {\\\\sum \\_{\\\\alpha \\\\beta }q\\_{\\\\alpha }\\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )q\\_{\\\\beta }}{\\\\sum \\_{\\\\alpha \\\\beta }q\\_{\\\\alpha }\\\\epsilon \\_{\\\\alpha \\\\beta }^{\\\\infty }q\\_{\\\\beta }}},} meaning that the splitting in frequencies between the LO and TO modes at zero momentum carries over the evaluation of the dielectric function.  In order to obtain smooth phonon dispersions and to properly account for the LO\\-TO splitting in the evaluation of the optical limit of the dielectric function, users should read the dedicated page on LO\\-TO splitting \"Phonons: Theory\"), where it is explained how to set the variables LPHON\\_POLAR, PHON\\_DIELECTRIC, and PHON\\_BORN\\_CHARGES in the INCAR file. ### Corrections from strain The dielectric tensor can also be included in the evaluation of the elastic tensor,   C  j k {\\\\displaystyle C\\_{jk}} , (see theory of static linear response for more information on derived quantities from the static linear response). While this quantity is normally evaluated at fixed   E {\\\\displaystyle \\\\mathbf {E} } \\-field, in cases where a thin film is placed between layers of insulating materials, it is more convenient to evaluate the elastic tensor for fixed displacement field   D {\\\\displaystyle \\\\mathbf {D} } , since the boundary conditions fix the components of this vector in the direction normal to the surface.   If  C  j k  E {\\\\displaystyle C\\_{jk}^{E}}  is the elastic tensor defined at fixed   E {\\\\displaystyle \\\\mathbf {E} } \\-field and   C  j k  D {\\\\displaystyle C\\_{jk}^{D}}  the elastic tensor defined at fixed   D {\\\\displaystyle \\\\mathbf {D} } \\-field, then they are related by  C  j k  D  \\=  C  j k  E  \\+  e  \u03b1 j  ( \u03f5  )  \u03b1 \u03b2  \u2212 1  e  \u03b2 k  , {\\\\displaystyle C\\_{jk}^{D}\\=C\\_{jk}^{E}\\+e\\_{\\\\alpha j}(\\\\epsilon )\\_{\\\\alpha \\\\beta }^{\\-1}e\\_{\\\\beta k},} where   e  \u03b1 j {\\\\displaystyle e\\_{\\\\alpha j}}  is the ion\\-relaxed piezoelectric tensor."}
{"file_name": "POMASS.md", "content": "POMASS= \\[real array]   Default: **POMASS** \\= values read from POTCARnDescription: POMASS describes the mass of each atomic sphere in atomic units.  --- ZVAL and POMASS determine the valency and the atomic mass of each atomic species. For standard calculations this tag should be omitted since the atomic masses for each species are read from the POTCAR file (they are also called *POMASS* there). However if one needs to change the atomic mass of some species, e.g. the mass of Hydrogen atoms in molecular dynamics calculations, the atomic masses of all species need to be set with this tag in the order they appear on the POTCAR file. After setting POMASS to different values in the INCAR file than on the POTCAR file following message will occur on stdout when running VASP, informing the user that the mass has changed: `WARNING: mass on POTCAR and INCAR are incompatible.` If any incompatibilities exist, e.g. the number of entries doesn't agree with that on the POTCAR, VASP will stop. Related Tags and Sections------------------------- ZVAL Examples that use this tag  ---"}
{"file_name": "LNABLA.md", "content": "LNABLA= .TRUE. \\| .FALSE.   Default: **LNABLA** \\= .FALSE.nDescription: LNABLA\\=.TRUE. evaluates the transversal expression for the frequency dependent dielectric matrix.  --- Usually VASP uses the longitudinal expression for the frequency dependent dielectric matrix.It is however possible to switch to the computationally somewhat simpler transversal expressions by selecting LNABLA\\=.TRUE. (Eqs. 17 and 20 in Ref.[\\[1]](#cite_note-gajdos:prb:06-1)).In this simplification the imaginary part of the macroscopic dielectric function is given by  \u03f5  \u03b1 \u03b2  ( 2 )  ( \u03c9 ) \\=  4  \u03c0  2  e  2  \u210f  4  \u03a9  \u03c9  2  m  e  2  l i m  q  \u2192 0  \u2211  c , v ,  k  2  w  k  \u03b4 (  \u03f5  c  k \\+ q  \u2212  \u03f5  v  k  \u2212 \u03c9 ) \u00d7 \u27e8  u  c  k  \\|  i  \u2207  \u03b1  \u2212  k  \u03b1  \\|  u  v  k  \u27e9 \u27e8  u  c  k  \\|  i  \u2207  \u03b2  \u2212  k  \u03b2  \\|  u  v  k  \u27e9  \u2217  . {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}(\\\\omega )\\={\\\\frac {4\\\\pi ^{2}e^{2}\\\\hbar ^{4}}{\\\\Omega \\\\omega ^{2}m\\_{e}^{2}}}\\\\mathrm {lim} \\_{\\\\mathbf {q} \\\\rightarrow 0}\\\\sum \\_{c,v,\\\\mathbf {k} }2w\\_{\\\\mathbf {k} }\\\\delta (\\\\epsilon \\_{c\\\\mathbf {k\\+q} }\\-\\\\epsilon \\_{v\\\\mathbf {k} }\\-\\\\omega )\\\\times \\\\langle u\\_{c\\\\mathbf {k} }\\|i{\\\\mathbf {\\\abla } \\_{\\\\alpha }\\-\\\\mathbf {k} }\\_{\\\\alpha }\\|u\\_{v\\\\mathbf {k} }\\\\rangle \\\\langle u\\_{c\\\\mathbf {k} }\\|i{\\\\mathbf {\\\abla } \\_{\\\\beta }\\-\\\\mathbf {k} }\\_{\\\\beta }\\|u\\_{v\\\\mathbf {k} }\\\\rangle ^{\\*}.} Except for the purpose of testing, there is however hardly ever a reasonto use the transversal expression, since it is less accurate."}
{"file_name": "Ni_111_surface_relaxation.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Relaxation of the first two layers of a Ni (111\\) surface. Input----- ### POSCAR  ``` fcc (111) surface  3.53   .70710678  .0000000  .000000 -0.35355339 0.6123724  .000000   .000000    .000000  5.1961524 5selective dynamicsdirect   .00000000   .00000000   .00000000  F  F  F   .33333333   .66666667   .11111111  F  F  F   .66666667   .33333333   .22222222  F  F  F   .00000000   .00000000   .33333333  T  T  T   .33333333   .66666667   .44444444  T  T  T  ``` * Similar setup as for Ni 100 surface relaxation.* Again 2 of 5 layers relaxed. * ( 1 \u2212.444 ) \u22c55\\.196 \u22c53\\.53 \u224810\\.2 {\\\\displaystyle (1\\-.444\\)\\\\cdot 5\\.196\\\\cdot 3\\.53\\\\approx 10\\.2}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  of vacuum. ### INCAR  ```general:  ISTART = 0  ICHARG = 2  SYSTEM = clean (111) surface  ENMAX = 270  ISMEAR = 2\u00a0; SIGMA = 0.2  ALGO = Fast  EDIFF = 1E-6 dynamic:  NSW = 100  POTIM = 0.8  IBRION = 1  ``` * Same INCAR file as for Ni 100 surface relaxation, but spin polarization neglected. ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * N.B.: The setup for the calculation of the \"bulk\" energy can be found in the *Ni111clean\\_rel/bulk* subdirectory of the tar file. * The sample output for the forces should look like the following:  ```POSITION                                       TOTAL-FORCE (eV/Angst)-----------------------------------------------------------------------------------     0.00000      0.00000      0.00000         0.000000      0.000000      0.178848     0.00000      1.44112      2.03805         0.000000      0.000000     -0.060127     1.24804      0.72056      4.07609         0.000000      0.000000      0.004418     0.00000      0.00000      6.11522         0.000000      0.000000      0.036384     0.00000      1.44112      8.14905         0.000000      0.000000     -0.159523-----------------------------------------------------------------------------------   total drift:                               -0.000084      0.000107     -0.017457  ``` * Forces are already small at the beginning (small relaxations for compact surfaces). * For surface energy non\\-spin\\-polarized bulk nickel as reference: + \u03c3   u n r e l    \\=   1 2   ( \u2212\t25\\.731 \u2212 5 \u22c5 ( \u2212\t5\\.407 ) ) \\=\t0\\.65  \t{\\\\displaystyle \\\\sigma ^{\\\\mathrm {unrel} }\\={\\\\frac {1}{2}}(\\-25\\.731\\-5\\\\cdot (\\-5\\.407\\))\\=0\\.65}  eV.\t+ (111\\) surface more stable than (100\\) surface. Download--------  Ni111clean\\_rel.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "Hybrid_functionals.md", "content": "**Hybrid functionals** mix the Hartree\\-Fock (HF) and Kohn\\-Sham theories[\\[1]](#cite_note-becke:jcp:93-1) and can be more accurate than semilocal methods, e.g., GGA, in particular for nonmetallic systems. They are for instance suited for band\\-gap calculations. Several hybrid functionals are available in VASP. Theoretical background---------------------- In hybrid functionals the exchange part consists of a linear combination of HF and semilocal (e.g., GGA) exchange:  E  x c  h y b r i d  \\= \u03b1  E  x  H F  \\+ ( 1 \u2212 \u03b1 )  E  x  G G A  \\+  E  c  G G A {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {hybrid} }\\=\\\\alpha E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+(1\\-\\\\alpha )E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA} }\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} }} where   \u03b1 {\\\\displaystyle \\\\alpha }  determines the relative amount of HF and semilocal exchange. The hybrid functionals can be divided into families according to the interelectronic range at which the HF exchange is applied: at full range (unscreened hybrids) or either at short or at long range (called screened or range\\-separated hybrids). From the practical point of view, the short\\-range hybrid functionals like HSE are preferable for periodic solids, since leading to faster convergence with respect to the number of k\\-points (or size of the unit cell). Note that as in most other codes, hybrid functionals are implemented in VASP within the generalized KS scheme[\\[2]](#cite_note-seidl:prb:96-2), which means that the total energy is minimized with respect to the orbitals (instead of the electron density) as in the Hartree\\-Fock theory. It is important to mention that hybrid functionals are computationally more expensive than semilocal methods. Read more about formalism of the HF method and hybrids. The unscreened Coulomb potential used to evaluate the exchange integral in Hartree\\-Fock has an integrable singularity that leads to slow convergence with respect to supercell size (or equivalently **k** point sampling).To make the computations feasible requires special treatment of the Coulomb singularity. How to------ List of available hybrid functionals and how to specify them in the INCAR file. Downsampling of the Hartree\\-Fock operator to reduce the computational cost. How to do a band\\-structure calculation using hybrid functionals. Further reading--------------- * A comprehensive study of the performance of the HSE03/HSE06 functional compared to the PBE and PBE0 functionals[\\[3]](#cite_note-paier:jcp:06-3).* The B3LYP functional applied to solid state systems[\\[4]](#cite_note-paier:jcp:07-4).* Applications of hybrid functionals to selected materials: Ceria,[\\[5]](#cite_note-juarez:prb:07-5) lead chalcogenides,[\\[6]](#cite_note-hummer:prb:07-6) CO adsorption on metals,[\\[7]](#cite_note-stroppa:prb:07-7)[\\[8]](#cite_note-stroppa:njp:08-8) defects in ZnO,[\\[9]](#cite_note-oba:prb:08-9) excitonic properties,[\\[10]](#cite_note-paier:prb:08-10) SrTiO and BaTiO.[\\[11]](#cite_note-wahl:prb:08-11)"}
{"file_name": "NELM.md", "content": "NELM= \\[integer]   Default: **NELM** \\= 60nDescription: NELM sets the maximum number of electronic SC (self\\-consistency) steps.   --- Normally, there is no need to change the default value: if the self\\-consistency loop does not converge within 40 steps, it will probably not converge at all. In this case you should reconsider the tags IALGO or ALGO, LSUBROT, and the mixing parameters. The same stands for ALGO \\= TIMEEV, as the value is set to be sufficient to ensure numerical stability when propagating in time. If you wish to set it by yourself, be advised that the input value must be greater than 100, otherwise VASP will ignore it and fall to the default settings."}
{"file_name": "Band-decomposed_charge_densities.md", "content": "The partial (band\\-decomposed) charge density can be used to analyze the contributions of different orbitals or energy ranges to a specific region in real space. It helps in gaining insight and visualizing electronic, magnetic, or transport properties, and is especially important when simulating scanning tunneling microscopy (STM) images.In VASP, the calculation of partial charges is a quick post\\-processing step that is selected by setting LPARD \\= .TRUE. in the INCAR file. It is necessary to provide a WAVECAR from a converged ground state calculation as an input file. To select the contributing **k** points and bands, various options exist, which can be selected via the NBMOD, IBAND, EINT, and KPUSE tags. | **Mind:** All charge densities, including the band\\-decomposed charge densities, are symmetrized using both the space and point group symmetries. However, when calculating partial charge from selected **k** points, this can lead to wrong results due to wrong **k** point weights. In that case, the symmetry must be turned off during the initial ground state calculation from which the WAVECAR is generated, as well as during the subsequent band\\-decomposed charge density calculation. || --- | | **Warning:** Band\\-decopmposed partial charge density postprocessing is not supported for noncollinear magnetic calculations (LNONCOLLINEAR \\= .TRUE.). || --- | Input tags for selecting and writing the partial charges-------------------------------------------------------- The following list briefly explains the various INCAR tags that control the behavior of the band\\-decomposed charge density decomposition. Please refer to the documentation of each tag for further details. * LPARD: Toggles the partial charge postprocessing on or off. If only this tag is set, the valence charge density is computed for all occupied bands and written to the CHGCAR file (without the augmentation occupancies usually written to that file).* IBAND: An integer array specifying the bands to include in the partial charge density. If IBAND is specified, NBMOD is automatically set to the number of selected bands.* EINT: Specifies an energy interval. Any energy bands with eigenvalues within this range will contribute to the calculation of the partial charge density. If the value of the NBMOD tag is set to \\-3, the energy values are interpreted as relative to the Fermi energy   \u03f5  f {\\\\displaystyle \\\\epsilon \\_{f}} . If the NBMOD tag is not set or is set to \\-2, the provided energy values will be considered as absolute total energies.* NBMOD: This tag controls the mode of selecting bands that should contribute to the calculation of partial charges.\t+ NBMOD \\= n: Use n bands (set automatically if IBAND is used).\t+ NBMOD \\= 0: Use all bands (occupied and empty).\t+ NBMOD \\= \\-1: Use all occupied bands (and write to CHGCAR instead of PARCHG).\t+ NBMOD \\= \\-2: To choose the bands that contribute, you can utilize an energy interval defined by the tag EINT.\t+ NBMOD \\= \\-3: Use an energy interval relative to the Fermi energy      \u03f5  f    \t{\\\\displaystyle \\\\epsilon \\_{f}} \t to select contributing bands (defined by EINT).* KPUSE: Specifies which **k** points are used in the evaluation of the partial DOS.* LSEPB: Specifies whether to write the partial charge density for selected bands to individual files or merge them.* LSEPK: Specifies whether to write the partial charge density for selected **k** points to individual files or merge them. Output files------------ The partial valence charge density is written in the PARCHG file. If you want to separate the output by **k** points or bands, setting LSEPB and/or LSEPK allows you to write it to multiple PARCHG.\\*.\\* files. | **Mind:** For spin\\-polarized calculations, the PARCHG and its variants hold the total density and the magnetization density. For instance, if the 4th band is selected (IBAND \\= 4\\) the first data set in the PARCHG file corresponds to the summed density of the 4th spin up and 4th spin down orbital, whereas the second data set holds the difference between the 4th spin\\-up and 4th spin\\-down orbital (magnetization density). Hence, to obtain the charge density corresponding to a specific orbital of a specific spin channel some post\\-processing of the PARCHG file might be required (building differences or sums). A simple workaround is to use EINT and specify sufficient digits to select only one orbital from either the spin\\-up or spin\\-down channel. || --- | Step\\-by\\-step instructions--------------------------- In this example, we will produce a partial charge density useful for STM picture simulation. Note that the bias voltage and tip distance from an experiment do not always translate one\\-to\\-one to the simulation. **Step 1**: Ensure that the ground state calculation has a well\\-converged charge density (low rms(c) in the standard output or the OSZICAR).The **k** point mesh should be well converged to get good results for STM simulations. **Step 2**: Copy POSCAR, KPOINTS, POSCAR, and WAVECAR to a new directory. **Step 3**: Prepare an appropriate INCAR file in the new directory, making sure you specify the same settings for energy cutoff, symmetry, and spin as in the groundstate calculation. This could be a possible INCAR:  ```SYSTEM = STM simulationENCUT = 520ISPIN = 2LPARD = .TRUE.NBMOD = -3EINT = -1.5 0.25LSEPB = .FALSE.LSEPK = .FALSE.  ``` LPARD \\= .TRUE. activates the partial charge mode and assures that the WAVECAR file is read. ENCUT and ISPIN settings are copied over from the ground state calculation. NBMOD \\= \\-3 and EINT \\= \\-1\\.5 0\\.25 ensure that the bands from   \u03f5  f  \u22121\\.5 {\\\\displaystyle \\\\epsilon \\_{f}\\-1\\.5}  to  \u03f5  f  \\+0\\.25 {\\\\displaystyle \\\\epsilon \\_{f}\\+0\\.25}  eV are included (corresponding to a negative bias voltage of about 1\\.5 Volt). The two remaining tags, LSEPB and LSEPK are set to their default values (.FALSE.) and are there for clarity only. We want to sum up the contributions of all bands in the energy range at all **k** points without separating any of this information. **Step 4**: Run VASP. No electronic (or ionic) minimization is performed, so the calculation is rapid and does not even require parallelization. **Step 5 (optional)**: Load the resulting PARCHG file with your favorite visualization program to view constant\\-height images by looking at slices through the data or constant current images by using isosurfaces."}
{"file_name": "LPLANE.md", "content": "LPLANE= \\[logical]   Default: **LPLANE** \\= .TRUE.nDescription: LPLANE switches on the plane\\-wise data distribution in real space.   --- For LPLANE\\=.TRUE., the data distribution in real space is done plane wise.Any combination of NPAR and LPLANE can be used. Generally, LPLANE\\=.TRUE. reduces the communication band width during the FFT's, but at the same time it unfortunately worsens the load balancing on massively parallel machines.LPLANE\\=.TRUE. should only be used if NGZ is at least 3\u00d7(number of nodes)/NPAR, and optimal load balancing is achieved if NGZ\\=*n*\u00d7NPAR, where *n* is an arbitrary integer. If LPLANE\\=.TRUE. and if the real space projector functions (LREAL\\=.TRUE. or ON or AUTO) are used, it might be necessary to check the lines following  ```real space projector functions total allocation  \u00a0: max/ min on nodes \u00a0:  ``` The max/ min values should not differ too much, otherwise the load balancing might worsen as well. The optimum settings for NPAR and LPLANE depend strongly on the type of machine you are using.Some recommended setups: * LINUX cluster linked by Infiniband, modern multicore machines: On a LINUX cluster with multicore machines linked by a fast network we recommend to set  ```LPLANE = .TRUE.NCORE  = number of cores per node (e.g. 4 or 8)LSCALU = .FALSE.NSIM   = 4  ``` If very many nodes are used, it might be necessary to set LPLANE\\=.FALSE., but usually this offers very little advantage. For long runs (*e.g.* molecular dynamics), we recommend to optimize NPAR by trying short runs for different settings.* LINUX cluster linked by 1 Gbit Ethernet, and LINUX clusters with single cores: On a LINUX cluster linked by a relatively slow network, LPLANE must be set to .TRUE., and the NPAR flag should be equal to the number of cores:  ```LPLANE = .TRUE.NCORE  = 1LSCALU = .FALSE.NSIM   = 4  ``` Mind that you need at least a 100 Mbit full duplex network, with a fast switch offering at least 2 Gbit switch capacity to find usefull speedups. Multi\\-core machines should be always linked by an Infiniband, since Gbit is too slow for multi\\-core machines.* Massively parallel machines (Cray, Blue Gene): On many massively parallel machines one is forced to use a huge number of cores. In this case load balancing problems and problems with the communication bandwidth are likely to be experienced. In addition the local memory is fairly small on some massively parallel machines; too small keep the real space projectors in the cache with any setting. Therefore, we recommend to set NPAR on these machines to \u221a*\\# of cores* (explicit timing can be helpful to find the optimum value). The use of LPLANE\\=.TRUE. is only recommended if the number of nodes is significantly smaller than NGX, NGY and NGZ.In summary, the following setting is recommended  ```LPLANE = .FALSE.NPAR   = sqrt(number of cores)NSIM   = 1  ```"}
{"file_name": "EDIFFG.md", "content": "EDIFFG= \\[real]   Default: **EDIFFG** \\= EDIFF\u00d710nDescription: EDIFFG defines the break condition for the ionic relaxation loop.  --- When EDIFFG is positive, the relaxation is stopped when the change of the total energy is smaller than EDIFFG between two ionic steps. When EDIFFG is negative, the relaxation is stopped when the norms of all the forces are smaller than \\|EDIFFG\\|. This is usually a more convenient setting. If EDIFFG \\= 0, the ionic relaxation is stopped after NSW steps. | **Warning:** EDIFFG does not apply to molecular\\-dynamics simulations. || --- |"}
{"file_name": "Collective_jumps_of_a_Pt_adatom_on_fcc-Pt_(001)__Nudged_Elastic_Band_Calculation.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation > List of tutorials  **Description**: calculate the energy barrier for the self\\-diffusion (of a Pt\\-adatom) on Pt (001\\): The most stable adsorption site of the adatom Pt@Pt(001\\) is the hollow (h) position. Simple models of the diffusion of the adatom from h to the neighboring h site include two diffusion paths: hollow\\-top\\-hollow (hth, eg along \\[1\\-10]) or hollow\\-bridge\\-hollow (hbh, eg along \\[100]). A collective jump mechanism involving 2 Pt atoms diffusing along \\[1\\-10] is proposed to be the diffusion mechanism with the lowest energy barrier [\\[1]](#cite_note-kellog:prl64:3143-1) The calculation of the barrier heights involves the following steps: 1\\. calculation of the bulk a0 of Pt for the chosen functional 2\\. a clean Pt (001\\) surface, with a 2D supercell of \\-at minimum\\- (2x2\\) reconstruction 3\\. the energies of the surface including the Pt\\-adatom in h, b, and t position 4\\. a Nudged Elastic Band (NEB) calculation [\\[2]](#cite_note-NEB-2) for the proposed collective jump mechanism steps 1\\-3 are straightforward  inputs for a fast, preliminary estimate are given here and in Pt\\_NEB\\_fast.tgz (**mind** this \"quick and dirty\" setup is only suitable to learn about principles of the setup of a NEB calculation; the results of the NEB run with this minimal set of parameters do **not** reproduce the experimentally found behaviour), for a more time\\-consuming, but more accurate setup (larger number of Pt layers, denser k\\-mesh, higher PREC and ENCUT) please use the files untarred from Pt\\_NEB.tgz:  * INCAR System: fcc Pt (001\\), 3layers  ```ISTART = 0EDIFF = 1e-6              # electronic convergencePREC = NormalIBRION = 1                # DIIS algorithmPOTIM = 0.5NSW = 20EDIFFG = -0.01            # max forces: 0.1eV/AANELMIN = 5                 # at least 5 el. scf steps  for each ionic step  ```   * KPOINTS  ```K-Points 0Gamma 3  3  1 0  0  0  ``` * POSCAR (clean surface)  ```fcc Pt, paw-PBE5.62024  1.0 0.0 0.0  0.0 1.0 0.0  0.0 0.0 3.0 Pt 12SelectiveDirect0.25 0.25 0.11785       F  F  F0.75 0.25 0.11785       F  F  F0.25 0.75 0.11785       F  F  F0.75 0.75 0.11785       F  F  F0.00 0.00 0.23570       F  F  T0.00 0.50 0.23570       F  F  T0.50 0.00 0.23570       F  F  T0.50 0.50 0.23570       F  F  T0.25 0.25 0.35355       F  F  T0.75 0.25 0.35355       F  F  T0.25 0.75 0.35355       F  F  T0.75 0.75 0.35355       F  F  T  ``` * POSCAR (Pt@Pt(001\\), hollow)  ``` fcc Pt, paw-PBE   5.62024000000000     1.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    1.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    3.0000000000000000 Pt 13 Selective dynamics Direct  0.2500000000000000  0.2500000000000000  0.1178499999999971   F   F   F  0.7500000000000000  0.2500000000000000  0.1178499999999971   F   F   F  0.2500000000000000  0.7500000000000000  0.1178499999999971   F   F   F  0.7500000000000000  0.7500000000000000  0.1178499999999971   F   F   F  0.0000000000000000  0.0000000000000000  0.2341409911878811   T   T   T  0.0000000000000000  0.5000000000000000  0.2344158754007225   T   T   T  0.5000000000000000  0.0000000000000000  0.2377721273226986   T   T   T  0.5000000000000000  0.5000000000000000  0.2341409911878811   T   T   T  0.2500000000000000  0.2500000000000000  0.3517982322412672   T   T   T  0.7500000000000000  0.2500000000000000  0.3517982322412672   T   T   T  0.2500000000000000  0.7500000000000000  0.3517982322412672   T   T   T  0.7500000000000000  0.7500000000000000  0.3517982322412672   T   T   T  0.0000000000000000  0.5000000000000000  0.4492270704381683   T   T   T  ``` * POSCAR (Pt@Pt(001\\), bridge)  ``` fcc Pt, paw-PBE   5.62024000000000     1.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    1.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    3.0000000000000000 Pt 13 Selective dynamics Direct  0.2500000000000000  0.2500000000000000  0.1178499999999971   F   F   F  0.7500000000000000  0.2500000000000000  0.1178499999999971   F   F   F  0.2500000000000000  0.7500000000000000  0.1178499999999971   F   F   F  0.7500000000000000  0.7500000000000000  0.1178499999999971   F   F   F  0.0002686432543183  0.0000000000000000  0.2356407813553420   T   T   T  0.0014220524373488  0.5000000000000000  0.2356795143373628   T   T   T  0.4997313567456815  0.0000000000000000  0.2356407813553420   T   T   T  0.4985779475626512  0.5000000000000000  0.2356795143373628   T   T   T  0.2500000000000000  0.2341977119064422  0.3525947402192897   F   T   T  0.7500000000000000  0.2518717446753760  0.3518647397661007   T   T   T  0.2500000000000000  0.7658022880935580  0.3525947402192897   F   T   T  0.7500000000000000  0.7481282553246233  0.3518647397661007   T   T   T  0.2500000000000000  0.5000000000000000  0.4716518885541170   F   F   T  ``` * POSCAR (Pt@Pt(001\\), top)  ``` fcc Pt, paw-PBE   5.62024000000000     1.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    1.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    3.0000000000000000 Pt 13 Selective dynamics Direct  0.2500000000000000  0.2500000000000000  0.1178499999999971   F   F   F  0.7500000000000000  0.2500000000000000  0.1178499999999971   F   F   F  0.2500000000000000  0.7500000000000000  0.1178499999999971   F   F   F  0.7500000000000000  0.7500000000000000  0.1178499999999971   F   F   F -0.0014262288827347 -0.0014262288827347  0.2348121710889565   T   T   T -0.0014262288827347  0.5014262288827348  0.2348121710889565   T   T   T  0.5014262288827348 -0.0014262288827347  0.2348121710889565   T   T   T  0.5014262288827348  0.5014262288827348  0.2348121710889565   T   T   T  0.2500000000000000  0.2500000000000000  0.3433443664932221   F   F   T  0.7500000000000000  0.2500000000000000  0.3546231232810972   T   T   T  0.2500000000000000  0.7500000000000000  0.3546231232810972   T   T   T  0.7500000000000000  0.7500000000000000  0.3516055254412989   T   T   T  0.2500000000000000  0.2500000000000000  0.4861522106341429   F   F   T  ``` the NEB calculation should be done a follows: 1\\. run the job from a parent directory containing the files INCAR, POTCAR,KPOINTS and the run\\-script of the job  2\\. consider how many intermediate geometries (N) should be chosen between the initial and the final state of the jumpin INCAR, this corresponds to the parameter IMAGES 3\\. generate sub\\-directories 00 (containing the POSCAR of the initial geometry i), ... 0(N\\+1\\) (containing the POSCAR of the final geometry f of the jump). The POSCAR files of the intermediate steps, to be interpolated between POSCARi and POSCARfare stored in the directories 01 .. 0N. Calculations are **only** done for these intermediate steps, the optimization of the geometries is done under the constraint that the relaxing atoms remain on a plane perpendicular to the hypertangent of the diffusion path. All all output files OUTCAR, CONTCAR, OSZICAR .. of the NEB\\-steps run are written to these subdirectories. in the present excercise, the required precision,... is reduced to a minimum (the files are found in Pt\\_NEB\\_fast.tgz) to save computing time, amore reliable setup is saved in Pt\\_NEB.tgz) * INCAR   System: fcc Pt (001\\), 3layers  ```ISTART = 0EDIFF = 1e-6              # electronic convergencePREC = NormalIBRION = 1                # DIIS algorithmNSW = 10EDIFFG = -0.01            # max forces: 0.1eV/AANELMIN = 5                 # at least 5 el. scf steps  for each ionic stepIMAGES = 2                # 2 intermediate geometries for  the NEBSPRING = -5               # spring constant  ```   * KPOINTS  ```K-Points 0Gamma 3  3  1 0  0  0  ``` * POSCAR (of the initial state, in directory 00\\)  ``` fcc Pt, paw-PBE    5.62024000000000      1.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    1.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    3.0000000000000000 13 Direct   0.250000    0.250000   0.117850   0.750000    0.250000   0.117850   0.250000    0.750000   0.117850   0.750000    0.750000   0.117850   0.000000    0.000000   0.230682   0.000000    0.500000   0.230971   0.500000    0.000000   0.234757   0.500000    0.500000   0.230682   0.256381    0.243619   0.347171   0.743619    0.243619   0.347171   0.256381    0.756381   0.347171   0.743619    0.756381   0.347171   0.000000    0.500000   0.444316  ``` * POSCAR (of the final state, in directory 03\\)  ```  fcc Pt, paw-PBE   5.62024000000000     1.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    1.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    3.0000000000000000 13 Direct   0.250000    0.250000   0.117850   0.750000    0.250000   0.117850   0.250000    0.750000   0.117850   0.750000    0.750000   0.117850   0.000000    0.000000   0.230682   0.000000    0.500000   0.230971   0.500000    0.000000   0.234757   0.500000    0.500000   0.230682   0.500000    0.000000   0.444316   0.756381    0.256381   0.347171   0.243619    0.743619   0.347171   0.756381    0.743619   0.347171   0.243619    0.256381   0.347171  ``` 4\\. concatenate the POSCAR files of i and f to the file POSCAR1\\_POSCAR2\")MIND:  \\-\\- these files must not include the lines with the names of the atoms (vasp.5\\.2 only) and 'Selective Dynamics', \\-\\- there must be no blank line between the POSCARS \\-\\- the block with the velocities of the atoms must be deleted \\-\\- be careful to check that in POSCARi and POSCARj all atoms are on the same side of the supercell to avoid that an atom that actually jumps across the origin of the cell is dragged through the cell by the interpolation of the positions. 5\\. interpolate the starting geometries of the IMAGES, this can be done by using the following script  interpolatePOSCAR POSCAR1\\_POSCAR2\"), the interpolated files are written into the respective subdirectories 00 ... 0(N\\+1\\)   * interpolatePOSCAR  ```file=$1if [\u00a0! -x $file ]then  usage: interpolatePOS POSCAR1_POSCAR2 fi awk <$file 'BEGIN { rep=4; center=0 }/center/ { center=1}/rep/ { rep=$2 } { line=line+1   if ( second\u00a0!= 1 ) {       if ( line == 6 )  {          lines = $1 + $2 + $3 + 7          print \"found \",lines,\" ions\"          head[line] = $0       } else if ( line < 8 )          head[line] = $0       else {             x[line-7] = $1\u00a0; y[line-7] = $2\u00a0; z[line-7] = $3             if (line==lines) {                   line=0; second=1;                   print \"first set read\" } }    } else {       if ( line >= 8 ) {              x2[line-7] = $1; y2[line-7] = $2\u00a0; z2[line-7] = $3  }             if (line==lines) {                   print \"second set read\" } } }END  {   lines=lines-7   for ( line=1; line<=lines\u00a0; line ++ )  {        cx1=cx1+ x[line]\u00a0; cy1=cy1+ y[line]\u00a0; cz1=cz1+ z[line]        cx2=cx2+ x2[line]; cy2=cy2+ y2[line]; cz2=cz2+ z2[line] }   if (center) {     cx=(cx2-cx1)/lines     cy=(cy2-cy1)/lines     cz=(cz2-cz1)/lines     print \"center of mass for second cell will be shifted by\",cx,cy,cz }    for ( i=0; i<rep\u00a0; i++ ) {       file=\"0\" i \"/POSCAR\"       print \"writing to \" file       for (line=1; line<=7\u00a0; line++ )          print head[line]  >file       for ( line=1; line<=lines\u00a0; line ++ )  {          b=i/(rep-1)          a=(rep-1-i)/(rep-1)          dx=a*x[line] + b*(x2[line]-cx)          dy=a*y[line] + b*(y2[line]-cy)          dz=a*z[line] + b*(z2[line]-cz)           printf \" %10.6f  %10.6f %10.6f\\",dx,dy,dz >file } } }'  ``` NOTE: the total number of steps is explicitely given in line 8 of the script (rep\\=, rep \\= IMAGES\\+2\\). If a dfferent number of IMAGES is chosen, this parameter has to be changed.  **alternatively** the name of the input file and the number of images can be passed as options to interpolatePOSCAR: interpolatePOSCAR \\<fn\\> \\<IMAGES\\+2\\> 6\\. run vasp:  **MIND**: the number of CPUs to be used has to be an integer multiple of IMAGES 7\\. if convergence is not reached within NSW steps, the calculation can be continued by a continuation run, just like for a standard ionic relaxation. 8\\. HINT: better convergence is usually achieved if the number of IMAGES is rather low (up to 4\\). If the region close to the transition state is to berefined, one can do another NEB\\-calculation, using the ionic configurations of the IMAGES adjacent to the transition state as the new initial and finalstates for the follow\\-up run.  9: obtain the barrier along diffusion path 00\\-03 by interpolation (spline) Downloads---------  Pt\\_NEB.tgz, Pt\\_NEB\\_fast.tgz"}
{"file_name": "Direct_optimization_of_the_orbitals.md", "content": "With \"direct optimization of the orbitals\" we denote a category of electronic minimization algorithms that use the gradient of the free energy with respect to the orbitals to move towards the ground state of the system: the orbitals are changed such that the total energy is lowered, using, *e.g.* the conjugate gradient approximation, or damped molecular dynamics. In direct optimization methods, the orthogonality constraints are directly incorporated into the functional that is optimized, through Lagrange multipliers.So in fact, instead of minimizing the  Kohn\\-Sham free energy functional *F*, one minimizes the following Langrangian:  F \u00af  \\= F \u2212  \u2211  m n  \u03b3  m n  (  \u27e8  \u03c8  m  \\|  S  \\|  \u03c8  n  \u27e9 \u2212  \u03b4  m n  )  \u2212 \u03bc  (  \u2211  n  f  n  \u2212  N  e l  ) {\\\\displaystyle {\\\\bar {F}}\\=F\\-\\\\sum \\_{mn}\\\\gamma \\_{mn}\\\\left(\\\\langle \\\\psi \\_{m}\\|S\\|\\\\psi \\_{n}\\\\rangle \\-\\\\delta \\_{mn}\\\\right)\\-\\\\mu \\\\left(\\\\sum \\_{n}f\\_{n}\\-N\\_{\\\\rm {el}}\\\\right)} The gradient of this Langrangian with respect to an orbital   \u03c8  n {\\\\displaystyle \\\\psi \\_{n}} , is given by:  \\|  g  n  \u27e9 \\=  f  n  (  1 \u2212  \u2211  m \\= 1  N  S ^  \\|  \u03c8  m  \u27e9 \u27e8  \u03c8  m  \\|  )  H ^  \\|  \u03c8  n  \u27e9 \\+  \u2211  m \\= 1  N  1 2  H  n m  (  f  n  \u2212  f  m  )  S ^  \\|  \u03c8  m  \u27e9 {\\\\displaystyle \\|g\\_{n}\\\\rangle \\=f\\_{n}{\\\\Big (}1\\-\\\\sum \\_{m\\=1}^{N}{\\\\hat {S}}\\\\vert \\\\psi \\_{m}\\\\rangle \\\\langle \\\\psi \\_{m}\\\\vert {\\\\Big )}{\\\\hat {H}}\\\\vert \\\\psi \\_{n}\\\\rangle \\+\\\\sum \\_{m\\=1}^{N}{\\\\frac {1}{2}}{\\\\bf {H}}\\_{nm}(f\\_{n}\\-f\\_{m}){\\\\hat {S}}\\\\vert \\\\psi \\_{m}\\\\rangle } where   {  f  i  \\|  i \\= 1 , . . , N } {\\\\displaystyle \\\\{f\\_{i}\\|i\\=1,..,N\\\\}}  are the partial occupancies, and  H  n m  \\= \u27e8  \u03c8  m  \\|  H ^  \\|  \u03c8  n  \u27e9 {\\\\displaystyle {\\\\bf {H}}\\_{nm}\\=\\\\langle \\\\psi \\_{m}\\\\vert {\\\\hat {H}}\\\\vert \\\\psi \\_{n}\\\\rangle } is the Hamiltonian expressed within the subspace spanned by the current orbitals   {  \u03c8  i  \\|  i \\= 1 , . . , N } {\\\\displaystyle \\\\{\\\\psi \\_{i}\\|i\\=1,..,N\\\\}} .[\\[1]](#cite_note-kresse:cms:1996-1) The structure of the gradient may be understood as follows: the first part on the right\\-hand side describes the change of the free energy with respect to changes in the orbitals that are outside (orthogonal) the subspace spanned by the current set of orbitals,whereas the second part describes the changes of the free energy due to a unitary transformation between the orbitals within this subspace. To derive a search direction, *i.e.*, actual change in the orbitals from the gradient these aforementioned parts are treated separately.The search direction related to the out\\-of\\-subspace part of the gradient is:  \\|  p  n  \u27e9 \\=  f  n  K  (  1 \u2212  \u2211  m \\= 1  N  S ^  \\|  \u03c8  m  \u27e9 \u27e8  \u03c8  m  \\|  )  H ^  \\|  \u03c8  n  \u27e9 {\\\\displaystyle \\\\vert p\\_{n}\\\\rangle \\=f\\_{n}K{\\\\Big (}1\\-\\\\sum \\_{m\\=1}^{N}{\\\\hat {S}}\\\\vert \\\\psi \\_{m}\\\\rangle \\\\langle \\\\psi \\_{m}\\\\vert {\\\\Big )}{\\\\hat {H}}\\\\vert \\\\psi \\_{n}\\\\rangle } where   K {\\\\displaystyle K}  is a preconditioning function. The search direction associated with the subspace rotational part of the gradient may be constructed using Loewdin perturbation theory:  U  n m  \\=  \u03b4  n m  \u2212 \u0394  H  n m  H  m m  \u2212  H  n n {\\\\displaystyle U\\_{nm}\\=\\\\delta \\_{nm}\\-\\\\Delta {\\\\frac {H\\_{nm}}{H\\_{mm}\\-H\\_{nn}}}} where   \u0394 {\\\\displaystyle \\\\Delta }  denotes the stepsize.[\\[2]](#cite_note-gillan:jpc:89-2)Note that taking a step along this search direction amounts to a rotation of the orbitals (*rotation* on account of   U {\\\\displaystyle U}  being unitary):  \\|  \u03c8  n  \u27e9 \\=  \u2211  m \\= 1  N  U  n m  \\|  \u03c8  m  \u27e9 {\\\\displaystyle \\\\vert \\\\psi \\_{n}\\\\rangle \\=\\\\sum \\_{m\\=1}^{N}U\\_{nm}\\\\vert \\\\psi \\_{m}\\\\rangle } Per default, however, VASP constructs a search direction for the subspace rotational part of the gradient in the manner proposed by Freysoldt *et al.*[\\[3]](#cite_note-freysoldt:prb:2009-3) Changes in the partial occupancies are computed in accordance with the aforementioned work as well. When the three contributions to the \"search direction\" (*out\\-of\\-subspace*, *subspace rotational*, and *change in the partial occupancies*) have been determined, they are used to update the orbitals and partial occupancies, either by steepest descent, by means of the conjugate\\-gradient approximation, or using a damped molecular dynamics scheme. After every change of the orbitals and partial occupancies, the total energy and electronic density are recomputed.Per default, the electronic density is constructed directly from the orbitals and partial occupancies at each step along the way, without any density mixing.Optionally, though, density mixing may be used to stabilise these optimisation procedures when charge sloshing occurs. The direct optimization of the orbitals stops when the change of the total energy drops below EDIFF. Note that, when starting from scratch (ISTART \\= 0\\), the direct optimization procedures in VASP always begin with several (NELMDL) self\\-consistency cycles where the density is kept fixed at the initial approximation (overlapping atomic charge densities), using the blocked\\-Davidson algorithm to optimize the orbitals.This ensures that the orbitals, that are initialised with random numbers, have converged to reasonable starting point for the subsequent direct optimization."}
{"file_name": "ML_LERR.md", "content": "ML\\_LERR= \\[logical]   Default: **ML\\_LERR** \\= .TRUE.n| **Warning:** This tag is deprecated and is replaced by ML\\_IERR. || --- | Description: Decides whether the Bayesian error estimates are calculated and written out or not.  ---"}
{"file_name": "CO_on_Ni_111_surface.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Adsorbtion of a CO molecule at the top site of a Ni (111\\) surface. Input----- ### POSCAR  ```Ni - (111) + CO on-top  3.53   .70710678  .0000000  .000000 -0.35355339 0.6123724  .000000   .000000    .000000  5.1961524    5 1 1selective dynamicsdirect   .00000000   .00000000   .00000000  F  F  F   .33333333   .66666667   .11111111  F  F  F   .66666667   .33333333   .22222222  F  F  F   .00000000   .00000000   .33333333  T  T  T   .33333333   .66666667   .44444444  T  T  T   .33333333   .66666667   .54029062  T  T  T   .33333333   .66666667   .60298866  T  T  T  ``` * CO molecule put above surface atom \"on\\-top\". * z  C  \\= (.540 \u2212.444 ) \u22c55\\.196 \u22c53\\.53 \u22481\\.76 {\\\\displaystyle z\\_{\\\\mathrm {C} }\\=(.540\\-.444\\)\\\\cdot 5\\.196\\\\cdot 3\\.53\\\\approx 1\\.76}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . * d  C O  \\= (.603 \u2212.540 ) \u22c55\\.196 \u22c53\\.53 \u22481\\.16 {\\\\displaystyle d\\_{\\\\mathrm {CO} }\\=(.603\\-.540\\)\\\\cdot 5\\.196\\\\cdot 3\\.53\\\\approx 1\\.16}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . ### INCAR  ```  ISTART = 0  ICHARG = 2 general:  SYSTEM = CO adsorption on Ni(111)  ENMAX  = 400  ISMEAR =    2 \u00a0; SIGMA = 0.2  ALGO= Fast  EDIFF = 1E-6 dynamic:  NSW=100  POTIM = 0.2  IBRION = 1  ``` ### KPOINTS  ```K-Points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * Two additional atom types (C and O) in the calculations: append C and O potentials to the POTCAR file. * The sample output for the forces should look like the following:  ```POSITION                                       TOTAL-FORCE (eV/Angst)-----------------------------------------------------------------------------------     0.00000      0.00000      0.00000         0.000000      0.000000      0.175780     0.00000      1.44112      2.03805         0.000000      0.000000     -0.104008     1.24804      0.72056      4.07609         0.000000      0.000000     -0.036305     0.00000      0.00000      6.10852         0.000000      0.000000     -0.083336     0.00000      1.44112      8.15366         0.000000      0.000000      0.009539     0.00000      1.44112      9.90873         0.000000      0.000000      0.011228     0.00000      1.44112     11.06339         0.000000      0.000000      0.027102-----------------------------------------------------------------------------------   total drift:                               -0.000093     -0.000213      0.019852  ``` * Small outward relaxation of surface due to adsorption:   \u0394  d  12  \\= (8\\.154 \u22126\\.109 )  / 2\\.038 \\=0\\.4 % {\\\\displaystyle \\\\Delta d\\_{12}\\=(8\\.154\\-6\\.109\\)/2\\.038\\=0\\.4\\\\%}  . * CO geometry change:   d  C O  \\=11\\.063 \u22129\\.909 \\=1\\.155 {\\\\displaystyle d\\_{\\\\mathrm {CO} }\\=11\\.063\\-9\\.909\\=1\\.155}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ;  z  C  \\=9\\.909 \u22128\\.154 \\=1\\.755 {\\\\displaystyle z\\_{\\\\mathrm {C} }\\=9\\.909\\-8\\.154\\=1\\.755}    \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . * Visualize the structure using p4vasp: [](File_Fig_CO_on_Ni111_1.html) Download--------  COonNi111\\_rel.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorialsBack to the main page."}
{"file_name": "LCHARGH5.md", "content": "LCHARGH5= \\[logical]   Default: **LCHARGH5** \\= LH5nDescription: LCHARGH5 determines whether the charge densities are written to vaspwave.h5."}
{"file_name": "EBREAK.md", "content": "EBREAK= \\[real]   Default: **EBREAK** \\= EDIFF/NBANDS/4nDescription: EBREAK specifies an absolute stopping criterion for the optimization of an eigenvalue.  --- The tags EBREAK, DEPER, and WEIMIN allow fine tuning of the iterative matrix diagonalization, and are best not changed. They are optimized for a large variety of systems, and changing one of the parameters usually decreases performance or can even screw up the iterative matrix diagonalization totally.In general, these tags control when the optimization of a single band is stopped within the iterative matrix diagonalization schemes: EBREAK determines whether a band is fully converged or not. Optimization of an eigenvalue/eigenvectors pair is stopped if the change in the eigenenergy is smaller than EBREAK."}
{"file_name": "ML_CSIG.md", "content": "ML\\_CSIG= \\[real]   Default: **ML\\_CSIG** \\=  0\\.4 {\\\\displaystyle 0\\.4}   Description: Parameter used in the automatic determination of threshold ML\\_CTIFOR for error estimation in the machine learning force field method.  --- The usage of this tag in combination with the learning algorithms is described here: here. The standard error of the history of maximum estimated errors of the forces (ML\\_MHIS) and it's slope must be below ML\\_CSIG and ML\\_CSLOPE so that an update of the threshold for the maximum estimated error of forces ML\\_CTIFOR can take place."}
{"file_name": "Electron-phonon_coupling.md", "content": "Theoretical background---------------------- * Electron\\-phonon interactions theory. How to------ * Electron\\-phonon interactions from Monte\\-Carlo sampling. Pages in category \"Electron\\-phonon interactions\"------------------------------------------------- The following 7 pages are in this category, out of 7 total. ### E * Electron\\-phonon interactions from Monte\\-Carlo sampling* Electron\\-phonon interactions theory### P * PHON LBOSE* PHON LMC* PHON NSTRUCT* PHON NTLIST* PHON TLIST"}
{"file_name": "NBANDSGW.md", "content": "NBANDSGW= \\[integer]   Default: **NBANDSGW** \\= twice the number of occupied statesnDescription: The flag determines how many QP energies are calculated and updated in GW type calculations.   --- This value usually needs to be increased somewhat for partially or fully self\\-consistent calculations. Very accurate resultsare only obtained when NBANDSGW approaches NBANDS, although this dramatically increases the computational requirements."}
{"file_name": "LSELFENERGY.md", "content": "LSELFENERGY= \\[logical]   Default: **LSELFENERGY** \\= .FALSE.nDescription: Controls whether the frequency\\-dependent self\\-energy is calculated or not.  --- * If `LSELFENERGY = .FALSE.` (default), quasi\\-particle (QP) shifts are evaluated.  ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1 for sc-GW calculations column KS-energies equals QP-energies in previous step  and V_xc(KS)=  KS-energies - (<T + V_ion + V_H > + <T+V_H+V_ion>^1  + <V_x>^1)  k-point   1\u00a0:       0.0000    0.0000    0.0000  band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation Imag(sigma)       1      -7.1627      -8.3040     -14.5626     -12.7276     -21.6682       0.6219       2.0000       1.2037      2      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914      3      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914      4      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914      5       0.4603      -0.4663     -13.7603     -12.5200     -18.1532       0.7471       2.0000       0.2167      6       0.4603      -0.4663     -13.7603     -12.5200     -18.1532       0.7471       2.0000       0.2167 ``` * If `LSELFENERGY = .TRUE.`, the frequency dependent self\\-energy   \u27e8  \u03c8  n  k  \\|  \u03a3 ( \u03c9 )  \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\\\langle \\\\psi \\_{n{\\\\mathbf {k} }}\\|\\\\Sigma (\\\\omega )\\|\\\\psi \\_{n{\\\\mathbf {k} }}\\\\rangle }  is evaluated and printed to vasprun.xml\"). An example output looks like the following:  ```<varray name=\"selfenergy\" >                                                                                                                                                                                                                                                 <v>    -150.00000000     -25.40060536       0.24429448 </v>                                                                                                                                                                                                                <v>    -149.70000000     -25.40600800       0.24673910 </v>                                                                                                                                                                                                                <v>    -149.40000000     -25.41141065       0.24918372 </v>                                                                                                                                                                                                                <v>    -149.10000000     -25.41681330       0.25162834 </v>                                                                                                                                                                                                                <v>    -148.80000000     -25.42221682       0.25406890 </v>                                                                                                                                                                                                                <v>    -148.50000000     -25.42762671       0.25647992 </v>                                                                                                                                                                                                                <v>    -148.20000000     -25.43303731       0.25888834 </v> ``` To print the self\\-energy is a slight extra computational effort since, within the GW algorithms, the self\\-energy is usually just evaluated near KS eigenenergies   \u03f5  n k {\\\\displaystyle \\\\epsilon \\_{nk}}  and not the entire frequency range. | **Mind:** In quartic\\-scaling GW the self\\-energy is given on the real\\-frequency axis, while for low\\-scaling GW the self\\-energy is given on the imaginary\\-frequency axis. || --- | Format------ ### Real frequencies If **quartic\\-scaling GW algorithms** are selected, e.g. ALGO\\=EVGW0, the first column corresponds to points on the real\\-frequency axis (in eV). The second and third columns are the real and imaginary parts of the self\\-energy (in eV) at a given band index and **k** point. To identify the band index and **k** point, the ordering has to be taken from the OUTCAR: Instead of the QP shifts, a small set of self\\-energy points are printed to OUTCAR, similar to the following output  ```calculating selfenergy CALC_SELFENERGY_LINEAR between w=-150.00 150.00                                                                                                                                                                                                      k-point   1\u00a0:       0.0000    0.0000    0.0000                                                                                                                                                                                      band No.  band energies     occupation                                                                                                                                                                                                  1     -11.4323      2.00000  selfenergy along real axis                                                                                                                                                                        -150.0000000   -24.0756124     0.2065066                                                                                                                                                                                           -147.0000000   -24.1277845     0.2302741                                                                                                                                                                                           -144.0000000   -24.1803224     0.2537669                                                                                                                                                                                           ...  147.0000000   -20.3498375    -2.8348252                                                                                                                                                                                            150.0000000   -20.2310127    -2.7491028                                                                                                                                                                                                2      -2.7832      2.00000  selfenergy along real axis                                                                                                                                                                        -150.0000000   -13.0060959     0.1938781                                                                                                                                                                                           -147.0000000   -13.0530569     0.2231126                                                                                                                                                                                           -144.0000000   -13.1030584     0.2520593  ...  ``` Here, the first and second band at the Gamma point are printed. The line with `selfenergy along real axis` contains band No., the KS energy, and the occupation of this state. The output in vasprun.xml\") has the same ordering of bands and **k** points, i.e., the band index is always the fastest. The frequency grid cannot be controlled. It is always 1000 points in the range of \\-150 to 150\\. ### Imaginary frequencies For low\\-scaling GW algorithms, the QP shifts are evaluated and printed to OUTCAR for both, LSELFENERGY\\=T and F. For LSELFENERGY\\=T, the vasprun.xml\") file additionally contains the self\\-energy for a given band index and **k** point on the imaginary\\-frequency axis:  ```<varray name=\"selfenergy along imaginary axis\" >                                                                                                                                                                                                                            <v>       0.1570801806644298    -23.7971327349915711     -0.0179645094529067</v>                                                                                                                                                                                           <v>       0.4718033117773284    -23.7968260788831572     -0.0537856829291801</v>                                                                                                                                                                                           <v>       0.8108804505648752    -23.7966749072893577     -0.0932103588740998</v>                                                                                                                                                                                           <v>       1.3058951128526406    -23.7949927690568188     -0.1482973553314607</v>          ...  ``` To identify the band index and **k** point, the ordering has to be taken from the QP shifts block in the OUTCAR. The band index is faster than the **k** point.The imaginary frequency is selected by the Minimax routines[\\[1]](#cite_note-Kaltak:PRB:2020-1), and the number of points depends on NOMEGA."}
{"file_name": "At_and_mol_further.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials* How does the energy change when one decreases SIGMA to 0\\.001 in the INCAR file starting from the \\\\[O\\_atom? Why? * Try to copy [CONTCAR to POSCAR after running the example O\\_dimer. Why is the calculation so fast? * Try to play with the parameter POTIM for the example O\\_dimer. What is the optimal value? * What is the reason for the imaginary frequency in the example CO\\_vibration? Does the behaviour improve when the step width (smaller or larger) is changed? Also try to improve the precision to which the ground state is converged (EDIFF\\=1E\\-5\\). What happens if the accuracy of the calculations is improved (PREC\\=*Accurate*). * Try to use the conjugate gradient algorithm to the   H  2  O {\\\\displaystyle \\\\mathrm {H} \\_{2}\\\\mathrm {O} }  molecule (example H2O). * Calculate the vibrational frequencies of the   H  2  O {\\\\displaystyle \\\\mathrm {H} \\_{2}\\\\mathrm {O} }  molecule (example H2O) after relaxation (example H2O vibration). Why does one find 3 modes that have small frequencies? Try EDIFF\\=1E\\-5 instead of EDIFF\\=1E\\-4\\.   Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "Ensembles.md", "content": "### Introduction A central concept of statistical mechanics is the ensemble. An ensemble consists of a large number of virtual copies of the system of interest. An ensemble will always depend on three thermodynamic state variables, as for example particle number N, temperature T and pressure p. These three variables determine the type of ensemble that is studied. Depending on these three variables there is a thermodynamic potential associated with the ensemble, which would be the Gibbs free energy in the case of N,T and p. Therefore, the concept of the ensemble gives access to any thermodynamic quantity. The configurations of your system building up the ensemble can be obtained from molecular dynamics simulations. The molecular\\-dynamics approach generates the configurations for the ensemble by integrating Newton's equations of motion. ### Theory In this section various ensembles will be introduced. To describe an ensemble mathematically the partition function will be used. The partition function is the central mathematical entity in statistical mechanics. As the wave function in quantum mechanics it contains all the information about a statistical system. The partition function depends on three thermodynamic state variables such as N,T and volume V.   **Microcanonical ensemble (N,V,E)** To start, the three controlled external parameters have to be defined. In the case of the microcanonical ensemble these are the particle number, the volume and the total energy E of the system.The total energy is the sum of the kinetic energy and potential energy of the particle system. Therefore the total energy depends on the momenta and the positions of the system.Furthermore, the energy is an extensive variable depending on the particle number and the volume of the system.The partition function is written as a sum over all microstates in agreement with the NVE constraints  \u03a9 ( N , V , E ) \\=  \u2211  E \u2212 \u03b4 E \\< E ( N , V , {  r  i  } , {  p  i  } ) \\< E \\+ \u03b4 E  1\\. {\\\\displaystyle \\\\Omega (N,V,E)\\=\\\\sum \\_{E\\-\\\\delta E\\<E(N,V,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})\\<E\\+\\\\delta E}1\\.} In this equation   \u03b4 E {\\\\displaystyle \\\\delta E}  denotes a infinitesimal energy.   {  r  i  } {\\\\displaystyle \\\\{\\\\mathbf {r} \\_{i}\\\\}}  denotes the set of particle positions and   {  p  i  } {\\\\displaystyle \\\\{\\\\mathbf {p} \\_{i}\\\\}}  are the conjugate momenta.The sum is over all particle positions and momenta giving an energy in agreement with the energy constraint.Therefore,   \u03a9 ( N , V , E ) {\\\\displaystyle \\\\Omega (N,V,E)}  is the number of microstates under the given conditions.From the microcanonical partition function it is possible to obtain the entropy by  S ( N , V , E ) \\=  k  B  l o g \u03a9 ( N , V , E ) , {\\\\displaystyle S(N,V,E)\\=k\\_{B}log\\\\Omega (N,V,E),} where   k  B {\\\\displaystyle k\\_{B}}  is the Boltzmann constant. The probabilities for the different micro states (r) are given by  P  r  ( N , V , E ) \\=  {  1  \u03a9 ( N , V , E )   f o r  E \u2212 \u03b4 E \\< E \\< E \\+ \u03b4 E  0  e l s e {\\\\displaystyle P\\_{r}(N,V,E)\\={\\\\begin{cases}{\\\\frac {1}{\\\\Omega (N,V,E)}}\\\\ for\\\\ E\\-\\\\delta E\\<E\\<E\\+\\\\delta E\\\\\\\\0\\\\ else\\\\end{cases}}}  . The microcanonical ensemble is a theoretical realization of a N particle system which is placed in a box with fixed volume and fully isolated from its surroundings. Therefore, no energy exchange with the rest of the universe is possible. In VASP this ensemble can be approximated by sampling the configurations in a molecular\\-dynamics run.  **Canonical ensemble ensemble (N,V,T)** In the canonical ensemble the controlled thermodynamic state variables are the particle number, the volume and the temperature. The ensemble consists of all configurations accessible to the system at the given (N,V,T) conditions. The canonical partition function can be derived to be  Z ( N , V , T ) \\=  \u2211  r  e  \u2212 \u03b2 E ( N , V , {  r  r  } , {  p  r  } )  1 {\\\\displaystyle Z(N,V,T)\\=\\\\sum \\_{r}e^{\\-\\\\beta E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}1}  , where   \u03b2 {\\\\displaystyle \\\\beta }  is the inverse temperature   1  k  B  T {\\\\displaystyle {\\\\frac {1}{k\\_{B}T}}}  .The probability for a single microstate r is  P  r  ( N , V , T ) \\=  1  Z ( N , V , T )  e  \u2212 \u03b2 E ( N , V , {  r  i  } , {  p  i  } ) {\\\\displaystyle P\\_{r}(N,V,T)\\={\\\\frac {1}{Z(N,V,T)}}e^{\\-\\\\beta E(N,V,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})}}  . The canonical partition function is related to the Helmholtz free energy by  F ( N , V , T ) \\= \u2212  k  B  l o g Z ( N , V , T ) {\\\\displaystyle F(N,V,T)\\=\\-k\\_{B}logZ(N,V,T)} and the average energy of the system under canonical conditions can be computed as  \u27e8 E \u27e9 \\= \u2212  k  B  T  \u2202 F ( N , V , T )  \u2202 \u03b2  \\=  \u2211  r  e  \u2212 \u03b2 E ( N , V , {  r  r  } , {  p  r  } )  E ( N , V , {  r  r  } , {  p  r  } )  Z {\\\\displaystyle \\\\langle E\\\\rangle \\=\\-k\\_{B}T{\\\\frac {\\\\partial F(N,V,T)}{\\\\partial \\\\beta }}\\=\\\\sum \\_{r}{\\\\frac {e^{\\-\\\\beta E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}{Z}}}  . The canonical ensemble can be visualized as N particle system in a fixed volume box which is allowed to exchange thermal energy with a huge heat bath surrounding it. Therefore, in equilibrium the instantaneous temperature (temperature derived from kinetic energy) is fluctuating around the heat bath temperature. Temperature fluctuations are proportional to   N  \u2212 1  /  2 {\\\\displaystyle N^{\\-1/2}} . Hence, in the thermodynamic limit (  N \u2192 \u221e {\\\\displaystyle N\\\\rightarrow \\\\infty } ) temperature fluctuations vanish. There are several techniques to realize the canonical ensemble in a computer simulation. The configurations in a NVT ensemble can be sampled from a molecular\\-dynamics run.  **Isothermal\u2013isobaric ensemble (NpT)**  In the isothermal\u2013isobaric ensemble the controlled thermodynamic state variables are the particle number, the pressure p and the temperature. The ensemble consists of all configurations accessible to the system at the given (N,p,T) conditions. The isothermal\u2013isobaric partition function can be derived to be  Y ( N , p , T ) \\=  \u2211  r  e  \u2212 \u03b2  (  E ( N , V , {  r  r  } , {  p  r  } ) \\+ p  V  r  ) {\\\\displaystyle Y(N,p,T)\\=\\\\sum \\_{r}e^{\\-\\\\beta \\\\left(E(N,V,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})\\+pV\\_{r}\\\\right)}}  , where   \u03b2 {\\\\displaystyle \\\\beta }  is the inverse temperature   1  k  B  T {\\\\displaystyle {\\\\frac {1}{k\\_{B}T}}}  and pVis the contribution to the energy due to volume work.The probability for a single microstate r is  P  r  ( N , p , T ) \\=  1  Y ( N p , T )  e  \u2212 \u03b2  (  E ( N , p , {  r  i  } , {  p  i  } ) \\+ p  V  r  ) {\\\\displaystyle P\\_{r}(N,p,T)\\={\\\\frac {1}{Y(Np,T)}}e^{\\-\\\\beta \\\\left(E(N,p,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})\\+pV\\_{r}\\\\right)}}  . The isothermal\u2013isobaric partition function is related to the Gibbs free energy by  G ( N , p , T ) \\= \u2212  k  B  l o g Y ( N p , T ) {\\\\displaystyle G(N,p,T)\\=\\-k\\_{B}logY(Np,T)} and the average internal energy of the system under isothermal\u2013isobaric conditions can be computed as  \u27e8 E \u27e9 \\= \u2212  k  B  T  \u2202 G ( N , p , T )  \u2202 \u03b2  \\=  \u2211  r  e  \u2212 \u03b2  (  E ( N , p , {  r  r  } , {  p  r  } ) \\+ p  V  r  )  E ( N , p , {  r  r  } , {  p  r  } )  Y {\\\\displaystyle \\\\langle E\\\\rangle \\=\\-k\\_{B}T{\\\\frac {\\\\partial G(N,p,T)}{\\\\partial \\\\beta }}\\=\\\\sum \\_{r}{\\\\frac {e^{\\-\\\\beta \\\\left(E(N,p,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})\\+pV\\_{r}\\\\right)}E(N,p,\\\\{\\\\mathbf {r} \\_{r}\\\\},\\\\{\\\\mathbf {p} \\_{r}\\\\})}{Y}}}  . The isothermal\u2013isobaric ensemble can be visualized as N particle system in a box without rigid boundaries which is allowed to exchange thermal energy with a huge heat bath surrounding it. Because the box has no rigid sides the volume and shape will change according to the pressure difference within and outside the box. In the isothermal\u2013isobaric ensemble both the instantaneous temperature and pressure will fluctuate around the desired temperature (heat bath) and pressure (volume reservoir), respectively. As in the canonical ensemble these fluctuations vanish in the thermodynamic limit. There are several techniques to realize the isothermal\u2013isobaric ensemble in a computer simulation. The configurations in a NpT ensemble can be sampled from a molecular\\-dynamics run.  **Isoenthalpic\u2013isobaric ensemble (NpH)** In the isoenthalpic\u2013isobaric ensemble the controlled thermodynamic state variables are the particle number, the pressure and the enthalpy H. The ensemble consists of all configurations accessible to the system at the given (N,p,H) conditions. The isoenthalpic\u2013isobaric partition function can be derived to be  X ( N , p , H ) \\=  \u2211  H \u2212 \u03b4 H \\< H ( N , p , {  r  i  } , {  p  i  } ) \\< H \\+ \u03b4 H  1 {\\\\displaystyle X(N,p,H)\\=\\\\sum \\_{H\\-\\\\delta H\\<H(N,p,\\\\{\\\\mathbf {r} \\_{i}\\\\},\\\\{\\\\mathbf {p} \\_{i}\\\\})\\<H\\+\\\\delta H}1}  . The probability for a single microstate r is  P  r  ( N , p , H ) \\=  {  1  X ( N , p , H )   f o r  H \u2212 \u03b4 H \\< H \\< E \\+ \u03b4 H  0  e l s e {\\\\displaystyle P\\_{r}(N,p,H)\\={\\\\begin{cases}{\\\\frac {1}{X(N,p,H)}}\\\\ for\\\\ H\\-\\\\delta H\\<H\\<E\\+\\\\delta H\\\\\\\\0\\\\ else\\\\end{cases}}}  . The isoenthalpic\u2013isobaric ensemble can be visualized as N particle system in a box without rigid boundaries which is thermally isolated from its surroundings. Because the box has no rigid sides the volume and shape will change according to the pressure difference within and outside the box. In the isoenthalpic\u2013isobaric ensemble the instantaneous pressure will fluctuate around the desired pressure value. The configurations in a NpH ensemble can be sampled from a molecular\\-dynamics run. ### How To The following table gives an overview of the possible combinations of ensembles and thermostats in VASP: |  | Thermostat | | | || --- | --- | --- | --- | --- || Ensemble | Andersen | Nose\\-Hoover | Langevin | Multiple Andersen || Microcanonical (NVE) | MDALGO\\=1, ANDERSEN\\_PROB\\=0\\.0 | | | || Canonical (NVT) | MDALGO\\=1 | MDALGO\\=2 | MDALGO\\=3 | MDALGO\\=13 || ISIF\\=2 | ISIF\\=2 | ISIF\\=2 | ISIF\\=2 || Isobaric\\-isothermal (NpT) | not available | not available | MDALGO\\=3 | not available || ISIF\\=3 || Isoenthalpic\\-isobaric (NpH) | MDALGO\\=3, ISIF\\=3, LANGEVIN\\_GAMMA\\=LANGEVIN\\_GAMMA\\_L\\=0\\.0 | | | | Pages in category \"Ensembles\"----------------------------- The following 5 pages are in this category, out of 5 total. ### N * NpH ensemble* NpT ensemble* NVE ensemble* NVT ensemble### P * PSTRESS"}
{"file_name": "ENMIN.md", "content": "ENMIN= \\[real]   Default: **ENMIN** \\= value read from POTCARnDescription: ENMIN describes the minimum viable plane\\-wave energy cutoff in eV for the pseudopotential it is read from.  --- For a multi\\-element POTCAR file, the maximum ENMIN determines the absolutely lowest cutoff energy for the plane\\-wave basis that should be used. If the deprecated PREC setting *Low* is used, this value is used by default. With all recommended PREC setting VASP will use the largest *recommended* cutoff energy ENMAX found in the POTCAR file instead. In all cases, the value can be overwritten by setting ENCUT in the INCAR file."}
{"file_name": "GAMMA_VDW.md", "content": "GAMMA\\_VDW= \\[real]n| Default: **GAMMA\\_VDW** | \\= 1\\.12 | for IVDW\\_NL\\=3 or || --- | --- | --- ||  | \\= 1\\.29 | for IVDW\\_NL\\=4 | Description: Specify   \u03b3 {\\\\displaystyle \\\\gamma }  in vdW\\-DF3\\-opt1/vdW\\-DF3\\-opt2\\.  --- The GAMMA\\_VDW tag allows to specify the value of the parameter   \u03b3 {\\\\displaystyle \\\\gamma }  in the kernel of the vdW\\-DF3\\-opt1/vdW\\-DF3\\-opt2 nonlocal van der Waals functionals.[\\[1]](#cite_note-chakraborty:jctc:2020-1)"}
{"file_name": "Input_files.md", "content": "As a minimal setup, VASP requires the following **input files**:  * the INCAR file,* the POSCAR file, and* the POTCAR file. However, there are more optional **input files**, e.g., the KPOINTS file, the KPOINTS\\_OPT file, the ICONST file, etc. A complete list is provided below. VASP calculations are often continued on top of a previous VASP calculation. So, in case a calculation is restated, the output files of the previous calculation can be **input files** for the next calculation. For instance, the CHGCAR file, the WAVECAR file, the CONTCAR file copied to POSCAR, the ML\\_ABN file copied to ML\\_AB, etc. When HDF5 support is enabled, the vaspin.h5 file can contain the same information and replace the INCAR, POSCAR, KPOINTS and POTCAR files. Finally, there is a special **input file** to induce a *soft stop* of the calculation: the STOPCAR file. It is not used in a standard workflow, but it might be convenient to stop a calculation manually when it takes too long or a technical issue on the compute engine arises. Pages in category \"Input files\"------------------------------- The following 20 pages are in this category, out of 20 total. ### A * Available pseudopotentials### C * CHGCAR### D * DYNMATFULL### I * ICONST* INCAR### K * KPOINTS* KPOINTS OPT* KPOINTS WAN### M * ML AB* ML FF### P * PENALTYPOT* POSCAR* POTCAR* Construction:Potcar.h5### Q * QPOINTS### V * Vaspin.h5### W * WAVECAR* WAVEDER* WFULLxxxx.tmp* Wxxxx.tmp"}
{"file_name": "LCHARG.md", "content": "LCHARG= \\[logical]   Default: **LCHARG** \\= .NOT.LH5nDescription: LCHARG determines whether the charge densities (files CHGCAR and CHG) are written."}
{"file_name": "DFT+U__formalism.md", "content": "DFT\\+U is a method that was proposed to improve the description of systems with strongly correlated   d {\\\\displaystyle d}  or  f {\\\\displaystyle f}  electrons, like antiferromagnetic NiO for instance, that are usually inaccurately described with the standard LDA and GGA functionals[\\[1]](#cite_note-anisimov:prb:91-1). Several variants of the DFT\\+U method exist (see Refs. [\\[2]](#cite_note-Ylvisaker:prb:2009-2)[\\[3]](#cite_note-Himmetoglu:ijqc:2014-3) for reviews) that differ for instance in the way the double counting term   E  dc  (  n ^  ) {\\\\displaystyle E\\_{\\\\text{dc}}({\\\\hat {n}})}  is calculated. Three variants of them are implemented in VASP, whose formalism is briefly summarized below.  * LDAUTYPE\\=1: The rotationally invariant DFT\\+U introduced by Liechtenstein *et al.*[\\[4]](#cite_note-liechtenstein:prb:95-4) This particular flavour of DFT\\+U is of the form  E  H F  (  n ^  ) \\=  1 2  \u2211  { \u03b3 }  (  U  \u03b3  1  \u03b3  3  \u03b3  2  \u03b3  4  \u2212  U  \u03b3  1  \u03b3  3  \u03b3  4  \u03b3  2  )  n ^  \u03b3  1  \u03b3  2  n ^  \u03b3  3  \u03b3  4 {\\\\displaystyle E\\_{\\\\rm {HF}}({\\\\hat {n}})\\={\\\\frac {1}{2}}\\\\sum \\_{\\\\{\\\\gamma \\\\}}(U\\_{\\\\gamma \\_{1}\\\\gamma \\_{3}\\\\gamma \\_{2}\\\\gamma \\_{4}}\\-U\\_{\\\\gamma \\_{1}\\\\gamma \\_{3}\\\\gamma \\_{4}\\\\gamma \\_{2}}){\\\\hat {n}}\\_{\\\\gamma \\_{1}\\\\gamma \\_{2}}{\\\\hat {n}}\\_{\\\\gamma \\_{3}\\\\gamma \\_{4}}} and is determined by the PAW on\\-site occupancies  n ^  \u03b3  1  \u03b3  2  \\= \u27e8  \u03a8  s  2  \u2223  m  2  \u27e9 \u27e8  m  1  \u2223  \u03a8  s  1  \u27e9 {\\\\displaystyle {\\\\hat {n}}\\_{\\\\gamma \\_{1}\\\\gamma \\_{2}}\\=\\\\langle \\\\Psi ^{s\\_{2}}\\\\mid m\\_{2}\\\\rangle \\\\langle m\\_{1}\\\\mid \\\\Psi ^{s\\_{1}}\\\\rangle } and the (unscreened) on\\-site electron\\-electron interaction  U  \u03b3  1  \u03b3  3  \u03b3  2  \u03b3  4  \\= \u27e8  m  1  m  3  \u2223  1  \\|  r  \u2212  r  \u2032  \\|  \u2223  m  2  m  4  \u27e9  \u03b4  s  1  s  2  \u03b4  s  3  s  4 {\\\\displaystyle U\\_{\\\\gamma \\_{1}\\\\gamma \\_{3}\\\\gamma \\_{2}\\\\gamma \\_{4}}\\=\\\\langle m\\_{1}m\\_{3}\\\\mid {\\\\frac {1}{\\|\\\\mathbf {r} \\-\\\\mathbf {r} ^{\\\\prime }\\|}}\\\\mid m\\_{2}m\\_{4}\\\\rangle \\\\delta \\_{s\\_{1}s\\_{2}}\\\\delta \\_{s\\_{3}s\\_{4}}} where   \\|  m \u27e9 {\\\\displaystyle \\|m\\\\rangle }  represents a real spherical harmonics of angular momentum   l {\\\\displaystyle l} \\=LDAUL.The unscreened electron\\-electron interaction   U  \u03b3  1  \u03b3  3  \u03b3  2  \u03b3  4 {\\\\displaystyle U\\_{\\\\gamma \\_{1}\\\\gamma \\_{3}\\\\gamma \\_{2}\\\\gamma \\_{4}}}  can be written in terms of the Slater integrals   F  0 {\\\\displaystyle F^{0}}  ,  F  2 {\\\\displaystyle F^{2}}  ,  F  4 {\\\\displaystyle F^{4}} , and   F  6 {\\\\displaystyle F^{6}}  (  f {\\\\displaystyle f}  electrons). Using values for the Slater integrals calculated from atomic orbitals, however, would lead to a large overestimation of the true electron\\-electron interaction, since in solids the Coulomb interaction is screened (especially   F  0 {\\\\displaystyle F^{0}}  ).In practice these integrals are often treated as parameters, *i.e.*, adjusted to reach agreement with experiment for a property like for instance the equilibrium volume, the magnetic moment or the band gap. They are normally specified in terms of the effective on\\-site Coulomb\\- and exchange parameters,   U {\\\\displaystyle U}  and  J {\\\\displaystyle J}  (LDAUU and LDAUJ, respectively).   U {\\\\displaystyle U}  and  J {\\\\displaystyle J}  can also be extracted from constrained\\-DFT calculations[\\[5]](#cite_note-vaugier:prb:2012-5)[\\[6]](#cite_note-kaltak:thesis2015-6).These translate into values for the Slater integrals in the following way (as implemented in VASP at the moment): | L    {\\\\displaystyle L\\\\;}  L\\; | F  0      {\\\\displaystyle F^{0}\\\\;}  F^{0}\\; | F  2      {\\\\displaystyle F^{2}\\\\;}  F^{2}\\; | F  4      {\\\\displaystyle F^{4}\\\\;}  F^{4}\\; | F  6      {\\\\displaystyle F^{6}\\\\;}  F^{6}\\; || --- | --- | --- | --- | --- || 1    {\\\\displaystyle 1\\\\;}  1\\; | U    {\\\\displaystyle U\\\\;}  U\\; | 5 J    {\\\\displaystyle 5J\\\\;}  5J\\; | \\- | \\- || 2    {\\\\displaystyle 2\\\\;}  2\\; | U    {\\\\displaystyle U\\\\;}  U\\; | 14  1 \\+ 0\\.625    J   {\\\\displaystyle {\\\\frac {14}{1\\+0\\.625}}J}  {\\frac  {14}{1+0.625}}J | 0\\.625  F  2      {\\\\displaystyle 0\\.625F^{2}\\\\;}  0.625F^{2}\\; | \\- || 3    {\\\\displaystyle 3\\\\;}  3\\; | U    {\\\\displaystyle U\\\\;}  U\\; | 6435  286 \\+ 195 \u22c5 0\\.668 \\+ 250 \u22c5 0\\.494    J   {\\\\displaystyle {\\\\frac {6435}{286\\+195\\\\cdot 0\\.668\\+250\\\\cdot 0\\.494}}J}  {\\frac  {6435}{286+195\\cdot 0.668+250\\cdot 0.494}}J | 0\\.668  F  2      {\\\\displaystyle 0\\.668F^{2}\\\\;}  0.668F^{2}\\; | 0\\.494  F  2      {\\\\displaystyle 0\\.494F^{2}\\\\;}  0.494F^{2}\\; | The essence of the DFT\\+U method consists of the assumption that one may now write the total energy as:  E  t o t  ( n ,  n ^  ) \\=  E  D F T  ( n ) \\+  E  H F  (  n ^  ) \u2212  E  d c  (  n ^  ) {\\\\displaystyle E\\_{\\\\mathrm {tot} }(n,{\\\\hat {n}})\\=E\\_{\\\\mathrm {DFT} }(n)\\+E\\_{\\\\mathrm {HF} }({\\\\hat {n}})\\-E\\_{\\\\mathrm {dc} }({\\\\hat {n}})} where the Hartree\\-Fock\\-like interaction replaces the semilocal on\\-site due to the fact that one subtracts a double\\-counting energy   E  d c {\\\\displaystyle E\\_{\\\\mathrm {dc} }} , which supposedly equals the on\\-site semilocal contribution to the total energy,  E  d c  (  n ^  ) \\=  U 2  n ^  t o t  (  n ^  t o t  \u2212 1 ) \u2212  J 2  \u2211  \u03c3  n ^  t o t  \u03c3  (  n ^  t o t  \u03c3  \u2212 1 ) . {\\\\displaystyle E\\_{\\\\mathrm {dc} }({\\\\hat {n}})\\={\\\\frac {U}{2}}{\\\\hat {n}}\\_{\\\\mathrm {tot} }({\\\\hat {n}}\\_{\\\\mathrm {tot} }\\-1\\)\\-{\\\\frac {J}{2}}\\\\sum \\_{\\\\sigma }{\\\\hat {n}}\\_{\\\\mathrm {tot} }^{\\\\sigma }({\\\\hat {n}}\\_{\\\\mathrm {tot} }^{\\\\sigma }\\-1\\).} * LDAUTYPE\\=2: The simplified (rotationally invariant) approach to the DFT\\+U, introduced by Dudarev *et al.*[\\[7]](#cite_note-dudarev:prb:98-7) This flavour of DFT\\+U is of the following form:  E  D F T \\+ U  \\=  E  L S D A  \\+  ( U \u2212 J )  2  \u2211  \u03c3  \\[  (  \u2211  m  1  n  m  1  ,  m  1  \u03c3  )  \u2212  (  \u2211  m  1  ,  m  2  n ^  m  1  ,  m  2  \u03c3  n ^  m  2  ,  m  1  \u03c3  )  ]  . {\\\\displaystyle E\\_{\\\\mathrm {DFT\\+U} }\\=E\\_{\\\\mathrm {LSDA} }\\+{\\\\frac {(U\\-J)}{2}}\\\\sum \\_{\\\\sigma }\\\\left\\[\\\\left(\\\\sum \\_{m\\_{1}}n\\_{m\\_{1},m\\_{1}}^{\\\\sigma }\\\\right)\\-\\\\left(\\\\sum \\_{m\\_{1},m\\_{2}}{\\\\hat {n}}\\_{m\\_{1},m\\_{2}}^{\\\\sigma }{\\\\hat {n}}\\_{m\\_{2},m\\_{1}}^{\\\\sigma }\\\\right)\\\\right].} This can be understood as adding a penalty functional to the semilocal total energy expression that forces the on\\-site occupancy matrix in the direction of idempotency,  n ^  \u03c3  \\=  n ^  \u03c3  n ^  \u03c3 {\\\\displaystyle {\\\\hat {n}}^{\\\\sigma }\\={\\\\hat {n}}^{\\\\sigma }{\\\\hat {n}}^{\\\\sigma }}  .Real matrices are only idempotent when their eigenvalues are either 1 or 0, which for an occupancy matrix translates to either fully occupied or fully unoccupied levels.**Note**: in Dudarev's approach the parameters   U {\\\\displaystyle U}  and  J {\\\\displaystyle J}  do not enter seperately, only the difference   U \u2212 J {\\\\displaystyle U\\-J}  is meaningful.* LDAUTYPE\\=3: This option is for the calculation of the parameter   U {\\\\displaystyle U}  using the linear response approach from Ref. [\\[8]](#cite_note-cococcioni:2005-8). The steps to use this method are shown for the example of NiO. * LDAUTYPE\\=4: same as LDAUTYPE\\=1, but without exchange splitting (i.e., the total spin\\-up plus spin\\-down occupancy matrix is used). The double\\-counting term is given by  E  d c  (  n ^  ) \\=  U 2  n ^  t o t  (  n ^  t o t  \u2212 1 ) \u2212  J 2  \u2211  \u03c3  n ^  t o t  \u03c3  (  n ^  t o t  \u03c3  \u2212 1 ) . {\\\\displaystyle E\\_{\\\\mathrm {dc} }({\\\\hat {n}})\\={\\\\frac {U}{2}}{\\\\hat {n}}\\_{\\\\mathrm {tot} }({\\\\hat {n}}\\_{\\\\mathrm {tot} }\\-1\\)\\-{\\\\frac {J}{2}}\\\\sum \\_{\\\\sigma }{\\\\hat {n}}\\_{\\\\mathrm {tot} }^{\\\\sigma }({\\\\hat {n}}\\_{\\\\mathrm {tot} }^{\\\\sigma }\\-1\\).} Related Tags and Sections------------------------- LDAU,LDAUTYPE,LDAUL,LDAUU,LDAUJ,LDAUPRINT,LMAXMIX,"}
{"file_name": "PHON_NTLIST.md", "content": "PHON\\_NTLIST= \\[integer]   Default: **PHON\\_NTLIST** \\= nonenDescription: This flag sets the number of temperatures for that the electron\\-phonon interactions using the ZG configuration[\\[1]](#cite_note-zacharias:prb:2016-1) is evaluated.   --- This feature is only available from VASP version 6\\.0 or higher. Also, a list of temperatures defined in PHON\\_TLIST has to be defined together with this tag For further usage of this tag see: Electron\\-phonon interactions from Monte\\-Carlo sampling."}
{"file_name": "Monopole_Dipole_and_Quadrupole_corrections-2.md", "content": "Redirect to: * Electrostatic corrections"}
{"file_name": "PARCHG.nb.md", "content": "PARCHG is an output file created when partial charge densities are calculated by setting LPARD \\= .TRUE..The file has the same structure as the CHG file, containing the structure followed by the charge density on the fine FFT grid, but missing the augmentation occupancies that are written to CHGCAR. The units are also equivalent to CHG and CHGCAR. The partial density written to PARCHG is part of the valence electron density that was converged selfconsistently in a previous run. The bands and **k** points that contribute to the partial charges are selected by the IBAND, NBMOD, EINT and KPUSE tags, allowing for fine control of the contributions to the partial charge density. PARCHG.nb.nk files------------------ If LSEPB and/or LSEPK are set to .TRUE. variants of the PARCHG file are written, separating the contributing bands and **k** points respectively. The units and format of the files stay the same. * If `LSEPB = .TRUE.`, **PARCHG.nb.ALLK** files are written, where nb is an index over all bands contributing to the partial charge density. * If `LSEPK = .TRUE.`, **PARCHG.ALLB.nk** files are created, where nk runs over all **k** points in KPUSE or all **k** points if KPUSE is not set. * For `LSEPB = .TRUE.` and `LSEPK = .TRUE.`, all combinations are written to **PARCHG.nb.nk** files. Format------ The PARCHG consists of the following blocks: * Structure in POSCAR format* FFT\\-grid dimensions NGXF, NGYF, NGZF* Partial charge density times FFT\\-grid volume is written with multiple real numbers per line until all NGXF\\*NGYF\\*NGZF values of the block are written. The real\\-space mesh (NX,NY,NZ) is uniform and is spanned by the lattice vectors   a \u2192  ,  b \u2192  ,  c \u2192 {\\\\displaystyle {\\\\vec {a}},{\\\\vec {b}},{\\\\vec {c}}}  defined in the structure block. The coordinates of the mesh points can be restored via  (  N  x  ,  N  y  ,  N  z  )  \\= ^  N  x  \u2212 1  N  G X F  a  \\+  N  y  \u2212 1  N  G Y F  b  \\+  N  z  \u2212 1  N  G Z F  c {\\\\displaystyle (N\\_{x},N\\_{y},N\\_{z}){\\\\hat {\\=}}{\\\\frac {N\\_{x}\\-1}{N\\_{GXF}}}\\\\mathbf {a} \\+{\\\\frac {N\\_{y}\\-1}{N\\_{GYF}}}\\\\mathbf {b} \\+{\\\\frac {N\\_{z}\\-1}{N\\_{GZF}}}\\\\mathbf {c} }  .The dimensions can be increased by increasing the cutoff energy (ENCUT) or explicitly by setting the fine FFT\\-grid dimensions (NGXF, NGYF, NGZF). To arrange the data on the real\\-space grid in the unit cell, mind that the data runs fastest over NX and slowest over NZ. To be more explicit, the density is written using the following command in Fortran  `WRITE(IU,FORM) (((C(NX,NY,NZ),NX=1,NGXF),NY=1,NGYF),NZ=1,NGZF)` . | **Important:** Remember that the values must be divided by the FFT\\-grid volume and the cell volume to obtain the partial charge density     n ( r )   {\\\\displaystyle n(r)}   in units     1  /     \u00c5    3     {\\\\displaystyle 1/\\\\mathrm {\\\\AA} ^{3}}   ^{3}}. || --- | Hence,  n ( r ) \\= d a t a ( r )  /  (  V  g r i d  \u2217  V  c e l l  ) , {\\\\displaystyle n(r)\\=data(r)/(V\\_{grid}\\*V\\_{cell}),}  V  g r i d  \\=  N  G X F  \u2217  N  G Y F  \u2217  N  G Z F  , {\\\\displaystyle V\\_{grid}\\=N\\_{GXF}\\*N\\_{GYF}\\*N\\_{GZF},}  V  c e l l  \\=  \\|  a  \u22c5 (  b  \u00d7  c  )  \\| {\\\\displaystyle V\\_{cell}\\=\\|\\\\mathbf {a} \\\\cdot (\\\\mathbf {b} \\\\times \\\\mathbf {c} )\\|}  ,where   n ( r ) {\\\\displaystyle n(r)}  is the partial charge density in units 1/\u00c5  3 {\\\\displaystyle ^{3}}  . ### Spin\\-polarized calculation In spin\\-polarized calculations, two data sets are stored in the PARCHG file.The first set contains the total partial density (spin up \\+ spin down), and the second is the magnetization density (spin up \\- spin down). Each block is separated by a blank line and a line containing the fine FFT grid dimensions NGXF NGYF NGZF. * Structure* FFT\\-grid dimensions* Partial charge density times FFT\\-grid volume (spin up \\+ spin down)* FFT\\-grid dimensions* Partial magnetization density (spin up \\- spin down)"}
{"file_name": "WPLASMAI.md", "content": "WPLASMAI= \\[real]   Default: **WPLASMAI** \\= 0nDescription: WPLASMAI sets the imaginary part of the plasma frequency in eV.  --- If WPLASMAI\\>0 the Drude term is added to the density\\-density and current\\-current dielectric functions. Related Tags and Sections------------------------- LOPTICS"}
{"file_name": "ICAMM_Rennes_2019.md", "content": "Lectures-------- * DFT, PW, and PAW: \"VASP: The basics(1\\). DFT, plane waves, PAW, ...\". * electronic convergence, BZ sampling: \"VASP: The basics(2\\). electronic convergence, BZ sampling ...\". * structure relaxation, MD: \"VASP: The basics(3\\). structure relaxation, phonons, MD...\". * Hybrid functionals: \"VASP: Hybrid functionals\". * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". * BSE: \"VASP: Beyond DFT. The Bethe\\-Salpeter Equation\". * Magnetism: \"Magnetism: Spin\\-orbit coupling, magnetic exchange and anisotropy\". * Performance: \"VASP: running on HPC resources\". Tutorials--------- For the beginners:  A short introduction to the common Input and Output files. * Atoms and Molecules* Simple Bulk Systems* A bit of Surface Science* Hybrid Functionals* Optical Properties and Dielectric Response* The Random\\-Phase\\-Approximation: GW and ACFDT* The Bethe\\-Salpeter equation* Magnetism   Further Examples---------------- #### Nudge Elastic Band Method and (constrained) Molecular Dynamics * Liquid Si \\- Standard MD * Transition State Search of Ammonia * Adsorption of H2O on TiO2 #### Magnetism in NiO * NiO GGA * NiO GGA\\+U * NiO HSE06 * Estimation of J magnetic coupling * Including the Spin\\-Orbit Coupling * Determining the Magnetic Anisotropy * Constraining the local magnetic moments #### NMR calculations * alpha\\-SiO2 * alpha\\-AlF3   Miscellaneous------------- HOWTO: running the exercises"}
{"file_name": "PTHRESHOLD.md", "content": "PTHRESHOLD= \\[real]nDescription: Control flag for the output of the profiling routines.  --- If specified all routines with less execution time than PTHRESHOLD\\=*time* are not printed out in the OUTCAR file. Examples that use this tag  ---"}
{"file_name": "SPRING_R0.md", "content": "SPRING\\_R0= \\[real (array)]nDescription: Position of the minimum for a harmonic bias potential.  --- The parameter SPRING\\_R0 defines the position of the minimum (  \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }} ) for the harmonic bias potential of the following form:  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  8  ) \\=  \u2211  \u03bc \\= 1  M  1 2  \u03ba  \u03bc  (  \u03be  \u03bc  ( q ) \u2212  \u03be  0 \u03bc  )  2  , {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{8}})\\=\\\\sum \\_{\\\\mu \\=1}^{M}{\\\\frac {1}{2}}\\\\kappa \\_{\\\\mu }(\\\\xi \\_{\\\\mu }(q)\\-\\\\xi \\_{0\\\\mu })^{2},\\\\;} where the sum runs over all (  M  8 {\\\\displaystyle M\\_{8}} ) coordinates the potential acts upon (  \u03be  \u03bc  ( q ) {\\\\displaystyle \\\\xi \\_{\\\\mu }(q)} ), which are defined in the ICONST file by setting the `status=8`.The units of   \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }}  correspond to units of the coordinate the potential acts upon (e.g.,   \u00c5 {\\\\displaystyle {\\\\mathrm {\\\\AA} }}  for coordinates with `flag` R,   r a d . {\\\\displaystyle rad.}  for coordinates with `flag` A, dimensionless for coordinates with `flag` W, etc...).The number of items defined via SPRING\\_R0 must be equal to   M  8 {\\\\displaystyle M\\_{8}} , otherwise the calculation terminates with an error message."}
{"file_name": "Preparing_a_POTCAR.md", "content": "The POTCAR file is a mandatory input file that holds the pseudopotential for each element in the structure. The templates for each element can be downloaded from the VASP Portal. There are sometimes multiple templates for one element with subtle differences. Step\\-by\\-step instructions--------------------------- **Step 1:** Select the latest version of POTCAR files unless you need to use an older one to reproduce a result. **Step 2:** Choose  * standard potentials for calculations depending mainly on occupied states, e.g., within density\\-functional theory, using hybrid functionals, or* GW variants if the calculation requires high accuracy for unoccupied states, i.e., for optical response and many\\-body perturbation theory. **Step 3:** Select a POTCAR for a certain family of exchange\\-correlation (XC) functionals. | **Tip:** The standard choice is to use the PBE version based on LEXCH\\=PE which has a high transferability to other XC functionals. || --- | All potentials are constructed based on solving the scalar relativistic Schr\u00f6dinger equation for a reference system with a certain XC functional. In most versions, one set is available for the LDA, and one for the GGA. The transferability to other XC functionals is seamless by specifying the XC tag in the INCAR.**Step 4 (optional):** Choose a different variant (reference atomic valence configuration, etc.) specified by the suffix.  | **Tip:** The standard choice is to use the bold version in the list of PAW potentials. || --- | See choosing pseudopotentials. | **Important:** Generally opt for the recommended POTCAR files, but test if the property of interest is sensitive to the choice of the pseudopotential. It may be possible to choose a computationally cheaper version or necessary to select a more demanding one. || --- | **Step 5:** For a single element in the structure, you can copy the POTCAR to the working directory, e.g,  ``` cp /path/to/pot/Al/POTCAR .  ``` For structures with multiple elements, the selected POTCAR files must be concatenated to create one POTCAR file containing all species present in the structure. Combine the potentials by entering, for instance,  ``` cat /path/to/pot/Al/POTCAR /path/to/pot/C/POTCAR /path/to/pot/H/POTCAR > POTCAR   ``` The order of the potentials must correspond to the order of the species in the POSCAR file. | **Tip:** If species names are given in the POSCAR, and the order does not match the order in the POTCAR, a warning is printed, but VASP will still run. || --- | Recommendations and advice-------------------------- | **Important:** Except for the 1st\\-row elements, all PAW potentials are designed to work at an energy cutoff (ENMAX tag in the POTCAR) of roughly 250 eV. This is a key aspect of making the calculation computationally cheap. We recommend performing a convergence study of the quantity of interest with respect to the energy cutoff (ENCUT tag in the INCAR). || --- | | **Mind:** Mismatched order of species in the POSCAR and POTCAR files is a common mistake! Add species names to your POSCAR to receive a warning if this happens. || --- | | **Mind:** You can mix and match POTCAR families. Even combining pseudopotentials generated with different XC functionals is possible, however make sure to specify the XC functional in the INCAR, see XC. || --- | Example for preparing a POTCAR for the Heusler alloy TiCo2Si------------------------------------------------------------------------------------ In this example, we want to prepare a POTCAR for a PBE calculation of ferromagnetic TiCo2Si. We are interested in the energy difference between the ferromagnetic and the nonmagnetic solutions. The structure is defined by the following POSCAR:  ```TiCo2Si 1.0  0.0000000000000000    2.8580789844367893    2.8580789844367893  2.8580789844367893    0.0000000000000000    2.8580789844367893  2.8580789844367893    2.8580789844367893    0.0000000000000000Co Si Ti 2  1  1direct  0.7500000000000000    0.7500000000000000    0.7500000000000000 Co  0.2500000000000000    0.2500000000000000    0.2500000000000000 Co  0.0000000000000000    0.0000000000000000    0.0000000000000000 Si  0.5000000000000000    0.5000000000000000    0.5000000000000000 Ti  ``` We will use the potpaw\\_PBE.64 potential set, and since we are interested in small energy differences caused by different magnetic solutions, we should use potentials with additional semicore\\-states in the valence for the 3d metals. The Co\\_pv and Ti\\_sv potentials seem appropriate for the transition metals. We do not expect Si to become magnetic and are not interested in unoccupied states, so the Si potential is a good choice compared to the harder, computationally more demanding Si\\_GW or even Si\\_sv\\_GW. On a UNIX machine, one can use the `cat` command to concatenate files together. One can redirect the output from `stdout` to a file using the `>` operator. The order in the POSCAR dictates the order in the POTCAR:  ```cat ~/potpaw_PBE.64/Co_pv/POTCAR ~/potpaw_PBE.64/Si/POTCAR ~/potpaw_PBE.64/Ti_sv/POTCAR > ~/scratch/TiCo2Si/POTCAR  ``` Related tags and sections------------------------- Available potentials, POTCAR, Choosing pseudopotentials, Projector\\-augmented\\-wave formalism"}
{"file_name": "Electronic_minimization.md", "content": "By **electronic minimization** we denote the process of determining the electronic ground state.Within the context of Hohenberg\\-Kohn\\-Sham density functional theory, the ground state is that state of the system that minimizes the Kohn\\-Sham free energy:  F \\=  \u2211  n  f  n  \u03f5  n  \u2212  E  H  \\[ \u03c1 ]  \\+  E  x c  \\[ \u03c1 ]  \u2212 \u222b  V  x c  (  r  ) \u03c1 (  r  ) d  r  \u2212  \u2211  n  \u03c3 S  (  \u03f5  n  \u2212 \u03bc  \u03c3  ) {\\\\displaystyle F\\=\\\\sum \\_{n}f\\_{n}\\\\epsilon \\_{n}\\-E\\_{\\\\rm {H}}\\\\left\\[\\\\rho \\\\right]\\+E\\_{\\\\rm {xc}}\\\\left\\[\\\\rho \\\\right]\\-\\\\int V\\_{\\\\rm {xc}}({\\\\bf {r}})\\\\rho ({\\\\bf {r}})d{\\\\bf {r}}\\-\\\\sum \\_{n}\\\\sigma S\\\\left({\\\\frac {\\\\epsilon \\_{n}\\-\\\\mu }{\\\\sigma }}\\\\right)} where the electronic density is given by:  \u03c1 (  r  ) \\=  \u2211  n  f  n  \\|  \u03c8  n  (  r  )  \\|  2 {\\\\displaystyle \\\\rho ({\\\\bf {r}})\\=\\\\sum \\_{n}f\\_{n}\\|\\\\psi \\_{n}({\\\\bf {r}})\\|^{2}} and the Kohn\\-Sham orbitals and eigenenergies,   {  \u03c8  n  ,  \u03f5  n  } {\\\\displaystyle \\\\{\\\\psi \\_{n},\\\\epsilon \\_{n}\\\\}}  are solutions to the Kohn\\-Sham equations:  H  \\[ \u03c1 ]  \\|  \u03c8  n  \u27e9 \\=  \u03f5  n  S  \\|  \u03c8  n  \u27e9 {\\\\displaystyle H\\\\left\\[\\\\rho \\\\right]\\|\\\\psi \\_{n}\\\\rangle \\=\\\\epsilon \\_{n}S\\|\\\\psi \\_{n}\\\\rangle } under the constraint that the orbitals are *S*\\-orthonormal:  \u27e8  \u03c8  m  \\|  S  \\|  \u03c8  n  \u27e9 \\=  \u03b4  m n {\\\\displaystyle \\\\langle \\\\psi \\_{m}\\|S\\|\\\\psi \\_{n}\\\\rangle \\=\\\\delta \\_{mn}} The various algorithms for **electronic minimization** VASP offers, can be roughly divided into two categories: * Iterative matrix diagonalisation \\+ density mixing, *aka* the self\\-consistency cycle (SCC).* Direct optimization of the orbitals. Selecting a particular method of **electronic minimization** is done by means of the ALGO (or IALGO) tag. Self\\-consistency cycle----------------------- 1. The SCC starts with an initial guess for the electronic density of the system. In particular, VASP uses the approximation of overlapping atomic charge densities. This density defines the initial Hamiltonian.2. By means of iterative matrix\\-diagonalization techniques, one obtains the NBANDS lowest lying eigenstates of the Hamiltonian. The iterative matrix\\-diagonalization algorithms implemented in VASP are the blocked\\-Davidson algorithm and the residual\\-minimization method with direct inversion in the iterative subspace (RMM\\-DIIS). Per default VASP uses the blocked\\-Davidson algorithm (ALGO \\= Normal).3. After the eigenstates and eigenvalues have been determined with sufficient accuracy, they are used in order to compute the total energy of the system and to construct a new electronic density.4. In principle, this new density could be taken to define a new Hamiltonian. However, in order to obtain a stable algorithm, this new density is not used as is but is mixed with the old density. By default VASP uses a Broyden mixer. The resulting density then defines the new Hamiltonian for the next round of iterative matrix diagonalization (step 2\\). Steps 2\\-4 are repeated until the change in the total energy from one cycle to the next drops below a specific threshold set by EDIFF. Note that when starting from scratch (ISTART \\= 0\\), the SCC procedure of VASP always begins with several (NELMDL) cycles where the density is kept fixed at the initial approximation, i.e., overlapping atomic charge densities.This ensures that the wavefunctions that are initialized with random numbers have converged to something sensible before they are used to construct a new charge density. For a more detailed description of the SCC have a look at: the self\\-consistency cycle. Direct optimization------------------- Similar to the SCC procedure described above, when starting from scratch (ISTART \\= 0\\), the direct optimization procedures in VASP always begin with several (NELMDL) self\\-consistency cycles where the density is kept fixed at the initial approximation (overlapping atomic charge densities).This ensures that the wavefunctions that are initialized with random numbers have converged to a reasonable starting point for the subsequent direct optimization. The direct optimization of the orbitals uses the gradient of the total energy with respect to the orbitals to move towards the ground state of the system: the orbitals are changed such that the total energy is lowered, using, e.g., the conjugate\\-gradient approximation, or damped molecular dynamics. After every change of the orbitals, the total energy and electronic density are recomputed.Per default, the electronic density is constructed directly from the orbitals at each step along the way, without any density mixing.Optionally, though, density mixing may be used to stabilize these optimization procedures when charge sloshing occurs. As for the SCC described above, the direct optimization of the orbitals stops when the change of the total energy drops below EDIFF. For more details on the direct optimization algorithms, please read: direct optimization of the orbitals.    --- Subcategories------------- This category has only the following subcategory. ### D * Density mixing Pages in category \"Electronic minimization\"------------------------------------------- The following 91 pages are in this category, out of 91 total. ### A * ADDGRID* ALGO* AMIN* AMIX* AMIX MAG### B * Blocked\\-Davidson algorithm* BMIX* BMIX MAG### C * Charge sloshing* Conjugate gradient optimization### D * DEPER* Direct optimization of the orbitals### E * EBREAK* EDIFF* EFERMI* Efficient single band eigenvalue\\-minimization* EMAX* EMIN* ENAUG* ENCUT* ENINI### F * FERDO* FERWE### H * Harris\\-Foulkes functional### I * IALGO* ICHARG* IMIX* INIMIX* INIWAV* ISMEAR* ISPIN* ISTART* ISYM### K * K\\-point integration* KGAMMA* KSPACING### L * LAECHG* LCHARG* LCHARGH5* LDIAG* LELF* LH5* LKPROJ* LMAXMIX* LMAXPAW* LMIXTAU* LNMR SYM RED* LORBIT* LREAL* LSUBROT* LVTOT* LWAVE* LWAVEH5### M * MAGMOM* MAXMIX* MIXPRE### N * NBANDS* NEDOS* NELECT* NELM* NELMDL* NELMIN* NGX* NGXF* NGY* NGYF* NGZ* NGZF* NLSPLINE* NRMM* NWRITE### P * PLEVEL* POMASS* PREC* Preconditioning* Projector\\-augmented\\-wave formalism### Q * QMAXFOCKAE### R * RMM\\-DIIS* ROPT* RWIGS### S * Self\\-consistency cycle* SIGMA* Single band steepest descent scheme* SMEARINGS* SYMPREC* SYSTEM### T * TIME* Troubleshooting electronic convergence### W * WC* WEIMIN* Wrap\\-around errors"}
{"file_name": "NOMEGA_DUMP.md", "content": "NOMEGA\\_DUMP= \\[integer]n| Default: **NOMEGA\\_DUMP** | \\= \\-1 |  || --- | --- | --- | | **Warning:** Available as of version 6\\.3\\.2\\. || --- | Description: NOMEGA\\_DUMP selects the imaginary frequency point of screened potential in low\\-scaling GW calculations that is written to file.  | **Mind:** This tag can be used to obtain WFULLxxxx.tmp for BSE calculations. || --- |  --- NOMEGA\\_DUMP selects the imaginary frequency point of the screened Coulomb kernel that is written to WFULLxxxx.tmp in low\\-scaling GW calculations. If set to 0, WFULLxxxx.tmp contains the screened Coulomb interaction W at   \u03c9 \\= 0 {\\\\displaystyle \\\\omega \\=0}  .For positive values, these files contain the screened Coulomb interaction at the corresponding imaginary frequency point. For negative values, WFULLxxxx.tmp is not written."}
{"file_name": "The_GW_approximation_of_Hedin's_equations.md", "content": "Green's functions----------------- The GW method can be understood in terms of the following eigenvalue equation[\\[1]](#cite_note-HybertsenLouie-1)  ( T \\+  V  e x t  \\+  V  h  )  \u03d5  n  k  (  r  ) \\+ \u222b d  r  \u03a3 (  r  ,  r  \u2032  , \u03c9 \\=  E  n  k  )  \u03d5  n  k  (  r  \u2032  ) \\=  E  n  k  \u03d5  n  k  (  r  ) {\\\\displaystyle (T\\+V\\_{ext}\\+V\\_{h})\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})\\+\\\\int d{\\\\bf {r}}\\\\Sigma ({\\\\bf {r}},{\\\\bf {r}}',\\\\omega \\=E\\_{n{\\\\bf {k}}})\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}}')\\=E\\_{n{\\\\bf {k}}}\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})} Here   T {\\\\displaystyle T}  is the kinetic energy,   V  e x t {\\\\displaystyle V\\_{ext}}  the external potential of the nuclei,   V  h {\\\\displaystyle V\\_{h}}  the Hartree potential and   E  n  k {\\\\displaystyle E\\_{n{\\\\bf {k}}}}  the quasiparticle energies with orbitals   \u03d5  n  k {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}} . In contrast to DFT, the exchange\\-correlation potential is replaced by the many\\-body self\\-energy   \u03a3 {\\\\displaystyle \\\\Sigma }  and should be obtained together with the Green's function   G {\\\\displaystyle G} , the irreducible polarizability   \u03c7 {\\\\displaystyle \\\\chi } , the screened Coulomb interaction   W {\\\\displaystyle W}  and the irreducible vertex function   \u0393 {\\\\displaystyle \\\\Gamma }  in a self\\-consistent procedure. For completeness, these equations are[\\[2]](#cite_note-Hedin-2)  G ( 1 , 2 ) \\=  G  0  ( 1 , 2 ) \\+ \u222b d ( 3 , 4 )  G  0  ( 1 , 3 ) \u03a3 ( 3 , 4 ) G ( 4 , 2 ) {\\\\displaystyle G(1,2\\)\\=G\\_{0}(1,2\\)\\+\\\\int d(3,4\\)G\\_{0}(1,3\\)\\\\Sigma (3,4\\)G(4,2\\)}  \u03c7 ( 1 , 2 ) \\= \u222b d ( 3 , 4 ) G ( 1 , 3 ) G ( 4 , 1 ) \u0393 ( 3 , 4 ; 2 ) {\\\\displaystyle \\\\chi (1,2\\)\\=\\\\int d(3,4\\)G(1,3\\)G(4,1\\)\\\\Gamma (3,4;2\\)}  W ( 1 , 2 ) \\= V ( 1 , 2 ) \\+ \u222b d ( 3 , 4 ) V ( 1 , 3 ) \u03c7 ( 3 , 4 ) W ( 4 , 2 ) {\\\\displaystyle W(1,2\\)\\=V(1,2\\)\\+\\\\int d(3,4\\)V(1,3\\)\\\\chi (3,4\\)W(4,2\\)}  \u03a3 ( 1 , 2 ) \\= \u222b d ( 3 , 4 ) G ( 1 , 3 ) \u0393 ( 3 , 2 ; 4 ) W ( 4 , 1 ) {\\\\displaystyle \\\\Sigma (1,2\\)\\=\\\\int d(3,4\\)G(1,3\\)\\\\Gamma (3,2;4\\)W(4,1\\)}  \u0393 ( 1 , 2 ; 3 ) \\= \u03b4 ( 1 , 2 ) \u03b4 ( 1 , 3 ) \\+ \u222b d ( 4 , 5 , 6 , 7 )  \u03b4 \u03a3 ( 1 , 2 )  \u03b4 G ( 4 , 5 )  G ( 4 , 6 ) G ( 7 , 5 ) \u0393 ( 6 , 7 ; 3 ) {\\\\displaystyle \\\\Gamma (1,2;3\\)\\=\\\\delta (1,2\\)\\\\delta (1,3\\)\\+\\\\int d(4,5,6,7\\){\\\\frac {\\\\delta \\\\Sigma (1,2\\)}{\\\\delta G(4,5\\)}}G(4,6\\)G(7,5\\)\\\\Gamma (6,7;3\\)} Here the common notation   1 \\= (  r  1  ,  t  1  ) {\\\\displaystyle 1\\=({\\\\bf {r}}\\_{1},t\\_{1})}  was adopted and   V {\\\\displaystyle V}  denotes the bare Coulomb interaction. Note, that these equations are exact and provide an alternative to the Schr\u00f6dinger equation for the many\\-body problem. Nevertheless, approximations are necessary for realistic systems. The most popular one is the GW approximation and is obtained by neglecting the equation for the vertex function and using the bare vertex instead:  \u0393 ( 1 , 2 ; 3 ) \\= \u03b4 ( 1 , 2 ) \u03b4 ( 1 , 3 ) {\\\\displaystyle \\\\Gamma (1,2;3\\)\\=\\\\delta (1,2\\)\\\\delta (1,3\\)} This means that the equations for the polarizability and self\\-energy reduce to   \u03c7 ( 1 , 2 ) \\= G ( 1 , 2 ) G ( 2 , 1 ) {\\\\displaystyle \\\\chi (1,2\\)\\=G(1,2\\)G(2,1\\)}  \u03a3 ( 1 , 2 ) \\= G ( 1 , 2 ) W ( 2 , 1 ) {\\\\displaystyle \\\\Sigma (1,2\\)\\=G(1,2\\)W(2,1\\)} while the equations for the Green's function and the screened potential remain the same.  However, in practice, these equations are usually solved in reciprocal space in the frequency domain  W  G  G  \u2032  (  q  , \u03c9 ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  (  q  , \u03c9 )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})}  G  G  G  \u2032  (  q  , \u03c9 ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03a3  G  G  \u2032  (  q  , \u03c9 )  G  G  G  \u2032  ( 0 )  (  q  )  ]  \u2212 1  G  G  G  \u2032  ( 0 )  (  q  ) {\\\\displaystyle G\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\Sigma \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},\\\\omega )G\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(0\\)}({\\\\bf {q}})\\\\right]^{\\-1}G\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(0\\)}({\\\\bf {q}})} In principle Hedin's equations have to be solved self\\-consistently, where in the first iteration   G  ( 0 ) {\\\\displaystyle G^{(0\\)}}  is the non\\-interacting Green's function   G  ( 0 )  (  r  ,  r  \u2032  , \u03c9 ) \\=  \u2211  n  k  \u03d5  n  k  \u2217 ( 0 )  (  r  )  \u03d5  n  k  ( 0 )  (  r  \u2032  )  \u03c9 \u2212  E  n  k  ( 0 ) {\\\\displaystyle G^{(0\\)}({\\\\bf {r}},{\\\\bf {r}}',\\\\omega )\\=\\\\sum \\_{n{\\\\bf {k}}}{\\\\frac {\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}}')}{\\\\omega \\-E\\_{n{\\\\bf {k}}}^{(0\\)}}}} with   \u03d5  n  k  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}}  being a set of one\\-electron orbitals and   E  n  k  ( 0 ) {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(0\\)}}  the corresponding energies. Afterwards the polarizability   \u03c7  ( 0 ) {\\\\displaystyle \\\\chi ^{(0\\)}}  is determined, followed by the screened potential   W  ( 0 ) {\\\\displaystyle W^{(0\\)}}  and the self\\-energy   \u03a3  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}} . This means that GW calculations require a first guess for the one\\-electron eigensystem, which is usually taken from a preceding DFT step.  In principle, one has to repeat all steps by the updating the Green's function with the Dyson equation given above in each iteration cycle until self\\-consistency is reached. In practice, this is hardly ever done due to computational complexity on the one hand (in fact fully self\\-consistent GW calculations are available as of VASP 6 only).  On the other hand, one observes that by keeping the screened potential   W {\\\\displaystyle W}  in the first iteration to the DFT level one benefits from error cancelling,[\\[3]](#cite_note-shishkin:prl:07-3) which is the reason why often the screening is kept on the DFT level and one aims at self\\-consistency in Green's function only.  Following possible approaches are applied in practice and selectable within VASP with the ALGO tag.  Single Shot: G0W0----------------- Performing only one GW iteration step is commonly referred to the G0W0 method. Here the self\\-energy   \u03a3  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}}  is determined and the corresponding eigenvalue equation is solved.[\\[1]](#cite_note-HybertsenLouie-1) Formally, this is a five step precedure * Determine the independent particle polarizability   \u03c7  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )} * Determine the screened Coulomb potential   W  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle W\\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )} * Determine the self\\-energy   \u03a3  ( 0 )  (  r ,  r \u2032  , \u03c9 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}({\\\\bf {r,r'}},\\\\omega )} * Solve the eigenvalue equation   ( T \\+  V  e x t  \\+  V  h  )  \u03d5  n  k  (  r  ) \\+ \u222b d  r  \u03a3  ( 0 )  (  r  ,  r  \u2032  , \u03c9 \\=  E  n  k  ( 1 )  )  \u03d5  n  k  (  r  \u2032  ) \\=  E  n  k  ( 1 )  \u03d5  n  k  (  r  ) {\\\\displaystyle (T\\+V\\_{ext}\\+V\\_{h})\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})\\+\\\\int d{\\\\bf {r}}\\\\Sigma ^{(0\\)}\\\\left({\\\\bf {r}},{\\\\bf {r}}',\\\\omega \\=E\\_{n{\\\\bf {k}}}^{(1\\)}\\\\right)\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}}')\\=E\\_{n{\\\\bf {k}}}^{(1\\)}\\\\phi \\_{n{\\\\bf {k}}}({\\\\bf {r}})}  for the quasi\\-particle energies   E  n  k  ( 1 ) {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(1\\)}}  . To save further computation time, the self\\-energy is linearized with a series expansion around the Kohn\\-Sham eigenvalues   \u03f5  n  k {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}}  \u03a3  ( 0 )  (  r ,  r \u2032  , \u03c9 ) \u2248  \u03a3  ( 0 )  (  r ,  r \u2032  ,  \u03f5  n  k  ) \\+  \u2202  \u03a3  ( 0 )  \u2202 \u03c9  (  r ,  r \u2032  , \u03c9 )  \\|  \u03c9 \\=  \u03f5  n  k  ( \u03c9 \u2212  \u03f5  n  k  ) {\\\\displaystyle \\\\Sigma ^{(0\\)}({\\\\bf {r,r'}},\\\\omega )\\\\approx \\\\Sigma ^{(0\\)}({\\\\bf {r,r'}},\\\\epsilon \\_{n{\\\\bf {k}}})\\+\\\\left.{\\\\frac {\\\\partial \\\\Sigma ^{(0\\)}}{\\\\partial \\\\omega }}({\\\\bf {r,r'}},\\\\omega )\\\\right\\|\\_{\\\\omega \\=\\\\epsilon \\_{n{\\\\bf {k}}}}(\\\\omega \\-\\\\epsilon \\_{n{\\\\bf {k}}})} and the renormalization factor   Z  n  k  ( 0 )  \\=  \\[  1 \u2212  R e  (  \u2202  \u03a3  ( 0 )  \u2202 \u03c9  (  r ,  r \u2032  , \u03c9 )  \\|  \u03c9 \\=  \u03f5  n  k  )  ]  \u2212 1 {\\\\displaystyle Z\\_{n{\\\\bf {k}}}^{(0\\)}\\=\\\\left\\[1\\-{\\\\rm {Re}}\\\\left(\\\\left.{\\\\frac {\\\\partial \\\\Sigma ^{(0\\)}}{\\\\partial \\\\omega }}({\\\\bf {r,r'}},\\\\omega )\\\\right\\|\\_{\\\\omega \\=\\\\epsilon \\_{n{\\\\bf {k}}}}\\\\right)\\\\right]^{\\-1}}  is introduced. This allows to obtain the G0W0 quasi\\-particle energies from following equation[\\[1]](#cite_note-HybertsenLouie-1)  E  n  k  ( 1 )  \\=  \u03f5  n  k  \\+  Z  n  k  ( 0 )  R e  \\[  \u27e8  \u03d5  n  k  \\|  \u2212  \u0394 2  \\+  V  e x t  \\+  V  h  \\+  \u03a3  ( 0 )  ( \u03c9 \\=  \u03f5  n  k  ) \u2212  \u03f5  n  k  \\|  \u03d5  n  k  \u27e9  ] {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(1\\)}\\=\\\\epsilon \\_{n{\\\\bf {k}}}\\+Z\\_{n{\\\\bf {k}}}^{(0\\)}{\\\\rm {Re}}\\\\left\\[\\\\langle \\\\phi \\_{n{\\\\bf {k}}}\\|\\-{\\\\frac {\\\\Delta }{2}}\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma ^{(0\\)}(\\\\omega \\=\\\\epsilon \\_{n{\\\\bf {k}}})\\-\\\\epsilon \\_{n{\\\\bf {k}}}\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\rangle \\\\right]} The G0W0 method avoids the direct computation of the Green's function and neglects self\\-consistency in   G {\\\\displaystyle G}  completely. In fact, only the Kohn\\-Sham energies are updated from   \u03f5  n  k  \u2192  E  n  k  ( 1 ) {\\\\displaystyle \\\\epsilon \\_{n{\\\\bf {k}}}\\\\to E\\_{n{\\\\bf {k}}}^{(1\\)}} , while the orbitals remain unchanged. This is the reason why the G0W0 method is internally selected as of VASP6 with ALGO \\=EVGW0 (\"eigenvalue GW\") in combination with NELM\\=1 to indicate one single iteration, even though the method is commonly known as the G0W0 approach. To keep backwards\\-compatibility, however, ALGO\\=G0W0 is still supported in VASP6\\. Note that avoiding self\\-consistency might seem a drastic step at first sight. However, the G0W0 method often yields satisfactory results with band\\-gaps close to experimental measurements and is often employed for realistic band gap calculations.[\\[4]](#cite_note-shishkin-PRB74-4)[\\[5]](#cite_note-shishkin-PRB75-5) Partially self\\-consistent: GW0 or EVGW0---------------------------------------- The G0W0 quasi\\-particle energies can be used to update the poles of the Green's function in the spectral representation  G  ( i )  (  r  ,  r  \u2032  , \u03c9 ) \\=  \u2211  n  k  \u03d5  n  k  \u2217 ( 0 )  (  r  )  \u03d5  n  k  ( 0 )  (  r  \u2032  )  \u03c9 \u2212  E  n  k  ( i ) {\\\\displaystyle G^{(i)}({\\\\bf {r}},{\\\\bf {r}}',\\\\omega )\\=\\\\sum \\_{n{\\\\bf {k}}}{\\\\frac {\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}}')}{\\\\omega \\-E\\_{n{\\\\bf {k}}}^{(i)}}}} which in turn can be used to update the self\\-energy via   \u03a3  ( 0 )  \\=  G  ( i )  W  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(0\\)}\\=G^{(i)}W^{(0\\)}} . This allows to form a partial self\\-consistency loop, where the screening is kept on the DFT level. The method is commonly known as GW0, even though only eigenvalues are updated: * Determine the independent particle polarizability   \u03c7  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle \\\\chi \\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )} * Determine the screened Coulomb potential   W  G  G \u2032  ( 0 )  (  q  , \u03c9 ) {\\\\displaystyle W\\_{\\\\bf {GG'}}^{(0\\)}({\\\\bf {q}},\\\\omega )}  and keep it fixed in the following* Determine the self\\-energy   \u03a3  ( j )  (  r ,  r \u2032  , \u03c9 ) \\=  G  ( j )  W  ( 0 ) {\\\\displaystyle \\\\Sigma ^{(j)}({\\\\bf {r,r'}},\\\\omega )\\=G^{(j)}W^{(0\\)}}  .* Update quasi\\-particle energies   E  n  k  ( j \\+ 1 )  \\=  \u03f5  n  k  \\+  Z  n  k  ( j )  R e  \\[  \u27e8  \u03d5  n  k  \\|  \u2212  \u0394 2  \\+  V  e x t  \\+  V  h  \\+  \u03a3  ( j )  ( \u03c9 \\=  E  n  k  ( j )  ) \u2212  \u03f5  n  k  \\|  \u03d5  n  k  \u27e9  ] {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\=\\\\epsilon \\_{n{\\\\bf {k}}}\\+Z\\_{n{\\\\bf {k}}}^{(j)}{\\\\rm {Re}}\\\\left\\[\\\\langle \\\\phi \\_{n{\\\\bf {k}}}\\|\\-{\\\\frac {\\\\Delta }{2}}\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma ^{(j)}(\\\\omega \\=E\\_{n{\\\\bf {k}}}^{(j)})\\-\\\\epsilon \\_{n{\\\\bf {k}}}\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\rangle \\\\right]} . In the first iteration use   E  n  k  ( 0 )  \\=  \u03f5  n  k {\\\\displaystyle E\\_{n{\\\\bf {k}}}^{(0\\)}\\=\\\\epsilon \\_{n{\\\\bf {k}}}} The last two steps are repeated until self\\-consistency is reached. The GW0 method is computationally slightly more expensive than the single\\-shot approach, but yields often excellent agreement with experimentally measured band gaps while being computationally affordable at the same time.[\\[4]](#cite_note-shishkin-PRB74-4)[\\[5]](#cite_note-shishkin-PRB75-5) Note that the GW0 and its single\\-shot approach do not allow for updates in the Kohn\\-Sham orbitals   \u03d5  n  k {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}} , merely the eigenvalues are updated. Furthermore, the name GW0 indicates an update in the Green's function as a solution of the Dyson equation, while the used spectral representation of the Green's function above is strictly speaking correct only in the single\\-shot approach. Since VASP6 allows to update the Green's function from the solution of the corresponding Dyson equation, the commonly known GW0 method is also selectable with ALGO\\=EVGW0 (\"eigenvalue GW\") and the number of iteration is set with NELM. Self\\-consistent Quasi\\-particle approximation: scQPGW0------------------------------------------------------- In addition to eigenvalues one can use the self\\-consistent Quasi\\-particle GW0 approach (scQPGW0\\) to update the orbitals   \u03d5  n  k  \u2192  \u03c8  n  k  ( j ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}\\\\to \\\\psi \\_{n{\\\\bf {k}}}^{(j)}}  as well. This approach was presented first by Faleev et. al,[\\[6]](#cite_note-Faleev-6) and used a hermitized self\\-energy   \u03a3  h e r m  \\=  \u03a3 \\+  \u03a3  \u2020  2 {\\\\displaystyle \\\\Sigma ^{\\\\rm {herm}}\\={\\\\frac {\\\\Sigma \\+\\\\Sigma ^{\\\\dagger }}{2}}}  in the eigenvalue equation to determine both, quasi\\-particle energies   E  n  k {\\\\displaystyle E\\_{n{\\\\bf {k}}}}  and corresponding orbitals   \u03c8  n  k {\\\\displaystyle \\\\psi \\_{n{\\\\bf {k}}}}  . In contrast to the Faleev approach one may consider a generalized eigenvalue problem instead that is obtained consistently from the linearization of the self\\-energy   \u03a3 (  E  ( j \\+ 1 )  ) \u2248 \u03a3 (  E  ( j )  ) \\+ \u03be (  E  ( j )  ) (  E  ( j \\+ 1 )  \u2212  E  ( j )  ) {\\\\displaystyle \\\\Sigma (E^{(j\\+1\\)})\\\\approx \\\\Sigma (E^{(j)})\\+\\\\xi (E^{(j)})(E^{(j\\+1\\)}\\-E^{(j)})}  (where   \u03be (  E  ( j )  ) \\= \u2202 \u03a3 (  E  ( j )  )  /  \u2202  E  ( j ) {\\\\displaystyle \\\\xi (E^{(j)})\\=\\\\partial \\\\Sigma (E^{(j)})/\\\\partial E^{(j)}} ) and reads[\\[3]](#cite_note-shishkin:prl:07-3)  \\[  T \\+  V  e x t  \\+  V  h  \\+ \u03a3  (  E  n  k  ( j )  )  \u2212 \u03be  (  E  n  k  ( j )  )  E  n  k  ( j )  ]  \u23df  H  (  E  n  k  ( j )  )  \\|  \u03c8  n  k  ( j \\+ 1 )  \u27e9  \\=  E  n  k  ( j \\+ 1 )  \\[  1 \u2212 \u03be (  E  n  k  ( j )  )  ]  \u23df  S  (  E  n  k  ( j )  )  \\|  \u03c8  n  k  ( j \\+ 1 )  \u27e9 {\\\\displaystyle \\\\underbrace {\\\\left\\[T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma \\\\left(E\\_{n{\\\\bf {k}}}^{(j)}\\\\right)\\-\\\\xi \\\\left(E\\_{n{\\\\bf {k}}}^{(j)}\\\\right)E\\_{n{\\\\bf {k}}}^{(j)}\\\\right]} \\_{{\\\\bf {H}}(E\\_{n{\\\\bf {k}}}^{(j)})}\\\\left\\|\\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\right\\\\rangle \\=E\\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\underbrace {\\\\left\\[1\\-\\\\xi (E\\_{n{\\\\bf {k}}}^{(j)})\\\\right]} \\_{{\\\\bf {S}}(E\\_{n{\\\\bf {k}}}^{(j)})}\\\\left\\|\\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\right\\\\rangle } The resulting Hamiltonian   H {\\\\displaystyle {\\\\bf {H}}}  and overlap matrix   H {\\\\displaystyle {\\\\bf {H}}}  are non\\-hermitian in general, implying that the resulting orbitals   \\|  \u03c8  n  k  ( j \\+ 1 )  \u27e9 {\\\\displaystyle \\\\left\\|\\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\\\right\\\\rangle }  are not normalized to 1\\. Therefore, VASP determines the hermitian parts   H \\=  H  \\+  H  \u2020  2  , S \\=  S  \\+  S  \u2020  2 {\\\\displaystyle H\\={\\\\frac {{\\\\bf {H}}\\+{\\\\bf {H}}^{\\\\dagger }}{2}},S\\={\\\\frac {{\\\\bf {S}}\\+{\\\\bf {S}}^{\\\\dagger }}{2}}}  and diagonalizes following matrix instead  S  \u2212 1  /  2  H  S  \u2212 1  /  2  \\= U \u039b  U  \u2020 {\\\\displaystyle S^{\\-1/2}HS^{\\-1/2}\\=U\\\\Lambda U^{\\\\dagger }} The resulting diagonal matrix   \u039b {\\\\displaystyle \\\\Lambda }  contains the new quasi\\-particles, while the unitary matrix   U {\\\\displaystyle U}  determine the new orbitals   \u03c8  n  k  ( j \\+ 1 )  \\=  \u2211  m  U  n m  \u03c8  m  k  ( j \\+ 1 ) {\\\\displaystyle \\\\psi \\_{n{\\\\bf {k}}}^{(j\\+1\\)}\\=\\\\sum \\_{m}U\\_{nm}\\\\psi \\_{m{\\\\bf {k}}}^{(j\\+1\\)}}  .The method can be selected in VASP with ALGO\\=QPGW0\\. See here for more information. Low\\-scaling GW: The Space\\-time Formalism------------------------------------------ Available as of VASP.6 are low\\-scaling algorithms for ACFDT/RPA.[\\[7]](#cite_note-kaltak:prb:2014-7) This page describes the formalism of the corresponding low\\-scaling GW approach.[\\[8]](#cite_note-liu:prb:2016-8) A theoretical description of the ACFDT/RPA total energies is found here. A brief summary regarding GW theory is given below, while a practical guide can be found here.  Theory------ The GW implementations in VASP described in the papers of Shishkin *et al.*[\\[9]](#cite_note-shishkin:prb:2006-9)[\\[10]](#cite_note-shishkin:prb:2007-10) avoid storage of the Green's function   G {\\\\displaystyle G}  as well as Fourier transformations between time and frequency domain entirely. That is, all calculations are performed solely on the real frequency axis using Kramers\\-Kronig transformations for convolutions in the equation of   \u03c7 {\\\\displaystyle \\\\chi }  and  \u03a3 {\\\\displaystyle \\\\Sigma }  in reciprocal space and results in a relatively high computational cost that scales with   N  4 {\\\\displaystyle N^{4}}  (number of electrons). The scaling with system size can, however, be reduced to   N  3 {\\\\displaystyle N^{3}}  by performing a so\\-called Wick\\-rotation to imaginary time   t \u2192 i \u03c4 {\\\\displaystyle t\\\\to i\\\\tau } .[\\[11]](#cite_note-rojas:prl:1995-11) Following the  low scaling ACFDT/RPA algorithms the space\\-time implementation determines first, the non\\-interacting Green's function on the imaginary time axis in real space   G (  r  ,  r  \u2032  , i \u03c4 ) \\= \u2212  \u2211  n  k  \u03d5  n  k  ( 0 )  (  r  )  \u03d5  n  k  \u2217 ( 0 )  (  r  \u2032  )  e  \u2212 (  \u03f5  n  k  \u2212 \u03bc ) \u03c4  \\[  \u0398 ( \u03c4 ) ( 1 \u2212  f  n  k  ) \u2212 \u0398 ( \u2212 \u03c4 )  f  n  k  ] {\\\\displaystyle G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau )\\=\\-\\\\sum \\_{n{\\\\bf {k}}}\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}}')e^{\\-(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\mu )\\\\tau }\\\\left\\[\\\\Theta (\\\\tau )(1\\-f\\_{n{\\\\bf {k}}})\\-\\\\Theta (\\-\\\\tau )f\\_{n{\\\\bf {k}}}\\\\right]} Here   \u0398 {\\\\displaystyle \\\\Theta }  is the step function and   f  n  k {\\\\displaystyle f\\_{n{\\\\bf {k}}}}  the occupation number of the state   \u03d5  n  k  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}} . Because the Green's function is non\\-oscillatory on the imaginary time axis it can be represented on a coarse grid   \u03c4  m {\\\\displaystyle \\\\tau \\_{m}} , where the number of time points can be selected in VASP via the NOMEGA tag. Usually 12 to 16 points are sufficient for insulators and small band gap systems.[\\[12]](#cite_note-kaltak:2014-12) Subsequently, the irreducible polarizability is calculated from a contraction of two imaginary time Green's functions   \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212 G (  r  ,  r  \u2032  , i  \u03c4  m  ) G (  r  \u2032  ,  r  , \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})G({\\\\bf {r}}',{\\\\bf {r}},\\-i\\\\tau \\_{m})} Afterwards, the same compressed Fourier transformation as for the  low scaling ACFDT/RPA algorithms is employed to obtain the irreducible polarizability in reciprocal space on the imaginary frequency axis   \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) \u2192  \u03c7  G  G  \u2032  (  q  , i  \u03c9  n  ) {\\\\displaystyle \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\\\to \\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{n})} .[\\[12]](#cite_note-kaltak:2014-12)[\\[8]](#cite_note-liu:prb:2016-8) The next step is the computation of the screened potential  W  G  G  \u2032  (  q  , i  \u03c9  m  ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  (  q  , i  \u03c9  m  )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{m})\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{m})V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})}   followed by the inverse Fourier transform   W  G  G  \u2032  (  q  , i  \u03c9  n  ) \u2192 \u03c7 (  r  ,  r  \u2032  , i  \u03c4  m  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}},i\\\\omega \\_{n})\\\\to \\\\chi ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})}  and the calculation of the self\\-energy   \u03a3 (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212 G (  r  ,  r  \u2032  , i  \u03c4  m  ) W (  r  \u2032  ,  r  , i  \u03c4  m  ) {\\\\displaystyle \\\\Sigma ({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})W({\\\\bf {r}}',{\\\\bf {r}},i\\\\tau \\_{m})} From here, several routes are possible including all approximations mentioned above, that is the single\\-shot, EVG0 and QPEVG0 approximation. All approximations have one point in common.  In contrast to the real\\-frequency implementation, the low\\-scaling GW algorithms require an analytical continuation of the self\\-energy from the imaginary frequency axis to the real axis. In general, this is an ill\\-defined problem and usually prone to errors, since the self\\-energy is known on a finite set of points. VASP determines internally a Pad\u00e9 approximation of the self\\-energy   \u03a3 ( z ) {\\\\displaystyle \\\\Sigma (z)}  from the calculated set of NOMEGA points   \u03a3 ( i  \u03c9  n  ) {\\\\displaystyle \\\\Sigma (i\\\\omega \\_{n})}  and solves the non\\-linear eigenvalue problem   \\[  T \\+  V  e x t  \\+  V  h  \\+ \u03a3 ( z )  ]  \\|  \u03d5  n  k  \u27e9  \\= z  \\|  \u03d5  n  k  \u27e9 {\\\\displaystyle \\\\left\\[T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma (z)\\\\right]\\\\left\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\right\\\\rangle \\=z\\\\left\\|\\\\phi \\_{n{\\\\bf {k}}}\\\\right\\\\rangle } on the real frequency axis   z \\= \u03c9 {\\\\displaystyle z\\=\\\\omega }  . Because preceding Fourier transformations have been carried out with exponentially suppressed errors, the analytical continuation   \u03a3 ( z ) {\\\\displaystyle \\\\Sigma (z)}  of the self\\-energy can be determined with high accuracy. The analytical continuation typically yields energies that differ less than 20 meV from quasi\\-particle energies obtained from the real\\-frequency calculation.[\\[8]](#cite_note-liu:prb:2016-8) In addition, the space\\-time formulation allows to solve the full Dyson equation for   G (  r ,  r \u2032  , i \u03c4 ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau )}  with decent computational cost.[\\[13]](#cite_note-grumet:prb:2018-13) This approach is known as the self\\-consistent GW approach (scGW) and is available as of VASP6\\. Limitations of GW----------------- From a physical point of view, the scGW method yields mostly unsatisfactory results compared to experiment. Notably, the band gaps are significantly overestimated compared to experiment, and plasmonic satellites are entirely missing in the spectral function.[\\[14]](#cite_note-grumet-14) The fact that \"sloppier\" GW flavours, such as EVGW0 or even the single\\-shot approach yield more accurate results is due to fortuitous error cancelling and can be understood in terms of the band\\-gap   \u0394 {\\\\displaystyle \\\\Delta }  of a system. The DFT gap is typically smaller than the GW band gap and yields, therefore, a larger dielectric function   \u03f5 ( \u03c9 ) \\= 1 \u2212 \u03c7 ( \u03c9 ) V {\\\\displaystyle \\\\epsilon (\\\\omega )\\=1\\-\\\\chi (\\\\omega )V}  (the polarizability is inverse proportional to the band gap of the system). Although the band gap is corrected by GW, at the same time the screening of the Coulomb interaction is weakened. Forcing self\\-consistency only increases the effect and deteriorates the agreement with experimental band gaps.The rather disappointing results of the self\\-consistent GW approximation shows the general limitations of Hedin's equations in the absence of vertex corrections. It can be shown that inclusion of vertex corrections yields band gaps that are again in agreement with experiment.[\\[3]](#cite_note-shishkin:prl:07-3)"}
{"file_name": "ML_SCLC_CTIFOR.md", "content": "ML\\_SCLC\\_CTIFOR= \\[real]   Default: **ML\\_SCLC\\_CTIFOR** \\= 0\\.6nDescription: Sets fraction by which the error threshold for the maximum forces is lowered in the selection of local reference calculations.  --- ML\\_CTIFOR determines whether a first\\-principles calculation is performed when training an MLFF. Whenever a first\\-principles calculation is performed, additional functions are added to the sparse representation of the kernel (local\\-reference configurations). ML\\_SCLC\\_CTIFOR determines how many local\\-reference configurations are added to the sparse representation of the kernel.Specifically, the local environment of those atoms with an estimated error larger than ML\\_SCLC\\_CTIFOR \\* ML\\_CTIFOR areadded as candidates for the sparse representational of the kernel. Note that changing ML\\_SCLC\\_CTIFOR does not change the decision of whether a first\\-principles calculation is carried out or not, since this decision is entirely based on ML\\_CTIFOR.  The default value of 0\\.6 is often a reasonably good compromise. If the value is decreased, obviously more functions are used for the sparse representation of the kernel. This always improves the initial learning efficiency but might slow the force\\-field calculations. So ML\\_SCLC\\_CTIFOR compromises either learning efficiency or the speed of the evaluation of the MLFF.For polymers and liquids, we found that decreasing ML\\_SCLC\\_CTIFOR to values around 0\\.4 (or even smaller) can significantly improve learning efficiency."}
{"file_name": "BMIX.md", "content": "BMIX= \\[real]   Default: **BMIX** \\= 1\\.0nDescription: BMIX sets the cutoff wave vector for Kerker mixing scheme[\\[1]](#cite_note-kerker:prb:81-1) (IMIX\\=1 and/or INIMIX\\=1\\).  --- The mixed density is given by  \u03c1  m i x  ( G )  \\=  \u03c1  i n  ( G )  \\+ A  G  2  G  2  \\+  B  2  (  \u03c1  o u t  ( G )  \u2212  \u03c1  i n  ( G )  ) {\\\\displaystyle \\\\rho \\_{\\\\rm {mix}}\\\\left(G\\\\right)\\=\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right)\\+A{\\\\frac {G^{2}}{G^{2}\\+B^{2}}}{\\\\Bigl (}\\\\rho \\_{\\\\rm {out}}\\\\left(G\\\\right)\\-\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right){\\\\Bigr )}} with   A {\\\\displaystyle A} \\=AMIX and   B {\\\\displaystyle B} \\=BMIX In VASP the eigenvalue spectrum of the charge dielectric matrix is calculated and written to the OUTCAR file at each electronic step. This allows a rather easy optimization of the mixing parameters, if required. Search in the OUTCAR file for  ```eigenvalues of (default mixing * dielectric matrix)  ``` The parameters for the mixing are optimal if the mean eigenvalue \u0393mean\\=1, and if the width of the eigenvalue spectrum is minimal. For an initial linear mixing (BMIX\u22480\\) an optimal setting for AMIX can be found easily by setting AMIXoptimal\\=AMIXcurrent\\*\u0393mean. For the Kerker scheme (IMIX\\=1\\) either AMIX or BMIX can be optimized, but we recommend to change only BMIX and keep AMIX fixed (you must decrease BMIX if the mean eigenvalue is larger than one, and increase BMIX if the mean eigenvalue \u0393mean\\<1\\)."}
{"file_name": "GW_and_dielectric_matrix.md", "content": "For GW calculations the frequency dependent dielectric matrix   \u03f5 ( \u03c9 ) {\\\\displaystyle \\\\epsilon (\\\\omega )}  in the Random Phase Approximation (RPA) is determined via the polarizability   \u03c7 {\\\\displaystyle {\\\\bf {\\\\chi }}}  and the Coulomb potential   V {\\\\displaystyle V}  using   \u03f5 ( \u03c9 ) \\= 1 \u2212 V \u22c5 \u03c7 ( \u03c9 ) {\\\\displaystyle \\\\epsilon (\\\\omega )\\=1\\-V\\\\cdot \\\\chi (\\\\omega )}  . | **Mind:** low\\-scaling GW algorithms determine the dielectric matrix on the imaginary frequency axis and cannot be used to calculate       \u03f5     {\\\\displaystyle {\\\\bf {\\\\epsilon }}}  }} on the real frequency axis. || --- | The real\\-frequency dependent dielectric matrix can be calculated with the quartic\\-scaling GW implementation, in which usability is limited to relatively small unit cells containing a few dozen atoms at maximum. Here, two algorithms are available and can be selected via LSPECTRAL. The methods are discussed below.  If only the frequency\\-dependent dielectric matrix should be computed, ALGO\\=*CHI* can be used to skip the calculation of GW quasi\\-particle energies.  | **Mind:** All GW calculations require a preceding DFT calculation with many unoccupied states. || --- | Spectral Method--------------- The spectral method is selected by LSPECTRAL\\=*.TRUE.*, which is the default value. Here, VASP computes the polarizability in two steps.  First, the spectral density of the polarizability is calculated using Fermi's golden rule[\\[1]](#cite_note-gajdos:prb:2006-1)[\\[2]](#cite_note-shishkin:prb:2006-2)  S  G G  \u2032  (  q  , \u03c9 ) \\=  \u2211  n m  \u2211  k q  \u03b4 (  \u03f5  n  k  \u2212  \u03f5  m  k \u2212 q  \u2212 \u03c9 )  \u27e8  n  k  \\|  G  \\|  m  k \u2212 q  \u27e9  \u27e8  m  k \u2212 q  \\|  G  \u2032  \\|  n  k  \u27e9 {\\\\displaystyle S\\_{{\\\\bf {GG}}'}({\\\\bf {q}},\\\\omega )\\=\\\\sum \\_{nm}\\\\sum \\_{\\\\bf {kq}}\\\\delta (\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{m{\\\\bf {k\\-q}}}\\-\\\\omega )\\\\left\\\\langle {n{\\\\bf {k}}}\\\\right\\|{\\\\bf {G}}\\\\left\\|{m{\\\\bf {k\\-q}}}\\\\right\\\\rangle \\\\left\\\\langle {m{\\\\bf {k\\-q}}}\\\\right\\|{\\\\bf {G}}'\\\\left\\|{n{\\\\bf {k}}}\\\\right\\\\rangle } The delta function is approximated by a triangular function centered at the transition energy. The real and imaginary part of the polarizability is calculated in a second step using a Hilbert transformation[\\[2]](#cite_note-shishkin:prb:2006-2)  \u03c7  G G  \u2032  (  q  , \u03c9 ) \\= \u222b  d  \u03c9 \u2032  S  G G  \u2032  (  q  ,  \u03c9 \u2032  )  (  1  \u03c9 \u2212  \u03c9 \u2032  \u2212 i \u03b7  \u2212  1  \u03c9 \\+  \u03c9 \u2032  \\+ i \u03b7  ) {\\\\displaystyle \\\\chi \\_{{\\\\bf {GG}}'}({\\\\bf {q}},\\\\omega )\\=\\\\int \\\\mathrm {d} \\\\omega 'S\\_{{\\\\bf {GG}}'}({\\\\bf {q}},\\\\omega ')\\\\left({\\\\frac {1}{\\\\omega \\-\\\\omega '\\-i\\\\eta }}\\-{\\\\frac {1}{\\\\omega \\+\\\\omega '\\+i\\\\eta }}\\\\right)} Here \u03b7 is an infinitesimal that can be set manually by CSHIFT.  This integration is performed semi\\-analytically by restricting the integration variable \u03c9' to a frequency grid that is determined by NOMEGA, OMEGATL, OMEGAMIN and OMEGAMAX. Together with the approximation of the delta function in the spectral density (see above), the integration can be carried out analytically and one arrives essentially at a matrix\\-vector product  \u03c7  G G  \u2032  (  q  ,  \u03c9  j  ) \\=  \u2211  k \\= 1  N O M E G A  t  j k  S  G G  \u2032  (  q  ,  \u03c9  k  \u2032  ) {\\\\displaystyle \\\\chi \\_{{\\\\bf {GG}}'}({\\\\bf {q}},\\\\omega \\_{j})\\=\\\\sum \\_{k\\=1}^{\\\\rm {NOMEGA}}t\\_{jk}S\\_{{\\\\bf {GG}}'}({\\\\bf {q}},\\\\omega '\\_{k})} Only the integration weights   t  j k {\\\\displaystyle t\\_{jk}}  depend essentially on \u03b7, i.e. CSHIFT. From the explicit form of these weights one can deduce that contributions to the dielectric function at low frequencies depend on the smallest grid spacing   \u0394  min  \\=  \u03c9  1  \u2032  \u2212  \u03c9  2  \u2032 {\\\\displaystyle \\\\Delta \\_{\\\\min }\\=\\\\omega '\\_{1}\\-\\\\omega '\\_{2}} . These contributions are suppressed only if   \u03b7 \\>  \u0394  min {\\\\displaystyle \\\\eta \\>\\\\Delta \\_{\\\\min }} , but yield spurious contributions at low frequencies in the dielectric function otherwise. Furthermore, the frequency grid   \u03c9  j {\\\\displaystyle \\\\omega \\_{j}}  of the complex polarizability is not restricted to the same grid as the integration variable. That is   \u03c9  k  \u2260  \u03c9  j  \u2032 {\\\\displaystyle \\\\omega \\_{k}\\\eq \\\\omega '\\_{j}}  in general. In fact, the resolution of the frequency grid of the polarizability can be much finer and is set with NEDOS.  | **Tip:** To reduce spurious contributions in the imaginary part of the dielectric function at small frequencies one can reduce CSHIFT and increase NOMEGA. || --- | However, reducing CSHIFT in the spectral method introduces additional spikes in the dielectric function. Thus for visualization, one often performs a Lorentzian filter on the raw data, even though such a filter typically shifts peaks of the original dielectric function. There is no particular reason why the Lorentzian filter should be used, since smoothing data is essentially cosmetics; Gaussian smearing is also perfectly acceptable. A minimal INCAR for such a calculation looks as follows:  ```ALGO = CHI   # skip quasi-particle energies NOMEGA = 100 # number of frequency points  ``` Next, an alternative approach, which already includes some sort of smoothing of the dielectric function, is presented. Direct calculation of the dielectric function--------------------------------------------- The polarizability can be calculated directly without using a Hilbert transformation via the formula of Adler and Wiser.[\\[3]](#cite_note-adler:1962-3)[\\[4]](#cite_note-wiser:1963-4)  \u03c7  G G  \u2032  (  q  , \u03c9 ) \\=  \u2211  n m  \u2211  k q  (  \u27e8  n  k  \\|  G  \\|  m  k \u2212 q  \u27e9  \u27e8  m  k \u2212 q  \\|  G  \u2032  \\|  n  k  \u27e9  \u03c9 \u2212 (  \u03f5  n  k  \u2212  \u03f5  m  k \u2212 q  ) \u2212 i \u03b7  \u2212  \u27e8  n  k  \\|  G  \\|  m  k \u2212 q  \u27e9  \u27e8  m  k \u2212 q  \\|  G  \u2032  \\|  n  k  \u27e9  \u03c9 \\+  \u03f5  n  k  \u2212  \u03f5  m  k \u2212 q  \\+ i \u03b7  ) {\\\\displaystyle \\\\chi \\_{{\\\\bf {GG}}'}({\\\\bf {q}},\\\\omega )\\=\\\\sum \\_{nm}\\\\sum \\_{\\\\bf {kq}}\\\\left({\\\\frac {\\\\left\\\\langle {n{\\\\bf {k}}}\\\\right\\|{\\\\bf {G}}\\\\left\\|{m{\\\\bf {k\\-q}}}\\\\right\\\\rangle \\\\left\\\\langle {m{\\\\bf {k\\-q}}}\\\\right\\|{\\\\bf {G}}'\\\\left\\|{n{\\\\bf {k}}}\\\\right\\\\rangle }{\\\\omega \\-(\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{m{\\\\bf {k\\-q}}})\\-i\\\\eta }}\\-{\\\\frac {\\\\left\\\\langle {n{\\\\bf {k}}}\\\\right\\|{\\\\bf {G}}\\\\left\\|{m{\\\\bf {k\\-q}}}\\\\right\\\\rangle \\\\left\\\\langle {m{\\\\bf {k\\-q}}}\\\\right\\|{\\\\bf {G}}'\\\\left\\|{n{\\\\bf {k}}}\\\\right\\\\rangle }{\\\\omega \\+\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{m{\\\\bf {k\\-q}}}\\+i\\\\eta }}\\\\right)} Here CSHIFT influences the peak width of the dielectric function directly.  This method is selected with LSPECTRAL\\=*.FALSE.* and yields smoother dielectric functions than the spectral method described above. Also, the direct calculation requires less memory.  | **Warning:** The direct calculation of the polarizability is much slower than the spectral method. || --- | A minimal INCAR for such a calculation looks as follows:  ```ALGO = CHI          # skip quasi-particle energies LSPECTRAL = .FALSE. # direct calculation of chiNOMEGA = 100        # number of frequency points  ``` Local field effects------------------- Both methods support the inclusion of local field effects in the dielectric function on the RPA level. These effects can be included with with LRPA\\=*.TRUE.*.  | **Mind:** The GW routine is the only routine capable to include local field effects for the frequency\\-dependent dielectric function. || --- | Output------ The imaginary and real part of the frequency\\-dependent dielectric functionis determined in all GW calculations. It can be conveniently greppedfrom the OUTCAR file using the command (note the two spaces between the words)  ```grep \" dielectric  constant\" OUTCAR  ``` The first value is the frequency (in eV) and the other two arethe real and imaginary parts of the trace of the dielectric matrix. Furthermore, VASP writes the following data into the OUTCAR file. * The head of the microscopic dielectric function (without local field effects):   \u03f5  m i c  ( \u03c9 ) \\=  lim  q  \u2192 0  \u03f5  00  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\rm {mic}}(\\\\omega )\\=\\\\lim \\_{{\\\\bf {q}}\\\\to 0}\\\\epsilon \\_{\\\\bf {00}}({\\\\bf {q}},\\\\omega )} * Inverse macroscopic dielectric tensor:  1  q  ^  \u22c5  \u03f5  \u221e  ( \u03c9 ) \u22c5  q  ^  \\=  lim  q  \u2192 0  \\[  \u03f5  \u2212 1  ]  00  (  q  , \u03c9 ) {\\\\displaystyle {\\\\frac {1}{{\\\\hat {\\\\bf {q}}}\\\\cdot \\\\epsilon \\_{\\\\infty }(\\\\omega )\\\\cdot {\\\\hat {\\\\bf {q}}}}}\\=\\\\lim \\_{{\\\\bf {q}}\\\\to 0}\\\\left\\[\\\\epsilon ^{\\-1}\\\\right]\\_{\\\\bf {00}}({\\\\bf {q}},\\\\omega )} The latter potentially includes local field effects depending on the value of LRPA.A detailed explanation of these quantities is found in the  lecture notes on dielectric properties. | **Warning:** OUTCAR contains only a subset of the complete dielectric function ( the one restricted to NOMEGA points). || --- | The complete frequency dependence (NEDOS frequency points) is written to vasprun.xml\") and has following format:  ``` <dielectricfunction comment=\"HEAD OF MICROSCOPIC DIELECTRIC TENSOR (INDEPENDENT PARTICLE)\">  <imag>   <array>    <dimension dim=\"1\">gridpoints</dimension>    <field>energy</field>    <field>xx</field>    <field>yy</field>    <field>zz</field>    <field>xy</field>    <field>yz</field>    <field>zx</field>    <set>      <r>     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000 </r>     <r>     0.4627     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000 </r>     <r>     0.9250     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000 </r>     <r>     1.3866     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000 </r>     <r>     1.8472     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000 </r>     <r>     2.3065     0.0000     0.0000     0.0000     0.0000     0.0000     0.0000 </r>        ...   ^          ^          ^          ^          ^          ^          ^                 |          |          |          |          |          |          |            energy     eps_xx     eps_yy     esp_zz     esp_xy     eps_yz     eps_xz                      ``` Comparison with k\\-p and density perturbation theory---------------------------------------------------- The calculated microscopic frequency\\-dependent dielectric function without local field effects is the same function obtained using LOPTICS\\=*.TRUE.*, as well as the one obtained from density functional perturbation routines (LEPSILON\\=*.TRUE.*).In fact, it is guaranteed that the results are identical to those determinedusing a summation over conduction band states (LOPTICS).Differences for LSPECTRAL\\=*.FALSE.* must be negligible,and can be solely related to a different complex shift CSHIFT(defaults for CSHIFT are different in both routines).Setting CSHIFT manually in the INCAR file will remedy this issue.If differences prevail, it might be required to increase NEDOS.For LSPECTRAL\\=*.TRUE.*differences can arise, because  * The GW routine uses fewer frequency points and different frequency grids than the optics routine or * again from a different complex shift. Increasing NOMEGA should remove all discrepancies. Technical tips-------------- If full GW calculations are not required, it is possible to greatly acceleratethe calculations, by calculating the response functions onlyat the   \u0393 {\\\\displaystyle \\\\Gamma } \\-point. This can be achieved by setting the following values in the INCAR file:  ``` NKREDX = number of k-points in direction of the first lattice vector NKREDY = number of k-points in direction of the second lattice vector NKREDZ = number of k-points in direction of the third lattice vector  ``` The calculation of the QP shifts can be bypassed by settingALGO\\=*CHI*.Furthermore, if only the static response function is requiredthe number of frequency points should be set to NOMEGA\\=1 andLSPECTRAL\\=*.FALSE.*  --- 1. \u2191 M. Gajdo\u0161, K. Hummer, G. Kresse, J. Furthm\u00fcller, and F. Bechstedt, Phys. Rev. B **73**, 045112 (2006\\).2. \u2191 a b M. Shishkin and G. Kresse, Phys. Rev. B **74**, 035101 (2006\\).3. \u2191 S. L. Adler, Phys. Rev. **126**, 413 (1962\\)4. \u2191 N. Wiser, Phys. Rev. **129**, 62 (1963\\)"}
{"file_name": "IWAVPR.md", "content": "IWAVPR= 0 \\| 1 \\| 2 \\| 3 \\| 10 \\| 11 \\| 12 \\| 13n| Default: **IWAVPR** | \\= 2 | if IBRION\\=0 (MD) and 1,2 (relaxation) || --- | --- | --- ||  | \\= 0 | else (static calculation) | Description: IWAVPR determines how orbitals and/or charge densitiesare extrapolated from one ionic configuration to the next configuration.  --- Usually the file TMPCAR is used to store old orbitals, whichare required for the prediction.If IWAVPR is larger than 10, the prediction isdone without an external file TMPCAR (i.e. all required arraysare stored in the main memory, this option works from version VASP.4\\.1\\).If IWAVPR is set to 10, the reader will set it to thefollowing default values: * IWAVPR\\=12 if IBRION\\=0 (MD)* IWAVPR\\=11 if IBRION\\=1,2 (relaxation) The following options are available for IWAVPR: * IWAVPR\\=0 no extrapolation, usually less preferable if you want to do an ab initio MD or a relaxation of the ions into the instantaneous groundstate.* IWAVPR\\=1\\|11 Simple extrapolation of the charge density using atomic charge densities is done (eq. (9\\.8\\) in thesis G. Kresse). This switch is convenient for all kind of geometry optimizations (ionic relaxation and volume/cell shape with conjugate gradient or Quasi\\-Newton methods, i.e. IBRION\\=1,2\\)* IWAVPR\\=2\\|12 A second order extrapolation for the orbitals and the charge density is done (eq. (9\\.9\\) in thesis G. Kresse). This results in superior performance for ab\\-initio MD\\-runs.* IWAVPR\\=3\\|13 In this case a second order extrapolation for the orbitals, and a simple extrapolation of the charge density using atomic charge densities is done. This is a mixture between IWAVPR\\=1 and 2, however, it is usually worse than IWAVPR\\=2\\. Mind: We don't encourage this setting."}
{"file_name": "Cd_Si.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Volume relaxtion and the calculation of the DOS and bandstructure within cubic diamond (cd) Si. Input----- ### POSCAR  ```cubic diamond 5.5 0.0    0.5     0.5 0.5    0.0     0.5 0.5    0.5     0.0 2Direct -0.125 -0.125 -0.125  0.125  0.125  0.125  ``` * Cubic diamond Si starting lattice constant of 5\\.5   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  .* Fcc cell.* 2 atoms in cell. ### INCAR  ```System\") = diamond SiISTART = 0\u00a0; ICHARG=2ENCUT  =    240ISMEAR = 0; SIGMA = 0.1  ``` ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` Calculation----------- The calculation of the optimized volume. DOS and bandstructure is similar as in the examples fcc\\_Si, fcc\\_Si\\_DOS and fcc\\_Si\\_bandstructure, respectively. ### Volume relaxation * The bash\\-script loop.sh runs Si in the cubic diamond (cd) structure at several different lattice constants (5\\.1\\-5\\.7 \u00c5) and collects free energy versus lattice constant into the file SUMMARY.dia:  ```#! /bin/bashBIN=/path/to/your/vasp/executablerm WAVECAR SUMMARY.diafor i in  5.1 5.2 5.3 5.4 5.5 5.6 5.7\u00a0; docat >POSCAR <<!cubic diamond $i 0.0    0.5     0.5 0.5    0.0     0.5 0.5    0.5     0.0 2Direct -0.125 -0.125 -0.125  0.125  0.125  0.125 !echo \"a= $i\"\u00a0; mpirun -n 2 $BINE=`awk '/F=/ {print $0}' OSZICAR`\u00a0; echo $i $E  >>SUMMARY.diadonecat SUMMARY.dia  ``` * Example output of SUMMARY.dia:  ```5.2 1 F= -.10528151E+02 E0= -.10528137E+02 d E =-.274709E-045.3 1 F= -.10713281E+02 E0= -.10713280E+02 d E =-.218410E-055.4 1 F= -.10806685E+02 E0= -.10806685E+02 d E =-.114401E-065.5 1 F= -.10823039E+02 E0= -.10823039E+02 d E =-.429842E-085.6 1 F= -.10775102E+02 E0= -.10775102E+02 d E =-.204668E-095.7 1 F= -.10673578E+02 E0= -.10673578E+02 d E =-.112715E-105.8 1 F= -.10528393E+02 E0= -.10528393E+02 d E =-.552513E-11  ``` * To make a quick plot of SUMMARY.dia try:  ```gnuplotgnuplot> plot \"SUMMARY.dia\" using ($1):($4) w lp  ``` * Extracted lattice parameter should be at 5\\.465   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  . ### DOS * Enter (approximate) volume of 5\\.5   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  into the POSCAR file. * Change the INCAR according to DOS calculation (or use INCAR.dos):  ```System = diamond SiISTART = 0\u00a0; ICHARG=2ENCUT  =    240ISMEAR = -5LORBIT = 11  ``` * Use p4vasp or run the script *dos.sh* to calculate the DOS. * The example DOS should look like this: [](File_Fig_cdSi_1.html) ### Bandstructure * Enter (approximate) volume of 5\\.5   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  into the POSCAR file. * Change the INCAR according to bandstructure calculation (or use INCAR.band):  ```System = diamond SiISTART = 0\u00a0; ICHARG=11ENCUT  =    240ISMEAR = 0; SIGMA = 0.1;LORBIT = 11  ``` * Use p4vasp or run the script *band.sh* to calculate the bandstructure. * The example bandstructure should look like this: [](File_Fig_cdSi_2.html) * For \"fat\" bands (or orbital character of bands) use p4vasp: [](File_Fig_cdSi3.html) **Mind**: You will have to set the correct path to your VASP executable (i.e., BIN), and invoke VASP with the correct command (e.g., in the above: mpirun \\-np 2). Download--------  diamondSi.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorialsBack to the main page."}
{"file_name": "Coulomb_singularity.md", "content": "The bare Coulomb operator  V ( \\|  r  \u2212  r  \u2032  \\| ) \\=  1  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle V(\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert )\\={\\\\frac {1}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}} in the unscreened HF exchange has a representation in the reciprocal space that is given by  V ( q ) \\=  4 \u03c0  q  2 {\\\\displaystyle V(q)\\={\\\\frac {4\\\\pi }{q^{2}}}} It has an (integrable) singularity at   q \\= \\|  k  \u2032  \u2212  k  \\+  G  \\| \\= 0 {\\\\displaystyle q\\=\\\\vert \\\\mathbf {k} '\\-\\\\mathbf {k} \\+\\\\mathbf {G} \\\\vert \\=0}  that leads to a very slow convergence of the results with respect to the cell size or number of **k** points. In order to alleviate this issue different methods have been proposed: the auxiliary function [\\[1]](#cite_note-gygi:prb:86-1), probe\\-charge Ewald [\\[2]](#cite_note-massidda:prb:93-2) (HFALPHA), and Coulomb truncation[\\[3]](#cite_note-spenceralavi:prb:08-3) methods (selected with HFRCUT). These mostly involve modifying the Coulomb Kernel in a way that yields the same result as the unmodified kernel in the limit of large supercell sizes.These methods can also be applied to the Thomas\\-Fermi and error function screened Coulomb operators given by  V ( \\|  r  \u2212  r  \u2032  \\| ) \\=  e  \u2212 \u03bb  \\|  r  \u2212  r  \u2032  \\|  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle V(\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert )\\={\\\\frac {e^{\\-\\\\lambda \\\\left\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\right\\\\vert }}{\\\\left\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\right\\\\vert }}}  and  V ( \\|  r  \u2212  r  \u2032  \\| ) \\= erfc  (  \u2212 \u03bb  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle V(\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert )\\={\\\\frac {{\\\\text{erfc}}\\\\left({\\-\\\\lambda \\\\left\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\right\\\\vert }\\\\right)}{\\\\left\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\right\\\\vert }}} respectively, whose representations in the reciprocal space are given by  V ( q ) \\=  4 \u03c0  q  2  \\+  \u03bb  2 {\\\\displaystyle V(q)\\={\\\\frac {4\\\\pi }{q^{2}\\+\\\\lambda ^{2}}}}  and  V ( q ) \\=  4 \u03c0  q  2  (  1 \u2212  e  \u2212  q  2  /  (  4  \u03bb  2  )  ) {\\\\displaystyle V(q)\\={\\\\frac {4\\\\pi }{q^{2}}}\\\\left(1\\-e^{\\-q^{2}/\\\\left(4\\\\lambda ^{2}\\\\right)}\\\\right)} respectively.  ### Auxiliary function In this approach an auxiliary periodic function   F ( q ) {\\\\displaystyle F(q)}  with the same   1  /  q  2 {\\\\displaystyle 1/q^{2}}  divergence as the Coulomb potential in reciprocal space is subtracted in the **k** points used to integrate the Hartree\\-Fock energy, thus regularizing the integral[\\[1]](#cite_note-gygi:prb:86-1). This function is chosen such that it has a closed analytical expression for its integral[\\[1]](#cite_note-gygi:prb:86-1) or the integral is evaluated numerically[\\[4]](#cite_note-carrier:prb:2007-4). This approach is currently not implemented in VASP, instead, the probe\\-charge Ewald method is used. ### Probe\\-charge Ewald A similar approach to the auxiliary function method described above is the probe\\-charge Ewald method [\\[2]](#cite_note-massidda:prb:93-2). In this case, the auxiliary function   F ( q ) {\\\\displaystyle F(q)}  is chosen to have the form of the Coulomb kernel times a Gaussian function   e  \u2212 \u03b1  q  2 {\\\\displaystyle e^{\\-\\\\alpha q^{2}}}  with a width   \u03b1 {\\\\displaystyle \\\\alpha }  (HFALPHA) comparable to the Brillouin zone diameter.This function is used to regularize the Coulomb integral that is evaluated in the regular **k** point grid with the divergent part being evaluated by analytical integration of the Coulomb kernel (see eq. 29 in ref. [\\[2]](#cite_note-massidda:prb:93-2)).The value of the integral of the bare Coulomb potential is (see eq. 31 in ref. [\\[2]](#cite_note-massidda:prb:93-2))  1  2  \u03c0  2  \u222b  4 \u03c0  \\|  q  \\|  2  e  \u2212 \u03b1  \\|  q  \\|  2  d  q  \\=  2 \u03c0  \u222b  1  q  2  e  \u2212 \u03b1  q  2  q  2  d q \\=  2 \u03c0  \u222b  e  \u2212 \u03b1  q  2  d q \\=  1  \u03c0 \u03b1 {\\\\displaystyle {\\\\begin{aligned}{\\\\frac {1}{2\\\\pi ^{2}}}\\\\int {\\\\frac {4\\\\pi }{\\\\mathbf {\\|q\\|} ^{2}}}e^{\\-\\\\alpha \\\\mathbf {\\|q\\|} ^{2}}d\\\\mathbf {q} \\={\\\\frac {2}{\\\\pi }}\\\\int {\\\\frac {1}{q^{2}}}e^{\\-\\\\alpha q^{2}}q^{2}dq\\={\\\\frac {2}{\\\\pi }}\\\\int e^{\\-\\\\alpha q^{2}}dq\\={\\\\frac {1}{\\\\sqrt {\\\\pi \\\\alpha }}}\\\\end{aligned}}} for the Thomas\\-Fermi and error function screened Coulomb kernels we have  1  2  \u03c0  2  \u222b  4 \u03c0  \\|  q  \\|  2  \\+  \u03bb  2  e  \u2212 \u03b1  \\|  q  \\|  2  d  q  \\=  2 \u03c0  \u222b  q  2  q  2  \\+  \u03bb  2  e  \u2212 \u03b1  q  2  q  2  d q \\= \u2212 \u03bb  e  \u03b1  \u03bb  2 erfc  (  \u03bb  \u03b1  ) \\+  1  \u03c0 \u03b1 {\\\\displaystyle {\\\\begin{aligned}{\\\\frac {1}{2\\\\pi ^{2}}}\\\\int {\\\\frac {4\\\\pi }{\\\\mathbf {\\|q\\|} ^{2}\\+\\\\lambda ^{2}}}e^{\\-\\\\alpha \\\\mathbf {\\|q\\|} ^{2}}d\\\\mathbf {q} \\={\\\\frac {2}{\\\\pi }}\\\\int {\\\\frac {q^{2}}{q^{2}\\+\\\\lambda ^{2}}}e^{\\-\\\\alpha q^{2}}q^{2}dq\\=\\-\\\\lambda e^{\\\\alpha \\\\lambda ^{2}}{\\\\text{erfc}}({\\\\lambda {\\\\sqrt {\\\\alpha }}})\\+{\\\\frac {1}{\\\\sqrt {\\\\pi \\\\alpha }}}\\\\end{aligned}}}  and  1  2  \u03c0  2  \u222b  4 \u03c0  q  2  (  1 \u2212  e  \u2212  \\|  q  \\|  2  /  ( 4  \u03bb  2  )  )  e  \u2212 \u03b1  \\|  q  \\|  2  d  q  \\=  2 \u03c0  \u222b  1  q  2  (  1 \u2212  e  \u2212  q  2  /  ( 4  \u03bb  2  )  )  e  \u2212 \u03b1  q  2  q  2  d q \\=  1  \u03c0 \u03b1  \u2212  1  \u03c0  (  \u03b1 \\+  1  4  \u03bb  2  ) {\\\\displaystyle {\\\\begin{aligned}{\\\\frac {1}{2\\\\pi ^{2}}}\\\\int {\\\\frac {4\\\\pi }{\\\\mathbf {q} ^{2}}}\\\\left(1\\-e^{\\-\\\\mathbf {\\|q\\|} ^{2}/(4\\\\lambda ^{2})}\\\\right)e^{\\-\\\\alpha \\\\mathbf {\\|q\\|} ^{2}}d\\\\mathbf {q} \\={\\\\frac {2}{\\\\pi }}\\\\int {\\\\frac {1}{q^{2}}}\\\\left(1\\-e^{\\-q^{2}/(4\\\\lambda ^{2})}\\\\right)e^{\\-\\\\alpha q^{2}}q^{2}dq\\={\\\\frac {1}{\\\\sqrt {\\\\pi \\\\alpha }}}\\-{\\\\frac {1}{\\\\sqrt {\\\\pi \\\\left(\\\\alpha \\+{\\\\frac {1}{4\\\\lambda ^{2}}}\\\\right)}}}\\\\end{aligned}}} respectively. ### Spherical truncation In this method[\\[3]](#cite_note-spenceralavi:prb:08-3) the bare Coulomb operator   V ( \\|  r  \u2212  r  \u2032  \\| ) {\\\\displaystyle V(\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert )}  is spherically truncated by multiplying it by the step function   \u03b8 (  R  c  \u2212  \\|  r  \u2212  r  \u2032  \\|  ) {\\\\displaystyle \\\\theta (R\\_{\\\\text{c}}\\-\\\\left\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\right\\\\vert )} , and in the reciprocal this leads to  V ( q ) \\=  4 \u03c0  q  2  (  1 \u2212 cos \u2061 ( q  R  c  )  ) {\\\\displaystyle V(q)\\={\\\\frac {4\\\\pi }{q^{2}}}\\\\left(1\\-\\\\cos(qR\\_{\\\\text{c}})\\\\right)} whose value at   q \\= 0 {\\\\displaystyle q\\=0}  is finite and is given by   V ( q \\= 0 ) \\= 2 \u03c0  R  c  2 {\\\\displaystyle V(q\\=0\\)\\=2\\\\pi R\\_{\\\\text{c}}^{2}} , where the truncation radius   R  c {\\\\displaystyle R\\_{\\\\text{c}}}  (HFRCUT) is by default chosen as   R  c  \\=  (  3  /  (  4 \u03c0  )  N  k  \u03a9  )  1  /  3 {\\\\displaystyle R\\_{\\\\text{c}}\\=\\\\left(3/\\\\left(4\\\\pi \\\\right)N\\_{\\\\mathbf {k} }\\\\Omega \\\\right)^{1/3}}  with   N  k {\\\\displaystyle N\\_{\\\\mathbf {k} }}  being the number of   k {\\\\displaystyle k} \\-points in the full Brillouin zone. The screened potentials have no singularity at   q \\= 0 {\\\\displaystyle q\\=0} . Nevertheless, it is still beneficial for accelerating the convergence with respect to the number of **k** points to multiply these screened operators by   \u03b8 (  R  c  \u2212  \\|  r  \u2212  r  \u2032  \\|  ) {\\\\displaystyle \\\\theta (R\\_{\\\\text{c}}\\-\\\\left\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\right\\\\vert )} , which in the reciprocal space gives  V ( q ) \\=  4 \u03c0  q  2  \\+  \u03bb  2  (  1 \u2212  e  \u2212 \u03bb  R  c  (  \u03bb q  sin \u2061  (  q  R  c  )  \\+ cos \u2061  (  q  R  c  )  )  ) {\\\\displaystyle V(q)\\={\\\\frac {4\\\\pi }{q^{2}\\+\\\\lambda ^{2}}}\\\\left(1\\-e^{\\-\\\\lambda R\\_{\\\\text{c}}}\\\\left({\\\\frac {\\\\lambda }{q}}\\\\sin \\\\left(qR\\_{\\\\text{c}}\\\\right)\\+\\\\cos \\\\left(qR\\_{\\\\text{c}}\\\\right)\\\\right)\\\\right)}  and  V ( q ) \\=  4 \u03c0  q  2  (  1 \u2212 cos \u2061 ( q  R  c  ) erfc  (  \u03bb  R  c  )  \u2212  e  \u2212  q  2  /  (  4  \u03bb  2  )  \u211c  (  erf  (  \u03bb  R  c  \\+  i  q  2 \u03bb  )  )  ) {\\\\displaystyle V(q)\\={\\\\frac {4\\\\pi }{q^{2}}}\\\\left(1\\-\\\\cos(qR\\_{\\\\text{c}}){\\\\text{erfc}}\\\\left(\\\\lambda R\\_{\\\\text{c}}\\\\right)\\-e^{\\-q^{2}/\\\\left(4\\\\lambda ^{2}\\\\right)}\\\\Re \\\\left({{\\\\text{erf}}\\\\left(\\\\lambda R\\_{\\\\text{c}}\\+{\\\\text{i}}{\\\\frac {q}{2\\\\lambda }}\\\\right)}\\\\right)\\\\right)} respectively, with the following values at   q \\= 0 {\\\\displaystyle q\\=0}  :  V ( q \\= 0 ) \\=  4 \u03c0  \u03bb  2  (  1 \u2212  e  \u2212 \u03bb  R  c  (  \u03bb  R  c  \\+ 1  )  ) {\\\\displaystyle V(q\\=0\\)\\={\\\\frac {4\\\\pi }{\\\\lambda ^{2}}}\\\\left(1\\-e^{\\-\\\\lambda R\\_{\\\\text{c}}}\\\\left(\\\\lambda R\\_{\\\\text{c}}\\+1\\\\right)\\\\right)}  and  V ( q \\= 0 ) \\= 2 \u03c0  (  R  c  2 erfc  ( \u03bb  R  c  ) \u2212  R  c  e  \u2212  \u03bb  2  R  c  2  \u03c0  \u03bb  \\+  erf  ( \u03bb  R  c  )  2  \u03bb  2  ) {\\\\displaystyle V(q\\=0\\)\\=2\\\\pi \\\\left(R\\_{\\\\text{c}}^{2}{\\\\text{erfc}}(\\\\lambda R\\_{\\\\text{c}})\\-{\\\\frac {R\\_{\\\\text{c}}e^{\\-\\\\lambda ^{2}R\\_{\\\\text{c}}^{2}}}{{\\\\sqrt {\\\\pi }}\\\\lambda }}\\+{\\\\frac {{\\\\text{erf}}(\\\\lambda R\\_{\\\\text{c}})}{2\\\\lambda ^{2}}}\\\\right)} Note that the spherical truncation method described above works very well in the case of 3D systems. However, it is not recommended for systems with a lower dimensionality[\\[5]](#cite_note-sundararamanarias:prb:13-5). For such systems, the approach proposed in ref. [\\[5]](#cite_note-sundararamanarias:prb:13-5) (not implemented in VASP) is more adapted since the truncation is done according to the Wigner\\-Seitz cell and therefore more general."}
{"file_name": "NKREDY.md", "content": "NKREDY= \\[integer]   Default: **NKREDY** \\= 1nDescription: NKREDY specifies a reduction factor for the **q**\\-point grid representation of the exact exchange potential along reciprocal space direction **b**2.  --- One may restrict the sum over **q** in the Fock exchange potential (or one of its short range counterparts) to a subset, {**q****k**}, of the full (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-point set, {**k**}, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell,and *C*i is the integer grid reduction factor along reciprocal lattice direction**b**i. This leads to a reduction in the computational workload by a factor:  1  C  1  C  2  C  3 {\\\\displaystyle {\\\\frac {1}{C\\_{1}C\\_{2}C\\_{3}}}} In case one sets NKRED, the grid reduction factors will be uniformly set to *C*1\\=*C*2\\=*C*3\\=NKRED. If one wants to specify separate grid reduction factors for *C*1, *C*2, and *C*3 one should use *C*1\\=NKREDX, *C*2\\=NKREDY, and *C*3\\=NKREDZ, respectively.   | **Warning:** there are circumstances under which **NKRED** and **NKREDX**,**Y**,**Z** should not be used! || --- |"}
{"file_name": "SHAKETOL.md", "content": "SHAKETOL= \\[Real]   Default: **SHAKETOL** \\=   10  \u2212 5 {\\\\displaystyle 10^{\\-5}}   Description: SHAKETOL specifies the tolerance for the SHAKE algorithm (in case VASP was compiled with \\-Dtbdyn).  --- Constrained molecular dynamics (MDALGO\\=1 \\| 2\\) are performed using a SHAKE algorithm.[\\[1]](#cite_note-Ryckaert77-1) SHAKETOL specifies the tolerance for the SHAKE algorithm.If the error for all geometric constraints does not decrease below this predefined tolerance within the allowed number of iterations (SHAKEMAXITER), VASP terminates with an error message."}
{"file_name": "Lectures_and_presentations.md", "content": "* DFT, PW, and PAW: \"VASP: The basics. DFT, plane waves, PAW, ...\". Video: Part1 and Part2 * Electronic convergence, BZ sampling: \"VASP: The basics (II). Electronic convergence, BZ sampling ...\". * Structural relaxation, MD: \"VASP: The basics (III). Structural relaxation, phonons, MD ...\". * Hybrid functionals: \"VASP: Hybrid functionals\". Video * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". Video * Beyond DFT: RPA: \"VASP: Beyond DFT. The Random\\-Phase\\-Approximation\". Video * BSE: \"VASP: Beyond DFT. The Bethe\\-Salpeter Equation\". * Performance: \"VASP: running on HPC resources\".  ---"}
{"file_name": "INCAR.md", "content": "The INCAR file is the central input file of VASP, which determines *what to do and how to do it*. The INCAR tags specified in the INCAR file select the algorithms and set the parameters that VASP uses during the calculation. VASP will use reasonable default values, which we recommend using when unsure. Yet, the settings in the INCAR file are the main source of errors and false results, so we suggest carefully checking the meaning of the set INCAR tags. Regarding the format, each statement consists of the name of a tag, the equal sign **\\=**, and the values assigned to the tag (tag \\= values). For instance, an INCAR file for a density\\-functional\\-theory calculation might read  ```  ALGO  = Normal # alorithm for electron optimization  ISMEAR= -1     # Fermi smearing  SIGMA = 0.05   # width of the smearing in eV  ``` | **Tip:** VASP writes its interpretation of the data in the INCAR file to the OUTCAR file. Please verify that it agrees with the intended setup. || --- | Format------ The INCAR file is a tagged format free\\-ASCII file. That is, each statement follows a *tag \\= values* syntax. Typically, each line contains a single statement, but it is possible to combine multiple statements on a single line, separating them by a semicolon **;**, e.g.,  ```  ISMEAR= -1\u00a0;  SIGMA = 0.05  ``` For better readability, long lines can be split with a backslash **\\\\** . Avoid blanks after the backslash because some versions of VASP cannot parse those. For instance,  ```  MAGMOM  = 0 0 1.0 0 0 -1.0 \\            0 0 1.0 0 0 -1.0 \\ 6*0  ``` is the same as  ```  MAGMOM  = 0 0 1.0 0 0 -1.0 0 0 1.0 0 0 -1.0 0 0 0 0 0 0  ``` Alternatively, enclose all the values in quotes **\"** to ignore line breaks between the quotes, e.g.,  ```  WANNIER90_WIN = \"  Begin Projections  Si:sp3  End Projections \"  ``` For comments, VASP ignores any text after a hashtag **\\#** or exclamation mark **!**. Use this to add comments anywhere to the INCAR file. A comment prefix (\\#!) is often unnecessary because VASP ignores all text that does not fit the statement format (tag \\= values). In this case, do not use any syntax relevant character (\\=;\") because it may break the parsing of the INCAR file. VASP generally ignores empty lines, but we have encountered issues due to lines with tabs for some compilers. A typical (relatively complex) INCAR:  ```SYSTEM = Rhodium surface calculation start parameters for this Run (automatic defaults, hence not often required)  ISTART =      0    #  job  \u00a0: 0-new  1- orbitals from WAVECAR  ICHARG =      2    #  charge: 1-file 2-atom 10-const electronic optimization  ENCUT  = 300.00 eV # defaults from POTCAR, but wise to include  ALGO  =  Normal    # alorithm for electron optimization, can be also FAST or ALL  NELM   = 60        # of ELM steps, sometimes default is too small   EDIFF  = 1E-06     # stopping-criterion for ELM! broadening and DOS related values; this works almost always  SIGMA  =    0.05;  ISMEAR =  0  \u00a0! broadening in eV, -4-tet -1-fermi 0-gaus ionic relaxation  EDIFFG =  -1E-02   # stopping-criterion for IOM (all forces smaller 1E-2)  NSW    =  20       # number of steps for IOM  IBRION =  2        # CG for ions, often 1 (RMM-DISS) is faster  POTIM  =  .5       # step for ionic-motion (for MD in fs)performance optimization  KPAR   =    4      # make 4 groups, each group working on one set of k-points   NCORE  =    4      # one orbital handled by 4 cores   LREAL  =    A      # real space projection; slightly less accurate but faster   ```"}
{"file_name": "LDAUU.md", "content": "LDAUU= \\[real array]   Default: **LDAUU** \\= NTYP\\*0\\.0nDescription: Sets the effective on\\-site Coulomb interactions (eV).  --- LDAUU specifies the strength of the effective on\\-site Coulomb interactions in eV. It must hold one value for each atomic species. | **Warning:** The total energy will depend on the parameters     U   {\\\\displaystyle U}  U (LDAUU) and     J   {\\\\displaystyle J}   (LDAUJ). It is, therefore, not meaningful to compare the total energies resulting from calculations with different     U   {\\\\displaystyle U}  U and/or     J   {\\\\displaystyle J}  ; or     U \u2212 J   {\\\\displaystyle U\\-J}   in the case of Dudarev's approach (LDAUTYPE\\=2\\). || --- | | **Mind:** For LDAUTYPE\\=3, the LDAUU and LDAUJ tags specify the strength (in eV) of the spherical potential acting on the spin\\-up and spin\\-down manifolds, respectively. || --- |"}
{"file_name": "NBANDS.md", "content": "NBANDS= \\[integer]n| Default: **NBANDS** | \\= max(NELECT/2\\+NIONS/2,NELECT\\*0\\.6\\) |  || --- | --- | --- | Description: NBANDS specifies the total number of KS or QP orbitals in the calculation.  --- The right choice of NBANDS strongly depends on the type of the performed calculation and the system. As a minimum, VASP requires all occupied states \\+ one empty band, otherwise, a warning is given.  #### Electronic minimization In the electronic minimization calculations, empty states do not contribute to the total energy, however, empty states are required to achieve a better convergence. In iterative matrix\\-diagonalization algorithms (see ALGO) eigenvectors close to the top of the calculated number of states converge much slower than the lowest eigenstates, thus it is important to choose a sufficiently large NBANDS. Therefore, we recommend using the default settings for NBANDS, i.e., *NELECT/2 \\+ NIONS/2*, which is a safe choice in most cases. In some cases, it is also possible to decrease it to *NELECT/2\\+NIONS/4*, however, in some transition metals with open *f* shells a much larger number of empty bands might be required (up to *NELECT/2\\+2\\*NIONS*). To check this parameter perform several calculations for a fixed potential (ICHARG\\=12\\) with an increasing number of bands (e.g. starting from *NELECT/2 \\+ NIONS/2*). An accuracy of   10  \u2212 6 {\\\\displaystyle 10^{\\-6}}  should be obtained in 10\\-15 iterations.  | **Tip:** Note that the RMM\\-DIIS scheme (ALGO\\=Fast) is more sensitive to the number of bands than the default Davidson algorithm (ALGO\\=Normal) and can require more bands for fast convergence. || --- | #### Many\\-body perturbation theory calculations In the Many\\-Body Perturbation Theory calculations (*GW*,RPA, and BSE), a large number of empty orbitals is usually required, which can be much higher than the number of occupied states. The convergence of the calculations with a large number of empty states can be very slow. In such cases, we recommend performing an exact diagonalization (ALGO\\=Exact) of the Hamiltonian with empty bands starting from a converged charge density. #### Parallelization When executed on multiple CPUs, VASP automatically increases the number of bands, so that NBANDS is divisible by the number of CPU cores. If NCORE \\> 1, NBANDS is increased until it is divisible by the number of cores in a group (NCORE). If KPAR \\> 1, NBANDS is increased until it is divisible by the number of cores in a group.  #### Spin\\-polarized calculation In the case of spin\\-polarized calculations, the default value for NBANDS is increased to account for the initial magnetic moments. #### Noncollinear calculation In noncollinear calculations, the default NBANDS value is doubled to account for the spinors components. Related tags and article------------------------ NCORE, NBANDS, NBANDSGW, NBANDSV, NBANDSO, NPAR,KPAR  ---"}
{"file_name": "PHON_LBOSE.md", "content": "PHON\\_LBOSE= \\[logical]   Default: **PHON\\_LBOSE** \\= .TRUE.nDescription: This flag determines whether random structures in the Monte\\-Carlo (MC) sampling are created according to Bose\\-Einstein or Maxwell\\-Boltzmann statistics.   --- This feature is only available from VASP version 6\\.0 or higher. For PHON\\_LBOSE\\=*.TRUE.* Bose\\-Einstein statistics is used. For PHON\\_LBOSE\\=*.FALSE.* Maxwell\\-Boltzmann statistics is used. For further usage of this tag see: Electron\\-phonon interactions from Monte\\-Carlo sampling. **Important**: This tag does not work together with PHON\\_NSTRUCT\\=0\\."}
{"file_name": "ML_SION1.md", "content": "ML\\_SION1= \\[real]   Default: **ML\\_SION1** \\= 0\\.5nDescription: This tag specifies the width   \u03c3 atom {\\\\displaystyle \\\\sigma \\_{\\\\text{atom}}}  of the Gaussian functions used for broadening the atomic distributions of the radial descriptor   \u03c1  i  ( 2 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}(r)}  within the machine learning force field method.  --- The radial descriptor is constructed from  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u222b  \u03c1  i  (  r  r  ^  )  d  r  ^  , where  \u03c1  i  (  r  )  \\=  \u2211  j \\= 1  N  a  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{4\\\\pi }}\\\\int \\\\rho \\_{i}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)d{\\\\hat {\\\\mathbf {r} }},\\\\quad {\\\\text{where}}\\\\quad \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\=1}^{N\\_{\\\\mathrm {a} }}f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  and  g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is the following approximation of the delta function:  g  (  r  )  \\=  1  2  \u03c3  a t o m  \u03c0  e x p  (  \u2212  \\|  r  \\|  2  2  \u03c3  a t o m  2  )  . {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)\\={\\\\frac {1}{\\\\sqrt {2\\\\sigma \\_{\\\\mathrm {atom} }\\\\pi }}}\\\\mathrm {exp} \\\\left(\\-{\\\\frac {\\|\\\\mathbf {r} \\|^{2}}{2\\\\sigma \\_{\\\\mathrm {atom} }^{2}}}\\\\right).} The tag ML\\_SION1 sets the width   \u03c3 atom {\\\\displaystyle \\\\sigma \\_{\\\\text{atom}}}  of the above Gaussian function (see this section for more details). | **Tip:** Our test calculations indicate that ML\\_SION1 \\= ML\\_SION2 results in an optimal training performance. Furthermore, a value of 0\\.5 was found to be a good default value for both. However, the best choice is somewhat system\\-dependent. For instance, a smaller value for ML\\_SION1 can increase the number of local reference configurations, and hence ultimately the quality of the MLFF. See also here. || --- | The unit of ML\\_SION1 is   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ."}
{"file_name": "EFIELD.md", "content": "EFIELD= \\[real]nDescription: EFIELD controls the magnitude of the applied electric force field.  --- It is possible to apply an external electrostatic field in slab, or molecular calculations. Presently only a single value can be supplied and the field is applied in the direction selected by IDIPOL\\=1\\-4\\. The electric force field is supplied in units of eV/\u00c5. Dipole corrections to the potential (LDIPOL\\=.TRUE.) can and should be turned on to avoid interactions between the periodically repeated images. | **Mind:** The electric field is defined opposite to the common definition. So electrons will move along the direction of the electric field. || --- |"}
{"file_name": "LORBMOM.md", "content": "LORBMOM= .TRUE. \\| .FALSE.   Default: **LORBMOM** \\= .FALSE.nDescription: LORBMOM specifies whether the orbital moments are written out or not (in a calculation using LSORBIT\\=.TRUE.).  --- If LORBMOM\\=.TRUE. is set VASP will use the projectors of the PAW potentials to calculate theorbital moment within the PAW spheres, and write them to the OUTCAR file."}
{"file_name": "Shared_memory.md", "content": "VASP is mainly parallelized using MPI, and as much as practically feasible the computational work and storage demands are distributed over the MPI ranks.Unavoidably, however, some data structures are duplicated across all MPI ranks.For some of these data structures, VASP offers the option to reduce the memory consumption by putting them into shared\\-memory segments. That is segments of memory shared between the MPI ranks that reside on the same compute node and hence have access to the same physical memory. Whether to use shared memory or not has to be decided when compiling the code. It is controlled by the precompiler options: \\-Duse\\_shmem, \\-Dshmem\\_bcast\\_buffer, \\-Dshmem\\_rproj, and \\-Dsysv: **\\-Duse\\_shmem** Use shared\\-memory segments to reduce the memory demands of GW (ALGO \\= EVGW0, EVGW, QPGW0, and QPGW) and the memory demands of machine\\-learned\u2013force\\-field calculations.**\\-Dshmem\\_bcast\\_buffer** Use shared\\-memory segments to reduce the amount of MPI communication in hybrid\\-functional calculations.**\\-Dshmem\\_rproj** Use shared\\-memory segments to reduce the storage demands of the real\\-space PAW projectors.**\\-Dsysv** (recommended if possible, see notes below) Use of ipcs shared\\-memory segments and system\\-V semaphores **instead** of using default MPI\\-3 shared\\-memory capabilities (see below).In any case the aforementioned precompiler options have to be accompanied by an additional change to your makefile.include: The variable OBJECTS\\_LIB needs to contain also the object file getshmem.o, e.g., it may look like this:  ```OBJECTS_LIB = linpack_double.o getshmem.o  ``` | **Mind:** If you forget to add getshmem.o you may receive errors in the linking stage at the end of the VASP build process, e.g., `undefined reference to `getshmem_C'`. || --- | The allocation and handling of shared\\-memory segments has been implemented in two different ways: * Using the MPI\\-3 shared\\-memory capabilities (default, any of \\-Duse\\_shmem, \\-Dshmem\\_bcast\\_buffer, \\-Dshmem\\_rproj but **not** \\-Dsysv). | **Warning:** Per default, VASP uses MPI\\-3 calls to allocate and manage shared\\-memory segments. Unfortunately, we have observed that for some MPI implementations an abnormal termination of the code (*e.g.* segfaults or user initiated abort) does not free these shared\\-memory segments. This is not a VASP related error. It is caused by the way these shared\\-memory segments are handled by the operating system and MPI. Without explicit clean\\-up this leads to a \"memory leakage\" that persists until the compute node is rebooted. Obviously this is very problematic at high\\-performance\\-computing centers. For this reason we do not recommend using shared memory indiscriminately (*i.e.*, without explicit need). || --- | * Using ipcs shared\\-memory segments and system\\-V semaphores (add precompiler option \\-Dsysv). | **Tip:** Using ipcs shared\\-memory segments and system\\-V semaphores (add precompiler option \\-Dsysv) rarely leads to memory leakage. However, when it does, it is guaranteed to persist until reboot of the node, and no manner of other clean\\-up will be effective. || --- | A common problem with the use of ipcs shared\\-memory segments and system\\-V semaphores is that the maximum allowed number of semaphores and shared\\-memory segments, and the maximum allowed size of the latter are system\\-wide kernel settings. The default settings of many Linux distributions are so strict, *i.e.*, the allowed number and size of the shared\\-memory segments is so small, that they are completely unusable for our purposes.One can verify the current limits, by: > ```> #ipcs -l> ------ Messages Limits --------> max queues system wide = 32000> max size of message (bytes) = 8192> default max size of queue (bytes) = 16384 >> ------ Shared Memory Limits --------> max number of segments = 4096> max seg size (kbytes) = 16777216> max total shared memory (kbytes) = 16777216> min seg size (bytes) = 1 >> ------ Semaphore Limits --------> max number of arrays = 262> max semaphores per array = 250> max semaphores system wide = 32000> max ops per semop call = 32> semaphore max value = 32767 >> ``` *i.e.*, on this particular machine the maximum number of semaphores is 32000, the maximum number of shared\\-memory segments is 4096, and their maximum size is 16Gb. | **Warning:** How to change the maximum number of semaphores and shared\\-memory segments, and the maximum size of the latter, depends on the particular Linux distribution and generally requires superuser rights. For this reason the use of this implementation of shared memory (\\-Dsysv) is not practical in many situations. || --- | Related articles---------------- Installing VASP.6\\.X.X,makefile.include,Precompiler options,Machine\\-learned force fields  ---"}
{"file_name": "Available_pseudopotentials.md", "content": "Pseudopotentials are stored in POTCAR files and are available for all elements in the periodic table from the VASP Portal. The available pseudopotentials are mostly so\\-called PAW potentials that are based on the projector\\-augmented\\-wave (PAW) method[\\[1]](#cite_note-bloechl:prb:94b-1). The PAW potentials have been created following the recipes discussed in Ref. [\\[2]](#cite_note-kresse:prb:99-2). Cite Ref. [\\[1]](#cite_note-bloechl:prb:94b-1) and Ref. [\\[2]](#cite_note-kresse:prb:99-2) when using any PAW potential. Also see:  * Simple instructions to set up a POTCAR file with the correct format: Prepare a POTCAR. * Guide on **recommendations** and checks to decide which pseudopotential flavor to use for a specific calculation: Choosing pseudopotentials. Available pseudopotential sets------------------------------ The tables list all available pseudopotentials split between  * *standard potentials*: these are intended for treating mostly occupied states and are appropriate for calculations within density\\-functional theory, and * *GW potentials*: these are optimized for treating unoccupied states far above the Fermi level and have an \\_GW suffix. GW potentials are recommended for computing optical properties and calculations within many\\-body perturbation theory. The tables comprise the name of the potential, number of valence electrons, valence electron configuration for the reference system, and the cutoff energy (ENMAX).  The **bold\\-highlighted entries are the default recommendations**, but depending on the specific calculation, it might be preferable or necessary to choose a different pseudopotential.  | **Important:** Refer to the explanation of different variants to understand the suffix in the name of the potential. || --- | ### potpaw.64 (latest, recommended) Updated potentials with respect to the potpaw.54 set: * Li\\_GW, He\\_GW: improved accuracy* C\\_GW\\_new, N\\_GW\\_new, O\\_GW\\_new, F\\_GW\\_new: more balanced overall* C\\_h, N\\_h O\\_h, F\\_h: improved accuracy for HF calculation (errors below 0\\.5 kcal)* N\\_s\\_GW: improved accuracy* Rn Rn\\_d\\_GW, Rn\\_sv\\_GW: mass updated to 220* Ba\\_sv\\_GW, Cs\\_sv, Cs\\_sv\\_GW, Cu\\_sv\\_GW, Hf\\_sv\\_GW: improved accuracy/ ghost\\-state issues* Dy, Er, Eu, Gd, Ho, Nd, Pm, Pr, Sm, Tb, Tm, Yb: lanthanides updated Newly added potentials: * H\\_GW\\_new, B\\_GW\\_new, B\\_h\\_GW, C\\_s\\_GW* Dy\\_h, Er\\_h, Eu\\_h, Gd\\_h, Ho\\_h, Nd\\_h, Pm\\_h, Pr\\_h, Sm\\_h, Tb\\_h, Tm\\_h, Yb\\_h #### Standard potentials Standard PAW potentials are appropriate for calculations that mainly involve occupied states, e.g., calculations within density\\-functional theory *without* computing optical properties. | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **477\\.779** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **498\\.387** || **Be** | **2** | **2*s*1\\.9999 2*p*0\\.001** | **247\\.951** || Be\\_sv | 4 | 1*s*2 2*s*1\\.9999 2*p*0\\.001 | 308\\.45 || **B** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.251 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 742\\.464 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.704 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 755\\.833 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.424 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 765\\.442 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.604 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.351 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.647 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.403** || Na | 1 | 3*s*1 | 101\\.956 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.494** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 644\\.874 || **Mg** | **2** | **3*s*1\\.999 3*p*0\\.001** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.538 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 473\\.54 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.957** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.704** || **P** | **5** | **3*s*2 3*p*3** | **255\\.155** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.903 || **S** | **6** | **3*s*2 3*p*4** | **258\\.602** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.84 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.25** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.272 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.101** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.596 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.279** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.552 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.727** || Sc | 3 | 3*d*2 4*s*1 | 155\\.006 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.7** || Ti | 4 | 3*d*3 4*s*1 | 178\\.52 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.435 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.719** || V | 5 | 3*d*4 4*s*1 | 192\\.706 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.722 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.722** || Cr | 6 | 3*d*5 4*s*1 | 227\\.202 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.753** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.443 || Mn | 7 | 3*d*6 4*s*1 | 269\\.944 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.944** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.112 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.969** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.303 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.513 || **Co** | **9** | **3*d*8 4*s*1** | **268\\.056** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 270\\.871 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.343 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.618** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.726 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.521** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.406 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.847** || Ga | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.829** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.762 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.392** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 122\\.21 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.215** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **226\\.327** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.554** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **230\\.037** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 207\\.263 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.304** || Mo | 6 | 4*d*5 5*s*1 | 224\\.535 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.535 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **236\\.514** || Tc | 7 | 4*d*6 5*s*1 | 228\\.636 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.345** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.479 || Ru | 8 | 4*d*7 5*s*1 | 213\\.221 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **239\\.907** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.687 || Rh | 9 | 4*d*8 5*s*1 | 228\\.926 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.321** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.832** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.832 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.752** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.68 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.265** || In | 3 | 5*s*2 5*p*1 | 96\\.062 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.196** || Sn | 4 | 5*s*2 5*p*2 | 103\\.318 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.107** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.301** || **Te** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.021** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.727** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.001 6*s*1\\.999** | **186\\.981** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.044** || La\\_s | 9 | 4*f*0\\.0001 5*p*6 5*d*0\\.9999 6*s*2 | 136\\.594 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.088** || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.927 || Hf | 4 | 5*d*3 6*s*1 | 220\\.431 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.431** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.414 || Ta | 5 | 5*d*4 6*s*1 | 223\\.759 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.759** || W | 6 | 5*d*5 6*s*1 | 223\\.126 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.126** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.25** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.25 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.023** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.023 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.837** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.228** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.53 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.869** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.142** || Tl | 3 | 6*s*2 6*p*1 | 90\\.239 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.001** || Pb | 4 | 6*s*2 6*p*2 | 98\\.039 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.817** || Bi | 5 | 6*s*2 6*p*3 | 105\\.071 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** || Po | 6 | 6*s*2 6*p*4 | 159\\.801 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.606** || **At** | **7** | **6*s*2 6*p*5** | **161\\.481** || **Rn** | **8** | **6*s*2 6*p*6** | **151\\.461** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.489** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.216** || **Ac** | **11** | **5*f*0\\.0001 6*s*2 6*p*6 6*d*0\\.9999 7*s*2** | **170\\.048** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.389** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.575 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.31** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.642 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.603** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.218 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.349** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 213\\.932 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.436** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 211\\.493 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.953** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **258\\.027** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || He\\_AE | 2 | 1*s*2 | 2135\\.871 || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 741\\.689 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.626 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 337\\.25 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Pr\\_h | 13 | 4*f*2\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 400\\.742 || Nd | 14 | 4*f*3\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 338\\.34 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Nd\\_h | 14 | 4*f*3\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 402\\.016 || Pm | 15 | 4*f*4\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 340\\.358 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Pm\\_h | 15 | 4*f*4\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 404\\.406 || Sm | 16 | 4*f*5\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 341\\.177 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Sm\\_h | 16 | 4*f*5\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.382 || Eu | 17 | 4*f*6\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.705 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Eu\\_h | 17 | 4*f*6\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 403\\.212 || Gd | 18 | 4*f*7\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 342\\.859 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Gd\\_h | 18 | 4*f*7\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 407\\.403 || Tb | 19 | 4*f*8\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 340\\.855 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Tb\\_h | 19 | 4*f*8\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.043 || Dy | 20 | 4*f*9\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 341\\.547 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Dy\\_h | 20 | 4*f*9\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.886 || Ho | 21 | 4*f*10\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 343\\.845 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Ho\\_h | 21 | 4*f*10\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 415\\.91 || Er | 22 | 4*f*11\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 346\\.295 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Er\\_h | 22 | 4*f*11\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 429\\.583 || Tm | 23 | 4*f*12\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.206 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Tm\\_h | 23 | 4*f*12\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 419\\.812 || Yb | 24 | 4*f*13\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.312 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Yb\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 188\\.359 || Yb\\_h | 24 | 4*f*13\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 409\\.285 || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.057** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || **Rn** | **8** | **6*s*2 6*p*6** | **151\\.497** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** || Cf | 20 | 5*f*8 6*s*2 6*p*6 6*d*2 7*s*2 | 414\\.614 | #### GW potentials GW potentials are recommended for calculations involving unoccupied states, e.g., computing optical properties or using many\\-body perturbation theory. | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **404\\.806** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.253 || Li\\_GW | 1 | 2*s*1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.253** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.951 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **536\\.216** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_GW\\_new | 3 | 2*s*2 2*p*1 | 318\\.762 || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 433\\.894 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 742\\.464 || C\\_s\\_GW | 4 | 2*s*2 2*p*2 | 304\\.668 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.681** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 452\\.165 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.833 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 312\\.431 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.315** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 466\\.114 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.442 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.366 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.335** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 479\\.919 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 847\\.822 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **431\\.952** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 317\\.594 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.86** || Mg\\_GW | 2 | 3*s*2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.538 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **430\\.099** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.957** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.007 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.704** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 546\\.548 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.155** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.602** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.25** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.518** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.606** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.209** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.598** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.48** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.093** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.753** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.537 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.488** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.044 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.727** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.447 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.407** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.352 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.485** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.032 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **466\\.991** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.312 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.745** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.723** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.614** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.514 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.602** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.258 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.224** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.88 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.563** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **220\\.92** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.532** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.94** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.437** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.857** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.65** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **350\\.798** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **347\\.881** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.321 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **350\\.989** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.832 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **355\\.88** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.752 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.226** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 253\\.99 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.653** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.582** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.636 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.086** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.704 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.147** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.498 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **175\\.144** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.686 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.712** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.757 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.528** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.581 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.012** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.484** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.728** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.649** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **308\\.829** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **285\\.798** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **316\\.943** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **316\\.85** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.628** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.708** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.657 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.536** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.263 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.52** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **311\\.949** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.001** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.502 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.793** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.138 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.628 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.89** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.502 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.666** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.653 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.303** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.597 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **267\\.397** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 329\\.841 | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_GW\\_new | 1 | 1*s*1 | 536\\.615 || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_GW\\_new | 3 | 2*s*2 2*p*1 | 318\\.614 || B\\_h\\_GW | 3 | 2*s*2 2*p*1 | 731\\.373 || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 433\\.983 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 741\\.689 || C\\_s\\_GW | 4 | 2*s*2 2*p*2 | 304\\.843 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 452\\.633 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 312\\.986 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 466\\.797 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 480\\.281 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 848\\.626 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **432\\.275** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.853** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.599** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.961** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.774** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.321** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.932** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.627** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.837** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.491** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.645** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **467\\.331** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.665** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.602 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.434** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.313 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.344 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.692 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.232** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.758** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.364** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.872** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.914** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **351\\.044** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **348\\.106** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **351\\.206** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **356\\.093** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.43** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.806** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.771 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.778 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.491 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.618 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.674 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.476 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*1 6*s*1** | **267\\.02** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.688** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **309\\.037** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.658** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **312\\.028** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.053** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.583 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.809** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.193 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.876** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.513 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.847** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.618 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.251** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.529 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **267\\.347** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 329\\.758 | ### potpaw.54 LDA and PBE PAW datasets version 54, including the GW variety (original release 2015\\-09\\-04\\).When read by VASP these files yield identical results as the files distributed before. The POTCAR files, however, differ from previous versions: 1. the TITLE string is set to the directory in which the POTCAR file reside for: O\\_GW\\_new, Ge\\_GW, G\\_GW\\_new, Cd\\_GW, Br\\_GW, B\\_GW.2. HASH key added to all POTCAR files. #### Standard potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **477\\.779** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **498\\.387** || **Be** | **2** | **2*s*1\\.9999 2*p*0\\.001** | **247\\.951** || Be\\_sv | 4 | 1*s*2 2*s*1\\.9999 2*p*0\\.001 | 308\\.45 || **B** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.251 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.704 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.424 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.604 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.351 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.647 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.403** || Na | 1 | 3*s*1 | 101\\.956 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.494** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 644\\.874 || **Mg** | **2** | **3*s*1\\.999 3*p*0\\.001** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.538 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 473\\.54 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.957** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.704** || **P** | **5** | **3*s*2 3*p*3** | **255\\.155** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.903 || **S** | **6** | **3*s*2 3*p*4** | **258\\.602** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.84 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.25** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.272 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.101** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.596 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.279** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.552 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.727** || Sc | 3 | 3*d*2 4*s*1 | 155\\.006 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.7** || Ti | 4 | 3*d*3 4*s*1 | 178\\.52 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.435 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.719** || V | 5 | 3*d*4 4*s*1 | 192\\.706 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.722 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.722** || Cr | 6 | 3*d*5 4*s*1 | 227\\.202 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.753** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.443 || Mn | 7 | 3*d*6 4*s*1 | 269\\.944 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.944** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.112 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.969** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.303 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.513 || **Co** | **9** | **3*d*8 4*s*1** | **268\\.056** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 270\\.871 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.343 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.618** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.726 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.521** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.406 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.847** || Ga | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.829** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.762 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.392** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 122\\.21 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.215** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **226\\.327** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.554** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **230\\.037** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 207\\.263 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.304** || Mo | 6 | 4*d*5 5*s*1 | 224\\.535 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.535 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **236\\.514** || Tc | 7 | 4*d*6 5*s*1 | 228\\.636 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.345** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.479 || Ru | 8 | 4*d*7 5*s*1 | 213\\.221 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **239\\.907** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.687 || Rh | 9 | 4*d*8 5*s*1 | 228\\.926 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.321** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.832** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.832 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.752** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.68 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.265** || In | 3 | 5*s*2 5*p*1 | 96\\.062 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.196** || Sn | 4 | 5*s*2 5*p*2 | 103\\.318 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.107** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.301** || **Te** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.021** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.727** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.001 6*s*1\\.999** | **186\\.981** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.044** || La\\_s | 9 | 4*f*0\\.0001 5*p*6 5*d*0\\.9999 6*s*2 | 136\\.594 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.088** || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.927 || Hf | 4 | 5*d*3 6*s*1 | 220\\.431 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.431** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.414 || Ta | 5 | 5*d*4 6*s*1 | 223\\.759 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.759** || W | 6 | 5*d*5 6*s*1 | 223\\.126 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.126** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.25** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.25 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.023** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.023 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.837** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.228** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.53 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.869** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.142** || Tl | 3 | 6*s*2 6*p*1 | 90\\.239 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.001** || Pb | 4 | 6*s*2 6*p*2 | 98\\.039 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.817** || Bi | 5 | 6*s*2 6*p*3 | 105\\.071 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** || Po | 6 | 6*s*2 6*p*4 | 159\\.801 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.606** || **At** | **7** | **6*s*2 6*p*5** | **161\\.481** || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.086** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.489** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.216** || **Ac** | **11** | **5*f*0\\.0001 6*s*2 6*p*6 6*d*0\\.9999 7*s*2** | **170\\.048** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.389** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.575 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.31** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.642 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.603** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.218 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.349** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 213\\.932 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.436** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 211\\.493 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.953** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **258\\.027** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || He\\_AE | 2 | 1*s*2 | 2135\\.871 || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.626 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2 5*s*2 5*p*6 5*d*1 6*s*2 | 272\\.941 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Nd | 14 | 4*f*3 5*s*2 5*p*6 5*d*1 6*s*2 | 253\\.189 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Pm | 15 | 4*f*4 5*s*2 5*p*6 5*d*1 6*s*2 | 258\\.627 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Sm | 16 | 4*f*5 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.515 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Eu | 17 | 4*f*7 5*s*2 5*p*6 6*s*2 | 249\\.668 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Gd | 18 | 4*f*7 5*s*2 5*p*6 5*d*1 6*s*2 | 256\\.472 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Tb | 19 | 4*f*8 5*s*2 5*p*6 5*d*1 6*s*2 | 264\\.824 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Dy | 20 | 4*f*9 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.467 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Ho | 21 | 4*f*10 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.168 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Er | 22 | 4*f*11 5*s*2 5*p*6 5*d*1 6*s*2 | 298\\.116 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Tm | 23 | 4*f*12 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.42 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Yb | 24 | 4*f*14 5*s*2 5*p*6 6*s*2 | 253\\.028 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Yb\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 188\\.359 || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.057** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.121** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** || Cf | 20 | 5*f*8 6*s*2 6*p*6 6*d*2 7*s*2 | 414\\.614 | #### GW potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **404\\.806** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.253 || Li\\_GW | 1 | 2*s*1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.253** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.951 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **536\\.216** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.762** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 742\\.464 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.681** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.681 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.833 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.222 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.315** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 433\\.745 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.442 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.366 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.335** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.335 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 847\\.822 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **431\\.952** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 317\\.594 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.86** || Mg\\_GW | 2 | 3*s*2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.538 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **430\\.099** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.957** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.007 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.704** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 546\\.548 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.155** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.602** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.25** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.518** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.606** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.209** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.598** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.48** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.093** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.753** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.537 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.488** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.044 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.727** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.447 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.407** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.352 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.485** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.032 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **391\\.702** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.312 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.745** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.723** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.614** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.514 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.602** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.258 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.224** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.88 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.563** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **220\\.92** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.532** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.94** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.437** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.857** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.65** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **350\\.798** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **347\\.881** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.321 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **350\\.989** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.832 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **355\\.88** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.752 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.226** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 253\\.99 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.653** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.582** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.636 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.086** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.704 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.147** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.498 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **175\\.144** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.686 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.712** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.757 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.528** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.581 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.012** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.484** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.728** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.649** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.716** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **285\\.798** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **316\\.943** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **316\\.85** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.628** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.708** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.657 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.536** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.263 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.52** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **311\\.949** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.001** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.502 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.793** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.138 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.628 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.89** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.502 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.666** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.653 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.303** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.597 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **268\\.546** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 331\\.257 | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 741\\.689 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.902 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.495 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 434\\.431 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.698 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 848\\.626 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **432\\.275** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.853** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.599** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.961** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.774** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.321** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.932** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.627** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.837** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.491** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.645** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **391\\.688** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.665** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.602 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.434** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.313 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.344 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.692 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.232** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.758** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.364** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.872** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.914** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **351\\.044** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **348\\.106** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **351\\.206** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **356\\.093** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.43** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.806** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.771 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.778 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.491 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.618 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.674 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.476 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.515** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.688** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.964** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.658** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **312\\.028** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.053** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.583 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.809** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.193 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.876** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.513 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.847** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.618 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.251** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.529 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **268\\.495** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 331\\.173 | ### potpaw.52 PBE and LDA PAW datasets version 52, including early GW variety (snapshot 19\\-04\\-2012\\).When read by VASP these files yield identical results as the files distributed in 2012\\. The POTCAR files, however, differ from previous versions: 1. the TITLE string is set to the directory in which the POTCAR file reside for: B\\_GW Br\\_GW Cd\\_GW Cd\\_pv\\_GW Cd\\_sv\\_GW F\\_GW\\_new Ge\\_GW H\\_AE Ne\\_GW\\_soft O\\_GW\\_new Pb\\_d\\_GW.2. For PBE GW the TITLE string has been updated from PAW to PAW\\_PBE.3. HASH key added to all POTCAR files. | **Mind:** The C\\_GW\\_new, N\\_GW\\_new, O\\_GW\\_new, and F\\_GW\\_new POTCAR files, use the f\\-pseudopotential as local potential and possess d\\-projectors. In contrast, the C\\_GW, N\\_GW, O\\_GW, and F\\_GW POTCAR files use the d\\-pseudopotential as local potential and possess no d\\-projectors. Calculations usually converge faster with respect to the energy cutoff ENMAX using the C\\_GW, N\\_GW, O\\_GW, and G\\_GW potentials. Whether the new potentials possess a precision advantage over the old potentials is not entirely clear. In theory, they should be more precise for correlated wavefunction calculations. However, in practice, the improvements seem modest and often do not justify the greater computational load. || --- | #### Standard potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **477\\.779** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **498\\.387** || **Be** | **2** | **2*s*1\\.9999 2*p*0\\.001** | **247\\.951** || Be\\_sv | 4 | 1*s*2 2*s*1\\.9999 2*p*0\\.001 | 308\\.45 || **B** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.251 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.704 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.424 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.604 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 700\\.0 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.647 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.403** || Na | 1 | 3*s*1 | 101\\.956 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.494** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 644\\.874 || **Mg** | **2** | **3*s*1\\.999 3*p*0\\.001** | **213\\.415** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.538 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 473\\.54 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.957** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.704** || **P** | **5** | **3*s*2 3*p*3** | **255\\.155** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.903 || **S** | **6** | **3*s*2 3*p*4** | **258\\.602** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.84 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.25** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.272 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.101** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.596 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.279** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.552 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.727** || Sc | 3 | 3*d*2 4*s*1 | 155\\.006 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.7** || Ti | 4 | 3*d*3 4*s*1 | 178\\.52 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.435 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.719** || V | 5 | 3*d*4 4*s*1 | 192\\.706 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.722 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.722** || Cr | 6 | 3*d*5 4*s*1 | 227\\.202 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.753** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.443 || Mn | 7 | 3*d*6 4*s*1 | 269\\.944 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.944** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.112 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.969** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.303 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.513 || **Co** | **9** | **3*d*8 4*s*1** | **268\\.056** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 270\\.871 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.343 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.618** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.726 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.521** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.406 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.847** || Ga | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.829** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.762 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.392** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 122\\.21 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.215** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **226\\.327** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.554** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **230\\.037** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 207\\.263 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.304** || Mo | 6 | 4*d*5 5*s*1 | 224\\.535 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.535 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **236\\.514** || Tc | 7 | 4*d*6 5*s*1 | 228\\.636 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.345** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.479 || Ru | 8 | 4*d*7 5*s*1 | 213\\.221 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **239\\.907** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.687 || Rh | 9 | 4*d*8 5*s*1 | 228\\.926 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.321** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.832** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.832 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.752** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.68 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.265** || In | 3 | 5*s*2 5*p*1 | 96\\.062 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.196** || Sn | 4 | 5*s*2 5*p*2 | 103\\.318 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.107** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.301** || **Te** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.021** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.727** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.001 6*s*1\\.999** | **186\\.981** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.044** || La\\_s | 9 | 4*f*0\\.0001 5*p*6 5*d*0\\.9999 6*s*2 | 136\\.594 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.088** || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.927 || Hf | 4 | 5*d*3 6*s*1 | 220\\.431 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.431** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.414 || Ta | 5 | 5*d*4 6*s*1 | 223\\.759 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.759** || W | 6 | 5*d*5 6*s*1 | 223\\.126 || W\\_pv | 12 | 5*p*6 5*d*5 6*s*1 | 223\\.126 || **Re** | **7** | **5*d*6 6*s*1** | **226\\.25** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.25 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.023** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.023 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.837** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.228** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.53 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.869** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.142** || Tl | 3 | 6*s*2 6*p*1 | 90\\.239 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.001** || Pb | 4 | 6*s*2 6*p*2 | 98\\.039 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.817** || Bi | 5 | 6*s*2 6*p*3 | 105\\.071 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** || Po | 6 | 6*s*2 6*p*4 | 159\\.801 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.606** || **At** | **7** | **6*s*2 6*p*5** | **161\\.481** || At\\_d | 17 | 5*d*10 6*s*2 6*p*5 | 266\\.303 || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.086** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.489** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.216** || **Ac** | **11** | **5*f*0\\.0001 6*s*2 6*p*6 6*d*0\\.9999 7*s*2** | **170\\.048** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.389** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.575 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.31** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.642 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.603** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.218 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.349** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 213\\.932 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.436** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 211\\.493 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.953** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **258\\.027** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 457\\.521 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 700\\.0 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **126\\.143** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2 5*s*2 5*p*6 5*d*1 6*s*2 | 272\\.941 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Nd | 14 | 4*f*3 5*s*2 5*p*6 5*d*1 6*s*2 | 253\\.189 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Pm | 15 | 4*f*4 5*s*2 5*p*6 5*d*1 6*s*2 | 258\\.627 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Sm | 16 | 4*f*5 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.515 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Eu | 17 | 4*f*7 5*s*2 5*p*6 6*s*2 | 249\\.668 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Gd | 18 | 4*f*7 5*s*2 5*p*6 5*d*1 6*s*2 | 256\\.472 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Tb | 19 | 4*f*8 5*s*2 5*p*6 5*d*1 6*s*2 | 264\\.824 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Dy | 20 | 4*f*9 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.467 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Ho | 21 | 4*f*10 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.168 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Er | 22 | 4*f*11 5*s*2 5*p*6 5*d*1 6*s*2 | 298\\.116 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Tm | 23 | 4*f*12 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.42 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Yb | 24 | 4*f*14 5*s*2 5*p*6 6*s*2 | 253\\.028 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || W\\_pv | 12 | 5*p*6 5*d*5 6*s*1 | 223\\.057 || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || At\\_d | 17 | 5*d*10 6*s*2 6*p*5 | 266\\.251 || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.121** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** | #### GW potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **404\\.806** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.253 || Li\\_GW | 1 | 2*s*1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.253** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.951 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **536\\.216** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.762** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.681** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.681 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.222 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.315** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 433\\.745 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.366 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.335** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.335 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **317\\.594** || Ne\\_GW\\_soft | 8 | 2*s*2 2*p*6 | 317\\.594 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*d*1** | **260\\.372** || Mg\\_GW | 2 | 3*s*2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.538 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **430\\.099** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.957** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.007 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.704** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 546\\.548 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.155** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.602** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.25** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **266\\.101** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.606** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.209** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **284\\.878** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **285\\.665** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **322\\.537** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **327\\.752** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.537 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **357\\.618** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.044 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **364\\.41** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.447 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **363\\.483** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.352 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **413\\.158** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.032 || Cu\\_pv\\_GW | 17 | 3*p*6 3*d*10 4*s*1 | 466\\.991 || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.312 || Zn\\_pv\\_GW | 18 | 3*p*6 3*d*10 4*s*2 | 360\\.353 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*12** | **496\\.249** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.723** || Ga\\_pv\\_GW | 19 | 3*p*6 3*d*10 4*s*2 4*p*1 | 422\\.753 || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 503\\.451 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 454\\.654 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.87** || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **185\\.392** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **220\\.92** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.532** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **229\\.027** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **282\\.169** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **285\\.574** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **311\\.692** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **317\\.903** || Ru\\_pv\\_GW | 14 | 4*p*6 4*d*7 5*s*1 | 239\\.907 || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **320\\.997** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.321 || Rh\\_pv\\_GW | 15 | 4*p*6 4*d*8 5*s*1 | 247\\.321 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **319\\.891** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.832 || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.752 || Cd\\_GW | 12 | 4*d*10 5*s*2 | 253\\.99 || Cd\\_pv\\_GW | 18 | 4*p*6 4*d*10 5*s*2 | 396\\.576 || **Cd\\_sv\\_GW** | **20** | **4*s*4 4*p*6 4*d*10** | **650\\.91** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.582** || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.086** || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.147** || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.528** || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.012** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.484** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.649** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.716** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **285\\.798** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **316\\.943** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **316\\.85** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.628** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.708** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.657 || Pt\\_pv\\_GW | 16 | 5*p*6 5*d*9 6*s*1 | 248\\.657 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.536** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.263 || Au\\_pv\\_GW | 17 | 5*p*6 5*d*10 6*s*1 | 248\\.263 || **Pb\\_d\\_GW** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.793** || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.628 || **Bi\\_d\\_GW** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.902 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.495 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 434\\.431 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.698 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **318\\.26** || Ne\\_GW\\_soft | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*d*1** | **260\\.065** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **266\\.408** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **285\\.066** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **285\\.998** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **323\\.07** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **328\\.282** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **357\\.944** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **364\\.719** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **363\\.77** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **413\\.475** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || Cu\\_pv\\_GW | 17 | 3*p*6 3*d*10 4*s*1 | 467\\.331 || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || Zn\\_pv\\_GW | 18 | 3*p*6 3*d*10 4*s*2 | 360\\.246 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*12** | **496\\.604** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_pv\\_GW | 19 | 3*p*6 3*d*10 4*s*2 4*p*1 | 423\\.002 || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 503\\.418 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 454\\.489 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **185\\.331** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **229\\.276** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **282\\.431** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **285\\.792** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **311\\.905** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **318\\.11** || Ru\\_pv\\_GW | 14 | 4*p*6 4*d*7 5*s*1 | 240\\.049 || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **321\\.2** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || Rh\\_pv\\_GW | 15 | 4*p*6 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **320\\.091** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || Cd\\_pv\\_GW | 18 | 4*p*6 4*d*10 5*s*2 | 396\\.766 || **Cd\\_sv\\_GW** | **20** | **4*s*4 4*p*6 4*d*10** | **651\\.254** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.515** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.964** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || Pt\\_pv\\_GW | 16 | 5*p*6 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || Au\\_pv\\_GW | 17 | 5*p*6 5*d*10 6*s*1 | 248\\.344 || **Pb\\_d\\_GW** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.809** || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** | ### LDA (2010\\), PW91 (2006\\) and PBE (2010\\) PAW potentials The LDA, PW91 and PBE PAW datasets (snapshot: 05\\-05\\-2010, 19\\-09\\-2006 and 06\\-05\\-2010, respectively). These files are outdated, not supported and only distributed as is. Some VASP feature might yield undesired results with these files (e.g. METAGGA). #### Standard potentials | List of LDA potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || Free | 0 | 250\\.0 || **H** | **1** | **250\\.0** || H.25 | 0\\.25 | 419\\.126 || H.33 | 0\\.33 | 250\\.0 || H.5 | 0\\.5 | 250\\.0 || H.66 | 0\\.66 | 250\\.477 || H.75 | 0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 458\\.665 || H1\\.5 | 1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 467\\.584 || H1\\.75 | 1\\.75 | 469\\.843 || H\\_AE | 1 | 1000\\.0 || H\\_h | 1 | 700\\.0 || **He** | **2** | **477\\.779** || Li | 1 | 140\\.0 || **Li\\_sv** | **3** | **498\\.387** || Li\\_sv\\_old | 3 | 270\\.99 || **Be** | **2** | **247\\.951** || Be\\_sv | 4 | 308\\.45 || **B** | **3** | **318\\.762** || B\\_h | 3 | 700\\.0 || B\\_s | 3 | 250\\.0 || **C** | **4** | **400\\.0** || C\\_d | 4 | 413\\.992 || C\\_f\\_AE | 6 | 840\\.525 || C\\_h | 4 | 700\\.0 || C\\_local | 4 | 1047\\.306 || C\\_s | 4 | 250\\.0 || **N** | **5** | **400\\.0** || N\\_h | 5 | 700\\.0 || N\\_s | 5 | 250\\.0 || **O** | **6** | **400\\.0** || O\\_h | 6 | 700\\.0 || O\\_s | 6 | 282\\.604 || **F** | **7** | **400\\.0** || F\\_h | 7 | 700\\.0 || F\\_s | 7 | 250\\.0 || **Ne** | **8** | **343\\.403** || Ne\\_AE | 10 | 2744\\.212 || Na | 1 | 101\\.956 || **Na\\_pv** | **7** | **259\\.494** || Na\\_sv | 9 | 700\\.0 || **Mg** | **2** | **210\\.674** || Mg\\_pv | 8 | 403\\.538 || Mg\\_pv.old | 8 | 265\\.566 || Mg\\_sv | 10 | 473\\.54 || **Al** | **3** | **240\\.957** || Al\\_pv | 9 | 370\\.394 || Al\\_s | 3 | 135\\.119 || **Si** | **4** | **245\\.704** || Si\\_h | 4 | 339\\.353 || Si\\_nopc | 4 | 245\\.704 || **P** | **5** | **270\\.0** || P\\_h | 5 | 390\\.903 || **S** | **6** | **280\\.0** || S\\_h | 6 | 402\\.84 || **Cl** | **7** | **280\\.0** || Cl\\_h | 7 | 409\\.272 || Cl\\_h\\_new | 7 | 409\\.272 || **Ar** | **8** | **266\\.101** || K | 7 | 116\\.596 || K\\_pv | 7 | 116\\.596 || **K\\_sv** | **9** | **259\\.279** || Ca\\_pv | 8 | 150\\.0 || **Ca\\_sv** | **10** | **266\\.727** || Sc | 3 | 155\\.006 || **Sc\\_sv** | **11** | **222\\.7** || Ti | 4 | 178\\.52 || Ti\\_pv | 10 | 222\\.435 || Ti\\_s | 2 | 141\\.437 || **Ti\\_sv** | **12** | **274\\.719** || Ti\\_sv\\_new | 12 | 274\\.719 || V | 5 | 192\\.706 || V\\_pv | 11 | 263\\.722 || **V\\_sv** | **13** | **263\\.722** || Cr | 6 | 227\\.202 || **Cr\\_pv** | **12** | **265\\.753** || Mn | 7 | 269\\.944 || **Mn\\_pv** | **13** | **269\\.944** || **Fe** | **8** | **267\\.969** || Fe\\_pv | 14 | 293\\.303 || Fe\\_sv | 16 | 390\\.513 || **Co** | **9** | **268\\.056** || Co\\_pv | 15 | 415\\.593 || **Ni** | **10** | **269\\.618** || Ni\\_h | 10 | 357\\.352 || Ni\\_pv | 16 | 367\\.726 || **Cu** | **11** | **273\\.298** || Cu\\_new | 11 | 295\\.521 || Cu\\_pv | 17 | 368\\.406 || **Zn** | **12** | **276\\.847** || Zn\\_pv | 18 | 376\\.385 || Zn\\_sv\\_LDApU | 20 | 725\\.781 || Ga | 3 | 134\\.8 || Ga\\_NC2 | 3 | 513\\.106 || **Ga\\_d** | **13** | **282\\.829** || Ga\\_h | 13 | 404\\.723 || Ga\\_s | 3 | 87\\.077 || Ge | 4 | 173\\.969 || **Ge\\_d** | **14** | **310\\.448** || Ge\\_h | 14 | 410\\.604 || **As** | **5** | **208\\.87** || As\\_NC2 | 5 | 342\\.549 || As\\_d | 15 | 288\\.762 || **Se** | **6** | **211\\.602** || **Br** | **7** | **216\\.224** || **Kr** | **8** | **185\\.392** || Rb\\_pv | 7 | 122\\.21 || **Rb\\_sv** | **9** | **220\\.215** || **Sr\\_sv** | **10** | **226\\.327** || **Y\\_sv** | **11** | **211\\.836** || Zr | 4 | 145\\.4 || **Zr\\_sv** | **12** | **230\\.037** || Zr\\_sv\\_new | 12 | 230\\.037 || Nb\\_pv | 11 | 207\\.263 || **Nb\\_sv** | **13** | **293\\.304** || Mo | 6 | 224\\.535 || Mo\\_pv | 12 | 224\\.535 || Mo\\_pv\\_new | 12 | 224\\.535 || **Mo\\_sv** | **14** | **236\\.514** || Tc | 7 | 228\\.636 || Tc\\_new | 7 | 228\\.636 || **Tc\\_pv** | **13** | **228\\.636** || Tc\\_pv\\_new | 13 | 263\\.345 || Ru | 8 | 213\\.221 || Ru\\_new | 8 | 213\\.221 || **Ru\\_pv** | **14** | **230\\.359** || Ru\\_pv\\_new | 14 | 239\\.907 || Rh | 9 | 228\\.926 || Rh\\_new | 9 | 228\\.926 || **Rh\\_pv** | **15** | **271\\.355** || Rh\\_pv\\_new | 15 | 247\\.321 || **Pd** | **10** | **250\\.832** || Pd\\_new | 10 | 250\\.832 || Pd\\_pv | 16 | 270\\.984 || Pd\\_pv\\_new | 16 | 250\\.832 || **Ag** | **11** | **249\\.752** || Ag\\_new | 11 | 249\\.752 || **Cd** | **12** | **274\\.265** || In | 3 | 96\\.062 || **In\\_d** | **13** | **239\\.196** || In\\_pv | 19 | 241\\.124 || Sn | 4 | 103\\.318 || **Sn\\_d** | **14** | **241\\.107** || **Sb** | **5** | **172\\.301** || Sb\\_ | 5 | 172\\.301 || **Te** | **6** | **175\\.144** || Te\\_rel | 6 | 175\\.141 || **I** | **7** | **175\\.712** || **Xe** | **8** | **153\\.021** || **Cs\\_sv** | **9** | **220\\.727** || **Ba\\_sv** | **10** | **186\\.981** || **La** | **11** | **219\\.044** || La\\_s | 9 | 136\\.594 || **Ce** | **12** | **299\\.927** || Ce\\_h | 12 | 299\\.927 || Ce\\_s | 10 | 173\\.613 || Hf | 4 | 220\\.431 || **Hf\\_pv** | **10** | **220\\.431** || Hf\\_sv | 12 | 237\\.414 || Ta | 5 | 223\\.759 || **Ta\\_pv** | **11** | **223\\.759** || W | 6 | 223\\.126 || W\\_pv | 12 | 223\\.126 || **Re** | **7** | **226\\.25** || Re\\_pv | 13 | 226\\.25 || **Os** | **8** | **228\\.023** || Os\\_pv | 14 | 228\\.023 || **Ir** | **9** | **210\\.837** || **Pt** | **10** | **230\\.228** || Pt\\_new | 10 | 230\\.228 || **Au** | **11** | **229\\.869** || Au\\_new | 11 | 229\\.869 || **Hg** | **12** | **233\\.142** || Tl | 3 | 90\\.239 || **Tl\\_d** | **13** | **237\\.001** || Pb | 4 | 98\\.039 || **Pb\\_d** | **14** | **237\\.817** || Pb\\_dr | 4 | 98\\.041 || Bi | 5 | 105\\.071 || **Bi\\_d** | **15** | **242\\.856** || Bi\\_pv | 21 | 309\\.184 || Po | 6 | 159\\.801 || **Po\\_d** | **16** | **264\\.606** || **At** | **7** | **161\\.481** || At\\_d | 17 | 266\\.303 || **Rn** | **8** | **152\\.086** || **Fr\\_sv** | **9** | **214\\.489** || **Ra\\_sv** | **10** | **237\\.216** || **Ac** | **11** | **170\\.048** || Ac\\_s | 9 | 119\\.996 || **Th** | **12** | **247\\.389** || Th\\_s | 10 | 169\\.575 || **Pa** | **13** | **252\\.31** || Pa\\_s | 11 | 193\\.642 || **U** | **14** | **252\\.603** || U\\_s | 14 | 209\\.218 || **Np** | **15** | **254\\.349** || Np\\_s | 15 | 213\\.932 || **Pu** | **16** | **254\\.436** || Pu\\_s | 16 | 211\\.493 | | List of PW91 potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **H** | **1** | **250\\.0** || H.5 | 0\\.5 | 250\\.0 || H.75 | 0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 250\\.0 || H1\\.5 | 1\\.5 | 250\\.0 || H\\_h | 1 | 700\\.0 || **He** | **2** | **400\\.0** || Li | 1 | 140\\.0 || **Li\\_sv** | **3** | **271\\.798** || **Be** | **2** | **300\\.0** || Be\\_sv | 4 | 308\\.815 || **B** | **3** | **318\\.644** || B\\_h | 3 | 700\\.0 || B\\_s | 3 | 250\\.0 || **C** | **4** | **400\\.0** || C\\_h | 4 | 700\\.0 || C\\_s | 4 | 273\\.894 || **N** | **5** | **400\\.0** || N\\_h | 5 | 700\\.0 || N\\_s | 5 | 250\\.0 || **O** | **6** | **400\\.0** || O\\_h | 6 | 700\\.0 || O\\_s | 6 | 250\\.0 || **F** | **7** | **400\\.0** || F\\_h | 7 | 700\\.0 || F\\_s | 7 | 250\\.0 || **Ne** | **8** | **343\\.681** || Na | 1 | 81\\.389 || **Na\\_pv** | **7** | **300\\.0** || Na\\_sv | 9 | 700\\.0 || **Mg** | **2** | **210\\.083** || Mg\\_pv | 8 | 265\\.602 || **Al** | **3** | **240\\.437** || Al\\_h | 3 | 295\\.008 || **Si** | **4** | **245\\.435** || Si\\_h | 4 | 380\\.358 || **P** | **5** | **270\\.0** || P\\_h | 5 | 390\\.361 || **S** | **6** | **280\\.0** || S\\_h | 6 | 402\\.548 || **Cl** | **7** | **280\\.0** || Cl\\_h | 7 | 409\\.2 || **Ar** | **8** | **266\\.356** || K\\_pv | 7 | 150\\.0 || **K\\_sv** | **9** | **259\\.333** || Ca | 2 | 102\\.811 || Ca\\_pv | 8 | 150\\.0 || **Ca\\_sv** | **10** | **290\\.424** || Sc | 3 | 154\\.804 || **Sc\\_sv** | **11** | **222\\.696** || Ti | 4 | 178\\.367 || Ti\\_pv | 10 | 222\\.364 || **Ti\\_sv** | **12** | **274\\.616** || V | 5 | 192\\.578 || V\\_pv | 11 | 263\\.695 || **V\\_sv** | **13** | **263\\.695** || Cr | 6 | 227\\.109 || **Cr\\_pv** | **12** | **265\\.704** || Mn | 7 | 269\\.887 || **Mn\\_pv** | **13** | **269\\.887** || **Fe** | **8** | **267\\.907** || Fe\\_pv | 14 | 293\\.258 || Fe\\_sv | 16 | 390\\.561 || **Co** | **9** | **267\\.995** || **Ni** | **10** | **269\\.561** || Ni\\_pv | 16 | 367\\.921 || **Cu** | **11** | **273\\.246** || Cu\\_pv | 17 | 368\\.583 || **Zn** | **12** | **276\\.749** || Ga | 3 | 134\\.733 || **Ga\\_d** | **13** | **282\\.718** || Ga\\_h | 13 | 404\\.633 || Ge | 4 | 173\\.845 || **Ge\\_d** | **14** | **287\\.594** || Ge\\_h | 14 | 410\\.475 || **As** | **5** | **208\\.733** || **Se** | **6** | **211\\.557** || **Br** | **7** | **216\\.262** || **Kr** | **8** | **185\\.301** || Rb\\_pv | 7 | 121\\.969 || **Rb\\_sv** | **9** | **220\\.155** || **Sr\\_sv** | **10** | **226\\.196** || **Y\\_sv** | **11** | **211\\.698** || Zr | 4 | 154\\.655 || **Zr\\_sv** | **12** | **229\\.898** || Nb\\_pv | 11 | 207\\.286 || **Nb\\_sv** | **13** | **293\\.199** || Mo | 6 | 224\\.58 || Mo\\_pv | 12 | 224\\.58 || Tc | 7 | 228\\.688 || **Tc\\_pv** | **13** | **228\\.688** || Ru | 8 | 213\\.271 || **Ru\\_pv** | **14** | **230\\.419** || Ru\\_sv | 16 | 325\\.765 || Rh | 9 | 228\\.993 || **Rh\\_pv** | **15** | **271\\.449** || **Pd** | **10** | **250\\.918** || Pd\\_pv | 16 | 350\\.0 || **Ag** | **11** | **249\\.842** || **Cd** | **12** | **274\\.325** || In | 3 | 95\\.997 || **In\\_d** | **13** | **239\\.209** || Sn | 4 | 103\\.267 || **Sn\\_d** | **14** | **241\\.09** || **Sb** | **5** | **172\\.1** || **Te** | **6** | **174\\.996** || **I** | **7** | **175\\.639** || **Xe** | **8** | **153\\.081** || **Cs\\_sv** | **9** | **220\\.143** || **Ba\\_sv** | **10** | **187\\.204** || **La** | **11** | **219\\.271** || La\\_s | 9 | 136\\.553 || **Ce** | **12** | **300\\.014** || Ce\\_3 | 11 | 181\\.336 || Ce\\_s | 10 | 169\\.178 || Pr | 13 | 252\\.521 || **Pr\\_3** | **11** | **181\\.693** || Nd | 14 | 253\\.289 || **Nd\\_3** | **11** | **182\\.593** || Pm | 15 | 258\\.471 || **Pm\\_3** | **11** | **183\\.955** || Sm | 16 | 255\\.347 || Sm\\_2 | 10 | 183\\.22 || **Sm\\_3** | **11** | **184\\.729** || Eu | 17 | 249\\.776 || **Eu\\_2** | **8** | **99\\.303** || Gd | 18 | 256\\.563 || **Gd\\_3** | **9** | **154\\.375** || **Tb\\_3** | **9** | **155\\.659** || **Dy\\_3** | **9** | **155\\.765** || **Ho\\_3** | **9** | **154\\.194** || **Er\\_3** | **9** | **155\\.099** || Tm | 23 | 257\\.516 || **Tm\\_3** | **9** | **154\\.002** || Yb | 24 | 291\\.902 || **Yb\\_2** | **8** | **112\\.547** || **Lu\\_3** | **9** | **155\\.066** || Hf | 4 | 220\\.361 || **Hf\\_pv** | **10** | **220\\.361** || Ta | 5 | 223\\.688 || **Ta\\_pv** | **11** | **223\\.688** || W | 6 | 223\\.072 || W\\_pv | 12 | 223\\.072 || **Re** | **7** | **226\\.223** || Re\\_pv | 13 | 226\\.223 || **Os** | **8** | **228\\.022** || Os\\_pv | 14 | 228\\.022 || **Ir** | **9** | **210\\.865** || **Pt** | **10** | **230\\.277** || **Au** | **11** | **229\\.938** || **Hg** | **12** | **233\\.196** || Tl | 3 | 90\\.216 || **Tl\\_d** | **13** | **237\\.04** || Pb | 4 | 98\\.004 || **Pb\\_d** | **14** | **237\\.829** || Bi | 5 | 105\\.043 || **Bi\\_d** | **15** | **242\\.843** || **Ac** | **11** | **169\\.923** || Ac\\_s | 9 | 119\\.913 || **Th** | **12** | **247\\.429** || Th\\_s | 10 | 169\\.492 || **Pa** | **13** | **252\\.303** || Pa\\_s | 11 | 193\\.575 || **U** | **14** | **252\\.603** || U\\_s | 14 | 209\\.102 || **Np** | **15** | **254\\.354** || Np\\_s | 15 | 210\\.883 || **Pu** | **16** | **254\\.444** || Pu\\_s | 16 | 211\\.377 | | List of PBE potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **H** | **1** | **250\\.0** || H.5 | 0\\.5 | 250\\.0 || H.75 | 0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 250\\.0 || H1\\.5 | 1\\.5 | 250\\.0 || H\\_h | 1 | 700\\.0 || **He** | **2** | **478\\.896** || Li | 1 | 140\\.0 || **Li\\_sv** | **3** | **499\\.034** || Li\\_sv2 | 3 | 555\\.106 || **Be** | **2** | **247\\.544** || Be\\_sv | 4 | 308\\.75 || **B** | **3** | **318\\.606** || B\\_h | 3 | 700\\.0 || B\\_s | 3 | 269\\.245 || **C** | **4** | **400\\.0** || C\\_d | 4 | 413\\.992 || C\\_h | 4 | 700\\.0 || C\\_h\\_nr | 4 | 741\\.684 || C\\_s | 4 | 273\\.901 || runelements | 4 | 400\\.0 || **N** | **5** | **400\\.0** || N\\_h | 5 | 700\\.0 || N\\_s | 5 | 279\\.68 || N\\_vs | 5 | 279\\.68 || **O** | **6** | **400\\.0** || O\\_h | 6 | 700\\.0 || O\\_s | 6 | 282\\.841 || O\\_sv | 8 | 1421\\.493 || **F** | **7** | **400\\.0** || F\\_h | 7 | 700\\.0 || F\\_s | 7 | 289\\.825 || **Ne** | **8** | **343\\.606** || Na | 1 | 101\\.968 || **Na\\_pv** | **7** | **259\\.561** || Na\\_sv | 9 | 700\\.0 || **Mg** | **2** | **210\\.012** || Mg\\_new | 2 | 126\\.143 || Mg\\_pv | 8 | 403\\.929 || Mg\\_pv.old | 8 | 265\\.574 || Mg\\_sv | 10 | 495\\.223 || **Al** | **3** | **240\\.3** || **Si** | **4** | **245\\.345** || Si\\_h | 4 | 380\\.146 || Si\\_h\\_old | 4 | 380\\.146 || Si\\_nopc | 4 | 245\\.345 || runelements\\_PBE0 | 4 | 245\\.345 || **P** | **5** | **270\\.0** || P\\_h | 5 | 390\\.202 || **S** | **6** | **280\\.0** || S\\_h | 6 | 402\\.436 || **Cl** | **7** | **280\\.0** || Cl\\_h | 7 | 409\\.136 || **Ar** | **8** | **266\\.393** || K\\_pv | 7 | 116\\.731 || **K\\_sv** | **9** | **259\\.216** || Ca | 2 | 102\\.755 || Ca\\_pv | 8 | 119\\.554 || **Ca\\_sv** | **10** | **266\\.586** || Sc | 3 | 154\\.763 || **Sc\\_sv** | **11** | **222\\.664** || Sc\\_sv\\_h | 11 | 380\\.696 || Ti | 4 | 178\\.33 || Ti\\_pv | 10 | 222\\.338 || **Ti\\_sv** | **12** | **274\\.574** || Ti\\_sv\\_h | 12 | 388\\.698 || Ti\\_sv\\_new | 12 | 274\\.61 || Ti\\_sv\\_new2 | 12 | 274\\.61 || runelements2 | 12 | 863\\.342 || V | 5 | 192\\.543 || V\\_pv | 11 | 263\\.675 || **V\\_sv** | **13** | **263\\.675** || V\\_sv\\_h | 13 | 390\\.664 || V\\_sv\\_new | 13 | 263\\.673 || Cr | 6 | 227\\.082 || **Cr\\_pv** | **12** | **265\\.683** || Cr\\_pv\\_new | 12 | 265\\.681 || Cr\\_sv | 14 | 395\\.471 || Cr\\_sv\\_new | 14 | 395\\.471 || Mn | 7 | 269\\.865 || **Mn\\_pv** | **13** | **269\\.865** || Mn\\_pv\\_new | 13 | 269\\.864 || Mn\\_sv | 15 | 387\\.187 || **Fe** | **8** | **267\\.883** || Fe\\_pv | 14 | 293\\.238 || Fe\\_pv\\_new | 14 | 293\\.238 || Fe\\_sv | 16 | 390\\.558 || Fe\\_sv\\_h | 16 | 547\\.365 || **Co** | **9** | **267\\.969** || Co\\_new | 9 | 267\\.968 || Co\\_sv | 17 | 390\\.362 || **Ni** | **10** | **269\\.533** || Ni\\_new | 10 | 269\\.532 || Ni\\_pv | 16 | 367\\.945 || **Cu** | **11** | **273\\.214** || Cu\\_f | 11 | 295\\.446 || Cu\\_new | 11 | 295\\.446 || Cu\\_pv | 17 | 368\\.605 || Cu\\_pvf | 17 | 368\\.648 || **Zn** | **12** | **276\\.727** || Zn\\_pv | 18 | 376\\.607 || Ga | 3 | 134\\.678 || **Ga\\_d** | **13** | **282\\.697** || Ga\\_h | 13 | 404\\.601 || Ga\\_s | 3 | 83\\.836 || Ge | 4 | 173\\.807 || **Ge\\_d** | **14** | **310\\.294** || Ge\\_d3 | 14 | 226\\.106 || Ge\\_h | 14 | 410\\.425 || **As** | **5** | **208\\.68** || As\\_d | 15 | 288\\.651 || **Se** | **6** | **211\\.534** || **Br** | **7** | **216\\.264** || **Kr** | **8** | **185\\.26** || Rb\\_pv | 7 | 121\\.919 || **Rb\\_sv** | **9** | **220\\.022** || **Sr\\_sv** | **10** | **229\\.282** || **Y\\_sv** | **11** | **211\\.641** || Zr | 4 | 154\\.632 || **Zr\\_sv** | **12** | **229\\.839** || Zr\\_sv\\_new | 12 | 229\\.898 || Nb\\_pv | 11 | 208\\.608 || **Nb\\_sv** | **13** | **293\\.235** || Nb\\_sv\\_new | 13 | 293\\.235 || Mo | 6 | 224\\.584 || Mo\\_pv | 12 | 224\\.584 || Mo\\_pv\\_new | 12 | 224\\.584 || **Mo\\_sv** | **14** | **242\\.676** || Tc | 7 | 228\\.694 || Tc\\_new | 7 | 228\\.694 || **Tc\\_pv** | **13** | **228\\.699** || Tc\\_pv\\_new | 13 | 263\\.523 || Ru | 8 | 213\\.276 || Ru\\_new | 8 | 213\\.271 || **Ru\\_pv** | **14** | **230\\.429** || Ru\\_pv\\_new | 14 | 240\\.049 || Ru\\_sv | 16 | 318\\.855 || Rh | 9 | 229\\.0 || Rh\\_new | 9 | 228\\.996 || **Rh\\_pv** | **15** | **271\\.47** || Rh\\_pv\\_new | 15 | 247\\.408 || **Pd** | **10** | **250\\.925** || Pd\\_new | 10 | 250\\.925 || Pd\\_pv | 16 | 271\\.098 || Pd\\_pv\\_new | 16 | 250\\.925 || Pd\\_vnew | 10 | 250\\.925 || **Ag** | **11** | **249\\.846** || Ag\\_new | 11 | 249\\.844 || Ag\\_pv | 17 | 297\\.865 || **Cd** | **12** | **274\\.342** || In | 3 | 95\\.934 || **In\\_d** | **13** | **239\\.218** || Sn | 4 | 103\\.236 || **Sn\\_d** | **14** | **241\\.09** || **Sb** | **5** | **172\\.037** || **Te** | **6** | **174\\.982** || Te\\_rel | 6 | 174\\.979 || **I** | **7** | **175\\.647** || **Xe** | **8** | **153\\.098** || **Cs\\_sv** | **9** | **220\\.318** || **Ba\\_sv** | **10** | **187\\.21** || **La** | **11** | **219\\.313** || La\\_s | 9 | 136\\.552 || **Ce** | **12** | **273\\.042** || Ce\\_3 | 11 | 181\\.286 || Ce\\_h | 12 | 299\\.9 || Pr | 13 | 272\\.941 || **Pr\\_3** | **11** | **182\\.312** || Nd | 14 | 253\\.189 || **Nd\\_3** | **11** | **182\\.546** || Pm | 15 | 258\\.627 || **Pm\\_3** | **11** | **183\\.908** || Sm | 16 | 257\\.515 || **Sm\\_3** | **11** | **177\\.087** || Eu | 17 | 249\\.668 || **Eu\\_2** | **8** | **99\\.304** || Eu\\_3 | 9 | 129\\.057 || Gd | 18 | 256\\.472 || **Gd\\_3** | **9** | **154\\.348** || Tb | 19 | 264\\.824 || **Tb\\_3** | **9** | **155\\.628** || Dy | 20 | 255\\.467 || **Dy\\_3** | **9** | **155\\.729** || Ho | 21 | 257\\.168 || **Ho\\_3** | **9** | **154\\.153** || Er | 22 | 298\\.116 || Er\\_2 | 8 | 119\\.75 || **Er\\_3** | **9** | **155\\.053** || Tm | 23 | 257\\.419 || **Tm\\_3** | **9** | **149\\.221** || Yb | 24 | 253\\.028 || **Yb\\_2** | **8** | **112\\.543** || Yb\\_2\\_n | 10 | 144\\.685 || Lu | 25 | 255\\.695 || **Lu\\_3** | **9** | **155\\.009** || Hf | 4 | 220\\.333 || **Hf\\_pv** | **10** | **220\\.342** || Hf\\_sv | 12 | 237\\.444 || Ta | 5 | 223\\.667 || **Ta\\_pv** | **11** | **223\\.675** || W | 6 | 223\\.057 || W\\_pv | 12 | 223\\.065 || W\\_pv\\_new | 12 | 223\\.057 || **Re** | **7** | **226\\.216** || Re\\_pv | 13 | 226\\.223 || **Os** | **8** | **228\\.022** || Os\\_pv | 14 | 228\\.022 || **Ir** | **9** | **210\\.87** || **Pt** | **10** | **230\\.283** || Pt\\_ZORA | 10 | 230\\.281 || Pt\\_new | 10 | 230\\.283 || Pt\\_pv | 16 | 294\\.607 || Pt\\_pv\\_ZORA | 16 | 294\\.604 || **Au** | **11** | **229\\.948** || Au\\_new | 11 | 229\\.943 || **Hg** | **12** | **233\\.214** || Tl | 3 | 90\\.14 || **Tl\\_d** | **13** | **237\\.063** || Pb | 4 | 97\\.973 || **Pb\\_d** | **14** | **237\\.846** || Pb\\_d\\_rel | 14 | 237\\.809 || Pb\\_d\\_rel2 | 14 | 237\\.809 || Bi | 5 | 105\\.037 || **Bi\\_d** | **15** | **242\\.851** || Bi\\_pv | 21 | 309\\.187 || Po | 6 | 159\\.707 || **Po\\_d** | **16** | **264\\.565** || **At** | **7** | **161\\.43** || At\\_d | 17 | 266\\.251 || **Rn** | **8** | **152\\.121** || **Fr\\_sv** | **9** | **214\\.54** || **Ra\\_sv** | **10** | **237\\.367** || **Ac** | **11** | **172\\.237** || **Th** | **12** | **247\\.449** || Th\\_s | 10 | 169\\.492 || **Pa** | **13** | **252\\.316** || Pa\\_s | 11 | 193\\.576 || **U** | **14** | **252\\.616** || U\\_s | 14 | 209\\.069 || **Np** | **15** | **254\\.369** || Np\\_s | 15 | 210\\.851 || **Pu** | **16** | **254\\.458** || Pu\\_h | 16 | 444\\.783 || Pu\\_s | 16 | 211\\.344 || **Am** | **17** | **255\\.875** | #### GW potentials | List of LDA potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **H\\_GW** | **1** | **400\\.725** || H\\_h\\_GW | 1 | 822\\.759 || H\\_nc\\_GW | 1 | 1000\\.0 || **He\\_GW** | **2** | **404\\.806** || Li\\_AE\\_GW | 3 | 433\\.253 || Li\\_AE\\_GW2 | 3 | 509\\.283 || Li\\_GW | 1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **433\\.253** || Li\\_sv\\_GW\\_ | 3 | 433\\.253 || Be\\_AE\\_GW | 4 | 536\\.216 || Be\\_GW | 2 | 247\\.951 || **B\\_GW** | **3** | **318\\.762** || **C\\_GW** | **4** | **413\\.992** || C\\_f\\_GW | 4 | 742\\.464 || C\\_h\\_GW | 4 | 742\\.464 || C\\_nc\\_GW | 4 | 1261\\.234 || **N\\_GW** | **5** | **420\\.681** || N\\_s\\_GW | 5 | 296\\.222 || **O\\_GW** | **6** | **414\\.315** || O\\_h\\_GW | 6 | 765\\.442 || O\\_s\\_GW | 6 | 300\\.418 || **F\\_GW** | **7** | **487\\.335** || F\\_d\\_GW | 7 | 487\\.335 || F\\_h\\_GW | 7 | 772\\.351 || **Ne\\_GW** | **8** | **400\\.0** || Ne\\_GW2 | 8 | 317\\.594 || Na\\_GW | 1 | 81\\.642 || Na\\_pv\\_GW | 7 | 259\\.494 || **Na\\_sv\\_GW** | **9** | **260\\.372** || Mg\\_GW | 2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 403\\.538 || Mg\\_pv\\_parsv\\_GW | 8 | 454\\.933 || **Mg\\_sv\\_GW** | **10** | **473\\.54** || Al\\_d\\_GW | 3 | 240\\.957 || Al\\_sv\\_GW | 11 | 411\\.007 || Si\\_d\\_GW | 4 | 245\\.704 || Si\\_d\\_GW\\_nr | 4 | 245\\.702 || Si\\_f\\_GW | 4 | 245\\.704 || Si\\_sv\\_GW | 12 | 546\\.548 || Si\\_sv\\_GW\\_ | 12 | 475\\.15 || Si\\_sv\\_GW\\_\\_ | 12 | 546\\.548 || Si\\_sv\\_GW\\_nr | 12 | 475\\.153 || P\\_d\\_GW | 5 | 255\\.155 || S\\_d\\_GW | 6 | 258\\.602 || Cl\\_d\\_GW | 7 | 262\\.25 || **Ar\\_GW** | **8** | **266\\.101** || **Ti\\_sv\\_GW** | **12** | **312\\.205** || Mn\\_GW | 7 | 278\\.537 || Mn\\_pv\\_GW | 13 | 352\\.359 || **Mn\\_sv\\_GW** | **15** | **357\\.618** || Fe\\_GW | 8 | 321\\.044 || Fe\\_pv\\_GW | 14 | 365\\.183 || **Fe\\_sv\\_GW** | **16** | **402\\.658** || Fe\\_sv\\_GW\\_f | 16 | 443\\.614 || Co\\_GW | 9 | 323\\.447 || Co\\_pv\\_GW | 15 | 364\\.275 || **Co\\_sv\\_GW** | **17** | **363\\.483** || Ni\\_GW | 10 | 357\\.352 || Ni\\_pv\\_GW | 16 | 367\\.726 || **Ni\\_sv\\_GW** | **18** | **485\\.721** || Cu\\_GW | 11 | 417\\.032 || Cu\\_GW\\_h | 11 | 971\\.8 || Cu\\_pv\\_GW | 17 | 466\\.991 || Zn\\_GW | 12 | 360\\.353 || Zn\\_GW.old | 12 | 401\\.745 || Zn\\_GW2 | 12 | 556\\.955 || Zn\\_pv\\_GW | 18 | 401\\.745 || Zn\\_pv\\_GW.old | 18 | 499\\.462 || **Zn\\_sv\\_GW** | **20** | **499\\.462** || Zn\\_sv\\_GW.old | 20 | 1708\\.968 || Zn\\_sv\\_GW\\_ | 20 | 499\\.462 || Ga\\_GW | 3 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **369\\.987** || Ga\\_d\\_GW.old | 13 | 333\\.963 || Ga\\_pv\\_GW | 19 | 422\\.752 || Ga\\_pv\\_GW.nrel | 19 | 422\\.391 || Ga\\_pv\\_GW.old | 19 | 449\\.579 || Ga\\_sv\\_GW | 21 | 503\\.451 || Ga\\_sv\\_GW.old | 21 | 449\\.579 || Ga\\_sv\\_GW2 | 21 | 642\\.887 || Ge\\_GW | 4 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **310\\.448** || **As\\_GW** | **5** | **208\\.87** || As\\_GW\\_n | 5 | 208\\.87 || As\\_d2\\_GW | 15 | 752\\.859 || As\\_d\\_GW | 15 | 863\\.991 || **Se\\_GW** | **6** | **211\\.602** || **Kr\\_GW** | **8** | **185\\.392** || **Zr\\_sv\\_GW** | **12** | **307\\.802** || Ru\\_GW | 8 | 230\\.359 || Ru\\_f\\_GW | 8 | 268\\.875 || Ru\\_pv\\_GW | 14 | 239\\.907 || Rh\\_GW | 9 | 247\\.321 || Rh\\_f\\_GW | 9 | 247\\.321 || Rh\\_pv\\_GW | 15 | 247\\.321 || Pd\\_GW | 10 | 250\\.832 || Pd\\_f\\_GW | 10 | 250\\.832 || Ag\\_GW | 11 | 249\\.752 || Ag\\_f\\_GW | 11 | 249\\.752 || Cd\\_GW | 12 | 361\\.653 || Cd\\_GW.old | 12 | 274\\.265 || Cd\\_f\\_GW | 12 | 217\\.846 || Cd\\_pv\\_GW | 18 | 396\\.576 || **Cd\\_sv\\_GW** | **20** | **650\\.91** || **In\\_d\\_GW** | **13** | **278\\.582** || Sn\\_GW | 4 | 103\\.318 || Sb\\_GW | 5 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **263\\.147** || **Te\\_GW** | **6** | **175\\.144** || **Xe\\_GW** | **8** | **179\\.528** || **Hf\\_sv\\_GW** | **12** | **296\\.646** || Pt\\_f\\_GW | 10 | 248\\.657 || **Pb\\_d\\_GW** | **14** | **237\\.793** || **Bi\\_d\\_GW** | **15** | **242\\.856** | | List of PBE potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **C\\_GW** | **4** | **413\\.992** || N\\_s\\_GW | 5 | 296\\.495 || **O\\_GW** | **6** | **414\\.635** || O\\_s\\_GW | 6 | 300\\.688 || F\\_d\\_GW | 7 | 487\\.698 || Mg\\_pv\\_GW | 8 | 403\\.929 || Si\\_d\\_GW | 4 | 245\\.345 || Si\\_d\\_GW\\_nr | 4 | 245\\.338 || Si\\_pv\\_GW | 10 | 475\\.096 || Si\\_sv\\_GW | 12 | 475\\.096 || Si\\_sv\\_GW\\_nr | 12 | 475\\.101 || **Ti\\_sv\\_GW** | **12** | **312\\.571** || **Ga\\_d\\_GW** | **13** | **369\\.848** || Ga\\_sv\\_GW | 21 | 503\\.418 || **Ge\\_d\\_GW** | **14** | **310\\.294** || Ge\\_d\\_GW2 | 14 | 339\\.13 || Ge\\_d\\_GW\\_ref | 14 | 572\\.01 || **As\\_GW** | **5** | **208\\.702** || As\\_d\\_GW | 15 | 346\\.172 || **Se\\_GW** | **6** | **211\\.555** || **Zr\\_sv\\_GW** | **12** | **307\\.836** || Sn\\_GW | 4 | 103\\.236 || Eu\\_GW | 17 | 603\\.254 || **Hf\\_sv\\_GW** | **12** | **317\\.394** | ### Ultrasoft pseudopotentials for LDA and PW91 (2002\\) Ultrasoft pseudo potentials for LDA and PW91 (dated 2002\\-08\\-20 and 2002\\-04\\-08, respectively). These files are outdated, not supported and only distributed as is. Some VASP feature might yield undesired results with these files (e.g. METAGGA). | List of LDA potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || H.75 | 0\\.75 | 200\\.0 || H1\\.25 | 1\\.25 | 200\\.0 || H\\_200eV | 1 | 200\\.0 || H\\_soft | 1 | 150\\.0 || Li | 1 | 76\\.427 || Li\\_h | 1 | 200\\.0 || Li\\_pv | 1 | 200\\.0 || **Be** | **2** | **251\\.805** || **B** | **3** | **257\\.148** || B\\_s | 3 | 207\\.526 || **C** | **4** | **286\\.567** || C\\_s | 4 | 211\\.061 || **N** | **5** | **347\\.853** || N\\_s | 5 | 224\\.546 || **O** | **6** | **395\\.7** || O\\_s | 6 | 269\\.946 || **F** | **7** | **424\\.54** || F\\_s | 7 | 272\\.497 || **Ne** | **8** | **359\\.508** || Na | 1 | 49\\.003 || Na\\_h | 1 | 165\\.481 || **Na\\_pv** | **7** | **216\\.702** || **Mg** | **2** | **106\\.255** || Mg\\_h | 2 | 250\\.0 || Mg\\_pv | 8 | 366\\.368 || **Al** | **3** | **129\\.206** || Al\\_h | 3 | 250\\.0 || **Si** | **4** | **150\\.544** || Si\\_h | 4 | 300\\.0 || **P** | **5** | **173\\.366** || **S** | **6** | **197\\.787** || **Cl** | **7** | **219\\.242** || **Ar** | **8** | **215\\.808** || K | 1 | 70\\.923 || K\\_pv | 7 | 146\\.685 || K\\_s | 1 | 35\\.993 || Ca | 2 | 104\\.743 || Ca\\_pv | 8 | 400\\.0 || Sc | 3 | 150\\.21 || Sc\\_pv | 9 | 178\\.616 || Ti | 4 | 181\\.353 || Ti\\_pv | 10 | 222\\.444 || V | 5 | 211\\.721 || V\\_pv | 11 | 263\\.722 || Cr | 6 | 227\\.21 || Mn | 7 | 227\\.24 || **Mn\\_pv** | **13** | **227\\.24** || **Fe** | **8** | **237\\.587** || **Co** | **9** | **236\\.542** || **Ni** | **10** | **241\\.683** || **Cu** | **11** | **233\\.781** || **Zn** | **12** | **209\\.61** || Ga | 3 | 129\\.849 || **Ga\\_d** | **13** | **213\\.675** || Ge | 4 | 139\\.215 || **As** | **5** | **144\\.267** || **Se** | **6** | **155\\.091** || **Br** | **7** | **165\\.656** || **Kr** | **8** | **167\\.754** || Rb | 1 | 63\\.553 || Rb\\_pv | 7 | 122\\.21 || Rb\\_s | 1 | 31\\.936 || Sr | 2 | 85\\.927 || Sr\\_pv | 8 | 119\\.124 || Y | 3 | 119\\.285 || Y\\_pv | 9 | 119\\.285 || Zr | 4 | 149\\.994 || Zr\\_pv | 10 | 149\\.994 || Nb | 5 | 174\\.786 || Nb\\_pv | 11 | 174\\.786 || Mo | 6 | 186\\.479 || Mo\\_pv | 12 | 186\\.479 || Tc | 7 | 195\\.876 || Ru | 8 | 203\\.565 || Rh | 9 | 205\\.46 || **Pd** | **10** | **198\\.955** || **Ag** | **11** | **180\\.602** || **Cd** | **12** | **167\\.891** || In | 3 | 91\\.885 || **In\\_d** | **13** | **151\\.593** || Sn | 4 | 106\\.396 || **Sn\\_d** | **14** | **175\\.475** || **Sb** | **5** | **106\\.592** || **Te** | **6** | **114\\.866** || **I** | **7** | **122\\.098** || **Xe** | **8** | **124\\.672** || Cs | 1 | 47\\.984 || Cs\\_pv | 7 | 106\\.139 || Ba\\_pv | 8 | 101\\.184 || Hf | 4 | 149\\.521 || W | 6 | 188\\.254 || **Re** | **7** | **193\\.9** || **Os** | **8** | **201\\.567** || **Ir** | **9** | **198\\.239** || **Pt** | **10** | **191\\.383** || **Au** | **11** | **179\\.692** || **Hg** | **12** | **158\\.977** || **Tl\\_d** | **13** | **177\\.499** || Bi | 5 | 99\\.087 || Pb | 4 | 88\\.444 || **Pb\\_d** | **14** | **144\\.342** || **Bi\\_d** | **15** | **242\\.856** | | List of PW91 potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || H\\_200eV | 1 | 200\\.0 || H\\_soft | 1 | 150\\.0 || Li | 1 | 76\\.254 || Li\\_h | 1 | 250\\.0 || Li\\_pv | 1 | 250\\.0 || **Be** | **2** | **251\\.408** || **B** | **3** | **257\\.17** || B\\_s | 3 | 207\\.644 || **C** | **4** | **286\\.744** || C\\_s | 4 | 211\\.293 || **N** | **5** | **348\\.097** || N\\_s | 5 | 224\\.806 || **O** | **6** | **395\\.994** || O\\_s | 6 | 270\\.222 || **F** | **7** | **424\\.865** || F\\_s | 7 | 272\\.744 || **Ne** | **8** | **359\\.508** || Na | 1 | 48\\.686 || Na\\_h | 1 | 165\\.08 || **Na\\_pv** | **7** | **300\\.769** || **Mg** | **2** | **106\\.148** || Mg\\_h | 2 | 250\\.0 || Mg\\_pv | 8 | 365\\.887 || **Al** | **3** | **129\\.208** || Al\\_h | 3 | 250\\.0 || **Si** | **4** | **150\\.615** || Si\\_h | 4 | 300\\.0 || **P** | **5** | **173\\.498** || **S** | **6** | **197\\.97** || **Cl** | **7** | **219\\.471** || **Ar** | **8** | **215\\.808** || K | 1 | 70\\.923 || K\\_pv | 7 | 140\\.0 || Ca | 2 | 104\\.434 || Ca\\_pv | 8 | 300\\.0 || Sc | 3 | 150\\.002 || Sc\\_pv | 9 | 178\\.471 || Ti | 4 | 181\\.203 || Ti\\_pv | 10 | 222\\.373 || V | 5 | 211\\.612 || V\\_pv | 11 | 243\\.767 || Cr | 6 | 227\\.117 || Mn | 7 | 227\\.152 || **Fe** | **8** | **237\\.51** || **Co** | **9** | **236\\.473** || **Ni** | **10** | **241\\.622** || **Cu** | **11** | **233\\.729** || **Zn** | **12** | **209\\.545** || Ga | 3 | 129\\.795 || **Ga\\_d** | **13** | **213\\.598** || Ge | 4 | 139\\.187 || **As** | **5** | **144\\.302** || **Se** | **6** | **155\\.175** || **Br** | **7** | **165\\.786** || **Kr** | **8** | **167\\.754** || Rb | 1 | 63\\.093 || Rb\\_pv | 7 | 121\\.987 || Sr | 2 | 85\\.674 || Sr\\_pv | 8 | 118\\.811 || Y | 3 | 119\\.149 || Y\\_pv | 9 | 119\\.149 || Zr | 4 | 149\\.928 || Zr\\_pv | 10 | 149\\.927 || Nb | 5 | 174\\.766 || Nb\\_pv | 11 | 174\\.766 || Mo | 6 | 186\\.486 || Mo\\_pv | 12 | 186\\.486 || Tc | 7 | 195\\.904 || Ru | 8 | 203\\.611 || Rh | 9 | 205\\.518 || **Pd** | **10** | **199\\.02** || **Ag** | **11** | **180\\.67** || **Cd** | **12** | **167\\.929** || In | 3 | 91\\.829 || **In\\_d** | **13** | **151\\.604** || Sn | 4 | 106\\.334 || **Sn\\_d** | **14** | **175\\.467** || **Sb** | **5** | **106\\.59** || **Te** | **6** | **114\\.902** || **I** | **7** | **122\\.175** || **Xe** | **8** | **124\\.672** || Cs | 1 | 47\\.697 || Cs\\_pv | 7 | 101\\.438 || Ba\\_pv | 8 | 99\\.451 || Hf | 4 | 149\\.377 || Ta | 5 | 174\\.569 || W | 6 | 188\\.192 || **Re** | **7** | **193\\.873** || **Os** | **8** | **201\\.569** || **Ir** | **9** | **198\\.27** || **Pt** | **10** | **191\\.44** || **Au** | **11** | **179\\.77** || **Hg** | **12** | **159\\.06** || **Tl\\_d** | **13** | **177\\.536** || Bi | 5 | 99\\.073 || Pb | 4 | 88\\.425 || **Pb\\_d** | **14** | **144\\.354** | ### LDA \\& PBE, 5\\.2 \\& 5\\.4 (original univie release version) | **Mind:** *LDA \\& PBE, 5\\.2 \\& 5\\.4 (original univie release version)* potentials are equivalent to the potpaw.52 and potpaw.54 sets, other than some TITLE strings and missing hash keys. Thus, they are not listed explicitly here. Use them only if you need strictly identical files. || --- | Different variants specified by the suffix------------------------------------------ For most elements different variants of POTCAR files exist for each element within a specific set (e.g. potpaw\\_PBE.64\\). The different POTCAR vartiations are distinguished by their suffixes. Not all variants are available for every element or in all pseudopotential sets. | Suffix | Explanation | Example || --- | --- | --- || **\\_s** | This suffix indicates a soft potential, with a larger core radius and a lower requirement for the plane\\-wave energy cutoff. Although computation time is significantly reduced, transferability and accuracy are compromised to some extent. | The O potential has a core radius of 1\\.52 atomic units (a.u.) and ENMAX of 400 electron Volts (eV). The O\\_s potential has a core radius of 1\\.85 a.u. and a cutoff of 282\\.9 eV. || **\\_h** | This suffix signifies a hard potential, with a smaller core radius and a higher requirement for the plane\\-wave energy cutoff. Although this type of potentials increases computational cost, it might be required for some systems, particularly when dealing with short bonds. Additionally, hard potentials tend to be more transferable than soft ones. | The O\\_h potential has a core radius of 1\\.1 a.u. and ENMAX is set to 765\\.5 eV. || **\\_pv** | Semicore *p* states are considered valence states. Additionally, these types of potentials are a bit harder. Computational cost increases, but accuracy and transferability as well. | The Ti potential has four valence electrons, two in the 3*d* shell, and two in the 4*s* shell. Ti\\_pv adds six electrons in the 3*p* shell. || **\\_sv** | Semicore *p* and *s* states are considered valence states. Additionally, these types of potentials are harder than those without a suffix. Computational cost increases, but accuracy and transferability as well. | Ti\\_sv adds two more electrons, so now we have a 3*s*23*p*63*d*24*s*2 configuration with 12 total electrons || **\\_d** | Semicore *d* states are considered valence states. Additionally these type of potentials are a bit harder. Computational cost increases, but accuracy and transferability as well. | The Ge potential has four valence electrons, two in the 4*s* shell, and two in the 4*p* shell. Ge\\_d adds ten electrons in the *3d* shell. || **\\_2** or **\\_3** | Pseudopotentials with an integer suffix denote a specific valence state. These potentials are only provided for the Lanthanides. Some 4*f* electrons for these potentials are put in the frozen core, although they are higher in energy than other valence states. Be careful when using these potentials and read the section about lanthanides with fixed valence beforehand. | The Er potential has 22 valence electrons with the configuration 4*f*125*s*25*p*66*s*2 and an energy cutoff of \\~350 eV. Er\\_2 has 8 valence electrons with the configuration 5*p*66*s*2 and a recommended cutoff energy of \\~120 eV, while Er\\_3 has 9 valence electrons and the configuration 5*p*65*d*16*s*2 and a cutoff of \\~155 eV. || **\\_AE** | These potentials are only provided for H, He, and Li. They are very hard and contain all electrons (AE). These potentials are optimized to reproduce the wave functions in the atomic core region as well as possible. | Both the He and the HE\\_AE pseudopotentials contain two electrons, but the \\_AE variant has an extremely small core radius of 0\\.6 a.u. (compared to 1\\.1 a.u. for He), and ENMAX of \\~2135 eV, and EAUG of \\~2900 eV. || **\\_GW** | These potentials are optimized for calculations requiring a large number of unoccupied states well above the Fermi level. This is achieved by using different projectors and taking care to reproduce the all\\-electron scattering properties for high energies. They are superior for excited\\-state properties and any calculation considering electron\\-electron correlation like GW, RPA, BSE, and MP2\\. There are some results that indicate that the \\_GW potentials are also more accurate for ground\\-state\\-DFT calculations[\\[3]](#cite_note-bosoni:natphysrev:2023-3), but the results should be very comparable with the standard potentials in most cases. Note that the \\_GW suffix is the only one that is often combined with other suffixes. | The Ge and the Ge\\_GW potential do not differ in core\\-radius, recommended plane\\-wave\\-energy cutoff, or the reference configuration of the atom. However, the partial waves and projector functions used in the generation of the potential are different. | Related tags and sections------------------------- Pseudopotentials, POTCAR, Pseudopotential basics\"), Projector\\-augmented\\-wave formalism Simple instructions to set up a POTCAR with the correct format: Prepare a POTCAR Guide on how to check which flavor of pseudopotential is appropriate for a specific calculation: Choosing pseudopotentials"}
{"file_name": "TS_search_using_the_NEB_Method.md", "content": "Description: the Nudged Elastic Band Method generates an energy profile along a reaction path,using equidistant IMAGES along the path. The input geometries of the IMAGES are interpolated between the geometries of the initial and the final states, e.g. using the script interpolatePOSCAR, which processes the con\\-catenated POSCAR files of the initial and the final state of the reaction (POSCAR\\_if).in the case of ammonia flipping the final state is a mirror of the initial state and need not becalculated explicitely.For each IMAGE, a separate sub\\-directory 00 ... (IMAGES\\+1\\) is needed, which contains all output of the respective IMAGE. The number of cores on which VASP is run has to be an integer multiple of the number of IMAGES.   --- * INCAR  ```SYSTEM = Ammonia flippingIMAGES = 6SPRING = -5IBRION = 2NSW = 50ALGO = NPOTIM = 1.0EDIFF = 1e-6  ```   * KPOINTS  ```k-points 0 G 1 1 1  ```   * POSCAR\\_if  ```ammonia flipping  1.00000000000000    6.000000    0.000000    0.000000    0.000000    7.000000    0.000000    0.000000    0.000000    8.000000    3     1Direct 0.636428  0.567457  0.5491645 0.500000  0.364985  0.5491330 0.363572  0.567457  0.5491645 0.500000  0.500000  0.5000000ammonia flipping  1.00000000000000    6.000000    0.000000    0.000000    0.000000    7.000000    0.000000    0.000000    0.000000    8.000000    3     1Direct 0.636428  0.567457  0.4508355 0.500000  0.364985  0.4508670 0.363572  0.567457  0.4508355 0.500000  0.500000  0.5000000  ``` Download-------- ammonia\\_flipping.tgz, sub\\-folder NEB  --- To the list of examples\") or to the main page"}
{"file_name": "NATURALO.md", "content": "NATURALO= \\[integer]   Default: **NATURALO** \\= 0; for low scaling GW type calculations the default is 2nDescription: calculate RPA natural orbitals.  --- This flag should be used in combination with ALGO \\= G0W0R or ALGO \\= scGW0R. The VASP code diagonalizes the RPA densitymatrix and writes the final natural orbitals to the WAVECAR file.The one\\-electron occupancies on the WAVECAR file can also be updated to the eigenvalues of the RPA density matrix. For ALGO \\= G0W0R, the interacting Green's function is approximated as  G \\=  G  0  \\+  G  0  \u03a3  G  0 {\\\\displaystyle G\\=G\\_{0}\\+G\\_{0}\\\\Sigma G\\_{0}} whereas for ALGO \\= scGW0R the Dyson equation is solved  G \\=  G  0  \\+ G \u03a3  G  0  . {\\\\displaystyle G\\=G\\_{0}\\+G\\\\Sigma G\\_{0}.} In both cases, the RPA density matrix is determined as   \u03b3 \\=  lim  \u03c4 \u2192  0  \u2212  G ( \u03c4 ) {\\\\displaystyle \\\\gamma \\=\\\\lim \\_{\\\\tau \\\\to 0^{\\-}}G(\\\\tau )} . More details on the use of RPA natural orbitals can be found in Ref. [\\[1]](#cite_note-ramberger2019rpa-1). The following settings are currently supported * NATURALO\\=0 calculate the density matrix, diagonalize the matrix and write the natural orbitals and eigenvalues of the density matrix to the file WAVECAR. This setting is usually not particularly useful for practical calculations. * NATURALO\\=1 calculate the density matrix, diagonalize the matrix only in the sub\\-block of unoccupied states, and write the occupied Kohn Sham orbitals, as well as the natural orbitals corresponding to unoccupied states to the file WAVECAR. The unoccupied orbitals are ordered according to their occupancies in the RPA density matrix. The one\\-electron occupancies are not updated from their KS values (they will remain 1 for occupied Kohn\\-Sham orbitals and 0 for natural orbitals representing the virtual manifold). This setting has been used in Ref. [\\[1]](#cite_note-ramberger2019rpa-1). See also Ref. [\\[2]](#cite_note-GruneisNO-2) for further information. Note that all orbitals\\- even those with a tiny fractional occupancy \\-are treated as occupied orbitals and not updated: the algorithm should hence even work for metallic systems. * NATURALO\\<0\\. Similar to NATURALO\\=1 but additionally conserves ABS\\|NATURALO\\| unoccupied Kohn\\-Sham states. This is expedient, for subsequent GW and BSE calculations to conserve few unoccupied orbitals to their Kohn\\-Sham states. * If 10 is added (e.g. NATURALO\\=10, NATURALO\\=11\\) the density matrix is diagonalizes using a perturbative Loewdin algorithm that attempts to keep the orbital order strictly conserved: E.g. the natural orbital matching closest to each Kohn\\-Sham orbital will be determined and stored. Use this tag for metals. * NATURALO\\=2 (or 12\\) is similar to 0, but the one\\-electron occupancies are not updated. In rare cases this might lead to inconsistencies, if the orbital order changes between DFT and the RPA density matrix (i.e. a previously occupied DFT orbitals posses a smaller occupation in the RPA density matrix than some unoccupied Kohn\\-Sham orbitals and are moved into the unoccupied block). This problem can be reduced using NATURALO\\=12, as described above. This flag, in combination with ALGO \\= scGW0R, can be used to evaluate the GW\\-singles contribution to the correlation energy.[\\[3]](#cite_note-Klimessingles-3) One can deduct the HF singles and the GW singles energies from the energies after  ```    Energies after diagonalization of HF Hamiltonian (single shot)    Hartree-Fock free energy of the ion-electron system (eV)  ```  ```    Energies after update of density matrix    Hartree-Fock free energy of the ion-electron system (eV)  ``` Experience has shown that there is very little difference between the natural orbitals obtained using ALGO \\= G0W0R and ALGO \\= scGW0R. We strongly recommend to use the more efficient and better tested algorithm ALGO \\= G0W0R (with the exception of GW\\-singles) to determine natural orbitals. Furthermore, perform careful tests for NOMEGA: the RPA total energy converges much faster then the natural orbitals. Using a too small NOMEGA can yield natural orbitals that are non\\-optimal, leading to very slow convergence of correlated calculations with respect to the number of natural orbitals.A crucial test is that the following line  ```correlated contrib. to density matrix         0.0000004037        0.0000000000  ``` in the stdout and OUTCAR file shows values close to zero (for ALGO \\= G0W0R). The above value is perfectly acceptable and the value decreases as NOMEGA increases.  * NATURALO\\=4 preserves original (DFT) orbitals. This mode is useful if only quasi\\-particle energies are corrected with the GW method, for instance when selecting ALGO\\=EVGW0R. | **Mind:** available as of VASP.6\\.4: || --- |"}
{"file_name": "WRT_POTENTIAL.md", "content": "WRT\\_POTENTIAL= string   Default: **WRT\\_POTENTIAL** \\= NonenDescription: Select which component of the local potential to be written as a post\\-processing step.  --- WRT\\_POTENTIAL can select one or multiple local potentials on the real\\-space grid in the unit cell to be written, e.g.,  ``` WRT_POTENTIAL = total  ```  or  ``` WRT_POTENTIAL = hartree ionic  ``` The output is written to vaspout.h5 and can be accessed either by py4vasp or HDF5 command\\-line tools (h5ls, h5dump).  ```  import py4vasp as pv  calc = pv.Calculation.from_path(\".\")  pot_dict = calc.potential.read(\"total\")  ``` The above allows the creation of a Python dictionary with the potential data.  ``` h5ls -r vaspout.h5  ``` The above shows the table of contents of vaspout.h5. Depending on the keywords specified with WRT\\_POTENTIAL and the system it yields  ``` /results/potential       Group /results/potential/grid  Dataset {3} /results/potential/hartree Dataset {1, 24, 24, 24} /results/potential/ionic Dataset {1, 24, 24, 24} /results/potential/total Dataset {4, 24, 24, 24} /results/potential/xc    Dataset {4, 24, 24, 24}  ``` The grid density can be increased by choosing a higher value for ENCUT or explicitly by NGX, NGY, NGZ. The first dimension of the datasets in /results/potential is 1 for nonmagnetic calculation, 2 for spin\\-polarized calculation, and 4 for noncollinear calculations. In case the potential is scalar, i.e., has no B\\-field\\-like contribution that couples to the magnetization, only the 1st component exists. Hence, for *hartree* and *ionic*, the first dimension is 1\\. The components for the magnetic calculations correspond to the spinor representation with the scalar potential in the first component and the B\\-field in the second (ISPIN\\=2\\) or   B  1 {\\\\displaystyle B\\_{1}}  ,  B  2 {\\\\displaystyle B\\_{2}}  and  B  3 {\\\\displaystyle B\\_{3}}  in the 2nd, 3rd and 4th component (LNONCOLLINEAR\\=T) in the basis of Pauli matrices   {  \u03c3  1 {\\\\displaystyle \\\\{\\\\sigma \\_{1}}  ,  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  ,  \u03c3  3  } {\\\\displaystyle \\\\mathbf {\\\\sigma } \\_{3}\\\\}}  given by SAXIS. | **Mind:** As a convention, the      G   \\=  0   {\\\\displaystyle \\\\mathbf {G} {\\=}0}   {=}0} component in reciprocal\\-space representations of both, the Hartree and ionic, potentials are set to zero. This implies that considering the sum of the Hartree and ionic potentials is more meaningful to visualize than either potential individually. || --- | WRT\\_POTENTIAL can be run as a post\\-processing step by restarting from a converged CHGCAR and setting ALGO\\=None. It is available for VASP \\>\\= 6\\.4\\.3\\. Options to select----------------- ### total  V total  (  r  ) \\+  B total  (  r  ) \\=  V ionic  (  r  ) \\+  V hartree  (  r  ) \\+  V  xc  (  r  ) \\+  B  xc  (  r  ) {\\\\displaystyle V\\_{\\\\text{total}}(\\\\mathbf {r} )\\+B\\_{\\\\text{total}}(\\\\mathbf {r} )\\=V\\_{\\\\text{ionic}}(\\\\mathbf {r} )\\+V\\_{\\\\text{hartree}}(\\\\mathbf {r} )\\+V\\_{\\\\text{xc}}(\\\\mathbf {r} )\\+B\\_{\\\\text{xc}}(\\\\mathbf {r} )} The output is written to `/results/potential/total`, as well as LOCPOT.### hartree  V hartree  (  r  ) \\= \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  r \u2032 {\\\\displaystyle V\\_{\\\\text{hartree}}(\\\\mathbf {r} )\\=\\\\int {\\\\frac {n(\\\\mathbf {r'} )}{\\|\\\\mathbf {r} \\-\\\\mathbf {r'} \\|}}d\\\\mathbf {r'} } The output is written to `/results/potential/hartree`.### ionic  V ionic  (  r  ) {\\\\displaystyle V\\_{\\\\text{ionic}}(\\\\mathbf {r} )}  as mimicked by the pseudopotentials of the PAW method. The output is written to `/results/potential/ionic`.### xc  V  xc  (  r  ) \\+  B  xc  (  r  ) {\\\\displaystyle V\\_{\\\\text{xc}}(\\\\mathbf {r} )\\+B\\_{\\\\text{xc}}(\\\\mathbf {r} )}  as defined by the selected exchange\\-correlation functional. The output is written to `/results/potential/xc`. | **Mind:** This only corresponds to the (semi\\-)local functionals, i.e., LDA, GGA, non\\-local vdW\\-DF functionals, and does not account for either the potential     \u03bc   {\\\\displaystyle \\\\mu }  \\mu  associated with the kinetic energy density in METAGGA or the nonlocal Fock exchange considered in hybrid functionals. || --- |"}
{"file_name": "List_of_hybrid_functionals.md", "content": "A certain number of unscreened and screened hybrid functionals are available in VASP, and furthermore if VASP is compiled with the library of exchange\\-correlation functionals Libxc, then most of the existing hybrid functionals can be used[\\[1]](#cite_note-libxc_list-1). Examples of INCAR files are shown below. Since VASP.6\\.4\\.0 it is possible to use hybrid functionals that mix meta\\-GGA and Hartree\\-Fock exchange. Note that it is in general recommended to use the PBE POTCAR files for hybrid functionals. ### Range\\-separated hybrid functionals * HSE06[\\[2]](#cite_note-krukau:jcp:06-2)  ```LHFCALC = .TRUE.GGA = PEHFSCREEN = 0.2  ``` with the default values AEXX\\=0\\.25, AGGAX\\=1\\-AEXX\\=0\\.75, AGGAC\\=1, and ALDAC\\=1\\. * HSE03[\\[3]](#cite_note-heyd:jcp:03-3)[\\[4]](#cite_note-heyd:jcp:04-4)[\\[5]](#cite_note-heyd:jcp:06-5)  ```LHFCALC = .TRUE.GGA = PEHFSCREEN = 0.3  ``` with the default values AEXX\\=0\\.25, AGGAX\\=1\\-AEXX\\=0\\.75, AGGAC\\=1, and ALDAC\\=1\\. * HSEsol[\\[6]](#cite_note-schimka:jcp:11-6)  ```LHFCALC = .TRUE.GGA = PSHFSCREEN = 0.2  ``` with the default values AEXX\\=0\\.25, AGGAX\\=1\\-AEXX\\=0\\.75, AGGAC\\=1, and ALDAC\\=1\\. * Dielectric\\-dependent hybrid (DDH) functional[\\[7]](#cite_note-chen2018nonempirical-7)[\\[8]](#cite_note-cui2018doubly-8)  ```LMODELHF = .TRUE.AEXX = Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): } HFSCREEN =     \u03bc     GGA = PE  ``` where   \u03b5  \u2212 1 {\\\\displaystyle \\\\varepsilon ^{\\-1}}  is the inverse dielectric constant and   \u03bc {\\\\displaystyle \\\\mu }  is the range\\-separation parameter. See a detailed description of the DDH functionals in the documentation for the LMODELHF tag. * RSHXLDA[\\[9]](#cite_note-gerber:jcp:2007-9)  ```LHFCALC = .TRUE.LRHFCALC = .TRUE.GGA = CA (or PZ)HFSCREEN = 0.75 # Optimal value for solids  ``` with the default values AEXX\\=1, AGGAX\\=1\\-AEXX\\=0, AGGAC\\=1, and ALDAC\\=1\\. * RSHXPBE[\\[10]](#cite_note-gerber:cpl:2005-10)  ```LHFCALC = .TRUE.LRHFCALC = .TRUE.GGA = PEHFSCREEN = 0.91 # Optimal value for the enthalpies of formation of molecules  ``` with the default values AEXX\\=1, AGGAX\\=1\\-AEXX\\=0, AGGAC\\=1, and ALDAC\\=1\\. ### Unscreened hybrid functionals * PBEh (PBE0\\)[\\[11]](#cite_note-perdew:jcp:1996-11)[\\[12]](#cite_note-ernzerhof:jcp:99-12)[\\[13]](#cite_note-adamo:jcp:1999-13)  ```LHFCALC = .TRUE.GGA = PE  ``` with the default values AEXX\\=0\\.25, AGGAX\\=1\\-AEXX\\=0\\.75, AGGAC\\=1, and ALDAC\\=1\\.* B3LYP[\\[14]](#cite_note-stephens:jpc:94-14) with VWN3 (or VWN5\\) for LDA correlation  ```LHFCALC = .TRUE. GGA     = B3 (or B5)AEXX    = 0.2AGGAX   = 0.72 AGGAC   = 0.81 ALDAC   = 0.19  ``` with the default value ALDAX\\=1\\-AEXX\\=0\\.8\\.* B3PW91[\\[15]](#cite_note-becke:jcp:93-15) (using Libxc, see the tag LIBXC1)  ```LHFCALC = .TRUE.GGA = LIBXCLIBXC1 = HYB_GGA_XC_B3PW91 # or 401AEXX = 0.2  ``` * B1\\-WC[\\[16]](#cite_note-bilc:prb:08-16) (using Libxc, see the tag LIBXC1)  ```LHFCALC = .TRUE.GGA = LIBXCLIBXC1 = HYB_GGA_XC_B1WC # or 412AEXX = 0.16  ``` * SCAN0  ```LHFCALC = .TRUE.METAGGA = SCAN  ``` with the default values AEXX\\=0\\.25, AMGGAX\\=1\\-AEXX\\=0\\.75, and AMGGAC\\=1\\.* Hartree\\-Fock (no correlation)  ```LHFCALC = .TRUE. AEXX    = 1  ``` with the default values AGGAX\\=1\\-AEXX\\=0, ALDAC\\=0, and AGGAC\\=0\\.  | **Mind:** Note the default values when LHFCALC\\=.TRUE.: * ALDAX, AGGAX and AMGGAX are set to 1\\-AEXX. *  * ALDAC, AGGAC and AMGGAC are set to 0 if AEXX\\=1 or to 1 if AEXX    \u2260   {\\\\displaystyle \\\eq }  1\\. || --- |"}
{"file_name": "LMAXTAU.md", "content": "LMAXTAU= \\[integer]n| Default: **LMAXTAU** | \\= 6 | if LASPH\\=.TRUE. || --- | --- | --- ||  | \\= 0 | else | Description: LMAXTAU is the maximum *l*\\-quantum number included in the PAW one\\-center expansion of the kinetic energy density.  --- The PAW one\\-center expansion of the density has component up to and including *L*\\=2\\**l*max, where *l*max is the *l*\\-quantum number of the partial waves on the POTCAR file, with the highest angular moment.If the PAW one\\-center expansion of the density has component up to *L*, then the one\\-center expansion of the kinetic energy density has components up to *L*\\+2\\. This means that as a rule of thumb, for *s*\\-elements: LMAXTAU\\=2, for *p*: LMAXTAU\\=4, and for *d*: LMAXTAU\\=6\\.If you are willing to live with the computational costs, the default for LMAXTAU should be safe in all cases, except those involving *f*\\-elements."}
{"file_name": "Band-structure_calculation_using_hybrid_functionals.md", "content": "Band\\-structure calculations for hybrid functionals require multiple steps. Below we give a step\\-by\\-step introduction and an example. Additionally, we provide some advice to reduce computational and human effort. Step\\-by\\-step instructions--------------------------- For hybrid functionals, the Hamiltonian cannot be expressed in terms of the electronic charge density alone. Instead, the Kohn\\-Sham orbitals on a regular **k** mesh are required for any calculation within the formalism of hybrid functionals. The regular **k** mesh must be supplied in the KPOINTS file. Consequently, restarting a hybrid calculation requires the WAVECAR file of the previous self\\-consistent\\-field (SCF) run. This is in contrast to density\\-functional theory (DFT), where the electronic charge density written to the CHGCAR file suffices to restart a DFT calculation. In order to reach convergence more quickly, it is good practice to first compute the DFT result in a SCF calculation. **Step 1 (optional):** Run an SCF calculation to obtain a converged WAVECAR file for DFT.  Band\\-structure calculations generally compute the Kohn\\-Sham orbitals and eigenenergies along a path in reciprocal space which usually connects high\\-symmetry points in the first Brillouin zone. Some external tools[\\[1]](#cite_note-bilbao:kvec-1)[\\[2]](#cite_note-seekpath-2) help to identify the high\\-symmetry points and **k** points along a high\\-symmetry path for materials of any symmetry. **Step 2:** Determine the high\\-symmetry path along which VASP should compute the band structure.  There are two options to simultaneously supply a regular **k** mesh *and* **k** points along a high\\-symmetry path to VASP.  1\\. Provide an explicit list of **k** points with zero\\-weighted **k** points.Here, the explicit list of the irreducible **k** points of the regular **k** mesh can be copied from the IBZKPT file of a previous run to the KPOINTS file. For instance, use the IBZKPT file of step 1\\. These irreducible **k** points must be weighted by their multiplicity according to the system's symmetry. Additionally, the **k** points along a high\\-symmetry path must be added to the KPOINTS file with the value of all weights set to zero.2\\. Provide an additional KPOINTS\\_OPT file that can specify the high\\-symmetry path in line mode.Generally, the KPOINTS file and the KPOINTS\\_OPT file accept the same format. But again, the regular **k** mesh needs to be supplied in the KPOINTS file and the high\\-symmetry path in the KPOINTS\\_OPT file. We therefore recommend using the \u0393\\-centered mesh or Monkhorst\\-Pack mesh, and line mode, respectively.The KPOINTS\\_OPT method is more convenient because it allows using the automatic generation modes for the **k** points. The computational cost and memory requirement can vary for the two methods due to the scaling behaviour with the number of **k** points.  **Step 3:** Supply a regular **k** mesh and **k** points along a high\\-symmetry path either using the explicit list including zero\\-weighted **k** points or using a KPOINTS\\_OPT file. By default VASP uses auxiliary functions (HFALPHA) for the truncation of the Coulomb singularity, but this method leads to discontinuities in band\\-structure calculations. We recommend using the Coulomb truncation (HFRCUT) instead. In particular, HFRCUT\\=\\-1 converges best for systems with a band gap. **Step 4:** Set HFRCUT in the INCAR file and restart the hybrid calculation from the DFT WAVECAR file. **Step 5:** Plot the band structure, e.g., using py4vasp. Recommendations and advice-------------------------- In case a KPOINTS\\_OPT file is present, VASP computes the band energies for the **k** points of the KPOINTS\\_OPT file after SCF is reached within the same submitted job. Their convergence is checked independently by requiring the sum over occupied band energies not to change in two successive iterations. Hence, for the computational time, there is no advantage to restart from a converged hybrid calculation, but in principle it is possible. In contrast, the method using an explicit list including zero\\-weighted **k** points computes the band energies for all **k** points at each SCF step. The convergence criterion considers the total energy and, thus, does not account for convergence of KS orbitals at zero\\-weighted **k** points. Taking the KS orbitals of the zero\\-weighted **k** points along the entire SCF run makes their convergence highly likely. However, restarting from a converged hybrid calculation can result in premature stopping. This can be counteracted by setting the NELMIN tag to a higher value. Especially if the hybrid calculation needs many SCF steps to reach convergence and each SCF step is very expensive when including zero\\-weighted **k** points, one may consider to restart from a converged hybrid calculation with NELMIN set to a large number. We recommend carefully checking the convergence of the band structure in this case.  | **Tip:** For a band\\-structure calculation with an explicit list including zero\\-weighted **k** points, avoid restarting from a converged hybrid WAVECAR file. || --- | It is possible to achieve very fine sampling along the **k** path with both methods, but there are some aspects to take into account. As mentioned, the computational cost and memory requirement can vary for the two methods due to the scaling with the number of **k** points. For the KPOINTS\\_OPT method, the number of **k** points treated simultaneously can be controlled by means of the KPOINTS\\_OPT\\_NKBATCH tag. For the explicit list including zero\\-weighted **k** points, VASP may exceed the available memory if the number of zero\\-weighted **k** points is large. In that case, split the hybrid band\\-structure calculation into multiple calculations. For each calculation, add part of the zero\\-weighted **k** points. | **Tip:** Make fine sampling computationally feasible using the KPOINTS\\_OPT\\_NKBATCH tag or splitting the calculation with part of the zero\\-weighted **k** points. || --- | Let us stress a significant difference between hybrid band\\-structure calculations and DFT band\\-structure calculations. The electronic charge density suffices for density functionals to define the Hamiltonian, and no regular **k** mesh is required during DFT band\\-structure calculations. However, if no regular **k** mesh is provided, the electronic charge density must be fixed during the DFT band\\-structure calculation by setting ICHARG\\=11 in the INCAR file. | **Warning:** The electronic charge density must not be fixed for any hybrid calculation, i.e., never set ICHARG\\=11! || --- | | **Tip:** To understand how the two methods work in practice, try using them with a DFT calculation as if it were a hybrid calculation. || --- | If you forgot setting HFRCUT you may be able to mitigate the band structure. Semi\\-core states can be assumed to be dispersionless but you will see the same discontinuities featured on the semi core states. By subtracting the faulty dispersion of the semi\\-core state from all bands, you can recover the true dispersion of the conduction bands. Example of **k** points for hybrid band\\-structure calculation-------------------------------------------------------------- For instance, for cubic\\-diamond Si with the following POSCAR file  ``` cd Si 5.5  0.0    0.5     0.5   0.5    0.0     0.5   0.5    0.5     0.0  Si 2 Fractional  -0.125 -0.125 -0.125   0.125  0.125  0.125  ``` we can generate a regular k mesh using the following KPOINTS file  ``` Regular k-points mesh 0 Monkhorst-Pack method  3 3 3   0 0 0  ``` The resulting IBZKPT file contains the following lines:  ``` Automatically generated mesh 4 Reciprocal lattice   0.00000000000000    0.00000000000000    0.00000000000000             1   0.33333333333334    0.00000000000000   -0.00000000000000             8   0.33333333333334    0.33333333333334   -0.00000000000000             6  -0.33333333333334    0.33333333333334    0.00000000000000            12  ``` For the explicit **k**\\-points list, copy the regular **k** mesh from the IBZKPT file and add, e.g., 5 **k** points from \u0393 to X with zero weight:  ``` Explicit k-points list 9 Reciprocal lattice   0.00000000000000    0.00000000000000    0.00000000000000             1   0.33333333333334    0.00000000000000   -0.00000000000000             8   0.33333333333334    0.33333333333334   -0.00000000000000             6  -0.33333333333334    0.33333333333334    0.00000000000000            12   0.00000000       0.00000000       0.00000000 0      0.12500000       0.00000000       0.12500000 0   0.25000000       0.00000000       0.25000000 0   0.37500000       0.00000000       0.37500000 0   0.50000000       0.00000000       0.50000000 0  ``` For the KPOINTS\\_OPT method, the same path from \u0393 to X can be specified by creating the following KPOINTS\\_OPT file  ``` k points for band structure 5 \u00a0! intersections  line-mode Fractional   0.0000000000     0.0000000000     0.0000000000 \u0393   0.5000000000     0.0000000000     0.5000000000 X   ``` And continue using the following KPOINTS file  ``` Regular k-points mesh 0 Monkhorst-Pack method  3 3 3   0 0 0  ```"}
{"file_name": "LTBOUNDLIBXC.md", "content": "LTBOUNDLIBXC= .TRUE. \\| .FALSE.   Default: **LTBOUNDLIBXC** \\= .FALSE.nDescription: LTBOUNDLIBXC specifies whether or not the lower bound for the Kohn\\-Sham kinetic\\-energy density   \u03c4  \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }}  (  \u03c4  \u03c3  W  \\<  \u03c4  \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }^{\\\\textrm {W}}\\<\\\\tau \\_{\\\\sigma }} ) is enforced before   \u03c4  \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }}  is used in a METAGGA functional from Libxc.  --- The Kohn\\-Sham kinetic\\-energy density   \u03c4  \u03c3  \\=  1 2  \u2211  i  \u2207  \u03c8  i \u03c3  \u2217  \u22c5 \u2207  \u03c8  i \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }\\={\\\\frac {1}{2}}\\\\sum \\_{i}\\\abla \\\\psi \\_{i\\\\sigma }^{\\*}\\\\cdot \\\abla \\\\psi \\_{i\\\\sigma }} should, in principle, be larger than the von Weizs\u00e4cker kinetic\\-energy density[\\[1]](#cite_note-kurth:ijqc:1999-1)  \u03c4  \u03c3  W  \\=  \\|  \u2207  n  \u03c3  \\|  2  8  n  \u03c3  . {\\\\displaystyle \\\\tau \\_{\\\\sigma }^{\\\\textrm {W}}\\={\\\\frac {\\\\left\\\\vert \\\abla n\\_{\\\\sigma }\\\\right\\\\vert ^{2}}{8n\\_{\\\\sigma }}}.} However, for numerical reasons this may not always be the case and can potentially lead to problems depending on the meta\\-GGA. If LTBOUNDLIBXC\\=.TRUE. in INCAR, then   \u03c4  \u03c3  \\= max (  \u03c4  \u03c3  ,  \u03c4  \u03c3  W  ) {\\\\displaystyle \\\\tau \\_{\\\\sigma }\\=\\\\max(\\\\tau \\_{\\\\sigma },\\\\tau \\_{\\\\sigma }^{\\\\mathrm {W} })}  is applied before   \u03c4  \u03c3 {\\\\displaystyle \\\\tau \\_{\\\\sigma }}  is used in a meta\\-GGA functional from Libxc. However, according to tests, for some of the most common meta\\-GGA functionals like SCAN[\\[2]](#cite_note-sun:prl:15-2), a violation of the lower bound is technically not a problem and, furthermore, applying   \u03c4  \u03c3  \\= max (  \u03c4  \u03c3  ,  \u03c4  \u03c3  W  ) {\\\\displaystyle \\\\tau \\_{\\\\sigma }\\=\\\\max(\\\\tau \\_{\\\\sigma },\\\\tau \\_{\\\\sigma }^{\\\\mathrm {W} })}  leads to very inaccurate forces and stress tensor. Therefore, by default LTBOUNDLIBXC\\=.FALSE. and Libxc should be compiled with the option `--disable-fhc` has explained here."}
{"file_name": "Command-line_arguments.md", "content": "You provide command line arguments to the VASP executables.These options give you access to some build information about the executables without the need to provide all necessary input files to run VASP.You can also use the dry run mode to quickly check the sanity of your input files. \\-\\-cpp\\-options / \\-c---------------------- Print the CPP\\_OPTIONS set in the makefile.include during the build of the executable to the standard output.The code exits after printing the CPP\\_OPTIONS. \\-\\-dry\\-run / \\-n------------------ Execute most of VASP setup routines but stop before doing any of the computational expensive tasks.Use this mode to quickly test whether your input files are correct e.g. before submitting the job to the queue of an HPC.Among other things, this mode will: * Assess your setup and inform you if the version of VASP is incompatible. This could be if you try to run the \u0393\\-point version with multiple **k** points or the standard version with spin\\-orbit coupling. * Check whether your INCAR file can be parsed and understood. This can catch issues where you assigned a tag to an inappropriate type e.g. ENCUT\\=F. The beginning of the OUTCAR file reports also the interpretation of the INCAR file and the parameters of the run which you can inspect for consistency. * Notify you about potential issues in your POSCAR file. This includes incorrect formatting, missing atoms or types, and too small distances between atoms. * Parse the KPOINTS file to the IBZKPT file. If the parsing fails you can correct the KPOINTS setup. The IBZKPT reports the number of irreducible **k** points. You can use this information to choose an adequate KPAR setting. * Read the POTCAR file to detect mismatches with the POSCAR file. | **Tip:** The output of a dry\\-run will typically not produce output that postprocessing tools can understand. You may consider ALGO\\=None as an alternative. || --- | \\-\\-link\\-line / \\-l-------------------- Print the LLIBS set in the makefile.include during the build of the executable to the standard output. The code exits after printing the LLIBS. \\-\\-version / \\-v----------------- Print the version string of this VASP executable.In addition, report when the VASP executable was build and whether this is a gamma\\-only or a complex version of VASP.  ---"}
{"file_name": "PROUTINE.md", "content": "PROUTINE= \\[integer]nDescription: Control flag for the output of the profiling routines.  --- If specified only the routine with the name PROUTINE\\=*routine* is taken into account. Examples that use this tag  ---"}
{"file_name": "LSCALER0.md", "content": "LSCALER0= .TRUE. \\| .FALSE.   Default: **LSCALER0** \\= .TRUE.nDescription: LSCALER0\u00a0 decides whether to compute SCS contribution to gradients or not.  ---"}
{"file_name": "Fcc_Si.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Lattice constant optimization for fcc Si. Input----- ### POSCAR  ```fcc Si: 3.9 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0  ``` * Fcc Si lattice constant of 3\\.9   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  .* 1 atom per unit cell. ### INCAR  ```System\") = fcc SiISTART = 0\u00a0; ICHARG = 2ENCUT = 240ISMEAR = 0; SIGMA = 0.1  ``` * Initial charge density form overlapping atoms.* Energy cutoff of 240 eV from POTCAR file. ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` * Equally spaced k mesh.* Odd number of k points in each direction results in a   \u0393 {\\\\displaystyle \\\\Gamma }  centered mesh.* 56 k points in IBZ. Calculation----------- * Calculate energy for different lattice parameters.* Fit to some equation of states to obtain the equilibrium volume. * The bash\\-script loop.sh runs fcc Si at several different lattice constants (3\\.5\\-4\\.3 \u00c5) and collects free energy versus lattice constant into the file SUMMARY.fcc  ```#! /bin/bashBIN=/path/to/your/vasp/executablerm WAVECAR SUMMARY.fccfor i in  3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3\u00a0; docat >POSCAR <<!fcc: $i 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0 !echo \"a= $i\"\u00a0; mpirun -np 2 $BINE=`awk '/F=/ {print $0}' OSZICAR`\u00a0; echo $i $E  >>SUMMARY.fccdonecat SUMMARY.fcc  ``` The output for the SUMMARY.fcc file within this example should look like this:  ```3.5 1 F= -.44256712E+01 E0= -.44233993E+01 d E =-.454388E-023.6 1 F= -.46614699E+01 E0= -.46600410E+01 d E =-.285796E-023.7 1 F= -.47979864E+01 E0= -.47959298E+01 d E =-.411323E-023.8 1 F= -.48645042E+01 E0= -.48630063E+01 d E =-.299564E-023.9 1 F= -.48773847E+01 E0= -.48758538E+01 d E =-.306176E-024.0 1 F= -.48487436E+01 E0= -.48481092E+01 d E =-.126878E-024.1 1 F= -.47852634E+01 E0= -.47844854E+01 d E =-.155599E-024.2 1 F= -.46936947E+01 E0= -.46922530E+01 d E =-.288339E-024.3 1 F= -.45831167E+01 E0= -.45811837E+01 d E =-.386598E-02  ``` * To make a quick plot of SUMMARY.fcc try:  ```gnuplotgnuplot> plot \"SUMMARY.fcc\" using ($1):($4) w lp  ``` * The equilibrium lattice constant is found at roughly 3\\.9 \u00c5. Adjust your POSCAR file to reflect this and rerun VASP. * Keep your CHGCAR file from this run. We will need it in the following examples. * A quick look at the results: [](File_Fig_Si_1.html) **Mind**: You will have to set the correct path to your VASP executable (i.e., BIN), and invoke VASP with the correct command (e.g., in the above: mpirun \\-np 2). Download--------  fccSi.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials"}
{"file_name": "PHON_DIELECTRIC.md", "content": "PHON\\_DIELECTRIC= \\[3x3 real]n| Default: **PHON\\_DIELECTRIC** | \\= None |  || --- | --- | --- | Description: PHON\\_DIELECTRIC sets the static dielectric tensor to be used for the dipole\\-dipole corrections in the computation of the phonon dispersion. This is only used when LPHON\\_POLAR\\=.TRUE.  --- If the material is non\\-metallic and polar (i.e. two or more atoms in the unit cell carry nonzero Born effective charge tensors), a special treatment of the long\\-range dipole\\-dipole interaction is required to obtain a smooth phonon dispersion.This is activated by setting LPHON\\_POLAR\\=.TRUE. and supplying the static dielectric tensor (PHON\\_DIELECTRIC) and the Born\\-effective charges (PHON\\_BORN\\_CHARGES) which can be obtained in a separate VASP calculation using the LEPSILON or LCALCEPS tag.The dipole\\-dipole part of the interatomic force\\-constants is evaluated using an Ewald summation with the number of   G {\\\\displaystyle \\\\mathbf {G} }  vectors determined by the cutoff length (PHON\\_G\\_CUTOFF). | **Mind:** Only available as of VASP 6\\.3\\.2\\. || --- |"}
{"file_name": "Hybrid_functionals_theory.md", "content": "The hybrid functionals can be categorized into two types: unscreened and range\\-separated (i.e., screened), as described in more details below. Note that the hybrid functionals are implemented within the generalized KS scheme[\\[1]](#cite_note-seidl:prb:96-1). Thus, the total energy is minimized with respect to the orbitals (instead of the electron density), which means that the HF exchange leads to a nonlocal operator as in the Hartree\\-Fock\\-Roothaan theory. ### Unscreened hybrid functionals In hybrid exchange\\-correlation functionals, the exchange component consists of a mixing of GGA (or meta\\-GGA) and Hartree\\-Fock exchange:  E  x c  h y b r i d  \\= \u03b1  E  x  H F  \\+ ( 1 \u2212 \u03b1 )  E  x  G G A  \\+  E  c  G G A  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {hybrid} }\\=\\\\alpha E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+(1\\-\\\\alpha )E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA} }\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} },} where   \u03b1 {\\\\displaystyle \\\\alpha }  is the mixing parameter (AEXX) that is typically in the range 0\\.1\\-0\\.5\\. Two examples of hybrid functionals, PBE0 and B3LYP, are given below. * PBE0:[\\[2]](#cite_note-perdew:jcp:1996-2)  E  x c  P B E 0  \\=  1 4  E  x  H F  \\+  3 4  E  x  P B E  \\+  E  c  P B E  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {PBE0} }\\={\\\\frac {1}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+{\\\\frac {3}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE} }\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {PBE} },} where   E  x  P B E {\\\\displaystyle E\\_{x}^{\\\\rm {PBE}}}  and  E  c  P B E {\\\\displaystyle E\\_{c}^{\\\\rm {PBE}}}  denote the exchange and correlation parts of the PBE density functional, respectively.* B3LYP[\\[3]](#cite_note-stephens:jpc:1994-3), well known and popular amongst quantum chemists:  E  x  B 3 L Y P  \\=0\\.8  E  x  L D A  \\+0\\.2  E  x  H F  \\+0\\.72 \u0394  E  x  B 88  ,  E  c  B 3 L Y P  \\=0\\.19  E  c  V W N 3  \\+0\\.81  E  c  L Y P  , {\\\\displaystyle {\\\\begin{aligned}E\\_{\\\\mathrm {x} }^{\\\\mathrm {B3LYP} }\\&\\=0\\.8E\\_{\\\\mathrm {x} }^{\\\\mathrm {LDA} }\\+0\\.2E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+0\\.72\\\\Delta E\\_{\\\\mathrm {x} }^{\\\\mathrm {B88} },\\\\\\\\E\\_{\\\\mathrm {c} }^{\\\\mathrm {B3LYP} }\\&\\=0\\.19E\\_{\\\\mathrm {c} }^{\\\\mathrm {VWN3} }\\+0\\.81E\\_{\\\\mathrm {c} }^{\\\\mathrm {LYP} },\\\\end{aligned}}} where   E  x  B 3 L Y P {\\\\displaystyle E\\_{x}^{\\\\rm {B3LYP}}}  and  E  c  B 3 L Y P {\\\\displaystyle E\\_{c}^{\\\\rm {B3LYP}}}  are the B3LYP exchange and correlation energy contributions, respectively.   E  x  B 3 L Y P {\\\\displaystyle E\\_{x}^{\\\\rm {B3LYP}}}  consists of 80% of LDA exchange plus 20% of nonlocal Hartree\\-Fock exchange, and 72% of the gradient corrections of the Becke88 exchange functional.   E  c  B 3 L Y P {\\\\displaystyle E\\_{c}^{\\\\rm {B3LYP}}}  consists of 81% of LYP correlation energy, which contains a local and a semilocal (gradient dependent) part, and 19% of the (local) Vosko\\-Wilk\\-Nusair correlation functional III, which is fitted to the correlation energy in the random phase approximation RPA of the homogeneous electron gas.The nonlocal Hartree\\-Fock exchange energy,   E  x {\\\\displaystyle E\\_{x}} , can be written as  E  x  H F  \\= \u2212  e  2  2  \u2211  n  k  , m  q  f  n  k  f  m  q  \u00d7 \u222b \u222b  d  3  r  d  3  r  \u2032  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  n  k  (  r  \u2032  )  \u03c8  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{n\\\\mathbf {k} ,m\\\\mathbf {q} }f\\_{n\\\\mathbf {k} }f\\_{m\\\\mathbf {q} }\\\\times \\\\int \\\\int d^{3}\\\\mathbf {r} d^{3}\\\\mathbf {r} '{\\\\frac {\\\\psi \\_{n\\\\mathbf {k} }^{\\*}(\\\\mathbf {r} )\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}} with   {  \u03c8  n  k  (  r  ) } {\\\\displaystyle \\\\{\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} )\\\\}}  being the set of one\\-electron Bloch states of the system, and   {  f  n  k  } {\\\\displaystyle \\\\{f\\_{n\\\\mathbf {k} }\\\\}}  the correspondingset of (possibly fractional) occupational numbers.The sums over   k {\\\\displaystyle {\\\\bf {k}}}  and  q {\\\\displaystyle {\\\\bf {q}}}  run over all   k {\\\\displaystyle {\\\\bf {k}}}  points chosen to sample the Brillouin zone (BZ), whereas the sums over   m {\\\\displaystyle m}  and  n {\\\\displaystyle n}  run over all bands at these   k {\\\\displaystyle {\\\\bf {k}}}  points. The corresponding nonlocal Hartree\\-Fock potential is given by  V  x  H F  (  r  ,  r  \u2032  )  \\= \u2212  e  2  2  \u2211  m  q  f  m  q  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\|  \\= \u2212  e  2  2  \u2211  m  q  f  m  q  e  \u2212 i  q  \u22c5  r  \u2032  u  m  q  \u2217  (  r  \u2032  )  u  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\|  e  i  q  \u22c5  r  , {\\\\displaystyle V\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }{\\\\frac {\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }e^{\\-i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} '}{\\\\frac {u\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')u\\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}e^{i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} },} where   u  m  q  (  r  ) {\\\\displaystyle u\\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}  is the cell periodic part of the Bloch state,  \u03c8  n  q  (  r  ) {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {q} }(\\\\mathbf {r} )} , at   k {\\\\displaystyle {\\\\bf {k}}}  point,   q {\\\\displaystyle {\\\\bf {q}}} , with band index *m*.Using the decomposition of the Bloch states,   \u03c8  m  q {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {q} }} , in plane waves,  \u03c8  m  q  (  r  ) \\=  1  \u03a9  \u2211  G  C  m  q  (  G  )  e  i (  q  \\+  G  ) \u22c5  r {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )\\={\\\\frac {1}{\\\\sqrt {\\\\Omega }}}\\\\sum \\_{\\\\mathbf {G} }C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} )e^{i(\\\\mathbf {q} \\+\\\\mathbf {G} )\\\\cdot \\\\mathbf {r} }} the Hartree\\-Fock exchange potential may be written as   V  x  H F  (  r  ,  r  \u2032  )  \\=  \u2211  k  \u2211  G  G  \u2032  e  i (  k  \\+  G  ) \u22c5  r  V  k  H F  (  G  ,  G  \u2032  )  e  \u2212 i (  k  \\+  G  \u2032  ) \u22c5  r  \u2032 {\\\\displaystyle V\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\\\sum \\_{\\\\mathbf {k} }\\\\sum \\_{\\\\mathbf {G} \\\\mathbf {G} '}e^{i(\\\\mathbf {k} \\+\\\\mathbf {G} )\\\\cdot \\\\mathbf {r} }V\\_{\\\\mathbf {k} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)e^{\\-i(\\\\mathbf {k} \\+\\\\mathbf {G} ')\\\\cdot \\\\mathbf {r} '}} where  V  k  H F  (  G  ,  G  \u2032  )  \\= \u27e8  k  \\+  G  \\|  V  x  H F  \\|  k  \\+  G  \u2032  \u27e9 \\= \u2212  4 \u03c0  e  2  \u03a9  \u2211  m  q  f  m  q  \u2211  G  \u2033  C  m  q  \u2217  (  G  \u2032  \u2212  G  \u2033  )  C  m  q  (  G  \u2212  G  \u2033  )  \\|  k  \u2212  q  \\+  G  \u2033  \\|  2 {\\\\displaystyle V\\_{\\\\mathbf {k} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)\\=\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|V\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\|\\\\mathbf {k} \\+\\\\mathbf {G} '\\\\rangle \\=\\-{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }\\\\sum \\_{\\\\mathbf {G} ''}{\\\\frac {C\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}{\\|\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} ''\\|^{2}}}} is the representation of the Hartree\\-Fock potential in reciprocal space.In VASP, these expressions are implemented within the PAW formalism.[\\[4]](#cite_note-paier:jcp:05-4) ### Range\\-separated hybrid functionals #### Error function screening with short\\-range Hartree\\-Fock exchange More popular in solid\\-state physics, are the screened hybrid functionals, where only the short\\-range (SR) exchange is mixed, while the long\\-range (LR) exchange is still fully GGA:  E  x c  h y b r i d  \\= \u03b1  E  x  H F , S R  ( \u03bc ) \\+ ( 1 \u2212 \u03b1 )  E  x  G G A , S R  ( \u03bc ) \\+  E  x  G G A , L R  ( \u03bc ) \\+  E  c  G G A  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {hybrid} }\\=\\\\alpha E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,SR} }(\\\\mu )\\+(1\\-\\\\alpha )E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} },} where   \u03bc {\\\\displaystyle \\\\mu }  is the screening parameter (HFSCREEN) that determines the range separation. The most popular range\\-separated functional, HSE, is given below. * HSE: In the range\\-separated HSE03[\\[5]](#cite_note-heyd:jcp:03-5)[\\[6]](#cite_note-heyd:jcp:04-6)[\\[7]](#cite_note-heyd:jcp:06-7) and HSE06[\\[8]](#cite_note-krukau:jcp:06-8) hybrid functionals the slowly decaying long\\-range part of the Hartree\\-Fock exchange interaction (see the discussion on the Coulomb singularity) is replaced by the corresponding part of the PBE density functional counterpart. The resulting expression for the exchange\\-correlation energy is given by:  E  x c  H S E  \\=  1 4  E  x  H F , S R  ( \u03bc ) \\+  3 4  E  x  P B E , S R  ( \u03bc ) \\+  E  x  P B E , L R  ( \u03bc ) \\+  E  c  P B E  . {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {HSE} }\\={\\\\frac {1}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,SR} }(\\\\mu )\\+{\\\\frac {3}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {PBE} }.} The decomposition of the Coulomb kernel is obtained using the following construction:  1 r  \\=  S  \u03bc  ( r ) \\+  L  \u03bc  ( r ) \\=  e r f c  ( \u03bc r )  r  \\+  e r f  ( \u03bc r )  r  , {\\\\displaystyle {\\\\frac {1}{r}}\\=S\\_{\\\\mu }(r)\\+L\\_{\\\\mu }(r)\\={\\\\frac {\\\\mathrm {erfc} (\\\\mu r)}{r}}\\+{\\\\frac {\\\\mathrm {erf} (\\\\mu r)}{r}},} where   r \\=  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle r\\=\\|{\\\\bf {r}}\\-{\\\\bf {r}}'\\|} , and   \u03bc {\\\\displaystyle \\\\mu }  (set by HFSCREEN) is the parameter that defines the range separation, and is related to a characteristic distance,   2  /  \u03bc {\\\\displaystyle 2/\\\\mu } , at which the short\\-range interactions become negligible. Note: It has been shown that the optimum   \u03bc {\\\\displaystyle \\\\mu } , controlling the range separation is approximately 0\\.2\\-0\\.3 \u00c5\\-1.[\\[5]](#cite_note-heyd:jcp:03-5)[\\[6]](#cite_note-heyd:jcp:04-6)[\\[7]](#cite_note-heyd:jcp:06-7)[\\[8]](#cite_note-krukau:jcp:06-8)To select the HSE06 functional you need to select (HFSCREEN\\=0\\.2\\). Using the decomposed Coulomb kernel one may straightforwardly rewrite the nonlocal Hartree\\-Fock exhange energy:  E  x  H F , S R  ( \u03bc ) \\= \u2212  e  2  2  \u2211  n  k  , m  q  f  n  k  f  m  q  \u222b \u222b  d  3  r  d  3  r  \u2032  e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\|  \u00d7  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  n  k  (  r  \u2032  )  \u03c8  m  q  (  r  ) . {\\\\displaystyle E\\_{\\\\mathrm {x} }^{\\\\rm {HF,SR}}(\\\\mu )\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{n\\\\mathbf {k} ,m\\\\mathbf {q} }f\\_{n\\\\mathbf {k} }f\\_{m\\\\mathbf {q} }\\\\int \\\\int d^{3}\\\\mathbf {r} d^{3}\\\\mathbf {r} '{\\\\frac {\\\\mathrm {erfc} (\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|)}{\\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|}}\\\\times \\\\psi \\_{n\\\\mathbf {k} }^{\\*}(\\\\mathbf {r} )\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} ).} The representation of the corresponding short\\-range Hartree\\-Fock potential in reciprocal space is given by  V  k  H F , S R  (  G  ,  G  \u2032  )  \\= \u27e8  k  \\+  G  \\|  V  x  S R  \\[ \u03bc ]  \\|  k  \\+  G  \u2032  \u27e9  \\= \u2212  4 \u03c0  e  2  \u03a9  \u2211  m  q  f  m  q  \u2211  G  \u2033  C  m  q  \u2217  (  G  \u2032  \u2212  G  \u2033  )  C  m  q  (  G  \u2212  G  \u2033  )  \\|  k  \u2212  q  \\+  G  \u2033  \\|  2  \u00d7  (  1 \u2212  e  \u2212  \\|  k  \u2212  q  \\+  G  \u2033  \\|  2  /  4  \u03bc  2  )  . {\\\\displaystyle {\\\\begin{aligned}V\\_{\\\\mathbf {k} }^{\\\\mathrm {HF,SR} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)\\&\\=\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|V\\_{x}^{\\\\rm {SR}}\\[\\\\mu ]\\|\\\\mathbf {k} \\+\\\\mathbf {G} '\\\\rangle \\\\\\\\\\&\\=\\-{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }\\\\sum \\_{\\\\mathbf {G} ''}{\\\\frac {C\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}{\\|\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} ''\\|^{2}}}\\\\times \\\\left(1\\-e^{\\-\\|\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} ''\\|^{2}/4\\\\mu ^{2}}\\\\right).\\\\end{aligned}}} The only difference to the reciprocal space representation of the complete Hartree\\-Fock exchange potential is the second factor in the summand above, representing the complementary error function in reciprocal space. The short\\-range PBE exchange energy and potential, and their long\\-range counterparts, are arrived at using the same decomposition, in accordance with Heyd *et al*.[\\[5]](#cite_note-heyd:jcp:03-5) It is easily seen that the long\\-range term in the decomposed Coulomb kernel becomes zero for   \u03bc \\= 0 {\\\\displaystyle \\\\mu \\=0} , and the short\\-range contribution then equals the full Coulomb operator, whereas for   \u03bc \u2192 \u221e {\\\\displaystyle \\\\mu \\\\rightarrow \\\\infty }  it is the other way around. Consequently, the two limiting cases of the HSE functional are a true PBE0 functional for   \u03bc \\= 0 {\\\\displaystyle \\\\mu \\=0} , and a pure PBE calculation for   \u03bc \u2192 \u221e {\\\\displaystyle \\\\mu \\\\rightarrow \\\\infty }  . #### Error function screening with long\\-range Hartree\\-Fock exchange Screened hybrid functionals with Hartree\\-Fock exchange at long range are more popular in molecular chemistry, where a proper decay of the exchange\\-correlation potential at long range far from the nuclei may be important. These functionals are less useful for solid\\-state physics, in particular for bulk solids. Examples belonging to this class of functionals are (available in VASP): * RSHXLDA and RSHXPBE:[\\[9]](#cite_note-iikura:jcp:2001-9)[\\[10]](#cite_note-gerber:cpl:2005-10)[\\[11]](#cite_note-gerber:jcp:2007-11) In the RSHXLDA and RSHXPBE functionals the exchange operator is decomposed into short\\-range LDA/PBE and long\\-range Hartree\\-Fock:  E  x c  R S H X L D A  \\=  E  x  L D A , S R  ( \u03bc ) \\+  E  x  H F , L R  ( \u03bc ) \\+  E  c  L D A  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {RSHXLDA} }\\=E\\_{\\\\mathrm {x} }^{\\\\mathrm {LDA,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {LDA} },}  E  x c  R S H X P B E  \\=  E  x  P B E , S R  ( \u03bc ) \\+  E  x  H F , L R  ( \u03bc ) \\+  E  c  P B E  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {RSHXPBE} }\\=E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {PBE} },} where   \u03bc {\\\\displaystyle \\\\mu }  (set by HFSCREEN) is the parameter that defines the range separation. The use of the long\\-range Hartree\\-Fock exchange is activated with the LRHFCALC tag. This functional can only be used when the short\\-range density functional part is LDA or PBE. When LDA is chosen, a value of   \u03bc \\=0\\.75 {\\\\displaystyle \\\\mu \\=0\\.75}  \u00c5\\-1 is recommended for solids.[\\[11]](#cite_note-gerber:jcp:2007-11)#### Thomas\\-Fermi exponential screening with short\\-range Hartree\\-Fock exchange In the case of Thomas\\-Fermi screening (activated with the LTHOMAS tag), the Coulomb kernel is again decomposed in a short\\-range and a long\\-range part with the exponential function.[\\[12]](#cite_note-bylander:prb:90-12)[\\[1]](#cite_note-seidl:prb:96-1)[\\[13]](#cite_note-picozzi:prb:00-13) This decomposition can be conveniently written in reciprocal space:  4 \u03c0  e  2  \\|  G  \\|  2  \\=  S  \u03bc  (  \\|  G  \\|  ) \\+  L  \u03bc  (  \\|  G  \\|  ) \\=  4 \u03c0  e  2  \\|  G  \\|  2  \\+  k  T F  2  \\+  (  4 \u03c0  e  2  \\|  G  \\|  2  \u2212  4 \u03c0  e  2  \\|  G  \\|  2  \\+  k  T F  2  )  , {\\\\displaystyle {\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}}}\\=S\\_{\\\\mu }(\\|\\\\mathbf {G} \\|)\\+L\\_{\\\\mu }(\\|\\\\mathbf {G} \\|)\\={\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}\\+k\\_{\\\\mathrm {TF} }^{2}}}\\+\\\\left({\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}}}\\-{\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}\\+k\\_{\\\\mathrm {TF} }^{2}}}\\\\right),} where   k  T F {\\\\displaystyle k\\_{\\\\rm {TF}}}  (set by HFSCREEN) is the Thomas\\-Fermi screening length. For typical semiconductors, a Thomas\\-Fermi screening length of about 1\\.8 \u00c5\\-1 yields reasonable band gaps. In principle, however, the Thomas\\-Fermi screening length depends on the valence\\-electron density; VASP determines this parameter from the number of valence electrons (read from the POTCAR file) and the volume and writes the corresponding value to the OUTCAR file:  ``` Thomas-Fermi vector in A             =   2.00000  ``` Since VASP counts the semi\\-core states and *d*\\-states as valence electrons, although these states do not contribute to the screening, the values reported by VASP are often incorrect.  Another important detail concerns the implementation of the density\\-functional part in the screened exchange case. Literature suggests that a global enhancement factor   z {\\\\displaystyle z}  (see Eq. 3\\.15\\)[\\[1]](#cite_note-seidl:prb:96-1) should be used, whereas VASP implements a local\\-density\\-dependent enhancement factor   z \\=  k  T F  /  k {\\\\displaystyle z\\=k\\_{\\\\rm {TF}}/k}  , where   k {\\\\displaystyle k}  is the Fermi wave vector corresponding to the local density (and not the average density as suggested Seidl *et al*.[\\[1]](#cite_note-seidl:prb:96-1). The VASP implementation is in the spirit of the *local* density approximation."}
{"file_name": "LIBMBD_TS_SR.md", "content": "LIBMBD\\_TS\\_SR= \\[real]   Default: **LIBMBD\\_TS\\_SR** \\= value that was determined for the exchange\\-correlation functional set with LIBMBD\\_XCnDescription: LIBMBD\\_TS\\_SR sets the value of the scaling factor   s  R {\\\\displaystyle s\\_{R}}  in the Tkatchenko\\-Scheffler method[\\[1]](#cite_note-tkatchenko:prl:09-1) as implemented in the library libMBD of many\\-body dispersion methods[\\[2]](#cite_note-libmbd_1-2)[\\[3]](#cite_note-libmbd_2-3)[\\[4]](#cite_note-hermann:jcp:2023-4).  --- LIBMBD\\_TS\\_SR allows to choose the value of the scaling factor   s  R {\\\\displaystyle s\\_{R}}  in the Tkatchenko\\-Scheffler method[\\[1]](#cite_note-tkatchenko:prl:09-1) as implemented in the library libMBD of many\\-body dispersion methods[\\[2]](#cite_note-libmbd_1-2)[\\[3]](#cite_note-libmbd_2-3)[\\[4]](#cite_note-hermann:jcp:2023-4). The value is internally passed to the libMBD input **ts\\_sr** described at the page [\\[5]](#cite_note-libmbd_input-5). LIBMBD\\_TS\\_SR is similar to the VDW\\_SR tag that is used for the VASP implementation of the Tkatchenko\\-Scheffler method. | **Mind:** LIBMBD\\_TS\\_SR can be set only if LIBMBD\\_XC\\=none. || --- | | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[3]](#cite_note-libmbd_2-3) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "ML_HISCAR.md", "content": "This file contains the distribution of energies, forces and stress in a histogram. This file is usually not important for the user.  ---"}
{"file_name": "LIBMBD_TS_D.md", "content": "LIBMBD\\_TS\\_D= \\[real]   Default: **LIBMBD\\_TS\\_D** \\= 20nDescription: LIBMBD\\_TS\\_D sets the value of the damping parameter   d {\\\\displaystyle d}  in the Tkatchenko\\-Scheffler method[\\[1]](#cite_note-tkatchenko:prl:09-1) as implemented in the library libMBD of many\\-body dispersion methods[\\[2]](#cite_note-libmbd_1-2)[\\[3]](#cite_note-libmbd_2-3)[\\[4]](#cite_note-hermann:jcp:2023-4).  --- LIBMBD\\_TS\\_D allows to choose the value of the damping parameter   d {\\\\displaystyle d}  in the Tkatchenko\\-Scheffler method[\\[1]](#cite_note-tkatchenko:prl:09-1) as implemented in the library libMBD of many\\-body dispersion methods[\\[2]](#cite_note-libmbd_1-2)[\\[3]](#cite_note-libmbd_2-3)[\\[4]](#cite_note-hermann:jcp:2023-4). The value is internally passed to the libMBD input **ts\\_d** described at the page [\\[5]](#cite_note-libmbd_input-5). LIBMBD\\_TS\\_D is the same as the VDW\\_D tag that is used for the VASP implementation of the Tkatchenko\\-Scheffler method. | **Mind:** LIBMBD\\_TS\\_D can be set only if LIBMBD\\_XC\\=none. || --- | | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[3]](#cite_note-libmbd_2-3) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "LVACPOTAV.md", "content": "LVACPOTAV= .True. \\| .False.   Default: **LVACPOTAV** \\= .False.nDescription: Switch on determining the vacuum potential by averaging the local potential over a field\\-free region.   --- LVACPOTAV switches on the computation of the vacuum potential, i.e., the average of the local potential in the vacuum region. It computes the average potential by searching regions that are field\\-free (VACPOTFLAT), and the 2D\\-averaged charge density is nearly zero. The averaging is done in the direction of IDIPOL and is reported as the vacuum potential in the OUTCAR. | **Tip:** As LVACPOTAV performs a post\\-processing step, you may use it together with ALGO \\= None by restarting a converged calculation. || --- | The vacuum potential is one of the quantities needed to compute the work function. It can be extracted from the OUTCAR by the following bash command  ``` grep upper OUTCAR  ``` Note that two vacuum potentials will be produced, one corresponding to the upper termination of the slab and one corresponding to the lower. Depending on the system, one might be more interesting than the other. | **Tip:** For determining the work function, we suggest using LVACPOTAV along with the LVHAR tag such that only the sum of the Hartree and ionic potentials are used in the calculation of the vacuum potential. This choice is because the exchange\\-correlation potential might be noisy in the vacuum region but should, in principle, be zero. || --- | | **Mind:** LVACPOTAV is available only for versions after 6\\.4\\.3\\. || --- | Before VASP 6\\.4\\.3, the default algorithm reports the 2D\\-averaged potential four grid points from the the minimum 2D\\-averaged charge density in the direction of IDIPOL, i.e., no averaging is performed along the surface normal of the 2D\\-averaged potential. ### Use in conjunction with the dipole correction A typical use case for LVACPOTAV is together with the dipole correction (including tags LDIPOL and IDIPOL). Switching on the dipole correction is crucial for determining the vacuum potential; without it, there will be no field\\-free region for dipolar systems. | **Mind:** Note that LVACPOTAV is currently implemented for IDIPOL between 1 and 3\\. || --- | ### Warnings In case LVACPOTAV is not able to generate an accurate work function, the following warnings may be found in the OUTCAR file.  #### Vacuum region is likely too small  ```|     Did not find any points to average over, which means that no vacuum     ||     field-free region was found. Please increase the size of  your cell     ||     in the dimension of the dipole correction to obtain accurate            ||     workfunction values.                                                    |  ``` A possible solution to this problem is to increase the size of the vacuum dimension in your cell. #### The minimum charge density in your cell may be too large  ```|     The minimum charge density times volume of the cell along the axis      ||     of the dipole correction is larger 1E-1, which could mean that your     ||     workfunction is not accurate as there is no field free region in        ||     your cell. Please consider either increasing the size of your cell      ||     along the dipole correction (vacuum dimension) or perhaps               ||     increasing the precision of your calculation.                           |  ``` Possible solutions include: * Making sure you have a large enough vacuum dimension.* Increasing the precision of your calculation by changing EDIFF."}
{"file_name": "RPA_calculations.md", "content": "The adiabatic\\-connection\\-fluctuation\\-dissipation theorem (ACFDT) can be used to derive the random\\-phase approximation (RPA).The ACFDT\\-RPA ground\\-state energy   E  R P A {\\\\displaystyle E\\_{\\\\mathrm {RPA} }}  is the sum of the ACFDT\\-RPA correlation energy   E  c {\\\\displaystyle E\\_{c}}  and the Hartree\\-Fock (HF) energy   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  evaluated non self\\-consistently using Kohn\\-Sham orbitals computed within density\\-functional theory (DFT):  E  R P A  \\=  E  c  \\+  E  E X X {\\\\displaystyle E\\_{\\\\mathrm {RPA} }\\=E\\_{\\\\mathrm {c} }\\+E\\_{\\\\mathrm {EXX} }}  . Note that, here   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  includes also the Hartree energy, the kinetic energy, as well as the Ewald energy of the ions, whereas often in literature   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  refers only to the exact\\-exchange (EXX) energy evaluated using DFT orbitals. If ALGO\\=RPA is set in the INCAR file, VASP calculates the correlation energy within RPA. To this end, VASP first calculates the independent\\-particle response function, using the unoccupied states given in the WAVECAR file, and then determines the correlation energy using the plasmon\\-fluctuation equation:  E  c  \\=  1  2 \u03c0  \u222b  0  \u221e  \\[  T r  ln \u2061 ( 1 \u2212 \u03c7 (  i  \u03c9 ) V ) \\+ \u03c7 (  i  \u03c9 ) V ]  d \u03c9 {\\\\displaystyle E\\_{c}\\={\\\\frac {1}{2\\\\pi }}\\\\int \\_{0}^{\\\\infty }\\[\\\\mathrm {Tr} \\\\,\\\\ln(1\\-\\\\chi ({\\\\rm {i}}\\\\omega )V)\\+\\\\chi ({\\\\rm {i}}\\\\omega )V]\\\\,d\\\\omega }  . More information about the theory behind the RPA is found here.  General recipe to calculate ACFDT\\-RPA total energies----------------------------------------------------- The ACFDT\\-RPA total energies can be computed in a four\\-step procedure or in an all\\-in\\-one approach. The all\\-in\\-one approach is available as of VASP.6 and can be done in one single step.Both procedures comprise a self\\-consistent DFT calculation, diagonalizing the KS Hamiltonian, and the RPA calculation itself. While the all\\-in\\-one approach is very convenient, there are several caveats discussed below. ### Four\\-step procedure to calculate ACFDT\\-RPA total energy This four\\-step procedure is the standard procedure in VASP.5, and is also available in VASP.6 by setting NBANDS in the RPA step.  **Step 1:** a standard DFT run.  All occupied orbitals (and as usual in VASP, a few unoccupied orbitals) of the DFT Hamiltonian are calculated. For instance,  ```EDIFF = 1E-8 # required for convergence of RPA total energiesISMEAR = 0\u00a0; SIGMA = 0.05  ``` | **Warning:** The convergence of DFT eigenenergies influences the convergence of the RPA correlation energy. || --- | | **Tip:** Use the Perdew\\-Burke\\-Ernzerhof (PBE) pseudopotentials with a small EDIFF and avoid ISMEAR\\>0\\. || --- | The DFT run can be done with your favorite setup, but we recommend attaining very high precision (small EDIFF tag) and to use a small smearing width (SIGMA tag), and to avoid higher\\-order Methfessel\\-Paxton smearing (see also ISMEAR). That is because Methfessel\\-Paxton smearing can lead to negative one\\-electron occupancies, which can result in unphysical correlation energies. We suggest using PBE orbitals as input for the ACFDT\\-RPA run, but other choices, e.g., local\\-density\\-approximation (LDA) or hybrids, are possible as well. For hybrid functionals, we suggest carefully considering the caveats mentioned in Ref. [\\[1]](#cite_note-paier:2008-1). Specifically, the RPA dielectric matrix yields too weak screening for hybrid functionals, which potentially deteriorates RPA results.**Step 2:** Compute the HF energy   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  using the DFT orbitals. That is, e.g.,  ```ALGO  = EIGENVAL\u00a0; NELM = 1LWAVE = .FALSE.               \u00a0! WAVECAR not written     LHFCALC = .TRUE.\u00a0; AEXX = 1.0 \u00a0! ALDAC = 0.0 ISMEAR = 0\u00a0; SIGMA = 0.05  ``` Here, LWAVE \\= .FALSE. avoids an accidental update of the WAVECAR file. Also, VASP automatically sets ALDAC \\= 1\\-AEXX, i.e., for AEXX \\= 1\\.0, ALDAC \\= 0\\.0\\. | **Tip:** For insulators and semiconductors with a sizable gap, faster k\\-point convergence of the HF energy can be obtained by setting HFRCUT\\=\\-1, although this slows convergence for metals. || --- | **Step 3:** Compute a sufficient number of unoccupied states.  In the OUTCAR file of Step 1, search for `maximum number of plane-waves:` and run VASP again with the following INCAR file to determine the unoccupied states by exact diagonalization of the KS Hamiltonian. The KS Hamiltonian must be the same as in step 1, which might be DFT or hybrid.  ```NBANDS = maximum number of plane-waves (times 2 for vasp_gam)ALGO = Exact   \u00a0! exact diagonalizationEDIFF = 1E-8 # required for convergence of RPA total energiesLOPTICS = .TRUE.ISMEAR = 0\u00a0; SIGMA = 0.05  ``` For calculations using `vasp_gam`, that is the gamma\\-point only version of VASP, NBANDS must be set to twice the `maximum number of plane-waves:` found in the OUTCAR file of Step 1\\. For metals, we recommend to avoid setting LOPTICS\\=.TRUE., since this slows down k\\-point convergence .**Step 4:** Calculate the ACFDT\\-RPA correlation energy.  ```NBANDS =  maximum number of plane-wavesALGO = ACFDTNOMEGA = 12    \u00a0! defaultISMEAR = 0\u00a0; SIGMA = 0.05   ``` The number of imaginary\\-frequency and imaginary\\-time\\-grid points NOMEGA is usually set to 8\\-24\\. For large gap insulators NOMEGA \\= 8 will suffice, while for semiconductors 10\\-12 suffices. | **Important:** For VASP 6\\.X, NBANDS must be set in this step. || --- | ### All\\-in\\-one approach to calculate ACFDT\\-RPA total energy VASP will read the WAVECAR file, perform a self\\-consistent DFT calculation by iterating until convergence is reached, diagonalize the DFT Hamiltonian in the basis set spanned by all KS orbitals, and finally proceed with the RPA calculation. The all\\-in\\-one approach is only available as of VASP.6, and it is particularly convenient for the RPAR and GWR algorithms. An example INCAR file is  ```ALGO = RPAR EDIFF = 1E-8  # required for convergence of RPA total energiesISMEAR = 0\u00a0; SIGMA = 0.05 NOMEGA = 8-24   \u00a0! for large gap insulators NOMEGA = 8 will suffice, for semiconductors 10-12 suffices LOPTICS = .TRUE.\u00a0! optional LPEAD = .TRUE.  \u00a0! required for 6.1 and 6.2 if LOPTICS = .TRUE.  ``` | **Warning:** The tag NBANDS must not be set in the INCAR file. || --- | | **Warning:** The convergence of DFT eigenenergies influences the convergence of the RPA correlation energy. || --- | | **Tip:** Use the Perdew\\-Burke\\-Ernzerhof (PBE) pseudopotentials with a small EDIFF and avoid ISMEAR\\>0\\. || --- | The head of the dielectric function can be calculated only for insulators by setting the LOPTICS tag and only the Perturbation\\-Expression\\-After\\-Discretization (PEAD) method is supported, see LPEAD. Furthermore, EDIFF should be small to calculate the DFT orbitals with high precision. Although it is not strictly required, we recommend starting the calculation from a well\\-converged DFT WAVECAR file. There are several caveats to the all\\-in\\-one approach:  * There is no general support for ACFDT/RPA on top of hybrid functionals. In VASP   \u2264 {\\\\displaystyle \\\\leq }  6\\.2, only LDA and gradient corrected functionals are supported. As of VASP 6\\.2, the all\\-in\\-one approach can be used for Hartree\\-Fock\\-type calculations, as well as hybrid functionals without range separation. However, range\\-separated hybrid functionals (including HSE, LMODELHF) yield erroneous results or potentially even crash. Please compare the total energies in a standard DFT/hybrid functional calculation against the energies obtained for the mean\\-field step in the all\\-in\\-one approach: The energies must be exactly the same. If they differ, fall back to the four\\-step procedure that is explained above.* To select the new all\\-in\\-one approach, it is important \"*not to set* NBANDS\" in the RPA step. If NBANDS is set in the INCAR file, VASP.6 proceeds with reading the WAVECAR file found in the directory (if not present, random orbitals are used!), and then calculates the correlation energy using these orbitals and one\\-electron energies.* The basis set used in the diagonalization is strictly given by all plane waves. That is, there is no option to reduce the basis set size as one can by setting NBANDS in Step 3 and Step 4 of the four\\-step procedure.* The exchange energy is only calculated if the low\\-scaling RPA is selected.* As of VASP 6\\.3, the head of the dielectric function (G\\=0 component) can be calculated by setting LOPTICS \\= .TRUE.* In the all\\-in\\-one procedure, VASP automatically sets LMAXFOCKAE and NMAXFOCKAE. This changes the energies for hybrid functionals and Hartree\\-Fock slightly. Hence, you need to set LMAXFOCKAE \\= 4 also in Step 1 of the four\\-step procedure to obtain the same results as in the all\\-in\\-one procedure. ### Output of ACFDT\\-RPA total energy The ACFDT\\-RPA total energy is calculated for 8 different energy cutoffs and a linear regression is used to extrapolate the results to the infinite cutoff limit, see section below. A successful RPA calculation writes the following lines into the OUTCAR file:  ```      cutoff energy     smooth cutoff   RPA   correlation   Hartree contr. to MP2---------------------------------------------------------------------------------            316.767           316.767      -17.5265976349      -26.2640927215            301.683           301.683      -17.3846505665      -26.0990489039            287.317           287.317      -17.2429031341      -25.9344769084            273.635           273.635      -17.0686574017      -25.7325162480            260.605           260.605      -16.8914915810      -25.5277026697            248.195           248.195      -16.7202601717      -25.3302982602            236.376           236.376      -16.5559849344      -25.1415392478            225.120           225.120      -16.3635400223      -24.9210737434  linear regression      converged value                          -19.2585393615      -28.2627347266  ``` Here, the third and fourth columns correspond to the correlation energy (for that specific energy cutoff) in the RPA and the direct second\\-order M\u00f8ller\u2013Plesset (MP2\\) approximation, i.e., the second\\-order term in RPA. The corresponding results of the linear regression are found in the line starting with `converged value`.  Low\\-scaling ACFDT/RPA algorithm-------------------------------- Virtually the same tags and procedures apply to the low\\-scaling RPA algorithm implemented in VASP 6 [\\[2]](#cite_note-kaltak:prb:2014-2). However, ALGO\\=ACFDT or ALGO\\=RPA needs to be replaced by either ALGO\\=ACFDTR or ALGO\\=RPAR.  With this setting VASP calculates the independent\\-particle polarizability   \u03c7 ( i \u03c9 ) {\\\\displaystyle \\\\chi (i\\\\omega )}  using Green's functions   G ( i \u03c4 ) {\\\\displaystyle G(i\\\\tau )}  on the imaginary time axis   i \u03c4 {\\\\displaystyle i\\\\tau }  by the contraction formula [\\[3]](#cite_note-rojas:prl:1995-3)  \u03c7 ( i  \u03c4  m  ) \\= \u2212 G ( i  \u03c4  m  ) G ( \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi (i\\\\tau \\_{m})\\=\\-G(i\\\\tau \\_{m})G(\\-i\\\\tau \\_{m})} Subsequently, a compressed Fourier transformation on the imaginary axes   \u03c4  m  ,  \u03c9  n {\\\\displaystyle \\\\tau \\_{m},\\\\omega \\_{n}}  yields   \u03c7 ( i  \u03c9  n  ) \\=  \u2211  m \\= 1  N  \u03b3  n m  \u03c7 ( i  \u03c9  m  ) {\\\\displaystyle \\\\chi (i\\\\omega \\_{n})\\=\\\\sum \\_{m\\=1}^{N}\\\\gamma \\_{nm}\\\\chi (i\\\\omega \\_{m})} The remaining step is the evaluation of the correlation energy and is the same as described above.  Crucial to this approach is the accuracy of the Fourier transformation from   \u03c7 ( i \u03c4 ) \u2192 \u03c7 ( i \u03c9 ) {\\\\displaystyle \\\\chi (i\\\\tau )\\\\to \\\\chi (i\\\\omega )} , which in general depends on two factors: First, the grid order   N {\\\\displaystyle N}  that can be set by NOMEGA in the INCAR file. Here, similar choices as for the ALGO\\=ACFDT are recommended. Second, the grid points   \u03c4  m  ,  \u03c9  n {\\\\displaystyle \\\\tau \\_{m},\\\\omega \\_{n}}  and Fourier matrix   \u03b3  n m {\\\\displaystyle \\\\gamma \\_{nm}}  have to be optimized for the same interval as spanned by all possible transition energies in the polarizability. The minimum (maximum) transition energy can be set with the OMEGAMIN (OMEGATL) tag and should be smaller (larger) than the bandgap, i.e., the maximum transition energy, of the previous DFT calculation. VASP determines these values automatically and writes it in the OUTCAR after the lines   ```Response functions by GG contraction:   ``` These values should be checked for consistency. Furthermore, we recommend inspecting the grid and transformation errors by looking for the following lines in the OUTCAR file  ```nu_ 1=  0.1561030E+00 ERR=   0.6327933E-05 finished after   1 steps    nu_ 2= ...Maximum error of frequency grid:  0.3369591E-06  ``` Every frequency point will have a similar line as shown above for the first point. The value after `ERR=` corresponds to the maximum Fourier\\-transformation error and should be of similar order as the maximum integration error of the frequency grid. ### Output of low\\-scaling ACFDT/RPA Selecting the low\\-scaling RPA algorithm, VASP computes the total energy in the RPA and writes the following output  ``` ----------------------------------------------------- HF-free energy      FHF    =       -25.11173505 eV HF+RPA corr. energy TOTEN  =       -36.96463791 eV HF+E_corr(extrapolated)    =       -37.70506951 eV  ``` The line `HF+RPA corr. energy TOTEN` contains the total energy calculated with the largest cutoff ENCUTGW. The line `HF+E_corr(extrapolated)` contains the total energy with the extrapolated value for the RPA correlation energy. ### Singles contribution to the correlation energy The low\\-scaling RPA algorithm also allows for the determination of the so\\-called singles contribution,[\\[4]](#cite_note-klimes:jcp:143-4)[\\[5]](#cite_note-ren:prb:88-5) to the total energy represented by following diagrams: [](../File_SinglesDiagrams.html) In most textbooks[\\[6]](#cite_note-mattuck:2012-6) this contribution is assumed to be zero. Ren et al.[\\[5]](#cite_note-ren:prb:88-5) pointed out that this is true only in the Hartree\\-Fock basis set. The singles contribution is non\\-vanishing for other basis sets.  The singles contribution is calculated for LSINGLES\\=.TRUE.. In this case following additional lines can be found in OUTCAR:  ```HF single shot energy change        -1.23182672renormalized HF singles             -1.23310555  ``` Here, the first line contains the value of the singles as proposed by Klime\u0161 et al.,[\\[4]](#cite_note-klimes:jcp:143-4) while the second line contains the singles contribution of Ren et al.[\\[5]](#cite_note-ren:prb:88-5). In most cases we found that the two values are exceedingly close to each other, which can be understood in the way how the propagator is renormalized.[\\[4]](#cite_note-klimes:jcp:143-4) ### Optional: RPA Forces Optionally, RPA forces can be calculated by adding following line to the INCAR file:  ``` LRPAFORCE = .TRUE.   ``` For RPA forces the change in the one\\-electron density is required.[\\[7]](#cite_note-ramberger:prl:118-7)This is automatically performed with the linear\\-response routine within VASP. After a successful run, the following block of data is found in the OUTCAR file.  ```POSITION                                       TOTAL RPA FORCE (eV/Angst)-----------------------------------------------------------------------------------     0.17542     -0.22348      0.17542        -0.292069      7.581315     -0.292069     1.12850      1.31044      1.12850         0.304683     -7.605527      0.304683-----------------------------------------------------------------------------------   total drift:                                0.012614     -0.024212      0.012614 SUGGESTED UPDATED POSCAR (direct coordinates)  step----------------------------------------------------------------------------------- -0.00958461  -0.00958461   0.13485779         0.04179056   0.04179056   0.00283088  0.25787833   0.25787833   0.22191754        -0.04337198  -0.04337198   0.00431513  ``` | **Warning:** The RPA forces computed for metallic systems are currently not supported. || --- | The suggested updated positions are also written to the CONTCAR file (if NSW\\=0\\). The updated positions are obtained by multiplying the RPA\\-forces with the parameter DAMP\\_NEWTON\") and the inverse of the DFT\\-Hessian (which is also calculated during the RPA force calculations) and adding the resultant vector to the current positions. DAMP\\_NEWTON\") currently defaults to 0\\.8, but the user might want to change this to 1\\.0 (no damping), or smaller values if instabilities are observed. The CONTCAR file can be copied to the POSCAR file, and a few such RPA calculations should recover the groundstate structure. Alternatively, standard relaxations (IBRION \\=1\\-4\\) or even MD's can be performed.  ### Memory bottleneck and Parallelization The cubic scaling space\\-time RPA algorithm requires considerably more memory than the corresponding quartic\\-scaling implementations, two Green's functions   G (  r ,  r \u2032  , i  \u03c4  n  ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau \\_{n})}  have to be stored in real\\-space. To reduce the memory overhead, VASP exploits Fast Fourier Transformations (FFT) to avoid storage of the matrices on the (larger) real space grid, on the one hand. The precision of the FFT can be selected with PRECFOCK, where usually the values *Fast* sufficient. On the other hand, the code avoids storage of redundant information, i.e., both the Green's function and polarizability matrices are distributed as well as the individual imaginary grid points. The distribution of the imaginary grid points can be set by hand with the NTAUPAR and NOMEGAPAR tags, which splits the imaginary grid points NOMEGA into NTAUPAR time and NOMEGAPAR groups. For this purpose both tags have to be divisors of NOMEGA.  The default values are usually reasonable choices provided the tag MAXMEM is set correctly and we strongly recommend to set MAXMEM instead of NTAUPAR.  | **Important:** As of version 6\\.2, MAXMEM is estimated automatically (if not set) from the \"MemAvailable\" entry of the Linux kernel in \"/proc/meminfo\". || --- | The required storage for a low\\-scaling RPA or GW calculation depends mostly on NTAUPAR, the number of MPI groups that share same imaginary time points. A rough estimate for the required bytes is given by   ```(NGX*NGY*NGZ)*(NGX_S*NGY_S*NGZ_S) / ( NCPU  / NTAUPAR ) * 16  ``` where \"NCPU\" is the number of MPI ranks used for the job,\"NGX,NGY,NGZ\" denotes the number of FFT grid points for the exact exchange and \"NGX\\_S,NGY\\_S,NGZ\\_S\" the number of FFT grid points for the supercell. Note, both grids are written to the OUTCAR file after the lines  ```FFT grid for exact exchange (Hartree Fock)FFT grid for supercell:  ``` The smaller NTAUPAR is set, the less memory per node the job requires to finish successfully.  The approximate memory requirement is calculated in advance and printed to screen and OUTCAR as follows:  ```min. memory requirement per mpi rank 1234 MB, per node 9872 MB  ``` Some Issues Particular to ACFDT\\-RPA Calculations on Metals----------------------------------------------------------- For metals, the RPA groundstate energy converges the fastest with respect to k\\-points, if the exchange (Eq. (12\\) in reference [\\[8]](#cite_note-harl:2010-8)) and correlation energy are calculated on the same k\\-point grid, HFRCUT is not set, and the long\\-wavelength contributions from the polarizability are not considered (see reference [\\[8]](#cite_note-harl:2010-8)). To evaluate Eq. (12\\), a correction energy for   E  E X X {\\\\displaystyle E\\_{\\\\mathrm {EXX} }}  related to partial occupancies has to be added to the RPA groundstate energy:[\\[8]](#cite_note-harl:2010-8)  E  R P A  \\=  E  c  \\+  E  E X X  \\+  E  H F c {\\\\displaystyle E\\_{\\\\mathrm {RPA} }\\=E\\_{\\\\mathrm {c} }\\+E\\_{\\\\mathrm {EXX} }\\+E\\_{\\\\mathrm {HFc} }}  . In vasp.5\\.4\\.1, this value is calculated for any HF type calculation (step 2\\) and can be found in the OUTCAR file after the total energy (in the line starting with *exchange ACFDT corr. \\=*). To neglect the long\\-wavelength contributions, simply set LOPTICS\\=*.FALSE.* in the ALGO\\=*Exact* step (third step), and remove the WAVEDER files in the directory. Possible tests and known issues------------------------------- ### Basis set convergence The expression for the ACFDT\\-RPA correlation energy written in terms of reciprocal lattice vectors reads:  E  c  R P A  \\=  \u222b  0  \u221e  d  \u03c9  2 \u03c0  \u2211  q  \u2208  B Z  \u2211  G  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle E\\_{\\\\rm {c}}^{\\\\rm {RPA}}\\=\\\\int \\_{0}^{\\\\infty }{\\\\frac {\\\\mathrm {d} \\\\omega }{2\\\\pi }}\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }\\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}}  . The sum over reciprocal lattice vectors has to be truncated at some   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\mathrm {max} }} , determined by   \u210f  2  \\|  G  \\+  q  \\|  2  2  m  e {\\\\displaystyle {\\\\frac {\\\\hbar ^{2}\\|{\\\\mathbf {G} }\\+{\\\\mathbf {q} }\\|^{2}}{2\\\\mathrm {m} \\_{e}}}}  \\< ENCUTGW, which can be set in the INCAR file. The default value is   2 3  \u00d7 {\\\\displaystyle {\\\\frac {2}{3}}\\\\times }  ENCUT, which experience has taught us not to change. For systematic convergence tests, instead increase ENCUT and repeat steps 1 to 4, but be aware that the \"maximum number of plane\\-waves\" changes when ENCUT is increased. Note that it is virtually impossible, to converge absolute correlation energies. Rather concentrate on relative energies (e.g. energy differences between two solids, or between a solid and the constituent atoms). Since correlation energies converge very slowly with respect to   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\rm {max}}} , VASP automatically extrapolates to the infinite basis set limit using a linear regression to the equation: [\\[9]](#cite_note-harl:2008-9)[\\[8]](#cite_note-harl:2010-8)[\\[10]](#cite_note-klimes:2014-10)  E  c  (  G  ) \\=  E  c  ( \u221e ) \\+  A  G  3 {\\\\displaystyle E\\_{\\\\mathrm {c} }({\\\\mathbf {G} })\\=E\\_{\\\\mathrm {c} }(\\\\infty )\\+{\\\\frac {A}{{\\\\mathbf {G} }^{3}}}}  . Furthermore, the Coulomb kernel is smoothly truncated between ENCUTGWSOFT and ENCUTGW using a simple cosine like window function (Hann window function). Alternatively, the basis set extrapolation can be performed by setting LSCK\\=.TRUE., using the squeezed Coulomb kernel method.[\\[11]](#cite_note-riemelmoser:jcp:2020-11) The default for ENCUTGWSOFT is 0\\.8  \u00d7 {\\\\displaystyle \\\\times } ENCUTGW (again we do not recommend to change this default).  The integral over   \u03c9 {\\\\displaystyle \\\\omega }  is evaluated by means of a highly accurate minimax integration.[\\[12]](#cite_note-kaltak:2014-12) The number of   \u03c9 {\\\\displaystyle \\\\omega }  points is determined by the flag NOMEGA, whereas the energy range of transitions is determined by the band gap and the energy difference between the lowest occupied and highest unoccupied one\\-electron orbital. VASP determines these values automatically (from vasp.5\\.4\\.1 on), and the user should only carefully converge with respect to the number of frequency points NOMEGA. A good choice is usually NOMEGA\\=12, however, for large gap systems one might obtain   \u03bc {\\\\displaystyle \\\\mu } eV convergence per atom already using 8 points, whereas for metals up to NOMEGA\\=24 frequency points are sometimes necessary, in particular, for large unit cells. Strictly adhere to the steps outlines above. Specifically, be aware that steps two and three require the WAVECAR file generated in step one, whereas step four requires the WAVECAR and WAVEDER file generated in step three (generated by setting LOPTICS\\=*.TRUE.*). Convergence with respect to the number of plane waves can be rather slow, and we recommend to test the calculations carefully. Specifically, the calculations should be performed at the default energy cutoff ENCUT, and at an increased cutoff (ideally the default energy cutoff   \u00d71\\.3 {\\\\displaystyle \\\\times 1\\.3} ). Another issue is that energy volume\\-curves are sometimes not particularly smooth. In that case, the best strategy is to set  ```ENCUT = 1.3 times default energy cutoffENCUTGWSOFT = 0.5 times default energy cutoff  ``` where the default energy cutoff is the usual one (maximum ENMAX in POTCAR files). The frequency integration also needs to be checked carefully, in particular for small gap systems (some symmetry broken atoms) convergence can be rather slow, since the one\\-electron band gap can be very small, requiring a very small minimum   \u03c9 {\\\\displaystyle \\\\omega }  in the frequency integration. ### K\\-point convergence: Spline interpolation | **Mind:** ESF\\_SPLINES\") is available as of VASP.6\\.5\\.0 || --- | It is possible to use spline interpolation to improve upon k\\-point integration errors by rewriting the RPA correlation energy as an integral   E  c  R P A  \\=  \u2211  q  \u2208  B Z  \u2211  G  S (  q \\+ G  ) {\\\\displaystyle E\\_{c}^{\\\\rm {RPA}}\\=\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }S({\\\\bf {q\\+G}})} over the electronic structure factor:  S (  q  \\+  G  ) \\= \u222b  d  \u03c9  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle S({\\\\bf {q}}\\+{\\\\bf {G}})\\=\\\\int {\\\\rm {d}}\\\\omega \\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}} If ESF\\_SPLINE\")\\=T is set, the code stores the electronic structure factor on a coarse grid defined by KPOINTS and performs a tricubic spline interpolation towards finer q\\-grids iteratively. After each iteration the RPA correlation energy is evaluated and compared to the result of previous interpolation. If the difference in energy is smaller than ESF\\_CONV\") within ESF\\_NINTER\") interpolation steps, the code considers the q\\-point integration to be converged and reports the result to OUTCAR in the following format  ```     cutoff energy     smooth cutoff   RPA   correlation   Hartree contr. to MP2  RPA spline-interp.-----------------------------------------------------------------------------------------------------           166.667           133.333      -12.9738715106      -19.7255874374      -13.4968000908           158.730           126.984      -12.8840657072      -19.6294580403      -13.4017404001           151.172           120.937      -12.7775593388      -19.5151822998      -13.3005326847           143.973           115.178      -12.6604147404      -19.3892142669      -13.1868498210           137.117           109.694      -12.5530911576      -19.2733151174      -13.0861120393           130.588           104.470      -12.4659186304      -19.1786165194      -12.9778587892           124.369            99.495      -12.3690601643      -19.0725742983      -12.8709666989           118.447            94.758      -12.2461267475      -18.9372318755      -12.7590723870 linear regression     converged value                          -14.0340307585      -20.8751715586      -14.5828037654  ``` The last column contains the result from the spline interpolation for the selected energy cutoffs reported in the first column.  | **Warning:** Delete WAVEDER for this method. || --- | Note that this method is incompatible with k\\-p perturbation theory, where the largest q\\-point integration error   lim  q \u2192 0  \u03c7 \\~  G G  \u2032  0  (  q  ,  i  \u03c9 ) \u22c5  V  G  G \u2032  (  q  ) {\\\\displaystyle \\\\lim \\_{\\\\bf {q\\\\to 0}}{\\\\tilde {\\\\chi }}\\_{{\\\\bf {GG}}'}^{0}({\\\\bf {q}},{\\\\rm {i}}\\\\omega )\\\\cdot {\\\\bf {V}}\\_{\\\\bf {GG'}}({\\\\bf {q}})}  is added explicitly to the RPA integral. This long\\-wave contribution is stored in WAVEDER, and VASP assumes you want to add this term if the file is present in the working directory.  Also, the long\\-wave limit is ill\\-defined for metallic systems, in contrast to the spline interpolation method.  | **Mind:** ESF\\_SPLINES\") can be used for metals. || --- | Nevertheless, for insulators, we still recommend using WAVEDER and not set ESF\\_SPLINES\") for efficiency reasons.  Related Tags and Sections------------------------- * ALGO for response functions and *ACFDT* calculations* NOMEGA, NOMEGAR number of frequency points* LHFCALC, switches on HF calculations* LOPTICS, required in the DFT step to store head and wings* ENCUTGW, to set cutoff for response functions* ENCUTGWSOFT* PRECFOCK controls the FFT grids in HF, GW, RPA calculations* NTAUPAR controls the number of imaginary time groups in space\\-time GW and RPA calculations* NOMEGAPAR controls the number of imaginary frequency groups in space\\-time GW and RPA calculations* MAXMEM sets the available memory per MPI rank on each node* LFINITE\\_TEMPERATURE switches on Matsubara (finite temperature) formalism* ESF\\_SPLINES\") uses tricubic spline interpolation of electronic structure factor to accelerate k\\-point convergence"}
{"file_name": "Beta-tin_Si.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Relaxation of the internal coordinates, volume and cell shape in beta\\-tin Si.  Input----- ### POSCAR  ```beta Sn    4.9000000000000 1.0    0.0     0.0 0.0    1.0     0.0 0.5    0.5     0.26 2Direct -0.125 -0.375  0.25  0.125  0.375 -0.25  ``` ### INCAR  ```System\") = beta SiISMEAR = 0; SIGMA = 0.1;ENMAX  =  240IBRION=2; ISIF=3\u00a0; NSW=15EDIFF  = 0.1E-04EDIFFG = -0.01  ``` ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` Calculation----------- This example is completely analagous to cd Si volume relaxation. Download--------  2\\_5\\_beta\\-tinSi.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorialsBack to the main page."}
{"file_name": "NVT_ensemble.md", "content": "The NVT ensemble (canonical ensemble) is a statistical ensemble that is used to study material properties under the conditions of a constant particle number N, constant volume V and a temperature fluctuating around an equilibrium value   \u27e8 T \u27e9 {\\\\displaystyle \\\\langle T\\\\rangle }  .This page describes how to sample the NVT ensemble from a molecular\\-dynamics run.   **Instructions for setting up an NVT ensemble**  There are four choices of thermostats to control the temperature for the NVT ensemble: The stochastic Andersen thermostat and Langevin thermostat, as well as the deterministic Nose\\-Hoover thermostat and Multiple Andersen thermostats can be used. See table for the corresponding MDALGO setting and related tags.  | NVT ensemble | Andersen | Langevin | Nose\\-Hoover | Multiple Andersen || --- | --- | --- | --- | --- || MDALGO | 1 | 3 | 0 or 2 | 13 || additional tags to set | ANDERSEN\\_PROB | LANGEVIN\\_GAMMA | SMASS | NSUBSYS, TSUBSYS, PSUBSYS | The additional tags in the column for every thermostat have to be set. For example, the Nose\\-Hoover thermostat needs the additional SMASS tag. There are two implementations of the Nose\\-Hoover thermostat in VASP which will give the same results. The MDALGO\\=0 version can be used even if the code was compiled without the precompiler option \\-Dtbdyn.To enforce constant volume throughout the calculation, ISIF has to be set to less than three. The cell shape and volume haveto be preoptimized when doing NVT simulations. This can either be done with a NpT molecular\\-dynamics run or by performing structure and volume optimization with IBRION\\=1 or 2 and setting ISIF\\>2\\.A general guide for molecular\\-dynamics simulations can be found on the molecular\\-dynamics page. *Example INCAR file for the Nose\\-Hoover thermostat*  ``` #INCAR molecular-dynamics tags NVT ensemble  IBRION = 0                   # choose molecular dynamics  MDALGO = 2                   # using Langevin thermostat  ISIF = 2                     # compute stress tensor but do not change box volume/shape  TEBEG = 300                  # set temperature  NSW = 10000                  # number of time steps  POTIM = 1.0                  # time step in femto seconds  SMASS = 1.0                  # setting the virtual mass for the Nose-Hoover thermostat  ``` | **Mind:** This INCAR file only contains the parameters for the molecular\\-dynamics part. The electronic minimization or the machine learning tags have to be added. || --- |"}
{"file_name": "LREAL.md", "content": "LREAL= .FALSE. \\| Auto (or A) \\| On (or O) \\| .TRUE.   Default: **LREAL** \\= .FALSE.nDescription: LREAL determines whether the projection operators are evaluated in real\\-space or in reciprocal space.  --- | LREAL\\=.FALSE. | projection done in reciprocal space || --- | --- || LREAL\\=Auto or A | projection done in real space, fully automatic optimization of projection operators (little to no user interference required) || LREAL\\=On or O | projection done in real space, projection operators are re\\-optimized (not recommended) || LREAL\\=.TRUE. | projection done in real space, use projectors on file (not recommended) |   The nonlocal part of the pseudopotential requires the evaluation of an expression:    \u2211  i j  D  i j  \\|  \u03b2  j  \u27e9 \u27e8  \u03b2  i  \\|  \u03c8 \\~  n  k  \u27e9 {\\\\displaystyle \\\\sum \\_{ij}D\\_{ij}\\|\\\\beta \\_{j}\\\\rangle \\\\langle \\\\beta \\_{i}\\|{\\\\tilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle }  .where the \"projected wavefunction character\" is defined as:  C  i n  k  \\= \u27e8  \u03b2  i  \\|  \u03c8 \\~  n  k  \u27e9  \\=  \u03a9  N  F F T  \u2211  r  \u27e8  \u03b2  i  \\|  r  \u27e9 \u27e8  r  \\|  \u03c8 \\~  n  k  \u27e9 \\=  \u03a9  N  F F T  \u2211  r  \u03b2 (  r  )  \u03c8 \\~  n  k  (  r  )  \\=  \u2211  G  \u27e8  \u03b2  i  \\|  k  \\+  G  \u27e9 \u27e8  k  \\+  G  \\|  \u03c8 \\~  n  k  \u27e9 \\=  \u2211  G  \u03b2 \u00af  (  k  \\+  G  )  C  G  n  k {\\\\displaystyle {\\\\begin{aligned}C\\_{in\\\\mathbf {k} }\\=\\\\langle \\\\beta \\_{i}\\|{\\\\tilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\&\\={\\\\frac {\\\\Omega }{N\\_{\\\\rm {FFT}}}}\\\\sum \\_{\\\\mathbf {r} }\\\\langle \\\\beta \\_{i}\\|\\\\mathbf {r} \\\\rangle \\\\langle \\\\mathbf {r} \\|{\\\\tilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\={\\\\frac {\\\\Omega }{N\\_{\\\\rm {FFT}}}}\\\\sum \\_{\\\\mathbf {r} }\\\\beta (\\\\mathbf {r} ){\\\\tilde {\\\\psi }}\\_{n\\\\mathbf {k} }(\\\\mathbf {r} )\\\\\\\\\\&\\=\\\\sum \\_{\\\\mathbf {G} }\\\\langle \\\\beta \\_{i}\\|\\\\mathbf {k} \\+\\\\mathbf {G} \\\\rangle \\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|{\\\\tilde {\\\\psi }}\\_{n\\\\mathbf {k} }\\\\rangle \\=\\\\sum \\_{\\\\mathbf {G} }{\\\\bar {\\\\beta }}(\\\\mathbf {k} \\+\\\\mathbf {G} )C\\_{\\\\mathbf {G} n\\\\mathbf {k} }\\\\end{aligned}}} This expression can be evaluated in reciprocal or real space: In reciprocal space (second line), the number of operations scales with the size of the basis set, i.e., number of plane waves. In real space (first line), the projection operators are confined to spheres around each atom. Therefore, the number of operations necessary to evaluate one Cin**k** does not increase with the system size (usually, the number of grid points within the cutoff sphere is between 500 and 2000\\). One of the major obstacles to the method working in real space is that the projection operators must be optimized, i.e., all high Fourier components must be removed from the projection operators. If this is not done, aliasing can happen, i.e., the high Fourier components of the projection operators are downfolded to low Fourier components, and random noise is introduced). Currently, VASP supports three different schemes to remove the high Fourier components from the projectors. LREAL\\=.TRUE. is the simplest one. For LREAL\\=.TRUE., the real\\-space projectors that the pseudopotential generation code has generated are used. This requires no user interference but is potentially very inaccurate. For the outdated LREAL\\=On, the real space projectors are optimized by VASP using an algorithm proposed by King\\-Smith et al.[\\[1]](#cite_note-king-smith:prb:1991-1) For the recommended LREAL\\=Auto, an unpublished scheme[\\[2]](#cite_note-kresse:tobepublished-2) is used which results in simultaneously more accurate and localized projector functions than for the King\\-Smith et al. method. To fine\\-tune the optimization procedure, the tag ROPT can and should be used, if LREAL\\=Auto (or LREAL\\=On) is used. Specifically, perform first reference calculations using LREAL\\=.False. and decrease ROPT until an acceptable accuracy, e.g., 1 meV/atom, is attained. Please also check carefully the documentation for ROPT. We recommend using the real\\-space projection scheme for systems containing more than about 30 atoms. We also strongly recommend using only LREAL\\=Auto. For LREAL\\=A (and LREAL\\=O) the projection operators are optimized by VASP on the fly (i.e. on startup). Several tags influence the optimization: * ENCUT (i.e., the energy cutoff), components beyond the energy cutoff are 'removed' from the projection operators. * PREC tag specifies how precise the real\\-space projectors should be and sets the variables ROPT accordingly to the following values: For LREAL\\=Auto | ROPT\\=\\-5E\\-4 | if PREC\\=Normal || --- | --- || ROPT\\=\\-5E\\-4 | if PREC\\=Single or SingleN || ROPT\\=\\-2\\.5E\\-4 | if PREC\\=Accurate || ROPT\\=\\-0\\.01 | if PREC\\=Low || ROPT\\=\\-0\\.002 | if PREC\\=Medium || ROPT\\=\\-4E\\-4 | if PREC\\=High | For LREAL\\=On | ROPT\\=2/3 | if PREC\\=Low || --- | --- || ROPT\\=1\\.0 | if PREC\\=Medium || ROPT\\=1\\.5 | if PREC\\=High | These defaults can be superseded by specifying the ROPT tag in the INCAR file. | **Mind:*** Real\\-space optimization (LREAL\\=Auto) always results in a small (not necessarily negligible) error. The error is usually a constant energy shift for each atom. If you are interested in energy differences, use only calculations with the same setup (i.e., same ENCUT, PREC, LREAL and ROPT setting) for all calculations. For example, if you want to calculate surface or defect energies, recalculate the bulk ground\\-state energy with exactly the same setting you are using for the surface. Another possibility is to relax the structure using real\\-space projection and to perform one final total\\-energy calculation using LREAL\\=.FALSE. to get exact energies. For PREC\\=Normal, the errors introduced by the real\\-space projection are usually of the same order of magnitude as those introduced by the wrap\\-around errors. For PREC\\=Accurate errors are usually less than 1 meV/atom. PREC\\=Low should be used only for, say, fast molecular\\-dynamics calculations, if compute resources are really an issue. * When the energy cutoff ENCUT is increased significantly w.r.t. their defaults, the real\\-space projection scheme sometimes becomes unreliable, and it might be necessary to decrease ROPT to values as small as ROPT\\=1E\\-4\\. || --- |"}
{"file_name": "LFINITE_TEMPERATURE.md", "content": "LFINITE\\_TEMPERATURE= \\[logical]   Default: **LFINITE\\_TEMPERATURE** \\= .FALSE.nDescription: LFINITE\\_TEMPERATURE switches on the finite\\-temperature formalism of many\\-body perturbation theory for adiabatic\\-connection\\-fluctuation\\-dissipation\\-theorem (ACFDT)/GW calculations.  --- This feature is available as of VASP.6\\.1\\.0 for ACFDT/random\\-phase\\-approximation (RPA), i.e., ALGO\\=ACFDT, ACFDTR, ACFDTRK, and low\\-scaling GW calculations, i.e., ALGO\\=EVGW0R, GWR\\[K].  For LFINITE\\_TEMPERATURE\\=.TRUE., a compressed Matsubara\\-frequency grid is used (instead of the zero\\-temperature formalism of many\\-body perturbation theory). This allows for GW and RPA calculations for metallic systems. [\\[1]](#cite_note-Kaltak:PRB:2020-1) To this end, the electronic temperature is set with the k\\-point smearing parameter SIGMA in units of eV, e.g. a value of   \u03c3 \\= 1 e V {\\\\displaystyle \\\\sigma \\=1eV}  corresponds to a electronic temperature of   T \u224811604 K {\\\\displaystyle T\\\\approx 11604K}  . | **Warning:** Can only be used in combination with Fermi smearing ISMEAR \\= \\-1\\. || --- |"}
{"file_name": "LWRITE_WANPROJ.md", "content": "LWRITE\\_WANPROJ= \\[logical]   Default: **LWRITE\\_WANPROJ** \\= .FALSE.nDescription: LWRITE\\_WANPROJ determines whether the Wannier projection file WANPROJ\") is written.  --- If WANPROJ\") is present, VASP skips the Wannier projection and reads the effective projectors Unk from the WANPROJ\") file for each k point."}
{"file_name": "LSPECTRALGW.md", "content": "LSPECTRALGW= .FALSE. \\| .TRUE.   Default: **LSPECTRALGW** \\= .FALSE.nDescription: LSPECTRALGW specifies to use the spectral method for calculating the self\\-energy.  --- If LSPECTRALGW \\= .TRUE. is set, the imaginary part of the self\\-energy   \u03a3 ( \u03c9 ) \\= G W {\\\\displaystyle \\\\Sigma (\\\\omega )\\=GW}  is calculated from the imaginary part of screened potential   W ( \u03c9 ) {\\\\displaystyle W(\\\\omega )}  by shifting the poles of  W {\\\\displaystyle W}  by  \u00b1 \u03f5 {\\\\displaystyle \\\\pm \\\\epsilon } , where   \u03f5 {\\\\displaystyle \\\\epsilon }  are the poles of the Green's function   G {\\\\displaystyle G}  .Generally, LSPECTRALGW affects the compute time very little. QP energies also hardlychange when LSPECTRALGW is modified.However, LSPECTRALGW \\= .TRUE. is usually slightly more robust,and should be selected for molecules and other systems with flat dispersion\\-less bands. One the other hand, LSPECTRALGW \\= .TRUE. seems to converge slightly slower, as the complex shift CSHIFT is decreased. Set this flag, if the QP energiesshow erratic behavior, for instance, if QP energies or Z\\-factors are not in the expectedrange of values (0\\.5\\<Z\\<0\\.9\\)."}
{"file_name": "LSCDM.md", "content": "LSCDM= .TRUE. \\| .FALSE.n| Default: **LSCDM** | \\= .FALSE. |  || --- | --- | --- | Description: LSCDM switches on the selected columns of the density matrix (SCDM) method.   --- The selected columns of the density matrix (SCDM) method works by fitting a unitary matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  that transforms the basis from Bloch states   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  obtained by VASP to a  Wannier basis   \\|  w  m  R  \u27e9 {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle }  .  \\|  w  m  R  \u27e9 \\=  \u2211  n  k  e  \u2212 i  k  \u22c5  R  U  m n  k  \\|  \u03c8  n  k  \u27e9 . {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle \\=\\\\sum \\_{n\\\\mathbf {k} }e^{\\-i\\\\mathbf {k} \\\\cdot \\\\mathbf {R} }U\\_{mn\\\\mathbf {k} }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle .} This is done using a  one\\-shot method \"Wannier Functions\")  through a singular\\-value decomposition as proposed by A. Damle and L. Lin [\\[1]](#cite_note-damle:mms:2018-1). In order to obtain a good Wannierization, a certain level of freedom should be given to the localized orbitals to adequately accommodate the Bloch states. This is controlled by the cutoff function specified by the CUTOFF\\_TYPE tag and related parameters   \u03bc {\\\\displaystyle \\\\mu }  (CUTOFF\\_MU) and  \u03c3 {\\\\displaystyle \\\\sigma }  (CUTOFF\\_SIGMA)."}
{"file_name": "KPOINT_BSE.md", "content": "KPOINT\\_BSE= \\[integer] (optionally \\[integer],\\[integer],\\[integer])nDescription: KPOINT\\_BSE specifies the k\\-point index at which VASP calculates the dielectric matrix.  --- In the simplest form, one can specify  ```  KPOINT_BSE = index_of_k-point  ``` Select the desired k point from the list of k points in the OUTCAR file. Additionally, a shift by an arbitrary reciprocal lattice vector can be supplied by specifying three additional integer numbers:  ``` KPOINT_BSE = index_of_k-point  n1 n2 n3  ``` This allows calculating the dielectric function at a k point outside of the first Brillouin zone corresponding to  k  \\+  n  1  b  1  \\+  n  2  b  2  \\+  n  3  b  3 {\\\\displaystyle {\\\\mathbf {k}}\\+n\\_{1}{\\\\mathbf {b}}\\_{1}\\+n\\_{2}{\\\\mathbf {b}}\\_{2}\\+n\\_{3}{\\\\mathbf {b}}\\_{3}} where   b  i {\\\\displaystyle {\\\\mathbf {b}}\\_{i}}  are the reciprocal\\-lattice vectors of the unit cell."}
{"file_name": "Ni_100_surface_relaxation.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Relaxation of the first two layers of a Ni (100\\) surface. Input----- ### POSCAR  ```fcc (100) surface 3.53   .50000   .50000   .00000  -.50000   .50000   .00000   .00000   .00000  5.00000 5Selective DynamicsKartesisch   .00000   .00000   .00000 F F F   .00000   .50000   .50000 F F F   .00000   .00000  1.00000 F F F   .00000   .50000  1.50000 T T T   .00000   .00000  2.00000 T T T  ``` * Ni lattice constant of 3\\.53  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  .* 1 atom per layer: p(1x1\\) cell.* 5 nickel layers.* First two layers (of one side) relaxed. * 3 \u00d73\\.53 \\=10\\.59  \u00c5 {\\\\displaystyle 3\\\\times 3\\.53\\=10\\.59\\\\mathrm {\\\\AA} }  vacuum. ### INCAR  ```  ISTART = 0; ICHARG = 2 general:  SYSTEM = clean Ni(100) surface  ENCUT = 270   ISMEAR = 2\u00a0; SIGMA = 0.2  ALGO = Fast  EDIFF = 1E-6 spin:  ISPIN=2  MAGMOM = 5*1 dynamic:  NSW = 100  POTIM = 0.8  IBRION = 1  ``` * Initial charge\\-density in startjob from overlapping atoms.* Default energy cut\\-off of 270 eV.* MP\\-smearing (metal).* Spin\\-polarized calculation with initial moment of 1\\.* Ionic relaxation used. ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` * Equally spaced mesh.* Odd mesh, centered on   \u0393 {\\\\displaystyle \\\\Gamma }  .* 15 k points in irreducible Brillouin zone (IBZ).* Only one k point in z\\-direction for surface. Calculation----------- * The sample output for the forces in the OUTCAR file should look like this (first and last step): First step:  ```POSITION                                       TOTAL-FORCE  (eV/Angst)-----------------------------------------------------------------------------------     0.00000      0.00000      0.00000         0.000000      0.000000      0.391352     0.00000      1.76500      1.76500         0.000000      0.000000     -0.397024     0.00000      0.00000      3.53000         0.000000      0.000000      0.005117     0.00000      1.76500      5.29500         0.000000      0.000000      0.391161     0.00000      0.00000      7.06000         0.000000      0.000000     -0.390607-----------------------------------------------------------------------------------   total drift:                                0.000000      0.000000      0.016391  ``` Last step:  ```POSITION                                       TOTAL-FORCE  (eV/Angst)-----------------------------------------------------------------------------------     0.00000      0.00000      0.00000         0.000000      0.000000      0.399012     0.00000      1.76500      1.76500         0.000000      0.000000     -0.377003     0.00000      0.00000      3.53000         0.000000      0.000000      0.105799     0.00000      1.76500      5.32685         0.000000      0.000000     -0.062054     0.00000      0.00000      7.02377         0.000000      0.000000     -0.065753-----------------------------------------------------------------------------------   total drift:                                0.000000      0.000000     -0.042925  ``` * Energy changes during relaxation from \\-25\\.556 to \\-25\\.571 eV which gives a relaxation energy of   E  r e l  \\= \u2212 15 {\\\\displaystyle E^{\\\\mathrm {rel} }\\=\\-15}  meV. Use p4vasp to check the convergence: [](File_Fig_Ni_100_surfrel_1.html) * The surface energy of 0\\.86 eV for the unrelaxed surface is calculated in the following:  \u03c3  u n r e l  \\=  1 2  (  E  s u r f  \u2212  N  a t o m s  \u22c5  E  b u l k  ) \\=  1 2  ( \u221225\\.556 \u2212 5 \u22c5 ( \u22125\\.457 ) ) \\=0\\.86 {\\\\displaystyle \\\\sigma ^{\\\\mathrm {unrel} }\\={\\\\frac {1}{2}}(E\\_{\\\\mathrm {surf} }\\-N\\_{\\\\mathrm {atoms} }\\\\cdot E\\_{\\\\mathrm {bulk} })\\={\\\\frac {1}{2}}(\\-25\\.556\\-5\\\\cdot (\\-5\\.457\\))\\=0\\.86}  eV. * The surface energy of 0\\.84 eV for the relaxed surface is then calculated as:  \u03c3 \\=  \u03c3  u n r e l  \\+  E  r e l  \\=0\\.84 {\\\\displaystyle \\\\sigma \\=\\\\sigma ^{\\\\mathrm {unrel} }\\+E^{\\\\mathrm {rel} }\\=0\\.84}  eV. * The final geometry (from the CONTCAR or OUTCAR file) should look as follows:  ```fcc (100) surface   3.53000000000000     0.5000000000000000      0.5000000000000000      0.000000000000000    -0.5000000000000000      0.5000000000000000      0.000000000000000     0.0000000000000000      0.0000000000000000      5.000000000000000 Ni 5Selective DynamicsDirect0.0000000000000000   0.0000000000000000   0.0000000000000000 F F F0.0000000000000000   0.5000000000000000   0.1000000000000014 F F F0.0000000000000000   0.0000000000000000   0.2000000000000028 F F F0.5000000000000000   0.5000000000000000   0.3018043743226639 T T T0.0000000000000000   0.0000000000000000   0.3979474020596729 T T T   ``` * Inward relaxation of surface layers: + \u0394  d  12    \t{\\\\displaystyle \\\\Delta d\\_{12}} \t \\= ((0\\.3979\\-0\\.3018\\)\\-0\\.1\\)/0\\.1\\*100\\=\\-3\\.9%. + \u0394  d  12    \t{\\\\displaystyle \\\\Delta d\\_{12}} \t \\= ((0\\.3018\\-0\\.2000\\)\\-0\\.1\\)/0\\.1\\*100\\=\\+1\\.8%. * Use p4vasp to visualize the relaxation: [](File_Fig_Ni_100_surfrel_2.html) Download--------  Ni100clean\\_rel.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "LH5.md", "content": "LH5= \\[logical]   Default: **LH5** \\= .FALSE.nDescription: LH5 determines whether the output is written to the legacy files (CHGCAR, CHG, WAVECAR) or the vaspwave.h5 file."}
{"file_name": "Phonons.md", "content": "Phonons are the collective excitation of nuclei in an extended periodic system. Here we will present a short summary with the complete derivation presented on the theory page.Let us start by making the Taylor expansion of the total energy   E {\\\\displaystyle E}  in terms of the ionic displacement   u  I \u03b1  \\=  R  I \u03b1  \u2212  R  I \u03b1  0 {\\\\displaystyle u\\_{I\\\\alpha }\\=R\\_{I\\\\alpha }\\-R\\_{I\\\\alpha }^{0}} around the equilibrium positions of the nuclei   R  I \u03b1  0 {\\\\displaystyle R\\_{I\\\\alpha }^{0}}  E ( {  R  } ) \\= E ( {  R  0  } ) \\+  \u2211  I \u03b1  \u2212  F  I \u03b1  ( {  R  0  } )  u  I \u03b1  \\+  \u2211  I \u03b1 J \u03b2  \u03a6  I \u03b1 J \u03b2  ( {  R  0  } )  u  I \u03b1  u  J \u03b2  \\+  O  (  R  3  ) {\\\\displaystyle E(\\\\{\\\\mathbf {R} \\\\})\\=E(\\\\{\\\\mathbf {R} ^{0}\\\\})\\+\\\\sum \\_{I\\\\alpha }\\-F\\_{I\\\\alpha }(\\\\{\\\\mathbf {R} ^{0}\\\\})u\\_{I\\\\alpha }\\+\\\\sum \\_{I\\\\alpha J\\\\beta }\\\\Phi \\_{I\\\\alpha J\\\\beta }(\\\\{\\\\mathbf {R} ^{0}\\\\})u\\_{I\\\\alpha }u\\_{J\\\\beta }\\+{\\\\mathcal {O}}(\\\\mathbf {R} ^{3})} with   F  I \u03b1 {\\\\displaystyle F\\_{I\\\\alpha }}  being the atomic forces and   \u03a6  I \u03b1 J \u03b2 {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }}  the second\\-order force constants. If the structure is in equilibrium (i.e. the forces are zero) then we can find the normal modes of vibration of the systemby solving the eigenvalue problem  \u2211  J \u03b2  1  M  I  M  J  \u03a6  I \u03b1 J \u03b2  e  i  q  \u22c5 (  R  J  \u2212  R  I  )  (  q  )  \u03b5  J \u03b2 , \u03bd  (  q  ) \\=  \u03c9  \u03bd  (  q  )  2  \u03b5  I \u03b1 , \u03bd  (  q  ) {\\\\displaystyle \\\\sum \\_{J\\\\beta }{\\\\frac {1}{\\\\sqrt {M\\_{I}M\\_{J}}}}\\\\Phi \\_{I\\\\alpha J\\\\beta }e^{i\\\\mathbf {q} \\\\cdot (\\\\mathbf {R} \\_{J}\\-\\\\mathbf {R} \\_{I})}(\\\\mathbf {q} )\\\\varepsilon \\_{J\\\\beta ,\\\u }(\\\\mathbf {q} )\\=\\\\omega \\_{\\\u }(\\\\mathbf {q} )^{2}\\\\varepsilon \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} )} where the normal modes   \u03b5  I \u03b1 , \u03bd  (  q  ) {\\\\displaystyle \\\\varepsilon \\_{I\\\\alpha ,\\\u }(\\\\mathbf {q} )} and corresponding frequencies   \u03c9  \u03bd  (  q  )  2 {\\\\displaystyle \\\\omega \\_{\\\u }(\\\\mathbf {q} )^{2}}  are the phonons in the adiabatic harmonic approximation. The computation of the second\\-order force constants using the supercell approach can be done using finite\\-differences or  density functional perturbation theory. It is possible to obtain the phonon dispersion at different **q** points by computing the second\\-order force constants on a sufficiently large supercell and Fourier interpolating the dynamical matrices in the unit cell. Electron\\-phonon interaction---------------------------- The movement of the nuclei leads to changes in the electronic degrees of freedom with this coupling between the electronic and phononic systems commonly referred to as  electron\\-phonon interactions.These interactions can be captured by perturbative methods or  Monte\\-Carlo sampling to populate a supercell with phonons and monitor how the electronic band\\-structure changes. How to------ * Phonons from finite differences* Phonons from density\\-functional\\-perturbation theory* Computing the phonon dispersion and DOS* Electron\\-phonon interactions from Monte\\-Carlo sampling  --- Subcategories------------- This category has only the following subcategory. ### E * Electron\\-phonon interactions Pages in category \"Phonons\"--------------------------- The following 24 pages are in this category, out of 24 total. ### C * Computing the phonon dispersion and DOS### E * Electron\\-phonon interactions from Monte\\-Carlo sampling* Electron\\-phonon interactions theory### I * IBRION### L * LPHON DISPERSION* LPHON POLAR* LPHON READ FORCE CONSTANTS### N * NFREE### P * PHON BORN CHARGES* PHON DIELECTRIC* PHON DOS* PHON G CUTOFF* PHON LBOSE* PHON LMC* PHON NEDOS* PHON NSTRUCT* PHON NTLIST* PHON NWRITE* PHON SIGMA* PHON TLIST* Phonons from density\\-functional\\-perturbation theory* Phonons from finite differences* Phonons: Theory* POTIM"}
{"file_name": "PHON_SIGMA.md", "content": "PHON\\_SIGMA= \\[real]n| Default: **PHON\\_SIGMA** | \\= 0\\.0005 eV |  || --- | --- | --- | Description: Set the width of the Gaussian function in eV to compute the phonon density of states.  --- The density of states is computed between   \\[  \u03c9  min  \u2212 5 \u03c3 ,  \u03c9  max  \\+ 5 \u03c3 ] {\\\\displaystyle \\[\\\\omega \\_{\\\\text{min}}\\-5\\\\sigma ,\\\\omega \\_{\\\\text{max}}\\+5\\\\sigma ]}  with   \u03c9  min {\\\\displaystyle \\\\omega \\_{\\\\text{min}}}  and  \u03c9  max {\\\\displaystyle \\\\omega \\_{\\\\text{max}}}  the lowest and highest phonon frequency and   \u03c3 {\\\\displaystyle \\\\sigma }  the broadening PHON\\_SIGMA.The number of energy points in this interval is set by PHON\\_NEDOS. | **Mind:** Only available as of VASP 6\\.4\\.0\\. || --- |"}
{"file_name": "Calculation_setup.md", "content": "The **Vienna ab\\-initio simulation package** (VASP) is a computer program for atomic scale materials modeling from first principles. To get a license, please refer to the registration form on the VASP website. You will get access to the VASP source and compile it directly on your hardware to achieve optimal performance.  After the installation, VASP can be executed from the command line of a Terminal. Navigate to a working directory. In the working directory, VASP looks for input files that determine what calculation is performed. The most important input files are  * the POSCAR file: Defines the structure of the material, i.e., lattice vectors, ionic positions, etc.* the INCAR file: General selection of the algorithm, setting parameters, etc.* the POTCAR file: Contains the pseudopotentials and other information relevant for the PAW method* the KPOINTS file: Defines the Bloch vectors **k** in reciprocal space. The central way to control the calculation is by setting INCAR tags in the INCAR file. Depending on the VASP calculation, there are other input files to provide settings for the calculation, e.g., the ICONST file.  | **Tip:** To learn how to set up a calculation, we recommend following some of our tutorials. || --- | Finally, VASP will write output files to the working directory.  | **Tip:** For postprocessing, py4vasp is a convenient Python package to read and visualize the produced data. || --- | This category contains all pages and topics relevant to the **computational setup**. For instance, installation, files, performance, etc. Subcategories------------- This category has the following 9 subcategories, out of 9 total. ### C * Files* Performance### H * Howto### I * INCAR tag* Input files* Installation### O * Output files### P * POTCAR tag* Pseudopotentials Pages in category \"Calculation setup\"------------------------------------- The following 3 pages are in this category, out of 3 total. ### A * Available pseudopotentials### C * Command\\-line arguments### M * Minimal reproducible example"}
{"file_name": "AMIN.md", "content": "AMIN= \\[real]   Default: **AMIN** \\= min(0\\.1,AMIX,AMIX\\_MAG)nDescription: AMIN specifies the minimal mixing parameter in Kerker's initial approximation[\\[1]](#cite_note-kerker:prb:1981-1) to the charge\\-dielectric function used in the Broyden[\\[2]](#cite_note-bluegel:phd:1988-2)[\\[3]](#cite_note-johnson:prb:1988-3)/Pulay[\\[4]](#cite_note-pulay:cpl:1980-4) mixing scheme (IMIX\\=4, INIMIX\\=1\\).  --- Kerker's initial approximation[\\[1]](#cite_note-kerker:prb:1981-1) for the charge\\-dielectric function is given by  max  (  A  G  2  G  2  \\+  B  2  ,  A  m i n  )  , {\\\\displaystyle \\\\max \\\\left({\\\\frac {AG^{2}}{G^{2}\\+B^{2}}},A\\_{\\\\rm {min}}\\\\right),} where   A {\\\\displaystyle A} \\=AMIX,   B {\\\\displaystyle B} \\=BMIX, and   A  m i n {\\\\displaystyle A\\_{\\\\rm {min}}} \\=AMIN."}
{"file_name": "ML_FFNCAR.md", "content": "This binary file contains a knewly created force field from machine learning runs with the options ML\\_MODE\\=`train`, `refit` or `select`. It's structure is identical to the ML\\_FF file. To be able to use the new force field from ML\\_FFN file it has to be simply copied to ML\\_FF and the INCAR tag ML\\_MODE\\=`run` has to be set. Since VASP 6\\.4\\.0 the ML\\_FFN file starts with an ASCII header containing the most important INCAR tags in effect during generation of this force field. In Linux shells this can be easily extracted issuing the following command:  ```head -n 1 ML_FFN  ``` The output may look like this:  ```ML_FF 0.2.1 binary { \"date\"\u00a0: \"2023-03-16T13:49:44.829\", \"ML_LFAST\"\u00a0: False, \"ML_DESC_TYPE\"\u00a0:   0, \"types\"\u00a0: [ \"Si\" ], \"training_structures\"\u00a0: 984, \"local_reference_cfgs\"\u00a0: [ 110 ], \"descriptors\"\u00a0: [ 142 ], \"ML_IALGO_LINREG\"\u00a0: 3, \"ML_RCUT1\"\u00a0:  6.0000E+00, \"ML_RCUT2\"\u00a0:  6.0000E+00, \"ML_W1\"\u00a0:  1.0000E-01, \"ML_SION1\"\u00a0:  5.0000E-01, \"ML_SION2\"\u00a0:  5.0000E-01, \"ML_LMAX2\"\u00a0: 4, \"ML_MRB1\"\u00a0: 8, \"ML_MRB2\"\u00a0: 8, \"ML_IWEIGHT\"\u00a0: 3, \"ML_WTOTEN\"\u00a0:  1.0000E+00, \"ML_WTIFOR\"\u00a0:  1.0000E+00, \"ML_WTSIF\"\u00a0:  1.0000E-10 }  ``` followed by some extra spaces (because the header is always 4096 characters long). The timestamp following `\"date\"` is also written to the `FFOUT` lines in ML\\_LOGFILE. The `\"ML_LFAST\"` item allows you to check whether this force field is ready for fast prediction mode.  ---"}
{"file_name": "WANNIER90_WIN.md", "content": "WANNIER90\\_WIN= \\[string]n| Default: **WANNIER90\\_WIN** | \\= None |  || --- | --- | --- | Description: WANNIER90\\_WIN sets the content of the **wannier90\\.win** file.  --- The WANNIER90\\_WIN tag is a multiline string, where the content of the **wannier90\\.win** file can be specified. For instance,  ```WANNIER90_WIN = \"exclude_bands 17-64 Begin ProjectionsSi:sp3End Projections # Disentanglementdis_win_min = -7dis_win_max = 16dis_num_iter = 100 guiding_centres = true \"  ``` Additionally, the value of some Wannier90 tags is set automatically based on the VASP calculation, e.g., *kpoints*, *atoms*, *unit\\_cell*, *mp\\_grid*, *spinors*, *num\\_bands*, *num\\_wann*.  Available as of VASP 6\\.2\\.0\\."}
{"file_name": "ML_LBASIS_DISCARD.md", "content": "ML\\_LBASIS\\_DISCARD= \\[logical]   Default: **ML\\_LBASIS\\_DISCARD** \\= .TRUE.nDescription: Controls whether calculation is continued or stopped after the maximum number of local reference configurations ML\\_MB for a given species is reached.  --- For ML\\_LBASIS\\_DISCARD\\=.FALSE. (default), whenever the number of local reference configurations for a given species would exceed the maximum number of allowed configurations ML\\_MB, the code will terminate (soft exit) and request the user to continue with and increased number for ML\\_MB. For ML\\_LBASIS\\_DISCARD\\=.TRUE. the code will not stop, whenever the number of local reference configurations for a given species would exceed the maximum, but old configurations are replaced by new ones. In multi\\-component systems it can happen that, although ML\\_MB is set to the maximum that is computationally affordable, one species exceeds ML\\_MB while the other species are not sufficiently sampled and still far below ML\\_MB. For that ML\\_LBASIS\\_DISCARD\\=.TRUE. should be set. In that case the fast sampled species would retain the same number of local reference configurations and the new local reference configurations would replace old ones. At the same time new local reference configurations could be added for the slowly\\-sampled species further improving their accuracy for fitting."}
{"file_name": "Memory.md", "content": "**Memory** can be a limiting factor for VASP calculations of large systems. However, there are some tags that can significantly reduce the **memory** requirements and still achieve the same results. The reduction often comes at the cost of an extended computational time, though. Complimentary to **memory**, consider the parallelization of the calculation. These topics strongly influence each other. Pages in category \"Memory\"-------------------------- The following 11 pages are in this category, out of 11 total. ### I * ISYM### K * KPOINTS OPT NKBATCH### M * MAXMEM* Construction:Memory requirement for machine\\-learned force fields* Memory requirements* ML MCONF### N * NCSHMEM* Not enough memory* NTAUPAR### P * PREC### S * Shared memory"}
{"file_name": "ELFCAR.md", "content": "The ELFCAR file is created when the LELF\\=*.TRUE.* in the INCAR file is set and contains the electron localization function denoted by   E L F {\\\\displaystyle ELF}  in Ref. [\\[1]](#cite_note-silvi:nature:371-1).  The same file format is used as for the CHGCAR file. That is, lattice vectors, atomic coordinates and number of cartesian sampling points   N  x  ,  N  y  ,  N  z {\\\\displaystyle N\\_{x},N\\_{y},N\\_{z}}  are written, followed by   E L F ( x , y , z ) {\\\\displaystyle ELF(x,y,z)}  with   x {\\\\displaystyle x}  being the fastest and   z {\\\\displaystyle z}  the slowest index.  For ISPIN\\=2,   E L  F  \u2191 {\\\\displaystyle ELF\\_{\\\\uparrow }}  is written first followed by   E L  F  \u2193 {\\\\displaystyle ELF\\_{\\\\downarrow }}  . It is recommended to avoid wrap around errors, when evaluating the ELFCAR file. This can be done by specifying PREC\\=*High* in the INCAR file. * N.B. The electronic localization function is not implemented for non\\-collinear calculations."}
{"file_name": "Charge_density.md", "content": "Pages in category \"Charge density\"---------------------------------- The following 17 pages are in this category, out of 17 total. ### B * Band\\-decomposed charge densities### C * CHGCAR### E * EINT### I * IBAND* ICHARG### K * KPUSE### L * LAECHG* LCHARG* LCHARGH5* LH5* LPARD* Construction:LPARDH5* LSEPB* LSEPK### N * NBMOD### P * PARCHG### W * Wrap\\-around errors"}
{"file_name": "NOMEGAPAR.md", "content": "NOMEGAPAR= \\[integer]n| Default: **NOMEGAPAR** | \\= NOMEGA | used in low scaling GW and RPA/ACFDT calculations. || --- | --- | --- | Description: NOMEGAPAR available as of VASP.6, specifies the number of processor groups sharing the same imaginary frequency grid points.  ---"}
{"file_name": "PROOUT.md", "content": "This file is written if LORBIT\\=5 and the RWIGS tag is set in the INCAR file. It contains the projection of the Kohn\\-Sham orbitals   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  onto a localized orbitals basis   \\|  \u03b2  l m  \u03b1  \u27e9 {\\\\displaystyle \\|\\\\beta \\_{lm}^{\\\\alpha }\\\\rangle }  which can be written as  P  l m n  k  \u03b1  \u2261 \u27e8  \u03b2  l m  \u03b1  \\|  S  \\|  \u03c8  n  k  \u27e9 \\=  \u27e8  \u03b2  l m  \u03b1  \\|  \u03c8  n  k  \u27e9  \u23df  P  l m n  k SOFT  , \u03b1  \\+  \u2211  i j  \u27e8  \u03b2  l m  \u03b1  \\|  p \\~  i  \u27e9  Q  i j  \u27e8  p \\~  j  \\|  \u03c8  n  k  \u27e9  \u23df  P  l m n  k  AUG  , \u03b1  . {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{\\\\alpha }\\\\equiv \\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|S\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle \\=\\\\underbrace {\\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } \\_{P\\_{lmn\\\\mathbf {k} }^{{\\\\text{SOFT}},\\\\alpha }}\\+\\\\underbrace {\\\\sum \\_{ij}\\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|{\\\\tilde {p}}\\_{i}\\\\rangle Q\\_{ij}\\\\langle {\\\\tilde {p}}\\_{j}\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } \\_{P\\_{lmn\\\\mathbf {k} }^{{\\\\text{AUG}},\\\\alpha }}.} Here, the two terms on the right\\-hand side are called soft and augmentation part, respectively, and   S {\\\\displaystyle S}  is the overlap matrix,  S \\= 1 \\+  \u2211  i j  \\|  p \\~  i  \u27e9  Q  i j  \u27e8  p \\~  j  \\|  . {\\\\displaystyle S\\=1\\+\\\\sum \\_{ij}\\|{\\\\tilde {p}}\\_{i}\\\\rangle Q\\_{ij}\\\\langle {\\\\tilde {p}}\\_{j}\\|.} The radial and the angular part of   \u03b2  l m  \u03b1  (  r  ) {\\\\displaystyle \\\\beta \\_{lm}^{\\\\alpha }(\\\\mathbf {r} )}  are described by a linear combination of spherical bessel functions   \u03d5  n  ( r ) {\\\\displaystyle \\\\phi \\_{n}(r)}  and by spherical harmonics   Y  l m  \u03b1  (  r  ^  ) {\\\\displaystyle Y\\_{lm}^{\\\\alpha }({\\\\hat {\\\\mathbf {r} }})} , respectively:   \u03b2  l m  \u03b1  (  r  ) \\=  Y  l m  \u03b1  (  r  ^  )  \u2211  n  \u03d5  n  ( r ) . {\\\\displaystyle \\\\beta \\_{lm}^{\\\\alpha }(\\\\mathbf {r} )\\=Y\\_{lm}^{\\\\alpha }({\\\\hat {\\\\mathbf {r} }})\\\\sum \\_{n}\\\\phi \\_{n}(r).} The spherical bessel functions   \u03d5  n  ( r ) {\\\\displaystyle \\\\phi \\_{n}(r)}  are parametrized to be non\\-zero within a radius determined by RWIGS. In addition, it so happens that   \\|  p \\~  i  \u27e9 {\\\\displaystyle \\|{\\\\tilde {p}}\\_{i}\\\\rangle }  has a similar form as   \\|  \u03b2  l m  \u03b1  \u27e9 {\\\\displaystyle \\|\\\\beta \\_{lm}^{\\\\alpha }\\\\rangle }  which simplifies the computations above. The PROOUT file contains similar information as the PROCAR file but the following differences exist: * The PROOUT file writes the real and imaginary parts of   P  l m n  k SOFT  , \u03b1 {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{{\\\\text{SOFT}},\\\\alpha }} , and the real part of the augmentation part   P  l m n  k  AUG  , \u03b1 {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{{\\\\text{AUG}},\\\\alpha }}  .* The PROCAR file contains the information of the squared projection,   P  l m n  k  \u03b1  (  P  l m n  k  \u03b1  )  \u2217 {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{\\\\alpha }(P\\_{lmn\\\\mathbf {k} }^{\\\\alpha })^{\\*}} , whereas the PROOUT file contains   P  l m n  k  \u03b1 {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{\\\\alpha }}  .* The arrangement of the output is very different in both files. This information makes it possible to construct, e.g., partial DOS projected onto bonding and anti\\-bonding molecular orbitals and the so\\-called crystal\\-orbital\\-overlap\\-population (COOP) function. Depending on the application, users might find it more practical to use the information contained in the PROJCAR and LOCPROJ files. These are controlled by the LOCPROJ tag. For spin\\-polarized calculations with ISPIN\\=2 and noncollinear calculations with LNONCOLLINEAR\\=.TRUE., **PROOUT.1** and **PROOUT.2** are written, referring to the Kohn\\-Sham orbitals' two spin components. Format------ * line 1: PROOUT* line 2: Number of kpoints, bands and ions* line 3: Twice the number of types followed by the number of ions for each type* line 4: The Fermi weights for each k point (inner loop) and band (outer loop)* line 5   \u2212 {\\\\displaystyle \\-}  ...: Real and imaginary part of   P  l m n  k SOFT  , \u03b1 {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{{\\\\text{SOFT}},\\\\alpha }}  for every   l m {\\\\displaystyle lm} \\-quantum number (inner loop), band, ion per type, k point and ion type (outer loop).* below\u00a0: augmentation part* last line: real part of   P  l m n  k  AUG  , \u03b1 {\\\\displaystyle P\\_{lmn\\\\mathbf {k} }^{{\\\\text{AUG}},\\\\alpha }}  for every   l m {\\\\displaystyle lm} \\-quantum number (inner loop), ion per type, ion type, band and k point (outer loop). | **Warning:** For VASP version \\<\\= 6\\.2\\.1, PROOUT is not correctly written when LNONCOLLINEAR \\= True. || --- | Related Tags and Sections------------------------- LORBIT, LOCPROJ, PROJCAR, PROCAR  ---"}
{"file_name": "GW_and_ACFDT.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsThe tutorial is made of the following parts: 1. bandgap of Si in GW2. bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")3. bandstructure of SrVO3 in GW4. CRPA of SrVO35. Equilibrium volume of Si in the RPA"}
{"file_name": "LASPH.md", "content": "LASPH= .TRUE. \\| .FALSE.   Default: **LASPH** \\= .FALSE.nDescription: include non\\-spherical contributions related to the gradient of the density in the PAW spheres.  --- Usually VASP calculates only the spherical contribution to the gradient corrections inside the PAW spheres (non\\-spherical contributions for the LDA part of the potential and the Hartree potential are always included). For LASPH \\= .TRUE., non\\-spherical contributions from the gradient corrections inside the PAW spheres will be included as well. For VASP.4\\.6, these contributions are only included in the total energy, after self\\-consistency has been reached disregarding the aspherical contributions in the gradient corrections. For VASP.5\\.X the aspherical contributions are properly accounted for in the Kohn\\-Sham potential as well, ifLASPH \\= .TRUE. is set. This is essential for accurate total energies and band structure calculations for *f*\\-elements (e.g. ceria), all 3*d*\\-elements (transition metal oxides), and magnetic atoms in the 2nd row (B\\-F atom), in particular if DFT\\+U or hybrid functionals, meta\\-GGAs, or vdW\\-DFT are used, since these functionals often result in aspherical charge densities."}
{"file_name": "Constrained_molecular_dynamics.md", "content": "Constrained molecular dynamics is performed using the SHAKE algorithm.[\\[1]](#cite_note-Ryckaert77-1).In this algorithm, the Lagrangian for the system   L {\\\\displaystyle {\\\\mathcal {L}}}  is extended as follows:  L  \u2217  (  q ,  q \u02d9  ) \\=  L  (  q ,  q \u02d9  ) \\+  \u2211  i \\= 1  r  \u03bb  i  \u03c3  i  ( q ) , {\\\\displaystyle {\\\\mathcal {L}}^{\\*}(\\\\mathbf {q,{\\\\dot {q}}} )\\={\\\\mathcal {L}}(\\\\mathbf {q,{\\\\dot {q}}} )\\+\\\\sum \\_{i\\=1}^{r}\\\\lambda \\_{i}\\\\sigma \\_{i}(q),} where the summation is over *r* geometric constraints,   L  \u2217 {\\\\displaystyle {\\\\mathcal {L}}^{\\*}}  is the Lagrangian for the extended system, and \u03bb*i* is a Lagrange multiplier associated with a geometric constraint \u03c3*i*:  \u03c3  i  ( q ) \\=  \u03be  i  (  q  ) \u2212  \u03be  i {\\\\displaystyle \\\\sigma \\_{i}(q)\\=\\\\xi \\_{i}({q})\\-\\\\xi \\_{i}\\\\;} with \u03be*i*(*q*) being a geometric parameter and \u03be*i* is the value of \u03be*i*(*q*) fixed during the simulation. In the SHAKE algorithm, the Lagrange multipliers \u03bbi are determined in the iterative procedure: 1. Perform a standard MD step (leap\\-frog algorithm):  v  i  t \\+  \u0394  t  /  2  \\=  v  i  t \u2212  \u0394  t  /  2  \\+  a  i  t  m  i  \u0394  t {\\\\displaystyle v\\_{i}^{t\\+{\\\\Delta }t/2}\\=v\\_{i}^{t\\-{\\\\Delta }t/2}\\+{\\\\frac {a\\_{i}^{t}}{m\\_{i}}}{\\\\Delta }t}  q  i  t \\+  \u0394  t  \\=  q  i  t  \\+  v  i  t \\+  \u0394  t  /  2  \u0394  t {\\\\displaystyle q\\_{i}^{t\\+{\\\\Delta }t}\\=q\\_{i}^{t}\\+v\\_{i}^{t\\+{\\\\Delta }t/2}{\\\\Delta }t} 2. Use the new positions *q*(*t*\\+\u0394*t*) to compute Lagrange multipliers for all constraints:  \u03bb  k  \\=  1  \u0394  t  2  \u03c3  k  (  q  t \\+  \u0394  t  )  \u2211  i \\= 1  N  m  i  \u2212 1  \u25bd  i  \u03c3  k  (  q  t  )  \u25bd  i  \u03c3  k  (  q  t \\+  \u0394  t  ) {\\\\displaystyle {\\\\lambda }\\_{k}\\={\\\\frac {1}{{\\\\Delta }t^{2}}}{\\\\frac {\\\\sigma \\_{k}(q^{t\\+{\\\\Delta }t})}{\\\\sum \\_{i\\=1}^{N}m\\_{i}^{\\-1}\\\\bigtriangledown \\_{i}{\\\\sigma }\\_{k}(q^{t})\\\\bigtriangledown \\_{i}{\\\\sigma }\\_{k}(q^{t\\+{\\\\Delta }t})}}} 3. Update the velocities and positions by adding a contribution due to restoring forces (proportional to \u03bbk):  v  i  t \\+  \u0394  t  /  2  \\=  v  i  t \u2212  \u0394  t  /  2  \\+  (  a  i  t  \u2212  \u2211  k  \u03bb  k  m  i  \u25bd  i  \u03c3  k  (  q  t  )  )  \u0394  t {\\\\displaystyle v\\_{i}^{t\\+{\\\\Delta }t/2}\\=v\\_{i}^{t\\-{\\\\Delta }t/2}\\+\\\\left(a\\_{i}^{t}\\-\\\\sum \\_{k}{\\\\frac {{\\\\lambda }\\_{k}}{m\\_{i}}}\\\\bigtriangledown \\_{i}{\\\\sigma }\\_{k}(q^{t})\\\\right){\\\\Delta }t}  q  i  t \\+  \u0394  t  \\=  q  i  t  \\+  v  i  t \\+  \u0394  t  /  2  \u0394  t {\\\\displaystyle q\\_{i}^{t\\+{\\\\Delta }t}\\=q\\_{i}^{t}\\+v\\_{i}^{t\\+{\\\\Delta }t/2}{\\\\Delta }t} 4. repeat steps 2\\-4 until either \\|\u03c3*i*(*q*)\\| are smaller than a predefined tolerance (determined by SHAKETOL), or the number of iterations exceeds SHAKEMAXITER. How to------ Geometric constraints are introduced by defining one or more entries with the STATUS parameter set to 0 in the ICONST\\-file. Constraints can be used within a standard NVT or NpT MD setting introduced by MDALGO\\=1\\|2\\|3\\. Note that fixing geometric parameters related to lattice vectors is not allowed within an NVT simulation (VASP would terminate with an error message). Constraints can be combined with restraints, time\\-dependent bias potentials (Metadynamics), monitored coordinates and other elements available within the context of MD."}
{"file_name": "Cd_Si_volume_relaxation.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Relaxation of the internal coordinates, volume and cell shape in cd Si. Input----- ### POSCAR  ```cubic diamond 5.5 0.0    0.5     0.5 0.5    0.0     0.5 0.5    0.5     0.0 2Direct -0.125 -0.125 -0.125  0.125  0.125  0.125  ``` ### INCAR  ```System\") = diamond SiISMEAR = 0; SIGMA = 0.1;ENMAX  =  240IBRION = 2; ISIF=3\u00a0; NSW=15EDIFF  = 0.1E-04EDIFFG = -0.01  ``` * IBRION\\=2 conjugate\\-gradient algorithm.* ISIF\\=3 change of internal parameter, shape and volume simultaneously. ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` Calculation----------- * To determine the equilibrium volume we can:\t+ Fit the energz over a certain volume range to an equation of state (see cd\\_Si).\t+ Alternatively we relax the structure with VASP \"on the fly\" (IBRION\\=2 and ISIF\\=3\\) * From equation of states we determine lattice parameter of   a \\=5\\.4687 {\\\\displaystyle a\\=5\\.4687}  \u00c5 (volume scan plus Murnaghan EOS using ENMAX\\=400\\). * From relaxations using IBRION\\=2 and ISIF\\=3 we get   a \\=5\\.4684 {\\\\displaystyle a\\=5\\.4684}  \u00c5. * Difference can be due to pulay stress (especially when the relaxation starts far away from equilibrium):  ```-------------------------------------------------------------------------------------Total       0.00155     0.00155     0.00155    -0.00000     -0.00000      0.00000in kB       0.06056     0.06056     0.06056    -0.00000     -0.00000      0.00000external pressure =        0.06 kB  Pullay stress =          0.00 kB  VOLUME and BASIS-vectors are now\u00a0:----------------------------------------------------------------------------- energy-cutoff\u00a0:      400.00 volume of cell\u00a0:      40.88     direct lattice vectors                 reciprocal lattice vectors    0.000000000  2.734185321  2.734185321    -0.182869828  0.182869828  0.182869828    2.734185321  0.000000000  2.734185321     0.182869828 -0.182869828  0.182869828    2.734185321  2.734185321  0.000000000     0.182869828  0.182869828 -0.182869828  ```   * To remedy this increase the plane wave cutoff by at least 30% (here we used ENMAX\\=400 instead of 240\\) and use a small EDIFF. ### Summary * Calculation of the equilibrium volume:\t+ FIt the energy over a certain volume range to an equation of state.\t+ When internal degrees of freedom exist (e.g. c/a), the structure must be optimized. Use a conjugate\\-gradient algorithm (IBRION\\=2\\) and at each volume do e.g. 10 ionic steps (NSW\\=10\\) and allow change of internal parameters and shape (ISIF\\=4\\). * Simpler but less reliable: relaxing all degrees of freedom including volume.\t+ To relax all degrees of freedom use ISIF\\=3 (internal coordinates, shape and volume).\t+ Mind pulay stress problem. Increase plane wave cutoff by 25\\-30% when the volume is allowed to change. Download--------  diamondSivolrel.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorialsBack to the main page."}
{"file_name": "LFOCKAEDFT.md", "content": "LFOCKAEDFT= \\[logical]   Default: **LFOCKAEDFT** \\= .FALSE.nDescription: LFOCKAEDFT forces VASP to use the same charge augmentation for the Hartree and DFT exchange correlation part as is used in the Fock exchange andthe many body beyond DFT methods, such as RPA, MP2 etc.  --- This flag should be set only in exceptional cases. The Hartree as wellas the DFT part are usually calculated very accurately using the one\\-centrePAW spheres. Restoring the all\\-electron charge accurately on the planewave grid adds potentially noise, but should not change the results (relative energies,forces etc.).The flag, however, needs to be set for optimized potential methods, whichare supported by VASP but not documented yet."}
{"file_name": "LHARTREE.md", "content": "LHARTREE= \\[logical]   Default: **LHARTREE** \\= .TRUE.nDescription: Controls whether the bubble diagrams are included in the BSE calculation.  --- LADDER is used together with LHARTREE. If LADDER\\=*.FALSE.*, the ladder diagrams, i.e., the exchange terms related to   W {\\\\displaystyle W}  or the screened exchange, are not included.If LHARTREE\\=*.FALSE.*, the Hartree diagrams or bubble diagrams are not included. The following table summarizes all possible combinations: | LHARTREE | LADDER |  || --- | --- | --- || .TRUE. | .TRUE. | full BSE / TDHF || .FALSE. | .TRUE. | only excitonic effects (ladders) || .TRUE. | .FALSE. | random phase approximation (rings \\= bubbles only) || .FALSE. | .FALSE. | independent particle picture | The last combination can be useful for sanity checks: the results must be identical to the results obtained usingLOPTICS\\=*.TRUE.* in the preceding calculations. If this is not the case, it usually implies that the one\\-electronenergies have been updated in the WAVECAR file, or that the WAVEDER file is not properly set up. The end of BSE explains how to recalculate the WAVEDER file from an existing WAVECAR file."}
{"file_name": "Personal_computer_installation.md", "content": "Here you will find instructions on how to install VASP on some widely\\-used Linux distributions. For the sake of simplicity the suggested build processes rely as much as possible on compilers and libraries provided by the operating system's package manager. The focus is on minimizing the effort to obtain working VASP binaries with only little changes required to the provided `makefile.include` templates in the `arch` directory. | **Warning:** These short and convenient installation instructions may come at the cost of performance. They are not optimized with respect to compilers, libraries and hardware. Please consider benchmarking and optimizing your build process prior to large\\-scale production runs. || --- | In order to verify each build we run the FAST category tests of the testsuite.  | **Tip:** All build instructions presented here include HDF5 support \"Makefile.include\") to allow post\\-processing of results with py4vasp. || --- |  The build instructions have been tested on clean installations (virtual machines or docker images) of the operating systems in the following table. Search for your desired combination of OS and VASP and click on the provided link to get directly to the corresponding section on this page: | Operating system | | VASP | | || --- | --- | --- | --- | --- || Name | Version | 6\\.3\\.0 \\- 6\\.3\\.1 | 6\\.3\\.2 | 6\\.4\\.X || Debian | 11 | Link | | ||  | 12 |  |  | Link || Ubuntu | 20\\.04 | Link |  ||  | 22\\.04 | Link | | || Fedora | 35 | Link |  |  ||  | 37 \\- 38 |  |  | Link || Rocky Linux | 8\\.5 | Link |  |  ||  | 9\\.0 |  | Link ||  | 9\\.2 |  |  | Link | A  red box background indicates that there are known issues with the used compiler/library versions (see the individual instructions for details). The table and corresponding instructions will be updated when either a new version of VASP or a major release of the operating systems is available. However, not all combinations will be tested and hence some fields will stay blank. In these cases it may still be helpful to start from instructions for close\\-by tested combinations.   Debian------ ### Building VASP 6\\.3\\.X to 6\\.4\\.X on Debian 11  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-10\\.2\\.1 | openmpi\\-4\\.1\\.0 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.13 | | netlib\\-scalapack\\-2\\.1\\.0 | hdf5\\-1\\.10\\.6 | Memory\\-leak[\\[1]](#cite_note-ompi-bug-1-1) | These packages can be installed directly from the command line like this:  ```sudo apt install rsync make build-essential g++ gfortran libopenblas-dev libopenmpi-dev libscalapack-openmpi-dev libfftw3-dev libhdf5-openmpi-dev  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack-openmpi ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi/ -lhdf5_fortranINCS       += -I/usr/include/hdf5/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. ### Building VASP 6\\.4\\.X on Debian 12  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-12\\.2\\.0 | openmpi\\-4\\.1\\.4 | fftw\\-3\\.3\\.10 | openblas\\-0\\.3\\.21 | | netlib\\-scalapack\\-2\\.2\\.1 | hdf5\\-1\\.10\\.8 |  | These packages can be installed directly from the command line like this:  ```sudo apt install rsync make build-essential g++ gfortran libopenblas-dev libopenmpi-dev libscalapack-openmpi-dev libfftw3-dev libhdf5-openmpi-dev  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack-openmpi ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi/ -lhdf5_fortranINCS       += -I/usr/include/hdf5/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. Ubuntu------ ### Building VASP 6\\.3\\.0 \\- 6\\.3\\.1 on Ubuntu 20\\.04  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-9\\.4\\.0 | openmpi\\-4\\.0\\.3 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.8 | | netlib\\-scalapack\\-2\\.1\\.0 | hdf5\\-1\\.10\\.4 | \\- | These packages can be installed directly from the command line like this:  ```sudo apt install make build-essential g++ gfortran libopenblas-dev libopenmpi-dev libscalapack-openmpi-dev libfftw3-dev libhdf5-openmpi-dev  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the line adding `-fallow-argument-mismatch` to the variable `FFLAGS`:  ```# For gcc-10 and higher (comment out for older versions)#FFLAGS     += -fallow-argument-mismatch ```* Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack-openmpi ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi/ -lhdf5_fortranINCS       += -I/usr/include/hdf5/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. ### Building VASP 6\\.3\\.X to 6\\.4\\.X on Ubuntu 22\\.04  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-11\\.2\\.0 | openmpi\\-4\\.1\\.2 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.20 | | netlib\\-scalapack\\-2\\.1\\.0 | hdf5\\-1\\.10\\.7 | \\- | These packages can be installed directly from the command line like this:  ```sudo apt install rsync make build-essential g++ gfortran libopenblas-dev libopenmpi-dev libscalapack-openmpi-dev libfftw3-dev libhdf5-openmpi-dev  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack-openmpi ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi/ -lhdf5_fortranINCS       += -I/usr/include/hdf5/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. Fedora------ ### Building VASP 6\\.3\\.0 \\- 6\\.3\\.1 on Fedora 35  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-11\\.2\\.1 | openmpi\\-4\\.1\\.1 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.19 | | netlib\\-scalapack\\-2\\.1\\.0 | hdf5\\-1\\.10\\.7 | Memory\\-leak[\\[1]](#cite_note-ompi-bug-1-1) | These packages can be installed directly from the command line like this:  ```sudo yum install gcc gcc-c++ gcc-gfortran openblas-devel openmpi-devel scalapack-openmpi-devel fftw-devel hdf5-openmpi-devel  ``` Add the following lines to your `.bashrc` file located in your home directory:  ```export PATH=${PATH}:/usr/lib64/openmpi/bin/export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib64/openmpi/lib  ``` and either open a new shell or run this command to activate the lines above:  ```source ~/.bashrc  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -lhdf5_fortranINCS       += -I/usr/lib64/gfortran/modules/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. ### Building VASP 6\\.4\\.X on Fedora 37 to 38  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | OS version | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- | --- || 37 | gcc\\-12\\.3\\.1 | openmpi\\-4\\.1\\.4 | fftw\\-3\\.3\\.10 | openblas\\-0\\.3\\.21 | | netlib\\-scalapack\\-2\\.2\\.0 | hdf5\\-1\\.12\\.1 |  || 38 | gcc\\-13\\.2\\.1 | openmpi\\-4\\.1\\.4 | fftw\\-3\\.3\\.10 | openblas\\-0\\.3\\.21 | | netlib\\-scalapack\\-2\\.2\\.0 | hdf5\\-1\\.12\\.1 |  | These packages can be installed directly from the command line like this:  ```sudo yum install rsync gcc gcc-c++ gcc-gfortran openblas-devel openmpi-devel scalapack-openmpi-devel fftw-devel hdf5-openmpi-devel  ``` Add the following lines to your `.bashrc` file located in your home directory:  ```export PATH=${PATH}:/usr/lib64/openmpi/bin/export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib64/openmpi/lib  ``` and either open a new shell or run this command to activate the lines above:  ```source ~/.bashrc  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -lhdf5_fortranINCS       += -I/usr/lib64/gfortran/modules/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. Rocky Linux----------- ### Building VASP 6\\.3\\.0 \\- 6\\.3\\.1 on Rocky Linux 8\\.5  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-11\\.2\\.1 | openmpi\\-4\\.1\\.1 | fftw\\-3\\.3\\.5 | openblas\\-0\\.3\\.12 | | netlib\\-scalapack\\-2\\.0\\.2 | hdf5\\-1\\.10\\.5 | Memory\\-leak[\\[1]](#cite_note-ompi-bug-1-1) | Some of these packages are available from the default package sources:  ```sudo dnf install openmpi-devel fftw-devel  ``` Unfortunately the GCC version 8\\.5 provided by default is not suitable for compiling VASP. As an alternative we can use a newer version from the EPEL repositories:  ```sudo dnf install epel-releasesudo dnf install gcc-toolset-11-gcc gcc-toolset-11-gcc-c++ gcc-toolset-11-gcc-gfortran  ``` Furthermore, some required libraries are available within the \"PowerTools\" repositories:  ```sudo dnf install dnf-plugins-coresudo dnf config-manager --set-enabled powertoolssudo dnf install openblas-devel scalapack-openmpi-devel hdf5-openmpi-devel  ``` Add the following lines to your `.bashrc` file located in your home directory:  ```export PATH=/opt/rh/gcc-toolset-11/root/bin/:/usr/lib64/openmpi/bin/:${PATH}  ``` and either open a new shell or run this command to activate the lines above:  ```source ~/.bashrc  ``` | **Mind:** As long as the path `/opt/rh/gcc-toolset-11/root/bin/` is in the `PATH` variable the system's default compiler binaries (`gcc`, `g++`, `gfortran`,...) are \"hidden\" behind the newer ones. || --- | Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -lhdf5_fortranINCS       += -I/usr/lib64/gfortran/modules/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. ### Building VASP 6\\.3\\.2 on Rocky Linux 9\\.0  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-11\\.2\\.1 | openmpi\\-4\\.1\\.1 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.15 | | netlib\\-scalapack\\-2\\.2\\.0 | hdf5\\-1\\.12\\.1 | Memory\\-leak[\\[1]](#cite_note-ompi-bug-1-1) | Some of these packages are available from the default package sources:  ```sudo dnf install gcc gcc-c++ gcc-gfortran openmpi-devel fftw-devel  ``` Some required libraries are available within the \"CRB\" (\"Code Ready Builder\") and EPEL repositories repositories:  ```sudo dnf config-manager --set-enabled crbsudo dnf install openblas-develsudo dnf install epel-releasesudo dnf install scalapack-openmpi-devel hdf5-openmpi-devel  ``` Add the following lines to your `.bashrc` file located in your home directory:  ```export PATH=${PATH}:/usr/lib64/openmpi/bin/export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib64/openmpi/lib  ``` and either open a new shell or run this command to activate the lines above:  ```source ~/.bashrc  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -lhdf5_fortranINCS       += -I/usr/lib64/gfortran/modules/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. ### Building VASP 6\\.4\\.X on Rocky Linux 9\\.2  --- First, we need to make sure that the prerequisites for building VASP are met. Here, we install the following compiler and libraries from the system's package manager: | Compiler | MPI | FFT | BLAS | LAPACK | ScaLAPACK | HDF5 | Known issues || --- | --- | --- | --- | --- | --- | --- | --- || gcc\\-11\\.3\\.1 | openmpi\\-4\\.1\\.1 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.21 | | netlib\\-scalapack\\-2\\.2\\.0 | hdf5\\-1\\.12\\.1 | Memory\\-leak[\\[1]](#cite_note-ompi-bug-1-1) | Some of these packages are available from the default package sources:  ```sudo dnf install rsync gcc gcc-c++ gcc-gfortran openmpi-devel fftw-devel  ``` Some required libraries are available within the \"CRB\" (\"Code Ready Builder\") and EPEL repositories repositories:  ```sudo dnf install 'dnf-command(config-manager)'sudo dnf config-manager --set-enabled crbsudo dnf install openblas-develsudo dnf install epel-releasesudo dnf install scalapack-openmpi-devel hdf5-openmpi-devel  ``` Add the following lines to your `.bashrc` file located in your home directory:  ```export PATH=${PATH}:/usr/lib64/openmpi/bin/export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib64/openmpi/lib  ``` and either open a new shell or run this command to activate the lines above:  ```source ~/.bashrc  ``` Next, unpack the VASP source code to a location of your choice. Then change into the VASP base directory and use the `arch/makefile.include.gnu_omp` template as basis for the `makefile.include`:  ```cp arch/makefile.include.gnu_omp makefile.include  ``` Search for the paragraph in `makefile.include` starting with `## Customize as of this point!` and apply the following changes below: * Comment out the `OPENBLAS_ROOT` variable (not needed) and set `BLASPACK`:  ```# BLAS and LAPACK (mandatory)#OPENBLAS_ROOT\u00a0?= /path/to/your/openblas/installationBLASPACK    = -lopenblas ```* Comment out the `SCALAPACK_ROOT` variable (not needed) and set `SCALAPACK`:  ```# scaLAPACK (mandatory)#SCALAPACK_ROOT\u00a0?= /path/to/your/scalapack/installationSCALAPACK   = -lscalapack ```* Comment out the `FFTW_ROOT` variable (not needed). Set `LLIBS` and `INCS` in the FFTW section:  ```# FFTW (mandatory)#FFTW_ROOT \u00a0?= /path/to/your/fftw/installationLLIBS      += -lfftw3 -lfftw3_ompINCS       += -I/usr/include ```* Enable HDF5 support by adding `-DVASP_HDF5` to the `CPP_OPTIONS` variable. Leave `HDF5_ROOT` variable commented out (not needed). Set `LLIBS` and `INCS` in the HDF5 section:  ```# HDF5-support (optional but strongly recommended)CPP_OPTIONS+= -DVASP_HDF5#HDF5_ROOT \u00a0?= /path/to/your/hdf5/installationLLIBS      += -lhdf5_fortranINCS       += -I/usr/lib64/gfortran/modules/openmpi/ ``` Save your `makefile.include` and compile VASP:  ```make DEPS=1 -j  ``` Once the build process is complete the binaries are located in the VASP `bin` subfolder. They were compiled with OpenMP\\-threading support. Before running VASP please always check if the `OMP_NUM_THREADS` environment variable is set according to your needs. For example, if you require only pure MPI parallelization without OpenMP threading add  ```export OMP_NUM_THREADS=1  ``` in your `~/.bashrc` file. Footnotes and"}
{"file_name": "ML_ISCALE_TOTEN.md", "content": "ML\\_ISCALE\\_TOTEN= \\[integer]   Default: **ML\\_ISCALE\\_TOTEN** \\= 2nDescription: This tag specifies how to scale the energy data in the machine learning force field method.  --- The following cases are possible: * `ML_ISCALE_TOTEN = 1`: The total energy is scaled to the total energy of the isolated atoms given by ML\\_EATOM\\_REF.* `ML_ISCALE_TOTEN = 2`: The total energy is scaled to the average of the training data. This is the default setting."}
{"file_name": "PMASS.md", "content": "PMASS= \\[Real]   Default: **PMASS** \\= 1000nDescription: PMASS assigns a fictitious mass (in amu) to the lattice degrees\\-of\\-freedom in case of Parrinello\\-Rahman dynamics (in case VASP was compiled with \\-Dtbdyn).  --- When running *NpT* simulations with a Langevin thermostat[\\[1]](#cite_note-Allen91-1) (MDALGO\\=3\\), using the method of Parrinello and Rahman,[\\[2]](#cite_note-Parrinello80-2)[\\[3]](#cite_note-Parrinello81-3) a fictitious mass (in amu) for the lattice degrees\\-of\\-freedom has to be assigned using the PMASS tag.The friction coefficient for lattice degrees\\-of\\-freedom have to be specified (in ps\\-1) by means of the LANGEVIN\\_GAMMA\\_L tag. The friction coefficients \u03b3 for the atomic degrees\\-of\\-freedom are specified using the LANGEVIN\\_GAMMA tag. The optimal setting for PMASS depends very much on the particular system at hand and can be considered as a compromise between two opposing factors: too large values lead to very slow variation of lattice degrees of freedom (and hence the sampling becomes inefficient) while too small value can lead to too large geometric changes in an MD step and hence may cause numerical problems. We strongly recommend to make careful tests with various settings before performing the production run."}
{"file_name": "LKPROJ.md", "content": "LKPROJ= .TRUE. \\| .FALSE.   Default: **LKPROJ** \\= .FALSE.nDescription: switches on the **k**\\-point projection scheme.  --- For LKPROJ\\=.TRUE., VASP will project the orbitals onto the reciprocal space of an alternative unit cell.This unit cell has to be supplied in the file POSCAR.prim, in the usual POSCAR format. As a first step, the **k**\\-projection scheme determines the set {**k\u2032**}, of **k**\\-points in the irreducible part of the first Brillouin zone of the structure given in POSCAR.prim, for which  \u27e8  k  \u2032  \\+  G  \u2032  \\|  k  \\+  G  \u27e9 \u2260 0 {\\\\displaystyle \\\\langle \\\\mathbf {k} '\\+\\\\mathbf {G} '\\|\\\\mathbf {k} \\+\\\\mathbf {G} \\\\rangle \\\eq 0} where **G** and **G\u2032** are reciprocal space vectors in the reciprocal spaces of the structures specified in POSCAR and POSCAR.prim, respectively. As usual, the set of points {**k**} is specified in the KPOINTS file.The set {**k\u2032**} is written to the OUTCAR file. Look at the part of the OUTCAR following NKPTS\\_PRIM.  Once the set {**k\u2032**} has been determined VASP will compute the following  K  n  k  \u03c3  k  \u2032  \\=  \u2211  G G  \u2032  \\|  \u27e8  k  \u2032  \\+  G  \u2032  \\|  k  \\+  G  \u27e9 \u27e8  k  \\+  G  \\|  \u03c8  n  k  \u03c3  \u27e9  \\|  2 {\\\\displaystyle \\\\mathrm {K} \\_{n\\\\mathbf {k} \\\\sigma \\\\mathbf {k} '}\\=\\\\sum \\_{\\\\mathbf {GG} '}\\|\\\\langle \\\\mathbf {k} '\\+\\\\mathbf {G} '\\|\\\\mathbf {k} \\+\\\\mathbf {G} \\\\rangle \\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|\\\\psi \\_{n\\\\mathbf {k} \\\\sigma }\\\\rangle \\|^{2}} and writes this information onto the PRJCAR and vasprun.xml\") files. Kn**k**\u03c3**k\u2032** provides a measure of how strongly the orbital   \u03a8 {\\\\displaystyle \\\\Psi } n**k**\u03c3 contributes at the point **k\u2032** in the reciprocal space of structure POSCAR.prim. One may, for instance, use this scheme to project the orbitals of a supercell onto the reciprocal space of a generating primitive cell. | **Warning:** At the moment the **k**\\-point projection only works with NPAR\\=1\\. || --- | | **Mind:** Available as of VASP version 6\\.0\\.0\\. || --- |"}
{"file_name": "VDW_S6.md", "content": "VDW\\_S6= \\[real]nDescription: VDW\\_S6 defines the global scaling factor   s  6 {\\\\displaystyle s\\_{6}}  .  --- VDW\\_S6 sets the global scaling factor   s  6 {\\\\displaystyle s\\_{6}}  for the DFT\\-D2, DFT\\-D4, DFT\\-ulg, and Tkatchenko\\-Scheffler methods."}
{"file_name": "PRECFOCK.md", "content": "PRECFOCK= Normal \\| Accurate \\| Fast \\| Medium \\| Single \\| Lown| Default: **PRECFOCK** | \\= Fast | for RPAR calculations || --- | --- | --- ||  | \\= Single | if PREC\\=Single or SingleN ||  | \\= Normal | else | Description: PRECFOCK controls the FFT grids used in the exact exchange routines (Hartree\\-Fock and hybrid functionals).  --- The FFT grid used for the exact exchange contributions can be chose to be different from the one used for the Hartree and DFT potentials. Information on the FFT grid that is used in the exact Fock exchange routines is written to the OUTCAR file after the lines  ```FFT grid for exact exchange (Hartree Fock)  ``` We recommend to set PRECFOCK\\=Normal for routine calculations.If speed is an issue, you can also use PRECFOCK\\=Fast (e.g. use this to pre\\-converge the orbitals). For very high precision, in particular for phonon calculations, PRECFOCK\\=Accurate is recommended.The two setting, PRECFOCK\\=Medium and PRECFOCK\\=Low are not recommended, but have been kept to maintain compatibility with older VASP versions. Generally, as opposed to gradient corrected density functionals, the exact exchange energy is rather insensitive to the FFT grids, and in many cases a rather coarse grid can be used to calculate the overlap densities and the exact exchange (Fock) potential. Exact exchange requires one to evaluation the overlap density  \u03c8  k  n  \u2217  (  r  )  \u03c8  q  m  (  r  ) {\\\\displaystyle \\\\psi \\_{\\\\mathbf {k} n}^{\\*}(\\\\mathbf {r} )\\\\psi \\_{\\\\mathbf {q} m}(\\\\mathbf {r} )} between two orbitals. Strictly speaking, errors in the convolution (aliasing errors) are only avoided, if the FFT grid contains all Fourier components up to twice the plane wave with the largest wave vector, 2\\|Gcut\\|. As usual, \\|Gcut\\| is determined by the plane wave cutoff (ENCUT). A grid avoiding aliasing errors is chosen by setting PRECFOCK\\=Accurate. In this case, the FFT grid for the exact exchange is identical to the FFT grid used for the orbitals for PREC\\=Accurate in the DFT part. PRECFOCK\\=Accurate is the recommended setting for very accurate calculations. For PRECFOCK\\=Low and Fast, the smallest possible FFT grid that just encloses the cutoff sphere (Gcut\\|) is used. This accelerates the calculations by roughly a factor two to three, but causes slight errors in the total energies and some noise in the calculated forces. To reduce the noise, the augmentation chargesare made very soft for PRECFOCK\\=Fast (whereas PRECFOCK\\=Low uses the standard augmentation charges also used for DFT). For PRECFOCK\\=Normal, the FFT grid for the exact exchange is identical to the FFT grid used for the orbitals for PREC\\=Normal in the DFT part. In this case, the grid density is between the ones forPRECFOCK\\=Accurate and PRECFOCK\\=Fast. This is often a very reasonable comprise and hence recommended for most routine calculations. For PRECFOCK\\=Fast, Normal and Accurate, the augmentation charges (required to restore the norm and dipoles of the overlap density on the plane wave grid) are softened, such that an accurate presentation on the plane wave grid is possible even for relatively coarse FFT grids. The sphere size is printed out after  ```Radii for the augmentation spheres in the nonlocal exchange  ``` Since VASP always uses one\\-center terms to correct for the difference between all\\-electron and pseudo orbitals, the precise shape of the augmentation charges matters little for exchange energies. Still it is recommended to keep PRECFOCK and PREC the same if relative energies are calculated (for instance adsorption energies, energies differences between different phases, etc.). The following table summarizes the possible setting: | PRECFOCK | FFT\\-grid | Augmentation charge | Quality | Comment || --- | --- | --- | --- | --- || Normal | 3/2\u00d7Gcut identical to std. FFT for PREC\\=Normal | soft augmentation chargea | accurate forces and energy | good compromise || Accurate | 2\u00d7Gcut identical to std. FFT for PREC\\=Accurate | soft augmentation chargea | very accurate forces and energy | for phonons || Fast | Gcut d | very soft augmentation chargeb | some noise in forces/good energy | need for speed || Medium | strictly identical to std. FFT | identical to standard DFT | identical to standard DFT | outdated || Singlec | strictly identical to std. FFT | identical to standard DFT | identical to standard DFT | if compatibility between Hartree and exchange is desired || Low | Gcut | identical to standard DFT | large noise in forces/energy errors | outdated || a radius for augmentation sphere is increased by factor 1\\.25 compared to default. b radius is increased by factor 1\\.35 compared to default except for *s* \\-like charge; for the *s* \\-channel the radius of the augmentation sphere is increased by a factor 1\\.25\\. c if user selects PREC \\= Single or PREC \\= SingleN, the default for PRECFOCK also becomes Single. | | | | | Medium and Single are synonyms. They are useful the select the same treatment for the Hartree and exchange term. This can be advantageously for correlated wave function calculations to obtain a numerically exact balance and compensation between Hartree and exchange (for instance for the upcoming auxiliary field Monte\\-Carlo module in VASP). For conventional Hartree\\-Fock or hybrid functional calculations, Normal or Accurate should be used.  In this table, Gcut is determined by the relation   E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}} with Ecut\\=ENCUT.  Even PRECFOCK\\=Fast yields fairly low noise in the forces and virtually no egg\\-box effects (aliasing errors). In the forces, the noise is usually below 0\\.01 eV/\u00c5. For PRECFOCK\\=N and PRECFOCK\\=A, noise is usually not an issue, and the accuracy is sufficient even for phonon calculations in large supercells. Any combination of PREC and PRECFOCK is allowed by the code. Useful settings of increasing precision are however:  ```PREC = Normal\u00a0; PRECFOCK = Fast      \u00a0! if your are in need for speedPREC = Normal\u00a0; PRECFOCK = Normal    \u00a0! the defaultPREC = Accurate\u00a0; PRECFOCK = Normal  \u00a0! increase the precision for DFT part; since exchange dominates the compute time, only slightly slowerPREC = Accurate\u00a0; PRECFOCK = Accurate\u00a0! highest accuracy, suggested for phonons  ```"}
{"file_name": "STOPCAR.md", "content": "Using the STOPCAR file it is possible to stop VASP during the program execution. If the STOPCAR file contains the line  ```LSTOP = .TRUE.  ``` then VASP stops at the next ionic step. On the other hand, if the STOPCAR file contains the line  ``` LABORT = .TRUE.  ``` VASP stops at the next electronic step, i.e. WAVECAR and CHGCAR might contain non converged results. If possible use the first option.  ---"}
{"file_name": "Spin-orbit_coupling_in_a_Ni_monolayer.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials Task---- Spin\\-orbit coupling (SOC) in a freestanding Ni monolayer. Input----- ### POSCAR  ```fcc Ni 100 surface 3.53   .50000   .50000   .00000  -.50000   .50000   .00000   .00000   .00000  5.00000 1Cartesian   .00000   .00000   .00000  ``` ### INCAR  ```SYSTEM        = Ni (100) monolayerISTART        = 0ENCUT         = 270.00LNONCOLLINEAR = .TRUE.MAGMOM        = 0.0 0.0 1.0VOSKOWN       = 1LSORBIT       = .TRUE. LMAXMIX       = 4  ``` * Initialization of moment along z\\-direction (out of plane) (MAGMOM \\= 0\\.0 0\\.0 1\\.0\\).* Spin\\-orbit interaction switched on (LSORBIT\\=*.TRUE.*).* For the second calculation, switch to in\\-plane magnetization by setting MAGMOM \\= 1\\.0 0\\.0 0\\.0 in the INCAR file. ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * The sample output for the total energy using out of plane magnetization is given in the OSZICAR file:  ``` ...DAV:  20    -0.371322930070E+01    0.15852E-03   -0.11632E-03   636   0.235E-01    0.225E-02DAV:  21    -0.371323204989E+01   -0.27492E-05   -0.13047E-05   500   0.184E-02   1 F= -.37132320E+01 E0= -.37139803E+01  d E =0.224478E-02  mag=  0.0000  0.0000  0.9035  ``` * The sample output for the total energy using in plane magnetization looks like the following:  ``` ...DAV:  19    -0.371443443024E+01   -0.80757E-04   -0.35822E-03  1084   0.323E-01    0.119E-02DAV:  20    -0.371446032472E+01   -0.25894E-04   -0.42423E-05   916   0.263E-02   1 F= -.37144603E+01 E0= -.37150300E+01  d E =0.170900E-02  mag=  0.9049  0.0000  0.0000  ``` * From the energy difference of these calculations we see that the easy axis lies in plane:  E  MAE  \\= E (  m  \u22a5  ) \u2212 E (  m  \u2225  ) \\=1\\.2  meV {\\\\displaystyle E\\_{\\\\textrm {MAE}}\\=E(m\\_{\\\\perp })\\-E(m\\_{\\\\parallel })\\=1\\.2\\\\,{\\\\textrm {meV}}} Download--------  4\\_4\\_SOI\\_Ni.tgz Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials"}
{"file_name": "LCALCPOL.md", "content": "LCALCPOL= .TRUE. \\| .FALSE.   Default: **LCALCPOL** \\= .FALSE.nDescription: LCALCPOL\\=.TRUE. switches on the evaluation of the Berry phase expressions for the macroscopic electronic polarization in accordance with the so\\-called Modern Theory of Polarization.  --- For LCALCPOL\\=.TRUE., VASP calculates the electronic contribution to the polarization, along the three reciprocal lattice vectors **G**i, i\\=1,2,3, (i.e. \u03a3i **P**\u00b7**G**i) in a single run (unlike LBERRY\\=.TRUE.). ### An example: The fluorine displacement dipole (Born effective charge) in NaF * With INCAR file:  ```PREC = MedEDIFF= 1E-6 ISMEAR = 0DIPOL  = 0.25 0.25 0.25 LCALCPOL = .TRUE.  ``` * KPOINTS file:  ```6x6x6 0Gamma 6 6 6 0 0 0  ``` * POSCAR file:  ``` NaF 4.5102 0.0 0.5 0.5 0.5 0.0 0.5 0.5 0.5 0.0 1 1Direct  0.0000000000000000  0.0000000000000000  0.0000000000000000  0.5000000000000000  0.5000000000000000  0.5000000000000000  ``` * and LDA Na\\_sv and F PAW datasets. The OUTCAR file should now contain the following lines:  ```            Ionic dipole moment: p[ion]=(     2.25510     2.25510     2.25510 ) electrons Angst  Total electronic dipole moment: p[elc]=(     0.00000     0.00000     0.00000 ) electrons Angst  ``` Here the units \"electrons Angst\" denote   e  \u00c5  \\= \u2212 1\\.60210  \u2212 19  C  \u00c5 {\\\\displaystyle e\\\\mathrm {\\\\AA} \\=\\-1\\.60210^{\\-19}C\\\\mathrm {\\\\AA} }  . To calculate the change in the electronic polarization of NaF due to the displacement of the fluorine sublattice we repeat the previous calculation with the following POSCAR file:  ``` NaF 4.5102 0.0 0.5 0.5 0.5 0.0 0.5 0.5 0.5 0.0 1 1Direct  0.0000000000000000  0.0000000000000000  0.0000000000000000  0.5100000000000000  0.5100000000000000  0.4900000000000000  ``` The OUTCAR should now contain something very similar to the following lines:  ```            Ionic dipole moment: p[ion]=(     2.25510     2.25510     1.93939 ) electrons Angst  Total electronic dipole moment: p[elc]=(     0.00000     0.00000     0.36061 ) electrons Angst  ``` From the above one easily recognizes that the change in the electronic dipole moment due to the F\\-sublattice displacement is:   \u0394  p \\[ e l c ]  \\=0\\.3606  z ^  e  \u00c5 {\\\\displaystyle \\\\Delta \\\\mathrm {p\\[elc]} \\=0\\.3606{\\\\hat {z}}\\\\;e\\\\mathrm {\\\\AA} } and the corresponding change in the ionic dipole moment:  \u0394  p \\[ i o n ]  \\=1\\.93939 \u22122\\.25510 \\= \u22120\\.31571  z ^  e  \u00c5 {\\\\displaystyle \\\\Delta \\\\mathrm {p\\[ion]} \\=1\\.93939\\-2\\.25510\\=\\-0\\.31571{\\\\hat {z}}\\\\;e\\\\mathrm {\\\\AA} } Thus the total change is found to be:  \u0394  p \\[ t o t ]  \\=0\\.36061 \u22120\\.31571 \\=0\\.0449  z ^  e  \u00c5 {\\\\displaystyle \\\\Delta \\\\mathrm {p\\[tot]} \\=0\\.36061\\-0\\.31571\\=0\\.0449{\\\\hat {z}}\\\\;e\\\\mathrm {\\\\AA} } and considering that the F\\-sublattice was displaced by 0\\.045102 \u00c5 these calculations yield a Born effective charge for fluorine of   Z  \u2217  \\=0\\.0449  / 0\\.045102 \\= \u22120\\.995  \\|  e  \\| {\\\\displaystyle Z^{\\*}\\=0\\.0449/0\\.045102\\=\\-0\\.995\\|e\\|\\\\;}  . The socalled parallel or   G  \u2225 {\\\\displaystyle {\\\\mathbf {G}}\\_{\\\\parallel }} direction in the integration over the reciprocal space unit cell is set in IGPAR."}
{"file_name": "NPPSTR.md", "content": "IGPAR= \\[integer]nDescription: NPPSTR specifies the number of k\\-points on the strings in the IGPAR direction.  --- NPPSTR specifies the number of k\\-points on the strings   k  j  \\=  k  \u22a5  \\+ j  G  \u2225  /  N P P S T R {\\\\displaystyle {\\\\mathbf {k}}\\_{j}\\={\\\\mathbf {k}}\\_{\\\\perp }\\+j{\\\\mathbf {G}}\\_{\\\\parallel }/\\\\mathrm {NPPSTR} }  (with   j \\= 0 , . . ,  N P P S T R  \u2212 1 {\\\\displaystyle j\\=0,..,\\\\mathrm {NPPSTR} \\-1} ). See also LBERRY."}
{"file_name": "PHON_TLIST.md", "content": "PHON\\_TLIST= \\[real array]   Default: **PHON\\_TLIST** \\= nonenDescription: This flag provides the list of temperatures for that the electron\\-phonon interaction using the ZG configuration[\\[1]](#cite_note-zacharias:prb:2016-1) is evaluated.   --- This feature is only available from VASP version 6\\.0 or higher. Also, the number of temperatures defined in PHON\\_NTLIST has to be defined together with this tag. For further usage of this tag see: Electron\\-phonon interactions from Monte\\-Carlo sampling."}
{"file_name": "Fcc_Si_DOS.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Calculation of the DOS in fcc Si. Input----- ### POSCAR  ```fcc Si: 3.9 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0  ``` ### INCAR  ```System\") = fcc Si # ICHARG = 11 #charge read fileENCUT  =    240ISMEAR = -5 #tetrahedronLORBIT = 11  ``` ### KPOINTS  ```k-points 0Monkhorst Pack 21 21 21 0  0  0  ``` Calculation----------- * Perform a static (NSW\\=0, IBRION\\=\\-1\\) self consistent calculation for the DOS (the DOS is found in the DOSCAR file. * For large systems:\t+ Converge with a small number of k points.\t+ Increase the number of k points for the DOS and set ICHARG\\=11 (charge density from the last self\\-consistent run). ICHARG\\=11 treats each k point independently and keeps the charge density and the potential fixed. * Read CHGCAR from previous run. To copy the self\\-consistent charge density of example fcc\\_Si to your current working directory (assumed to be fccSidos), type: $ cp ../fccSi/CHGCAR . You must do this otherwise VASP can not read the CHGCAR and will terminate. * The smearing of the k points is set to the tetrahedron method with Bl\u00f6chl corrections (ISMEAR\\=\\-5 to fi the problem [](File_Fig_Si_2.html) * To plot the DOS use p4vasp: [](File_Fig_Si_3.html)   * Alternatively the bash\\-script plotdos.sh invokes *awk* and *gnuplot* to get the DOS from the vasprun.xml\") file and plot it.  ```awk 'BEGIN{i=1} /dos>/,\\                /\\/dos>/ \\                 {a[i]=$2\u00a0; b[i]=$3\u00a0; i=i+1} \\     END{for (j=12;j<i-5;j++) print a[j],b[j]}' vasprun.xml > dos.dat ef=`awk '/efermi/ {print $3}' vasprun.xml` cat >plotfile<<!# set term postscript enhanced eps colour lw 2 \"Helvetica\" 20# set output \"optics.eps\"plot \"dos.dat\" using (\\$1-$ef):(\\$2) w lp ! gnuplot -persist plotfile rm dos.dat plotfile  ``` [](File_Fig_Si_4.html) Download--------  fccSidos.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials"}
{"file_name": "HILLS_W.md", "content": "HILLS\\_W= \\[Real]   Default: **HILLS\\_W** \\=   10  \u2212 3 {\\\\displaystyle 10^{\\-3}}   Description: HILLS\\_W specifies the width of the Gaussian hill (in units of the corresponding collective variable) used in metadynamics (in case VASP was compiled with \\-Dtbdyn).  --- In metadynamics (MDALGO\\=11 \\| 21\\), the bias potential is given as   V \\~  ( t , \u03be ) \\= h  \u2211  i \\= 1  \u230a t  /  t  G  \u230b  exp \u2061  {  \u2212  \\|  \u03be  ( t )  \u2212  \u03be  ( i \u22c5  t  G  )  \\|  2  2  w  2  }  . {\\\\displaystyle {\\\\tilde {V}}(t,\\\\xi )\\=h\\\\sum \\_{i\\=1}^{\\\\lfloor t/t\\_{G}\\\\rfloor }\\\\exp {\\\\left\\\\{\\-{\\\\frac {\\|\\\\xi ^{(t)}\\-\\\\xi ^{(i\\\\cdot t\\_{G})}\\|^{2}}{2w^{2}}}\\\\right\\\\}}.} Thre parameters (HILLS\\_H, HILLS\\_W, and HILLS\\_BIN) must be provided by the user. The width of the Gaussian hills   w {\\\\displaystyle w}  (in units of the corresponding collective variable) is set by HILLS\\_W."}
{"file_name": "VDW_ALPHA.md", "content": "VDW\\_ALPHA= \\[real (array)]nDescription: VDW\\_ALPHA defines the polarizability   \u03b1  0 {\\\\displaystyle \\\\alpha \\_{0}}  (bohr  3 {\\\\displaystyle ^{3}} ) for each species defined in the POSCAR file.  --- VDW\\_ALPHA sets the polarizability   \u03b1  0 {\\\\displaystyle \\\\alpha \\_{0}}  (bohr  3 {\\\\displaystyle ^{3}} ) for each species defined in the POSCAR file for the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods."}
{"file_name": "Machine_learning_force_field_-_Tutorial.md", "content": "Overview>Liquid Si \\- MLFF> List of tutorialsThe tutorial is made of the following parts: 1. Liquid Si \\- MLFF"}
{"file_name": "NMAXFOCKAE_and_LMAXFOCKAE.md", "content": "**NMAXFOCKAE**= 1\\|2n| Default: **NMAXFOCKAE** | \\= 1 |  || --- | --- | --- |   **LMAXFOCKAE**= \\[integer]n| Default: **LMAXFOCKAE** | \\= \\-1 | for Hartree\\-Fock and hybrid functionals || --- | --- | --- ||  | \\= 4 | for post DFT methods | Description: **NMAXFOCKAE** and **LMAXFOCKAE** determine whether the overlap densities in the Fock exchange and correlated wave function methods are accurately reconstructed on the plane wave grid (shape restoration). This flag generally only applies to the Fock\\-exchange part as well as many\\-bodypost DFT methods (GW, RPA, MP2, etc.).  --- Detailed Discussion------------------- In the PAW method, the difference between the charge density of the all\\-electron partial waves   \u03d5  \u03b2 {\\\\displaystyle \\\\phi \\_{\\\\beta }}  andthe pseudo partial waves   \u03d5 \\~  \u03b2 {\\\\displaystyle {\\\\tilde {\\\\phi }}\\_{\\\\beta }}  Q  \u03b1 \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\*}({\\\\mathbf {r} })\\\\phi \\_{\\\\beta }({\\\\mathbf {r} })\\-{\\\\tilde {\\\\phi }}\\_{\\\\alpha }^{\\*}({\\\\mathbf {r} }){\\\\tilde {\\\\phi }}\\_{\\\\beta }({\\\\mathbf {r} })} is usually treated on spherical grids centered at each atom(one\\-center terms inside the PAW spheres, see PAW method and more detailed description for LMAXFOCK). To describe long range electrostatic effects, the *moments* of the differences of the all\\-electron and pseudo charge density also need to be added on the plane wave grid (compensation density, see PAW method).These compensation charges exactly restore the moments of the all\\-electron density on the plane wavegrid. For the Fock exchange the maximum *L* quantum number up to which the augmentation is done is controlled by LMAXFOCK. For the RPA, GW, and most post DFT methods, the one\\-center terms are, however, presentlynot implemented. Depending on the material, this can cause sizable errorsin particular for 3d and (to a lesser extent) 2p, 4d and 5d elements.To correct for this error, an alternative treatment is implementedon the plane wave grid for the exchange and correlation contributions. This allows to restore the all\\-electron densities accurately already on the plane wave gridby specifying the flags **LMAXFOCKAE** and **NMAXFOCKAE**. This improvedtreatment\u2014 termed shape restoration \u2014is available for exchange as well as many body correlation contributions.For exchange, the exact one\\-center terms are also implemented. This means shape restoration is not required and should not change the results. To achieve the improved treatment on the plane wave grid,   Q  \u03b1 \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })}  is Fourier transformed to reciprocal space   Q  \u03b1 \u03b2  ( q ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }(q)}  and then expandedin a set of orthogonal functions localized at each atomic site. These augmentation chargesare then added to the pseudo charge densities on the plane wave grid. Shape restoration is only accurate up to a certain plane wave cutoff, typically about 150 eV for **NMAXFOCKAE** \\=1, and 400 eV for **NMAXFOCKAE** \\= 2\\. Experience shows that **NMAXFOCKAE** \\=1 is sufficient to predict very accurate energy differences and quite accurate quasiparticle energies.    For **LMAXFOCKAE**\\=\\-1 (the default for DFT and Hartree\\-Fock calculations), only the moments of the all\\-electron charge densities are restored on the plane wave grid. This is the default for Hartree\\-Fock calculations, and the setting is very precise since for Hartree\\-Fock the one\\-center terms are implemented in radial grids as for DFT.  If **LMAXFOCKAE** is set to values larger than \\-1 (and **NMAXFOCKAE**\\=1\\), not only the moments of the all\\-electron charge density are restored on the plane wave grid, but also the all\\-electron charge density is restored up to a typical plane wave energy of 150 eV (controlled by QMAXFOCKAE). This setting yields very accurate results for post DFT methods (MP2, RPA, GW, etc.) for most sp bonded materials. **LMAXFOCKAE** is used to specify the maximum spherical (*L*) quantum number up to which this more accurate treatment is used. The default is **LMAXFOCKAE**\\=4 for post DFT methods.If no accurate augmentation is desired by the user, simply set **LMAXFOCKAE**\\=\\-1 in the INCAR file. If **LMAXFOCKAE** is set to values larger than \\-1 and **NMAXFOCKAE**\\=2, the charge density is restored accurately on the plane wave grid up to a typical plane wave energy of 400 eV. As before, **LMAXFOCKAE** can be used to specify the maximum spherical (*L*) quantum number up to which this more accurate treatment is used. **NMAXFOCKAE**\\=2 yields very accurate results for post DFT methods (MP2, RPA, GW) even for difficult 3d elements. For RPA and MP2 total energy calculations, differences between **NMAXFOCKAE**\\=1 and **NMAXFOCKAE**\\=2 are usually tiny for total energy differences. Since the absolute correlation energies might change, it is, however, vital to use the same setting for**NMAXFOCKAE** and **LMAXFOCKAE**, if energy differences are calculated. For GW calculations, increasing **NMAXFOCKAE** from 1 to 2 might change QP energies by 100\\-200 meV for 3d and late 4d and 5d elements. Despite the improve precision, **NMAXFOCKAE**\\=2 should be used with great caution. Specifically, noise and egg\\-box effects are introduced as **NMAXFOCKAE** is increased. So usethis flag only after extensive tests. The setting for **LMAXFOCKAE** should be also considered carefully. Generally, it suffices to set **LMAXFOCKAE** to twice the maximum *l* quantum number found in the POTCAR file.For instance for sp elements, **LMAXFOCKAE**\\= 2 suffices. For d elements, **LMAXFOCKAE**\\= 4 suffices(a d electron can create charge densities with *L*\\-quantum numbers up to 4\\), whereas for f elements, usersshould test whether **LMAXFOCKAE**\\= 6 is required. More details on shape restoration are explained in Ref.[\\[1]](#cite_note-shishkin:prb:2006-1) and [\\[2]](#cite_note-unzog:prb:2022-2). Usefull Settings---------------- In summary, useful manual settings of **NMAXFOCKAE** and **LMAXFOCKAE** are: * **LMAXFOCKAE**\\=\\-1, to switch off the accurate augmentation altogether (reduces noise in correlation energies).* **LMAXFOCKAE**\\=4 (or larger) to force an accurate treatment for the charge augmentation on the plane wave grid (can be selected even in Hartree\\-Fock type calculations, but causes some additional noise).* **NMAXFOCKAE**\\=2, to select the very accurate augmentation on the plane wave grid. Please check whether the VASP default setting for **LMAXFOCKAE** suffices (OUTCAR file). Use this setting only with care, as it can result in very noisy data for coarse FFT grids."}
{"file_name": "Ionic_minimization.md", "content": "By virtue of the Born\\-Oppenheimer approximation, the electronic and ionic degrees of freedom are treated separately in VASP. Using the Hellmann\\-Feynman theorem, VASP can approximate the forces on each ion due to the electronic ground state. The most straightforward approach to **ionic minimization** is to move the ionic positions such that the force at each site vanishes. This is also known as structure optimization.  Alternatively to the Hellmann\\-Feynman theorem, VASP can machine learn force fields and, thus, obtain forces approximately 1000 times faster compared to performing an electronic minimization. However, VASP first needs to train on the density\\-functional\\-theory (DFT) solutions of similar structures to obtain a machine\\-learned force field, so it is still necessary to perform DFT calculations. Therefore, this approach is beneficial for large supercells, where it is possible to train on a smaller system. Finally, **ionic minimization** does not generally follow the physical path of an ion. For instance, the quasi\\-Newton RMM\\-DIIS algorithm (IBRION\\=1\\) and conjugate\\-gradient algorithm (IBRION\\=2\\) aim to minimize the total energy without regarding any equation of motion. In contrast, there are various algorithms based on molecular dynamics that can be used to tackle the **ionic\\-minimization** problem. Theory------ * Forces: Forces. How to------ * Effect of Pulay stress on volume optimizations: Energy vs volume Volume relaxations and Pulay stress.  --- Subcategories------------- This category has the following 3 subcategories, out of 3 total. ### F * Forces### I * Machine\\-learned force fields### T * Transition states Pages in category \"Ionic minimization\"-------------------------------------- The following 18 pages are in this category, out of 18 total. ### E * EDIFFG* Energy vs volume Volume relaxations and Pulay stress### H * Hellmann\\-Feynman forces### I * IBRION* Improved dimer method* ISIF* IWAVPR### L * LCORR* LDIPOL* LRPAFORCE### N * NFREE* NSW* Nudged elastic bands### P * POTIM* PSTRESS* Pulay stress### S * SMEARINGS* SPRING"}
{"file_name": "ICONST.md", "content": "In the ICONST file, geometric parameters are defined, which are then monitored or controlled in a molecular\\-dynamics simulation. For instance, the distance between two sites can be constrained or affected by the action of a bias potential. Finally, VASP writes the output to the REPORT file. Overview-------- Two kinds of geometric parameters can be defined: primitive parameters (e.g., bond lengths or angles), and complex parameters (i.e., linear combinations of primitive coordinates). Each line defines one coordinate, and the complex coordinates must be defined after all primitive ones. The syntax reads as follows:  ```flag item(1) ... item(N) status ... ...flag  c_1  ...  c_M  status  ``` where `flag` specifies the type of primitive coordinate, `item(1) ... item(N)` is a space\\-separated list of integers that, e.g., specifies the ions enumerated in the order they appear in the POSCAR file (starting at 1\\), and `status` is an integer that sets the status, e.g., constrained or monitored. Here, the first line defines the syntax of a primitive coordinates   q  i {\\\\displaystyle q\\_{i}} . Assuming that   M {\\\\displaystyle M}  primitive coordinates were specified on the first   M {\\\\displaystyle M}  lines of the ICONST file, the last line defines a complex coordinate, where `c_1 ... c_M` is a space\\-separated list of the coefficients   c  i {\\\\displaystyle c\\_{i}}  for the primitive coordinate defined in line   i {\\\\displaystyle i}  . For instance, the following ICONST file defines two primitive coordinates and one complex coordinate.  ```R 1 6 0R 1 5 0S 1 -1 0  ``` The first two lines define the bonds between atom   1 {\\\\displaystyle 1}  and atom   6 {\\\\displaystyle 6} , and between atom   1 {\\\\displaystyle 1}  and  5 {\\\\displaystyle 5} . The complex coordinate is the difference between the two bond lengths, which is defined on the third line. Settings for `flag`------------------- ### In case of primitive coordinates * `flag` \\= R: interatomic distance between atoms `item(1)` and `item(2)`.* `flag` \\= A: angle defined by atoms `item(1)`, `item(2)` and `item(3)` (with the atom `item(2)` being the apex).* `flag` \\= T: torsional angle defined by atoms `item(1)`, `item(2)`, `item(3)` and `item(4)`.* `flag` \\= M: distance between atom `item(1)` and the center of bond between atoms `item(2)` and `item(3)`.* `flag` \\= B: distance between the center of bond between atoms `item(1)` and `item(2)` and the center of bond between atoms `item(3)` and `item(4)`* `flag` \\= P: ratio of length of the bond between atoms `item(1)` and `item(2)` and the length of the bond between atoms `item(3)` and `item(4)`* `flag` \\= W: function   1 \u2212  (  R  /  c  )  M  1 \u2212  (  R  /  c  )  N {\\\\displaystyle {\\\\frac {1\\-\\\\left(R/c\\\\right)^{M}}{1\\-\\\\left(R/c\\\\right)^{N}}}}  with   R {\\\\displaystyle R}  being the bond length (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) between the atoms `item(1)` and `item(2)`,   c {\\\\displaystyle c}  is the reference bond length specified as `item(3)`, and the exponents   M {\\\\displaystyle M}  and  N {\\\\displaystyle N}  are defined as `item(4)` and `item(5)`, respectively.* `flag` \\= X, Y, and Z: fractional (direct) coordinates linked with the lattice vectors   a {\\\\displaystyle a}  ,  b {\\\\displaystyle b} , and   c {\\\\displaystyle c}  .* `flag` \\= cX, cY, and cZ: Cartesian coordinates   x {\\\\displaystyle x}  ,  y {\\\\displaystyle y} , and   z {\\\\displaystyle z}  .* `flag` \\= LR: length of lattice vector `item(1)`* `flag` \\= LA: angle between lattice vectors `item(1)` and `item(2)`* `flag` \\= LV: cell volume (no `item(i)` is defined in this case) ### In case of complex coordinates * `flag` \\= S: simple linear combination of primitive coordinates, i.e.,   (  \u03be \\=  \u2211  i \\= 1  M  c  i  q  i  ) {\\\\displaystyle \\\\left(\\\\xi \\=\\\\sum \\_{i\\=1}^{M}c\\_{i}\\\\,q\\_{i}\\\\right)}  .* `flag` \\= C: norm of the vector of primitive coordinates, which reads   (  \u03be \\=  \u2211  i \\= 1  M  (  c  i  q  i  )  2  ) {\\\\displaystyle \\\\left(\\\\xi \\={\\\\sqrt {\\\\sum \\_{i\\=1}^{M}\\\\,(c\\_{i}\\\\,q\\_{i})^{2}}}\\\\right)}  .* `flag` \\= D: coordination number[\\[1]](#cite_note-1), i.e.,   (  \u03be \\=  \u2211  i \\= 1  M  1 \u2212  (  q  i  /  c  i  )  9  1 \u2212  (  q  i  /  c  i  )  14  ) {\\\\displaystyle \\\\left(\\\\xi \\=\\\\sum \\_{i\\=1}^{M}{\\\\frac {1\\-\\\\left(q\\_{i}/c\\_{i}\\\\right)^{9}}{1\\-\\\\left(q\\_{i}/c\\_{i}\\\\right)^{14}}}\\\\right)}  .* `flag` \\= IS: path\\-based coordinate[\\[2]](#cite_note-branduardi:jcp:07-2) measuring progress along discretized path represented by   N {\\\\displaystyle N}  points   q \\~  ( j ) {\\\\displaystyle {\\\\tilde {q}}(j)}  predefined in file IRCCAR\"), i.e.,   \u03be \\=  1  N \u2212 1  \u2211  i \\= 1  N  ( i \u2212 1 ) exp \u2061  (  \u2212  \u2211  j \\= 1  M  c  j  (  q  j  \u2212  q \\~  j  ( i )  )  2  )  \u2211  i \\= 1  N  exp \u2061  (  \u2212  \u2211  j \\= 1  M  c  j  (  q  j  \u2212  q \\~  j  ( i )  )  2  ) {\\\\displaystyle \\\\xi \\={\\\\frac {1}{N\\-1}}{\\\\frac {\\\\sum \\_{i\\=1}^{N}(i\\-1\\)\\\\exp \\\\left(\\-\\\\sum \\_{j\\=1}^{M}c\\_{j}(q\\_{j}\\-{\\\\tilde {q}}\\_{j}(i))^{2}\\\\right)}{\\\\sum \\_{i\\=1}^{N}\\\\exp \\\\left(\\-\\\\sum \\_{j\\=1}^{M}c\\_{j}(q\\_{j}\\-{\\\\tilde {q}}\\_{j}(i))^{2}\\\\right)}}} * `flag` \\= IZ: path\\-based coordinate[\\[2]](#cite_note-branduardi:jcp:07-2) measuring orthogonal distance from the path   q \\~ {\\\\displaystyle {\\\\tilde {q}}}  predefined in file IRCCAR\"), i.e.,   \u03be \\= \u2212  1  c  1  log \u2061  \u2211  i \\= 1  N  exp \u2061  (  \u2212  \u2211  j \\= 1  M  c  j  ( q \u2212  q \\~  ( i )  )  2  ) {\\\\displaystyle \\\\xi \\=\\-{\\\\frac {1}{c\\_{1}}}\\\\log \\\\sum \\_{i\\=1}^{N}\\\\exp \\\\left(\\-\\\\sum \\_{j\\=1}^{M}c\\_{j}(q\\-{\\\\tilde {q}}(i))^{2}\\\\right)}  with  N {\\\\displaystyle N}  as defined aboveThe complex coordinates are functions defined in the space spanned by the primitive coordinates. | **Mind:** All complex coordinates must be defined after the last primitive coordinate. Whenever complex coordinates are defined, the primitive coordinates are only the basis for their definition, and their status is ignored. || --- | Settings for `item(i)`---------------------- It depends on the setting of `flag`. In most cases, `item(i)` is an integer specifying either the position of the atom or the lattice vector in the POSCAR file. Mind that two atoms are needed to define a bond length, three atoms are required for a bonding angle, etc. In the special case of the flag `W`, also some additional parameters, i.e., the reference bond length (generally a floating\\-point number) and exponents used in the definition (integers) are defined via `item(i)`. See the description of the corresponding `flag`.  Settings for `status`--------------------- * `status` \\= 0: the coordinate is constrained.* `status` \\= 4: the coordinate is affected by a Fermi\\-type step function* `status` \\= 5: the coordinate defines the collective variable in metadynamics* `status` \\= 7: the coordinate is monitored* `status` \\= 8: the coordinate is affected by a harmonic potential Use cases and examples---------------------- ### Define two constraints The following constrains the bond lengths between atoms 1 and 5, and between atoms 1 and 6\\.  ``` R 1 5 0 R 1 6 0   ``` ### Use complex coordinates Consider, for instance, the ICONST file with the following lines:  ```R 1 6 0R 1 5 0S 1 -1 0  ``` The first two lines define two primitive coordinates \\- bonds between the atoms   1 {\\\\displaystyle 1}  and  6 {\\\\displaystyle 6} , and between the atoms   1 {\\\\displaystyle 1}  and  5 {\\\\displaystyle 5} . The complex coordinate is the difference between the two bond lengths which is defined on the third line. Mind that whenever complex coordinates are defined, the primitives are used only as a basis for their definition. Consequently, the two primitive coordinates are not constrained in the simulation (despite `status`\\=0\\). Thus, the only controlled parameter is the complex coordinate. Therefore, to fix the first bond length and the complex coordinate at the same time, the ICONST file should be modified as follows:  ```R 1 6 0R 1 5 0S 1 -1 0S 1 0 0  ``` Consider the same system as discussed above and assume that the reference distance for the bond between atoms 1 and 6 is 1\\.1   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } , while that for the bond between 1 and 5 is 1\\.5   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  .The coordination number can be fixed in two equivalent ways.The first definition makes use of the complex type D, in which case the corresponding ICONST would be written like this:  ```R 1 6 0R 1 5 0D 1.1 1.5 0  ``` In this case, the exponents appearing in numerator and denominator of the defining formula for D (see above) are fixed at the values 9 and 14, respectively. Alternatively, one can fix the same coordination number using the W primitive and S complex coordinates. This can be accomplished as follows:  ```W 1 6 1.1 9 14 0W 1 5 1.5 9 14 0S 1 1 0  ``` The advantage of this format is that the coefficients M and N (see above the definition of W) can be set for each distance separately. Moreover, this format allows for an easy and intuitive definition of scaled sums of (and/or differences between) multiple coordination numbers \\- simply via a suitable choice of coefficients linked with S, which can be positive, negative, or zero.  ### Restrictions on the volume and/or shape of the simulation cell In the context of a molecular dynamics simulation in NpT ensemble, the ICONST file can be used to impose restrictions on the volume and/or shape of the simulation cell. The following examples cover some of the most important scenarios:  1\\.) Simulation with a constant cell volume and variable shape.   ```LV 0  ``` 2\\.) Variable lengths of lattice vectors but fixed lattice angles.   ```LA 1 2 0LA 1 3 0LA 2 3 0  ``` 3\\.) A cubic cell with variable volume but fixed shape. Note that the S type constraints involving the lengths of the lattice vectors (  a  i  \u2212  a  j  \\= 0 {\\\\displaystyle a\\_{i}\\-a\\_{j}\\=0} ) are chosen so as to preserve ratios   a  1  :  a  2  :  a  3  \\= 1 : 1 : 1 {\\\\displaystyle a\\_{1}:a\\_{2}:a\\_{3}\\=1:1:1} , as required by the cubic shape.   ```LA 1 2 0LA 1 3 0LA 2 3 0LR 1 0LR 2 0LR 3 0S  1  0  0  0  0  0 0S  0  1  0  0  0  0 0S  0  0  1  0  0  0 0S  0  0  0  1 -1  0 0S  0  0  0  1  0 -1 0S  0  0  0  0  1 -1 0  ``` 4\\.) An orthorhombic cell with variable volume but fixed shape. Here, in order to fix ratios between the lengths of the lattice vectors (  a  1  :  a  2  :  a  3 {\\\\displaystyle a\\_{1}:a\\_{2}:a\\_{3}}  ),we define the constraints of the form   c  i  \u2217  a  i  \\+  c  j  \u2217  a  j  \\= 0 {\\\\displaystyle c\\_{i}\\*a\\_{i}\\+c\\_{j}\\*a\\_{j}\\=0} . For instance, if the cell vectors are such that the relative proportions of their lengths are   a  1  :  a  2  :  a  3  \\= 1 :1\\.5 : 2 {\\\\displaystyle a\\_{1}:a\\_{2}:a\\_{3}\\=1:1\\.5:2} , the following ICONST can be used:   ```LA 1 2 0LA 1 3 0LA 2 3 0LR 1 0LR 2 0LR 3 0S  1  0  0  0      0    0 0S  0  1  0  0      0    0 0S  0  0  1  0      0    0 0S  0  0  0  1.5 -1.0  0.0 0S  0  0  0  2.0  0.0 -1.0 0S  0  0  0  0.0  4.0 -3.0 0  ```"}
{"file_name": "index.md", "content": "None"}
{"file_name": "VCUTOFF.md", "content": "VCUTOFF= \\[real]   Default: **VCUTOFF** \\= 1\\.1 ENCUTGW\u00a0   Description: The parameter VCUTOFF sets the energy cutoff for bare Coulomb matrix elements and controls the basis set for the bare Coulomb interaction."}
{"file_name": "Constraining_local_magnetic_moments.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments > List of tutorials Task---- Constraining the local magnetic moments on an Fe dimer. Input----- ### POSCAR  ```Fe dimer                                1.00000000000000000     8.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    8.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    8.0000000000000000 2Cartesian 3.00  0.00  0.00 5.00  0.00  0.00  ``` ### INCAR  ```SYSTEM        = Fe dimerISTART        = 0ISYM          = 0LNONCOLLINEAR = .TRUE.MAGMOM        = 0 0 3   0 0 3VOSKOWN       = 1LORBIT        = 11 ! mix slowly when increasing LAMBDA # AMIX          = 0.1# BMIX          = 0.00001# AMIX_MAG      = 0.2# BMIX_MAG      = 0.00001 # I_CONSTRAINED_M = 1# RWIGS           = 1.0# LAMBDA         = 10# M_CONSTR        = 0 0 1  0 0 1  ``` * Symmetry is switched off (ISYM\\=0\\).* Initially moments for ferromagnetic calculation are initialized. ### KPOINTS  ```k-points 0Monkhorst Pack  1   1   1  0.  0.  0.  ``` * A single k point in the calculation is sufficient. Calculation----------- * By using the initial ferromagnetic initialization of MAGMOM \\= 0 0 3 0 0 3 we get the following magnetic moments in the OSZICAR file:  ``` ...DAV:  20    -0.929676054634E+01   -0.26101E-03   -0.16780E-03    60   0.102E-01    0.537E-02DAV:  21    -0.929679955346E+01   -0.39007E-04   -0.30319E-04    60   0.590E-02   1 F= -.92967996E+01 E0= -.93047629E+01  d E =0.238900E-01  mag= -0.0006 -0.0003  6.0537  ``` * By using a different initial magnetization of MAGMOM \\= 0 0 3 0 2 2 the system converges to a ferromagnetic solution:  ``` magnetization (y)                          magnetization (z)# of ion     s       p       d       tot   # of ion     s       p       d       tot----------------------------------------   ----------------------------------------  1        0.018  -0.001   1.071   1.087     1        0.045  -0.003   2.587   2.628  2        0.019  -0.001   1.069   1.087     2        0.045  -0.003   2.588   2.629----------------------------------------   ----------------------------------------tot        0.037  -0.003   2.140   2.174   tot        0.089  -0.007   5.175   5.257  ``` * A penalty functional is added to the system, driving the integrated local moments into the desired directions, when the following steps are modified in the input (beware the penalty functional contributes to the total energy):\t+ Switching on constraints on magnetic moments (I\\_CONSTRAINED\\_M\\=1\\).\t+ Setting integration radius to determine local moments (RWIGS\\=1\\.0\\).\t+ Weight in penalty functional (LAMBDA\\=10\\).\t+ Target directions for constraints on magnetic moments (M\\_CONSTR\\= 0 0 1 0 1 1\\). * The necessary information is found in the OSZICAR file:  ``` E_p =  0.35424E-02  lambda =  0.100E+02 ion        MW_int                 M_int  1  0.000  0.013  1.557    0.000  0.014  2.674  2  0.000  1.092  1.110    0.000  1.880  1.901DAV:  35    -0.905322335169E+01    0.58398E-04   -0.60872E-04    60   0.734E-02   1 F= -.90532234E+01 E0= -.90355617E+01  d E =-.529849E-01  mag= -0.0005  2.1161  5.1088  ``` * *E\\_p* is the energy arising from the penalty function. It decreases with increasing LAMBDA.* By increasing LAMBDA stepwise one can bring *E\\_p* down (slowly so the solution remains stable from one run to another):  ``` E_p =  0.22591E-03  lambda =  0.500E+02 ion        MW_int                 M_int  1  0.000  0.002  1.545    0.001 -0.005  2.654  2  0.000  1.086  1.087    0.001  1.871  1.862DAV:  33    -0.907152551238E+01    0.48186E-04   -0.33125E-04    60   0.163E-01   1 F= -.90715255E+01 E0= -.90541505E+01  d E =-.521251E-01  mag=  0.0042  2.0902  5.0659  ``` * This way one approaches the LSDA total energy for a given magnetic configuration.   * What can one do when convergence is bad:\t+ Start from charge density of non\\-spin\\-polarized calculation using ISTART\\=0 (or remove the WAVECAR file) and ICHARG\\=1\\.\t+ Use linear mixing by setting BMIX\\=0\\.0001 and BMIX\\_MAG\\=0\\.0001\\.\t+ Mix slowly, i.e., reduce AMIX and AMIX\\_MAG.\t+ REDUCE MAXMIX, the number of steps stored in the Broyden mixer (default MAXMIX\\=45\\).\t+ Restart from partially converged results (stop a calculation after say 20 steps and restart from the WAVECAR file).\t+ Use constraints to stabilize the magnetic configuration.\t+ Pray. Download--------  4\\_5\\_Fe\\_dimer.tgz Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments > List of tutorialsBack to the main page."}
{"file_name": "DFT-ulg.md", "content": "In the DFT\\-ulg method of Kim et al.[\\[1]](#cite_note-kim:jpcl:2012-1), the correction term takes the form:  \\= \u2212  1 2  s  l g  \u2211  i \\= 1  N  a t  \u2211  j \\= 1  N  a t  \u2211  L  \u2032  C  6 i j  r  i j , L  6  \\+  b  l g  (  R  0  i j  )  6 {\\\\displaystyle E\\_{\\\\mathrm {disp} }\\=\\-{\\\\frac {1}{2}}s\\_{lg}\\\\sum \\_{i\\=1}^{N\\_{at}}\\\\sum \\_{j\\=1}^{N\\_{at}}\\\\sum \\_{\\\\mathbf {L} }{}^{\\\\prime }{\\\\frac {C\\_{6ij}}{r\\_{ij,L}^{6}\\+b\\_{lg}(R\\_{0}^{ij})^{6}}}} where the first two summations are over all   N  a t {\\\\displaystyle N\\_{at}}  atoms in the unit cell and the third summation is over all translations of the unit cell   L  \\= (  l  1  ,  l  2  ,  l  3  ) {\\\\displaystyle {\\\\mathbf {L} }\\=(l\\_{1},l\\_{2},l\\_{3})}  where the prime indicates that   i \u2260 j {\\\\displaystyle i\\\ot \\=j}  for  L  \\= 0 {\\\\displaystyle {\\\\mathbf {L} }\\=0}  .  C  6 i j {\\\\displaystyle C\\_{6ij}}  denotes the dispersion coefficient for the atom pair   i j {\\\\displaystyle ij}  ,  r  i j ,  L {\\\\displaystyle {r}\\_{ij,\\\\mathbf {L} }}  is the distance between atom   i {\\\\displaystyle i}  located in the reference cell   L  \\= 0 {\\\\displaystyle \\\\mathbf {L} \\=0}  and atom   j {\\\\displaystyle j}  in the cell   L {\\\\displaystyle L} . The DFT\\-ulg method can be activated by setting IVDW\\=*3*. The parameters in the DFT\\-ulg method (see Ref. [\\[1]](#cite_note-kim:jpcl:2012-1) for details) that can be modified are listed below. * VDW\\_RADIUS\\=50\\.0\u00a0: cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for pair interactions* VDW\\_S6\\=0\\.7012\u00a0: global scaling parameter   s  l g {\\\\displaystyle s\\_{lg}} * VDW\\_D\\=0\\.6966\u00a0: universal correction parameter   b  l g {\\\\displaystyle b\\_{lg}} * VDW\\_C6\\=\\[real array]\u00a0:   C  6 {\\\\displaystyle C\\_{6}}  parameters (  J n m  6  m o l  \u2212 1 {\\\\displaystyle \\\\mathrm {Jnm} ^{6}\\\\mathrm {mol} ^{\\-1}} ) for each species defined in the POSCAR file* VDW\\_R0\\=\\[real array]\u00a0:   R  0 {\\\\displaystyle R\\_{0}}  parameters (  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for each species defined in the POSCAR file* LVDW\\_EWALD\\=*.FALSE.*\u00a0: the lattice summation in  {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  expression is computed by means of Ewald's summation (*.TRUE.* ) or via a real space summation over all atomic pairs within cutoff radius VDW\\_RADIUS (*.FALSE.*). (available in VASP.5\\.3\\.5 and later)   | **Mind:** The default value of the parameter      s  l g     {\\\\displaystyle s\\_{lg}}  } (0\\.7012\\) was determined in conjunction with the PBE GGA functional[\\[1]](#cite_note-kim:jpcl:2012-1). Therefore, it is not recommended to use the DFT\\-ulg dispersion correction with a GGA functional other than PBE, unless      s  l g     {\\\\displaystyle s\\_{lg}}  } is reoptimized. || --- |"}
{"file_name": "IALL_IN_ONE.md", "content": "| Default: **IALL\\_IN\\_ONE** | \\= 1 | for LALL\\_IN\\_ONE\\=.TRUE. or NBANDS\\<0 || --- | --- | --- ||  | \\= \\-1 | for LALL\\_IN\\_ONE\\=.FALSE. | Description: IALL\\_IN\\_ONE\\>0 enables the all\\-in\\-one mode for many\\-body perturbation theory calculations,i.e., ALGO\\=[ACFDT\\[R]](ACFDT/RPA_calculations.html \"ACFDT/RPA calculations\"), [\\[EV]GW0\\[R]](Practical_guide_to_GW_calculations.html \"Practical guide to GW calculations\"), GWR.   --- In the all\\-in\\-one mode, VASP automatically performs the necessary DFT steps prior to the many\\-body perturbation theory (MBPT) calculation, i.e. a DFT calculation with NBANDS, followed by an exact diagonalization of the Kohn\\-Sham Hamiltonian with NBANDSEXACT bands. Note, NBANDSEXACT is set by default to the maximum number of plane\\-waves given by the chosen energy cutoff for the orbitals ENCUT. In the all\\-in\\-one mode, the actual GW/RPA calculation is also performed with NBANDSEXACT bands. If NBANDS\\_WAVE is not set, all orbitals are written to WAVECAR, which potentially becomes huge in file size. | **Tip:** The NBANDS\\_WAVE tag can be used to limit the number of bands written to WAVECAR if IALL\\_IN\\_ONE\\>0\\. || --- | The all\\-in\\-one mode is automatically enabled for ALGO\\=\\[EV]GW\\[0]R, RPA\\[R],ACFDT\\[R] if NBANDS is not set. | **Mind:** available as of VASP.6\\.4\\.0 || --- |"}
{"file_name": "Volume_relaxation.md", "content": "Introduction============ When relaxing the volume of cells, care must be taken. If too small an ENCUT or k\\-mesh are used, then discontinuities in energy vs. volume curves can be seen, cf. Fig. 1 and 2\\. This is due to an unconverged basis set being used. This creates unphysical forces, known as Pulay stress, that distort the cell structure away from equilibrium, decreasing the volume. This Pulay stress can be neglected in volume\\-conserving relaxations but becomes important in volume relaxations.  [](File_ENCUT_comp.html) Figure 1\\. Total energy vs. lattice parameter for converged and unconverged plane wave energy cutoffs. Diamond in a primitive cell \\- 2x2x2 k\\-point mesh. [](File_Kpoint_comp.html) Figure 2\\. Total energy vs. lattice parameter for converged and unconverged k\\-point meshes. Diamond in a primitive cell \\- 180 eV energy cutoff. How to correct============== The Pulay stress may be corrected in multiple ways. Generally, by calculating the relaxed structure with a larger basis set by increasing the ENCUT until convergence is reached: 1. Set ENCUT to 1\\.3 \u00d7 the default cutoff, or PREC\\=*High* in VASP.4\\.4\\. Note: this is the lower recommended limit.2. Re\\-run VASP with the default cutoff to obtain the final relaxed positions and cell parameters.3. Further increase the ENCUT and repeat Steps 1 and 2, until the structure no longer changes, i.e. is converged. | **Mind:** This relaxation is done along all of the lattice vectors. If you want to relax only one and keep the others fixed, e.g. for the vacuum in a surface relaxation, then LATTICE\\_CONSTRAINTS may be used instead. This can constrain any of the three lattice vectors for orthorhombic cells, or specific rows and columns in the lattice matrix for non\\-orthorhombic cells. || --- | If volume relaxations are necessary, the following two procedures may be followed: 1\\. Volume relaxation--------------------- One way is to very accurately relax the structure in a series of calculations on one structure: ### Step 1\\. Relax from the starting structure (ISIF \\= 7; IBRION \\= 1, 2, or 3\\) with Gaussian or Methfessel\\-Paxton smearing (ISMEAR \\= 0 or 1\\). Note: other settings can be used for ISIF, e.g. 3, 6, or 8 but it is not recommended to relax more than one degree of freedom at a time. For instance,  ```ISMEAR = 0\u00a0; SIGMA = 0.05 # change smearing to ISMEAR = 1\u00a0; SIGMA = 0.2 for metalsISIF = 7\u00a0; IBRION = 2; NSW = 20  ``` ### Step 2\\. Copy the CONTCAR to POSCAR and relax the structure again.  ```ISMEAR = 0\u00a0; SIGMA = 0.05 # change smearing to ISMEAR = 1\u00a0; SIGMA = 0.2 for metalsISIF = 7\u00a0; IBRION = 2; NSW = 20ISTART = 1 # this keeps that energy cut-off constant, while updating the plane wave basis for the new cell volume  ``` | **Mind:** In this procedure, it is important to set ISTART \\= 1 so that the basis is updated and the energy cut\\-off remains constant. If ISTART \\= 2, the basis remains constant, which will also keep the artificial, Pulay, stress, i.e. it is an exact restart of the calculation in Step 1, with identically poor settings. || --- | ### Step 3\\. Change the smearing method to the tetrahedron method (i.e. ISMEAR\\=\\-5\\) and perform a single point calculation, i.e. no relaxation of structure. These will give highly accurate energies.  ```ISMEAR = -5 # tetrahedron methodNSW = 0  ``` ### (Optional) The previous steps should yield good energies. If there are still problems, such as the energy vs. volume curve remaining jagged, a few more additional steps may be tried: ### Step 4a. Try further increasing the ENCUT. Alternatively, improve the FFT grid by setting PREC\\=Accurate. ### Step 4b. To avoid additional computational cost due to increased cutoff energy, the *STRESS* output in VASP may be corrected using PSTRESS. The Pulay stress is only weakly dependent on volume and ionic configuration; it is mainly determined by the composition and basis set. A good estimation for it is given in the output, e.g.:  ```  external pressure =    -100.29567 kB  ``` The difference in this pressure (between the desired and a very large ENCUT) may then be used to correct for the Pulay stress. PSTRESS is set to this difference, then all volume relaxations will take PSTRESS into account. It is important keep in mind that PSTRESS should only be used if increasing the cutoff is not a viable option.  1. Perform two single point calculations, one for the default and one for the higher ENCUT.2. Find the external pressure in the OUTCAR file, e.g.:  ```  external pressure =    -1311.32 kB   external pressure =    -95.66 kB  ``` 3. Find the difference between these external pressures. This is a good approximation of the Pulay stress. E.g.  ```  difference in pressure = -1215.66 kB  ``` 4. Set PSTRESS equal to this difference in the OUTCAR file, i.e.:  ```  PSTRESS = -1215.66  ``` This results in structures similar to the higher cutoff at the cost of the default cutoff. We reiterate that PSTRESS should only be used if the higher cutoff is not a viable option, as this only improves the structure and not the energy. 2\\. Equation of state fitting----------------------------- An alternative way to avoid relaxing the volume is to relax the ionic positions and cell shape for a fixed set of volumes, i.e. multiple POSCAR files. These are then fitted to an equation of state, e.g. Murnaghan.[\\[1]](#cite_note-murnaghan:web-1) As the Pulay stress is almost isotropic, only a constant value is added to the diagonal elements of the stress tensor. Therefore, the relaxation for a fixed volume will yield highly accurate structures. This approach has the advantage of also providing the bulk modulus, and we have found it may be used safely with the default energy cutoff. The procedure is similar to the previous section. In this case, one has to do the calculations for a set of fixed volumes. The following steps have to be done in these calculations: ### Step 1\\. Select one cell and relax it from the starting structure, keeping the volume fixed while the ionic positions and the cell shape are free to change (ISIF\\=4; ISMEAR\\=0 or 1\\). For instance,  ```ISMEAR = 0\u00a0; SIGMA = 0.05 # change smearing to ISMEAR = 1\u00a0; SIGMA = 0.2 for metalsISIF = 4\u00a0; IBRION = 2  ``` ### Step 2\\. Copy the CONTCAR to POSCAR and relax the structure again (if the initial cell shape was reasonable this step can be skipped if the cell shape is kept fixed, you never have run VASP twice). ### Step 3\\. Change the smearing method to the tetrahedron method (i.e. ISMEAR\\=\\-5\\) and perform a single point calculation, i.e. no relaxation of structure. These will give highly accurate energies.  ### Step 4\\. Repeat Steps 1\\-3 for as many different volumes as desired and then fit the energy vs. volume curve to your chosen equation of state. Possible issues and advice on how to address them================================================= When producing energy vs. volume plots, improper settings may result in jagged curves, cf. Fig. 1 and 2\\. This is commonly due to two reasons: 1. **Basis set incompleteness** The basis set is discrete and incomplete, so when the volume changes, additional plane waves are added. That causes small discontinuous changes in the energy. \t1. Use a larger plane wave cutoff, cf. Fig. 1\\. This is usually the preferred and simplest solution.\t2. Use more k\\-points, cf. Fig. 2\\.[\\[2]](#cite_note-2)2. **Discontinuity of FFT grids** Different precisions of the FFT grid defined by PREC may be used, e.g. Normal or Accurate.[\\[3]](#cite_note-3) This introduces small errors when the volume changes, as the FFT grids change discontinuously. In other words, at each volume a different FFT grid is used, causing the energy to jump discontinuously between different volumes. For more details on FFT grids, see [\\[4]](#cite_note-vasp:intro:lecture:web-4). \t1. Use PREC\\=Accurate\t2. Increase the plane wave cutoff.\t3. Set your FFT grids manually, and choose the one that is used per default for the largest volume."}
{"file_name": "Interface_pinning.md", "content": "**Interface pinning**[\\[1]](#cite_note-pedersen:prb:13-1) is used to determine the melting point from a molecular\\-dynamics simulation of the interface between a liquid and a solid phase. The typical behavior of such a simulation is to freeze or melt, while the interface is *pinned* with a bias potential.This potential applies an energy penalty for deviations from the desired two\\-phase system.It is preferred simulating above the melting point because the bias potential prevents melting better than freezing. The Steinhardt\\-Nelson[\\[2]](#cite_note-steinhardt:prb:83-2) order parameter   Q  6 {\\\\displaystyle Q\\_{6}}  discriminates between the solid and the liquid phase.With the bias potential  U bias  (  R  ) \\=  \u03ba 2  (  Q  6  (  R  ) \u2212 A  )  2 {\\\\displaystyle U\\_{\\\\text{bias}}(\\\\mathbf {R} )\\={\\\\frac {\\\\kappa }{2}}\\\\left(Q\\_{6}(\\\\mathbf {R} )\\-A\\\\right)^{2}} penalizes differences between the order parameter for the current configuration   Q  6  (  R  ) {\\\\displaystyle Q\\_{6}({\\\\mathbf {R} })}  and the one for the desired interface   A {\\\\displaystyle A}  .  \u03ba {\\\\displaystyle \\\\kappa }  is an adjustable parameter determining the strength of the pinning. Under the action of the bias potential, the system equilibrates to the desired two\\-phase configuration.An important observable is the difference between the average order parameter   \u27e8  Q  6  \u27e9 {\\\\displaystyle \\\\langle Q\\_{6}\\\\rangle }  in equilibrium and the desired order parameter   A {\\\\displaystyle A}  .This difference relates to the the chemical potentials of the solid   \u03bc solid {\\\\displaystyle \\\\mu \\_{\\\\text{solid}}}  and the liquid   \u03bc liquid {\\\\displaystyle \\\\mu \\_{\\\\text{liquid}}}  phase  N (  \u03bc solid  \u2212  \u03bc liquid  ) \\= \u03ba (  Q  6 , solid  \u2212  Q  6 , liquid  ) ( \u27e8  Q  6  \u27e9 \u2212 A ) {\\\\displaystyle N(\\\\mu \\_{\\\\text{solid}}\\-\\\\mu \\_{\\\\text{liquid}})\\=\\\\kappa (Q\\_{6,{\\\\text{solid}}}\\-Q\\_{6,{\\\\text{liquid}}})(\\\\langle Q\\_{6}\\\\rangle \\-A)} where   N {\\\\displaystyle N}  is the number of atoms in the simulation. Computing the forces requires a differentiable   Q  6  (  R  ) {\\\\displaystyle Q\\_{6}(\\\\mathbf {R} )}  .In the VASP implementation a smooth fading function   w ( r ) {\\\\displaystyle w(r)}  is used to weight each pair of atoms at distance   r {\\\\displaystyle r}  for the calculation of the   Q  6  (  R  , w ) {\\\\displaystyle Q\\_{6}(\\\\mathbf {R} ,w)}  order parameter. This fading function is given as  w ( r ) \\=  {  1  for  r \u2264 n  (  f  2  \u2212  r  2  )  2  (  f  2  \u2212 3  n  2  \\+ 2  r  2  )  (  f  2  \u2212  n  2  )  3  for  n \\< r \\< f  0  for  f \u2264 r {\\\\displaystyle w(r)\\=\\\\left\\\\{{\\\\begin{array}{cl}1\\&{\\\\textrm {for}}\\\\,\\\\,r\\\\leq n\\\\\\\\{\\\\frac {(f^{2}\\-r^{2})^{2}(f^{2}\\-3n^{2}\\+2r^{2})}{(f^{2}\\-n^{2})^{3}}}\\&{\\\\textrm {for}}\\\\,\\\\,n\\<r\\<f\\\\\\\\0\\&{\\\\textrm {for}}\\\\,\\\\,f\\\\leq r\\\\end{array}}\\\\right.}   Here   n {\\\\displaystyle n}  and  f {\\\\displaystyle f}  are the near\\- and far\\-fading distances, respectively. The radial distribution function   g ( r ) {\\\\displaystyle g(r)}  of the crystal phase yields a good choice for the fading range.To prevent spurious stress,   g ( r ) {\\\\displaystyle g(r)}  should be small where the derivative of   w ( r ) {\\\\displaystyle w(r)}  is large.Set the near fading distance   n {\\\\displaystyle n}  to the distance where   g ( r ) {\\\\displaystyle g(r)}  goes below 1 after the first peak.Set the far fading distance   f {\\\\displaystyle f}  to the distance where   g ( r ) {\\\\displaystyle g(r)}  goes above 1 again before the second peak. How to------ **Interface pinning** uses the   N  p  z  T {\\\\displaystyle Np\\_{z}T}  ensemble where the barostat only acts along the   z {\\\\displaystyle z}  direction.This ensemble uses a Langevin thermostat and a Parrinello\\-Rahman barostat with lattice constraints in the remaining two dimensions.The solid\\-liquid interface must be in the   x {\\\\displaystyle x}  \\-  y {\\\\displaystyle y}  plane perpendicular to the action of the barostat. Set the following tags for the **interface pinning** method: OFIELD\\_Q6\\_NEARDefines the near\\-fading distance   n {\\\\displaystyle n}  .OFIELD\\_Q6\\_FARDefines the far\\-fading distance   f {\\\\displaystyle f}  .OFIELD\\_KAPPADefines the coupling strength   \u03ba {\\\\displaystyle \\\\kappa }  of the bias potential.OFIELD\\_ADefines the desired value of the order parameter   A {\\\\displaystyle A}  .The following example INCAR file calculates the interface pinning in sodium[\\[1]](#cite_note-pedersen:prb:13-1):  ```TEBEG = 400                   # temperature in KPOTIM = 4                     # timestep in fsIBRION = 0                    # run molecular dynamicsISIF = 3                      # use Parrinello-Rahman barostat for the latticeMDALGO = 3                    # use Langevin thermostatLANGEVIN_GAMMA_L = 3.0        # friction coefficient for the lattice degree of freedoms (DoF)LANGEVIN_GAMMA = 1.0          # friction coefficient for atomic DoFs for each speciesPMASS = 100                   # mass for lattice DoFsLATTICE_CONSTRAINTS = F F T   # fix x-y plane, release z lattice dynamicsOFIELD_Q6_NEAR = 3.22         # near fading distance for function w(r) in AngstromOFIELD_Q6_FAR = 4.384         # far fading distance for function w(r) in AngstromOFIELD_KAPPA = 500            # strength of bias potential in eV/(unit of Q)^2OFIELD_A = 0.15               # desired value of the Q6 order parameter  ```"}
{"file_name": "KPOINTS_OPT.md", "content": "KPOINTS\\_OPT is an optional input file to perform an additional one\\-shot calculation after self\\-consistency is reached. The format is the same as for the KPOINTS file. VASP first performs a self\\-consistent calculation using the **k** points specified in the KPOINTS file and then performs an additional one\\-shot calculation to obtain the Kohn\u2013Sham orbitals and eigenenergies at the **k** points specified in the KPOINTS\\_OPT file. | **Important:*** The KPOINTS file must contain a uniform **k** mesh, when the KPOINTS\\_OPT file should be used afterward. * In the case of a functional using the long\\-range Hartree\\-Fock exchange (e.g., unscreened hybrid functionals), the default method for treating the Coulomb singularity (HFRCUT\\=0\\) is not adapted to do so for states at k\\-points that have not been included in the calculation of the Fock potential. Instead, HFRCUT\\=\\-1 should be used. || --- | KPOINTS\\_OPT is read automatically when present. To avoid this, set LKPOINTS\\_OPT`=.FALSE.` in the INCAR file.VASP writes the PROCAR\\_OPT file when LORBIT\\>10 and corresponding fields in the vaspout.h5 file indicated by the keyword *kpoints\\_opt*. | **Mind:** Available as of VASP 6\\.3\\.0\\. || --- | Related tags and sections------------------------- LKPOINTS\\_OPT, KPOINTS, KSPACING, PROCAR\\_OPT, KPOINTS\\_OPT\\_NKBATCH"}
{"file_name": "LCALCEPS.md", "content": "LCALCEPS= .TRUE. \\| .FALSE.   Default: **LCALCEPS** \\= .FALSE.nDescription: for LCALCEPS\\=.TRUE. the macroscopic ion\\-clamped static dielectric tensor, Born effective charge tensors, and the ion\\-clamped piezoelectric tensor of the system are determined from the response to finite electric fields.  --- For LCALCEPS\\=.TRUE., VASP calculates the ion\\-clamped static dielectric tensor  \u03f5  i j  \u221e  \\=  \u03b4  i j  \\+  4 \u03c0  \u03f5  0  \u2202  P  i  \u2202  E  j  ,  i , j \\= x , y , z {\\\\displaystyle \\\\epsilon \\_{ij}^{\\\\infty }\\=\\\\delta \\_{ij}\\+{\\\\frac {4\\\\pi }{\\\\epsilon \\_{0}}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}},\\\\qquad {i,j\\=x,y,z}} the Born effective charge tensors  Z  i j  \u2217  \\=  \u03a9 e  \u2202  P  i  \u2202  u  j  \\=  1 e  \u2202  F  j  \u2202  E  i  ,  i , j \\= x , y , z {\\\\displaystyle Z\\_{ij}^{\\*}\\={\\\\frac {\\\\Omega }{e}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial u\\_{j}}}\\={\\\\frac {1}{e}}{\\\\frac {\\\\partial F\\_{j}}{\\\\partial {\\\\mathcal {E}}\\_{i}}},\\\\qquad {i,j\\=x,y,z}} and the ion\\-clamped piezoelectric tensor of the system  e  i j  ( 0 )  \\= \u2212  \u2202  \u03c3  i  \u2202  E  j  ,  i \\= x x , y y , z z , x y , y z , z x  j \\= x , y , z {\\\\displaystyle e\\_{ij}^{(0\\)}\\=\\-{\\\\frac {\\\\partial \\\\sigma \\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}},\\\\qquad {i\\=xx,yy,zz,xy,yz,zx}\\\\quad {j\\=x,y,z}} from the self\\-consistent response to a finite electric field *\u03b5*.In this case, the \"response\" of the system is the change in the polarization **P**, the Hellmann\\-Feynman forces **F**, and the stress tensor \u03c3. Mind the definition/sign convention of the stress tensor. If this is combined with IBRION\\=6, the contribution from the ionic relaxations to the piezoelectric and dielectric tensors are calculated as well. To this end VASP will perform essentially three successive calculations, with:   ```EFIELD_PEAD= \u03b5x 0 0  ```  ```EFIELD_PEAD= 0 \u03b5y 0  ```  ```EFIELD_PEAD= 0 0 \u03b5z   ``` where, by default, VASP chooses *\u03b5*x\\=*\u03b5*y\\=*\u03b5*z\\=0\\.01 eV/\u00c5. This default may be overwritten by specifying  ```EFIELD_PEAD= \u03b5x \u03b5y \u03b5z  ``` in the INCAR file. The relevant output is found in the OUTCAR file, immediately following the lines (see the description of LEPSILON\\=.TRUE. as well):  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects)   ```  ```BORN EFFECTIVE CHARGES (including local field effects)   ```  ```PIEZOELECTRIC TENSOR (including local field effects)   ``` In the above, \"including local field effects\" pertains to the fact that changes in the orbitals due to the electric field induce changes in the Hartree\\- and exchange\\-correlation potential. One may choose to limit this to changes in the Hartree potential alone, by specifying:  ```LRPA=.TRUE.  ``` This is commonly referred to as the response within the \"Random Phase Approximation\" (RPA), or the \"neglect of local field effects\". The OUTCAR file will now contain additional sections, headed by the lines:   ```MACROSCOPIC STATIC DIELECTRIC TENSOR (excluding local field effects)   ```  ```BORN EFFECTIVE CHARGES (excluding local field effects)   ```  ```PIEZOELECTRIC TENSOR (excluding local field effects)  ```  --- **Note**: For standard DFT functionals, \u03b5\u221e, *Z*\\*, and *e*(0\\) may be more easily calculated from density functional perturbation theory (see LEPSILON\\=.TRUE.). For functionals that depend not only on the density but also explicitly on the orbitals, like hybrid functionals, density functional perturbation theory is presently not implemented and LEPSILON\\=.TRUE. is not applicable. **Note**: The piezoelectric tensor has the wrong sign in Vasp 5\\.4\\.4 and older. The bug is fixed with patch.5\\.4\\.4\\.16052018\\.gz."}
{"file_name": "EPSILON.md", "content": "EPSILON= \\[real]   Default: **EPSILON** \\= 1nDescription: EPSILON sets the dielectric constant of the medium.  --- VASP uses this flag only to scale the calculated monopole and dipole corrections. EPSILON defaults to 1, which is the proper value for isolated atoms and molecules. For solids, the screening properties can and should be determined using the linear response routines of VASP (see LEPSILON and/or LCALCEPS). Ionic contributions to the dielectric tensor should be included, if the ions are allowed to relax. Ionic contributions to the dielectric tensor can be calculated using IBRION\\=8\\."}
{"file_name": "Known_issues.md", "content": "Below we provide an **incomplete** list of known issues. Please mind the description to see whether the issue has been fixed. Color legend:OpenResolvedPlannedObsolete | Version fixed | Version first noticed | Date | Description || --- | --- | --- | --- || Open | \\<6 | 2024\\-08\\-26 | **NaNs if NSW\\*NBLOCK, NSW\\*ML\\_OUTBLOCK or NBLOCK\\*KBLOCK     \\>  2  31   \u2212 1   {\\\\displaystyle \\>2^{31}\\-1}  -1}**: Either product must not exceed the largest integer(4\\) number 2147483647 (    \\=  2  31   \u2212 1   {\\\\displaystyle \\=2^{31}\\-1}  -1}). As a solution split the molecular dynamics run into multiple calculations with smaller values for NSW or KBLOCK.  Thanks to Renjie Chen who reported the behavior in this post: Error in MD annealing simulation with ML potential || Open | 6\\.4\\.3 | 2024\\-08\\-26 | **Memory estimation in ML\\_MODE\\=TRAIN is wrong**: The memory estimation for the major arrays (design matrix \\- FMAT, covariance matrix \\- CMAT, etc.) can be significantly too small. This problem mainly appears if ML\\_MODE\\=TRAIN is selected especially in a continuation run. Until this is not officially fixed don't rely on the memory estimation! || Open | \\<6 | 2024\\-08\\-21 | **Dielectric tensor and Born effective charges from density functional perturbation theory are incorrect for non\\-collinear spin calculations when symmetries are used**: The rotation of the spinor part of the derivatives of the wavefunctions with respect to **k** was missing which leads to incorrect results when using LEPSILON\\=.TRUE. in combination with LNONCOLLINEAR\\=.TRUE. and ISYM\\>\\=0\\. The fix for previous versions is to use ISYM\\=\\-1\\. || Open | 6\\.4\\.3 | 2024\\-08\\-05 | **ML\\_MODE\\=REFIT is broken if VASP is compiled without the precompiler flag \\-DscaLAPACK**: Some arrays are allocated with the wrong size, leading to a crash with unclear exit messages of the code. This bug should not affect many users, since we strongly suggest to run ML\\_MODE\\=REFIT with \\-DscaLAPACK, because otherwise the SVD and related routines are not parallelized. This bug will be fixed in the next release. || Open | \\<6 | 2024\\-05\\-31 | **Compiler optimizations with the Fujitsu compiler on A64FX platforms**: The `bulk_BN_vdW-DF3-opt1` and `TiO2_IBRION=2` tests might fail when VASP is compiled with distributed `makefile.include.fujitsu_a64fx` or `makefile.include.fujitsu_a64fx_omp` files. It is strongly suggested to modify the following line `OBJECTS_O2 += fft3dlib.o nonl.o vdw_nl.o` in the above mentioned files. Thanks to Ivan Rostov for the bug report. || Open | \\<6 | 2024\\-05\\-27 | **Calculations with LMODELHF\\=.TRUE. crash if started without WAVECAR file in the directory**: The crash occurs because of a division by the screening parameter that is zero during the first few iterations that are done with the functional from the POTCAR file. If a WAVECAR file is present, then these first few iterations are skipped. || Open | 6\\.4\\.3 | 2024\\-05\\-14 | **Using LCALCEPS in combination with Hybrid functionals may lead to a crash when running on GPU**: VASP may crash when using Hybrid functionals in combination with LCALCEPS when running on GPUs due to an error when distributing the electronic states to be optimized for a batched fft. For the moment to overcome this issue, users can set NBLOCK\\_FOCK \\<\\= number of occupied states in the INCAR file. Thank you Sergey Lisenkov and Francesco Ricci for reporting the bug. || Open | \\<6 | 2024\\-05\\-13 | **Reading the file DYNMATFULL may lead to a crash in MPI\\-parallel calculations** : If SCALEE\u22601, then the file DYNMATFULL is read if present. This may lead to a crash in MPI\\-parallel calculations, in particular with the gfortran compiler. Thanks to Vyacheslav Bryantsev for the bug report. || Open | 6\\.4\\.3 | 2024\\-04\\-10 | **Compilation error for GCC with ELPA support**:  Compilation with ELPA support (Makefile.include\\#ELPA\\_(optional) \"Makefile.include\")) failes for the GNU Fortran compiler because the Fortran standard for c\\_loc was not strictly followed. Other compilers (e.g. NVIDIAs Fortran compiler) might not enforce the standard in this case and will produce a working binary. Solution: Add the `TARGET` attribute to the variable declarations of matrices `A` in line 2236 and `Z` in line 2252 in `src/scala.F`. Thanks to user rogeli\\_grima for the bug report! || Open | 6\\.4\\.2 | 2024\\-04\\-10 | **AOCC \\>\\= 4\\.0 does not produce runnable code when compiling without OpenMP\\-support**: The AOCC compiler version \\>\\= 4\\.0 apparently uses a more aggressive optimization on a particular symmetry routine (SGRGEN) when compiling **without** OpenMP\\-support. Thus, code produced using arch/makefile.include.aocc\\_ompi\\_aocl exits with:   ``` VERY BAD NEWS! internal error in subroutine SGRGEN: Too many elements 49  ```  Solution: adapt your makefile.include by adding `symlib.o` to the `OBJECTS_O1` line. This fixes the issue. The other options is to compile with openMP support (using arch/makefile.include.aocc\\_ompi\\_aocl\\_omp). Thanks to users jelle\\_lagerweij, huangjs, and jun\\_yin2 for the bug report and investigations. || Open | 6\\.4\\.3 | 2024\\-04\\-03 | **\\-DnoAugXCmeta is broken**: We no longer recommend compilation of VASP with this precompiler option since it negatively affects the results of SCAN and SCAN\\-like meta\\-GGA calculations. To make matters worse, this feature is broken in VASP.6\\.4\\.3\\. So definitely **do not** compile VASP.6\\.4\\.3 with **\\-DnoAugXCmeta**. || Open | 6\\.4\\.2 | 2024\\-03\\-21 | **Wannier90 exclude\\_bands not supported for SCDM method**: When using LSCDM together with LWANNIER90 or LWANNIER90\\_RUN, the use of exclude\\_bands in the Wannier90 input file is currently not supported. || 6\\.4\\.3 | \\<6 | 2024\\-08\\-21 | **Interface to Wannier90 and PEAD calculations lead to incorrect results for non\\-collinear spin calculations when symmetries are used**: The rotation of the spinor part of the wavefunctions was missing which leads to incorrect results when computing the projections and overlaps written to the AMN and MMN files used by Wannier90 when LNONCOLLINEAR\\=.TRUE. and ISYM\\>\\=0 are set in the INCAR file. The fix for previous versions is to use ISYM\\=\\-1\\. || 6\\.4\\.3 | 6\\.4\\.2 | 2024\\-08\\-16 | **Hash codes in POSCAR and CONTCAR files**: Hash codes are printed out to CONTCAR files. This does not affect the calculation but confuses some users. This has been fixed as of VASP 6\\.4\\.3, cf. forum posts: https://www.vasp.at/forum/viewtopic.php?f\\=4\\&t\\=19108 , https://www.vasp.at/forum/viewtopic.php?f\\=3\\&t\\=19113 , and https://vasp.at/forum/viewtopic.php?p\\=27108\\#p27108. || 6\\.4\\.3 | 6\\.4\\.2 | 2024\\-02\\-06 | **The combination of VCAIMAGES and `ISIF = 3` results in non\\-averaged trajectories**: The issue arises because the stress tensor is not averaged over the two images of VASP runs. || 6\\.4\\.3 | 6\\.2\\.1 | 2023\\-10\\-19 | **Phonon calculations (`IBRION = 6`) fails for some trigonal cells with `ISIF = 3`**: VASP prints a bug error message complaining that it could not find some **k** points of the original mesh in the larger one with reduced symmetry of a distortion. As a fix, you can set `KBLOWUP\") = F` to circumvent this error message while we work on a fix. Thanks for barshab for the bug report. || 6\\.4\\.3 | 6\\.4\\.2 | 2023\\-09\\-20 | **Specific cases of SAXIS gave unexpected quantization axis**: For sx\\=0 and sy\\<0, VASP falsely assumes alpha\\=pi/2\\. It should correctly yield alpha\\=\\-pi/2\\. This error has probably been there for a long time but on one hand the setting is probably rarely chosen and on the other hand as the treatment is consistent within the calculation, the results should not be affected much. || 6\\.4\\.3 | 6\\.4\\.2 | 2023\\-08\\-21 | **Restarting a calculation from vaspwave.h5 when the number of k points changed crashes with a bug message**: This can happen, e.g., because ISYM is changed. VASP should behave the same as restarting from WAVECAR. || 6\\.4\\.3 | 6\\.4\\.0 | 2023\\-04\\-06 | **LOCPOT file for vasp\\_ncl is not written correctly**: LVTOT\\=T for vasp\\_ncl should write the potential in the \"density, magnetization\" representation, i.e., the scalar potential (v0\\), and magnetic field (Bx, By, Bz), to the LOCPOT file. However, VASP writes the potential in the (upup, updown, downup, downdown) representation to real numbers, which is incomplete. || 6\\.4\\.2 | 6\\.4\\.0 | 2023\\-05\\-31 | **Fast\\-mode predictions will crash together with finite difference (IBRION\\=5,6\\)**: At the end of the calculation the fast\\-mode is supposed to deallocate important arrays using NSW. In the finite differences method NSW is not used and the fast\\-mode can wrongly deallocate at an earlier stage. This results in an error if the code wants to access the deallocated arrays. Until a patch is released we suggest two possible quick fixes: **(1\\)** Avoid explicit deallocations at the end of the program and let the compiler deallocate when the code runs out of scope. For that remove lines 568, 569, 570 and 572 in the ml\\_ff\\_ff2\\.F file.  **(2\\)** Avoid the fast\\-prediction mode: Retrain the MLFF without support for the fast mode, i.e., use `ML_MODE = refitbayesian` instead of `refit`. Use the resulting ML\\_FFN file for the `ML_MODE = run` production runs. Unlike suggestion (1\\) this does not require a recompilation of VASP but unfortunately MD runs will take significantly longer. Thanks for Soungminbae for the bug report. || 6\\.4\\.2 | 6\\.4\\.0 | 2023\\-05\\-17 | **Incorrect MLFF fast\\-mode predictions for some triclinic geometries**: Due to an error in the cell list algorithm the MLFF predictions (energy, forces and stress tensor) in the fast\\-execution mode (`ML_MODE = run`) may be incorrect for triclinic systems with small or large lattice angles (i.e., large deviations from right angles). Until a patch is released we suggest two possible quick fixes: **(1\\)** Avoid using the cell list algorithm for neighbor list builds (**recommended**): Add `this%algo_type = 2` in a new line below line 923 in `src/ml_ff_neighbor.F` and recompile VASP, **or**, **(2\\)** Avoid the fast\\-prediction mode: Retrain the MLFF without support for the fast mode, i.e., use `ML_MODE = refitbayesian` instead of `refit`. Use the resulting ML\\_FFN file for the `ML_MODE = run` production runs. Unlike suggestion (1\\) this does not require a recompilation of VASP but unfortunately MD runs will take significantly longer. Thanks to Johan for a very detailed bug report. || 6\\.4\\.2 | 6\\.4\\.1 | 2023\\-05\\-15 | **Bugs in interface to wannier90**: * If no projections are supplied (e.g. LOCPROJ, LSCDM) and there are no projections found in the wannier90 input file, VASP does not produce the UNK files. This also leads to a crash if LWANNIER90 RUN is used. * The format of the UNK files is broken for the gamma\\-only version of VASP.  Thanks to guyohad for the bug report. || 6\\.4\\.1 | 6\\.4\\.0 | 2023\\-03\\-07 | **Output of memory estimate in machine learning force fields is wrong for SVD refitting**: The SVD algorithm (ML\\_IALGO\\_LINREG\\=3, 4\\) uses the design matrix and two helping arrays with the size of the design matrix. In the memory estimates these two helping arrays are not considered correctly. The entry \"FMAT for basis\" at the beginning of the ML\\_LOGFILE should be three times larger. The algorithm will be fixed such that it only requires twice the design matrix arrays instead of three times and the outputs for the estimates will contain the correct values. || 6\\.4\\.1 | 6\\.4\\.0 | 2023\\-03\\-07 | **Bug in sparsification routine for machine learning force fields**: This bug effects more severely calculatoins where the number of local reference configurations is getting close to ML\\_MB. By setting ML\\_MB to a high value this bug can be avoided in most cases (there are still some cases, especially where a small number of local reference configurations is picked and the structure contains many atoms per type or ML\\_MCONF\\_NEW is set to a high value). This bug can especially affect refitting runs, resulting in no ML\\_FFN file. || 6\\.4\\.1 | 6\\.4\\.0 | 2023\\-03\\-07 | **ML\\_ISTART\\=2 on sub element types broken for fast force field**: When the force is trained for multiple element types, but the production runs (ML\\_ISTART\\=2\\) are carried out for a subset of types, the code most likely crashes. This bug will be urgently fixed. || 6\\.4\\.1 | 6\\.2\\.0 | 2023\\-02\\-20 | **INCAR reader issues**:  * Moving an INCAR file from a system with Windows line endings to a Unix\\-based system can cause the INCAR reader to fail. As a workaround convert the INCAR file to Unix line endings e.g. by `:set ff=unix` in vi. * Comments lines do not work properly with inline tags separated by semicolon if the comment character occurs before the semicolon but not at the beginning of the line. As a workaround, split the tags over multiple lines so that you can comment out what you want. Please also refer to the OUTCAR file and see whether VASP understood your input. || 6\\.4\\.1 | 6\\.4\\.0 | 2023\\-02\\-17 | **Corrupt ML\\_FFN files on some file systems**: Insufficient protection against concurrent write statements may lead to corrupt ML\\_FFN files on some file systems. The broken files will often remain unnoticed until they are used in a prediction\\-only run with ML\\_ISTART\\=2\\. Then, VASP is likely to exit with some misleading error message about incorrect types present in the ML\\_FF file. As a workaround it may help to refit starting from the last ML\\_AB file with ML\\_MODE\\=refit which may generate a working ML\\_FFN file (this is anyway highly recommended to gain access to the fast execution mode in ML\\_ISTART\\=2\\). Alternatively, there is a patch for VASP.6\\.4\\.0 available (see attachment to this forum post). Thanks a lot to xiliang\\_lian and szurlle for reporting this and testing the patch. || 6\\.4\\.0 | 6\\.3\\.2 | 2023\\-01\\-18 | **makefile.include template does not work for AOCC 4\\.0\\.0**: The *flang* preprocessor explicitly requires specifying that the code is in free format `-ffree-form`. In earlier versions of VASP you can add this flag to the `CPP` rule in the makefile.include. Thanks to liu\\_jiyuan for reporting this bug. || 6\\.4\\.0 | 6\\.1\\.0 | 2022\\-11\\-23 | **Memory leak in MD in OpenMP version compiled with AOCC and NV**: This problem originates from the `DEFAULT(PRIVATE)` clause in `SET_DD_PAW` in `paw.F` because the NV and AOCC compilers do not correctly clean up the memory for arrays that were allocated outside the OMP PARALLEL region and used as private inside. We advise against compiling with OpenMP support with the NV and AOCC compilers for vasp \\<\\= 6\\.3\\.2\\. || 6\\.3\\.2 | 5\\.4\\.4 | 2021\\-11\\-12 | **Ionic contributions to the macroscopic polarization with atoms at the periodic boundary**: Removed a section of code from POINT\\_CHARGE\\_DIPOL that adds a copy of the atom when it is at the periodic boundary. This can lead to a different value of \"Ionic dipole moment: p\\[ion]\" being reported in the OUTCAR with respect to previous versions of VASP. This result, although numerically different is still correct since the polarization is defined up to integer multiples of the polarization quantum. Thanks to Chengcheng Xiao the bug report. || 6\\.3\\.2 | 6\\.3\\.1 | 2022\\-05\\-11 | **ML\\_ISTART\\=1 fails for some scenarios**: Due to a bug in the rearrangement of the structures found on the ML\\_AB file, restarting the training of a force field by means of ML\\_ISTART\\=1 fails in some cases. **N.B.: this problem only occurs in a scenario where one repeatedly restarts the training, and returns to training for a structure that was trained on before (that means exactly same element types and number of atoms per element), but not immediately before.** Example: one starts training a force field for structure A, follows this by a continuation run to train for structure B, and then restarts a second time returning to training for structure A again. || 6\\.3\\.1 | 6\\.2\\.0 | 2022\\-05\\-05 | **Treatment of the Coulomb divergence in hybrid\\-functional band\\-structure calculations is only correct for PBE0**: The Coulomb divergence correction for states at and near the \u0393\\-point in hybrid\\-functional band\\-structure calculations (see HFRCUT) was only correctly implemented for PBE0 and HFRCUT\\=\\-1\\. Note: HSE band\\-structure calculations are not expected to be (strongly) affected because this hybrid functional only includes \u201cshort\\-range\u201d Fock exchange. || 6\\.3\\.1 | 6\\.2\\.0 | 2022\\-03\\-14 | **Bug in interface with Wannier90 for non\\-collinear spin calculations**: The spin axis for non\\-collinear spin calculations is not correctly read from the wannier90 input file. This is because this line in the `mlwf.F` file: `MLWF%LPRJ_functions(IS)%spin_qaxis = proj_s_qaxisx(3,IS)` should instead be: `MLWF%LPRJ_functions(IS)%spin_qaxis = proj_s_qaxisx(:,IS)`. Thanks to Domenico Di Sante for reporting this bug. || 6\\.3\\.1 | 6\\.3\\.0 | 2022\\-02\\-04 | **Incompatibility with Fujitsu compiler**: Fujitsu's Fortran compiler does not support overloaded internal subroutines. A simple workaround is to compile without machine\\-learning\u2013force\\-fileds capabilities. Comment out the macro definition of `ML_AVAILABLE` in line 626 of `src/symbol.inc` by adding a `!` in front, i.e. it should look like this: `!#define ML_AVAILABLE`. Then do a complete rebuild of VASP: run `make veryclean` followed by your desired build command. || 6\\.3\\.0 | 6\\.2\\.0 | 2021\\-05\\-28 | **Bug in interface with Wannier90 writing UNK when exclude\\_bands present**: The UNK files generated by VASP include all bands where bands specified by \\`exclude\\_bands\\` should be excluded.  The fix is to pass the \\`exclude\\_bands\\` array to \\`get\\_wave\\_functions\\` in mlwf.F. Thanks to Chengcheng Xiao for reporting this bug. || 6\\.2\\.0 | 6\\.1\\.0 | 2022\\-08\\-29 | **Inconsistent energy for fixed electron occupancies**: Rickard Armiento pointed out that the HF total energy for fixed electron occupancies was inconsistent when compared to 5\\.4\\.4 or older versions.  This bug was introduced in 6\\.1\\.0 in order to support IALGO\\=3 in combination with ISMEAR\\=\\-2 (for `SPHPRO` calculations as post\\-processing step) but broke the CG algorithms (IALGO\\=53\\) The fix was added in  `src/main.F`  with  `IF (INFO%LONESW .OR. (INFO%IALGO==3 .AND. KPOINTS%ISMEAR/=-2)) THEN \ IF (INFO%LONESW) W_F%CELTOT = W%CELTOT`  . || \\>\\=6 | \\<6 | 2023\\-10\\-31 | **For LORBIT \\>\\= 11 and ISYM \\= 2, the partial charge densities are not correctly symmetrized**: This can result in different charges for symmetrically equivalent partial charge densities. For older versions of VASP, we recommend a two\\-step procedure:  * 1\\. Self\\-consistent calculation with symmetry switched on (ISYM\\=2\\) * 2\\. Recalculation of the partial charge density with symmetry switched off (ISYM\\=0\\)  To avoid unnecessary large WAVECAR files, we recommend setting LWAVE\\=.FALSE. in step 2\\. |  ---"}
{"file_name": "Bandstructure_of_SrVO3_in_GW.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorials Task---- Calculation of the GW bandstructure of SrVO3 using VASP and WANNIER90.  --- Performing a GW calculation with VASP is a 3\\-step procedure: a DFT groundstate calculation, a calculation to obtain a number of virtual orbitals, and the actual GW calculation itself.In this example we will also see how the results of the GW calculation may be postprocessed with WANNIER90 to obtain the dispersion of the bands along the usual high symmetry directions in reciprocal space. **N.B.:** This example involves quite a number of individual calculations.The easiest way to run this example is to execute:  ```./doall.sh  ``` And compare the output of the different steps (DFT, GW, HSE) by:  ```./plotall.sh  ``` In any case, one can consider the doall.sh script to be an overview of the steps described below. DFT groundstate calculation--------------------------- The first step is a conventional DFT (in this case PBE) groundstate calculation. * INCAR (see INCAR.DFT)  ```SYSTEM  = SrVO3                        # system nameNBANDS = 36                            # small number  of bandsISMEAR = 0                             # Gaussian smearingEDIFF = 1E-8                           # high precision for groundstate calculationKPAR = 2                               # parallelization of k-points in two groups  ``` Copy the aforementioned file to INCAR:  ```cp INCAR.DFT INCAR  ``` The POSCAR file describes the structure of the system: * POSCAR  ```SrVO33.84652  #cubic fit for 6x6x6 k-points +1.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.0000000000 Sr V O 1 1 3Direct +0.0000000000  +0.0000000000  +0.0000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.0000000000  +0.5000000000  +0.5000000000  ``` The POSCAR can be visualized with p4v or VESTA and remains unchanged in the following. [](File_SrVO3_structure.html) The KPOINTS file describes how the first Brillouin zone is sampled.In the first step we use a uniform k\\-point sampling: * KPOINTS (see KPOINTS.BULK)  ```Automatically generated mesh 0Gamma 4 4 4 0 0 0  ``` **Mind**: this is definitely not dense enough for a high\\-quality description of SrVO3, but in the interest of speed we will live with it.Copy the aforementioned file to KPOINTS:  ```cp KPOINTS.BULK KPOINTS  ``` and run VASP. If all went well, one should obtain a WAVECAR file containing the PBE wavefunction. Obtain DFT virtual orbitals and long\\-wave limit------------------------------------------------ Use following INCAR file to increase the number of virtual states and to determine the long\\-wave limit of the polarizability (stored in WAVEDER): * INCAR (see INCAR.PBE)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingKPAR = 2                               # parallelization of k-points in two groupsALGO = Exact                           # exact diagonalizationNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 96                            # need for a lot of bands in GWLOPTICS = .TRUE.                       # we need d phi/ d k  for GW calculations for long-wave limit  ``` Restart VASP.At this stage it is a good idea to make a safety copy of the WAVECAR and WAVEDER files since we will repeatedly need them in the calculations that follow:   ```cp WAVECAR WAVECAR.PBEcp WAVEDER WAVEDER.PBE  ``` Also make a backup of the charge density for later:  ```cp CHGCAR CHGCAR.PBE  ``` ### The dielectric function As a bonus, VASP determines the frequency dependent dielectric function in the independent\\-particle (IP) picture and writes the result to the OUTCAR and vasprun.xml\") files.In the OUTCAR you should search for  ``` frequency dependent IMAGINARY DIELECTRIC FUNCTION (independent particle, no local field effects)  ```  and  ``` frequency dependent      REAL DIELECTRIC FUNCTION (independent particle, no local field effects)  ``` GW Step------- The actual GW calculation requires a set of one\\-electron energies and eigenstates. In this case we use the PBE solution obtained from previous step:  ```cp WAVECAR.PBE WAVECARcp WAVEDER.PBE WAVEDER  ``` The following INCAR file selects the 'single shot' GW calculation also known as G0W0: * INCAR (see INCAR.GW0\\)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingKPAR = 2                               # parallelization of k-points in two groupsALGO = GW0                             # GW with iteration in G, W kept on DFT levelNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 96                            # need for a lot of bands in GWPRECFOCK = Fast                        # fast mode for FFTsENCUTGW = 100                          # small energy cutoff for response function suffices for this tutorialNOMEGA = 200                           # large number of real frequency points for Hilbert transforms of W and self-energy  ``` Restarting VASP will overwrite the present WAVECAR and vasprun.xml\") file. Make a copy them for later.   ```cp WAVECAR WAVECAR.GW0cp vasprun.xml\") vasprun.GW0.xml  ``` HSE hybrid functional--------------------- To illustrate the kind of results one would obtain for SrVO3 using the DFT/Hartree\\-Fock hybrid functional HSE, without actually doing a full self\\-consistent calculation, we will recalculate the one\\-electron energies and DOS (ALGO\\=Eigenval) using the HSE functional with DFT orbitals as input  ```cp WAVECAR.PBE WAVECAR  ``` Use the following INCAR file: * INCAR (see INCAR.HSE)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingKPAR = 2                               # parallelization of k-points in two groupsALGO = Eigenval                        # calulate eigenvaluesNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 48                            # small number of bands sufficePRECFOCK = Fast                        # fast mode for FFTsLHFCALC = .TRUE.                       # switch on Hartree-Fock routines to calculate exact exchangeHFSCREEN = 0.2                         # HSE06 screening parameter  ``` Restart VASP and make a copy of the wavefunction for post\\-processing  ```cp WAVECAR WAVECAR.HSE  ``` Post\\-processing: Density of states and Bandstructure for PBE, GW and HSE------------------------------------------------------------------------- ### Density of States The DOS of the PBE, GW and HSE solution can be calculated in a post\\-processing step with  * INCAR (see INCAR.DOS)  ```SYSTEM = SrVO3                         # system nameISMEAR = -5                            # Bloechl's tetrahedron method (requires at least 3x3x3 k-points)ALGO = NONE                            # no electronic changes requiredNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 48                            # number of bands usedEMIN = -20\u00a0; EMAX = 20                 # smallest/largest energy included in calculationNEDOS = 1000                           # sampling points for DOSLORBIT = 11                            # calculate l-m decomposed DOSLWAVE = .FALSE.                        # do not overwrite WAVECARLCHARG = .FALSE.                       # do not overwrite CHGCAR  ``` and requires the apropriate WAVECAR file from one of the previous steps. Copy   ```cp WAVECAR.PBE WAVECAR  ```  or  ```cp WAVECAR.GW0 WAVECAR  ```  or  ```cp WAVECAR.HSE WAVECAR  ``` and restart VASP. The density of states is written to DOSCAR, make a copy of this file   ```cp DOSCAR DOSCAR.XXX  ``` where XXX is either PBE, GW0 or HSE. Visualize the projected DOS for the V\\-t2g, V\\-eg and O\\-p states with the scriptfile  ```./plotdos_comp.sh DOSCAR.???  ``` This requires gnuplot to be installed. [](File_DOS_SrVO3_comparison.html) ### Bandstructure with wannier90 The bandstructure can be calculated via Wannier interpolation using wannier90 in the library mode * INCAR (see INCAR.WAN.XXX)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingALGO = NONE                            # no electronic changes requiredNELM = 1                               # one electronic step suffices, since WAVECAR from previous step is presentNBANDS = 48                            # number of bands usedLWAVE = .FALSE.                        # do not overwrite WAVECARLCHARG = .FALSE.                       # do not overwrite CHGCARLWANNIER90_RUN = .TRUE.                # run wannier90 in library mode # As of vasp-6.4.3 define wannier90 interpolation from INCAR as follows:# For older versions copy wannier90.win.XXX to wannier90.win and use INCAR.WAN as input for vaspNUM_WANN = 3WANNIER90_WIN = \" # use this energy window for t2g states for GWdis_win_min = 7.4dis_win_max = 9.95 begin projectionsV:dxy;dxz;dyzend projections # plot bandsbands_plot = true begin kpoint_pathR  0.50000000  0.50000000  0.50000000  G  0.00000000  0.00000000  0.00000000G  0.00000000  0.00000000  0.00000000  X  0.50000000  0.00000000  0.00000000X  0.50000000  0.00000000  0.00000000  M  0.50000000  0.50000000  0.00000000M  0.50000000  0.50000000  0.00000000  G  0.00000000  0.00000000  0.00000000end kpoint_path \"  ```   | **Mind:** Prior VASP.6\\.4\\.3 a proper wannier90\\.win.XXX file should be used instead. || --- | Use the corresponding INCAR.WAN.XXX file as input for wannier90  ```cp INCAR.WAN.XXX INCAR  ``` where XXX\\=PBE, GW0 or HSE. Use the corresponding WAVECAR.XXX file as input  ```cp WAVECAR.XXX WAVECAR  ``` and restart VASP. If all went well, the Vanadium t2g band dispersion thus obtained, may conveniently be visualized with gnuplot:   ```gnuplot -persist ./wannier90_band.gnu  ``` **N.B.:** Most modern versions of gnuplot will respond with an error message unless you remove the first line of wannier90\\_band.gnu (some deprecated syntax issue).### The preferred way to calculate the PBE bandstructure Provided one has a self\\-consistent charge density (CHGCAR) file of sufficient quality (generated using a regular grid of k\\-points of sufficient density) one may read this charge density and keep it fixed (ICHARG\\=11\\).For density functional calculations this charge density completely defines the Hamiltonian and using this Hamiltonian one may non\\-selfconsistently determine the orbitals and corresponding eigenenergies at arbitrary k\\-points.This is a very convenient way to calculate the bandstructure. First we copy the self\\-consistent charge density of one of our previous calculations:  ``` cp CHGCAR.PBE CHGCAR cp WAVECAR.PBE WAVECAR  ``` The bandstructure is conventionally plotted along lines of high symmetry in the 1st Brillouin zone.The easiest way to specify these is by means of the so\\-called *linemode*: * KPOINTS (see KPOINTS.BSTR)  ```Auto 15Linemodereciprocal0.50000000  0.50000000  0.50000000   !R0.00000000  0.00000000  0.00000000   !G 0.00000000  0.00000000  0.00000000   !G0.50000000  0.00000000  0.00000000   !X 0.50000000  0.00000000  0.00000000   !X0.50000000  0.50000000  0.00000000   !M  0.50000000  0.50000000  0.00000000   !M0.00000000  0.00000000  0.00000000   !G  ``` **N.B.:** using these *k*\\-points for a *self\\-consistent* calculation (ICHARG\\<10\\) would be a very bad idea since such and irregular sampling of the 1st Brillouin zone will not yield sensible charge densities. Use the following INCAR file: * INCAR (see INCAR.BSTR)  ```SYSTEM = SrVO3                         # system nameISMEAR = 0                             # Gaussian smearingEDIFF = 1E-7                           # tight convergence criterionNBANDS = 36                            # 36 bands are sufficientLWAVE = .FALSE.                        # do not overwrite WAVECARLCHARG = .FALSE.                       # do not overwrite CHGCARICHARG = 11                            # read the charge density from the CHGCAR file and keep it fixedLORBIT = 11                            # compute lm-decomposed statesEMIN = -20\u00a0; EMAX = 20                 # smallest/largest energy included in calculationNEDOS = 1000                           # sampling points for DOS  ``` **N.B.:** Mind that this approach works only for density functional calculations (*e.g.* PBE or LDA) and is not applicable to orbital dependent functionals (like hybrid functionals) or in case of GW calculations. This PBE bandstructure and the Wannier\\-interpolated structures of the PBE, HSE and GW calculation can be compared via  ```./plotbands.sh  ``` [](File_SrVO3_bandstructure.html) Download--------  SrVO3\\_GW\\_band.zip Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsBack to the main page."}
{"file_name": "Harris-Foulkes_functional.md", "content": "The **Harris\\-Foulkes** (HF) **functional** is a non\\-self\\-consistent functional. The potential is constructed for some \"input\" charge density, then the band\\-structure term is calculated for this fixed non\\-self\\-consistent potential. Double counting corrections are calculated from the input charge density. The functional can be written as  E  H F  \\[  \u03c1  i n  , \u03c1 ] \\=  b a n d s t r u c t u r e  f o r  (  V  i n  H  \\+  V  i n  x c  ) \\+  T r  \\[ ( \u2212  V  i n  H  /  2 \u2212  V  i n  x c  )  \u03c1  i n  ] \\+  E  x c  \\[  \u03c1  i n  \\+  \u03c1  c  ] . {\\\\displaystyle E\\_{\\\\mathrm {HF} }\\[\\\\rho \\_{\\\\mathrm {in} },\\\\rho ]\\=\\\\mathrm {bandstructure} \\\\mathrm {for} (V\\_{\\\\mathrm {in} }^{H}\\+V\\_{\\\\mathrm {in} }^{xc})\\+\\\\mathrm {Tr} \\[(\\-V\\_{\\\\mathrm {in} }^{H}/2\\-V\\_{\\\\mathrm {in} }^{xc})\\\\rho \\_{\\\\mathrm {in} }]\\+E^{xc}\\[\\\\rho \\_{\\\\mathrm {in} }\\+\\\\rho \\_{c}].} In our experience, the functional gives a good description of the binding energies, equilibrium\\-lattice constants, and bulk\\-modulus even for covalently bonded systems like Ge. In a test calculation, we have found that the pair\\-correlation function of l\\-Sb calculated with the HF functional and the full Kohn\\-Sham functional differs only slightly. Nevertheless, we must point out that the computational gain in comparison to a self\\-consistent calculation is in many cases very small (for Sb less than   20  % {\\\\displaystyle 20\\~\\\\%} ). The main reason why to use the HF functional is therefore to access and establish the accuracy of the HF functional. To our knowledge, VASP is one of the few pseudopotential codes, which can access the validity of the HF functional at a very basic level, i.e., without any additional restrictions like local basis\\-sets, etc. The band\\-structure energy is exactly evaluated using the same plane\\-wave basis\\-set and the same accuracy used for the self\\-consistent calculation. The forces and the stress tensor are correct, insofar as they are an exact derivative of the Harris\\-Foulkes functional. During a molecular dynamics calculation or an ionic relaxation the charge density is updated at each ionic step to enforce the HF functional. Ideas based on the Harris\\-Foulkes functional are applied when LCORR or ICHARG\\=12\\."}
{"file_name": "LRPAFORCE.md", "content": "LRPAFORCE= .TRUE. \\| .FALSE.   Default: **LRPAFORCE** \\= .FALSE.nDescription: LRPAFORCE\\=.TRUE. calculates forces in the random\\-phase approximation (RPA).  --- Available as of VASP.6\\.1\\. This tag can be optionally set in low\\-scaling RPA calculations or  GW calculations. It allows computing the RPA forces[\\[1]](#cite_note-ramberger:prl:118-1) on each ion. For instance,   ```ALGO = RPAR\u00a0;  LRPAFORCE = .TRUE.   ``` computes the RPA total energy with corresponding forces, while  ```ALGO = G0W0R\u00a0; LRPAFORCE = .TRUE.   ``` determines in addition the quasiparticle energies within the GW approximation.  The LRPAFORCE tag can be used in combination with the standard relaxation options IBRION and NSW.  | **Mind:** The RPA stress tensor is not available. || --- | | **Warning:** Only ISIF\\=0 is supported. || --- | | **Warning:** RPA forces for metals are currently not supported. || --- |"}
{"file_name": "Estimation_of_J_magnetic_coupling.md", "content": "Description: Estimation of the J magnetic exchange coupling using the GGA\\+U method. Switching off the symmetry (ISYM \\= 0\\) is often necessary to generate different magnetic configurations.    *Exercise\u00a0:* Study the change of the 180\u00b0 superexchange coupling J2 between the next nearest neighbors (dNi\\-Ni \\= 4\\.17 A) by varying the Ueff value. The following equation J2 \\= (EFM \\- EAFM) / 12 expresses the super exchange Ni\\-O\\-Ni coupling as a function of the energy difference of the ferromagnetic (FM) and antiferromagnetic (AFM) configurations. In this case, the superexchange coupling J1 between the nearest neighbors is neglected. The theoretical results can be compared to the experimental one\u00a0: J2 \\= 19\\.01 meV (Hutchings M. T., Samuelsen E. J., *Phys. Rev. B 6*, 9, **1972**, 3447\\)  --- * INCAR  ```NiO GGA+U AFM  SYSTEM    = \"NiO\" Electronic minimization  ENCUT     = 450  EDIFF     = 1E-4  LORBIT    = 11  LREAL     = .False.  ISTART    = 0  ISYM      = 0  NELMIN    = 6  DOS  ISMEAR    = -5 Magnetism  ISPIN     = 2  MAGMOM    = 2.0 -2.0 2*0  # AFM conf.  # MAGMOM    = 2*2.0 2*0  # FM conf.  ```  ```Mixer  AMIX      = 0.2  BMIX      = 0.00001  AMIX_MAG  = 0.8  BMIX_MAG  = 0.00001 GGA+U  LDAU      = .TRUE.  LDAUTYPE  = 2  LDAUL     = 2 -1  LDAUU     = 5.00 0.00  LDAUJ     = 0.00 0.00  LDAUPRINT = 1  LMAXMIX   = 4   ```   * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ```  --- Necessarely, the J magnetic coupling decreases with the increasing of the Ueff value. To assess the obtained value, similar calculations could be done using a hybrid functional. Download--------  nio\\_Jcoupl.tgz  ---"}
{"file_name": "TIME.md", "content": "TIME= \\[real]   Default: **TIME** \\= 0\\.4nDescription: TIME controls the time step for IALGO\\=5X and for the initial (steepest descent) phase of IALGO\\=4X.  ---"}
{"file_name": "LIBMBD_R0AU.md", "content": "LIBMBD\\_R0AU= \\[real array]nDescription: LIBMBD\\_R0AU defines the free\\-atom   R  0 {\\\\displaystyle R\\_{0}}  parameters (bohr) used in the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_R0AU allows to set values for the free\\-atom   R  0 {\\\\displaystyle R\\_{0}}  parameters (bohr) used in the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3). For each atom listed in the POSCAR file, a value has to be provided. The values are internally passed to the third column of the libMBD input **free\\_values** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "BSEPREC.md", "content": "BSEPREC= Low \\| Medium \\| High \\| Accurate   Default: **BSEPREC** \\= MediumnDescription: BSEPREC determines the precision of the time\\-evolution algorithm for solving the Bethe\\-Salpeter or Casida equations, i.e., the timestep and the number of steps.   --- The timestep in the time\\-evolution calculation is inversely proportional to the maximum transition energy OMEGAMAX and the number of steps is inversely proportional to the broadening CSHIFT. Depending on the BSEPREC stable these parameters are scaled depending on the precision tag BSEPREC. | BSEPREC | OMEGAMAX | CSHIFT || --- | --- | --- || Accurate (a) | \u00d7 4   {\\\\displaystyle \\\\times 4}   | \u00d7 1  /  10   {\\\\displaystyle \\\\times 1/10}   || High (h) | \u00d7 3   {\\\\displaystyle \\\\times 3}   | \u00d7 1  /  7\\.5   {\\\\displaystyle \\\\times 1/7\\.5}   || Medium (m) | \u00d7 2\\.5   {\\\\displaystyle \\\\times 2\\.5}   | \u00d7 1  /  6\\.25   {\\\\displaystyle \\\\times 1/6\\.25}   || Low (l) | \u00d7 2   {\\\\displaystyle \\\\times 2}   | \u00d7 1  /  5   {\\\\displaystyle \\\\times 1/5}   | For example, the number of steps   N  s t e p s {\\\\displaystyle N\\_{\\\\rm {steps}}}  for BSEPREC \\= Low can be found via   N  s t e p s  \\=  O M E G A M A X  \u00d7 2  C S H I F T  /  5 {\\\\displaystyle N\\_{\\\\rm {steps}}\\={\\\\frac {{\\\\rm {OMEGAMAX}}\\\\times 2}{{\\\\rm {CSHIFT}}/5}}} Related tag and articles------------------------ IBSE,NBANDSV,NBANDSO,CSHIFT,OMEGAMAX,BSE calculations,Time\\-dependent density\\-functional theory calculations,Bethe\\-Salpeter equations  ---"}
{"file_name": "LVDW_EWALD.md", "content": "LVDW\\_EWALD= logical   Default: **LVDW\\_EWALD** \\= .FALSE.nDescription: LVDW\\_EWALD decides whether the lattice summation in  {\\\\displaystyle E\\_{disp}}  expression by means of Ewald's summation is computed.  --- LVDW\\_EWALD decides whether the lattice summation in  {\\\\displaystyle E\\_{disp}}  expression by means of Ewald's summation is computed in the pairwise van der Waals corrections schemes DFT\\-D2, DFT\\-ulg and Tkatchenko\\-Scheffler method."}
{"file_name": "Relaxed_geometry.md", "content": "Description: calculate the relaxed geometry of NH3: the total energy is the energy of the initial state of the flipping reaction  --- * INCAR  ```SYSTEM = Ammonia flippingIBRION = 2NSW = 10ALGO = NPOTIM = 0.5EDIFF = 1e-6EDIFFG = -0.01NELMIN = 5  ``` * KPOINTS  ```k-points 0 G 1 1 1  ```   * POSCAR  ```ammonia flipping  1.00000000000000    6.000000    0.000000    0.000000    0.000000    7.000000    0.000000    0.000000    0.000000    8.000000  H    N  3    1Selective dynamicsDirect0.636429  0.567446  0.549205   T   T   T0.500000  0.364896  0.549205   T   T   T0.363571  0.567446  0.549205   T   T   T0.500000  0.500000  0.500000   F   F   F  ``` Download-------- ammonia\\_flipping.tgz, sub\\-folder scf  --- To the list of examples\") or to the main page"}
{"file_name": "O_dimer.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Relaxation of the bond length of an oxygen dimer. Input----- ### POSCAR  ```O dimer in a box 1.0         \u00a0! universal scaling parameters 8.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 8.0 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)2            \u00a0! number of atomscart         \u00a0! positions in cartesian coordinates 0 0 0       \u00a0! first atom 0 0 1.22    \u00a0! second atom  ``` ### INCAR  ```SYSTEM = O2 dimer in a boxISMEAR = 0\u00a0! Gaussian smearingISPIN  = 2\u00a0! spin polarized calculationNSW = 5   \u00a0! 5 ionic stepsIBRION = 2\u00a0! use the conjugate gradient algorithm  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ```     Calculation----------- * We have selected in the INCAR file that geometry relaxation should be performed. In this case 5 ionic steps (NSW\\=5\\) should be done at most. For the relaxation a conjugate gradient (CG) algorithm is used (IBRION\\=2\\). * The CG algorithm requires line minimizations along the search direction. This is done using a variant of Brent's algorithm. (Picture missing)\t+ Trial step along search direction (gradient scaled by POTIM)\t+ Quadratic or cubic interpolation using energies and forces at       x   0    \t{\\\\displaystyle \\\\mathbf {x} \\_{0}}  and      x   1    \t{\\\\displaystyle \\\\mathbf {x} \\_{1}} \t allows to determine the approximate minimum\t+ Continue minimization, if app. minimum is not accurate enough [](File_Fig_O2_dimer_1.html) ### stdout  ```DAV:   1     0.517118590134E+02    0.51712E+02    -0.31393E+03    80   0.366E+02...    ...   ......    ...   ...DAV:  14    -0.985349953776E+01   -0.15177E-03    -0.57546E-06    64   0.125E-02    0.371E-03DAV:  15    -0.985357023804E+01   -0.70700E-04    -0.22439E-06    64   0.741E-03   1 F= -.98535702E+01 E0= -.98535702E+01  d E =-.985357E+01  mag=     2.0000 curvature:   0.00 expect dE= 0.000E+00 dE for cont linesearch  0.000E+00 trial: gam= 0.00000 g(F)=  0.113E+00 g(S)=  0.000E+00 ort = 0.000E+00 (trialstep = 0.100E+01) search vector abs. value=  0.113E+00 bond charge predicted...    ...   ......    ...   ...   2 F= -.96234585E+01 E0= -.96234585E+01  d E =0.230112E+00  mag=      2.0000 trial-energy change:    0.230112  1 .order    0.190722   -0.113406    0.494850 step:   0.1397(harm=  0.1864)  dis= 0.00731  next Energy=    -9.861386 (dE=-0.782E-02) bond charge predicted...    ...   ......    ...   ...   3 F= -.98607735E+01 E0= -.98607735E+01  d E =-.720327E-02  mag=      2.0000 curvature:  -0.09 expect dE=-0.900E-05 dE for cont linesearch -0.900E-05 trial: gam= 0.00000 g(F)=  0.969E-04 g(S)=  0.000E+00 ort =-0.331E-02 (trialstep = 0.828E+00) search vector abs. value=  0.969E-04 reached required accuracy - stopping structural energy minimisation  ``` Explanation of the output: * The quantitiy *trial\\-energy change* is the change of the energy in the trial step. * The first value after 1\\. order is the expected energy change calculated from the forces   ( (  F  ( start  ) \\+  F  ( trial  ) )  /  2 \u00d7 {\\\\displaystyle ((\\\\mathbf {F} ({\\\\textrm {start}})\\+\\\\mathbf {F} ({\\\\textrm {trial}}))/2\\\\times }  change of positions \\- central difference. * The second and third value correspond to   F  (  s t a r t  ) \u00d7 {\\\\displaystyle \\\\mathbf {F} (\\\\mathrm {start} )\\\\times }  change of positions and   F  (  t r i a l  ) \u00d7 {\\\\displaystyle \\\\mathbf {F} (\\\\mathrm {trial} )\\\\times }  change of position. * The value *step* is the estimated size of the step leading to a line minimization along the current search direction. *harm* is the optimal step using a second order (or harmonic) interpolation. * The trial step size can be controlled by the paramter POTIM (the value *step* times the present POTIM is usually optimal). * The final positions after the optimization are stored in the CONTCAR file. One can copy CONTCAR to POSCAR and continue the relaxation. Download--------  Odimer.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "Installing_VASP.5.X.md", "content": "Requirements------------ For the compilation of the parallel version of VASP the following software is mandatory: * Fortran and C compilers.* An implementation of MPI (Message Passing Interface).* Numerical libraries like BLAS, LAPACK, ScaLAPACK, and FFTW. Build system------------ The build system of VASP (as of versions \\>\\= 5\\.4\\.1\\) has the followingstructure:  ```              vasp.X.X.X (root directory) |         ---------------------------------------        |              |          |             |       arch           bin       build          src |                                         ---------------                                        |       |       |                                       lib    parser   CUDA  ``` root/Holds the high\\-level makefile, and several subdirectories.root/srcHolds the source files of VASP, and a low\\-level makefile.root/src/libHolds the source of the VASP library (used to be vasp.X.lib), and a low\\-level makefile.root/src/parserHolds the source of the LOCPROJ parser (as of versions \\>\\= 5\\.4\\.4\\), and a low\\-level makefile.root/src/CUDAHolds the source of the cuda\\-code that will be executed on the GPU by the CUDA\\-C GPU port of VASP.root/archHolds a collection of makefile.include.arch files.root/buildThe different versions of VASP, i.e., the standard, gamma\\-only, non\\-collinear version will be build in separate subdirectories of this directory.root/binHere make will store the binaries.How to make VASP---------------- Copy one of the `makefile.include.arch` files in `root/arch` to `root/makefile.include`.Take one that most closely reflects your system (hopefully).For instance, on a linux box with the Intel Composer suite:  ```cp arch/makefile.include.linux_intel  ./makefile.include  ``` In many cases these `makefile.include` files will have to be adapted to the particulars of your system (see below). When you've finished setting up `makefile.include`, build VASP:  ```make all  ``` This will build the standard, gamma\\-only, and non\\-collinear version of VASP one after the other.Alternatively on may build these versions individually:  ```make stdmake gammake ncl  ``` To compile the CUDA\\-C GPU port of VASP:  ```cp arch/makefile.include.linux_intel_cuda ./makefile.include  ``` and adapt it to the particulars of your system (see below), followed by:  ```make gpumake gpu_ncl  ``` to built the GPU ports of the standard and non\\-collinear versions, respectively. **N.B.**: Unfortunately at this time we do not offer a GPU port of the gamma\\-only version yet. Adapting makefile.include------------------------- ### Precompiler variables  --- CPP\\_OPTIONSSpecify the precompiler flags:  ```CPP_OPTIONS=[-Dflag1 [-Dflag2] ... ] ``` Take a lead from the `makefile.include.arch` files in **/arch**, and have a look at the description of the commonly used VASP prcompiler flags.* N.B.I: \\-DNGZhalf, \\-DwNGZhalf, \\-DNGXhalf, \\-DwNGXhalf are deprecated options. Building the standard, gamma\\-only, or non\\-collinear version of the code is specified through an additional argument to the make command (see the make section).* N.B.II: CPP\\_OPTIONS is only used in this file, where it should be added to CPP (see next item).  CPPThe command to invoke the precompiler you want to use, for instance:* Using Intel's Fortran precompiler:  ```CPP=fpp -f_com=no -free -w0 $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS) ``` * Using cpp:  ```CPP=/usr/bin/cpp -P -C -traditional $*$(FUFFIX) >$*$(SUFFIX) $(CPP_OPTIONS) ``` * N.B.: This variable has to include $(CPP\\_OPTIONS)! If not, CPP\\_OPTIONS will be ignored. ### Compiler variables  --- The Fortran compiler will be invoked as:  ```$(FC) $(FREE) $(FFLAGS) $(OFLAG) $(INCS)  ``` FREESpecify the options that your Fortran compiler needs for it to accept free\\-form source layout, without line\\-length limitation. For instance:* Using Intel's Fortran compiler:  ```FREE=-free -names lowercase ``` * Using gfortran:  ```FREE=-ffree-form -ffree-line-length-none ```  FCThe command to invoke your Fortran compiler (e.g. gfortran, ifort, mpif90, mpiifort, ... ). FCLThe command that invokes the linker. In most cases:  ```FCL=$(FC) [+ some options] ``` * Using the Intel composer suite (Fortan compiler \\+ MKL libraries), typically:  ```FCL=$(FC) -mkl ``` OFLAGThe general level of optimization (default: OFLAG\\=\\-O2\\).FFLAGSAdditional compiler flags.* To enable debugging in vasp following line can be added:  ```FFLAGS+=-g  ``` OFLAG\\_IN(default: \\-O2\\) In the vast majority of makefiles this variable is set:  ```OFLAG_IN=$(OFLAG) ``` DEBUGThe optimization level with which the main program (main.F) will be compiled, usually:  ```DEBUG=-O0 ``` INCSUse this variable to specify objects to be included in the sense of:  ```INCS=-Idirectory-with-files-to-be-included ``` ### Linking against libraries  --- The linker will be invoked as:  ```$(FCL) -o vasp  ..all-objects.. $(LLIBS) $(LINK)  ``` LLIBSSpecify libraries and/or objects to be linked against, in the usual ways:  ```LLIBS=[-Ldirectory -llibrary] [path/library.a] [path/object.o] ``` Usually one has to specify several numerical libraries (BLAS, LAPACK or scaLAPACK, etc). For instance using the Intel composer suite (and compiling with CPP\\_OPTIONS\\= .. \\-DscaLAPACK ..):  ```MKL_PATH   = $(MKLROOT)/lib/intel64BLACS      = -lmkl_blacs_openmpi_lp64SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS)LLIBS      = $(SCALAPACK) $(LAPACK)  ``` For other configurations please take a lead from the `makefile.include.arch` files under **/arch**, or look at the examples below. #### Note on LAPACK 3\\.6\\.0 and newer As of LAPACK \\>\\=3\\.6 the subroutine DGEGV is deprecated and replaced by DGGEV \\[[\\[1]](http://www.netlib.org/lapack/lapack-3.6.0.html)]. Linking against LAPACK 3\\.6 or higher will result in following error message:   ```broyden.o: In function `__broyden_MOD_broyd':broyden.f90:(.text+0x4bb0): undefined reference to `dgegv_'dynbr.o: In function `brzero_':dynbr.f90:(.text+0xe78): undefined reference to `dgegv_'dynbr.f90:(.text+0x112c): undefined reference to `dgegv_'  ``` The recommended solution to this problem is to add following line to the `makefile.include`  ```CPP_OPTIONS += -DLAPACK36  ``` and following lines to `./src/symbol.inc`  ```! routines replaced in LAPACK >=3.6 #ifdef LAPACK36#define DGEGV DGGEV#endif  ``` This will replace all calls of DGEGV by DGGEV before compilation. ### The list of objects  --- The standard list of objects needed to compile VASP is given by the variable SOURCE in the `root/src/.objects` file that is part of the distribution. Objects to be added to this list can be specified in `makefile.include` by means of:  ```OBJECTS= .. your list of objects .. ``` N.B.: Several objects will \\*have\\* to be added in this manner (see the following section on \"Fast\\-Fourier\\-Transforms). ### Fast\\-Fourier\\-Transforms  --- OBJECTSAdd the objects to be compiled (or linked againts) that provide the FFTs (may include static libraries of objects .a).INCSIn case one compiles using the fftw\\-library, i.e.,  ```OBJECTS= .. fftw3d.o fftmpiw.o .. ``` then INCS can be set to the directory that holds `fftw3.f`:  ```INCS=-Idirectory-that-holds-fftw3f ``` (needed because `fftw3d.F` and `fftmpiw.F` include `fftw3.f`).N.B.: If in the aformentioned case INCS is not set, then `fftw3.f` has to be present in **/src**.Common choices are: * To use Intel's MKL wrapper of fftw (and compiling with CPP\\_OPTIONS\\= .. \\-DMPI ..):  ```OBJECTS= fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o \\         $(MKLROOT)/interfaces/fftw3xf/libfftw3xf_intel.aINCS=-I$(MKLROOT)/include/fftw  ``` * Or to use Juergen Furtmueller's FFT implementation (and \\-DMPI):  ```OBJECTS= fftmpi.o fftmpi_map.o fft3dfurth.o fft3dlib.o INCS=  ``` For other configurations please take lead from the `makefile.include.arch` files under **/arch** or look at the examples below. ### Special rules  --- #### Special rules for the optimization level of FFT related objects The makefiles of our old build systems contained a set of special rules for the optimization level allowed in the compilation of the FFT related objects. In the current build system these special rules can be duplicated by adding the following:  ```OBJECTS_O1 += fft3dfurth.o fftw3d.o fftmpi.o fftmpiw.oOBJECTS_O2 += fft3dlib.o  ``` #### Special rules in general The current `src/makefile` contains a set of recipes to allow for the compilation of objects at different levels of optimization (other than the general level specified by OFLAG). These recipes replace the special rules section of the makefiles in our old build system. In these recipes the compiler will be invoked as:  ```$(FC) $(FREE) $(FFLAGS_x) $(OFLAG_x) $(INCS_x)   ``` where x stands for: 1, 2, 3, or IN. FFLAGS\\_xDefault: FFLAGS\\_x\\=$(FFLAGS), for x\\=1, 2, 3, and IN.OFLAG\\_xDefault: OFLAG\\_x\\=\\-Ox (for x\\=1, 2, 3\\), and OFLAG\\_IN\\=\\-O2INCS\\_xDefault: INCS\\_x\\=$(INCS), for x\\=1, 2, 3, and IN.The objects to be compiled in accordance with these recipes have to be specified by means of the variables: OBJECTS\\_O1, OBJECTS\\_O2, OBJECTS\\_O3, OBJECTS\\_INSeveral objects are compiled at \\-O1 and \\-O2 by default. These lists of objects are specified in the .objects file through the variables: SOURCE\\_O1, SOURCE\\_O2, SOURCE\\_INand reflect the special rules as they were present in most of the makefiles of the old build system. To completely overrule a default setting (for instance for the \\-O1 special rules) use the following construct:  ```SOURCE_O1=OBJECTS_O1= .. your list of objects ..  ``` ### For the VASP library (lib)  --- CPP\\_LIBThe command to invoke the precompiler. In most cases it will suffise to set:  ```CPP_LIB=$(CPP) ``` FC\\_LIBThe command to invoke your Fortran compiler. In most cases:  ```FC_LIB=$(FC) ``` N.B.: the library can be compiled without MPI support, i.e., when `FC=mpif90`, FC\\_LIB may specify a Fortran compiler without MPI supprt, e.g. `FC_LIB=ifort`.FFLAGS\\_LIBFortran compiler flags, including a specification of the level of optimization. In most cases:  ```FFLAGS_LIB=-O1 ``` FREE\\_LIBSpecify the options that your Fortran compiler needs for it to accept free\\-form source layout, without line\\-length limitation. In most cases it will suffise to set:  ```FREE_LIB=$(FREE) ``` CC\\_LIBThe command to invoke your C compiler (e.g. gcc, icc, ..).N.B.: the library can be compiled without MPI support.CFLAGS\\_LIBC compiler flags, including a specification of the level of optimization. In most cases:  ```CFLAGS_LIB=-O ``` OBJECTS\\_LIBList of \"non\\-standard\" objects to be added to the library. In most cases:  ```OBJECTS_LIB= linpack_double.o ``` When compiling VASP with `-Duse_shmem`, one has to add `getshmem.o` as well, i.e.,  ```OBJECTS_LIB= .. getshmem.o .. ``` ### For the LOCPROJ\\-parser (parser)  --- CXX\\_PARSThe command to invoke your C\\+\\+ compiler (e.g. g\\+\\+, icpc, ..).And tell make that the parser needs to be compiled:  ```LIBS += parser  ``` and needs to be linked against:  ```LLIBS += -Lparser -lparser -lstdc++  ``` ### For the interface to Wannier90 (optional)  --- To include the interface to Wannier90(\\-DVASP2WANNIER90 or \\-DVASP2WANNIER90v2),one needs to specify:  ```LLIBS += /your-wannier90-directory/libwannier.a  ``` And one needs to download Wannier90 and compile libwannier.a. ### For libbeef (optional)  --- In case one wants to compile VASP with the BEEF van\\-der\\-Waals functionals (\\-Dlibbeef),one needs to add:  ```LLIBS += -Lyour-libbeef-directory -lbeef  ``` And one needs to download and compile libbeef, of course. ### For the GPU port  --- CUDA\\_ROOTLocation of CUDA toolkit install. For example:  ```CUDA_ROOT\u00a0:= /opt/cuda ``` CUDA\\_LIBCUDA toolkit libraries to link to. Typically:  ```CUDA_LIB\u00a0:= -L$(CUDA_ROOT)/lib64 -lnvToolsExt -lcudart -lcuda -lcufft -lcublas ``` NVCCLocation of CUDA compiler and flags. Typically:  ```NVCC\u00a0:= $(CUDA_ROOT)/bin/nvcc -g ``` OBJECTS\\_GPUAdd the objects to be compiled (or linked againts) that provide the FFTs (may include static libraries of objects .a). For FFTW:  ```OBJECTS_GPU = fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d_gpu.o fftmpiw_gpu.o ``` GENCODE\\_ARCHCUDA compiler options to generate code for your particular GPU architecture.For Kepler:  ```GENCODE_ARCH\u00a0:= -gencode=arch=compute_35,code=\\\"sm_35,compute_35\\\" ``` For Maxwell:  ```GENCODE_ARCH\u00a0:= -gencode=arch=compute_53,code=\\\"sm_53,compute_53\\\" ``` Multiple \\`\\-gencode\\` statements can be compiled to create cross\\-platform executables.For details see the NVIDIA nvcc documentation.MPI\\_INCPath to MPI include files so the CUDA compiler can find them. For example:  ```MPI_INC\u00a0:= /opt/openmpi/include ``` These can often be found with `mpicc --show`.CPP\\_GPUPreprocessor options for GPU compilation.Always include:`-DCUDA_GPU` to build cross\\-platform sources for GPU, `-DUSE_PINNED_MEMORY` to use pinned memory for transfer buffers, and `-DRPROMU_CPROJ_OVERLAP` to overlap communication and computation in RPROJ\\_MU.Optional:Set `-DCUFFT_MIN=N` to intercept any FFT calls of size greater than *N*3 and evaluate on GPU.Experimental:Set `-DUSE_MAGMA` to use MAGMA for LAPACK\\-like calls on the GPU.So typically:  ```CPP_GPU    = -DCUDA_GPU -DRPROMU_CPROJ_OVERLAP -DUSE_PINNED_MEMORY -DCUFFT_MIN=28 ``` MAGMA\\_ROOTIf using the experimental MAGMA support, path to MAGMA 1\\.6\\. Typically:  ```MAGMA_ROOT\u00a0:= /opt/magma/lib ``` Examples-------- * makefile.include.linux\\_intel* makefile.include.linux\\_gfortran* makefile.include.linux\\_intel\\_cuda Patches------- ### For vasp.5\\.4\\.1\\.24Jun15 Unfortunately several bugs were reported for vasp.5\\.4\\.1\\.24Jun15\\.To fix them download the patch(es) below: * patch.5\\.4\\.1\\.08072015\\.gz* patch.5\\.4\\.1\\.27082015\\.gz* patch.5\\.4\\.1\\.06112015\\.gz To apply these patch(es) gunzip the patch file(s) and  ```patch -p1 < patch.5.4.1.ddmmyyyy  ``` within your vasp.X.X.X root\\-directory. ### For vasp.5\\.4\\.1\\.05Feb16 (with GPU support) The following patch improves the mapping between MPI\\-ranks and GPUs on multi\\-node/multi\\-GPU systems (the issue is performance only, not a bugfix): * patch.5\\.4\\.1\\.14032016\\.gz The following patch unfortunately does address several bugs: 1. For noncollinear calculations LOPTICS\\=.TRUE. didn't work correctly with Bl\u00f6chl\\-smearing (ISMEAR\u2264\\-4\\).2. The Zeroth\\-Order\\-Regular\\-Approximation (ZORA) that accounts for the relativistic mass correction in the Spin\\-Orbit\\-Coupling operator was not implemented correctly. **N.B.**: Unfortunately this bugfix affects the total energy. Effects are expected to be negligible except for heavy elements.* patch.5\\.4\\.1\\.03082016\\.gz To apply these patches gunzip the patch files and  ```patch -p0 < patch.5.4.1.14032016patch -p0 < patch.5.4.1.03082016  ``` within your vasp.X.X.X root\\-directory. ### For vasp.5\\.4\\.4\\.18Apr17\\-6\\-g9f103f2a35 The following patch addresses a few issues: 1. Fixes a bug in the stress term when using the SCAN functional in certain pathological cases.2. Fixes a bug in the Thomas\\-Fermi potential.3. Fixes a bug that affected the optB88 for some atoms and molecules.4. Fixes some issues with the BSE at finite **q**. and adds support for: 1. The CX13 vdW\\-DFT functional. * patch.5\\.4\\.4\\.16052018\\.gz To apply this patch gunzip the patch file and  ```patch -p0 < patch.5.4.4.16052018  ``` within your vasp.X.X.X root\\-directory. Related Sections---------------- Precompiler flags,CUDA\\-C GPU port of VASP,  ---"}
{"file_name": "Downsampling.md", "content": "Redirect to: * Downsampling of the Hartree\\-Fock operator"}
{"file_name": "CUTOFF_TYPE.md", "content": "CUTOFF\\_TYPE= erfc \\| gaussian \\| fermi \\| num\\_wannn| Default: **CUTOFF\\_TYPE** | \\= erfc |  || --- | --- | --- | Description: CUTOFF\\_TYPE chooses the type of cutoff function to be used before performing the singular\\-value decomposition (SVD) of the initial projections matrix.  --- This tag governs how much weight should be given in the SVD during the  one\\-shot Wannierization \"Wannier functions\") to a certain orbital with energy   \u03f5  n  k {\\\\displaystyle \\\\epsilon \\_{n\\\\mathbf {k} }}  .If the weight is zero the orbital is not included in the fitting while if it is one it is included with the maximum importance.This behavior is similar to the wannier90 disentanglement window. In order to obtain a good Wannierization, a certain level of freedom should be given to the localized orbitals to adequately accommodate the Bloch states.Applying a smooth cutoff function from the following table can help achieve this goal by including more states beyond the relevant energy range.This is particularly important for systems with entangled states. | CUTOFF\\_TYPE | Function || --- | --- || erfc | 1 2    erfc   \\[  (  \u03f5  n  k    \u2212 \u03bc )  /  \u03c3  ]    {\\\\displaystyle {\\\\frac {1}{2}}{\\\\text{erfc}}\\\\left\\[(\\\\epsilon \\_{n\\\\mathbf {k} }\\-\\\\mu )/\\\\sigma \\\\right]}  {2}}{\\text{erfc}}\\left[(\\epsilon _{n\\mathbf {k} }-\\mu )/\\sigma \\right]} || gaussian | e  \u2212 (  \u03f5  n  k    \u2212 \u03bc  )  2    /  \u03c3     {\\\\displaystyle e^{\\-(\\\\epsilon \\_{n\\\\mathbf {k} }\\-\\\\mu )^{2}/\\\\sigma }}   }-\\mu )^{2}/\\sigma }} || fermi | 1   e  (  \u03f5  n  k    \u2212 \u03bc )  /  \u03c3   \\+ 1      {\\\\displaystyle {\\\\frac {1}{e^{(\\\\epsilon \\_{n\\\\mathbf {k} }\\-\\\\mu )/\\\\sigma }\\+1}}}  {e^{(\\epsilon _{n\\mathbf {k} }-\\mu )/\\sigma }+1}}} | with   \u03c3 {\\\\displaystyle \\\\sigma }  specified by the CUTOFF\\_SIGMA tag and   \u03bc {\\\\displaystyle \\\\mu }  by CUTOFF\\_MU. In addition to the aforementioned cutoff functions, it is also possible to select `CUTOFF_TYPE = num_wann`, which includes exactly as many Bloch states at each k\\-point as there are Wannier orbitals to be constructed."}
{"file_name": "Best_practices_for_machine-learned_force_fields.md", "content": "Using the machine\\-learning\\-force\\-fields method, VASP can construct force fields based on ab\\-initio simulations. When constructing, testing, re\\-learning, and applying a force field, many aspects must be carefully considered. Some best practices are listed here, but note that the list is not exhaustive and the method has not yet been applied to a large number of systems. We, therefore, recommend the usual rigorous monitoring that is necessary for all research projects. The basic steps required for machine learning force field (MLFF) training can be found on the Basics page on machine learning force field calculations. Training-------- ### Best practice training modes To start a training run, set ML\\_MODE \\= TRAIN. Depending on the existence of a valid ML\\_AB in the folder where VASP is executed, one of the two modes is automatically selected: * No ML\\_AB file: the training algorithm will start from zero.* ML\\_AB file is present: Training will continue based on an existing structure database. In this mode of operation, a force field is generated from the existing database (ML\\_AB file) and then a MD run is continued from the specified POSCAR file. This mode is used to select additional structures from the phase space of the material. But it can also be used to examine surfaces by first training the bulk material, then adding a molecule to the surface in the POSCAR file and continuing the training. If there are several atoms of the same species which should be treated differently by the machine\\-learning algorithm it is important to give different names to them in the POSCAR file. For example if there are oxygen atoms in a bulk material and in a molecule at the surface it is advisable to make two groups of oxygen atoms in the POSCAR and call one group O1 and and the second O2\\.  | **Warning:** It is not possible to give the same name to different groups of atoms in the POSCAR file and the names are restricted to two characters. || --- | The training mode requires VASP to perform ab\\-initio calculations, so the first step is to set up the electronic minimization scheme. | **Warning:** It is very important to **not** change the ab\\-initio settings in the INCAR file between training from scratch and continuing training. Likewise, the POTCAR file is **not** allowed to be changed when resuming training. || --- |  **Ab\\-initio calculation setup**  In general, everything that applies to VASP DFT calculations also applies here. The guidelines for electronic minimization can be used to set up the ab\\-initio part for on\\-the\\-fly training.Additionally, we strongly advise following these guidelines for ab\\-initio computation during on\\-the\\-fly learning: * Do not set MAXMIX\\>0 when using force fields for machine learning. During machine learning, first\\-principles calculations are often bypassed for hundreds or even thousands of ion steps, and ions can move significantly between first\\-principles calculations. In these cases, the use of MAXMIX very often results in non\\-converged electronic structures or errors during the self\\-consistency cycle.* It is generally possible to train force fields on a smaller unit cell and then apply them to a larger system. Be sure to choose a large enough structure so that the phonons or collective oscillations \"fit\" into the supercell.* It is important to learn the exact forces. To do this, the electronic minimization has to be checked for convergence. These checks may include, for example, the number of k\\-points in the KPOINTS file, the plane wave limit (ENCUT), the electronic minimization algorithm, etc.* Turn off symmetry as for standard molecular dynamics runs (ISYM\\=0\\).* For simulations without a fixed grid (NpT), the cutoff for plane waves ENCUT must be set at least 30 percent higher than for fixed volume calculations. Also, it is good to restart frequently (ML\\_MODE\\=TRAIN with existing ML\\_AB file in working directory) to reinitialize the PAW basis of KS orbitals and avoid Pulay stress.  **Molecular dynamics setup**  After the forces are obtained from electronic minimization by the Hellmann\\-Feynman Theorem, VASP must propagate the ions to obtain a new configuration in phase space. For the molecular dynamics part, familiarity with setting up molecular dynamics runs is beneficial. In addition, we recommend the following settings in the molecular dynamics part: * Decrease the integration step (POTIM) if the system contains light elements, or increase the light element mass (POMASS) in the INCAR or the POTCAR file. As a rule of thumb, the time step should not exceed 0\\.7 fs and 1\\.5 fs for hydrogen and oxygen\\-containing compounds, respectively. However, a time step of 3 fs may work well for heavy elements (Si).* If possible, heat the system gradually using the temperature ramp (set TEEND higher than TEBEG). Start with a low temperature (not zero) and increase it to a temperature about 30% above the desired application temperature. This will help \"on\\-the\\-fly\" training to explore a larger portion of the phase space and will result in more stable force fields.* If possible, prefer molecular dynamics training runs in the NpT ensemble (ISIF\\=3\\). The additional cell fluctuations improve the robustness of the resulting force field. However, for fluids, only volume changes of the supercell are allowed, otherwise, the cell may \"collapse\", i.e., it tilts extremely so that the system becomes a layer of atoms. This can be achieved with ICONST, here \"ICONST\") and here. For an example input for constraining the cell shape, see the ICONST page or the end of this page page. The NVT ensemble (ISIF\\=2\\) is also acceptable for training, but use the Langevin thermostat as it is very good for phase space sampling (ergodicity) due to its stochastic nature.* One should always try to explore as much of the phase space of the material as possible. Therefore, one should always **avoid** training in the NVE ensemble.  **General settings for on the fly training**  The ML\\_MODE\\=TRAIN sets already widely used default valuesfor on\\-the\\-fly training in machine learning. Nevertheless, wewould like to provide the following guidelines for setting individual machine\\-learning parameters: * If the system contains different components, first train them separately. For example, if the system consists of a crystal surface and a molecule that binds to that surface. Train the main crystal first, then the surface, possibly the isolated molecule, and finally the entire system (if you do not need to describe the isolated molecule, you can skip training for the molecule). In this way, a considerable number of ab\\-initio calculations can be avoided in the most computationally intensive combined system.* If you train a system containing a surface or isolated molecules do not train the stresses. For that set ML\\_WTSIF to a very small value in the INCAR file (e.g. ML\\_WTSIF\\=1E\\-10\\).* If there are not enough reference configurations taken during training (seen in ML\\_ABN), adjusting the default value of ML\\_CTIFOR\\=0\\.02 to a lower value is advisable. The value of this flag is highly dependent on the system under consideration, so it is encouraged to determine the correct value of this flag by trial and error.* A force field is only ever applicable to the phases of the material in which it has been trained. Therefore, machine\\-learned force fields cannot be expected to provide reliable results for conditions for which training data have not been collected. ### Retraining with re\\-selection of local reference configurations This mode is selected with ML\\_MODE\\=SELECT. In this mode, a new machine\\-learned force field is generated from the ab\\-initio data provided in the ML\\_AB file. The structures are read in and processed sequentially as if they had been obtained through an MD simulation. In other words, the same steps are performed as in on\\-the\\-fly training, but the data source is not an MD run, but the structures available in the ML\\_AB file. This mode of operation can be used to generate VASP force fields for machine learning from precomputed or external ab\\-initio datasets. The main difference with ML\\_ISTART \\= REFIT is that the list of local reference configurations in the ML\\_AB file is ignored and a new set is created. The newly updated set is written to the final file ML\\_ABN. If the calculations for ML\\_MODE \\= SELECT are too time\\-consuming with the default settings, it is useful to increase ML\\_MCONF\\_NEW to values around 10\\-16 and set ML\\_CDOUB \\= 4\\. This often speeds up calculations by a factor of 2\\-4\\. The automatic update of ML\\_CTIFOR is not very stable at the beginning of the reselection if the force fields are not sampled sufficiently and are therefore inaccurate. Then a too\\-high value for ML\\_CTIFOR may be determined and in all later steps the errors of the predicted forces would be below ML\\_CTIFOR. Therefore, no training would be performed. To address this, ML\\_MODE\\=*SELECT* does not apply any update for ML\\_CTIFOR by default (ML\\_ICRITERIA \\= 0\\). Also, it can be beneficial to vary ML\\_CTIFOR until a satisfactory number of local reference configurations is found (i.e. until the matching errors stop decreasing as the number of local reference configurations increases). The number of local reference configurations increases as ML\\_CTIFOR becomes smaller. It is strongly recommended to perform a more accurate SVD\\-based refitting afterward. ### Retraining with hyper\\-parameter optimization After you have collected a sufficient number of local atomic reference configurations, as described in Training from scratch and Continuation training, it is recommended to optimize the parameters for your force field. This will result inlower training and test set errors. The reference configurations selected in the ML\\_AB will not be updated. To perform a hyperparameter search, ML\\_MODE\\=REFIT must be set in the INCAR file and a ML\\_AB must exist in the working directory. By setting ML\\_MODE\\=REFIT, VASP automatically selects ML\\_IALGO\\_LINREG\\=4, which performs a regularized SVD to find the appropriate weights   w {\\\\displaystyle \\\\mathbf {w} }  (see here\") for the definition). It is favorable to enter refit mode and tune the hyperparameters to improve the fitting error, which can be found in the ML\\_LOGFILE under the description **ERR**. To tune the hyperparameters, set the desired parameter in the INCAR file, then run VASP and check the error in the ML\\_LOGFILE. For more information on extracting errors from the ML\\_LOGFILE, see here\"). Adjusting the following parameters may improve the quality of the force\\-fields: * Adjusting the cutoff radius for the angular and radial descriptor by adjusting ML\\_RCUT2 and ML\\_RCUT1.* Matching the number of radial and angular basis functions with ML\\_MRB1 and ML\\_MRB2.* The parameter ML\\_LMAX2 should be optimized to obtain the maximum angular quantum number for spherical harmonics.* The regularization parameter for the SVD can be adjusted by setting ML\\_SIGW0 in the INCAR. The regularization should always be set as large as possible so that the force field can be applied to structures outside of the training set.* {TAG\\|ML\\_EPS\\_LOW}} should be used to sparsify the local reference configurations used from the ML\\_AB. This can improve the performance of the trained force field. However, it may also reduce the accuracy. | **Mind:** Hyperparameter optimization should always be started from default values || --- | | **Mind:** For fluids, reducing to ML\\_LMAX2\\=2 and ML\\_RCUT2\\=4 can lead to better fitting results. || --- | ### Accuracy The achievable accuracy of the force fields depends on many factors, e.g. species, temperature, pressure, electronic convergence, machine learning method, etc.In our implementation of kernel ridge regression, the accuracy of the force fields increases as the number of local reference configurations increases. This increase is not linear and at the same time, the computational cost increases linearly. When generating machine\\-learning force fields there is always a tradeoff between accuracy and efficiency. Here are some empirical guidelines: * For a given structure, the error increases with increasing temperature and pressure. Therefore, the force field should not be trained under conditions too far from the target condition. For example, for a production run at 300 K, it is good to learn above this temperature (450\\-500 K) to capture more structures that might occur in the production run, but it is not beneficial to learn the same phase at, say, 1000 K, as this is likely to reduce the accuracy of the force field.* Liquids typically require many more training structures and local reference configurations to achieve similar accuracy to solids. To achieve errors of about 30 meV/angstrom, liquids often require 2000\\-4000 local reference configurations, while 500\\-1000 reference configurations might be sufficient for simple periodic volume systems.* Typically, the fitting errors should be less than 1 meV/atom for the energies and 30\\-100 meV/angstrom for the forces at temperatures between 300\\-1000 K. Errors slightly above these values may be acceptable, but these calculations should be thoroughly checked for accuracy. ### Accurate force fields The default parameters that control learning and sampling are chosen to provide a good tradeoff between accuracy and efficiency. In particular, the default setting for ML\\_EPS\\_LOW tends to remove local reference configurations during the sparsification step, limiting accuracy. However, further decreasing ML\\_EPS\\_LOW to values below 1\\.0E\\-11 does not improve accuracy, since the condition number of the regularized normal equation solved in Bayesian regression is approximately proportional to the square of the condition number of the Gram matrix considered during sparsification (see here). Thus, if the Gram matrix has a condition number of 1E9, then the normal equation has a condition number of 1E18, which means that a loss of significance occurs when the normal equation is solved. To obtain highly accurate force fields that retain more local reference configurations, one must use the following two\\-step procedure: First, one performs a full on\\-the\\-fly learning:   ```ML_IALGO_LINREG=1; ML_SION1=0.3; ML_MRB2=12    ``` This can consist of many different training steps that include all the desired structures. Increasing ML\\_MRB1 from 8 to 12 and decreasing ML\\_SION1 from 0\\.5 to 0\\.3 improves the condition number of the Gram matrix by about a factor of 10 and allows the sparsification step to retain more local reference configurations (typically by about a factor of 2\\). Of course, this slows down the force field calculations somewhat.  If full retraining is not possible, you can also try to increase only the number of local reference calculations, as described above, by using ML\\_MODE\\=*SELECT* and choosing a value for ML\\_CTIFOR that gives a satisfactory number of local reference configurations.  Second, readjust the force field using ML\\_MODE\\=*REFIT*. Using SVD instead of solving the regularized normal equation avoids squaring the problem, and therefore the condition number of the design matrix rather than its square is important. In our experience, SVD refinement with the default value ML\\_SION1\\=0\\.5 always improves the accuracy of the force field. ### Tuning on\\-the\\-fly parameters In case too many or too few training structures and local reference configurations are selected some on\\-the\\-fly parameters can be tuned (for an overview of the learning and threshold algorithms we may refer here): * ML\\_CTIFOR: Defines the learning threshold for the Bayesian error of the forces for each atom. In a continuation run, it can be set to the last value of ML\\_CTIFOR of the previous run. This way unnecessary sampling at the beginning of the calculation can be skipped. However, when going from one structure to the other, this tag should be very carefully set. ML\\_CTIFOR is species and system dependent. Low symmetry structures, for example, liquids, have usually a much higher error than high symmetry solids for the same compound. If a liquid is learned first and the last ML\\_CTIFOR from the liquid is used for the corresponding solid, this ML\\_CTIFOR is way too large for the solid and all predicted errors will be below the threshold. Hence no learning will be done on the solid. In this case, it is better to start with the default value for ML\\_CTIFOR. Typical attainable values for ML\\_CTIFOR are 0\\.02 around 300\\-500 K, and 0\\.06 around 1000\\-2000 K, so temperature but also system dependent.* ML\\_CX: It is involved in the calculation of the threshold, ML\\_CTIFOR \\= (average of the stored Bayesian errors in the history) \\*(1\\.0 \\+ ML\\_CX). This tag affects the frequency of selection of training structures and local reference configurations. Positive values of ML\\_CX result in a less frequent sampling (and hence less ab\\-initio calculations) and negative values result in the opposite. Typical values of ML\\_CX are between \\-0\\.3 and 0\\. For training runs using heating, the default usually results in very well\\-balanced machine\\-learned force fields. When the training is performed at a fixed temperature, it is often desirable to decrease to ML\\_CX\\=\\-0\\.1, to increase the number of first principle calculations, and thus the size of the training set (the default can result in too few training data).* ML\\_MHIS: Sets the number of previous Bayesian errors (from learning steps for the default of ML\\_ICRITERIA) that are used for the update of ML\\_CTIFOR. If, after the initial phase, strong variations of the Bayesian errors between updates of the threshold appear and the threshold also changes strongly after each update, the default of 10 for this tag can be lowered.* ML\\_SCLC\\_CTIFOR: Scales ML\\_CTIFOR only in the selection of local reference configurations. In contrast, to ML\\_CX this tag does not affect the frequency of sampling (ab\\-initio calculations). Smaller values mean more local reference configurations are selected; large values mean fewer local reference configurations are selected.* ML\\_EPS\\_LOW: Controls the sparsification of the number of local reference configurations after they were selected by the Bayesian error estimation. Increasing ML\\_EPS\\_LOW increases the number of local reference configurations that are removed and by decreasing the opposite happens. This tag will also not affect the learning frequency since the sparsification is only done after the local reference configurations were selected for a new structure. We do not recommend increasing the threshold to values larger than 1E\\-7\\. Below that value this tag works well to control the number of local reference configurations, however, for multi\\-component systems, the sparsification algorithm tends to lead to strong imbalances in the number of local reference configurations for different species.* ML\\_LBASIS\\_DISCARD: Controls, whether the calculation continues or stops after the maximum number of local reference configurations ML\\_MB for any species is reached. Previously the default behavior was ML\\_LBASIS\\_DISCARD\\=.FALSE.: the calculation stops and requests an increase of ML\\_MB if the number of local reference configurations for any species reaches ML\\_MB. In multi\\-component systems, the sparse representation for one species exceeds ML\\_MB very quickly, while the other species are not sufficiently well described by the yet determined local reference configurations and are still far below the limit ML\\_MB. The present default is hence ML\\_LBASIS\\_DISCARD\\=.TRUE.: In this case, the code disposes of local reference configurations whenever the threshold is reached. It does this species dependent. ### Monitoring on\\-the\\-fly learning The monitoring of your learning can be divided into two parts:  * Molecular dynamics/ensemble\\-related quantities:\t+ Monitor your structure visually. This means looking at the CONTCAR or XDATCAR files with structure/trajectory viewers. Many times when something goes wrong it can be immediately traced back to unwanted or unphysical deformations.\t+ Volume and lattice parameters in the OUTCAR, XDATCAR and CONTCAR files. It is important to confirm that the average volume stays in the desired region. A strong change of the average volume over time in constant temperature and pressure runs indicates phase transitions or non\\-properly equilibrated systems. Particularly troublesome is a strong shearing during a single VASP run: since VASP keeps the plane wave basis set fixed and originally uses a spherical cutoff sphere, the cutoff sphere effectively becomes an ellipsoid. That is, the effective cutoff becomes small in some reciprocal lattice directions. Lattice vector changes of more than 10\u00a0% during a single run must be avoided. The corresponding data files ( ML\\_AB) are not suitable to continue the training (perform your calculations in small \"junks\").\t+ Temperature and pressure in the OUTCAR and OSZICAR files. Strong deviations of temperature and pressure to the desired ones at the beginning of the calculation indicate non\\-properly equilibrated starting positions. If the desired charasteristics undergo strong oscillations optionally block averages can be used to monitor them (for more on block averages please see below under \"Application\").\t+ Pair\\-correlation functions (PCDAT).* Machine learning specific quantities in the ML\\_LOGFILE file:\t+ Estimation of required memory per core. It is written at the beginning of the ML\\_LOGFILE before allocations are done (see here). It is important that if the required memory exceeds the physically available memory the calculation won't necessarily immediately crash at the allocation of static arrays, since many systems use lazy allocations. The calculation could run for a long time before crashing with insufficient memory. Hence the memory estimation should always be checked after startup.\t+ `STATUS`: Shows what happened at each molecular\\-dynamics steps. The force field is updated when the status is \"learning/critical\". Monitor this variable frequently from the beginning on (`grep \"STATUS\" ML_LOGFILE.1|grep -E 'learning|critical'|grep -v \"#\"`). If the calculation still updates the force field at every step after 50 iterations it is a sign that there is something seriously wrong with the calculation. The same is true if the calculation stops learning after a few steps and only force\\-field steps are carried out from then on. In both cases, no useful force field will come out. In ideal learning, the frequency of the update of the force field is high at the beginning and continuously decreases until the algorithm learns only sporadically. Note that due to the approximate error prediction of the Bayesian error, the learning frequency will never drop to zero. If the learning frequency increases suddenly in the late stages of a molecular dynamics run, it is usually a sign that a new region of phase space is explored, which is currently unknown to the force field. But this sudden increase in learning steps towards the end of training could also indicate unwanted deformations of the system that should be looked into carefully.\t+ `LCONF`: Number of local configurations at each learning step.\t+ `ERR`: Root mean square error of predicted energy, forces, and stress (    O  \t{\\\\displaystyle O} \t) concerning ab\\-initio data for all training structures up to the current molecular\\-dynamics step     \u0394 O \\=    \u2211  N   (  O   A I    \u2212  O   M L F F     )  2    /  N    \t{\\\\displaystyle \\\\Delta O\\={\\\\sqrt {\\\\sum \\\\limits \\_{N}(O\\_{\\\\mathrm {AI} }\\-O\\_{\\\\mathrm {MLFF} })^{2}/N}}} \t. Here     N  \t{\\\\displaystyle N} \t goes over all training structures for the energies, element\\-wise over each training structure, times the number of atoms per structure times three Cartesian directions for the forces, and element\\-wise for each training structure times nine tensor components for the stress tensor.\t+ `BEEF`: Estimated Bayesian error of energy, forces, and stress (columns 3\\-5\\). The current threshold for the maximum Bayesian error of forces ML\\_CTIFOR on column 6\\.\t+ `THRUPD`: Update of ML\\_CTIFOR.\t+ `THRHIST`: History of Bayesian errors used for ML\\_CTIFOR. A typical evolution of the real errors (column 4 of `ERR`), Bayesian errors (column 4 of `BEEF`), and threshold (column 6 of `BEEF`) for the forces looks like the following: [](File_ERR_BEEF_CTIFOR_vs_MD_step.html \"500ex\") The following commands were used to extract the errors from the ML\\_LOGFILE: **Click to show commands** `grep ERR ML_LOGFILE|grep -v \"#\"|awk '{print $2, $4}' > ERR.dat` `grep BEEF ML_LOGFILE|grep -v \"#\"|awk '{print $2, $4}' > BEEF.dat` `grep BEEF ML_LOGFILE|grep -v \"#\"|awk '{print $2, $6}' > CTIFOR.dat` The following gnuplot script was used to plot the errors: **Click to show plot\\_errors.gnuplot**  ```set key left topset xlabel \"Molecular-dynamics step\"set ylabel \"Error in force (eV/Angstrom)\" set terminal pngset output 'ERR_BEEF_CTIFOR_vs_MD_step.png' plot \"ERR.dat\" using 1:2 with lines lw 2 lt rgb \"#2fb5ab\" title \"ERR\", \\     \"BEEF.dat\" using 1:2 with lines lw 2 lt rgb \"#808080\" title \"BEEF\", \\     \"CTIFOR.dat\" using 1:2 with lines lw 2 lt rgb \"#a82c35\" title \"CTIFOR\"  ``` * From the plot one can see that the Bayesian errors are always smaller than the real errors. Bayesian inference catches errors in the data well but still retains an error in the probability model.* The plot was extracted from a heating run of liquid water. This can be nicely seen from the steadily increasing real error `ERR` over the whole calculation. In a constant temperature run the error would usually plateau after some time.* The steps in the real error correspond to the molecular\\-dynamics steps where the force field is updated ('learning' or 'critical' for the `STATUS`). This would be also evident from the change in the number of local reference configurations (`grep \"LCONF\" ML_LOGFILE`) at the same molecular\\-dynamics steps.* The following things can cause an increase in errors:\t+ Using a temperature ramp always results in steadily increasing errors.\t+ A sudden increase in errors (especially after being stable for some time) usually indicates deformations of the cell. Usually one wants to avoid these deformations and only train the \"collective vibrations\" of a given phase at different temperatures. Common causes of these deformations are too large temperatures leading to phase transitions or neglect of constraints (ICONST file) for liquids.\t+ The evidence approximation is over\\-fitting and the regularization cannot handle the over\\-fitting. This is a rare case, but if it happens one should start to reduce the fitting data by increasing ML\\_EPS\\_LOW. Testing------- ### Generating a representative test set To assess the predictive power of your MLFF, start by generating a test set reflecting the conditions your force field will encounter. A good way to get test structures is to conduct a molecular dynamics (MD) run using the MLFF and then extract a chosen number of structures equidistantly from the XDATCAR file. Next, carry out ab\\-initio calculations for these structures. Be very careful to use exactly the same ab\\-initio parameters that were used for training. Otherwise in the worst case, one would compare apples with oranges. The longer the trajectory and the higher the number of chosen structures the better the testing, but of course at a higher computational cost due to the increased number of MD steps and ab\\-initio calculations. ### Error analysis using py4vasp For a comprehensive error analysis, compare ab\\-initio forces, stress, and energies with MLFF predictions. Below is a code snippet utilizing py4vasp to guide your analysis:  ``` from py4vasp import MLFFErrorAnalysis from py4vasp import plot import numpy as np # Compute the errors mlff_error_analysis = MLFFErrorAnalysis.from_files(   dft_data=\"./test_set/DFTdata/*.h5\",   mlff_data=\"./e01_error_analysis/MLFF_data/*.h5\" ) energy_error = mlff_error_analysis.get_energy_error_per_atom() # force_error = mlff_error_analysis.get_force_rmse() # stress_error = mlff_error_analysis.get_stress_rmse() x = np.arange(len(energy_error)) plot(x, energy_error, ylabel=\"Energy error [eV/atom]\", xlabel=\"Configuration Number\")  ``` ### Agreement check on physical properties Assess the agreement between ab\\-initio reference and MLFF by testing specific physical properties. Consider properties like radial distribution functions, relaxed lattice parameters, phonons, elastic constants, relative energies of phases and defect formation energies, to name a few. Application----------- When running force\\-field\\-only calculations (ML\\_MODE\\=RUN) set the ab\\-initio parameters to small values (this is automatically done for some tags, i.e. ENCUT). VASP cannot circumvent the initialization of KS orbitals although they are not used during the molecular dynamics run with machine learning. ### Monitoring MLFF run with blocked averages In each application, it is essential to carefully control the ensemble conditions, such as temperature, pressure, and volume. Achieving a specific condition requires allowing the system sufficient time to relax, typically measured in a minimum number of molecular dynamics steps. Determining the appropriate number of these steps becomes a crucial consideration in the optimization of MD simulations. Ideally, one could look directly at the observable or its mean value and observe that after a given number of steps the observable would not change anymore. Unfortunately, this is not easy in many cases since observables like temperature, pressure, and volume undergo many fluctuations. An alternative way to monitor the convergence of the observables is via statistical methods. For that block averages are a very good method. Explaining the method here would go beyond the scope of this paragraph, but the theory and the implementation of the method are nicely explained in appendix D3 of Ref. [\\[1]](#cite_note-frenkel:book:1996-1). At the moment the user has to implement this post\\-calculation analysis himself, but we strongly advise to do so. The requirement of having properly relaxed structures is further intensified for  advanced molecular\\-dynamics sampling methods. Performance----------- The machine learning code is parallelized using MPI.It is most efficient if scaLAPACK is used since storing (and working on) large matrices, in particular the design matrix, will then be distributed over the MPI ranks. However, a LAPACK\\-only version exists as well. In the latter case, only a few matrices are stored in a distributed fashion, so due to the high memory demand, the LAPACK version is not feasible for \"realistic\" systems. ### Computational efficiency in production runs This section addresses challenges encountered in production runs utilizing the force field (ML\\_MODE\\=*RUN*) with the fast version (requiring prior refitting using ML\\_MODE\\=*refit*). The time required to evaluate a single step of this force field typically matches the duration needed to write results to files. Furthermore, the file\\-writing process operates solely in a serial manner. As the number of computational cores increases, the overall time for force field evaluation decreases, while the file\\-writing time remains constant. Therefore, optimizing performance necessitates adjusting the output frequency. The following flags can be used for that: * ML\\_OUTBLOCK: This tag determines the minimum step interval for the following output file updates (OSZICAR, OUTCAR, XDATCAR, PCDAT, HDF5 and stdout). This tag will possibly change the value of NBLOCK, since NBLOCK is calculated as MAX(ML\\_OUTBLOCK, NBLOCK). For large trajectories this tag prevents unnecessarily large output files by controlling data output frequency.* NBLOCK: This tag controls the frequency of the output of PCDAT and XDATCAR. As written above this tag has at least the same value as ML\\_OUTBLOCK. By setting this tag larger than ML\\_OUTBLOCK the writing of the PCDAT and XDATCAR will be less frequent than the writing of the remaining files.* ML\\_OUTPUT\\_MODE: By setting this tag to 0 the calculation and output of the pair correlation function can be completely turned off. ### Memory consumption To achieve optimal performance, the code utilizes varied array distribution and parallelization strategies. Certain sections are optimized for scaLAPACK with a block\\-cyclic distribution, resulting in linear memory usage reduction with an increasing number of cores. In particular, the design matrix and covariance matrix follow this distributed storage approach. However, in specific code segments, large data arrays are duplicated across MPI ranks for performance gains. Despite the performance benefits, this practice can rapidly increase memory consumption to prohibitive levels (several GB per core), particularly on high\\-core\\-count nodes. To tackle this issue, we have introduced the option to store these arrays in shared memory. With this approach, each node writes these arrays into memory once, enabling all cores on the node to have reading access to them. We strongly recommend activating this feature by adding the following precompiler option to the list of precompiler options: `-Duse_shmem`.  The estimated memory is found in the first section of the ML\\_LOGFILE and contains an **estimation** of memory requirements based on VASP files read on startup. In the simplest case (ML\\_MODE\\=*TRAIN* with no ML\\_AB file present) it depends on the settings in the INCAR and POSCAR file. For example, the expected memory consumption may strongly vary with the number of elements present in the POSCAR file. Various INCAR tags also influence the memory demand. The two most important are ML\\_MB and ML\\_MCONF. Continuation runs (ML\\_MODE\\=*TRAIN* with ML\\_AB file present) and refitting runs (ML\\_MODE\\=*REFIT*), additionally need to store the information from the ML\\_AB, which can be substantial.  A sample output for the memory estimation from the ML\\_LOGFILE looks as follows:  ```* MEMORY INFORMATION *********************************************************************************************************************** Estimated memory consumption for ML force field generation (MB): Persistent allocations for force field       \u00a0:    516.9 ||-- CMAT for basis                           \u00a0:     20.3|-- FMAT for basis                           \u00a0:    458.5|-- DESC for basis                           \u00a0:      2.6|-- DESC product matrix                      \u00a0:      2.3 Persistent allocations for ab initio data    \u00a0:      8.1 ||-- Ab initio data                           \u00a0:      7.8|-- Ab initio data (new)                     \u00a0:      0.3 Temporary allocations for sparsification     \u00a0:    460.9 ||-- SVD matrices                             \u00a0:    460.7 Other temporary allocations                  \u00a0:     15.5 ||-- Descriptors                              \u00a0:      4.7|-- Regression                               \u00a0:      6.5|-- Prediction                               \u00a0:      4.2 Total memory consumption                     \u00a0:   1001.4 ********************************************************************************************************************************************  ``` While the individual items in the above listing are rather technical the most important number is given in the last line: `Total memory consumption` approximates the peak memory usage during this VASP run. However, since not all memory is always allocated at the same time the actual consumption may vary over time. The following part summarizes which kind of parallelization each part employs: |  | scaLAPACK | shared memory || --- | --- | --- || CMAT for basis | x | x || FMAT for basis | x |  || DESC for basis | x | x || DESC product matrix | x |  || Ab initio data |  |  || Ab initio data (new) |  |  || SVD matrices | x |  || Descriptors |  |  || Regression | x |  || Prediction |  |  | The components designated with an *x* for scaLAPACK feature block\\-cyclic distributed arrays, demonstrating nearly perfect scalability with the employed processor count. Increasing the number of processors substantially reduces the required memory for this specific component (It's worth noting that also `Descriptors` and `Prediction` will drop in memory, but only slightly since only minor parts of these are distributed). The parts marked with an *x* for shared memory show a significant decrease in memory usage if the code is compiled for shared memory (precompiler option *use\\_shmem*). | **Mind:** This is only an estimate, the actual memory requirement may be even higher. Moreover, this is only the usage for the machine learning part of VASP which in a training run adds up to the memory of the ab\\-initio part. || --- | | **Mind:** The most memory\\-consuming parts (design matrix, covariance matrix) are well distributed over multiple nodes. Hence if one runs out of memory one should try increasing the number of used nodes until the job fits into the combined memory of all nodes. || --- | ### Reduction of memory consumption in on\\-the\\-fly calculations On\\-the\\-fly learning can be a very memory\\-intensive task since both the machine learning and the ab\\-initio calculations have to share the available memory simultaneously. This is especially true for systems with an increasing number of elements (4 or more) because the number of local reference configurations has to be sampled for each element.  Here's an attempt to minimize the memory footprint during on\\-the\\-fly sampling: * Minimize the ab\\-initio parameters required for converged results. Many times the parameters are way past the value that is required for convergence and hence setting these parameters to high values can put a substantial computational overhead on the calculation. In our experience, the following parameters are most likely to fall victim to oversetting: ENCUT, PREC, and number of k\\-points.* If possible use more computational nodes to expand the overall available memory.* Sample (ML\\_MODE\\=*train*) with a low number of maximum local reference configurations that are just enough to keep the trajectories intact for sampling: ML\\_MB\\=500\\-1000\\.* Following the preceding step, it's probable that the force field is characterized by low accuracy. This situation may lead to a high Bayesian error prediction and an excessive sampling of training structures. A remedy for this is to elevate the Bayesian threshold, ML\\_CTIFOR. To achieve this, first modify the Bayesian error criterion to remain constant throughout the calculation by setting ML\\_ICRITERIA\\=0\\. Subsequently, inspect the values of Bayesian errors in the ML\\_LOGFILE using the command `grep BEEF ML_LOGFILE`. Adjust ML\\_CTIFOR so that only a specified percentage of Bayesian errors surpass this set value.* At this point one has a force field with low accuracy.* To get an accurate force field (re)select the number of local reference configurations. For this set ML\\_MODE\\=*select* and increase the maximum number of local reference configurations ML\\_MB. This step needs much more memory but the entire memory is available for the machine learning part since no ab\\-initio calculations are carried out.* Last as usual do the refit with ML\\_MODE\\=*refit*. ### Descriptor reduction in production runs Since in production runs the computational efficiency is hugely determined by the calculation of descriptors and their derivatives, a reduction of the number of three\\-body descriptors is highly desired. A straightforward reduction of the number of descriptors by reduction of calculational parameters like ML\\_MRB2, ML\\_RCUT2, etc. would lead to a significant loss of accuracy and is hence not a viable option. Instead, we can employ reduced descriptors, descriptor sparsification, or a combination of the two. Both methods will lead to a reduction of accuracy, but up to a given point, the loss of accuracy is small compared to the reduction of the number of descriptors, which leads to a significant speed\\-up of the calculations. Descriptor reduction is applied in the refitting of the force field using ML\\_MODE\\=*refit*, after the training data was collected. That means the INCAR tags need to be specified in only that step. In the following production run (ML\\_MODE\\=*run*) the tags do not need to be specified since they are contained in the ML\\_FF file and used from there.  #### Reduced descriptors The reduced descriptor is selected by specifying ML\\_DESC\\_TYPE\\=1\\. The reduction is done over the number of element types. The standard three\\-body descriptor scales quadratically with the number of elements. The reduced descriptor scales linearly with the number of element types for several parts of the calculations (but not for all). #### Descriptor sparsification Sparsification of the three\\-body descriptors is controlled mainly by the following tags: * ML\\_LSPARSDES: This is the main tag and it switches the descriptor sparsification on and off.* ML\\_RDES\\_SPARSDES: This tag controls the extent, by specifying the fraction of remaining descriptors after sparsification. #### Controlling the descriptor reduction In the following two figures, Pareto fronts (accuracy of forces versus calculation time) for the molecules Ethanol and Azobenzene are shown.The points with increasing accuracy belong to fits with an increasing number of training structures. The following abbreviations are used: * *std*: Standard three\\-body descriptor (default).* *stdSparse*: Standard three\\-body descriptor with sparsification of 50% (ML\\_LSPARSDES\\=*.TRUE.* and ML\\_RDES\\_SPARSDES\\=0\\.5\\).* *lin*: Element\\-reduced descriptor involving a linear scaling of several parts with respect to the element types (ML\\_DESC\\_TYPE\\=1\\).* *linSparse*: Element\\-reduced descriptor with sparsification of 50% (ML\\_DESC\\_TYPE\\=1, ML\\_LSPARSDES\\=*.TRUE.* and ML\\_RDES\\_SPARSDES\\=0\\.5\\). Pareto front for Ethanol: [](File_Pareto_Ethanol.html)  Pareto front for Azobenzene: [](File_Pareto_Azobenzene.html)For both molecules, there is almost no effect on the accuracy with ML\\_RDES\\_SPARSDES\\=0\\.5 (50% sparsification) for the standard descriptor while the calculation time per step is almost halved down. This is a good starting point for sparsification of the standard descriptor. In most of our test cases, we saw similar behavior. However, we recommend the user carefully tests the accuracy loss before using this value blindly, since we also have some exceptions where the accuracy was more noticeably affected by ML\\_RDES\\_SPARSDES\\=0\\.5\\. As can be seen from both plots the calculation time is more significantly reduced by ML\\_DESC\\_TYPE\\=1 than by ML\\_RDES\\_SPARSDES\\=0\\.5\\. However, the accuracy is also slightly worsened. Typically this descriptor results in a 5\\-20% reduced accuracy compared to the standard descriptor.The user should be especially cautious when applying sparsification on top of this descriptor because we noticed quite often (as for Azobenzene) that the accuracy decreases faster with an increased amount of sparsification for the reduced descriptor compared to the standard descriptor. This is to some extent also intuitive, since it is harder to throw away *insignificant* descriptors from an already reduced or *sparsified* pool of descriptors. However, in the end, we advise the user to test each system for itself. First, we have only limited data and experience on how strongly system\\-dependent the Pareto fronts are. Second, the user knows individually for his or her problem how much accuracy can be sacrificed for the sake of computational efficiency. Example------- Sample input for learning of liquid water in the NpT ensemble at 0\\.001 kB using a temperature ramp. INCAR:  ```ENCUT            = 700 #larger cutoffLASPH            = .True.GGA              = RPIVDW             = 11ALGO             = NormalLREAL            = Auto ISYM             = 0 IBRION           = 0MDALGO           = 3ISIF             = 3POTIM            = 1.5TEBEG            = 200TEEND            = 500LANGEVIN_GAMMA   = 10.0 10.0LANGEVIN_GAMMA_L = 3.0PMASS            = 100PSTRESS          = 0.001NSW              = 20000 POMASS           = 8.0 16.0 ML_LMLFF         = .TRUE.ML_MODE          =  TRAIN  ``` * ENCUT: A larger plane\\-wave cut\\-off is used to accommodate possible changes in the lattice parameters because an NpT ensemble is used (ISIF\\=3\\).* POMASS: Since this structure contains Hydrogen, the mass of Hydrogen is increased by a factor of 8 to be able to use larger integration steps POTIM. Without this one possibly needs to use integration steps of POTIM\\<0\\.5 hugely increasing the computation time.* Here GGA\\=RP together with IVDW\\=11 is used which gives a good electron exchange and correlation description for liquid water. ICONST:  ```LA 1 2 0LA 1 3 0LA 2 3 0LR 1 0LR 2 0LR 3 0S  1  0  0  0  0  0 0S  0  1  0  0  0  0 0S  0  0  1  0  0  0 0S  0  0  0  1 -1  0 0S  0  0  0  1  0 -1 0S  0  0  0  0  1 -1 0  ``` * Since a liquid in the NpT ensemble is simulated here, the ICONST file ensures that the lattice parameters are allowed to change to accommodate the pressure, but the length ratio and angles between the lattice parameters remain constant. This prevents unwanted deformations of the cell. POSCAR: **Click to show POSCAR**  ```H2O_liquid   1.00000000000000    12.5163422232076691    0.0000233914035418    0.0000148478021513     0.0000000000114008   12.5162286489880472    0.0000199363611203     0.0000000000209813    0.0000000000005105   12.5176610723470780   H    O   126    63Direct  0.2282617284551465  0.0100328590137529 -0.1126387890656106  0.9746403004006459 -0.2476460083611154 -0.2607428157584675  0.5495157277709571  0.8457364197593650 -0.2477873147502692  0.8285605776747957  1.3957130438711647  0.3236429564827718  0.7772914822330327  0.4827858883979471  0.6904243173615018  0.0577768259920047  0.2223168123471880 -0.7608749959673696  0.9446580715027482  1.1212973211581765  0.3550426042339572  0.8506873790066947  0.1718425528358722  0.6288341575238712  0.6762596340888892  0.6505044169314104  0.2894195166948972  0.5611370443226182 -0.0333524123727857  0.5214208317960167  0.6816550720303126 -0.1211211829857703  0.4073898872723471  0.9980109015831524  0.4469736864199069  0.7701748771760492  0.6678832112330954  0.5234479361650100  0.1656392748166443  0.5040346446185426  0.5390736385800624  0.3470193329922442  0.6410360744431883  1.2034330133853826 -0.5204809500538871  0.5009140032853824  1.0194465602602765  0.0680968735186743  1.1286687923693957  0.4815796673077014  0.1056405447614227  1.3281242572016398 -0.0586744504576348  1.2791126768723411  1.2745979045721432  0.6605001257033906  0.1708686731589134  0.4889175843208496  0.3992133071729653  0.6662361557283188  1.1680688935402925  0.7448174915883062  0.4840737703429457  0.5441535549963540  1.2562238170486451 -0.1933215921435651  0.7539782822013665  0.4393165162255908 -0.1111210880770900  0.7158370742172643  0.2516648581738293  0.0129481804279206  0.2713582658190841  0.2279864583332417 -0.2165119651431964  0.9024539921023629 -0.1184662408708287  0.6213800486657953  0.4615161508482398  0.2475213172787736  0.4504737358928211  1.0118559400607643  0.7424282505541469  0.0746984790656740  0.2903967612053814  0.3755361842352651  0.5760967580335238  0.3231287130417146  0.7657698148287657 -0.4355073700974863  1.0376988097955901  0.0758439375796752 -0.0755636247212518  0.3490021766854268 -0.0144512406004137 -0.1286563387493205  0.9105647459905236  0.7180137269788829 -0.1630338422998813  0.6217984736501840  0.7636375746785418 -0.2985814512057716  0.7745581203120666  1.3708044347688073  0.2161898767275624  0.6604329281507487  0.4588369178206191  0.6638505715678867  0.9367092142161492  0.2566478031322914 -0.7657152701827817  0.9210696992439242  1.0100086011945200  0.3831186344742445  0.7198461947247682  0.1832700676815498  0.6289634217232680  0.5794490968641994  0.6650526418110994  0.2084878611072036  0.4451295011889302  0.0227193097626150  0.5285299460037345  0.6493078638087474 -0.2119508709082261  0.4952750816523580  0.9786031188935814  0.5691499073939285  0.7498421879775161  0.7284271721290199  0.4873101999963645  0.0606006569966631  0.4910977185777734  0.5607404559463554  0.4688446654579101  0.5685724756690831  1.1303057766954432 -0.4520626434287254  0.5834889098964630  0.9606882347596553  0.0036536368035990  1.0401204359334022  0.5623696717124362  0.0540990885930118  1.2824173065014235  0.0145062237175715  1.3666813391539134  0.3486617682267537 -0.2934149709168444  0.0822130144717180  0.5730104678470570  0.3084776512554136  0.6220956625895938  0.0696111366994306  0.7429990748207962  0.4037397615014190  0.5502677722150517  1.2295680823859727 -0.0773553830031266  0.6629391487219132  0.5328361705119534 -0.1150519950062741  0.6250848388543612  0.3083123187101773  0.0765665590910336  0.3662802395551557  0.2702906914452067 -0.1383165019423200  0.9736705556543800 -0.1799052283389148  0.5343666577034214  0.4295248327300012  0.3704736742659817  0.4332641348308674  0.8980973959825628  0.6990554008415506  0.0343927673672955  0.2875819013957733  0.4057639685103899 -0.3043930746820226  0.2339822436285078  0.7745846329456394  0.6458551118383669  1.0595055035190402 -0.0564894402119362 -0.0902725095487327  0.8934974071042586  0.3290512561302191  0.8603972804418396  0.5553026810346389  0.6918749861685528  0.8648052870098396  0.7595162123757241  0.2391418457892084  0.3402576351144293  0.1473261899861980  0.3709222233120330  0.4682213790034302  0.1421840618221771  0.3140746572683427 -0.1121762131537217  1.3389241568069978  0.3988616347426453  0.1635703018210843 -0.2448915061544370  0.7563953018862059 -0.0736150977487566  0.7590706624915531  0.4910146399954628  0.4684780730777085  0.7950571409085634  0.7192143646959017  0.5985905369710599  0.1316279824003455  1.0999687910648197  0.7533188747497124  0.1904139474335156  0.7791943520426338  0.0571106523349340  1.2220229066248534  0.3192108772536086  0.2369051680927172  0.3612775881033622  0.0855989478292645  0.1403208309917672 -0.1361272699805649  0.6820997653177969  0.2354821840318570  0.4087521084198726  0.5912825002582747  0.6358439098196149  0.1239762404674222  0.7546282143520640 -0.2004037475678275  0.3254524437469295  0.5629691201597067  0.3724966107408161  0.4753895829795802  1.0167551557396182  0.7120469261102015  0.2608638376650217  1.0575489302906138  0.5689964057513199  0.1643499778763993  0.9878520821198175  0.2274680280884254  0.5044272836232667 -0.1889898057206633  1.0969173862764161  1.0108484544264800  0.2499932639019371 -0.0323289029244656  1.4604847395188030 -0.1857921072604787  0.3648781664672482 -0.0676389676130162 -0.0295362893506241  0.7871165868504495  0.4846115199200384  0.2254773218591808  0.1655080485768635  0.7546930244801831  0.9283849256193616  0.8541595795735338  0.9706434056979190  1.1154826414004460  0.5267461552592998 -0.0861615702697154 -0.1809840616227028 -0.6553434728259054  0.8442013982186719 -0.0307048052283226  0.1425354846866949  0.6887583721043200  1.0654555145745237  0.2683125737537906  1.0027728188337521  0.5023071178777798 -0.4225836976328659  1.2932985504962016  1.5692646782719462  0.9368592413035413  0.4716460351076925  0.6993549392273799  0.6601847017954563  0.2065050455598290  0.8340729505249687 -0.1549365584796285  0.7134717637166987  0.6306375489985552  0.5979355450208014  0.1305819547597963  1.1628983978276421  0.6489352069792226  0.1272197155625575  0.8779790277321273  0.1016609192978390  1.2490179100185559  0.1997381130828568  0.2661804901290689  1.3538940004316671  0.0865346934520785  0.0162268012094167 -0.1648144254795892  0.6328837747686877  0.3517458960703262  1.3576963330025944 -0.2535471527532498  0.3451642885788545 -0.1512707063199035  0.0447723975378184  0.7370562480777335  0.2082920817694131  0.6238194842808575  0.3627405505637077  0.4818735663404834  0.0797305025898344  0.8149171190132681  0.2714920258235731  0.9437115667773756  0.5398585008814204  0.0598987571605861  1.0109519535694200  0.1622926257298793  0.5118223005328099 -0.2906673876063635  1.0219508170746381  0.9862800303912808  0.1828001523416312  0.0677466130856736  1.0595449212229817  0.5431076873367398 -0.5303300708777712  1.2934388789888798  0.6286357417906868 -0.1682875581053126  0.4618116975337169  0.2958921133995223  0.2670334121905841  0.7539636581184406  0.9360985551615451 -0.0248108921725196  0.9998082474973725  1.2364748213827927  0.5458537302387204  0.0084172701408917 -0.0989295133906621 -0.6906681930981559  0.9033157610523457 -0.1303930279825006  0.1228072425414686  0.6604461112340703  0.9892487041136045  0.1825505778817879  0.7885276375808787  0.6294686108635517 -0.0737926736153585  0.8840546243663174  0.5053739463625377  0.4526376410385395  0.8074749932462770  0.2947711469591280  0.7787234411725377  0.4632367138215856  0.6097289940035490 -0.1145492866143238  0.7775247539743841  0.1357560792893380  0.4055163611357055  0.2117515661833950  0.2832304177268588  0.4122050502626490  0.0768107057290735  0.4027427851525467 -0.0515166562421230  1.2669405505626230  0.4880120983162565  0.2202021018146102  0.2919481531025963 -0.0097036832216508 -0.0729957055081244  0.9840898695695925  0.7046088238612841 -0.1980300785209053  0.5582639462588442  0.7673812911725254 -0.2587733472825737  0.8220678952661906  1.3361683524558097  0.2699860947274584  0.7257118638315225  0.4999486906307656  0.6412374880809832 -0.0159466690459744  0.1935938619023044 -0.7768095097490648  0.9155392077434708  1.0805930191162569  0.4138690591165022  0.7862174758070717  0.1816706702550143  0.6732485622988889  0.6132430910865457  0.6183045290387048  0.2587122784691759  0.5240798045171384  0.0270658373485661  0.5490772798003927  0.6227258931836714 -0.1513468939644967  0.4514026249947363  0.9638867643770986  0.4954513053854325  0.7212510085139069  0.7159100053950270  0.4678155943640417  0.1349439087134111  0.4582333315581760  0.5168500155232567  0.4094860848574138  0.6020128307710225  1.2064430441579375 -0.4506555458643959  0.5521951499401644  0.9590467759911693  0.0741168885795418  1.0781674762106039  0.4954947302196762  0.0441857869962515  1.2877834938552375  0.0081337644237061  1.2888612376304034  1.2732518381606885 -0.3103063836930492  0.0984742851109190  0.5595086990259246  0.3696506726448117  0.6743217671307982  0.1240887034225702  0.6960193789405823  0.4337932939025890  0.5086138696669937  1.2114646205434219 -0.1402693575758740  0.7313300345574206  0.5088192316865796 -0.0848414107423346  0.6392500541546888  0.2452966478859945  0.0290217369836307  0.2906220813433669  0.2834501467738138 -0.1612157326655933  0.9265368908511590 -0.1886857109185944  0.5950530730285820  0.4191322585983637  0.2968514680208339  0.4065358381730697  0.9503223312345728  0.6924078287564821  0.0976010227803059  0.3171226540194806  0.4277726129695098  0.6291827895026040  0.2523597102929802  0.7992029127084535 -0.4251410697001895  1.0542894643082081  0.0098095875712209 -0.1254405527744111 -0.1850276732646079  0.7064002231521372 -0.0809385398102708  0.8146436675316787  0.5091462597700946  0.4152356140927696  0.8203699138320668  0.3369968354028824  0.8455921310438892  0.5350509729728494  0.6295527668603674  0.9102304780657455  0.7193764908855955  0.1838347476185205  0.3819141293957220  0.1910314352006382  0.3094472630165150  0.4823838977521944  0.0687276874475614  0.3407534564140682 -0.0961793949793184  1.2668203814128003  0.4259424135404398  0.1731136054217358  0.4280856307534187  0.6584589779898570  0.6012619513268567  1.1963611411889725  0.7804022094739607 -0.2110274995492418  0.7214250257605557  0.7065604538172952  0.5794991635695482  0.1776849231487917  1.1234852797096138  0.6937893559514705  0.1285406853584958  0.8283735895779946  0.0360212378784548  1.1982000164502744  0.2527276897017764  0.2755163953762200  0.3971884946158640  0.1135585073114126  0.0762033607013268 -0.1677109438487009  0.6976010251448760  0.3070009760429893  1.3843291659064216 -0.1806544740790267  0.3487638347163066 -0.1370877275115541 -0.0294965108434674  0.7526972827056088  0.2742057504147322  0.5976400628879622  0.3238891214955297  0.4681381611246405  1.0080818685930206  0.7875962423618043  0.2988391245755818  1.0128379546679014  0.5215141172374251  0.0979325070909129  0.9559351747734792  0.2036472418484847  0.4871098095650768 -0.2661593993271190  1.0958159235212488  0.9840996652256983  0.1761359392656111 -0.0086227132193279  1.0181722221064600  0.4832974111083591 -0.4993793874483681  1.3336737594231565  0.5733445036683216  0.8701294276086065  0.4805509314794579  0.2981571227457179  0.1930037183242462  0.7146125697156993  0.8998617569525493  0.9145452976881076  0.9916627840023351  1.1683363103812550  0.5804316669886708 -0.0389136332191330 -0.1241670083541440 -0.6326131437048044  0.8956869974284227 -0.0586980011006573  0.0867714766274296  0.7097227556462733  0.9934862114531017  0.2391419679113634  ``` Related articles----------------  Machine\\-learned force fields,  Ionic minimization, Molecular dynamics, Machine learning force field calculations: Basics"}
{"file_name": "ML_MRB2.md", "content": "ML\\_MRB2= \\[integer]   Default: **ML\\_MRB2** \\= 8nDescription: This tag sets the number   N  R  l {\\\\displaystyle N\\_{\\\\text{R}}^{l}}  (for all   l {\\\\displaystyle l} ) of radial basis functions used to expand the angular descriptor within the machine learning force field method.   --- The angular descriptor is constructed from  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\= \u222c d  r  ^  d  s  ^  \u03b4  (  r  ^  \u22c5  s  ^  \u2212  c o s  \u03b8  )  \u2211  j \\= 1  N  a  \u2211  k \u2260 j  N  a  \u03c1  i k  (  r  r  ^  )  \u03c1  i j  (  s  s  ^  )  , where  \u03c1  i j  (  r  )  \\=  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  ) {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\iint d{\\\\hat {\\\\mathbf {r} }}d{\\\\hat {\\\\mathbf {s} }}\\\\delta \\\\left({\\\\hat {\\\\mathbf {r} }}\\\\cdot {\\\\hat {\\\\mathbf {s} }}\\-\\\\mathrm {cos} \\\\theta \\\\right)\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{k\\\eq j}^{N\\_{a}}\\\\rho \\_{ik}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)\\\\rho \\_{ij}\\\\left(s{\\\\hat {\\\\mathbf {s} }}\\\\right),\\\\quad {\\\\text{where}}\\\\quad \\\\rho \\_{ij}\\\\left(\\\\mathbf {r} \\\\right)\\=f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  and  g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is an approximation of the delta function. In practice, the continuous function above is transformed into a discrete set of numbers   p  n \u03bd l  i {\\\\displaystyle p\\_{n\\\u l}^{i}}  by expanding it into a set of radial basis functions   \u03c7  n l  ( r ) {\\\\displaystyle \\\\chi \\_{nl}(r)}  and Legendre polynomials   P  l  (  c o s  \u03b8  ) {\\\\displaystyle P\\_{l}\\\\left(\\\\mathrm {cos} \\\\theta \\\\right)}  (see this section for more details):  \u03c1  i  ( 3 )  (  r , s , \u03b8  )  \\=  \u2211  l \\= 1  L  m a x  \u2211  n \\= 1  N  R  l  \u2211  \u03bd \\= 1  N  R  l  2 l \\+ 1  2  p  n \u03bd l  i  \u03c7  n l  ( r )  \u03c7  \u03bd l  ( s )  P  l  (  c o s  \u03b8  )  . {\\\\displaystyle \\\\rho \\_{i}^{(3\\)}\\\\left(r,s,\\\\theta \\\\right)\\=\\\\sum \\\\limits \\_{l\\=1}^{L\\_{\\\\mathrm {max} }}\\\\sum \\\\limits \\_{n\\=1}^{N\\_{\\\\mathrm {R} }^{l}}\\\\sum \\\\limits \\_{\\\u \\=1}^{N\\_{\\\\mathrm {R} }^{l}}{\\\\sqrt {\\\\frac {2l\\+1}{2}}}p\\_{n\\\u l}^{i}\\\\chi \\_{nl}\\\\left(r\\\\right)\\\\chi \\_{\\\u l}\\\\left(s\\\\right)P\\_{l}\\\\left(\\\\mathrm {cos} \\\\theta \\\\right).} The tag ML\\_MRB2 sets the number   N  R  l {\\\\displaystyle N\\_{\\\\text{R}}^{l}}  of radial basis functions to use in this expansion. The same number is used for all   l {\\\\displaystyle l}  . | **Mind:** The number of angular descriptor expansion coefficients      p  n \u03bd l   i     {\\\\displaystyle p\\_{n\\\u l}^{i}}  p_{{n\u l}}^{{i}} scales **quadratically** with      N  R   l     {\\\\displaystyle N\\_{\\\\text{R}}^{l}}  }^{l}} set by this tag. It also depends on ML\\_LMAX2 and the number of elements. || --- |"}
{"file_name": "CH_LSPEC.md", "content": "CH\\_LSPEC= \\[logical]   Default: **CH\\_LSPEC** \\= .FALSE.nDescription: This flag controls whether the imaginary part of the dielectric function for a selected core electron is calculated and written to the OUTCAR file or not.   --- How to calculate XAS spectra from core\\-hole calculations is explained here: SCH calculations. This feature is only available from VASP version 6\\.0 or higher. The broadening type of the spectrum is controlled by ISMEAR and the broadening in eV is set by CH\\_SIGMA. We recommend to use a very small Gaussian broadening ISMEAR\\=0 and CH\\_SIGMA  \u2264 {\\\\displaystyle \\\\leq } 0\\.001 in the calculations and broaden the spectrum in post processing. If another type of ISMEAR is required for the electronic calculation, one can run that in a first step and use the converged WAVECAR from that step together with ALGO\\=*None* and ISMEAR\\=0 in a second step to obtain the spectrum.   | **Warning:** For XAS calculations it is strongly recommended to use the available GW PAW potentials for the POTCAR files, since many standard potentials don't have projectors with quantum numbers 2 or larger and the GW potentials are more exact for excited states than the standard potentials. || --- |"}
{"file_name": "Constrained-random-phase_approximation.md", "content": "The **constrained random\\-phase approximation** (CRPA) is a method that allows the calculation of the effective interaction parameter   U {\\\\displaystyle U}  ,  J {\\\\displaystyle J} , and   J \u2032 {\\\\displaystyle J'}  for model Hamiltonians. The main idea is to neglect the screening effects of specific target states in the screened Coulomb interaction   W {\\\\displaystyle W}  of the GW method. The resulting partially screened Coulomb interaction is evaluated in a localized basis that spans the target space and is described by the model Hamiltonian. The target space is usually low\\-dimensional and therefore allows for the application of a higher\\-level theory, such as dynamical\\-mean\\-field theory (DMFT). More information about CRPA is found on the following page: Constrained\u2013random\\-phase\u2013approximation\\_formalism Pages in category \"Constrained\\-random\\-phase approximation\"------------------------------------------------------------ The following 7 pages are in this category, out of 7 total. ### C * Constrained\u2013random\\-phase\u2013approximation formalism* CRPA of SrVO3### L * LDISENTANGLED* LWEIGHTED### N * NCRPA BANDS* NTARGET STATES### V * VCUTOFF"}
{"file_name": "Timepropagation.md", "content": "Caution: All features presented in this tag are only available from VASP.6 or higher! Description: ALGO \\= TIMEEV calculates the frequency\\-dependent dielectric function using the time evolution algorithm. A standard DFT ground state calculationshould be performed before selecting ALGO \\= TIMEEV.  --- The time evolution algorithm applies a short Dirac delta pulse of electric field and then follows the evolution of the dipole moments. The Green\\-Kubo relation allows calculating the frequency\\-dependent dielectric response function from the time evolution of the dipole moments [\\[1]](#cite_note-kubo:jpsj:1957-1). Details of the implementation are explained in Ref. [\\[2]](#cite_note-sander:prb:15-2). The time evolution algorithm in VASP uses relatively large time steps by projecting, after each time step, onto a specific number of occupied and unoccupied bands. The number of occupied and unoccupied bands are controlled by the tags NBANDSO, NBANDSV, and OMEGAMAX in the same way as for Casida and BSE calculations. This has the advantage that the time evolution results are strictly compatible to the results of the BSE calculations. The disadvantage is that a sufficient number of unoccupied orbitals needs to be calculated in the preceding ground state calculation. Note, however, that unoccupied orbitals are not propagated, which saves computational time. By default, the time propagation code includes the Hartree and local\\-field effects (LHARTREE\\=.TRUE. and LFXC\\=.TRUE.). Results in the independent particle approximation can be calculated by setting LHARTREE\\=.FALSE. and LFXC\\=.FALSE. The two other combinations of these settings (LHARTREE\\=.TRUE. and LFXC\\=.FALSE., or LHARTREE\\=.FALSE. and LFXC\\=.TRUE.) are currently not supported. The number of time steps is chosen usually automatically by VASP. It is inversely proportional to the value of CSHIFT. That is, a large CSHIFT requires less time steps (but yields a more strongly broadened spectrum), whereas a small shift CSHIFT requires more steps. Typically, values of CSHIFT \\= 0\\.1 result in physically meaningful spectra. Alternatively, the number of time steps can be set directly by the tag NELM. In this case, the user\\-defined number of steps needs to be large than 100\\. Otherwise, the value of NELM will be discarded, and the actual number of time steps will be determined by the tag CSHIFT.  Finally, the tag IEPSILON controls the Cartesian direction, along which the Dirac delta pulse is applied. IEPSILON \\= 4 (default) performs three independent calculations for an electric field in x, y and z direction, and thus is the most expensive. VASP provides a number of other routines to calculate the frequency\\-dependent dielectric function. The simplest approach uses the independent particle approximation (LOPTICS \\= .TRUE). Furthermore, one can use ALGO \\= TDHF (Casida/BSE calculations), ALGO \\= GW (GW calculations). For standard DFT, the time propagation algorithm (ALGO \\= TIMEEV) is usually the fastest, whereas for hybrid functionals ALGO \\= TDHF is usually faster. Results of time propagation are strictly identical to ALGO \\= TDHF; ANTIRES \\= 2, if the tags CSHIFT, OMEGAMAX, NBANDSV, and NBANDSO are chosen identical (ANTIRES \\= 2 is required, since time propagation does not apply the Tamm\\-Dancoff approximation).  Example------- A typical calculation requires two steps. First, a ground state calculation:  ```SYSTEM = SiNBANDS = 12\u00a0! even 8 bands suffice for SiISMEAR = 0\u00a0; SIGMA = 0.05ALGO = NLOPTICS = .TRUE.KPAR = 4    \u00a0! assuming we run on 4 cores, this will be the fastest  ```   Second, the actual time propagation:   ```SYSTEM = SiNBANDS = 12 \u00a0! even 8 bands suffice for SiISMEAR = 0\u00a0; SIGMA = 0.05ALGO = TIMEEVIEPSILON = 1\u00a0! cubic system, so response in x direction sufficesNBANDSO = 4 \u00a0; NBANDSV = 8 \u00a0;  CSHIFT = 0.1KPAR = 4    \u00a0! assuming we run on 4 cores, this will be the fastest  ``` In this case, OMEGAMAX is set automatically to the maximal transition energy (about 25 eV in this example). Reducing the number of considered transitions, and thus reducing OMEGAMAX will increase both the duration of time steps and their number. For standard DFT calculations, the time propagation code is so fast that very dense k\\-point grids can often be used.  Related Tags and Sections------------------------- ALGO,CSHIFT,LHARTREE,LFXC,NBANDSV,NBANDSO,OMEGAMAX see also BSE calculations"}
{"file_name": "SMEARINGS.md", "content": "SMEARINGS= \\[integer array]   Default: **SMEARINGS** \\= not setnDescription: SMEARINGS defines the smearing parameters for ISMEAR\\=*\\-3* in the calculation of the partial occupancies.  --- ISMEAR\\=*\\-3* performs a loop over smearing\\-parameters supplied in the INCAR file. In this case a tag  ```SMEARINGS = ismear1 sigma1  ismear2 sigma2  ...  ``` must be present in the INCAR file, supplying different smearing parameters. IBRION has to be set to \\-1 and NSW to the number of supplied values ismear  i {\\\\displaystyle i} ) . The first loop is done using the tetrahedron method with Bl\u00f6chl corrections."}
{"file_name": "Available_PAW_potentials.md", "content": "Pseudopotentials are stored in POTCAR files and are available for all elements in the periodic table from the VASP Portal. The available pseudopotentials are mostly so\\-called PAW potentials that are based on the projector\\-augmented\\-wave (PAW) method[\\[1]](#cite_note-bloechl:prb:94b-1). The PAW potentials have been created following the recipes discussed in Ref. [\\[2]](#cite_note-kresse:prb:99-2). Cite Ref. [\\[1]](#cite_note-bloechl:prb:94b-1) and Ref. [\\[2]](#cite_note-kresse:prb:99-2) when using any PAW potential. Also see:  * Simple instructions to set up a POTCAR file with the correct format: Prepare a POTCAR. * Guide on **recommendations** and checks to decide which pseudopotential flavor to use for a specific calculation: Choosing pseudopotentials. Available pseudopotential sets------------------------------ The tables list all available pseudopotentials split between  * *standard potentials*: these are intended for treating mostly occupied states and are appropriate for calculations within density\\-functional theory, and * *GW potentials*: these are optimized for treating unoccupied states far above the Fermi level and have an \\_GW suffix. GW potentials are recommended for computing optical properties and calculations within many\\-body perturbation theory. The tables comprise the name of the potential, number of valence electrons, valence electron configuration for the reference system, and the cutoff energy (ENMAX).  The **bold\\-highlighted entries are the default recommendations**, but depending on the specific calculation, it might be preferable or necessary to choose a different pseudopotential.  | **Important:** Refer to the explanation of different variants to understand the suffix in the name of the potential. || --- | ### potpaw.64 (latest, recommended) Updated potentials with respect to the potpaw.54 set: * Li\\_GW, He\\_GW: improved accuracy* C\\_GW\\_new, N\\_GW\\_new, O\\_GW\\_new, F\\_GW\\_new: more balanced overall* C\\_h, N\\_h O\\_h, F\\_h: improved accuracy for HF calculation (errors below 0\\.5 kcal)* N\\_s\\_GW: improved accuracy* Rn Rn\\_d\\_GW, Rn\\_sv\\_GW: mass updated to 220* Ba\\_sv\\_GW, Cs\\_sv, Cs\\_sv\\_GW, Cu\\_sv\\_GW, Hf\\_sv\\_GW: improved accuracy/ ghost\\-state issues* Dy, Er, Eu, Gd, Ho, Nd, Pm, Pr, Sm, Tb, Tm, Yb: lanthanides updated Newly added potentials: * H\\_GW\\_new, B\\_GW\\_new, B\\_h\\_GW, C\\_s\\_GW* Dy\\_h, Er\\_h, Eu\\_h, Gd\\_h, Ho\\_h, Nd\\_h, Pm\\_h, Pr\\_h, Sm\\_h, Tb\\_h, Tm\\_h, Yb\\_h #### Standard potentials Standard PAW potentials are appropriate for calculations that mainly involve occupied states, e.g., calculations within density\\-functional theory *without* computing optical properties. | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **477\\.779** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **498\\.387** || **Be** | **2** | **2*s*1\\.9999 2*p*0\\.001** | **247\\.951** || Be\\_sv | 4 | 1*s*2 2*s*1\\.9999 2*p*0\\.001 | 308\\.45 || **B** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.251 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 742\\.464 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.704 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 755\\.833 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.424 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 765\\.442 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.604 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.351 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.647 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.403** || Na | 1 | 3*s*1 | 101\\.956 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.494** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 644\\.874 || **Mg** | **2** | **3*s*1\\.999 3*p*0\\.001** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.538 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 473\\.54 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.957** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.704** || **P** | **5** | **3*s*2 3*p*3** | **255\\.155** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.903 || **S** | **6** | **3*s*2 3*p*4** | **258\\.602** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.84 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.25** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.272 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.101** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.596 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.279** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.552 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.727** || Sc | 3 | 3*d*2 4*s*1 | 155\\.006 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.7** || Ti | 4 | 3*d*3 4*s*1 | 178\\.52 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.435 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.719** || V | 5 | 3*d*4 4*s*1 | 192\\.706 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.722 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.722** || Cr | 6 | 3*d*5 4*s*1 | 227\\.202 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.753** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.443 || Mn | 7 | 3*d*6 4*s*1 | 269\\.944 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.944** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.112 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.969** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.303 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.513 || **Co** | **9** | **3*d*8 4*s*1** | **268\\.056** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 270\\.871 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.343 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.618** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.726 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.521** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.406 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.847** || Ga | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.829** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.762 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.392** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 122\\.21 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.215** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **226\\.327** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.554** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **230\\.037** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 207\\.263 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.304** || Mo | 6 | 4*d*5 5*s*1 | 224\\.535 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.535 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **236\\.514** || Tc | 7 | 4*d*6 5*s*1 | 228\\.636 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.345** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.479 || Ru | 8 | 4*d*7 5*s*1 | 213\\.221 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **239\\.907** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.687 || Rh | 9 | 4*d*8 5*s*1 | 228\\.926 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.321** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.832** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.832 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.752** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.68 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.265** || In | 3 | 5*s*2 5*p*1 | 96\\.062 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.196** || Sn | 4 | 5*s*2 5*p*2 | 103\\.318 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.107** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.301** || **Te** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.021** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.727** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.001 6*s*1\\.999** | **186\\.981** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.044** || La\\_s | 9 | 4*f*0\\.0001 5*p*6 5*d*0\\.9999 6*s*2 | 136\\.594 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.088** || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.927 || Hf | 4 | 5*d*3 6*s*1 | 220\\.431 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.431** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.414 || Ta | 5 | 5*d*4 6*s*1 | 223\\.759 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.759** || W | 6 | 5*d*5 6*s*1 | 223\\.126 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.126** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.25** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.25 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.023** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.023 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.837** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.228** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.53 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.869** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.142** || Tl | 3 | 6*s*2 6*p*1 | 90\\.239 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.001** || Pb | 4 | 6*s*2 6*p*2 | 98\\.039 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.817** || Bi | 5 | 6*s*2 6*p*3 | 105\\.071 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** || Po | 6 | 6*s*2 6*p*4 | 159\\.801 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.606** || **At** | **7** | **6*s*2 6*p*5** | **161\\.481** || **Rn** | **8** | **6*s*2 6*p*6** | **151\\.461** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.489** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.216** || **Ac** | **11** | **5*f*0\\.0001 6*s*2 6*p*6 6*d*0\\.9999 7*s*2** | **170\\.048** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.389** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.575 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.31** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.642 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.603** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.218 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.349** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 213\\.932 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.436** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 211\\.493 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.953** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **258\\.027** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || He\\_AE | 2 | 1*s*2 | 2135\\.871 || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 741\\.689 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.626 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 337\\.25 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Pr\\_h | 13 | 4*f*2\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 400\\.742 || Nd | 14 | 4*f*3\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 338\\.34 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Nd\\_h | 14 | 4*f*3\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 402\\.016 || Pm | 15 | 4*f*4\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 340\\.358 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Pm\\_h | 15 | 4*f*4\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 404\\.406 || Sm | 16 | 4*f*5\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 341\\.177 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Sm\\_h | 16 | 4*f*5\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.382 || Eu | 17 | 4*f*6\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.705 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Eu\\_h | 17 | 4*f*6\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 403\\.212 || Gd | 18 | 4*f*7\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 342\\.859 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Gd\\_h | 18 | 4*f*7\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 407\\.403 || Tb | 19 | 4*f*8\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 340\\.855 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Tb\\_h | 19 | 4*f*8\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.043 || Dy | 20 | 4*f*9\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 341\\.547 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Dy\\_h | 20 | 4*f*9\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 405\\.886 || Ho | 21 | 4*f*10\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 343\\.845 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Ho\\_h | 21 | 4*f*10\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 415\\.91 || Er | 22 | 4*f*11\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 346\\.295 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Er\\_h | 22 | 4*f*11\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 429\\.583 || Tm | 23 | 4*f*12\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.206 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Tm\\_h | 23 | 4*f*12\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 419\\.812 || Yb | 24 | 4*f*13\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 344\\.312 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Yb\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 188\\.359 || Yb\\_h | 24 | 4*f*13\\.5 5*s*2 5*p*6 5*d*0\\.5 6*s*2 | 409\\.285 || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.057** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || **Rn** | **8** | **6*s*2 6*p*6** | **151\\.497** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** || Cf | 20 | 5*f*8 6*s*2 6*p*6 6*d*2 7*s*2 | 414\\.614 | #### GW potentials GW potentials are recommended for calculations involving unoccupied states, e.g., computing optical properties or using many\\-body perturbation theory. | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **404\\.806** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.253 || Li\\_GW | 1 | 2*s*1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.253** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.951 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **536\\.216** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_GW\\_new | 3 | 2*s*2 2*p*1 | 318\\.762 || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 433\\.894 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 742\\.464 || C\\_s\\_GW | 4 | 2*s*2 2*p*2 | 304\\.668 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.681** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 452\\.165 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.833 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 312\\.431 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.315** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 466\\.114 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.442 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.366 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.335** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 479\\.919 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 847\\.822 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **431\\.952** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 317\\.594 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.86** || Mg\\_GW | 2 | 3*s*2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.538 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **430\\.099** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.957** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.007 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.704** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 546\\.548 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.155** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.602** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.25** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.518** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.606** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.209** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.598** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.48** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.093** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.753** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.537 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.488** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.044 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.727** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.447 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.407** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.352 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.485** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.032 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **466\\.991** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.312 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.745** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.723** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.614** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.514 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.602** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.258 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.224** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.88 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.563** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **220\\.92** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.532** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.94** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.437** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.857** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.65** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **350\\.798** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **347\\.881** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.321 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **350\\.989** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.832 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **355\\.88** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.752 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.226** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 253\\.99 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.653** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.582** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.636 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.086** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.704 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.147** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.498 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **175\\.144** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.686 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.712** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.757 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.528** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.581 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.012** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.484** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.728** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.649** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **308\\.829** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **285\\.798** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **316\\.943** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **316\\.85** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.628** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.708** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.657 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.536** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.263 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.52** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **311\\.949** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.001** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.502 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.793** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.138 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.628 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.89** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.502 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.666** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.653 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.303** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.597 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **267\\.397** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 329\\.841 | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_GW\\_new | 1 | 1*s*1 | 536\\.615 || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_GW\\_new | 3 | 2*s*2 2*p*1 | 318\\.614 || B\\_h\\_GW | 3 | 2*s*2 2*p*1 | 731\\.373 || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 433\\.983 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 741\\.689 || C\\_s\\_GW | 4 | 2*s*2 2*p*2 | 304\\.843 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 452\\.633 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 312\\.986 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 466\\.797 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 480\\.281 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 848\\.626 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **432\\.275** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.853** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.599** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.961** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.774** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.321** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.932** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.627** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.837** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.491** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.645** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **467\\.331** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.665** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.602 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.434** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.313 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.344 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.692 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.232** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.758** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.364** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.872** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.914** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **351\\.044** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **348\\.106** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **351\\.206** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **356\\.093** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.43** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.806** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.771 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.778 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.491 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.618 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.674 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.476 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*1 6*s*1** | **267\\.02** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.688** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **309\\.037** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.658** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **312\\.028** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.053** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.583 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.809** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.193 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.876** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.513 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.847** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.618 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.251** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.529 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **267\\.347** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 329\\.758 | ### potpaw.54 LDA and PBE PAW datasets version 54, including the GW variety (original release 2015\\-09\\-04\\).When read by VASP these files yield identical results as the files distributed before. The POTCAR files, however, differ from previous versions: 1. the TITLE string is set to the directory in which the POTCAR file reside for: O\\_GW\\_new, Ge\\_GW, G\\_GW\\_new, Cd\\_GW, Br\\_GW, B\\_GW.2. HASH key added to all POTCAR files. #### Standard potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **477\\.779** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **498\\.387** || **Be** | **2** | **2*s*1\\.9999 2*p*0\\.001** | **247\\.951** || Be\\_sv | 4 | 1*s*2 2*s*1\\.9999 2*p*0\\.001 | 308\\.45 || **B** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.251 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.704 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.424 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.604 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.351 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.647 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.403** || Na | 1 | 3*s*1 | 101\\.956 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.494** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 644\\.874 || **Mg** | **2** | **3*s*1\\.999 3*p*0\\.001** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.538 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 473\\.54 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.957** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.704** || **P** | **5** | **3*s*2 3*p*3** | **255\\.155** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.903 || **S** | **6** | **3*s*2 3*p*4** | **258\\.602** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.84 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.25** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.272 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.101** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.596 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.279** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.552 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.727** || Sc | 3 | 3*d*2 4*s*1 | 155\\.006 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.7** || Ti | 4 | 3*d*3 4*s*1 | 178\\.52 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.435 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.719** || V | 5 | 3*d*4 4*s*1 | 192\\.706 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.722 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.722** || Cr | 6 | 3*d*5 4*s*1 | 227\\.202 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.753** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.443 || Mn | 7 | 3*d*6 4*s*1 | 269\\.944 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.944** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.112 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.969** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.303 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.513 || **Co** | **9** | **3*d*8 4*s*1** | **268\\.056** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 270\\.871 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.343 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.618** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.726 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.521** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.406 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.847** || Ga | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.829** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.762 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.392** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 122\\.21 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.215** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **226\\.327** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.554** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **230\\.037** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 207\\.263 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.304** || Mo | 6 | 4*d*5 5*s*1 | 224\\.535 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.535 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **236\\.514** || Tc | 7 | 4*d*6 5*s*1 | 228\\.636 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.345** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.479 || Ru | 8 | 4*d*7 5*s*1 | 213\\.221 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **239\\.907** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.687 || Rh | 9 | 4*d*8 5*s*1 | 228\\.926 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.321** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.832** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.832 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.752** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.68 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.265** || In | 3 | 5*s*2 5*p*1 | 96\\.062 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.196** || Sn | 4 | 5*s*2 5*p*2 | 103\\.318 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.107** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.301** || **Te** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.021** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.727** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.001 6*s*1\\.999** | **186\\.981** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.044** || La\\_s | 9 | 4*f*0\\.0001 5*p*6 5*d*0\\.9999 6*s*2 | 136\\.594 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.088** || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.927 || Hf | 4 | 5*d*3 6*s*1 | 220\\.431 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.431** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.414 || Ta | 5 | 5*d*4 6*s*1 | 223\\.759 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.759** || W | 6 | 5*d*5 6*s*1 | 223\\.126 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.126** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.25** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.25 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.023** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.023 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.837** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.228** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.53 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.869** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.142** || Tl | 3 | 6*s*2 6*p*1 | 90\\.239 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.001** || Pb | 4 | 6*s*2 6*p*2 | 98\\.039 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.817** || Bi | 5 | 6*s*2 6*p*3 | 105\\.071 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** || Po | 6 | 6*s*2 6*p*4 | 159\\.801 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.606** || **At** | **7** | **6*s*2 6*p*5** | **161\\.481** || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.086** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.489** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.216** || **Ac** | **11** | **5*f*0\\.0001 6*s*2 6*p*6 6*d*0\\.9999 7*s*2** | **170\\.048** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.389** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.575 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.31** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.642 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.603** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.218 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.349** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 213\\.932 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.436** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 211\\.493 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.953** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **258\\.027** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || He\\_AE | 2 | 1*s*2 | 2135\\.871 || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 772\\.626 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **200\\.0** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2 5*s*2 5*p*6 5*d*1 6*s*2 | 272\\.941 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Nd | 14 | 4*f*3 5*s*2 5*p*6 5*d*1 6*s*2 | 253\\.189 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Pm | 15 | 4*f*4 5*s*2 5*p*6 5*d*1 6*s*2 | 258\\.627 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Sm | 16 | 4*f*5 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.515 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Eu | 17 | 4*f*7 5*s*2 5*p*6 6*s*2 | 249\\.668 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Gd | 18 | 4*f*7 5*s*2 5*p*6 5*d*1 6*s*2 | 256\\.472 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Tb | 19 | 4*f*8 5*s*2 5*p*6 5*d*1 6*s*2 | 264\\.824 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Dy | 20 | 4*f*9 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.467 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Ho | 21 | 4*f*10 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.168 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Er | 22 | 4*f*11 5*s*2 5*p*6 5*d*1 6*s*2 | 298\\.116 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Tm | 23 | 4*f*12 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.42 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Yb | 24 | 4*f*14 5*s*2 5*p*6 6*s*2 | 253\\.028 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Yb\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 188\\.359 || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || **W\\_sv** | **14** | **5*s*2 5*p*6 5*d*5 6*s*1** | **223\\.057** || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.121** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** || Cf | 20 | 5*f*8 6*s*2 6*p*6 6*d*2 7*s*2 | 414\\.614 | #### GW potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **404\\.806** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.253 || Li\\_GW | 1 | 2*s*1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.253** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.951 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **536\\.216** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.762** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 742\\.464 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.681** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.681 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.833 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.222 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.315** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 433\\.745 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.442 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.366 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.335** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.335 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 847\\.822 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **431\\.952** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 317\\.594 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.86** || Mg\\_GW | 2 | 3*s*2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.538 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **430\\.099** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.957** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.007 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.704** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 546\\.548 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.155** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.602** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.25** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.518** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.606** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.209** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.598** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.48** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.093** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.753** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.537 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.488** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.044 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.727** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.447 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.407** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.352 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.485** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.032 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **391\\.702** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.312 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.745** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.723** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.614** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.514 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.602** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.258 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.224** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.88 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.563** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **220\\.92** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.532** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.94** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.437** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.857** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.65** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **350\\.798** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **347\\.881** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.321 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **350\\.989** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.832 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **355\\.88** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.752 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.226** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 253\\.99 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.653** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.582** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.636 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.086** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.704 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.147** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.498 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **175\\.144** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.686 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.712** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.757 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.528** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.581 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.012** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.484** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.728** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.649** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.716** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **285\\.798** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **316\\.943** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **316\\.85** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.628** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.708** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.657 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.536** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.263 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.52** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **311\\.949** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.001** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.502 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.793** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.138 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.628 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.89** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.502 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.666** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.653 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.303** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.597 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **268\\.546** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 331\\.257 | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || C\\_h\\_GW | 4 | 2*s*2 2*p*2 | 741\\.689 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.902 || N\\_h\\_GW | 5 | 2*s*2 2*p*3 | 755\\.582 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.495 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 434\\.431 || O\\_h\\_GW | 6 | 2*s*2 2*p*4 | 765\\.519 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.698 || F\\_h\\_GW | 7 | 2*s*2 2*p*5 | 848\\.626 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **432\\.275** || Ne\\_s\\_GW | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*p*1** | **372\\.853** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **290\\.599** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **378\\.961** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **383\\.774** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **382\\.321** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **384\\.932** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **384\\.627** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **387\\.837** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **387\\.491** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **389\\.645** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || **Cu\\_sv\\_GW** | **19** | **3*s*2 3*p*6 3*d*10 4*s*1** | **391\\.688** || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*10 4*s*2** | **401\\.665** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 404\\.602 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **375\\.434** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_sv\\_GW | 23 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*3 | 415\\.313 || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || Se\\_sv\\_GW | 24 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*4 | 469\\.344 || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || Br\\_sv\\_GW | 25 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*5 | 475\\.692 || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **252\\.232** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **339\\.758** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **346\\.364** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **353\\.872** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **344\\.914** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **351\\.044** || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **348\\.106** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **351\\.206** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || **Pd\\_sv\\_GW** | **18** | **4*s*2 4*p*6 4*d*10** | **356\\.093** || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || **Ag\\_sv\\_GW** | **19** | **4*s*2 4*p*6 4*d*11** | **354\\.43** || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || **Cd\\_sv\\_GW** | **20** | **4*s*2 4*p*6 4*d*10 5*s*2** | **361\\.806** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || In\\_sv\\_GW | 21 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*1 | 366\\.771 || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sn\\_sv\\_GW | 22 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*2 | 368\\.778 || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || Sb\\_sv\\_GW | 23 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*3 | 372\\.491 || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || Te\\_sv\\_GW | 24 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*4 | 376\\.618 || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || I\\_sv\\_GW | 25 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*5 | 381\\.674 || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || Xe\\_sv\\_GW | 26 | 4*s*2 4*p*6 4*d*10 5*s*2 5*p*6 | 400\\.476 || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.515** || **La\\_GW** | **11** | **4*f*0\\.2 5*s*2 5*p*6 5*d*0\\.8 6*s*2** | **313\\.688** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.964** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || **Au\\_sv\\_GW** | **19** | **5*s*2 5*p*6 5*d*11** | **306\\.658** || **Hg\\_sv\\_GW** | **20** | **5*s*2 5*p*6 5*d*10 6*s*2** | **312\\.028** || **Tl\\_d\\_GW** | **15** | **5*s*2 5*d*10 6*s*2 6*p*1** | **237\\.053** || Tl\\_sv\\_GW | 21 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*1 | 316\\.583 || **Pb\\_d\\_GW** | **16** | **5*s*2 5*d*10 6*s*2 6*p*2** | **237\\.809** || Pb\\_sv\\_GW | 22 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*2 | 317\\.193 || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **17** | **5*s*2 5*d*10 6*s*2 6*p*3** | **261\\.876** || Bi\\_sv\\_GW | 23 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*3 | 323\\.513 || **Po\\_d\\_GW** | **18** | **5*s*2 5*d*10 6*s*2 6*p*4** | **267\\.847** || Po\\_sv\\_GW | 24 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*4 | 326\\.618 || **At\\_d\\_GW** | **17** | **5*d*10 6*s*2 6*p*5** | **266\\.251** || At\\_sv\\_GW | 25 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*5 | 328\\.529 || **Rn\\_d\\_GW** | **18** | **5*d*10 6*s*2 6*p*6** | **268\\.495** || Rn\\_sv\\_GW | 26 | 5*s*2 5*p*6 5*d*10 6*s*2 6*p*6 | 331\\.173 | ### potpaw.52 PBE and LDA PAW datasets version 52, including early GW variety (snapshot 19\\-04\\-2012\\).When read by VASP these files yield identical results as the files distributed in 2012\\. The POTCAR files, however, differ from previous versions: 1. the TITLE string is set to the directory in which the POTCAR file reside for: B\\_GW Br\\_GW Cd\\_GW Cd\\_pv\\_GW Cd\\_sv\\_GW F\\_GW\\_new Ge\\_GW H\\_AE Ne\\_GW\\_soft O\\_GW\\_new Pb\\_d\\_GW.2. For PBE GW the TITLE string has been updated from PAW to PAW\\_PBE.3. HASH key added to all POTCAR files. | **Mind:** The C\\_GW\\_new, N\\_GW\\_new, O\\_GW\\_new, and F\\_GW\\_new POTCAR files, use the f\\-pseudopotential as local potential and possess d\\-projectors. In contrast, the C\\_GW, N\\_GW, O\\_GW, and F\\_GW POTCAR files use the d\\-pseudopotential as local potential and possess no d\\-projectors. Calculations usually converge faster with respect to the energy cutoff ENMAX using the C\\_GW, N\\_GW, O\\_GW, and G\\_GW potentials. Whether the new potentials possess a precision advantage over the old potentials is not entirely clear. In theory, they should be more precise for correlated wavefunction calculations. However, in practice, the improvements seem modest and often do not justify the greater computational load. || --- | #### Standard potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **477\\.779** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **498\\.387** || **Be** | **2** | **2*s*1\\.9999 2*p*0\\.001** | **247\\.951** || Be\\_sv | 4 | 1*s*2 2*s*1\\.9999 2*p*0\\.001 | 308\\.45 || **B** | **3** | **2*s*2 2*p*1** | **318\\.762** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.251 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.704 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.424 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.604 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 700\\.0 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.647 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.403** || Na | 1 | 3*s*1 | 101\\.956 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.494** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 644\\.874 || **Mg** | **2** | **3*s*1\\.999 3*p*0\\.001** | **213\\.415** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.538 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 473\\.54 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.957** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.704** || **P** | **5** | **3*s*2 3*p*3** | **255\\.155** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.903 || **S** | **6** | **3*s*2 3*p*4** | **258\\.602** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.84 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.25** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.272 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.101** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.596 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.279** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.552 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.727** || Sc | 3 | 3*d*2 4*s*1 | 155\\.006 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.7** || Ti | 4 | 3*d*3 4*s*1 | 178\\.52 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.435 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.719** || V | 5 | 3*d*4 4*s*1 | 192\\.706 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.722 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.722** || Cr | 6 | 3*d*5 4*s*1 | 227\\.202 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.753** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.443 || Mn | 7 | 3*d*6 4*s*1 | 269\\.944 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.944** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.112 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.969** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.303 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.513 || **Co** | **9** | **3*d*8 4*s*1** | **268\\.056** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 270\\.871 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.343 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.618** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.726 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.521** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.406 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.847** || Ga | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.829** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.723 || Ge | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.604 || **As** | **5** | **4*s*2 4*p*3** | **208\\.87** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.762 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.392** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 122\\.21 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.215** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **226\\.327** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.554** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **230\\.037** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 207\\.263 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.304** || Mo | 6 | 4*d*5 5*s*1 | 224\\.535 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.535 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **236\\.514** || Tc | 7 | 4*d*6 5*s*1 | 228\\.636 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.345** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.479 || Ru | 8 | 4*d*7 5*s*1 | 213\\.221 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **239\\.907** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.687 || Rh | 9 | 4*d*8 5*s*1 | 228\\.926 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.321** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.832** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.832 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.752** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.68 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.265** || In | 3 | 5*s*2 5*p*1 | 96\\.062 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.196** || Sn | 4 | 5*s*2 5*p*2 | 103\\.318 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.107** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.301** || **Te** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.021** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.727** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.001 6*s*1\\.999** | **186\\.981** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.044** || La\\_s | 9 | 4*f*0\\.0001 5*p*6 5*d*0\\.9999 6*s*2 | 136\\.594 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.088** || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.927 || Hf | 4 | 5*d*3 6*s*1 | 220\\.431 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.431** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.414 || Ta | 5 | 5*d*4 6*s*1 | 223\\.759 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.759** || W | 6 | 5*d*5 6*s*1 | 223\\.126 || W\\_pv | 12 | 5*p*6 5*d*5 6*s*1 | 223\\.126 || **Re** | **7** | **5*d*6 6*s*1** | **226\\.25** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.25 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.023** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.023 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.837** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.228** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.53 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.869** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.142** || Tl | 3 | 6*s*2 6*p*1 | 90\\.239 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.001** || Pb | 4 | 6*s*2 6*p*2 | 98\\.039 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.817** || Bi | 5 | 6*s*2 6*p*3 | 105\\.071 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** || Po | 6 | 6*s*2 6*p*4 | 159\\.801 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.606** || **At** | **7** | **6*s*2 6*p*5** | **161\\.481** || At\\_d | 17 | 5*d*10 6*s*2 6*p*5 | 266\\.303 || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.086** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.489** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.216** || **Ac** | **11** | **5*f*0\\.0001 6*s*2 6*p*6 6*d*0\\.9999 7*s*2** | **170\\.048** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.389** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.575 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.31** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.642 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.603** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.218 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.349** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 213\\.932 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.436** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 211\\.493 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.953** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **258\\.027** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H** | **1** | **1*s*1** | **250\\.0** || H.25 | 0\\.25 | 1*s*0\\.25 | 250\\.0 || H.33 | 0\\.33 | 1*s*0\\.33 | 250\\.0 || H.42 | 0\\.42 | 1*s*0\\.42 | 250\\.0 || H.5 | 0\\.5 | 1*s*0\\.5 | 250\\.0 || H.58 | 0\\.58 | 1*s*0\\.58 | 250\\.0 || H.66 | 0\\.66 | 1*s*0\\.66 | 250\\.0 || H.75 | 0\\.75 | 1*s*0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 1*s*1\\.25 | 457\\.521 || H1\\.33 | 1\\.33 | 1*s*1\\.33 | 250\\.0 || H1\\.5 | 1\\.5 | 1*s*1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 1*s*1\\.66 | 250\\.0 || H1\\.75 | 1\\.75 | 1*s*1\\.75 | 250\\.0 || H\\_AE | 1 |  | 1000\\.0 || H\\_h | 1 | 1*s*1 | 700\\.0 || H\\_s | 1 | 1*s*1 | 200\\.0 || **He** | **2** | **1*s*2** | **478\\.896** || Li | 1 | 2*s*1 | 140\\.0 || **Li\\_sv** | **3** | **1*s*2 2*s*1** | **499\\.034** || **Be** | **2** | **2*s*1\\.99 2*p*0\\.01** | **247\\.543** || Be\\_sv | 4 | 1*s*2 2*s*1\\.99 2*p*0\\.01 | 308\\.768 || **B** | **3** | **2*s*2 2*p*1** | **318\\.614** || B\\_h | 3 | 2*s*2 2*p*1 | 700\\.0 || B\\_s | 3 | 2*s*2 2*p*1 | 269\\.245 || **C** | **4** | **2*s*2 2*p*2** | **400\\.0** || C\\_h | 4 | 2*s*2 2*p*2 | 700\\.0 || C\\_s | 4 | 2*s*2 2*p*2 | 273\\.911 || **N** | **5** | **2*s*2 2*p*3** | **400\\.0** || N\\_h | 5 | 2*s*2 2*p*3 | 700\\.0 || N\\_s | 5 | 2*s*2 2*p*3 | 279\\.692 || **O** | **6** | **2*s*2 2*p*4** | **400\\.0** || O\\_h | 6 | 2*s*2 2*p*4 | 700\\.0 || O\\_s | 6 | 2*s*2 2*p*4 | 282\\.853 || **F** | **7** | **2*s*2 2*p*5** | **400\\.0** || F\\_h | 7 | 2*s*2 2*p*5 | 700\\.0 || F\\_s | 7 | 2*s*2 2*p*5 | 289\\.837 || **Ne** | **8** | **2*s*2 2*p*6** | **343\\.606** || Na | 1 | 3*s*1 | 101\\.968 || **Na\\_pv** | **7** | **2*p*6 3*s*1** | **259\\.561** || Na\\_sv | 9 | 2*s*2 2*p*6 3*s*1 | 645\\.64 || **Mg** | **2** | **3*s*2** | **126\\.143** || Mg\\_pv | 8 | 2*p*6 3*s*2 | 403\\.929 || Mg\\_sv | 10 | 2*s*2 2*p*6 3*s*2 | 495\\.223 || **Al** | **3** | **3*s*2 3*p*1** | **240\\.3** || **Si** | **4** | **3*s*2 3*p*2** | **245\\.345** || **P** | **5** | **3*s*2 3*p*3** | **255\\.04** || P\\_h | 5 | 3*s*2 3*p*3 | 390\\.202 || **S** | **6** | **3*s*2 3*p*4** | **258\\.689** || S\\_h | 6 | 3*s*2 3*p*4 | 402\\.436 || **Cl** | **7** | **3*s*2 3*p*5** | **262\\.472** || Cl\\_h | 7 | 3*s*2 3*p*5 | 409\\.136 || **Ar** | **8** | **3*s*2 3*p*6** | **266\\.408** || K\\_pv | 7 | 3*p*6 4*s*1 | 116\\.731 || **K\\_sv** | **9** | **3*s*2 3*p*6 4*s*1** | **259\\.264** || Ca\\_pv | 8 | 3*p*6 4*s*2 | 119\\.559 || **Ca\\_sv** | **10** | **3*s*2 3*p*6 4*s*2** | **266\\.622** || Sc | 3 | 3*d*2 4*s*1 | 154\\.763 || **Sc\\_sv** | **11** | **3*s*2 3*p*6 3*d*2 4*s*1** | **222\\.66** || Ti | 4 | 3*d*3 4*s*1 | 178\\.33 || Ti\\_pv | 10 | 3*p*6 3*d*3 4*s*1 | 222\\.335 || **Ti\\_sv** | **12** | **3*s*2 3*p*6 3*d*3 4*s*1** | **274\\.61** || V | 5 | 3*d*4 4*s*1 | 192\\.543 || V\\_pv | 11 | 3*p*6 3*d*4 4*s*1 | 263\\.673 || **V\\_sv** | **13** | **3*s*2 3*p*6 3*d*4 4*s*1** | **263\\.673** || Cr | 6 | 3*d*5 4*s*1 | 227\\.08 || **Cr\\_pv** | **12** | **3*p*6 3*d*5 4*s*1** | **265\\.681** || Cr\\_sv | 14 | 3*s*2 3*p*6 3*d*5 4*s*1 | 395\\.471 || Mn | 7 | 3*d*6 4*s*1 | 269\\.864 || **Mn\\_pv** | **13** | **3*p*6 3*d*6 4*s*1** | **269\\.864** || Mn\\_sv | 15 | 3*s*2 3*p*6 3*d*6 4*s*1 | 387\\.187 || **Fe** | **8** | **3*d*7 4*s*1** | **267\\.882** || Fe\\_pv | 14 | 3*p*6 3*d*7 4*s*1 | 293\\.238 || Fe\\_sv | 16 | 3*s*2 3*p*6 3*d*7 4*s*1 | 390\\.558 || **Co** | **9** | **3*d*8 4*s*1** | **267\\.968** || Co\\_pv | 15 | 3*p*6 3*d*8 4*s*1 | 271\\.042 || Co\\_sv | 17 | 3*s*2 3*p*6 3*d*8 4*s*1 | 390\\.362 || **Ni** | **10** | **3*d*9 4*s*1** | **269\\.532** || Ni\\_pv | 16 | 3*p*6 3*d*9 4*s*1 | 367\\.986 || **Cu** | **11** | **3*d*10 4*s*1** | **295\\.446** || Cu\\_pv | 17 | 3*p*6 3*d*10 4*s*1 | 368\\.648 || **Zn** | **12** | **3*d*10 4*s*2** | **276\\.723** || Ga | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d** | **13** | **3*d*10 4*s*2 4*p*1** | **282\\.691** || Ga\\_h | 13 | 3*d*10 4*s*2 4*p*1 | 404\\.601 || Ge | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_h | 14 | 3*d*10 4*s*2 4*p*2 | 410\\.425 || **As** | **5** | **4*s*2 4*p*3** | **208\\.702** || As\\_d | 15 | 3*d*10 4*s*2 4*p*3 | 288\\.651 || **Se** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr** | **8** | **4*s*2 4*p*6** | **185\\.331** || Rb\\_pv | 7 | 4*p*6 4*d*0\\.001 5*s*0\\.999 | 121\\.882 || **Rb\\_sv** | **9** | **4*s*2 4*p*6 4*d*0\\.001 5*s*0\\.999** | **220\\.112** || **Sr\\_sv** | **10** | **4*s*2 4*p*6 4*d*0\\.001 5*s*1\\.999** | **229\\.353** || **Y\\_sv** | **11** | **4*s*2 4*p*6 4*d*2 5*s*1** | **202\\.626** || **Zr\\_sv** | **12** | **4*s*2 4*p*6 4*d*3 5*s*1** | **229\\.898** || Nb\\_pv | 11 | 4*p*6 4*d*4 5*s*1 | 208\\.608 || **Nb\\_sv** | **13** | **4*s*2 4*p*6 4*d*4 5*s*1** | **293\\.235** || Mo | 6 | 4*d*5 5*s*1 | 224\\.584 || Mo\\_pv | 12 | 4*p*6 4*d*5 5*s*1 | 224\\.584 || **Mo\\_sv** | **14** | **4*s*2 4*p*6 4*d*5 5*s*1** | **242\\.676** || Tc | 7 | 4*d*6 5*s*1 | 228\\.694 || **Tc\\_pv** | **13** | **4*p*6 4*d*6 5*s*1** | **263\\.523** || Tc\\_sv | 15 | 4*s*2 4*p*6 4*d*6 5*s*1 | 318\\.703 || Ru | 8 | 4*d*7 5*s*1 | 213\\.271 || **Ru\\_pv** | **14** | **4*p*6 4*d*7 5*s*1** | **240\\.049** || Ru\\_sv | 16 | 4*s*2 4*p*6 4*d*7 5*s*1 | 318\\.855 || Rh | 9 | 4*d*8 5*s*1 | 228\\.996 || **Rh\\_pv** | **15** | **4*p*6 4*d*8 5*s*1** | **247\\.408** || **Pd** | **10** | **4*d*9 5*s*1** | **250\\.925** || Pd\\_pv | 16 | 4*p*6 4*d*9 5*s*1 | 250\\.925 || **Ag** | **11** | **4*d*10 5*s*1** | **249\\.844** || Ag\\_pv | 17 | 4*p*6 4*d*10 5*s*1 | 297\\.865 || **Cd** | **12** | **4*d*10 5*s*2** | **274\\.336** || In | 3 | 5*s*2 5*p*1 | 95\\.934 || **In\\_d** | **13** | **4*d*10 5*s*2 5*p*1** | **239\\.211** || Sn | 4 | 5*s*2 5*p*2 | 103\\.236 || **Sn\\_d** | **14** | **4*d*10 5*s*2 5*p*2** | **241\\.083** || **Sb** | **5** | **5*s*2 5*p*3** | **172\\.069** || **Te** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe** | **8** | **5*s*2 5*p*6** | **153\\.118** || **Cs\\_sv** | **9** | **5*s*2 5*p*6 6*s*1** | **220\\.318** || **Ba\\_sv** | **10** | **5*s*2 5*p*6 5*d*0\\.01 6*s*1\\.99** | **187\\.181** || **La** | **11** | **4*f*0\\.0001 5*s*2 5*p*6 5*d*0\\.9999 6*s*2** | **219\\.292** || La\\_s | 9 | 5*p*6 5*d*1 6*s*2 | 136\\.53 || **Ce** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **273\\.042** || Ce\\_3 | 11 | 5*s*2 5*p*6 5*d*1 6*s*2 | 176\\.506 || Ce\\_h | 12 | 4*f*1 5*s*2 5*p*6 5*d*1 6*s*2 | 299\\.9 || Pr | 13 | 4*f*2 5*s*2 5*p*6 5*d*1 6*s*2 | 272\\.941 || **Pr\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **181\\.719** || Nd | 14 | 4*f*3 5*s*2 5*p*6 5*d*1 6*s*2 | 253\\.189 || **Nd\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **182\\.619** || Pm | 15 | 4*f*4 5*s*2 5*p*6 5*d*1 6*s*2 | 258\\.627 || **Pm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **176\\.959** || Sm | 16 | 4*f*5 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.515 || **Sm\\_3** | **11** | **5*s*2 5*p*6 5*d*1 6*s*2** | **177\\.087** || Eu | 17 | 4*f*7 5*s*2 5*p*6 6*s*2 | 249\\.668 || **Eu\\_2** | **8** | **5*p*6 6*s*2** | **99\\.328** || Eu\\_3 | 9 | 5*p*6 5*d*1 6*s*2 | 129\\.057 || Gd | 18 | 4*f*7 5*s*2 5*p*6 5*d*1 6*s*2 | 256\\.472 || **Gd\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.332** || Tb | 19 | 4*f*8 5*s*2 5*p*6 5*d*1 6*s*2 | 264\\.824 || **Tb\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.613** || Dy | 20 | 4*f*9 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.467 || **Dy\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.713** || Ho | 21 | 4*f*10 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.168 || **Ho\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.137** || Er | 22 | 4*f*11 5*s*2 5*p*6 5*d*1 6*s*2 | 298\\.116 || Er\\_2 | 8 | 5*p*6 6*s*2 | 119\\.75 || **Er\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **155\\.037** || Tm | 23 | 4*f*12 5*s*2 5*p*6 5*d*1 6*s*2 | 257\\.42 || **Tm\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **149\\.221** || Yb | 24 | 4*f*14 5*s*2 5*p*6 6*s*2 | 253\\.028 || **Yb\\_2** | **8** | **5*p*6 6*s*2** | **112\\.578** || Lu | 25 | 4*f*14 5*s*2 5*p*6 5*d*1 6*s*2 | 255\\.695 || **Lu\\_3** | **9** | **5*p*6 5*d*1 6*s*2** | **154\\.992** || Hf | 4 | 5*d*3 6*s*1 | 220\\.334 || **Hf\\_pv** | **10** | **5*p*6 5*d*3 6*s*1** | **220\\.334** || Hf\\_sv | 12 | 5*s*2 5*p*6 5*d*4 | 237\\.444 || Ta | 5 | 5*d*4 6*s*1 | 223\\.667 || **Ta\\_pv** | **11** | **5*p*6 5*d*4 6*s*1** | **223\\.667** || W | 6 | 5*d*5 6*s*1 | 223\\.057 || W\\_pv | 12 | 5*p*6 5*d*5 6*s*1 | 223\\.057 || **Re** | **7** | **5*d*6 6*s*1** | **226\\.216** || Re\\_pv | 13 | 5*p*6 5*d*6 6*s*1 | 226\\.216 || **Os** | **8** | **5*d*7 6*s*1** | **228\\.022** || Os\\_pv | 14 | 5*p*6 5*d*7 6*s*1 | 228\\.022 || **Ir** | **9** | **5*d*8 6*s*1** | **210\\.864** || **Pt** | **10** | **5*d*9 6*s*1** | **230\\.283** || Pt\\_pv | 16 | 5*p*6 5*d*9 6*s*1 | 294\\.607 || **Au** | **11** | **5*d*10 6*s*1** | **229\\.943** || **Hg** | **12** | **5*d*10 6*s*2** | **233\\.204** || Tl | 3 | 6*s*2 6*p*1 | 90\\.14 || **Tl\\_d** | **13** | **5*d*10 6*s*2 6*p*1** | **237\\.053** || Pb | 4 | 6*s*2 6*p*2 | 97\\.973 || **Pb\\_d** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.835** || Bi | 5 | 6*s*2 6*p*3 | 105\\.037 || **Bi\\_d** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** || Po | 6 | 6*s*2 6*p*4 | 159\\.707 || **Po\\_d** | **16** | **5*d*10 6*s*2 6*p*4** | **264\\.565** || **At** | **7** | **6*s*2 6*p*5** | **161\\.43** || At\\_d | 17 | 5*d*10 6*s*2 6*p*5 | 266\\.251 || **Rn** | **8** | **6*s*2 6*p*6** | **152\\.121** || **Fr\\_sv** | **9** | **6*s*2 6*p*6 7*s*1** | **214\\.54** || **Ra\\_sv** | **10** | **6*s*2 6*p*6 7*s*2** | **237\\.367** || **Ac** | **11** | **6*s*2 6*p*6 6*d*1 7*s*2** | **172\\.351** || **Th** | **12** | **5*f*1 6*s*2 6*p*6 6*d*1 7*s*2** | **247\\.306** || Th\\_s | 10 | 5*f*1 6*p*6 6*d*1 7*s*2 | 169\\.363 || **Pa** | **13** | **5*f*1 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.193** || Pa\\_s | 11 | 5*f*1 6*p*6 6*d*2 7*s*2 | 193\\.466 || **U** | **14** | **5*f*2 6*s*2 6*p*6 6*d*2 7*s*2** | **252\\.502** || U\\_s | 14 | 5*f*2 6*s*2 6*p*6 6*d*2 7*s*2 | 209\\.23 || **Np** | **15** | **5*f*3 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.26** || Np\\_s | 15 | 5*f*3 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.713 || **Pu** | **16** | **5*f*4 6*s*2 6*p*6 6*d*2 7*s*2** | **254\\.353** || Pu\\_s | 16 | 5*f*4 6*s*2 6*p*6 6*d*2 7*s*2 | 207\\.83 || **Am** | **17** | **5*f*5 6*s*2 6*p*6 6*d*2 7*s*2** | **255\\.875** || **Cm** | **18** | **5*f*6 6*s*2 6*p*6 6*d*2 7*s*2** | **257\\.953** | #### GW potentials | List of LDA potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **404\\.806** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.253 || Li\\_GW | 1 | 2*s*1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.253** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.951 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **536\\.216** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.762** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.681** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.681 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.222 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.315** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 433\\.745 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.366 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.335** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.335 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **317\\.594** || Ne\\_GW\\_soft | 8 | 2*s*2 2*p*6 | 317\\.594 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*d*1** | **260\\.372** || Mg\\_GW | 2 | 3*s*2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.538 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **430\\.099** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.957** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.007 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.704** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 546\\.548 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.155** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.602** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.25** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **266\\.101** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.606** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.209** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **284\\.878** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **285\\.665** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **322\\.537** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **327\\.752** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.537 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **357\\.618** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.044 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **364\\.41** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.447 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **363\\.483** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.352 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **413\\.158** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.032 || Cu\\_pv\\_GW | 17 | 3*p*6 3*d*10 4*s*1 | 466\\.991 || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.312 || Zn\\_pv\\_GW | 18 | 3*p*6 3*d*10 4*s*2 | 360\\.353 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*12** | **496\\.249** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.723** || Ga\\_pv\\_GW | 19 | 3*p*6 3*d*10 4*s*2 4*p*1 | 422\\.753 || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 503\\.451 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.448** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 454\\.654 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.87** || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.602** || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.224** || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **185\\.392** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **220\\.92** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.532** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **229\\.027** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **282\\.169** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **285\\.574** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **311\\.692** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **317\\.903** || Ru\\_pv\\_GW | 14 | 4*p*6 4*d*7 5*s*1 | 239\\.907 || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **320\\.997** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.321 || Rh\\_pv\\_GW | 15 | 4*p*6 4*d*8 5*s*1 | 247\\.321 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **319\\.891** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.832 || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.752 || Cd\\_GW | 12 | 4*d*10 5*s*2 | 253\\.99 || Cd\\_pv\\_GW | 18 | 4*p*6 4*d*10 5*s*2 | 396\\.576 || **Cd\\_sv\\_GW** | **20** | **4*s*4 4*p*6 4*d*10** | **650\\.91** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.582** || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.086** || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.147** || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **175\\.144** || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.712** || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.528** || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.012** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.484** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.649** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.716** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **285\\.798** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **316\\.943** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **316\\.85** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.628** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.708** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.657 || Pt\\_pv\\_GW | 16 | 5*p*6 5*d*9 6*s*1 | 248\\.657 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.536** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.263 || Au\\_pv\\_GW | 17 | 5*p*6 5*d*10 6*s*1 | 248\\.263 || **Pb\\_d\\_GW** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.793** || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.628 || **Bi\\_d\\_GW** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.856** | | List of PBE potentials | | | || --- | --- | --- | --- || Potential name | Number of valence electrons | Valence electron configuration | ENAMX \\[eV] || **H\\_GW** | **1** | **1*s*1** | **300\\.0** || H\\_h\\_GW | 1 | 1*s*1 | 700\\.0 || **He\\_GW** | **2** | **1*s*2** | **405\\.78** || Li\\_AE\\_GW | 3 | 1*s*2 2*p*1 | 433\\.699 || Li\\_GW | 1 | 2*s*1 | 112\\.104 || **Li\\_sv\\_GW** | **3** | **1*s*2 2*p*1** | **433\\.699** || Be\\_GW | 2 | 2*s*1\\.9999 2*p*0\\.001 | 247\\.543 || **Be\\_sv\\_GW** | **4** | **1*s*2 2*p*2** | **537\\.454** || **B\\_GW** | **3** | **2*s*2 2*p*1** | **318\\.614** || **C\\_GW** | **4** | **2*s*2 2*p*2** | **413\\.992** || C\\_GW\\_new | 4 | 2*s*2 2*p*2 | 413\\.992 || **N\\_GW** | **5** | **2*s*2 2*p*3** | **420\\.902** || N\\_GW\\_new | 5 | 2*s*2 2*p*3 | 420\\.902 || N\\_s\\_GW | 5 | 2*s*2 2*p*3 | 296\\.495 || **O\\_GW** | **6** | **2*s*2 2*p*4** | **414\\.635** || O\\_GW\\_new | 6 | 2*s*2 2*p*4 | 434\\.431 || O\\_s\\_GW | 6 | 2*s*2 2*p*4 | 334\\.664 || **F\\_GW** | **7** | **2*s*2 2*p*5** | **487\\.698** || F\\_GW\\_new | 7 | 2*s*2 2*p*5 | 487\\.698 || **Ne\\_GW** | **8** | **2*s*2 2*p*6** | **318\\.26** || Ne\\_GW\\_soft | 8 | 2*s*2 2*p*6 | 318\\.26 || **Na\\_sv\\_GW** | **9** | **2*s*2 2*p*6 3*d*1** | **260\\.065** || Mg\\_GW | 2 | 3*s*2 | 126\\.143 || Mg\\_pv\\_GW | 8 | 2*p*6 3*s*2 | 403\\.929 || **Mg\\_sv\\_GW** | **10** | **2*s*2 2*p*6 3*d*2** | **429\\.893** || **Al\\_GW** | **3** | **3*s*2 3*p*1** | **240\\.3** || Al\\_sv\\_GW | 11 | 2*s*2 2*p*6 3*s*2 3*p*1 | 411\\.109 || **Si\\_GW** | **4** | **3*s*2 3*p*2** | **245\\.345** || Si\\_sv\\_GW | 12 | 2*s*2 2*p*6 3*s*2 3*p*2 | 547\\.578 || **P\\_GW** | **5** | **3*s*2 3*p*3** | **255\\.04** || **S\\_GW** | **6** | **3*s*2 3*p*4** | **258\\.689** || **Cl\\_GW** | **7** | **3*s*2 3*p*5** | **262\\.472** || **Ar\\_GW** | **8** | **3*s*2 3*p*6** | **266\\.408** || **K\\_sv\\_GW** | **9** | **3*s*2 3*p*6 3*d*1** | **248\\.998** || **Ca\\_sv\\_GW** | **10** | **3*s*2 3*p*6 3*d*2** | **281\\.43** || **Sc\\_sv\\_GW** | **11** | **3*s*2 3*p*6 3*d*3** | **285\\.066** || **Ti\\_sv\\_GW** | **12** | **3*s*2 3*p*6 3*d*4** | **285\\.998** || **V\\_sv\\_GW** | **13** | **3*s*2 3*p*6 3*d*5** | **323\\.07** || **Cr\\_sv\\_GW** | **14** | **3*s*2 3*p*6 3*d*6** | **328\\.282** || Mn\\_GW | 7 | 3*d*6 4*s*1 | 278\\.466 || **Mn\\_sv\\_GW** | **15** | **3*s*2 3*p*6 3*d*7** | **357\\.944** || Fe\\_GW | 8 | 3*d*7 4*s*1 | 321\\.007 || **Fe\\_sv\\_GW** | **16** | **3*s*2 3*p*6 3*d*8** | **364\\.719** || Co\\_GW | 9 | 3*d*8 4*s*1 | 323\\.4 || **Co\\_sv\\_GW** | **17** | **3*s*2 3*p*6 3*d*9** | **363\\.77** || Ni\\_GW | 10 | 3*d*9 4*s*1 | 357\\.323 || **Ni\\_sv\\_GW** | **18** | **3*s*2 3*p*6 3*d*10** | **413\\.475** || Cu\\_GW | 11 | 3*d*10 4*s*1 | 417\\.039 || Cu\\_pv\\_GW | 17 | 3*p*6 3*d*10 4*s*1 | 467\\.331 || Zn\\_GW | 12 | 3*d*10 4*s*2 | 328\\.191 || Zn\\_pv\\_GW | 18 | 3*p*6 3*d*10 4*s*2 | 360\\.246 || **Zn\\_sv\\_GW** | **20** | **3*s*2 3*p*6 3*d*12** | **496\\.604** || Ga\\_GW | 3 | 4*s*2 4*p*1 | 134\\.678 || **Ga\\_d\\_GW** | **13** | **3*d*10 4*s*2 4*p*1** | **404\\.602** || Ga\\_pv\\_GW | 19 | 3*p*6 3*d*10 4*s*2 4*p*1 | 423\\.002 || Ga\\_sv\\_GW | 21 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*1 | 503\\.418 || Ge\\_GW | 4 | 4*s*2 4*p*2 | 173\\.807 || **Ge\\_d\\_GW** | **14** | **3*d*10 4*s*2 4*p*2** | **310\\.294** || Ge\\_sv\\_GW | 22 | 3*s*2 3*p*6 3*d*10 4*s*2 4*p*2 | 454\\.489 || **As\\_GW** | **5** | **4*s*2 4*p*3** | **208\\.702** || **Se\\_GW** | **6** | **4*s*2 4*p*4** | **211\\.555** || **Br\\_GW** | **7** | **4*s*2 4*p*5** | **216\\.285** || **Kr\\_GW** | **8** | **4*s*2 4*p*6** | **185\\.331** || **Rb\\_sv\\_GW** | **9** | **4*s*2 4*p*6 4*d*1** | **221\\.197** || **Sr\\_sv\\_GW** | **10** | **4*s*2 4*p*6 4*d*2** | **224\\.817** || **Y\\_sv\\_GW** | **11** | **4*s*2 4*p*6 4*d*3** | **229\\.276** || **Zr\\_sv\\_GW** | **12** | **4*s*2 4*p*6 4*d*4** | **282\\.431** || **Nb\\_sv\\_GW** | **13** | **4*s*2 4*p*6 4*d*5** | **285\\.792** || **Mo\\_sv\\_GW** | **14** | **4*s*2 4*p*6 4*d*6** | **311\\.905** || **Tc\\_sv\\_GW** | **15** | **4*s*2 4*p*6 4*d*7** | **318\\.11** || Ru\\_pv\\_GW | 14 | 4*p*6 4*d*7 5*s*1 | 240\\.049 || **Ru\\_sv\\_GW** | **16** | **4*s*2 4*p*6 4*d*8** | **321\\.2** || Rh\\_GW | 9 | 4*d*8 5*s*1 | 247\\.408 || Rh\\_pv\\_GW | 15 | 4*p*6 4*d*8 5*s*1 | 247\\.408 || **Rh\\_sv\\_GW** | **17** | **4*s*2 4*p*6 4*d*9** | **320\\.091** || Pd\\_GW | 10 | 4*d*9 5*s*1 | 250\\.925 || Ag\\_GW | 11 | 4*d*10 5*s*1 | 249\\.844 || Cd\\_GW | 12 | 4*d*10 5*s*2 | 254\\.045 || Cd\\_pv\\_GW | 18 | 4*p*6 4*d*10 5*s*2 | 396\\.766 || **Cd\\_sv\\_GW** | **20** | **4*s*4 4*p*6 4*d*10** | **651\\.254** || **In\\_d\\_GW** | **13** | **4*d*10 5*s*2 5*p*1** | **278\\.624** || **Sn\\_d\\_GW** | **14** | **4*d*10 5*s*2 5*p*2** | **260\\.066** || Sb\\_GW | 5 | 5*s*2 5*p*3 | 172\\.069 || **Sb\\_d\\_GW** | **15** | **4*d*10 5*s*2 5*p*3** | **263\\.1** || **Te\\_GW** | **6** | **5*s*2 5*p*4** | **174\\.982** || **I\\_GW** | **7** | **5*s*2 5*p*5** | **175\\.647** || **Xe\\_GW** | **8** | **5*s*2 5*p*6** | **179\\.547** || **Cs\\_sv\\_GW** | **9** | **5*s*2 5*p*6 5*d*1** | **198\\.101** || **Ba\\_sv\\_GW** | **10** | **5*s*2 5*p*6 5*d*2** | **237\\.515** || **Ce\\_GW** | **12** | **4*f*1 5*s*2 5*p*6 5*d*1 6*s*2** | **304\\.625** || **Hf\\_sv\\_GW** | **12** | **5*s*2 5*p*6 5*d*4** | **282\\.964** || **Ta\\_sv\\_GW** | **13** | **5*s*2 5*p*6 5*d*5** | **286\\.008** || **W\\_sv\\_GW** | **14** | **5*s*2 5*p*6 5*d*6** | **317\\.132** || **Re\\_sv\\_GW** | **15** | **5*s*2 5*p*6 5*d*7** | **317\\.012** || **Os\\_sv\\_GW** | **16** | **5*s*2 5*p*6 5*d*8** | **319\\.773** || **Ir\\_sv\\_GW** | **17** | **5*s*2 5*p*6 5*d*9** | **319\\.843** || Pt\\_GW | 10 | 5*d*9 6*s*1 | 248\\.716 || Pt\\_pv\\_GW | 16 | 5*p*6 5*d*9 6*s*1 | 248\\.716 || **Pt\\_sv\\_GW** | **18** | **5*s*2 5*p*6 5*d*10** | **323\\.669** || Au\\_GW | 11 | 5*d*10 6*s*1 | 248\\.344 || Au\\_pv\\_GW | 17 | 5*p*6 5*d*10 6*s*1 | 248\\.344 || **Pb\\_d\\_GW** | **14** | **5*d*10 6*s*2 6*p*2** | **237\\.809** || Bi\\_GW | 5 | 6*s*2 6*p*3 | 146\\.53 || **Bi\\_d\\_GW** | **15** | **5*d*10 6*s*2 6*p*3** | **242\\.839** | ### LDA (2010\\), PW91 (2006\\) and PBE (2010\\) PAW potentials The LDA, PW91 and PBE PAW datasets (snapshot: 05\\-05\\-2010, 19\\-09\\-2006 and 06\\-05\\-2010, respectively). These files are outdated, not supported and only distributed as is. Some VASP feature might yield undesired results with these files (e.g. METAGGA). #### Standard potentials | List of LDA potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || Free | 0 | 250\\.0 || **H** | **1** | **250\\.0** || H.25 | 0\\.25 | 419\\.126 || H.33 | 0\\.33 | 250\\.0 || H.5 | 0\\.5 | 250\\.0 || H.66 | 0\\.66 | 250\\.477 || H.75 | 0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 250\\.0 || H1\\.33 | 1\\.33 | 458\\.665 || H1\\.5 | 1\\.5 | 250\\.0 || H1\\.66 | 1\\.66 | 467\\.584 || H1\\.75 | 1\\.75 | 469\\.843 || H\\_AE | 1 | 1000\\.0 || H\\_h | 1 | 700\\.0 || **He** | **2** | **477\\.779** || Li | 1 | 140\\.0 || **Li\\_sv** | **3** | **498\\.387** || Li\\_sv\\_old | 3 | 270\\.99 || **Be** | **2** | **247\\.951** || Be\\_sv | 4 | 308\\.45 || **B** | **3** | **318\\.762** || B\\_h | 3 | 700\\.0 || B\\_s | 3 | 250\\.0 || **C** | **4** | **400\\.0** || C\\_d | 4 | 413\\.992 || C\\_f\\_AE | 6 | 840\\.525 || C\\_h | 4 | 700\\.0 || C\\_local | 4 | 1047\\.306 || C\\_s | 4 | 250\\.0 || **N** | **5** | **400\\.0** || N\\_h | 5 | 700\\.0 || N\\_s | 5 | 250\\.0 || **O** | **6** | **400\\.0** || O\\_h | 6 | 700\\.0 || O\\_s | 6 | 282\\.604 || **F** | **7** | **400\\.0** || F\\_h | 7 | 700\\.0 || F\\_s | 7 | 250\\.0 || **Ne** | **8** | **343\\.403** || Ne\\_AE | 10 | 2744\\.212 || Na | 1 | 101\\.956 || **Na\\_pv** | **7** | **259\\.494** || Na\\_sv | 9 | 700\\.0 || **Mg** | **2** | **210\\.674** || Mg\\_pv | 8 | 403\\.538 || Mg\\_pv.old | 8 | 265\\.566 || Mg\\_sv | 10 | 473\\.54 || **Al** | **3** | **240\\.957** || Al\\_pv | 9 | 370\\.394 || Al\\_s | 3 | 135\\.119 || **Si** | **4** | **245\\.704** || Si\\_h | 4 | 339\\.353 || Si\\_nopc | 4 | 245\\.704 || **P** | **5** | **270\\.0** || P\\_h | 5 | 390\\.903 || **S** | **6** | **280\\.0** || S\\_h | 6 | 402\\.84 || **Cl** | **7** | **280\\.0** || Cl\\_h | 7 | 409\\.272 || Cl\\_h\\_new | 7 | 409\\.272 || **Ar** | **8** | **266\\.101** || K | 7 | 116\\.596 || K\\_pv | 7 | 116\\.596 || **K\\_sv** | **9** | **259\\.279** || Ca\\_pv | 8 | 150\\.0 || **Ca\\_sv** | **10** | **266\\.727** || Sc | 3 | 155\\.006 || **Sc\\_sv** | **11** | **222\\.7** || Ti | 4 | 178\\.52 || Ti\\_pv | 10 | 222\\.435 || Ti\\_s | 2 | 141\\.437 || **Ti\\_sv** | **12** | **274\\.719** || Ti\\_sv\\_new | 12 | 274\\.719 || V | 5 | 192\\.706 || V\\_pv | 11 | 263\\.722 || **V\\_sv** | **13** | **263\\.722** || Cr | 6 | 227\\.202 || **Cr\\_pv** | **12** | **265\\.753** || Mn | 7 | 269\\.944 || **Mn\\_pv** | **13** | **269\\.944** || **Fe** | **8** | **267\\.969** || Fe\\_pv | 14 | 293\\.303 || Fe\\_sv | 16 | 390\\.513 || **Co** | **9** | **268\\.056** || Co\\_pv | 15 | 415\\.593 || **Ni** | **10** | **269\\.618** || Ni\\_h | 10 | 357\\.352 || Ni\\_pv | 16 | 367\\.726 || **Cu** | **11** | **273\\.298** || Cu\\_new | 11 | 295\\.521 || Cu\\_pv | 17 | 368\\.406 || **Zn** | **12** | **276\\.847** || Zn\\_pv | 18 | 376\\.385 || Zn\\_sv\\_LDApU | 20 | 725\\.781 || Ga | 3 | 134\\.8 || Ga\\_NC2 | 3 | 513\\.106 || **Ga\\_d** | **13** | **282\\.829** || Ga\\_h | 13 | 404\\.723 || Ga\\_s | 3 | 87\\.077 || Ge | 4 | 173\\.969 || **Ge\\_d** | **14** | **310\\.448** || Ge\\_h | 14 | 410\\.604 || **As** | **5** | **208\\.87** || As\\_NC2 | 5 | 342\\.549 || As\\_d | 15 | 288\\.762 || **Se** | **6** | **211\\.602** || **Br** | **7** | **216\\.224** || **Kr** | **8** | **185\\.392** || Rb\\_pv | 7 | 122\\.21 || **Rb\\_sv** | **9** | **220\\.215** || **Sr\\_sv** | **10** | **226\\.327** || **Y\\_sv** | **11** | **211\\.836** || Zr | 4 | 145\\.4 || **Zr\\_sv** | **12** | **230\\.037** || Zr\\_sv\\_new | 12 | 230\\.037 || Nb\\_pv | 11 | 207\\.263 || **Nb\\_sv** | **13** | **293\\.304** || Mo | 6 | 224\\.535 || Mo\\_pv | 12 | 224\\.535 || Mo\\_pv\\_new | 12 | 224\\.535 || **Mo\\_sv** | **14** | **236\\.514** || Tc | 7 | 228\\.636 || Tc\\_new | 7 | 228\\.636 || **Tc\\_pv** | **13** | **228\\.636** || Tc\\_pv\\_new | 13 | 263\\.345 || Ru | 8 | 213\\.221 || Ru\\_new | 8 | 213\\.221 || **Ru\\_pv** | **14** | **230\\.359** || Ru\\_pv\\_new | 14 | 239\\.907 || Rh | 9 | 228\\.926 || Rh\\_new | 9 | 228\\.926 || **Rh\\_pv** | **15** | **271\\.355** || Rh\\_pv\\_new | 15 | 247\\.321 || **Pd** | **10** | **250\\.832** || Pd\\_new | 10 | 250\\.832 || Pd\\_pv | 16 | 270\\.984 || Pd\\_pv\\_new | 16 | 250\\.832 || **Ag** | **11** | **249\\.752** || Ag\\_new | 11 | 249\\.752 || **Cd** | **12** | **274\\.265** || In | 3 | 96\\.062 || **In\\_d** | **13** | **239\\.196** || In\\_pv | 19 | 241\\.124 || Sn | 4 | 103\\.318 || **Sn\\_d** | **14** | **241\\.107** || **Sb** | **5** | **172\\.301** || Sb\\_ | 5 | 172\\.301 || **Te** | **6** | **175\\.144** || Te\\_rel | 6 | 175\\.141 || **I** | **7** | **175\\.712** || **Xe** | **8** | **153\\.021** || **Cs\\_sv** | **9** | **220\\.727** || **Ba\\_sv** | **10** | **186\\.981** || **La** | **11** | **219\\.044** || La\\_s | 9 | 136\\.594 || **Ce** | **12** | **299\\.927** || Ce\\_h | 12 | 299\\.927 || Ce\\_s | 10 | 173\\.613 || Hf | 4 | 220\\.431 || **Hf\\_pv** | **10** | **220\\.431** || Hf\\_sv | 12 | 237\\.414 || Ta | 5 | 223\\.759 || **Ta\\_pv** | **11** | **223\\.759** || W | 6 | 223\\.126 || W\\_pv | 12 | 223\\.126 || **Re** | **7** | **226\\.25** || Re\\_pv | 13 | 226\\.25 || **Os** | **8** | **228\\.023** || Os\\_pv | 14 | 228\\.023 || **Ir** | **9** | **210\\.837** || **Pt** | **10** | **230\\.228** || Pt\\_new | 10 | 230\\.228 || **Au** | **11** | **229\\.869** || Au\\_new | 11 | 229\\.869 || **Hg** | **12** | **233\\.142** || Tl | 3 | 90\\.239 || **Tl\\_d** | **13** | **237\\.001** || Pb | 4 | 98\\.039 || **Pb\\_d** | **14** | **237\\.817** || Pb\\_dr | 4 | 98\\.041 || Bi | 5 | 105\\.071 || **Bi\\_d** | **15** | **242\\.856** || Bi\\_pv | 21 | 309\\.184 || Po | 6 | 159\\.801 || **Po\\_d** | **16** | **264\\.606** || **At** | **7** | **161\\.481** || At\\_d | 17 | 266\\.303 || **Rn** | **8** | **152\\.086** || **Fr\\_sv** | **9** | **214\\.489** || **Ra\\_sv** | **10** | **237\\.216** || **Ac** | **11** | **170\\.048** || Ac\\_s | 9 | 119\\.996 || **Th** | **12** | **247\\.389** || Th\\_s | 10 | 169\\.575 || **Pa** | **13** | **252\\.31** || Pa\\_s | 11 | 193\\.642 || **U** | **14** | **252\\.603** || U\\_s | 14 | 209\\.218 || **Np** | **15** | **254\\.349** || Np\\_s | 15 | 213\\.932 || **Pu** | **16** | **254\\.436** || Pu\\_s | 16 | 211\\.493 | | List of PW91 potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **H** | **1** | **250\\.0** || H.5 | 0\\.5 | 250\\.0 || H.75 | 0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 250\\.0 || H1\\.5 | 1\\.5 | 250\\.0 || H\\_h | 1 | 700\\.0 || **He** | **2** | **400\\.0** || Li | 1 | 140\\.0 || **Li\\_sv** | **3** | **271\\.798** || **Be** | **2** | **300\\.0** || Be\\_sv | 4 | 308\\.815 || **B** | **3** | **318\\.644** || B\\_h | 3 | 700\\.0 || B\\_s | 3 | 250\\.0 || **C** | **4** | **400\\.0** || C\\_h | 4 | 700\\.0 || C\\_s | 4 | 273\\.894 || **N** | **5** | **400\\.0** || N\\_h | 5 | 700\\.0 || N\\_s | 5 | 250\\.0 || **O** | **6** | **400\\.0** || O\\_h | 6 | 700\\.0 || O\\_s | 6 | 250\\.0 || **F** | **7** | **400\\.0** || F\\_h | 7 | 700\\.0 || F\\_s | 7 | 250\\.0 || **Ne** | **8** | **343\\.681** || Na | 1 | 81\\.389 || **Na\\_pv** | **7** | **300\\.0** || Na\\_sv | 9 | 700\\.0 || **Mg** | **2** | **210\\.083** || Mg\\_pv | 8 | 265\\.602 || **Al** | **3** | **240\\.437** || Al\\_h | 3 | 295\\.008 || **Si** | **4** | **245\\.435** || Si\\_h | 4 | 380\\.358 || **P** | **5** | **270\\.0** || P\\_h | 5 | 390\\.361 || **S** | **6** | **280\\.0** || S\\_h | 6 | 402\\.548 || **Cl** | **7** | **280\\.0** || Cl\\_h | 7 | 409\\.2 || **Ar** | **8** | **266\\.356** || K\\_pv | 7 | 150\\.0 || **K\\_sv** | **9** | **259\\.333** || Ca | 2 | 102\\.811 || Ca\\_pv | 8 | 150\\.0 || **Ca\\_sv** | **10** | **290\\.424** || Sc | 3 | 154\\.804 || **Sc\\_sv** | **11** | **222\\.696** || Ti | 4 | 178\\.367 || Ti\\_pv | 10 | 222\\.364 || **Ti\\_sv** | **12** | **274\\.616** || V | 5 | 192\\.578 || V\\_pv | 11 | 263\\.695 || **V\\_sv** | **13** | **263\\.695** || Cr | 6 | 227\\.109 || **Cr\\_pv** | **12** | **265\\.704** || Mn | 7 | 269\\.887 || **Mn\\_pv** | **13** | **269\\.887** || **Fe** | **8** | **267\\.907** || Fe\\_pv | 14 | 293\\.258 || Fe\\_sv | 16 | 390\\.561 || **Co** | **9** | **267\\.995** || **Ni** | **10** | **269\\.561** || Ni\\_pv | 16 | 367\\.921 || **Cu** | **11** | **273\\.246** || Cu\\_pv | 17 | 368\\.583 || **Zn** | **12** | **276\\.749** || Ga | 3 | 134\\.733 || **Ga\\_d** | **13** | **282\\.718** || Ga\\_h | 13 | 404\\.633 || Ge | 4 | 173\\.845 || **Ge\\_d** | **14** | **287\\.594** || Ge\\_h | 14 | 410\\.475 || **As** | **5** | **208\\.733** || **Se** | **6** | **211\\.557** || **Br** | **7** | **216\\.262** || **Kr** | **8** | **185\\.301** || Rb\\_pv | 7 | 121\\.969 || **Rb\\_sv** | **9** | **220\\.155** || **Sr\\_sv** | **10** | **226\\.196** || **Y\\_sv** | **11** | **211\\.698** || Zr | 4 | 154\\.655 || **Zr\\_sv** | **12** | **229\\.898** || Nb\\_pv | 11 | 207\\.286 || **Nb\\_sv** | **13** | **293\\.199** || Mo | 6 | 224\\.58 || Mo\\_pv | 12 | 224\\.58 || Tc | 7 | 228\\.688 || **Tc\\_pv** | **13** | **228\\.688** || Ru | 8 | 213\\.271 || **Ru\\_pv** | **14** | **230\\.419** || Ru\\_sv | 16 | 325\\.765 || Rh | 9 | 228\\.993 || **Rh\\_pv** | **15** | **271\\.449** || **Pd** | **10** | **250\\.918** || Pd\\_pv | 16 | 350\\.0 || **Ag** | **11** | **249\\.842** || **Cd** | **12** | **274\\.325** || In | 3 | 95\\.997 || **In\\_d** | **13** | **239\\.209** || Sn | 4 | 103\\.267 || **Sn\\_d** | **14** | **241\\.09** || **Sb** | **5** | **172\\.1** || **Te** | **6** | **174\\.996** || **I** | **7** | **175\\.639** || **Xe** | **8** | **153\\.081** || **Cs\\_sv** | **9** | **220\\.143** || **Ba\\_sv** | **10** | **187\\.204** || **La** | **11** | **219\\.271** || La\\_s | 9 | 136\\.553 || **Ce** | **12** | **300\\.014** || Ce\\_3 | 11 | 181\\.336 || Ce\\_s | 10 | 169\\.178 || Pr | 13 | 252\\.521 || **Pr\\_3** | **11** | **181\\.693** || Nd | 14 | 253\\.289 || **Nd\\_3** | **11** | **182\\.593** || Pm | 15 | 258\\.471 || **Pm\\_3** | **11** | **183\\.955** || Sm | 16 | 255\\.347 || Sm\\_2 | 10 | 183\\.22 || **Sm\\_3** | **11** | **184\\.729** || Eu | 17 | 249\\.776 || **Eu\\_2** | **8** | **99\\.303** || Gd | 18 | 256\\.563 || **Gd\\_3** | **9** | **154\\.375** || **Tb\\_3** | **9** | **155\\.659** || **Dy\\_3** | **9** | **155\\.765** || **Ho\\_3** | **9** | **154\\.194** || **Er\\_3** | **9** | **155\\.099** || Tm | 23 | 257\\.516 || **Tm\\_3** | **9** | **154\\.002** || Yb | 24 | 291\\.902 || **Yb\\_2** | **8** | **112\\.547** || **Lu\\_3** | **9** | **155\\.066** || Hf | 4 | 220\\.361 || **Hf\\_pv** | **10** | **220\\.361** || Ta | 5 | 223\\.688 || **Ta\\_pv** | **11** | **223\\.688** || W | 6 | 223\\.072 || W\\_pv | 12 | 223\\.072 || **Re** | **7** | **226\\.223** || Re\\_pv | 13 | 226\\.223 || **Os** | **8** | **228\\.022** || Os\\_pv | 14 | 228\\.022 || **Ir** | **9** | **210\\.865** || **Pt** | **10** | **230\\.277** || **Au** | **11** | **229\\.938** || **Hg** | **12** | **233\\.196** || Tl | 3 | 90\\.216 || **Tl\\_d** | **13** | **237\\.04** || Pb | 4 | 98\\.004 || **Pb\\_d** | **14** | **237\\.829** || Bi | 5 | 105\\.043 || **Bi\\_d** | **15** | **242\\.843** || **Ac** | **11** | **169\\.923** || Ac\\_s | 9 | 119\\.913 || **Th** | **12** | **247\\.429** || Th\\_s | 10 | 169\\.492 || **Pa** | **13** | **252\\.303** || Pa\\_s | 11 | 193\\.575 || **U** | **14** | **252\\.603** || U\\_s | 14 | 209\\.102 || **Np** | **15** | **254\\.354** || Np\\_s | 15 | 210\\.883 || **Pu** | **16** | **254\\.444** || Pu\\_s | 16 | 211\\.377 | | List of PBE potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **H** | **1** | **250\\.0** || H.5 | 0\\.5 | 250\\.0 || H.75 | 0\\.75 | 250\\.0 || H1\\.25 | 1\\.25 | 250\\.0 || H1\\.5 | 1\\.5 | 250\\.0 || H\\_h | 1 | 700\\.0 || **He** | **2** | **478\\.896** || Li | 1 | 140\\.0 || **Li\\_sv** | **3** | **499\\.034** || Li\\_sv2 | 3 | 555\\.106 || **Be** | **2** | **247\\.544** || Be\\_sv | 4 | 308\\.75 || **B** | **3** | **318\\.606** || B\\_h | 3 | 700\\.0 || B\\_s | 3 | 269\\.245 || **C** | **4** | **400\\.0** || C\\_d | 4 | 413\\.992 || C\\_h | 4 | 700\\.0 || C\\_h\\_nr | 4 | 741\\.684 || C\\_s | 4 | 273\\.901 || runelements | 4 | 400\\.0 || **N** | **5** | **400\\.0** || N\\_h | 5 | 700\\.0 || N\\_s | 5 | 279\\.68 || N\\_vs | 5 | 279\\.68 || **O** | **6** | **400\\.0** || O\\_h | 6 | 700\\.0 || O\\_s | 6 | 282\\.841 || O\\_sv | 8 | 1421\\.493 || **F** | **7** | **400\\.0** || F\\_h | 7 | 700\\.0 || F\\_s | 7 | 289\\.825 || **Ne** | **8** | **343\\.606** || Na | 1 | 101\\.968 || **Na\\_pv** | **7** | **259\\.561** || Na\\_sv | 9 | 700\\.0 || **Mg** | **2** | **210\\.012** || Mg\\_new | 2 | 126\\.143 || Mg\\_pv | 8 | 403\\.929 || Mg\\_pv.old | 8 | 265\\.574 || Mg\\_sv | 10 | 495\\.223 || **Al** | **3** | **240\\.3** || **Si** | **4** | **245\\.345** || Si\\_h | 4 | 380\\.146 || Si\\_h\\_old | 4 | 380\\.146 || Si\\_nopc | 4 | 245\\.345 || runelements\\_PBE0 | 4 | 245\\.345 || **P** | **5** | **270\\.0** || P\\_h | 5 | 390\\.202 || **S** | **6** | **280\\.0** || S\\_h | 6 | 402\\.436 || **Cl** | **7** | **280\\.0** || Cl\\_h | 7 | 409\\.136 || **Ar** | **8** | **266\\.393** || K\\_pv | 7 | 116\\.731 || **K\\_sv** | **9** | **259\\.216** || Ca | 2 | 102\\.755 || Ca\\_pv | 8 | 119\\.554 || **Ca\\_sv** | **10** | **266\\.586** || Sc | 3 | 154\\.763 || **Sc\\_sv** | **11** | **222\\.664** || Sc\\_sv\\_h | 11 | 380\\.696 || Ti | 4 | 178\\.33 || Ti\\_pv | 10 | 222\\.338 || **Ti\\_sv** | **12** | **274\\.574** || Ti\\_sv\\_h | 12 | 388\\.698 || Ti\\_sv\\_new | 12 | 274\\.61 || Ti\\_sv\\_new2 | 12 | 274\\.61 || runelements2 | 12 | 863\\.342 || V | 5 | 192\\.543 || V\\_pv | 11 | 263\\.675 || **V\\_sv** | **13** | **263\\.675** || V\\_sv\\_h | 13 | 390\\.664 || V\\_sv\\_new | 13 | 263\\.673 || Cr | 6 | 227\\.082 || **Cr\\_pv** | **12** | **265\\.683** || Cr\\_pv\\_new | 12 | 265\\.681 || Cr\\_sv | 14 | 395\\.471 || Cr\\_sv\\_new | 14 | 395\\.471 || Mn | 7 | 269\\.865 || **Mn\\_pv** | **13** | **269\\.865** || Mn\\_pv\\_new | 13 | 269\\.864 || Mn\\_sv | 15 | 387\\.187 || **Fe** | **8** | **267\\.883** || Fe\\_pv | 14 | 293\\.238 || Fe\\_pv\\_new | 14 | 293\\.238 || Fe\\_sv | 16 | 390\\.558 || Fe\\_sv\\_h | 16 | 547\\.365 || **Co** | **9** | **267\\.969** || Co\\_new | 9 | 267\\.968 || Co\\_sv | 17 | 390\\.362 || **Ni** | **10** | **269\\.533** || Ni\\_new | 10 | 269\\.532 || Ni\\_pv | 16 | 367\\.945 || **Cu** | **11** | **273\\.214** || Cu\\_f | 11 | 295\\.446 || Cu\\_new | 11 | 295\\.446 || Cu\\_pv | 17 | 368\\.605 || Cu\\_pvf | 17 | 368\\.648 || **Zn** | **12** | **276\\.727** || Zn\\_pv | 18 | 376\\.607 || Ga | 3 | 134\\.678 || **Ga\\_d** | **13** | **282\\.697** || Ga\\_h | 13 | 404\\.601 || Ga\\_s | 3 | 83\\.836 || Ge | 4 | 173\\.807 || **Ge\\_d** | **14** | **310\\.294** || Ge\\_d3 | 14 | 226\\.106 || Ge\\_h | 14 | 410\\.425 || **As** | **5** | **208\\.68** || As\\_d | 15 | 288\\.651 || **Se** | **6** | **211\\.534** || **Br** | **7** | **216\\.264** || **Kr** | **8** | **185\\.26** || Rb\\_pv | 7 | 121\\.919 || **Rb\\_sv** | **9** | **220\\.022** || **Sr\\_sv** | **10** | **229\\.282** || **Y\\_sv** | **11** | **211\\.641** || Zr | 4 | 154\\.632 || **Zr\\_sv** | **12** | **229\\.839** || Zr\\_sv\\_new | 12 | 229\\.898 || Nb\\_pv | 11 | 208\\.608 || **Nb\\_sv** | **13** | **293\\.235** || Nb\\_sv\\_new | 13 | 293\\.235 || Mo | 6 | 224\\.584 || Mo\\_pv | 12 | 224\\.584 || Mo\\_pv\\_new | 12 | 224\\.584 || **Mo\\_sv** | **14** | **242\\.676** || Tc | 7 | 228\\.694 || Tc\\_new | 7 | 228\\.694 || **Tc\\_pv** | **13** | **228\\.699** || Tc\\_pv\\_new | 13 | 263\\.523 || Ru | 8 | 213\\.276 || Ru\\_new | 8 | 213\\.271 || **Ru\\_pv** | **14** | **230\\.429** || Ru\\_pv\\_new | 14 | 240\\.049 || Ru\\_sv | 16 | 318\\.855 || Rh | 9 | 229\\.0 || Rh\\_new | 9 | 228\\.996 || **Rh\\_pv** | **15** | **271\\.47** || Rh\\_pv\\_new | 15 | 247\\.408 || **Pd** | **10** | **250\\.925** || Pd\\_new | 10 | 250\\.925 || Pd\\_pv | 16 | 271\\.098 || Pd\\_pv\\_new | 16 | 250\\.925 || Pd\\_vnew | 10 | 250\\.925 || **Ag** | **11** | **249\\.846** || Ag\\_new | 11 | 249\\.844 || Ag\\_pv | 17 | 297\\.865 || **Cd** | **12** | **274\\.342** || In | 3 | 95\\.934 || **In\\_d** | **13** | **239\\.218** || Sn | 4 | 103\\.236 || **Sn\\_d** | **14** | **241\\.09** || **Sb** | **5** | **172\\.037** || **Te** | **6** | **174\\.982** || Te\\_rel | 6 | 174\\.979 || **I** | **7** | **175\\.647** || **Xe** | **8** | **153\\.098** || **Cs\\_sv** | **9** | **220\\.318** || **Ba\\_sv** | **10** | **187\\.21** || **La** | **11** | **219\\.313** || La\\_s | 9 | 136\\.552 || **Ce** | **12** | **273\\.042** || Ce\\_3 | 11 | 181\\.286 || Ce\\_h | 12 | 299\\.9 || Pr | 13 | 272\\.941 || **Pr\\_3** | **11** | **182\\.312** || Nd | 14 | 253\\.189 || **Nd\\_3** | **11** | **182\\.546** || Pm | 15 | 258\\.627 || **Pm\\_3** | **11** | **183\\.908** || Sm | 16 | 257\\.515 || **Sm\\_3** | **11** | **177\\.087** || Eu | 17 | 249\\.668 || **Eu\\_2** | **8** | **99\\.304** || Eu\\_3 | 9 | 129\\.057 || Gd | 18 | 256\\.472 || **Gd\\_3** | **9** | **154\\.348** || Tb | 19 | 264\\.824 || **Tb\\_3** | **9** | **155\\.628** || Dy | 20 | 255\\.467 || **Dy\\_3** | **9** | **155\\.729** || Ho | 21 | 257\\.168 || **Ho\\_3** | **9** | **154\\.153** || Er | 22 | 298\\.116 || Er\\_2 | 8 | 119\\.75 || **Er\\_3** | **9** | **155\\.053** || Tm | 23 | 257\\.419 || **Tm\\_3** | **9** | **149\\.221** || Yb | 24 | 253\\.028 || **Yb\\_2** | **8** | **112\\.543** || Yb\\_2\\_n | 10 | 144\\.685 || Lu | 25 | 255\\.695 || **Lu\\_3** | **9** | **155\\.009** || Hf | 4 | 220\\.333 || **Hf\\_pv** | **10** | **220\\.342** || Hf\\_sv | 12 | 237\\.444 || Ta | 5 | 223\\.667 || **Ta\\_pv** | **11** | **223\\.675** || W | 6 | 223\\.057 || W\\_pv | 12 | 223\\.065 || W\\_pv\\_new | 12 | 223\\.057 || **Re** | **7** | **226\\.216** || Re\\_pv | 13 | 226\\.223 || **Os** | **8** | **228\\.022** || Os\\_pv | 14 | 228\\.022 || **Ir** | **9** | **210\\.87** || **Pt** | **10** | **230\\.283** || Pt\\_ZORA | 10 | 230\\.281 || Pt\\_new | 10 | 230\\.283 || Pt\\_pv | 16 | 294\\.607 || Pt\\_pv\\_ZORA | 16 | 294\\.604 || **Au** | **11** | **229\\.948** || Au\\_new | 11 | 229\\.943 || **Hg** | **12** | **233\\.214** || Tl | 3 | 90\\.14 || **Tl\\_d** | **13** | **237\\.063** || Pb | 4 | 97\\.973 || **Pb\\_d** | **14** | **237\\.846** || Pb\\_d\\_rel | 14 | 237\\.809 || Pb\\_d\\_rel2 | 14 | 237\\.809 || Bi | 5 | 105\\.037 || **Bi\\_d** | **15** | **242\\.851** || Bi\\_pv | 21 | 309\\.187 || Po | 6 | 159\\.707 || **Po\\_d** | **16** | **264\\.565** || **At** | **7** | **161\\.43** || At\\_d | 17 | 266\\.251 || **Rn** | **8** | **152\\.121** || **Fr\\_sv** | **9** | **214\\.54** || **Ra\\_sv** | **10** | **237\\.367** || **Ac** | **11** | **172\\.237** || **Th** | **12** | **247\\.449** || Th\\_s | 10 | 169\\.492 || **Pa** | **13** | **252\\.316** || Pa\\_s | 11 | 193\\.576 || **U** | **14** | **252\\.616** || U\\_s | 14 | 209\\.069 || **Np** | **15** | **254\\.369** || Np\\_s | 15 | 210\\.851 || **Pu** | **16** | **254\\.458** || Pu\\_h | 16 | 444\\.783 || Pu\\_s | 16 | 211\\.344 || **Am** | **17** | **255\\.875** | #### GW potentials | List of LDA potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **H\\_GW** | **1** | **400\\.725** || H\\_h\\_GW | 1 | 822\\.759 || H\\_nc\\_GW | 1 | 1000\\.0 || **He\\_GW** | **2** | **404\\.806** || Li\\_AE\\_GW | 3 | 433\\.253 || Li\\_AE\\_GW2 | 3 | 509\\.283 || Li\\_GW | 1 | 112\\.417 || **Li\\_sv\\_GW** | **3** | **433\\.253** || Li\\_sv\\_GW\\_ | 3 | 433\\.253 || Be\\_AE\\_GW | 4 | 536\\.216 || Be\\_GW | 2 | 247\\.951 || **B\\_GW** | **3** | **318\\.762** || **C\\_GW** | **4** | **413\\.992** || C\\_f\\_GW | 4 | 742\\.464 || C\\_h\\_GW | 4 | 742\\.464 || C\\_nc\\_GW | 4 | 1261\\.234 || **N\\_GW** | **5** | **420\\.681** || N\\_s\\_GW | 5 | 296\\.222 || **O\\_GW** | **6** | **414\\.315** || O\\_h\\_GW | 6 | 765\\.442 || O\\_s\\_GW | 6 | 300\\.418 || **F\\_GW** | **7** | **487\\.335** || F\\_d\\_GW | 7 | 487\\.335 || F\\_h\\_GW | 7 | 772\\.351 || **Ne\\_GW** | **8** | **400\\.0** || Ne\\_GW2 | 8 | 317\\.594 || Na\\_GW | 1 | 81\\.642 || Na\\_pv\\_GW | 7 | 259\\.494 || **Na\\_sv\\_GW** | **9** | **260\\.372** || Mg\\_GW | 2 | 126\\.671 || Mg\\_pv\\_GW | 8 | 403\\.538 || Mg\\_pv\\_parsv\\_GW | 8 | 454\\.933 || **Mg\\_sv\\_GW** | **10** | **473\\.54** || Al\\_d\\_GW | 3 | 240\\.957 || Al\\_sv\\_GW | 11 | 411\\.007 || Si\\_d\\_GW | 4 | 245\\.704 || Si\\_d\\_GW\\_nr | 4 | 245\\.702 || Si\\_f\\_GW | 4 | 245\\.704 || Si\\_sv\\_GW | 12 | 546\\.548 || Si\\_sv\\_GW\\_ | 12 | 475\\.15 || Si\\_sv\\_GW\\_\\_ | 12 | 546\\.548 || Si\\_sv\\_GW\\_nr | 12 | 475\\.153 || P\\_d\\_GW | 5 | 255\\.155 || S\\_d\\_GW | 6 | 258\\.602 || Cl\\_d\\_GW | 7 | 262\\.25 || **Ar\\_GW** | **8** | **266\\.101** || **Ti\\_sv\\_GW** | **12** | **312\\.205** || Mn\\_GW | 7 | 278\\.537 || Mn\\_pv\\_GW | 13 | 352\\.359 || **Mn\\_sv\\_GW** | **15** | **357\\.618** || Fe\\_GW | 8 | 321\\.044 || Fe\\_pv\\_GW | 14 | 365\\.183 || **Fe\\_sv\\_GW** | **16** | **402\\.658** || Fe\\_sv\\_GW\\_f | 16 | 443\\.614 || Co\\_GW | 9 | 323\\.447 || Co\\_pv\\_GW | 15 | 364\\.275 || **Co\\_sv\\_GW** | **17** | **363\\.483** || Ni\\_GW | 10 | 357\\.352 || Ni\\_pv\\_GW | 16 | 367\\.726 || **Ni\\_sv\\_GW** | **18** | **485\\.721** || Cu\\_GW | 11 | 417\\.032 || Cu\\_GW\\_h | 11 | 971\\.8 || Cu\\_pv\\_GW | 17 | 466\\.991 || Zn\\_GW | 12 | 360\\.353 || Zn\\_GW.old | 12 | 401\\.745 || Zn\\_GW2 | 12 | 556\\.955 || Zn\\_pv\\_GW | 18 | 401\\.745 || Zn\\_pv\\_GW.old | 18 | 499\\.462 || **Zn\\_sv\\_GW** | **20** | **499\\.462** || Zn\\_sv\\_GW.old | 20 | 1708\\.968 || Zn\\_sv\\_GW\\_ | 20 | 499\\.462 || Ga\\_GW | 3 | 134\\.8 || **Ga\\_d\\_GW** | **13** | **369\\.987** || Ga\\_d\\_GW.old | 13 | 333\\.963 || Ga\\_pv\\_GW | 19 | 422\\.752 || Ga\\_pv\\_GW.nrel | 19 | 422\\.391 || Ga\\_pv\\_GW.old | 19 | 449\\.579 || Ga\\_sv\\_GW | 21 | 503\\.451 || Ga\\_sv\\_GW.old | 21 | 449\\.579 || Ga\\_sv\\_GW2 | 21 | 642\\.887 || Ge\\_GW | 4 | 173\\.969 || **Ge\\_d\\_GW** | **14** | **310\\.448** || **As\\_GW** | **5** | **208\\.87** || As\\_GW\\_n | 5 | 208\\.87 || As\\_d2\\_GW | 15 | 752\\.859 || As\\_d\\_GW | 15 | 863\\.991 || **Se\\_GW** | **6** | **211\\.602** || **Kr\\_GW** | **8** | **185\\.392** || **Zr\\_sv\\_GW** | **12** | **307\\.802** || Ru\\_GW | 8 | 230\\.359 || Ru\\_f\\_GW | 8 | 268\\.875 || Ru\\_pv\\_GW | 14 | 239\\.907 || Rh\\_GW | 9 | 247\\.321 || Rh\\_f\\_GW | 9 | 247\\.321 || Rh\\_pv\\_GW | 15 | 247\\.321 || Pd\\_GW | 10 | 250\\.832 || Pd\\_f\\_GW | 10 | 250\\.832 || Ag\\_GW | 11 | 249\\.752 || Ag\\_f\\_GW | 11 | 249\\.752 || Cd\\_GW | 12 | 361\\.653 || Cd\\_GW.old | 12 | 274\\.265 || Cd\\_f\\_GW | 12 | 217\\.846 || Cd\\_pv\\_GW | 18 | 396\\.576 || **Cd\\_sv\\_GW** | **20** | **650\\.91** || **In\\_d\\_GW** | **13** | **278\\.582** || Sn\\_GW | 4 | 103\\.318 || Sb\\_GW | 5 | 172\\.301 || **Sb\\_d\\_GW** | **15** | **263\\.147** || **Te\\_GW** | **6** | **175\\.144** || **Xe\\_GW** | **8** | **179\\.528** || **Hf\\_sv\\_GW** | **12** | **296\\.646** || Pt\\_f\\_GW | 10 | 248\\.657 || **Pb\\_d\\_GW** | **14** | **237\\.793** || **Bi\\_d\\_GW** | **15** | **242\\.856** | | List of PBE potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || **C\\_GW** | **4** | **413\\.992** || N\\_s\\_GW | 5 | 296\\.495 || **O\\_GW** | **6** | **414\\.635** || O\\_s\\_GW | 6 | 300\\.688 || F\\_d\\_GW | 7 | 487\\.698 || Mg\\_pv\\_GW | 8 | 403\\.929 || Si\\_d\\_GW | 4 | 245\\.345 || Si\\_d\\_GW\\_nr | 4 | 245\\.338 || Si\\_pv\\_GW | 10 | 475\\.096 || Si\\_sv\\_GW | 12 | 475\\.096 || Si\\_sv\\_GW\\_nr | 12 | 475\\.101 || **Ti\\_sv\\_GW** | **12** | **312\\.571** || **Ga\\_d\\_GW** | **13** | **369\\.848** || Ga\\_sv\\_GW | 21 | 503\\.418 || **Ge\\_d\\_GW** | **14** | **310\\.294** || Ge\\_d\\_GW2 | 14 | 339\\.13 || Ge\\_d\\_GW\\_ref | 14 | 572\\.01 || **As\\_GW** | **5** | **208\\.702** || As\\_d\\_GW | 15 | 346\\.172 || **Se\\_GW** | **6** | **211\\.555** || **Zr\\_sv\\_GW** | **12** | **307\\.836** || Sn\\_GW | 4 | 103\\.236 || Eu\\_GW | 17 | 603\\.254 || **Hf\\_sv\\_GW** | **12** | **317\\.394** | ### Ultrasoft pseudopotentials for LDA and PW91 (2002\\) Ultrasoft pseudo potentials for LDA and PW91 (dated 2002\\-08\\-20 and 2002\\-04\\-08, respectively). These files are outdated, not supported and only distributed as is. Some VASP feature might yield undesired results with these files (e.g. METAGGA). | List of LDA potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || H.75 | 0\\.75 | 200\\.0 || H1\\.25 | 1\\.25 | 200\\.0 || H\\_200eV | 1 | 200\\.0 || H\\_soft | 1 | 150\\.0 || Li | 1 | 76\\.427 || Li\\_h | 1 | 200\\.0 || Li\\_pv | 1 | 200\\.0 || **Be** | **2** | **251\\.805** || **B** | **3** | **257\\.148** || B\\_s | 3 | 207\\.526 || **C** | **4** | **286\\.567** || C\\_s | 4 | 211\\.061 || **N** | **5** | **347\\.853** || N\\_s | 5 | 224\\.546 || **O** | **6** | **395\\.7** || O\\_s | 6 | 269\\.946 || **F** | **7** | **424\\.54** || F\\_s | 7 | 272\\.497 || **Ne** | **8** | **359\\.508** || Na | 1 | 49\\.003 || Na\\_h | 1 | 165\\.481 || **Na\\_pv** | **7** | **216\\.702** || **Mg** | **2** | **106\\.255** || Mg\\_h | 2 | 250\\.0 || Mg\\_pv | 8 | 366\\.368 || **Al** | **3** | **129\\.206** || Al\\_h | 3 | 250\\.0 || **Si** | **4** | **150\\.544** || Si\\_h | 4 | 300\\.0 || **P** | **5** | **173\\.366** || **S** | **6** | **197\\.787** || **Cl** | **7** | **219\\.242** || **Ar** | **8** | **215\\.808** || K | 1 | 70\\.923 || K\\_pv | 7 | 146\\.685 || K\\_s | 1 | 35\\.993 || Ca | 2 | 104\\.743 || Ca\\_pv | 8 | 400\\.0 || Sc | 3 | 150\\.21 || Sc\\_pv | 9 | 178\\.616 || Ti | 4 | 181\\.353 || Ti\\_pv | 10 | 222\\.444 || V | 5 | 211\\.721 || V\\_pv | 11 | 263\\.722 || Cr | 6 | 227\\.21 || Mn | 7 | 227\\.24 || **Mn\\_pv** | **13** | **227\\.24** || **Fe** | **8** | **237\\.587** || **Co** | **9** | **236\\.542** || **Ni** | **10** | **241\\.683** || **Cu** | **11** | **233\\.781** || **Zn** | **12** | **209\\.61** || Ga | 3 | 129\\.849 || **Ga\\_d** | **13** | **213\\.675** || Ge | 4 | 139\\.215 || **As** | **5** | **144\\.267** || **Se** | **6** | **155\\.091** || **Br** | **7** | **165\\.656** || **Kr** | **8** | **167\\.754** || Rb | 1 | 63\\.553 || Rb\\_pv | 7 | 122\\.21 || Rb\\_s | 1 | 31\\.936 || Sr | 2 | 85\\.927 || Sr\\_pv | 8 | 119\\.124 || Y | 3 | 119\\.285 || Y\\_pv | 9 | 119\\.285 || Zr | 4 | 149\\.994 || Zr\\_pv | 10 | 149\\.994 || Nb | 5 | 174\\.786 || Nb\\_pv | 11 | 174\\.786 || Mo | 6 | 186\\.479 || Mo\\_pv | 12 | 186\\.479 || Tc | 7 | 195\\.876 || Ru | 8 | 203\\.565 || Rh | 9 | 205\\.46 || **Pd** | **10** | **198\\.955** || **Ag** | **11** | **180\\.602** || **Cd** | **12** | **167\\.891** || In | 3 | 91\\.885 || **In\\_d** | **13** | **151\\.593** || Sn | 4 | 106\\.396 || **Sn\\_d** | **14** | **175\\.475** || **Sb** | **5** | **106\\.592** || **Te** | **6** | **114\\.866** || **I** | **7** | **122\\.098** || **Xe** | **8** | **124\\.672** || Cs | 1 | 47\\.984 || Cs\\_pv | 7 | 106\\.139 || Ba\\_pv | 8 | 101\\.184 || Hf | 4 | 149\\.521 || W | 6 | 188\\.254 || **Re** | **7** | **193\\.9** || **Os** | **8** | **201\\.567** || **Ir** | **9** | **198\\.239** || **Pt** | **10** | **191\\.383** || **Au** | **11** | **179\\.692** || **Hg** | **12** | **158\\.977** || **Tl\\_d** | **13** | **177\\.499** || Bi | 5 | 99\\.087 || Pb | 4 | 88\\.444 || **Pb\\_d** | **14** | **144\\.342** || **Bi\\_d** | **15** | **242\\.856** | | List of PW91 potentials | | || --- | --- | --- || Potential name | Number of valence electrons | ENAMX \\[eV] || H\\_200eV | 1 | 200\\.0 || H\\_soft | 1 | 150\\.0 || Li | 1 | 76\\.254 || Li\\_h | 1 | 250\\.0 || Li\\_pv | 1 | 250\\.0 || **Be** | **2** | **251\\.408** || **B** | **3** | **257\\.17** || B\\_s | 3 | 207\\.644 || **C** | **4** | **286\\.744** || C\\_s | 4 | 211\\.293 || **N** | **5** | **348\\.097** || N\\_s | 5 | 224\\.806 || **O** | **6** | **395\\.994** || O\\_s | 6 | 270\\.222 || **F** | **7** | **424\\.865** || F\\_s | 7 | 272\\.744 || **Ne** | **8** | **359\\.508** || Na | 1 | 48\\.686 || Na\\_h | 1 | 165\\.08 || **Na\\_pv** | **7** | **300\\.769** || **Mg** | **2** | **106\\.148** || Mg\\_h | 2 | 250\\.0 || Mg\\_pv | 8 | 365\\.887 || **Al** | **3** | **129\\.208** || Al\\_h | 3 | 250\\.0 || **Si** | **4** | **150\\.615** || Si\\_h | 4 | 300\\.0 || **P** | **5** | **173\\.498** || **S** | **6** | **197\\.97** || **Cl** | **7** | **219\\.471** || **Ar** | **8** | **215\\.808** || K | 1 | 70\\.923 || K\\_pv | 7 | 140\\.0 || Ca | 2 | 104\\.434 || Ca\\_pv | 8 | 300\\.0 || Sc | 3 | 150\\.002 || Sc\\_pv | 9 | 178\\.471 || Ti | 4 | 181\\.203 || Ti\\_pv | 10 | 222\\.373 || V | 5 | 211\\.612 || V\\_pv | 11 | 243\\.767 || Cr | 6 | 227\\.117 || Mn | 7 | 227\\.152 || **Fe** | **8** | **237\\.51** || **Co** | **9** | **236\\.473** || **Ni** | **10** | **241\\.622** || **Cu** | **11** | **233\\.729** || **Zn** | **12** | **209\\.545** || Ga | 3 | 129\\.795 || **Ga\\_d** | **13** | **213\\.598** || Ge | 4 | 139\\.187 || **As** | **5** | **144\\.302** || **Se** | **6** | **155\\.175** || **Br** | **7** | **165\\.786** || **Kr** | **8** | **167\\.754** || Rb | 1 | 63\\.093 || Rb\\_pv | 7 | 121\\.987 || Sr | 2 | 85\\.674 || Sr\\_pv | 8 | 118\\.811 || Y | 3 | 119\\.149 || Y\\_pv | 9 | 119\\.149 || Zr | 4 | 149\\.928 || Zr\\_pv | 10 | 149\\.927 || Nb | 5 | 174\\.766 || Nb\\_pv | 11 | 174\\.766 || Mo | 6 | 186\\.486 || Mo\\_pv | 12 | 186\\.486 || Tc | 7 | 195\\.904 || Ru | 8 | 203\\.611 || Rh | 9 | 205\\.518 || **Pd** | **10** | **199\\.02** || **Ag** | **11** | **180\\.67** || **Cd** | **12** | **167\\.929** || In | 3 | 91\\.829 || **In\\_d** | **13** | **151\\.604** || Sn | 4 | 106\\.334 || **Sn\\_d** | **14** | **175\\.467** || **Sb** | **5** | **106\\.59** || **Te** | **6** | **114\\.902** || **I** | **7** | **122\\.175** || **Xe** | **8** | **124\\.672** || Cs | 1 | 47\\.697 || Cs\\_pv | 7 | 101\\.438 || Ba\\_pv | 8 | 99\\.451 || Hf | 4 | 149\\.377 || Ta | 5 | 174\\.569 || W | 6 | 188\\.192 || **Re** | **7** | **193\\.873** || **Os** | **8** | **201\\.569** || **Ir** | **9** | **198\\.27** || **Pt** | **10** | **191\\.44** || **Au** | **11** | **179\\.77** || **Hg** | **12** | **159\\.06** || **Tl\\_d** | **13** | **177\\.536** || Bi | 5 | 99\\.073 || Pb | 4 | 88\\.425 || **Pb\\_d** | **14** | **144\\.354** | ### LDA \\& PBE, 5\\.2 \\& 5\\.4 (original univie release version) | **Mind:** *LDA \\& PBE, 5\\.2 \\& 5\\.4 (original univie release version)* potentials are equivalent to the potpaw.52 and potpaw.54 sets, other than some TITLE strings and missing hash keys. Thus, they are not listed explicitly here. Use them only if you need strictly identical files. || --- | Different variants specified by the suffix------------------------------------------ For most elements different variants of POTCAR files exist for each element within a specific set (e.g. potpaw\\_PBE.64\\). The different POTCAR vartiations are distinguished by their suffixes. Not all variants are available for every element or in all pseudopotential sets. | Suffix | Explanation | Example || --- | --- | --- || **\\_s** | This suffix indicates a soft potential, with a larger core radius and a lower requirement for the plane\\-wave energy cutoff. Although computation time is significantly reduced, transferability and accuracy are compromised to some extent. | The O potential has a core radius of 1\\.52 atomic units (a.u.) and ENMAX of 400 electron Volts (eV). The O\\_s potential has a core radius of 1\\.85 a.u. and a cutoff of 282\\.9 eV. || **\\_h** | This suffix signifies a hard potential, with a smaller core radius and a higher requirement for the plane\\-wave energy cutoff. Although this type of potentials increases computational cost, it might be required for some systems, particularly when dealing with short bonds. Additionally, hard potentials tend to be more transferable than soft ones. | The O\\_h potential has a core radius of 1\\.1 a.u. and ENMAX is set to 765\\.5 eV. || **\\_pv** | Semicore *p* states are considered valence states. Additionally, these types of potentials are a bit harder. Computational cost increases, but accuracy and transferability as well. | The Ti potential has four valence electrons, two in the 3*d* shell, and two in the 4*s* shell. Ti\\_pv adds six electrons in the 3*p* shell. || **\\_sv** | Semicore *p* and *s* states are considered valence states. Additionally, these types of potentials are harder than those without a suffix. Computational cost increases, but accuracy and transferability as well. | Ti\\_sv adds two more electrons, so now we have a 3*s*23*p*63*d*24*s*2 configuration with 12 total electrons || **\\_d** | Semicore *d* states are considered valence states. Additionally these type of potentials are a bit harder. Computational cost increases, but accuracy and transferability as well. | The Ge potential has four valence electrons, two in the 4*s* shell, and two in the 4*p* shell. Ge\\_d adds ten electrons in the *3d* shell. || **\\_2** or **\\_3** | Pseudopotentials with an integer suffix denote a specific valence state. These potentials are only provided for the Lanthanides. Some 4*f* electrons for these potentials are put in the frozen core, although they are higher in energy than other valence states. Be careful when using these potentials and read the section about lanthanides with fixed valence beforehand. | The Er potential has 22 valence electrons with the configuration 4*f*125*s*25*p*66*s*2 and an energy cutoff of \\~350 eV. Er\\_2 has 8 valence electrons with the configuration 5*p*66*s*2 and a recommended cutoff energy of \\~120 eV, while Er\\_3 has 9 valence electrons and the configuration 5*p*65*d*16*s*2 and a cutoff of \\~155 eV. || **\\_AE** | These potentials are only provided for H, He, and Li. They are very hard and contain all electrons (AE). These potentials are optimized to reproduce the wave functions in the atomic core region as well as possible. | Both the He and the HE\\_AE pseudopotentials contain two electrons, but the \\_AE variant has an extremely small core radius of 0\\.6 a.u. (compared to 1\\.1 a.u. for He), and ENMAX of \\~2135 eV, and EAUG of \\~2900 eV. || **\\_GW** | These potentials are optimized for calculations requiring a large number of unoccupied states well above the Fermi level. This is achieved by using different projectors and taking care to reproduce the all\\-electron scattering properties for high energies. They are superior for excited\\-state properties and any calculation considering electron\\-electron correlation like GW, RPA, BSE, and MP2\\. There are some results that indicate that the \\_GW potentials are also more accurate for ground\\-state\\-DFT calculations[\\[3]](#cite_note-bosoni:natphysrev:2023-3), but the results should be very comparable with the standard potentials in most cases. Note that the \\_GW suffix is the only one that is often combined with other suffixes. | The Ge and the Ge\\_GW potential do not differ in core\\-radius, recommended plane\\-wave\\-energy cutoff, or the reference configuration of the atom. However, the partial waves and projector functions used in the generation of the potential are different. | Related tags and sections------------------------- Pseudopotentials, POTCAR, Pseudopotential basics\"), Projector\\-augmented\\-wave formalism Simple instructions to set up a POTCAR with the correct format: Prepare a POTCAR Guide on how to check which flavor of pseudopotential is appropriate for a specific calculation: Choosing pseudopotentials"}
{"file_name": "AMGGAC.md", "content": "AMGGAC= \\[real]n| Default: **AMGGAC** | \\= 1\\.0 | if LHFCALC    \\=   {\\\\displaystyle \\=}  .FALSE. or AEXX    \u2260   {\\\\displaystyle \\\eq }  1\\.0 || --- | --- | --- ||  | \\= 0\\.0 | if LHFCALC    \\=   {\\\\displaystyle \\=}  .TRUE. and AEXX    \\=   {\\\\displaystyle \\=}  1\\.0 | Description: AMGGAC is a parameter that multiplies the meta\\-GGA correlation functional (available as of VASP.6\\.4\\.0\\).  --- AMGGAC can be used as the fraction of meta\\-GGA correlation in a Hartree\\-Fock/DFT hybrid functional.  | **Mind:** Note the difference with respect to AGGAC: AMGGAC multiplies the whole meta\\-GGA correlation functional, while AGGAC multiplies only the gradient\\-correction term of a GGA correlation functional. || --- |"}
{"file_name": "ML_REG.md", "content": "This file contains the regression results of the force field training compared to the ab\\-initio training data in the last training step.This file is written for `ML_MODE = train, select`. A sample output should look like the following:  ```****************************************************************************************************     Results at         52 MD step.====================================================================================================     Total energies (eV)----------------------------------------------------------------------------------------------------       -16.991157   -17.523764       -17.130082   -17.637286       -17.327379   -17.802581              ...          ...====================================================================================================     Forces (eV ang.^-1)----------------------------------------------------------------------------------------------------         1.180622     0.723282         0.136526     0.018732        -0.033733     0.103882         0.888107     0.516528        -0.148552    -0.401311         0.159014     0.315306         0.689279     0.218246         0.718439     0.750706              ...          ...====================================================================================================     Stress (kbar)----------------------------------------------------------------------------------------------------       208.393665   178.750015        15.421420     8.376722        -5.264501    -3.403226              ...          ...  ``` The first column contains the ab\\-initio data. The second column contains the fitted data.  * `Total energies (eV)`: The number of lines corresponds to the number of training structures (`The number of configurations` in the corresponding ML\\_ABN file).* `Forces (eV ang.^-1)`: Contains 3 lines (Cartesian directions) for each atom in each training structure. The direction varies first, then the atoms, and last the training structures.* `Stress (kbar)`: Contains 6 lines for the tensor components of each training structure.  ---"}
{"file_name": "VOSKOWN.md", "content": "VOSKOWN= 0 \\| 1   Default: **VOSKOWN** \\= 0nDescription: Determines whether Vosko\\-Wilk\\-Nusair interpolation is used or not.  --- This flag is not relevant for most \"modern\" gradient corrected functionals, such as PBE or PBEsol. For the LDA and some \"older\" gradient corrected functionals such as PW91, VASP interpolates the correlation energy from the non\\-spinpolarized to the fully spinpolarized case in the same way as the exchange energy (Barth\\-Hedin spin interpolation[\\[1]](#cite_note-barth:jpc:1972-1). If VOSKOWN is set to 1, the interpolation formula according to Vosko, Wilk and Nusair[\\[2]](#cite_note-vosko1980-2) is used (this interpolation is based on the RPA correlation energy of partially spin polarized systems). The Vosko, Wilk and Nusair interpolation usually enhances the magnetic moments and the magnetic energies. Because the Vosko\\-Wilk\\-Nusair interpolation is the interpolation usually applied in the context of gradient corrected functionals, it is desirable to use this interpolation whenever the PW91 functional is applied. Setting this tag is not required for most modern functions, such as the PBE or PBEsol functional, since these functional strictly follow the original publications and disregard the setting of this flag entirely (this implicitly implies that the correlation energy is interpolated according to Vosko, Wilk and Nusair)."}
{"file_name": "Blue-moon_ensemble.md", "content": "In general, constrained molecular dynamics generates biased statistical averages. It can be shown that the correct average for a quantity   a ( \u03be ) {\\\\displaystyle a(\\\\xi )}  can be obtained using the formula (blue moon ensemble average):  a ( \u03be ) \\=  \u27e8  \\|  Z  \\|  \u2212 1  /  2  a (  \u03be  \u2217  )  \u27e9  \u03be  \u2217  \u27e8  \\|  Z  \\|  \u2212 1  /  2  \u27e9  \u03be  \u2217  , {\\\\displaystyle a(\\\\xi )\\={\\\\frac {\\\\langle \\|\\\\mathbf {Z} \\|^{\\-1/2}a(\\\\xi ^{\\*})\\\\rangle \\_{\\\\xi ^{\\*}}}{\\\\langle \\|\\\\mathbf {Z} \\|^{\\-1/2}\\\\rangle \\_{\\\\xi ^{\\*}}}},} where   \u27e8 . . .  \u27e9  \u03be  \u2217 {\\\\displaystyle \\\\langle ...\\\\rangle \\_{\\\\xi ^{\\*}}}  stands for the statistical average of the quantity enclosed in angular parentheses computed for a constrained ensemble and   Z {\\\\displaystyle Z}  is a mass metric tensor defined as:  Z  \u03b1 , \u03b2  \\=  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  \u03b1  \u22c5  \u2207  i  \u03be  \u03b2  ,  \u03b1 \\= 1 , . . . , r ,  \u03b2 \\= 1 , . . . , r , {\\\\displaystyle Z\\_{\\\\alpha ,\\\\beta }\\={\\\\sum }\\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{\\\\alpha }\\\\cdot \\\abla \\_{i}\\\\xi \\_{\\\\beta },\\\\,\\\\alpha \\=1,...,r,\\\\,\\\\beta \\=1,...,r,} It can be shown that the free energy gradient can be computed using the equation:[\\[1]](#cite_note-Carter89-1)[\\[2]](#cite_note-Otter00-2)[\\[3]](#cite_note-Darve02-3)[\\[4]](#cite_note-Fleurat05-4)  (  \u2202 A  \u2202  \u03be  k  )  \u03be  \u2217  \\=  1  \u27e8  \\|  Z  \\|  \u2212 1  /  2  \u27e9  \u03be  \u2217  \u27e8  \\|  Z  \\|  \u2212 1  /  2  \\[  \u03bb  k  \\+  k  B  T  2  \\|  Z  \\|  \u2211  j \\= 1  r  (  Z  \u2212 1  )  k j  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  j  \u22c5  \u2207  i  \\|  Z  \\|  ]  \u27e9  \u03be  \u2217  , {\\\\displaystyle {\\\\Bigl (}{\\\\frac {\\\\partial A}{\\\\partial \\\\xi \\_{k}}}{\\\\Bigr )}\\_{\\\\xi ^{\\*}}\\={\\\\frac {1}{\\\\langle \\|Z\\|^{\\-1/2}\\\\rangle \\_{\\\\xi ^{\\*}}}}\\\\langle \\|Z\\|^{\\-1/2}\\[\\\\lambda \\_{k}\\+{\\\\frac {k\\_{B}T}{2\\|Z\\|}}\\\\sum \\_{j\\=1}^{r}(Z^{\\-1})\\_{kj}\\\\sum \\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{j}\\\\cdot \\\abla \\_{i}\\|Z\\|]\\\\rangle \\_{\\\\xi ^{\\*}},} where   \u03bb  \u03be  k {\\\\displaystyle \\\\lambda \\_{\\\\xi \\_{k}}}  is the Lagrange multiplier associated with the parameter   \u03be  k {\\\\displaystyle {\\\\xi \\_{k}}}  used in the SHAKE algorithm.[\\[5]](#cite_note-Ryckaert77-5) The free\\-energy difference between states (1\\) and (2\\) can be computed by integrating the free\\-energy gradients over a connecting path:  \u0394  A  1 \u2192 2  \\=  \u222b  \u03be ( 1 )  \u03be ( 2 )  (  \u2202  A  \u2202 \u03be  )  \u03be  \u2217  \u22c5 d  \u03be  . {\\\\displaystyle {\\\\Delta }A\\_{1\\\\rightarrow 2}\\=\\\\int \\_{\\\\xi (1\\)}^{\\\\xi (2\\)}{\\\\Bigl (}{\\\\frac {\\\\partial {A}}{\\\\partial \\\\xi }}{\\\\Bigr )}\\_{\\\\xi ^{\\*}}\\\\cdot d{\\\\xi }.} Note that as the free\\-energy is a state quantity, the choice of path connecting (1\\) with (2\\) is irrelevant. How to------ The information needed to determine the blue moon ensemble averages within a Constrained molecular dynamics can be obtained by setting LBLUEOUT\\=.TRUE. The following output is written for each MD step in the file REPORT:  ```>Blue_moon       lambda        |z|^(-1/2)    GkT           |z|^(-1/2)*(lambda+GkT)  b_m>  0.585916E+01  0.215200E+02 -0.117679E+00  0.123556E+03  ```   with the four numerical terms indicating   \u03bb  \u03be  k {\\\\displaystyle \\\\lambda \\_{\\\\xi \\_{k}}}  ,  \\|  Z  \\|  \u2212 1  /  2 {\\\\displaystyle \\|Z\\|^{\\-1/2}}  ,  (  k  B  T  2  \\|  Z  \\|  \u2211  j \\= 1  r  (  Z  \u2212 1  )  k j  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  j  \u22c5  \u2207  i  \\|  Z  \\|  ) {\\\\displaystyle \\\\left({\\\\frac {k\\_{B}T}{2\\|Z\\|}}\\\\sum \\_{j\\=1}^{r}(Z^{\\-1})\\_{kj}\\\\sum \\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{j}\\\\cdot \\\abla \\_{i}\\|Z\\|\\\\right)} , and   (  \\|  Z  \\|  \u2212 1  /  2  \\[  \u03bb  k  \\+  k  B  T  2  \\|  Z  \\|  \u2211  j \\= 1  r  (  Z  \u2212 1  )  k j  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  j  \u22c5  \u2207  i  \\|  Z  \\|  ]  ) {\\\\displaystyle \\\\left(\\|Z\\|^{\\-1/2}\\[\\\\lambda \\_{k}\\+{\\\\frac {k\\_{B}T}{2\\|Z\\|}}\\\\sum \\_{j\\=1}^{r}(Z^{\\-1})\\_{kj}\\\\sum \\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{j}\\\\cdot \\\abla \\_{i}\\|Z\\|]\\\\right)} , respectively. Note that one line introduced by the string 'b\\_m\\>' is written for each constrained coordinate. With this output, the free energy gradient with respected to the fixed coordinate   \u03be  k {\\\\displaystyle {\\\\xi \\_{k}}}  can conveniently be determined (by equation given above) as a ratio between averages of the last and the second numerical terms. In the simplest case when only one constraint is used, the free energy gradient can be obtained as follows:  ```grep b_m REPORT |awk 'BEGIN {a=0.;b=0.} {a+=$5;b+=$3} END {print a/b}'  ``` As example of a blue moon ensemble average, let us consider calculation of unbiased potential energy average from constrained MD. For simplicity, only a single constraint is assumed. Here we extract   \\|  Z  \\|  \u2212 1  /  2 {\\\\displaystyle \\|Z\\|^{\\-1/2}}  for each step and store the data in an auxiliary file zet.dat:  ```grep b_m REPORT |awk '{print $3}' > zet.dat  ``` Here we extract potential energy for each step and store the data in an auxiliary file energy.dat:  ```grep e_b REPORT |awk '{print $3}' > energy.dat  ``` Finally, the weighted average is determined according to the first formula shown above:   ```paste energy.dat zet.dat |awk 'BEGIN {a=0.;b=0.} {a+=$1*$2;b+=$2} END {print a/b}'  ```"}
{"file_name": "MP2_ground_state_calculation.md", "content": "Overview> MP2> LTMP2> stochastic LTMP2 > High energy contributions using stochastic LTMP2\")> List of tutorialsThis tutorial introduces how to calculate the ground state energy using second order M\u00f8ller\\-Plesset perturbation theory (MP2\\) with VASP. Currently there are three implementations available: * **MP2**[\\[1]](#cite_note-marsman-1): this implementation is recommended for very small unit cells, very few k\\-points and very low plane\\-wave cuttofs. The system size scaling of this algorithm is N\u2075.* **LTMP2**[\\[2]](#cite_note-schaefer2017-2): for all larger systems this Laplace transformed MP2 (LTMP) implementation is recommended. Larger cutoffs and denser k\\-point meshes can be used. It possesses a lower system size scaling (N\u2074) and a more efficient k\\-point sampling.* **stochastic LTMP2**[\\[3]](#cite_note-schaefer2018-3): even faster calculations at the price of statistical noise can be achieved with the stochastic MP2 algorithm. It is an optimal choice for very large systems where only relative errors per valence electron are relevant. Keeping the absolute error fixed, the algorithm exhibits a cubic scaling with the system size, N\u00b3, whereas for a fixed relative error, a linear scaling, N\u00b9, can be achieved. Note that there is no k\\-point sampling and no spin polarization implemented for this algorithm. **NOTE:** *If you use one of these algorithms, please cite the corresponding reference in your publication in addition to the standard VASP reference.* Both LTMP2 as well as stochastic LTMP2 are high performance algorithms that can parallelize the MP2 calculation over thousands of CPUs. At first, one should select the best algorithm according to the considered system size. In the following, a step by step instruction for each algorithm is presented. Preparation: the Hartree\\-Fock ground state------------------------------------------- In order to calculate the Hartree\\-Fock ground state, use the following INCAR file  ```ISMEAR = 0\u00a0; SIGMA = 0.01ALGO = ALHFCALC = .TRUE.\u00a0; AEXX = 1.0EDIFF = 1E-6ENCUT = # 10-20% larger than ENMAX in the POTCAR fileLORBITALREAL = .TRUE. # only necessary for LTMP2 and stochastic LTMP2  ``` Keep the OUTCAR file to read\\-out the Hartree\\-Fock ground state energy later. Calculating the unoccupied Hartree\\-Fock orbitals------------------------------------------------- We also need the unoccupied/virtual Hartree\\-Fock orbitals to perform MP2 calculations. The number of necessary orbitals should be equal to the number of plane\\-waves, that can be found via  ```nplw=`awk '/number of plane-waves:/ {print $5} ' < OUTCAR_HARTREE_FOCK_GROUND_STATE  ``` For the Gamma\\-only version of VASP, twice the number of plane\\-waves have to be used. Set the INCAR file to   ```ISMEAR = 0\u00a0; SIGMA = 0.01ALGO = ExactLHFCALC = .TRUE.\u00a0; AEXX = 1.0NELM = 1NBANDS = # number of plane-waves (favorably a multiple of the used mpi-ranks)ENCUT = # same value as in the Hartree-Fock stepLORBITALREAL = .TRUE. # only necessary for LTMP2 and stochastic LTMP2  ``` Make sure that VASP reads the WAVECAR file from the previous Hartree\\-Fock step. Actual MP2 calculations----------------------- Depending on your choice, please switch to the corresponding page. 1. MP22. LTMP23. stochastic LTMP2"}
{"file_name": "NCORE.md", "content": "NCORE= \\[integer]   Default: **NCORE** \\= 1nDescription: NCORE determines the number of compute cores that work on an individual orbital (available as of VASP.5\\.2\\.13\\).   --- VASP currently offers parallelization and data distribution over bands and/or over plane wave coefficients, and as of VASP.5\\.3\\.2, parallelization over **k**\\-points (no data distribution, see KPAR).To achieve high efficiency on massively parallel systems or modern multi\\-core machines, it is strongly recommended to use all parallelization options available. Most algorithms work with any data distribution (except for the single band conjugated gradient, which is obsolete). NCORE is available from VASP.5\\.2\\.13 on, and is more handy than the previous parameter NPAR. The user should either specify NCORE or NPAR, where NPAR takes a higher preference. The relation between both parameters is  NCORE \\=number\\-of\\-cores /KPAR / NPAR NCORE determines how many cores share the work on an individual orbital. The current default is NCORE\\=1, meaning that one orbital is treated by one core. NPAR is then set to the total number of cores (divided by KPAR). If NCORE equals the total number of cores, NPAR is set to 1\\. This implies data distribution over plane wave coefficients only: all cores will work together on every individual band, i.e., the plane wave coefficients of each band are distributed over all cores. This is usually very slow and should be avoided. NCORE\\=1 is the optimal setting for small unit cells, and platforms with a small communication bandwidth. It is also a good choice for up to 8 cores. However, this mode substantially increases the memory requirements, because the non\\-local projector functions must be stored entirely on each core. In addition, substantial all\\-to\\-all communications are required to orthogonalize the bands.  On massively parallel systems and modern multi\\-core machines we strongly recommend to set   ```NCORE = 2 up to number-of-cores-per-socket (or number-of-cores-per-node)  ```   For large unit cells, we found that this can improve the performance by up to a factor four compared to the default, and it also significantly improves the stability of the code due to reduced memory requirements. Ideally, NCORE should be a factor of the number\\-of\\-cores\\-per\\-socket (or number\\-of\\-cores\\-per\\-node), since this reduces communication between the sockets or nodes. The best value NCORE depends somewhat on the number of atoms in the unit cell. Values around 4 are usually ideal for 100 atoms in the unit cell. For very large unit cells (more than 400 atoms) values around 12\\-16 are often optimal. If you run extensive simulations for similar systems, make your own tests.   Finally, the optimal settings for NCORE and LPLANE depend strongly on the type of machine you are using.Some recommended setups: * LINUX cluster linked by Infiniband, modern multicore machines: On a LINUX cluster with multicore machines linked by a fast network we recommend to set  ```LPLANE = .TRUE.NCORE  = 2 up to number-of-cores-per-nodeLSCALU = .FALSE.NSIM   = 4  ``` If very many nodes are used, it might be necessary to set LPLANE \\= .FALSE., but usually this offers only a very modest performance boost (if at all).* LINUX cluster linked by 1 Gbit Ethernet, and LINUX clusters with single cores: On a LINUX cluster linked by a relatively slow network, LPLANE must be set to .TRUE., and the NCORE should be equal to 1:  ```LPLANE = .TRUE.NCORE  = 1LSCALU = .FALSE.NSIM   = 4  ``` Mind that you need at least a 100 Mbit full duplex network, with a fast switch offering at least 2 Gbit switch capacity to find useful speedups. Multi\\-core machines should be always linked by an Infiniband, since Gbit is too slow for multi\\-core machines.* Massively parallel machines with dedicated network (maybe Cray): On massively parallel machines one is sometimes forced to use a large number of cores. In this case load balancing problems and problems with the communication bandwidth are likely to be experienced. In addition the local memory is fairly small on some massively parallel machines (too small keep the real space projectors in the cache using any reasonable VASP setting). Therefore, we recommend to set NCORE on these machines to \u221a*\\# of cores* (explicit timing can be helpful to find the optimum value). The use of LPLANE\\=.TRUE. is only recommended if the number of nodes is significantly smaller than NGX, NGY and NGZ.In summary, the following setting is recommended  ```LPLANE = .FALSE.NPAR   = sqrt(number of cores)NSIM   = 1  ```"}
{"file_name": "AGGAX.md", "content": "AGGAX= \\[real]n| Default: **AGGAX** | \\= 1\\.0\\-AEXX | if LHFCALC\\=.TRUE. || --- | --- | --- ||  | \\= 1\\.0 | if LHFCALC\\=.FALSE. | Description: AGGAX is a parameter that multiplies the gradient correction in the GGA exchange functional.  --- AGGAX can be used as the fraction of gradient correction in the GGA exchange in a Hartree\\-Fock/GGA hybrid functional. | **Important:** AGGAX can be used only if LHFCALC\\=.TRUE. || --- | | **Mind:*** AGGAX is implemented for all functionals listed at GGA except AM05\\. * AGGAX is implemented for the functionals from Libxc (see LIBXC1 for details). || --- |"}
{"file_name": "LORBIT.md", "content": "LORBIT= 0 \\| 1 \\| 2 \\| 5 \\| 10 \\| 11 \\| 12   Default: **LORBIT** \\= NonenDescription: Selects a projection method onto local quantum numbers (  l m {\\\\displaystyle lm} ) and writes PROCAR/PROOUT file.  --- When LORBIT is set, VASP performs a post\\-processing step of the Kohn\\-Sham (KS) orbitals to decompose the KS orbitals into local quantum numbers (  l m {\\\\displaystyle lm} ) and obtain local properties, e.g., the on\\-site charge density or on\\-site magnetic moments due to the spin degrees of freedom. The decomposition is achieved by means of one of several projection methods selected by LORBIT. All these projections rely on the fact that most of the charge density is close to the ion center, and interstitial regions separate them well. This is merely a qualitative approach in contrast to performing a wannierization in order to obtain a localized basis, but often it serves as a good estimate.  | **Tip:** As this is a post\\-processing step, LORBIT can be added/changed when restarting a converged calculation. To this end, set ALGO\\=None and the desired LORBIT, and restart from WAVECAR. || --- | For VASP version \\< 6 with LORBIT \\>\\= 11 and ISYM \\= 2, see known issues.  Projection methods------------------ See the table for an overview: | LORBIT | RWIGS tag | files written || --- | --- | --- || 0 | required | DOSCAR and PROCAR || 1 | required | DOSCAR and *lm*\\-decomposed PROCAR || 2 | required | DOSCAR and *lm*\\-decomposed PROCAR \\+ phase factors || 5 | required | DOSCAR and PROOUT || 10 | ignored | DOSCAR and PROCAR || 11 | ignored | DOSCAR and *lm*\\-decomposed PROCAR || 12 | ignored | DOSCAR and *lm*\\-decomposed PROCAR \\+ phase factors (not recommended) || 13 | ignored | DOSCAR and *lm*\\-decomposed PROCAR \\+ phase factors, choose best projector for each band (not recommended) || 14 | ignored | DOSCAR and *lm*\\-decomposed PROCAR \\+ phase factors, choose single projector for interval EMIN,EMAX | ### For LORBIT \\< 10 The projection is onto spherical harmonics at each ionic site within a sphere defined by RWIGS. The radius must be specified for each atomic species, and there is some uncertainty introduced depending on the size of the sphere. ### For LORBIT \\>\\= 10 The projection uses the projector functions that are provided by the PAW method. This is, of course, still a qualitative approach because also, for the PAW projectors, the radius was somehow defined, and it is not guaranteed to be the best choice for that particular system as it depends on the chemical composition and crystal or molecular structure. ### Phase factors For LORBIT\\>\\=12:The **phase factors** written by VASP can usually only be used as a qualitative measure of the projection of the orbitals into the atomic sphere. The main issue is that most VASP POTCAR files have two or three projectors per   l {\\\\displaystyle l} \\-quantum number, and projecting an orbital onto two projectors will yield two complex numbers. VASP combines these two numbers into a single number. The precise algorithms differ in different versions of VASP, and we recommend that you inspect the source code for more details. From vasp.6 onward, an improved scheme has been implemented and can be selected using LORBIT\\=14\\. In this case, VASP first selects a single projector for each   l {\\\\displaystyle l} \\-quantum number by linearly combining all projectors with the same   l {\\\\displaystyle l} \\-quantum number. This is done in such a way that the new projector is optimally chosen to represent the calculated orbitals in the energy interval specified by EMAX and EMIN. In the second step, VASP projects onto these optimized projectors, yielding a single complex number for each orbital, site and   l {\\\\displaystyle l} \\-quantum number, which is written to the PROCAR file. For details we also refer to [\\[1]](#cite_note-Schuler:JPCM:2018-1).LORBIT\\=12 should no longer be used except for qualitative calculations. LORBIT\\=13 chooses the projectors also automatically, but allows for different optimal linear combinations for each orbital.Note that this is generally not desirable, since the resultant projection is not compatible with the required properties of a projection operator (a projection operator needs to use energy and orbital independent projectors).Hence, do not use LORBIT\\=13 for anything but a qualitative analysis. LORBIT\\=13 and LORBIT\\=14 are only supported by version \\>\\=5\\.4\\.4\\.  On\\-site partial charge densities and magnetization--------------------------------------------------- The partial charge densities can be found in the OUTCAR  ```total charge      # of ion       s       p       d       tot------------------------------------------    1        1.514   0.000   0.000   1.514    2        0.123   0.345   0.000   0.468  ``` Here, the first column corresponds to the ion index   \u03b1 {\\\\displaystyle \\\\alpha } , the s, p, d,... columns correspond to the partial charges for   l \\= 0 , 1 , 2 , \u22ef {\\\\displaystyle l\\=0,1,2,\\\\cdots }  defined as  \u03c1  \u03b1 l  \\=  1  N  k  \u2211  n  k  f  n  k  \u2211  m \\= \u2212 l  l  \\|  \u27e8  Y  l m  \u03b1  \\|  \u03d5  n  k  \u27e9  \\|  2 {\\\\displaystyle \\\\rho \\_{\\\\alpha l}\\={\\\\frac {1}{N\\_{\\\\bf {k}}}}\\\\sum \\_{n{\\\\bf {k}}}f\\_{n{\\\\bf {k}}}\\\\sum \\_{m\\=\\-l}^{l}\\|\\\\langle Y\\_{lm}^{\\\\alpha }\\|\\\\phi \\_{n\\\\mathbf {k} }\\\\rangle \\|^{2}}  The  \u27e8  Y  l m  \u03b1  \\|  \u03d5  n  k  \u27e9 {\\\\displaystyle \\\\langle Y\\_{lm}^{\\\\alpha }\\|\\\\phi \\_{n\\\\mathbf {k} }\\\\rangle }  are obtained from the projection of the (occupied) KS orbitals   \\|  \u03d5  n  k  \u27e9 {\\\\displaystyle \\|\\\\phi \\_{n{\\\\bf {k}}}\\\\rangle }  onto spherical harmonics that are non zero within spheres of a radius RWIGS centered at ion   \u03b1 {\\\\displaystyle \\\\alpha }  and the last column is the sum   \u2211  l  \u03c1  \u03b1 l {\\\\displaystyle \\\\sum \\_{l}\\\\rho \\_{\\\\alpha l}}  . Note that depending on the system, an \"f\" column is written as well.  * In case of spin\\-polarized magnetic calculations (ISPIN\\=2\\), the partial magnetization densities are written to the OUTCAR  ```magnetization (x) # of ion       s       p       d       tot------------------------------------------    1        0.000   0.000   0.000   0.000    2        0.000   0.245   0.000   0.245  ``` Here, the magnetization density is calculated from the difference in the up and down spin channel   m  z  \u03b1 l  \\=  \u03c1  \u03b1 l  \u2191  \u2212  \u03c1  \u03b1 l  \u2193 {\\\\displaystyle m\\_{z}^{\\\\alpha l}\\=\\\\rho \\_{\\\\alpha l}^{\\\\uparrow }\\-\\\\rho \\_{\\\\alpha l}^{\\\\downarrow }} Although the direction of the magnetization densities is meaningless in a spin\\-polarized calculation (no spin\\-orbit coupling, see LSORBIT), here the projection axis is the z\\-axis. This is consistent withe the behavior upon restarting a noncollinear calculation from a spin\\-polarized one with default SAXIS. * In case of noncollinear calculations (LNONCOLLINEAR\\=.TRUE.), the lines after \"total charge\" correspond to the diagonal average  \u03c1  \u03b1 l  \u2191\u2191  \u2212  \u03c1  \u03b1 l  \u2193\u2193  2 {\\\\displaystyle {\\\\frac {\\\\rho \\_{\\\\alpha l}^{\\\\uparrow \\\\uparrow }\\-\\\\rho \\_{\\\\alpha l}^{\\\\downarrow \\\\downarrow }}{2}}} of the density tensor  \u03c1  \u03b1 l  \\=  (  \u03c1  \u03b1 l  \u2191\u2191  \u03c1  \u03b1 l  \u2191\u2193  \u03c1  \u03b1 l  \u2193\u2191  \u03c1  \u03b1 l  \u2193\u2193  )  , {\\\\displaystyle \\\\rho \\_{\\\\alpha l}\\=\\\\left({\\\\begin{matrix}\\\\rho \\_{\\\\alpha l}^{\\\\uparrow \\\\uparrow }\\&\\\\rho \\_{\\\\alpha l}^{\\\\uparrow \\\\downarrow }\\\\\\\\\\\\rho \\_{\\\\alpha l}^{\\\\downarrow \\\\uparrow }\\&\\\\rho \\_{\\\\alpha l}^{\\\\downarrow \\\\downarrow }\\\\\\\\\\\\end{matrix}}\\\\right),} which is determined from the projected components   \u03c1  \u03b1 l  \u03bc \u03bd  \\=  1  N  k  \u2211  n  k  f  n  k  \u2211  m \\= \u2212 l  l  \u27e8  \u03c7  n  k  \u03bc  \\|  Y  l m  \u03b1  \u27e9 \u27e8  Y  l m  \u03b1  \\|  \u03c7  n  k  \u03bd  \u27e9 {\\\\displaystyle \\\\rho \\_{\\\\alpha l}^{\\\\mu \\\u }\\={\\\\frac {1}{N\\_{\\\\bf {k}}}}\\\\sum \\_{n{\\\\bf {k}}}f\\_{n{\\\\bf {k}}}\\\\sum \\_{m\\=\\-l}^{l}\\\\langle \\\\chi \\_{n{\\\\bf {k}}}^{\\\\mu }\\|Y\\_{lm}^{\\\\alpha }\\\\rangle \\\\langle Y\\_{lm}^{\\\\alpha }\\|\\\\chi \\_{n{\\\\bf {k}}}^{\\\u }\\\\rangle } of the spinor   \\|  \u03a8  n  k  \u27e9 \\=  (  \u03c7  n  k  \u2191  \u03c7  n  k  \u2193  ) {\\\\displaystyle \\|\\\\Psi \\_{n{\\\\bf {k}}}\\\\rangle \\=\\\\left({\\\\begin{matrix}\\\\chi \\_{n{\\\\bf {k}}}^{\\\\uparrow }\\\\\\\\\\\\chi \\_{n{\\\\bf {k}}}^{\\\\downarrow }\\\\end{matrix}}\\\\right)} Similarly, the lines after \"magnetization (x)\", \"magnetization (y)\", and \"magnetization (z)\"correspond to the partial magnetization density   m  \u03b1 l  j  \\=  1 2  \u2211  \u03bc , \u03bd \\= 1  2  \u03c3  \u03bc \u03bd  j  \u03c1  \u03b1 l  \u03bc \u03bd  . {\\\\displaystyle m\\_{\\\\alpha l}^{j}\\={\\\\frac {1}{2}}\\\\sum \\_{\\\\mu ,\\\u \\=1}^{2}\\\\sigma \\_{\\\\mu \\\u }^{j}\\\\rho \\_{\\\\alpha l}^{\\\\mu \\\u }.} projected onto Pauli matrices   {  \u03c3  1 {\\\\displaystyle \\\\{\\\\sigma \\_{1}}  ,  \u03c3  2 {\\\\displaystyle \\\\sigma \\_{2}}  ,  \u03c3  3  } {\\\\displaystyle \\\\mathbf {\\\\sigma } \\_{3}\\\\}} . By default, this corresponds to Cartesian directions   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}} , but the orientation can be changed using SAXIS."}
{"file_name": "Surface_Science_-_Tutorial.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorialsThe tutorial is made of the following parts: 1. Ni 100 surface relaxation2. Ni 100 surface DOS3. Ni 100 surface bandstructure4. Ni 111 surface relaxation5. Ni 111 surface high precision6. partial DOS of CO on Ni 111 surface7. vibrational frequencies of CO on Ni 111 surface8. STM of graphite9. STM of graphene10. collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\")"}
{"file_name": "SCISSOR.md", "content": "SCISSOR= \\[real]n| Default: **SCISSOR** | \\= 0 |  || --- | --- | --- | Description: SCISSOR specifies the shift for the scissor operator in eV.  --- The scissor operator in BSE and GW calculations shifts the unoccupied states relative to the valence states[\\[1]](#cite_note-vincenzo:prb:1995-1). For example, the scissor operator can be used in the BSE calculations to match the band gap to the known experimental value, thus achieving the right offset in the calculated spectrum. Notably, unlike the self\\-energy operator in GW, the scissor operator applies a universal shift to all conduction states, i.e., the shift is independent of energy or momentum and leaves the valence states unchanged. The scissor operator only shifts empty states, thus partially occupied orbitals are not affected by it."}
{"file_name": "Constraining_the_local_magnetic_moments.md", "content": "Description: Constraining the local magnetic moments on NiO. To orient locally each spin, a penalty energy   E  p {\\\\displaystyle E\\_{p}}  is added, inversely proportional to the   \u03bb {\\\\displaystyle \\\\lambda }  (LAMBDA) parameter. Thus, the process has to begin with a low LAMBDA, which is increased step by step. For additional information, go to the I\\_CONSTRAINED\\_M page. *Exercise\u00a0:* Verify the   E  p  \\= f ( 1  /  \u03bb ) {\\\\displaystyle E\\_{p}\\=f(1/\\\\lambda )}  relation by constraining the spin directions. Check the efficiency of the method by constraining only the direction, then the direction and the size of spins.  --- * INCAR  ```NiO GGA+U Constr.  SYSTEM        = \"NiO\" Electronic minimization  ENCUT         = 450  EDIFF         = 1E-5  LORBIT        = 11  LREAL         = .False.  ISYM          = -1  NELMIN        = 6  LSORBIT       = .True.  GGA_COMPAT    = .FALSE.  DOS  ISMEAR    = -5 Magnetism  ISPIN     = 2  I_CONSTRAINED_M = 1  # direction  # I_CONSTRAINED_M = 2  # size and direction  M_CONSTR  = 2 0 0 0 -2 0 6*0  LAMBDA    = 1  RWIGS     = 1.30 0.70  Orbital moment  LORBMOM  = T Mixer  AMIX      = 0.2  BMIX      = 0.00001  AMIX_MAG  = 0.8  BMIX_MAG  = 0.00001 GGA+U  LDAU      = .TRUE.  LDAUTYPE  = 2  LDAUL     = 2 -1  LDAUU     = 5.00 0.00  LDAUJ     = 0.00 0.00  LDAUPRINT = 1  LMAXMIX   = 4   ``` * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` Download--------  nio\\_constr.tgz  ---"}
{"file_name": "LHYPERFINE.md", "content": "LHYPERFINE= .TRUE. \\| .FALSE.   Default: **LHYPERFINE** \\= .FALSE.nDescription: compute the hyperfine tensors at the atomic sites (available as of vasp.5\\.3\\.2\\).  --- To have VASP compute the hyperfine tensors at the atomic sites, set  ```LHYPERFINE = .TRUE.  ``` The hyperfine tensor AI describes the interaction between a nuclear spin SI (located at site **R**I) and the electronic spin distribution Se (in most cases associated with a paramagnetic defect state):  E \\=  \u2211  i j  S  i  e  A  i j  I  S  j  I {\\\\displaystyle E\\=\\\\sum \\_{ij}S\\_{i}^{e}A\\_{ij}^{I}S\\_{j}^{I}} In general it is written as the sum of an isotropic part, the so\\-called Fermi contact term, and an anisotropic (dipolar) part. The Fermi contact term is given by  (  A  i s o  I  )  i j  \\=  2 3  \u03bc  0  \u03b3  e  \u03b3  I  \u27e8  S  z  \u27e9  \u03b4  i j  \u222b  \u03b4  T  (  r  )  \u03c1  s  (  r  \\+  R  I  ) d  r {\\\\displaystyle (A\\_{\\\\mathrm {iso} }^{I})\\_{ij}\\={\\\\frac {2}{3}}{\\\\frac {\\\\mu \\_{0}\\\\gamma \\_{e}\\\\gamma \\_{I}}{\\\\langle S\\_{z}\\\\rangle }}\\\\delta \\_{ij}\\\\int \\\\delta \\_{T}(\\\\mathbf {r} )\\\\rho \\_{s}(\\\\mathbf {r} \\+\\\\mathbf {R} \\_{I})d\\\\mathbf {r} } where \u03c1s is the spin density, \u03bc0 is the magnetic susceptibility of free space,\u03b3e the electron gyromagnetic ratio, \u03b3I the nuclear gyromagnetic ratio of the nucleus at **R**I, and   \u27e8  S  z  \u27e9 {\\\\displaystyle \\\\langle S\\_{z}\\\\rangle }  the expectation value of the *z*\\-component of the total electronic spin. \u03b4T(**r**) is a smeared out \u03b4 function, as described inthe Appendix of Ref.[\\[1]](#cite_note-bloechl:prb:00-1). The dipolar contributions to the hyperfine tensor are given by  (  A  a n i  I  )  i j  \\=  \u03bc  0  4 \u03c0  \u03b3  e  \u03b3  I  \u27e8  S  z  \u27e9  \u222b  \u03c1  s  (  r  \\+  R  I  )  r  3  3  r  i  r  j  \u2212  \u03b4  i j  r  2  r  2  d  r {\\\\displaystyle (A\\_{\\\\mathrm {ani} }^{I})\\_{ij}\\={\\\\frac {\\\\mu \\_{0}}{4\\\\pi }}{\\\\frac {\\\\gamma \\_{e}\\\\gamma \\_{I}}{\\\\langle S\\_{z}\\\\rangle }}\\\\int {\\\\frac {\\\\rho \\_{s}(\\\\mathbf {r} \\+\\\\mathbf {R} \\_{I})}{r^{3}}}{\\\\frac {3r\\_{i}r\\_{j}\\-\\\\delta \\_{ij}r^{2}}{r^{2}}}d\\\\mathbf {r} } In the equations above *r*\\=\\|**r**\\|, *r*i the i\\-th component of **r**, and **r** istaken relative to the position of the nucleus **R**I. The nuclear gyromagnetic ratios should be specified by means of the NGYROMAG\\-tag:  ```NGYROMAG = gamma_1  gamma_2 ... gamma_N  ``` where one should specify one number for each of the *N* species on the POSCAR file.If one does not set NGYROMAG in the INCAR file, VASP assumes a factor of 1 for each species. As usual, all output is written to the OUTCAR file. VASP writes three blocks of data, that looksomething like:  ``` Fermi contact (isotropic) hyperfine coupling parameter (MHz) -------------------------------------------------------------  ion      A_pw      A_1PS     A_1AE     A_1c      A_tot -------------------------------------------------------------   1       ...       ...       ...       ...       ...  ..       ...       ...       ...       ...       ...  -------------------------------------------------------------  ``` with an entry for each ion on the POSCAR file.Apw, A1PS, A1AE, and A1c are the plane wave, pseudo one\\-center, all\\-electron one\\-center, and one\\-center core contributions to the Fermi contact term, respectively.The total Fermi contact term is given by Atot. Beware: for the moment wehave chosen **NOT** to include the core contributions A1c in Atot.If you so want, you should add them by hand to Atot.Core electronic contributions to the Fermi contact term are calculated in the frozen valence approximation as proposed by Yazyev *et al.*[\\[2]](#cite_note-yazyev:prb:05-2) The dipolar constributions are listed next:  ``` Dipolar hyperfine coupling parameters (MHz) ---------------------------------------------------------------------  ion      A_xx      A_yy      A_zz      A_xy      A_xz      A_yz ---------------------------------------------------------------------   1       ...       ...       ...       ...       ...       ...  ..       ...       ...       ...       ...       ...       ...  ---------------------------------------------------------------------  ``` Again one line per ion in the POSCAR file. The total hyperfine tensors are written as:  ``` Total hyperfine coupling parameters after diagonalization (MHz) (convention: |A_zz| > |A_xx| > |A_yy|) ----------------------------------------------------------------------  ion      A_xx      A_yy      A_zz     asymmetry (A_yy - A_xx)/ A_zz ----------------------------------------------------------------------   1       ...       ...       ...         ...  ..       ...       ...       ...         ...  ----------------------------------------------------------------------  ``` i.e., the tensors have been diagonalized and rearranged. **N.B.**: The Fermi contact term is strongly dominated by the all\\-electron one\\-center contribution A1AE.Unfortunately, this particular term is quite sensitive to the number and eigenenergy of the all\\-electron partial waves thatmake up the one\\-center basis set, *i.e.*, to the particulars of the PAW dataset you are using.As a result the Fermi contact term may strongly depend on the choice of PAW dataset. ### Units The Fermi contact term   A {\\\\displaystyle A}  is measured in following units  \\[ A ] \\=  \\[  \u03bc  0  ]  \u00d7  \\[  g  e  \u03bc  e  ]  \u00d7  \\[  g  j  \u03bc  j  ]  \u00d7  \\[  \\|  \u03c8 ( 0 )  \\|  2  ]  \\=  T  2  m  3  J  \u00d7  J T  \u00d7  M H z  T  \u00d7  1  m  3  \\= M H z {\\\\displaystyle \\[A]\\=\\\\left\\[\\\\mu \\_{0}\\\\right]\\\\times \\\\left\\[g\\_{e}\\\\mu \\_{e}\\\\right]\\\\times \\\\left\\[g\\_{j}\\\\mu \\_{j}\\\\right]\\\\times \\\\left\\[\\|\\\\psi (0\\)\\|^{2}\\\\right]\\={\\\\frac {T^{2}m^{3}}{J}}\\\\times {\\\\frac {J}{T}}\\\\times {\\\\frac {MHz}{T}}\\\\times {\\\\frac {1}{m^{3}}}\\=MHz} with   \u03bc  0  \\= 4 \u03c0 \u00d7  10  \u2212 7  T  2  m  3  J  \u2212 1 {\\\\displaystyle \\\\mu \\_{0}\\=4\\\\pi \\\\times 10^{\\-7}T^{2}m^{3}J^{\\-1}}  ,  g  e  \u03bc  e  \\=9\\.28476377 \u00d7  10  \u2212 24  J  T  \u2212 1  ,  \\|  \u03c8 ( 0 )  \\|  2  \\=  10  30  m  \u2212 3 {\\\\displaystyle g\\_{e}\\\\mu \\_{e}\\=9\\.28476377\\\\times 10^{\\-24}JT^{\\-1},\\|\\\\psi (0\\)\\|^{2}\\=10^{30}m^{\\-3}}  .NGYROMAG is given in units of MHz/T, see here for a table of different gyromagnetic ratios."}
{"file_name": "Bulk_Systems.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorialsThe tutorial is made of the following parts: 1. fcc Si2. fcc Si DOS3. fcc Si bandstructure4. cd Si5. cd Si volume relaxation6. cd Si relaxation7. beta\\-tin Si8. fcc Ni9. liquid Si10. graphite TS binding energy11. graphite MBD binding energy12. graphite interlayer distance"}
{"file_name": "ML_FF_XMIX.md", "content": "Redirect to: * ML CX"}
{"file_name": "SCALEE.md", "content": "SCALEE= \\[real]   Default: **SCALEE** \\= 1nDescription: This tag specifies the coupling parameter of the energies and forces between a fully interacting system and a reference system.  --- A detailed description of calculations using thermodynamic integration within VASP is given in the supplemental information of reference [\\[1]](#cite_note-dorner:PRL:2018-1) (**caution**: the tag *ISPECIAL*\\=0 used in that reference is not valid anymore, instead the tag PHON\\_NSTRUCT\\=\\-1 is used). The free energy of a fully interacting system can be written as the sum of the free energy a non\\-interacting reference system and the difference in the free energy of the fully interacting system and the non\\-interacting system   F  1  \\=  F  0  \\+ \u0394  F  0 \u2192 1 {\\\\displaystyle F\\_{1}\\=F\\_{0}\\+\\\\Delta F\\_{0\\\\rightarrow 1}}  .Using thermodynamic integration the free energy difference between the two systems is written as  \u0394  F  0 \u2192 1  \\=  \u222b  0  1  d \u03bb \u27e8  U  1  ( \u03bb ) \u2212  U  0  ( \u03bb )  \u27e9  \u03bb {\\\\displaystyle \\\\Delta F\\_{0\\\\rightarrow 1}\\=\\\\int \\\\limits \\_{0}^{1}d\\\\lambda \\\\langle U\\_{1}(\\\\lambda )\\-U\\_{0}(\\\\lambda )\\\\rangle \\_{\\\\lambda }}  . Here   U  1  ( \u03bb ) {\\\\displaystyle U\\_{1}(\\\\lambda )}  and  U  0  ( \u03bb ) {\\\\displaystyle U\\_{0}(\\\\lambda )}  describe the potential energies of a fully\\-interacting and a non\\-interacting reference system, respectively. The coupling strength of the systems is controlled via the coupling parameter   \u03bb {\\\\displaystyle \\\\lambda } . It is neccessary that the connection of the two systems via the coupling constant is reversible. The notation   \u27e8 \u2026  \u27e9  \u03bb {\\\\displaystyle \\\\langle \\\\ldots \\\\rangle \\_{\\\\lambda }}  denotes an ensemble average of a system driven by the following classical Hamiltonian  H  \u03bb  \\= \u03bb  H  1  \\+ ( 1 \u2212 \u03bb )  H  0 {\\\\displaystyle H\\_{\\\\lambda }\\=\\\\lambda H\\_{1}\\+(1\\-\\\\lambda )H\\_{0}}  .The tag SCALEE sets the coupling parameter   \u03bb {\\\\displaystyle \\\\lambda }  and hence controls the Hamiltonian of the calculation. By default SCALEE\\=1 and the scaling of the energies and forces via the coupling constant is internally skipped in the code. To enable the scaling SCALEE  \u2260 {\\\\displaystyle \\\eq } 1 has to be specified. A VASP calculation outputs the integrand for a given coupling constant at every molecular dynamics step. How to choose the ensemble size and carry out the integration is described in the main text and especially in the supplementary information of reference [\\[1]](#cite_note-dorner:PRL:2018-1).  Two possible options are available for the reference system: * Ideal gas: By default the thermodynamic integration is carried out from the ideal gas to the fully interacting case (in the case when no DYNMATFULL is present in the calculation folder). Usually the Stirling approximation is used for the free energy of the ideal gas written as  F \\= \u2212  1 \u03b2  l n  \\[  V  N  A  3 N  N !  ] {\\\\displaystyle F\\=\\-{\\\\frac {1}{\\\\beta }}\\\\mathrm {ln} \\\\left\\[{\\\\frac {V^{N}}{\\\\mathrm {A} ^{3N}N!}}\\\\right]} whre   V {\\\\displaystyle V}  is the volume of the system,   N {\\\\displaystyle N}  is the number of particles in the system and   A {\\\\displaystyle \\\\mathrm {A} }  is the de Broglie wavelength. The Stirling approximation applies in principle only in the limes of infinitely many particles. In reference [\\[1]](#cite_note-dorner:PRL:2018-1) the exact ideal gas equation was used since it helped to speed up the convergence of the final free energy of liquid Si with respect to the system size. * Harmonic solid: If the file DYNMATFULL exists in the calculation directory and SCALEE  \u2260 {\\\\displaystyle \\\eq } 1, the second order Hessian matrix is added to the force and thermodynamic integration from a harmonic model to a fully interacting system is carried out. The DYNMATFULL file stores the eigenmodes and eigenvalues from diagonalizing the dynamic matrix. This file is written by a previous calculation using the INCAR tags IBRION\\=6 and PHON\\_NSTRUCT\\=\\-1\\."}
{"file_name": "NCORE_IN_IMAGE1.md", "content": "NCORE\\_IN\\_IMAGE1= \\[integer]   Default: **NCORE\\_IN\\_IMAGE1** \\= 0nDescription: This tag specifies the number of cores in the first image.  --- This tag works for two images, specifically, if VCAIMAGES is set (this also sets IMAGES\\=2\\).VCAIMAGES splits the available cores into two groups both working independently in the subdirectories01 and 02\\.The tag NCORE\\_IN\\_IMAGE1 defines how many of cores are used for the first image (01\\). The remainder of the cores is used for the second image (working in the subdirectory 02\\)."}
{"file_name": "ABNCAR.md", "content": "Redirect to: * ML ABN"}
{"file_name": "Ni_111_surface_high_precision.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Calculation of the adsorption energies and the work function of a Ni (111\\) surface with high precision. Input----- ### POSCAR  ``` fcc (111) surface                         3.53000000000000          0.7071067800000000    0.0000000000000000    0.0000000000000000    -0.3535533900000000    0.6123724000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    5.1961523999999999 Ni 5Selective dynamicsDirect  0.0000000000000000  0.0000000000000000  0.0000000000000000   F   F   F  0.3333333300000021  0.6666666699999979  0.1111111100000031   F   F   F  0.6666666699999979  0.3333333300000021  0.2222222199999990   F   F   F -0.0000000000000000 -0.0000000000000000  0.3320935940210170   T   T   T  0.3333333300000021  0.6666666699999979  0.4413539967541983   T   T   T   0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  ```   ### INCAR  ``` ENMAX = 400 general:  SYSTEM = clean nickel (111) surface  ISTART = 0  ICHARG = 2  ISMEAR = 2\u00a0; SIGMA = 0.2  ALGO = Fast  EDIFF = 1E-6 special:  LVHAR = .TRUE.#  LVTOT = .TRUE.  ``` * Run a single point calculation for the Ni(111\\) clean surface at a higher cutoff (400eV), which is needed to compute the adsorption energy.* Potentials for O and C require an energy cut\\-off of 400eV:\t+ Previous calculation for clean cannot be used as reference.\t+ Recalculate with same energy cut\\-off. ### KPOINTS  ```K-Points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- ### Adsorption energies * Change of cut\\-off lowers total energy:\t+ \\-25\\.732 eV (270 eV); \\-25\\.737 eV (400 eV).\t+ Becomes more important for larger cells. * The adsorption energy is calculated in the following way: + E   a d s    \\=  E   t o t a l    \u2212  E   c l e a n    \u2212  E   C O     \t{\\\\displaystyle E\\_{\\\\mathrm {ads} }\\=E\\_{\\\\mathrm {total} }\\-E\\_{\\\\mathrm {clean} }\\-E\\_{\\\\mathrm {CO} }}  . + E   a d s    \\= \u2212\t40\\.829 \\+\t25\\.737 \\+\t14\\.835 \\= \u2212\t0\\.257  \t{\\\\displaystyle E\\_{\\\\mathrm {ads} }\\=\\-40\\.829\\+25\\.737\\+14\\.835\\=\\-0\\.257}  eV. ### Work function * We use this run also to calculate the work\\-function of Ni(111\\). * Use p4vasp to show the planar average of the potential: [](File_Fig_Ni_111_high_prec_1.html) * Vacuum potential   E  v a c  \\=5\\.45 {\\\\displaystyle E^{\\\\mathrm {vac} }\\=5\\.45}  eV.* Fermi level   \u03f5  F  \\=0\\.224 {\\\\displaystyle \\\\epsilon \\_{\\\\mathrm {F} }\\=0\\.224}  eV. (from OUTCAR file).* Work function   \u03a6 \\=  E  v a c  \u2212  \u03f5  F  \\=5\\.23 {\\\\displaystyle \\\\Phi \\=E^{\\\\mathrm {vac} }\\-\\\\epsilon \\_{\\\\mathrm {F} }\\=5\\.23}  eV. Download--------  Ni111clean\\_400eV.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "LDAU.md", "content": "LDAU= .TRUE. \\| .FALSE.   Default: **LDAU** \\= .FALSE.nDescription: LDAU\\=.TRUE. switches on DFT\\+U.  --- **Note on bandstructure calculation**: The CHGCAR file contains only information up to angular momentum quantum number   l {\\\\displaystyle l} \\=LMAXMIX for the on\\-site PAW occupancy matrices. When the CHGCAR file is read and kept fixed in the course of the calculations (ICHARG\\=11\\), the results will be necessarily not identical to a self\\-consistent run. The deviations are often large for DFT\\+U calculations. For the calculation of band structures within the DFT\\+U approach, it is hence strictly required to increase LMAXMIX to 4 (  d {\\\\displaystyle d}  elements) and 6 (  f {\\\\displaystyle f}  elements)."}
{"file_name": "LIBMBD_N_OMEGA_GRID.md", "content": "LIBMBD\\_N\\_OMEGA\\_GRID= \\[integer]   Default: **LIBMBD\\_N\\_OMEGA\\_GRID** \\= 15 (default in libMBD)nDescription: LIBMBD\\_N\\_OMEGA\\_GRID sets the number of points on the grid of imaginary frequencies used in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_N\\_OMEGA\\_GRID allows to choose the number of points on the grid of imaginary frequencies used in the library libMBD of many\\-body dispersion methods. The value is internally passed to the libMBD input **n\\_omega\\_grid** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "ROPT.md", "content": "ROPT= \\[real array], one entry for each species on the POTCAR filen| Default: **ROPT** | \\= \\-5E\\-4 | if LREAL\\=Auto and PREC\\=Normal || --- | --- | --- ||  | \\= \\-5E\\-4 | if LREAL\\=Auto and PREC\\=Single or SingleN ||  | \\= \\-2\\.5E\\-4 | if LREAL\\=Auto and PREC\\=Accurate ||  | \\= \\-0\\.01 | if LREAL\\=Auto and PREC\\=Low ||  | \\= \\-0\\.002 | if LREAL\\=Auto and PREC\\=Medium ||  | \\= \\-4E\\-4 | if LREAL\\=Auto and PREC\\=High | | Default: **ROPT** | \\= 2/3 | if LREAL\\=On and PREC\\=Low || --- | --- | --- ||  | \\= 1\\.0 | if LREAL\\=On and PREC\\=Medium ||  | \\= 1\\.5 | if LREAL\\=On and PREC\\=High |   Description: ROPT determines how accurately the projectors are represented in real space. With LREAL\\=On, the real space projectors are optimized using an algorithm proposed by King\\-Smith et al.[\\[1]](#cite_note-king-smith:prb:1991-1) LREAL\\=Auto[\\[2]](#cite_note-kresse:tobepublished-2) is the recommended scheme since it is considerably more accurate, resulting in more localized projector functions than with the King\\-Smith et al. method.  ---   | **Mind:*** Whether the user supplies negative or positive values in the INCAR file is irrelevant. With LREAL\\=Auto and On, ROPT are internally set to negative and positive values, respectively. * LREAL\\=On is outdated and should be only used, if compatibility to old calculations is desired. || --- | Depending on their value, VASP interprets ROPT entries in one of two ways: * ABS\\|ROPT\\| \u2265 0\\.1: \"conventional\"\\-mode: Sets the number of real space points within the cutoff sphere for a particular species to approximately 1000\u00d7ROPT. So for instance, the line  ```ROPT = 0.7 1.5  ``` will set the number of real space points within the cutoff sphere for the first species to approximately 700, and that for the second species to 1500\\.* ABS\\|ROPT\\| \\< 0\\.1\u00a0: \"precision\"\\-mode: In this case, the real\\-space operators will be optimized for an accuracy of approximately ROPT eV/atom. So, for instance specifying the following line in the INCAR file  ```ROPT = 1E-3 1E-3  ``` tells VASP to optimize the real\\-space projector operators for species 1 and 2 for an accuracy of approximately 1 meV/atom (10\\-3). The estimate is, however, fairly rough: this means that even if an error of say 0\\.5 meV/atom is selected, the actual error might well approach 5 meV/atom for transition metals with many electrons. It is recommended to first perform reference calculations using LREAL\\=.FALSE., then switch to LREAL\\=Auto and decrease ROPT until the desired accuracy is reached.The \"precision\" and \"conventional\" modes may be intermixed, i.e., it is possible to specify  ```ROPT = 0.7 -1E-3  ``` In this case, the number of real space points within the cutoff sphere for the first species will be approximately 700, whereas the real space projector functions for the second species are optimized for an accuracy of approximately 1 meV. We recommend to use the \"precision\" mode with a target accuracy of around 2x10\\-4 \\- 10\\-3 eV/atom. If you use the \"conventional\" mode, in which the number of grid points in the real space projection sphere is specified, you have to select ROPT carefully, especially if a hard species is mixed with a soft species. In that case the following lines in the OUTCAR file must be checked (here is the output for LREAL\\=Auto, however, the one for LREAL\\=On is quite similar)  ```Optimization of the real space projectorsmaximal supplied QI-value         = 13.98optimisation between [QCUT,QGAM] = [  8.81, 17.62] = [ 21.73, 86.94] RyOptimized for a Real-space Cutoff    1.41 Angstroem  l    n(q)    QCUT    max X(q) W(low)/X(q) W(high)/X(q)  e(spline)  2      6     8.810    59.645    0.61E-03    0.18E-02    0.11E-06  2      6     8.810    58.460    0.65E-03    0.19E-02    0.12E-06  0      7     8.810    97.683    0.18E-02    0.15E-03    0.13E-06  0      7     8.810    53.223    0.17E-02    0.15E-03    0.12E-06  1      7     8.810    13.596    0.47E-02    0.65E-02    0.33E-06  1      7     8.810     7.885    0.35E-02    0.48E-02    0.25E-06  ``` QCUT\") and QGAM\") are parameters chosen for the generation of this particular PAW dataset (or ultrasoft pseudopotential). The most important information is given in the columns W(low)/X(q) and W(high)/X(q) for LREAL\\=Auto). In these columns, the values must be as small as possible. If these values are too large increase the ROPT value from the default value (or decrease it if it smaller than 0\\.1\\). As a rule of thumb, the maximum allowed value in this column is 10\\-3 for PREC\\=Normal. (For PREC\\=Low errors might be around 10\\-2. If W(q)/X(q) is larger than 10\\-2 the errors introduced by the real space projections can be substantial. In this case ROPT must be specified in the INCAR file to avoid incorrect results.  Related tags and sections------------------------- LREAL,PREC Examples that use this tag"}
{"file_name": "IEPSILON.md", "content": "IEPSILON= 1 \\| 2 \\| 3 \\| 4nDescription: IEPSILON determines along which Cartesian direction the E field is applied.  --- * IEPSILON\\=1 x direction* IEPSILON\\=2 y direction* IEPSILON\\=3 z direction* IEPSILON\\=4 x, y and z direction; three indpendent calculations are performed | **Important:** IEPSILON only applies to the time\\-propagation algorithm. || --- |"}
{"file_name": "POTCAR.md", "content": "The POTCAR file is a mandatory input file. It contains the pseudopotential for each atomic species in the same order as in the POSCAR. An example to create the POTCAR file for a structure with three elements is  ``` cat ~/pot/Al/POTCAR ~/pot/C/POTCAR ~/pot/H/POTCAR > POTCAR  ``` The order must be the same order as defined in the POSCAR file. Also see:  * Simple instructions to set up a POTCAR file with the correct format: Preparing a POTCAR. * Guide on recommendations: Choosing pseudopotentials. | **Important:** The settings in the POTCAR file are read\\-only and must not be edited. || --- | No standard usage of VASP requires modifying the POTCAR file. Specifically, do not modify the LEXCH tag in the POTCAR file. If you want to select a different functional, set the XC, GGA or METAGGA tag in the INCAR file. File format----------- POTCAR files contain a header section with some tags, and large blocks of tabulated data containing the actual pseudopotential.More recent potential sets contain more information in the headers, so not all tags described below are present in all files ever distributed. Information about the atoms, i.e., their mass POMASS, their number of valence electrons ZVAL, the energy of the reference configuration for which the pseudopotential was created, etc. is present since VASP version 3\\.2\\. Since the release of the potpaw.54 potential set (VASP version 5\\.4\\) POTCAR files also contain a copyright notice and a unique hash that can be used for verification of the file. Some data, e.g., additional information about the kinetic\\-energy density of the core\\-electrons, is not available in all POTCAR files, but required for METAGGA calculations All POTCARs end with the line  `End of Dataset`. The Ti\\_pv potential from the potpaw\\_PBE.64 set, where the *3p* states are included in the valence, serves as an example to explain some tags in the following. | **Mind:** The information below is not complete. However, we believe that it covers the most information required in practice. Some other tags are also documented in the POTCAR file itself. || --- | TITELThe first line in any POTCAR file is the title of the pseudopotential. It is later printed again under the TITEL tag. Depending on the potential set, this might be more or less verbose. In our example, we have a PAW potential of Ti created with the PBE functional. The \"\\_pv\" suffix indicates that semicore *p*\\-states are included as valence electrons. We also see that this potential was created in September of 2000\\.`TITEL = PAW_PBE Ti_pv 07Sep2000` | **Tip:** You may choose this string to indicate what pseudopotential you have used in your publication to ensure the reproducibility of your results. || --- | LEXCHThis tag specifies the exchange\\-correlation functional used to create the potential. Even if another functional is selected in the INCAR via the XC, GGA or METAGGA tag, this information is required to recalculate the exchange\\-correlation energy inside the PAW spheres. Here, PE stands for the PBE functional.`LEXCH = PE`ZVALThis specifies the number of valence electrons considered in the pseudopotential. It is printed in the second line of the POTCAR and again in the same line as POMASS.POMASSThe atomic mass in atomic units. One can increase this in molecular dynamics calculations for light elements`POMASS = 47.880; ZVAL = 10.000 mass and valenz`ENMAX and ENMINThese two tags are default plane\\-wave cutoffs for the pseudopotential in electron Volt (eV). ENMIN is the minimum viable, end ENMAX the recommended cutoff. For POTCAR files with more than one species, the maximum cutoffs (ENMAX or ENMIN) are used for the calculation. Note that the INCAR tag ENCUT overwrites the default from the POTCAR.`ENMAX = 222.335; ENMIN = 166.751 eV` | **Tip:** We recommend setting the ENCUT tag in the INCAR file. || --- | EAUGThe energy cutoff for the plane\\-wave representation for the augmentation charges in eV. This might be overwritten in the INCAR using the tag ENAUG.`EAUG = 482.848`Atomic configurationThis block describes the atomic reference configuration used to create the pseudopotential. The first three columns, *n*, *l*, and *j* represent the principal, angular momentum, and total angular momentum *j*\\=\\|*l*\\+*s*\\| quantum numbers. This is followed by the total energy and the occupation numbers of the orbitals. Note that fractional occupations are possible because the reference configuration does not have to be the ground state. It is possible to deduce the valence\\-electron configuration of the potentential using the valence electron number (ZVAL): Add occupied states from the bottom of the table until it counts ZVAL, i.e., 10 in our example. Thus, we arrive at 3*p*63*d*34*s*1 for Ti\\_pv.  ```Atomic configuration    8 entries     n  l   j            E        occ.     1  0  0.50     -4865.3608   2.0000     2  0  0.50      -533.1368   2.0000     2  1  1.50      -440.5031   6.0000     3  0  0.50       -59.3186   2.0000     3  1  1.50       -35.7012   6.0000     3  2  2.50        -1.9157   3.0000     4  0  0.50        -3.7291   1.0000     4  3  2.50        -1.3606   0.0000  ``` Related tags and sections------------------------- Available potentials, Prepare a POTCAR, Choosing pseudopotentials, Projector\\-augmented\\-wave formalism"}
{"file_name": "BEXT.md", "content": "BEXT= \\[real] ( \\[real] \\[real] )n| Default: **BEXT** | \\= 0\\.0 | if ISPIN\\=2 || --- | --- | --- ||  | \\= 3\\*0\\.0 | if LNONCOLLINEAR\\=.TRUE. ||  | \\= N/A | else | Description: Specifies an external magnetic field in eV.  --- BEXT tag sets an external magnetic field that acts on the electrons in a Zeeman\\-like manner.An additional potential of the following form carries this interaction: * For spin\\-polarized calculations (ISPIN \\= 2\\):  V  \u2191  \\=  V  \u2191  \\+  B  e x t {\\\\displaystyle V^{\\\\uparrow }\\=V^{\\\\uparrow }\\+B\\_{\\\\rm {ext}}}  V  \u2193  \\=  V  \u2193  \u2212  B  e x t {\\\\displaystyle V^{\\\\downarrow }\\=V^{\\\\downarrow }\\-B\\_{\\\\rm {ext}}}  and  B  e x t {\\\\displaystyle B\\_{\\\\rm {ext}}}  \\= BEXT (in eV).* For noncollinear calculations (LNONCOLLINEAR \\= .TRUE.):  V  \u03b1 \u03b2  \\=  V  \u03b1 \u03b2  \\+  B  e x t  \u22c5  \u03c3  \u03b1 \u03b2 {\\\\displaystyle V\\_{\\\\alpha \\\\beta }\\=V\\_{\\\\alpha \\\\beta }\\+\\\\mathbf {B} \\_{\\\\rm {ext}}\\\\cdot \\\\mathbf {\\\\sigma } \\_{\\\\alpha \\\\beta }} where   B  e x t  \\= (  B  e x t  1  ,  B  e x t  2  ,  B  e x t  3  )  T {\\\\displaystyle \\\\mathbf {B} \\_{\\\\rm {ext}}\\=({B}\\_{\\\\rm {ext}}^{1},{B}\\_{\\\\rm {ext}}^{2},{B}\\_{\\\\rm {ext}}^{3})^{T}}  is given by | BEXT \\= B1 B2 B3\u00a0! in eV || --- |  and  \u03c3 {\\\\displaystyle \\\\mathbf {\\\\sigma } }  is the vector of Pauli matrices (SAXIS, default:   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}}  ).The effect of the above is most easily understood for the collinear case (ISPIN\\=2\\):The eigenenergies of spin\\-up states are raised by   B  e x t {\\\\displaystyle B\\_{\\\\rm {ext}}}  eV, whereas the eigenenergies of spin\\-down states are lowered by the same amount. The total energy changes by:  \u0394 E \\= (  n  \u2191  \u2212  n  \u2193  )  B  e x t {\\\\displaystyle \\\\Delta E\\=(n^{\\\\uparrow }\\-n^{\\\\downarrow })B\\_{\\\\rm {ext}}}  eVwhere   n  \u2191 {\\\\displaystyle n^{\\\\uparrow }}  and  n  \u2193 {\\\\displaystyle n^{\\\\downarrow }}  are the number of up\\- and down\\-spin electrons in the system.  BEXT is applied during the self\\-consistent electronic minimization and effectively shifts the eigenenergies of the spin\\-up and spin\\-down states w.r.t. each other at each step. Consequently, the electrons redistribute (changing the occupancies) *and* the density changes. The change in the density (,e.g., charge density and magnetization) also affects the scf potential and KS orbitals. For a rigid\\-band Zeeman splitting, converge the charge density with BEXT\\=0 and restart with BEXT  \u2260 {\\\\displaystyle \\\eq } 0 and fixed charge density (ICHARG\\=11\\). Units----- For an applied magnetic field   B  0 {\\\\displaystyle B\\_{0}} , the energy difference between two Zeeman\\-splitted electronic states is given by:  \u210f \u03c9 \\=  g  e  \u03bc  B  B  0  , {\\\\displaystyle \\\\hbar \\\\omega \\=g\\_{e}\\\\mu \\_{B}B\\_{0},} where   \u03bc  B {\\\\displaystyle \\\\mu \\_{B}}  is the Bohr magneton and   g  e {\\\\displaystyle g\\_{e}}  is the electron spin *g*\\-factor. For ISPIN\\=2, rigid\\-band Zeeman\\-splitted states imply:  V  \u2191  \u2212  V  \u2193  \\= 2  B  e x t {\\\\displaystyle V^{\\\\uparrow }\\-V^{\\\\downarrow }\\=2B\\_{\\\\rm {ext}}} This leads to the following relationship between our definition of   B  e x t {\\\\displaystyle B\\_{\\\\rm {ext}}}  (in eV) and the magnetic field   B  0 {\\\\displaystyle B\\_{0}}  (in T):   B  0  \\=  2  B  e x t  g  e  \u03bc  B {\\\\displaystyle B\\_{0}\\={\\\\frac {2B\\_{\\\\rm {ext}}}{g\\_{e}\\\\mu \\_{B}}}} where   \u03bc  B {\\\\displaystyle \\\\mu \\_{B}} \\= 5\\.788 381 8060 x 10\\-5 eV T\\-1, and   g  e {\\\\displaystyle g\\_{e}} \\= 2\\.002 319 304 362 56\\."}
{"file_name": "Determining_the_Magnetic_Anisotropy.md", "content": "Description: Magnetocrystalline Anisotropy Energy determined non\\-self\\-consistently The Magnetocrystalline Anisotropy Energy is determined by rotating all spins according to different directions. First of all, an accurate (PREC \\= Accurate, LREAL \\= .False.) collinear calculation (using the vasp\\_std version) in the ground state has to be done. Next, the spin\\-orbit coupling (LSORBIT \\= .True. using the vasp\\_ncl version) is taken into account non\\-self\\-consistently (ICHARG \\= 11\\) for several spin orientations. In most cases, the changes in energies are very low (sometimes around micro\\-eV). The number of bands for the has to be doubled compared to the collinear run. To modify the orientation of the spins in the crystal, we consider the second approach described here. For the MAGMOM\\-tag, the total local magnetic moment is written according to the z\\-direction (necessarily, the x and y\\-directions are equal to 0\\). The spin orientation   ( u , v , w ) {\\\\displaystyle (u,v,w)}  is defined by the SAXIS\\-tag in the Cartesian frame. The Magnetocrystalline Anisotropy Energy is calculated by orientating the spins in different directions and the following equation  E  MAE  \\=  E  ( u , v , w )  \u2212  E  0 {\\\\displaystyle E\\_{\\\\text{MAE}}\\=E\\_{(u,v,w)}\\-E\\_{0}} with   E  0 {\\\\displaystyle E\\_{0}}  the energy of the most stable spin orientation.More details are available in the SAXIS and LSORBIT pages. *Exercise\u00a0:* Determine the Magnetocrystalline Anisotropy Energy of NiO in a non self\\-consistent approach by orientating the spins along the following path\u00a0: (2,2,2\\) \\-\\-\\> (2,2,1\\) \\-\\-\\> (2,2,0\\) \\-\\-\\> ... \\-\\-\\> (2,2,\\-6\\). Compare to the self\\-consistent approach.  --- * INCAR  ```NiO MAE  SYSTEM    = \"NiO\" Electronic minimization  PREC = Accurate  ENCUT         = 450  EDIFF         = 1E-7  LORBIT        = 11  LREAL         = .False.  ISYM          = -1  NELMIN        = 6  #  ICHARG = 11  #  LCHARG = .FALSE.  #  LWAVE = .FALSE.  #  NBANDS = 52  #  GGA_COMPAT = .FALSE.  DOS  ISMEAR    = -5 Magnetism  ISPIN     = 2  MAGMOM = 2.0 -2.0 2*0.0  # MAGMOM    = 0 0 2 0 0 -2 6*0 # Including Spin-orbit  # LSORBIT       = .True.  # SAXIS = 1 0 0 # Quantization axis used to rotate all spins in a direction defined in the (O,x,y,z) Cartesian frame Orbital mom.  LORBMOM = T Mixer  AMIX      = 0.2  BMIX      = 0.00001  AMIX_MAG  = 0.8  BMIX_MAG  = 0.00001 GGA+U  LDAU      = .TRUE.  LDAUTYPE  = 2  LDAUL     = 2 -1  LDAUU     = 5.00 0.00  LDAUJ     = 0.00 0.00  LDAUPRINT = 1  LMAXMIX   = 4   ``` * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` Download--------  nio\\_noSOC.tgz  ---"}
{"file_name": "NGYROMAG.md", "content": "NGYROMAG= \\[real array]   Default: **NGYROMAG** \\= NTYP\\*1\\.0nDescription: NGYROMAG specifies the nuclear gyromagnetic ratios (in MHz, for H0 \\= 1 T) for the atomic types on the POTCAR file.   --- By means of the NGYROMAG\\-tag one can specify the nuclear gyromagnetic ratio:  ```NGYROMAG = gamma_1  gamma_2 ... gamma_N  ``` where one should specify one number for each of the *N* species on the POSCAR file.If one does not set NGYROMAG in the INCAR file, VASP assumes a factor of 1 for each species."}
{"file_name": "EMIN.md", "content": "EMIN= \\[real]n| Default: **EMIN** | \\= lowest KS\\-eigenvalue \\-     \u0394   {\\\\displaystyle \\\\Delta }  \\Delta |  || --- | --- | --- | Description: EMIN specifies the lower boundary of the energy range for the evaluation of the DOS  --- The DOS is evaluated each NBLOCK steps, DOSCAR is updatedeach NBLOCK\\*KBLOCK steps.  | **Tip:** Set EMIN to a value larger than EMAX, if you are not sure where the region of interest lies. || --- |"}
{"file_name": "LSCALAPACK.md", "content": "LSCALAPACK= \\[logical]n| Default: **LSCALAPACK** | \\= .TRUE. | if VASP is compiled with scaLAPACK support (precompiler flag \\-DscaLAPACK) || --- | --- | --- ||  | \\= .FALSE. | otherwise | Description: LSCALAPACK controls the use of scaLAPACK.   --- For LSCALAPACK\\=.TRUE., VASP uses scaLAPACK routines for the orthonormalization of the wave functions and subspace diagonalizations. The use of scaLAPACK for the LU decomposition in the orthonormalization of the wave functions may be independently switched off (LSCALU\\=.FALSE.)."}
{"file_name": "ML_CDOUB.md", "content": "ML\\_CDOUB= \\[real]n| Default: **ML\\_CDOUB** | \\= 4\\.0 | for `ML_MODE = select` || --- | --- | --- ||  | \\= 2\\.0 | else | Description: This tag controls the criterion for \"enforced\" DFT calculations within the machine learning force field method.  --- The usage of this tag in combination with the learning algorithms is described here: here. If at any time, the estimated force errors are ML\\_CDOUB times larger than the Bayesian threshold (i.e. \"critically\" high), a first principles calculation is performed and a new force field is immediately generated (even if the counter for sampling is below the minimum amount of sampled structures ML\\_NMDINT)."}
{"file_name": "PHON_NSTRUCT.md", "content": "PHON\\_NSTRUCT= \\[integer]   Default: **PHON\\_NSTRUCT** \\= nonenDescription: This flag sets the number of structures for electron\\-phonon interactions from Monte\\-Carlo (MC) sampling.   --- This feature is only available from VASP version 6\\.0 or higher. For PHON\\_NSTRUCT\\=\\-1 the eigenvalues and eigenvectors of the dynamic matrix are written to the file DYNMATFULL. For PHON\\_NSTRUCT\\=0 the ZG configuration[\\[1]](#cite_note-zacharias:prb:2016-1) (one\\-shot) method is executed. For PHON\\_NSTRUCT\\>0 that many MC structures are prepared. For further usage of this tag see: Electron\\-phonon interactions from Monte\\-Carlo sampling."}
{"file_name": "INIMIX.md", "content": "INIMIX= 0 \\| 1 \\| 2   Default: **INIMIX** \\= 1nDescription: INIMIX determines the functional form of the initial mixing matrix in the Broyden scheme (IMIX\\=4\\).  --- The initial mixing matrix might influence the convergence speed for complex situations (especially surfaces and magnetic systems), nevertheless INIMIX must not be changed from the default setting: anything which can be done with INIMIX can also be done with AMIX and BMIX, and changing AMIX and BMIX is definitely preferable. Possible choices for INIMIX are: * INIMIX\\=0 Linear mixing according to the setting of AMIX* INIMIX\\=1 Kerker mixing (see IMIX\\=1\\) according to the settings of AMIX and BMIX.The mixed density is given by  \u03c1  m i x  ( G )  \\=  \u03c1  i n  ( G )  \\+ A  G  2  G  2  \\+  B  2  (  \u03c1  o u t  ( G )  \u2212  \u03c1  i n  ( G )  ) {\\\\displaystyle \\\\rho \\_{\\\\rm {mix}}\\\\left(G\\\\right)\\=\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right)\\+A{\\\\frac {G^{2}}{G^{2}\\+B^{2}}}{\\\\Bigl (}\\\\rho \\_{\\\\rm {out}}\\\\left(G\\\\right)\\-\\\\rho \\_{\\\\rm {in}}\\\\left(G\\\\right){\\\\Bigr )}} with   A {\\\\displaystyle A} \\=AMIX and   B {\\\\displaystyle B} \\=BMIX* INIMIX\\=2 No mixing (equal to INIMIX\\=0 and AMIX\\=1, not recommended)"}
{"file_name": "Preconditioning.md", "content": "The idea is to find a matrix that multiplied with the residual vector gives theexact error in the wavefunction. Formally this matrix (the Greens function) can be writtendown and is given by  1  H  \u2212  \u03f5  n  , {\\\\displaystyle {\\\\frac {1}{{\\\\bf {H}}\\-\\\\epsilon \\_{n}}},} where   \u03f5  n {\\\\displaystyle \\\\epsilon \\_{n}}  is the exact eigenvalue for the band in interest.Actually the evaluation of this matrix is not possible, recognizing that thekinetic energy dominates the Hamiltonian for large   G {\\\\displaystyle \\\\mathbf {G} } \\-vectors(i.e.   H  G  ,  G \u2032  \u2192  \u03b4  G  ,  G \u2032  \u210f  2  2 m  G  2 {\\\\displaystyle H\\_{\\\\mathbf {G} ,\\\\mathbf {G'} }\\\\to \\\\delta \\_{\\\\mathbf {G} ,\\\\mathbf {G'} }{\\\\frac {\\\\hbar ^{2}}{2m}}\\\\mathbf {G} ^{2}} ), itis a good idea to approximate the matrix by a diagonalfunction which converges to   2 m  \u210f  2  G  2 {\\\\displaystyle {\\\\frac {2m}{\\\\hbar ^{2}\\\\mathbf {G} ^{2}}}}  for large   G {\\\\displaystyle \\\\mathbf {G} }  vectors, and possessa constant value for small   G {\\\\displaystyle \\\\mathbf {G} }  vectors.We actually use the preconditioning function proposed by Teter et. al[\\[1]](#cite_note-teter:prb:1989-1)  \u27e8  G  \\|  K  \\|  G \u2032  \u27e9 \\=  \u03b4  G  G \u2032  27 \\+ 18 x \\+ 12  x  2  \\+ 8  x  3  27 \\+ 18 x \\+ 12  x  2  \\+ 8  x  3  \\+ 16  x  4  and  x \\=  \u210f  2  2 m  G  2 1\\.5  E  k i n  (  R  )  , {\\\\displaystyle \\\\langle \\\\mathbf {G} \\|{\\\\bf {K}}\\|\\\\mathbf {G'} \\\\rangle \\=\\\\delta \\_{{\\\\mathbf {G}}\\\\mathbf {G'} }{\\\\frac {27\\+18x\\+12x^{2}\\+8x^{3}}{27\\+18x\\+12x^{2}\\+8x^{3}\\+16x^{4}}}\\\\quad {\\\\mbox{and}}\\\\quad x\\={\\\\frac {\\\\hbar ^{2}}{2m}}{\\\\frac {G^{2}}{1\\.5E^{\\\\rm {kin}}(\\\\mathbf {R} )}},} with   E  k i n  (  R  ) {\\\\displaystyle E^{\\\\rm {kin}}({\\\\mathbf {R}})}  being the kinetic energy of the residual vector.The preconditioned residual vector is then simply  \\|  p  n  \u27e9 \\=  K  \\|  R  n  \u27e9 . {\\\\displaystyle \\|p\\_{n}\\\\rangle \\={\\\\bf {K}}\\|R\\_{n}\\\\rangle .}"}
{"file_name": "EDIFF.md", "content": "EDIFF= \\[real]   Default: **EDIFF** \\=   10  \u2212 4 {\\\\displaystyle 10^{\\-4}}   Description: EDIFF specifies the global break condition for the electronic SC\\-loop. EDIFF is specified in units of eV.  --- The relaxation of the electronic degrees of freedom stops if the total (free) energy change and the band\\-structure\\-energy change ('change of eigenvalues') between two steps are both smaller than EDIFF (in eV). For EDIFF\\=0, strictly NELM electronic self\\-consistency steps will be performed. In most cases, the convergence speed is quadratic, so often the cost for the additional iterations is small. Hence, for well converged calculations, we strongly recommend to decrease EDIFF to 1E\\-6\\. For finite difference calculations (e.g. phonons), even EDIFF \\= 1E\\-7 might be required in order to obtain precise results. On the other hand, for large systems with many atoms and/or when using meta\\-GGA functionals, attaining an energy convergence of 1E\\-8 or even 1E\\-7 might be difficult. So, overall EDIFF\\= 1E\\-6 is likely the best compromise."}
{"file_name": "Equilibrium_volume_of_Si_in_the_RPA.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorials Task---- In this example you will calculate the equilibrium lattice constant of Si in the RPA (ACFDT). The workflow of a RPA total energy calculations consists of five consecutive steps: 1. a \u201cstandard\u201d DFT groundstate calculation with a \u201cdense\u201d mesh of k\\-points.2. compute the Hartree\\-Fock energy using the DFT orbitals of Step 1\\. Needs WAVECAR file from step 1\\.3. a \u201cstandard\u201d DFT groundstate calculation with \u201ccoarse\u201d mesh of k\\-points.4. obtain DFT \u201cvirtual\u201d orbitals (empty states). Needs WAVECAR file from step 3\\.5. the RPA correlation energy (ACFDT) calculation. Needs WAVECAR and WAVEDER files from step 4\\. In case of metallic systems there is an additional step between Steps 4 and 5, that is beyond thescope of this example. **N.B.:**To compute the equilibrium lattice constant of Si we need to calculate the RPA total energy for a range of different lattice constants.All of the calculation steps are prepared automatically performed by the script *doall.sh* (see below):  ``` ./doall.sh  ``` This script will perform the following calculations for a range of different lattice constants: ### Step 1: DFT groundstate calculation with a \u201cdense\u201d mesh of k\\-points * The following INCAR file is used (INCAR.DFT):  ```ISMEAR = 0\u00a0; SIGMA = 0.05EDIFF = 1E-8  ``` * The following KPOINTS file is used (KPOINTS.12\\):  ```12x12x12 0 G 12 12 12  0  0  0  ```   ### Step 2: Compute the Hartree\\-Fock energy using the DFT orbitals * To Compute the Hartree\\-Fock energy using DFT orbitals we need the (WAVECAR) of Step 1\\. * The INCAR file INCAR.EXX is used in this step:  ```ALGO = EIGENVAL\u00a0; NELM = 1LWAVE = .FALSE.LHFCALC = .TRUE.AEXX = 1.0\u00a0; ALDAC = 0.0\u00a0; AGGAC = 0.0NKRED = 2ISMEAR = 0\u00a0; SIGMA = 0.05KPAR = 8NBANDS = 4  ``` * NKRED\\=2 is used for the downsample the k\\-space representation of the Fock\\-potential to save time. * Using NBANDS\\=4 only occupied states are considered to save time.   ### Step 3: DFT groundstate calculation with a \u201ccoarse\u201d mesh of k\\-points * Perform a DFT groundstate calculation with a \u201ccoarse\u201d mesh of k\\-points. This is the mesh of k\\-points that will be used in the subsequent ACFDT calculation.* The following INCAR file is used (INCAR.DFT):  ```ISMEAR = 0\u00a0; SIGMA = 0.05EDIFF = 1E-8  ``` * The following coarse KPOINTS file is used (KPOINTS.6\\):  ```6x6x6 0 G  6  6  6  0  0  0  ```   ### Step 4: Obtain DFT \"virtual\" orbitals (empty states) * Obtain DFT \"virtual\" orbitals (empty states). * The following INCAR file is used in this step (INCAR.DIAG):  ```ALGO = ExactNBANDS = 64NELM = 1LOPTICS = .TRUE.ISMEAR = 0\u00a0; SIGMA = 0.05   ``` * In this step one needs to set LOPTICS\\=*.TRUE.* so that VASP calculates the derivative of the orbitals w.r.t. the Bloch wavevector (stored in the WAVEDER file). These are needed to correctly describe the long\\-wavelength limit of the dielectric screening.* We use exact diagonalization (ALGO\\=*Exact*) and keep 64 bands after diagonalization (NBANDS\\=64\\).* This calculations needs the orbitals (WAVECAR file) written in Step 3\\.   ### Step 5: calculate the RPA correlation energy (ACFDT) * The following INCAR file is used in this step (INCAR.ACFDT):  ```ALGO = ACFDTNBANDS = 64ISMEAR = 0\u00a0; SIGMA = 0.05  ``` * In OUTCAR.ACFDT.X.X one finds the RPA correlation energy, e.g.:  ```        cutoff energy      smooth cutoff    RPA   correlation   Hartree contr. to MP2 ---------------------------------------------------------------------------------             163.563            130.851       -10.7869840331      -19.0268026572             155.775            124.620       -10.7813600055      -19.0200457142             148.357            118.685       -10.7744584182      -19.0118291822             141.292            113.034       -10.7659931963      -19.0017871991             134.564            107.651       -10.7555712745      -18.9894197881             128.156            102.525       -10.7428704760      -18.9742991317             122.054             97.643       -10.7273118140      -18.9556871679             116.241             92.993       -10.7085991597      -18.9331679971 linear regression converged value                              -10.9079580568      -19.1711146204  ``` * Take the \u201cconverged value\u201d, in this case: *EC(RPA) \\= \\-10\\.9079580568*eV (an approximate \u201cinfinite basis set\u201d limit). * This calculations needs the orbitals (WAVECAR file) and the derivative of the orbitals w.r.t. the Bloch wavevectors (WAVEDER file) written in Step 4\\. * The RPA total energy is calculated as the, *E(RPA)\\=EC(RPA)\\+EXX*, the sum of the RPA correlation energy of step 5 *EC(RPA)* and the Hartree fock energy *EXX* of step 2\\. To get the Hartree fock energy `grep \u201cfree energy\u201d` in the OUTCAR.EXX.\\* file (there are two spaces between free and energy).  Running this example-------------------- The following bash\\-script `doall.sh` will run through all of the aforementioned calculational steps (step 1\\-5\\) for a range of different lattice constants (*a\\=5\\.1\\-5\\.8* \u00c5 in steps of *0\\.1* \u00c5)  ``` ## To run VASP this script calls $vasp_std# (or posibly $vasp_gam and/or $vasp_ncl).# These variables can be defined by sourcing vaspcmd. vaspcmd 2> /dev/null  ## When vaspcmd is not available and $vasp_std,# $vasp_gam, and/or $vasp_ncl are not set as environment# variables, you can specify them here[ -z \"`echo $vasp_std`\" ] && vasp_std=\"mpirun -np 8 /path-to-your-vasp/vasp_std\"[ -z \"`echo $vasp_gam`\" ] && vasp_gam=\"mpirun -np 8 /path-to-your-vasp/vasp_gam\"[ -z \"`echo $vasp_ncl`\" ] && vasp_ncl=\"mpirun -np 8 /path-to-your-vasp/vasp_ncl\"  ## The real work starts here # for i in  5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8\u00a0; do cat >POSCAR <<!system Si $i0.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.000.25 0.25 0.25 ! # start with a PBE calculation with a lot of k-points (needed for EXX)rm WAVECAR WAVEDERcp KPOINTS.12 KPOINTScp INCAR.DFT INCAR$vasp_std cp OUTCAR OUTCAR.DFT.$ie1=`awk '/free  energy/ {print $5}' OUTCAR` # get the HF energy with PBE orbitalscp INCAR.EXX INCAR$vasp_stde2=`awk '/free  energy/ {print $5}' OUTCAR` cp OUTCAR OUTCAR.EXX.$i # now a PBE calculation with less k-pointsrm WAVECAR WAVEDERcp KPOINTS.6 KPOINTScp INCAR.DFT INCAR$vasp_std # obtain virtual orbitalscp INCAR.DIAG INCAR$vasp_std cp OUTCAR OUTCAR.DIAG.$icp WAVECAR WAVECAR.$icp WAVEDER WAVEDER.$i ## for metals# cp INCAR.HFC INCAR# $vasp_std ## cp OUTCAR OUTCAR.HFC.$i# e3=`awk '/HF-correction/ {print $4}' OUTCAR` # RPA correlationcp INCAR.ACFDT INCAR$vasp_std cp OUTCAR OUTCAR.ACFDT.$ie4=`awk '/converged value/ {print $3}' OUTCAR` # echo $i $e1 $e2 $e3 $e4 >> summaryecho $i $e1 $e2 $e4 >> summary done  ``` To execute the aforementions script:  ```./doall.sh  ```   * When everything is finished you can quickly visualize (with gnuplot) the total energy vs. lattice\\-constant curves for DFT and RPA by means of:  ```./plotall.sh  ``` [](File_Fig_ACFDT_1_a.html) [](File_Fig_ACFDT_1_b.html)  --- Download--------  Si\\_ACFDT\\_vol.tgz Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorials"}
{"file_name": "LSPIRAL.md", "content": "LSPIRAL= .TRUE. \\| .FALSE.   Default: **LSPIRAL** \\= .FALSE.nDescription: set LSPIRAL\\=.TRUE. to represent spin spirals by means of a generalized Bloch condition.  --- See the description of spin spiral calculations for more details."}
{"file_name": "GW_and_ACFDT_-_Tutorial.md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsThe tutorial is made of the following parts: 1. bandgap of Si in GW2. bandstructure of Si in GW (VASP2WANNIER90\\).html \"Bandstructure of Si in GW (VASP2WANNIER90)\")3. bandstructure of SrVO3 in GW4. CRPA of SrVO35. Equilibrium volume of Si in the RPA"}
{"file_name": "TSUBSYS.md", "content": "TSUBSYS= \\[real array]nDescription: TSUBSYS sets the temperatures for the atomic subsystems in calculations with multiple Anderson thermostats (in case VASP was compiled with \\-Dtbdyn).  --- Up to three user\\-defined atomic subsystems may be coupled with independent Andersen thermostats[\\[1]](#cite_note-Andersen80-1) (MDALGO\\=13\\). The simulation temperature for the atomic subsystems is set by means of the TSUBSYS tag (one has to specify one number for each subsystem)."}
{"file_name": "NSIM.md", "content": "NSIM= \\[integer]   Default: **NSIM** \\= 4nDescription: NSIM sets the number of bands that are optimized simultaneously by the RMM\\-DIIS algorithm.  --- The RMM\\-DIIS algorithm (IALGO\\=48\\) works in a blocked mode. NSIM bands are optimized at the same time. This allows to use matrix\\-matrix operations instead of matrix\\-vector operation for the evaluations of the non local projection operators in real space, and might speed up calculations on some machines. There should be no difference in the total energy and the convergence behavior between NSIM\\=1 and NSIM\\>1, only the performance should improve."}
{"file_name": "CSVR_thermostat.md", "content": "One popular strategy to control the temperature in NVT MD is based on rescaling atomic velocities (  v  i {\\\\displaystyle {\\\\mathbf {v}}\\_{i}} ) at a certain predefined frequency by a factor   \u03b1 \\=  K \u00af  /  K {\\\\displaystyle \\\\alpha \\={\\\\sqrt {{\\\\bar {K}}/K}}}  in such a way that the total kinetic energy of the system   K \\=  1 2  \u2211  i \\= 1  N  m  i  \\|  v  i  \\|  2  , {\\\\displaystyle K\\={\\\\frac {1}{2}}\\\\sum \\\\limits \\_{i\\=1}^{N}m\\_{i}\\|{\\\\mathbf {v}}\\_{i}\\|^{2},} is equal to the average kinetic energy corresponding to a given temperature:  K \u00af  \\=  1 2  N  f  k  B  T {\\\\displaystyle {\\\\bar {K}}\\={\\\\frac {1}{2}}N\\_{f}k\\_{B}T} where   N  f {\\\\displaystyle N\\_{f}}  is the number of degrees of freedom (e.g.,   N  f  \\= 3 N \u2212 3 {\\\\displaystyle N\\_{f}\\=3N\\-3}  in the case of 3D periodic systems) and   N {\\\\displaystyle N}  is the number of atoms per the simulation cell. Such a method, however, suffers from several problems. First, the ensemble generated is not strictly canonical. Second, rescaling velocities creates discontinuities in trajectories. As a consequence, the method has no conserved quantity that could be used to guide the choice of simulation parameters, such as the size of the integration step. Also, the rescaling introduces artificial fast fluctuations to velocities, making the evaluation of time correlations problematic. Finally, the trajectories generated via a na\u00efve rescaling method often suffer from ergodicity issues, such as the flying ice\\-cube problem, in which kinetic energy of a part of the vibrational degrees of freedom is transferred into translations and/or rotations, violating the equipartition principle.  The canonical sampling through velocity rescaling (CSVR) proposed by Bussi et al.[\\[1]](#cite_note-:0-1) removes most of the difficulties of the na\u00efve rescaling approach. Here, the term   K \u00af {\\\\displaystyle {\\\\bar {K}}}  is replaced by   K  t {\\\\displaystyle K\\_{t}}  obtained for each time step by propagating in time via auxiliary dynamics  d K \\= (  K \u00af  \u2212 K )  d t  \u03c4  \\+ 2  K  K \u00af  N  f  d W  \u03c4 {\\\\displaystyle dK\\=({\\\\bar {K}}\\-K){\\\\frac {dt}{\\\\tau }}\\+2{\\\\sqrt {\\\\frac {K{\\\\bar {K}}}{N\\_{f}}}}{\\\\frac {dW}{\\\\sqrt {\\\\tau }}}} where   d W {\\\\displaystyle dW}  is a Wiener noise and   \u03c4 {\\\\displaystyle \\\\tau }  determines the characteristic time scale of the CSVR thermostat. The latter is the only parameter of this thermostat and can be defined via flag CSVR\\_PERIOD. Importantly, the auxiliary dynamics generates canonical distribution for kinetic energy:  P (  K  t  ) d  K  t  \u221d  K  t  (  N  f  /  2 \u2212 1 )  e  \u2212  K  t  /  k  B  T  d  K  t {\\\\displaystyle P(K\\_{t})dK\\_{t}\\\\propto K\\_{t}^{(N\\_{f}/2\\-1\\)}e^{\\-K\\_{t}/k\\_{B}T}dK\\_{t}} The conserved quantity of the CSVR thermostat is the effective energy   H \\~ {\\\\displaystyle {\\\\tilde {H}}}  defined as:  H \\~  ( t ) \\= H ( t ) \u2212  \u222b  0  t \u2032  (  K \u00af  \u2212 K )  d  t \u2032  \u03c4  \u2212 2  \u222b  0  t  K  t \u2032  K \u00af  N  f  d W (  t \u2032  )  \u03c4 {\\\\displaystyle {\\\\tilde {H}}(t)\\=H(t)\\-\\\\int \\_{0}^{t'}({\\\\bar {K}}\\-K){\\\\frac {dt'}{\\\\tau }}\\-2\\\\int \\_{0}^{t}{\\\\sqrt {\\\\frac {K{t'}{\\\\bar {K}}}{N\\_{f}}}}{\\\\frac {dW(t')}{\\\\sqrt {\\\\tau }}}} As shown by Bussi et al.[\\[1]](#cite_note-:0-1), the CSVR thermostat does not significantly affect the evaluation of dynamical properties, such as the velocity autocorrelation functions or diffusion coefficients.     ---"}
{"file_name": "NRMM.md", "content": "NRMM= \\[integer]   Default: **NRMM** \\= 4nDescription: NRMM sets the maximum number of iterative steps for RMM\\-DIIS (IALGO\\=4X) or Davidson algorithms (IALGO\\=3X). Note: This tag was formerly known as NDAV which is the name of the variable in the VASP source code.  ---"}
{"file_name": "WC.md", "content": "WC= \\[real]   Default: **WC** \\= 1000\\.nDescription: WC specifies the weight factor for each step in Broyden mixing scheme (IMIX\\=4\\).  --- * WC\\>0 Set all weights identical to WC (resulting in Pulay's mixing method), up to now Pulay's scheme was always superior to Broyden's 2nd method.* WC\\=0 Switch to Broyden's 2nd method, i.e., set the weight for the last step equal to 1000 and all other weights equal to 0\\.* WC\\<0 (implemented for test purposes: **not** recommended) Try some automatic setting of the weights according to:  W  i t e r  \\=0\\.01  \\|  W C  \\|  /  \\|  \\|  \u03c1  o u t  \u2212  \u03c1  i n  \\|  \\|  p r e c o n d . {\\\\displaystyle W\\_{\\\\rm {iter}}\\=0\\.01\\|{\\\\rm {WC}}\\|/\\|\\|\\\\rho \\_{\\\\rm {out}}\\-\\\\rho \\_{\\\\rm {in}}\\|\\|\\_{\\\\rm {precond.}}\\\\,} in order to set small weights for the first steps and increase weights for the last steps.Related Tags and Sections------------------------- IMIX,INIMIX,MAXMIX,AMIX,BMIX,AMIX\\_MAG,BMIX\\_MAG,AMIN,MIXPRE Examples that use this tag  ---"}
{"file_name": "Cite.md", "content": "This template is similar to how LaTeX manages citations, you have a key and then a text that is included.The template translates this to the mediawiki format. Usage {{cite\\|*key*}}. | **Mind:** Add new citations to the end of this list. Be wary of the whitespace here as it will be introduced to the other document when you include it via the template. A good test is that the preview page should be completely empty and not show any empty lines. || --- |"}
{"file_name": "NERSC_Berkeley_2016_HOWTO.md", "content": "* **The examples**: * can be copied from:  ```/project/projectdirs/training/www/VASPWorkshop2016/exercises  ``` * or may be downloaded from the workshop wiki page. * **Running the examples**: Almost all examples come with a bash\\-script that runs them. These scripts are called *job.sh*, *doall.sh*, *loop.sh*, *run.sh* or something original like that.To submit these jobscripts to the Haswell nodes on Cori you may do the following:* Copy the files hsw.sl and sub.sh to the directory where you want to run the example:  ```cd path-to-your-directorycp /project/projectdirs/training/www/VASPWorkshop2016/exercises/hsw.sl .cp /project/projectdirs/training/www/VASPWorkshop2016/exercises/sub.sh .  ``` * To submit for instance the jobscripts *run.sh*, you specify:  ```./sub.sh run.sh  ``` * **hsw.sl** The file hsw.sl contains the slurm\\-preamble, loads the relevant environment modules, and sets the command with which VASP will be called by the jobscript:  ```#!/bin/bash -l#SBATCH -N 1#SBATCH -p regular#SBATCH -t 30:00#SBATCH -C haswell export OMP_NUM_THREADS=4export OMP_PROC_BIND=spreadexport OMP_PLACES=threads module use ~usgsw/modulefilesmodule load vasp/20161102-hsw export vasp_std=\"srun -n 4 -c 16 --cpu_bind=cores /global/homes/u/usgsw/vasp/20161102/hsw/intel/bin/vasp_std\"  ``` In this case hsw.sl requests 1 Haswell node (32 cores), and the vasp\\_std command will run VASP using 4 MPI\\-ranks, that each will be able to start 4 openMP\\-threads.* **sub.sh** The bash\\-script sub.sh does very little but concatenate hsw.sl and a call to the jobscript specified as its argument, and submits the result (sub.sl):  ```#!/bin/bash -l cat ./hsw.sl > sub.slecho ./$1   >> sub.sl sbatch sub.sl  ``` To be specific, the command  ```./sub.sh run.sh  ``` will submit the following sub.sl file:  ```#!/bin/bash -l#SBATCH -N 1#SBATCH -p regular#SBATCH -t 30:00#SBATCH -C haswell export OMP_NUM_THREADS=4export OMP_PROC_BIND=spreadexport OMP_PLACES=threads module use ~usgsw/modulefilesmodule load vasp/20161102-hsw export vasp_std=\"srun -n 4 -c 16 --cpu_bind=cores /global/homes/u/usgsw/vasp/20161102/hsw/intel/bin/vasp_std\"./run.sh  ```"}
{"file_name": "LSEPB.md", "content": "LSEPB= \\[logical]   Default: **LSEPB** \\= .FALSE.nDescription: Specifies whether the partial charge density is summed up for all selected bands or separated and printed out in different files.  --- If LPARD \\= .TRUE. the partial charge density is calculated for a subset of bands selected via the IBAND, NBMOD, and EINT tags. If LSEPB is set to .TRUE., separate PARCHG.nb.ALLK or PARCHG.nb.nk files are created, dependent on the LSEPK tag. If LSEPB \\= .FALSE., the output is written to PARCHG or PARCHG.ALLB.nk, again depending on LSEPK. Here are four examples to illustrate the interplay of LSEPB and LSEPK. in all cases, the following settings apply, selecting three specific bands and two **k** points `IBAND = 9 10 11`, `NBMOD = 3`, and `KPUSE = 1 34`: * `LSEPB = .FALSE.`, `LSEPK = .FALSE.` | **output files:** PARCHG || --- | * `LSEPB = .TRUE.`, `LSEPK = .FALSE.` | **output files:** PARCHG.0009\\.ALLK, PARCHG.0010\\.ALLK, PARCHG.0011\\.ALLK || --- | * `LSEPB = .FALSE.`, `LSEPK = .TRUE.` | **output files:** PARCHG.ALLB.0001, PARCHG.ALLB.0034 || --- | * `LSEPB = .TRUE.`, `LSEPK = .TRUE.` | **output files:** PARCHG.0009\\.0001, PARCHG.0009\\.0034, PARCHG.0010\\.0001, PARCHG.0010\\.0034, PARCHG.0011\\.0001, PARCHG.0011\\.0034 || --- |"}
{"file_name": "LIBXC2_Pn.md", "content": "LIBXC2\\_Pn= \\[real]nDescription: LIBXC2\\_Pn, where   n \\= 1 , 2 , \u2026 {\\\\displaystyle n\\=1,2,\\\\ldots }  allows to specify the values of the parameters of the functional implemented in Libxc that is called with LIBXC2.  --- A detailed explanation on how to use LIBXC1\\_Pn and LIBXC2\\_Pn and an example can be found at the LIBXC1\\_Pn page."}
{"file_name": "XC_C.md", "content": "XC\\_C= \\[real array]   Default: **XC\\_C** \\= 1\\.0\\*NXCnDescription: Multiplication factors for the components of the functional given by the XC tag.  --- XC\\_C sets the factors that multiply each component of the functional specified with the XC tag. The number of values specified with XC\\_C has to be equal to the number of functional components set with XC (NXC). Examples of how to use XC\\_C are provided at XC. | **Mind:*** XC\\_C is available since VASP.6\\.4\\.3\\. * The XC\\_C tag can be used together with the ALDAX, ALDAC, AGGAX, AGGAC, AMGGAX, and AMGGAC tags that can be used when LHFCALC\\=.TRUE.. Such examples are provided at XC. || --- |"}
{"file_name": "ISIF.md", "content": "ISIF= 0 \\| 1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6 \\| 7 \\| 8n| Default: **ISIF** | \\= 0 | for `IBRION = 0` (molecular dynamics) or `LHFCALC = .TRUE.` || --- | --- | --- ||  | \\= 2 | else | Description: Determines if the stress tensor is calculated and which ionic degrees of freedom are varied.  --- For ISIF  \u2265 {\\\\displaystyle \\\\geq } 2, the stress tensor is calculated. It is defined as the negative of the derivative of the energy  E {\\\\displaystyle E}  with respect to the strain tensor   \u03b7  j i {\\\\displaystyle \\\\eta \\_{ji}}  :  \u03c3  i j  \\= \u2212  \u03b4 E  \u03b4  \u03b7  j i {\\\\displaystyle \\\\sigma \\_{ij}\\=\\-{\\\\frac {\\\\delta E}{\\\\delta \\\\eta \\_{ji}}}}  .This might be different from other first principles codes.A positive in the diagonals means that the system is under compressive strain and wants to expand. A negative value implies that the system is under tensile strain and wants to reduce its volume. The stress tensor is symmetric   \u03c3  i j  \\=  \u03c3  j i {\\\\displaystyle \\\\sigma \\_{ij}\\=\\\\sigma \\_{ji}} , and, thus, it has six independent entries. The calculation of the stress tensor is relatively time\\-consuming, and, therefore, by default, it is switched off in some cases. The forces are always calculated. ISIF also determines which degrees of freedom (ionic positions, cell volume, and cell shape) of the structure are allowed to change. | ISIF | calculate | | degrees\\-of\\-freedom | | || --- | --- | --- | --- | --- | --- ||  | forces | stress tensor | positions | cell shape | cell volume || 0 | yes | no | yes | no | no || 1 | yes | trace only | yes | no | no || 2 | yes | yes | yes | no | no || 3 | yes | yes | yes | yes | yes || 4 | yes | yes | yes | yes | no || 5 | yes | yes | no | yes | no || 6 | yes | yes | no | yes | yes || 7 | yes | yes | no | no | yes || 8 | yes | yes | yes | no | yes | * For `ISIF = 1`, only the trace of the stress tensor is calculated. This means only the total pressure is correct and can be read off in the line:  ```external pressure =      ... kB  ``` The individual components of the stress tensor are not reliable in this case and must be disregarded.* Accuracy | **Warning:** The PAW basis for the electronic minimization is not adjusted when the structure is varied during a calculation. || --- | Therefore, carefully consider effects such as Pulay stress and choose generous settings for the electronic minimization. Generally, volume changes should be done only with an increased energy cutoff, e.g., `ENCUT = 1.3\u00d7max(ENMAX)`, and `PREC = High`.* To further control the ionic degrees of freedom that can vary during the calculation, set \\`Selective dynamics\\` in the POSCAR file.* `ISIF = 8` is only available as of VASP.6\\.4\\.1\\."}
{"file_name": "Computing_the_Workfunction.md", "content": "The work function is defined as the work needed to move an electron from a surface to a point in vacuum sufficiently far away from this surface.It is a central quantity in surface science, vacuum science, catalysis, and other related fields as it characterizes a given surface; illustrating the presence of impurities, adsorbates, and possible surface reconstruction.It is typically measured using surface science techniques such as thermionic emission, the Kelvin probe method, etc.It has also served as an important measure in various theoretical models about metallic surfaces.On this page, we describe how to compute the work function using outputs from a DFT calculation performed using VASP.We detail best practices, required INCAR tags, and possible pitfalls. | **Mind:** The work function is a property of a surface, not a bulk property. Hence, the content of this page only applies to systems with reduced dimensionality (such as surfaces), i.e.,\u00a0systems where there is expected to be a charge\\-density\\-free region in at least one direction of the cell. || --- | Required quantities------------------- The work function,   \u03a6 {\\\\textstyle \\\\Phi } , is computed using the expression,   \u03a6 \\= e  \u03d5  v a c u u m  \u2212  \u03b5  F {\\\\displaystyle \\\\Phi \\=e\\\\phi \\_{\\\\mathrm {vacuum} }\\-\\\\varepsilon \\_{\\\\mathrm {F} }}  where   \u03d5  v a c u u m {\\\\textstyle \\\\phi \\_{\\\\mathrm {vacuum} }}  is the vacuum potential, i.e.,\u00a0the potential sufficiently far away from a surface, such that if an electron were to be placed at this position, it would not feel the presence of the surface.   \u03b5  F {\\\\textstyle \\\\varepsilon \\_{F}}  is the Fermi level of the surface, and   e {\\\\textstyle e}  is the charge on the electron (equal to 1 in atomic units). In the next section, we describe how   \u03d5  v a c u u m {\\\\textstyle \\\\phi \\_{\\\\mathrm {vacuum} }}  and  \u03b5  F {\\\\textstyle \\\\varepsilon \\_{F}}  are determined from the LOCPOT and OUTCAR files, respectively. Step\\-by\\-step instructions--------------------------- **Step 1**: Ensure that the chosen structure has a large enough atom\\-free, i.e.,\u00a0charge\\-density\\-free, and field\\-free region in the direction normal to the surface.A good rule of thumb is to center the atoms in your cell and have anywhere between 8\u201312 \u00c5 of vacuum on either side in this direction. | **Warning:** An insufficiently large vacuum region causes a field within the vacuum region and, thus, leads to inaccurate values of the vacuum potential (see point 3\\). || --- | **Step 2**: Perform a ground\\-state\\-DFT calculation. We suggest setting PREC\\=Accurate. If your cell has a net dipole moment, (i.e.,\u00a0it is not symmetric along the direction of the surface normal), we suggest switching on the dipole correction by using the following INCAR tags: LDIPOL, IDIPOL, DIPOL. The use of the dipole correction is crucial to obtaining a flat field\\-free region in the potential (*c.f*. next point). In addition to these tags, set the LVHAR\\=T to output only the Hartree and ionic potentials to the LOCPOT file or set `WRT_POTENTIAL=hartree ionic` to store the potentials in the vaspout.h5 file. | **Tip:** We recommend using only the Hartree and ionic potentials as the exchange\\-correlation potential decays very slowly in the vacuum region. Using the sum of the Hartree and ionic potentials allows for determining the work function with significantly less vacuum requirements (and hence lower computational cost). || --- | **Step 3**: Compute the vacuum potential. Average the contents of the LOCPOT or the /results/potential/hartree and /results/potential/ionic datasets of the vaspout.h5 file along the lattice vectors of the surface, (i.e.,\u00a0both directions perpendicular to the surface normal). Find the field\\-free region by determining the region of space where the potential remains constant. This value of the potential is the vacuum potential.  | **Tip:** There exist two vacuum potential regions, one for either direction of the surface normal. Depending on your system, one of the directions may be more relevant than another. || --- | **Step 3b**: Alternatively, VASP can compute the vacuum potential when you set LVACPOTAV\\=T in the INCAR file.You can then `grep` for the output in the OUTCAR file  ```   grep upper OUTCAR  ``` which gives the following example output:  ```  vacuum level on the upper side and lower side of the slab         8.049         7.778  ``` **Step 4**: Determine the Fermi energy.The Fermi energy is written directly to the OUTCAR file. `grep` for the following lines in the OUTCAR to get the Fermi energy in eV.  ```  grep \"Fermi energy\" OUTCAR  ``` Example------- [](File_Workfunction_potentials.html) Vacuum potential referenced to the Fermi energy plotted against the distance along the surface normal. Insets to the figure show the work function for (red) a clean Pt(111\\) surface (blue) Pt(111\\) with a carbon atom adsorbed on only one surface termination (atom center \\~15 \u00c5 on the *x* axis). Consider an example of a carbon atom adsorbed on an *fcc*\\-Pt(111\\) surface. The structure of such a system is  ```Pt16C1.0000000000000000   5.5437171645025325    0.0000000000000000    0.0000000000000000   0.0000000000000000    4.8009998958550284    0.0000000000000000   0.0000000000000000    0.0000000000000000   20.0000000000000000Pt C16 1Direct   0.1250000000000000    0.0833333333333334    0.3302590208582500   0.6250000000000000    0.0833333333333334    0.3302590208582500   0.3749999999999999    0.5833333333333334    0.3302590208582500   0.8750000000000001    0.5833333333333334    0.3302590208582500   0.3749999999999999    0.2500000000000000    0.4434196736194167   0.8750000000000001    0.2500000000000000    0.4434196736194167   0.1250000000000000    0.7500000000000000    0.4434196736194167   0.6250000000000000    0.7500000000000000    0.4434196736194167   0.1250000000000000    0.4166666666666667    0.5565803263805833   0.6250000000000000    0.4166666666666667    0.5565803263805833   0.3749999999999999    0.9166666666666666    0.5565803263805833   0.8750000000000001    0.9166666666666666    0.5565803263805833   0.1250000000000000    0.0833333333333334    0.6697409791417500   0.6250000000000000    0.0833333333333334    0.6697409791417500   0.3749999999999999    0.5833333333333334    0.6697409791417500   0.8750000000000001    0.5833333333333334    0.6697409791417500   0.0000000000000000    0.0000000000000000    0.7597409791417501  ``` The bottom and top surfaces are not identical: one is clean, and the other has carbon adsorbed on it. Since the system has a net dipole moment, we need to use the dipole correction in our calculation.An example INCAR file for this system is,  ```LDIPOL  = TIDIPOL  = 3DIPOL   = 0.5 0.5 0.5LVHAR   = TPREC    = Accurate  ``` The Figure to the right shows a representative example of the vacuum potential obtained by averaging the contents of LOCPOT.This potential is referenced to the Fermi energy and is plotted against the distance along the surface normal (*x* axis) for two systems,*fcc* Pt(111\\) surface (in blue) and Pt(111\\) surface with a carbon atom adsorbed on one surface termination (Pt(111\\)\\-C\\*).The vacuum potentials are flat, (i.e.,\u00a0constant), on either side (magnified in insets).The work function on either side of the slab is annotated in the insets as   \u03a6 {\\\\textstyle \\\\Phi } . It is equal for both sides of the clean slab but slightly higher for the case of Pt(111\\)\\-C\\*."}
{"file_name": "ODDONLY.md", "content": "ODDONLY= .TRUE. \\| .FALSE.   Default: **ODDONLY** \\= .FALSE.nDescription: ODDONLY\\=.TRUE. selects a subset of **k**\\-points for the representation of the Fock exchange potential, with *C*1\\=*C*2\\=*C*3\\=1, and *n*1\\+*n*2\\+*n*3 odd.  --- One may restrict the sum over **q** in the Fock exchange potential (or one of its short range counterparts) to a subset, {**q****k**}, of the full (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-point set, {**k**}, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell,and *C*i is the integer grid reduction factor along reciprocal lattice direction**b**i. ODDONLY\\=.TRUE. selects a subset of **k**\\-points with *C*1\\=*C*2\\=*C*3\\=1, and *n*1\\+*n*2\\+*n*3 odd. It reduces the computational work load for HF type calculations by a factor two, but is only sensible for high symmetry cases (such as sc, fcc or bcc cells).   | **Warning:** there are circumstances under which **NKRED** and **NKREDX**,**Y**,**Z** should not be used! || --- |"}
{"file_name": "SYSTEM.md", "content": "SYSTEM= \\[string]   Default: **SYSTEM** \\= unknown systemnDescription: The \"title string\" defined by SYSTEM is for the user only and should help the user to identify what he/she wants to do with this specific input file.  --- The SYSTEM tag is followed by a string that possibly contains blanks. The string is read in and written to the main output file OUTCAR. Examples that use this tag  ---"}
{"file_name": "MAGMOM.md", "content": "MAGMOM= \\[real array]n| Default: **MAGMOM** | \\= NIONS \\* 1\\.0 | for ISPIN\\=2 || --- | --- | --- ||  | \\= 3 \\* NIONS \\* 1\\.0 | for noncollinear magnetic systems (LNONCOLLINEAR\\=.TRUE.) | Description: Initial magnetic moment for each atom if no magnetization density is present. Considered when symmetry is determined.  --- * For a **magnetic calculation from scratch** (ISTART\\=0\\), MAGMOM specifies (i) the initial on\\-site magnetic moment for each atom, and (ii) lowers the symmetry of the system (as of VASP.4\\.4\\.4\\). A magnetic calculation could be either a spin\\-polarized calculation (ISPIN\\=2\\) or noncollinear calculation (LNONCOLLINEAR\\=T). If the MAGMOM line breaks a symmetry of the crystal, the corresponding symmetry operation is removed and not applied during the symmetrization of, e.g., charges and forces. * When **restarting a magnetic calculation**, MAGMOM is only used to determine the symmetry of the system and not to set the on\\-site magnetic moment. Therefore, if you remove the MAGMOM tag before restarting from a converged WAVECAR or CHGCAR, the magnetization is likely to be symmetrized away. * MAGMOM also specifies the initial on\\-site magnetic moments when a **magnetic calculation** (ISPIN\\=2 or LNONCOLLINEAR\\=T) is **started from a non\\-spin\\-polarized calculation** (ISPIN\\=1 and LNONCOLLINEAR\\=F). This implies restarting with ICHARG\\=1 while the CHGCAR file contains no magnetization density. Starting magnetic calculations from a non\\-spin\\-polarized calculation can improve convergence. The I\\_CONSTRAINED\\_M tag can constrain the on\\-site magnetic moments. | **Tip:** To converge to the magnetic ground state, we recommend setting the magnetic moments slightly larger than the expected values, e.g., using the experimental magnetic moment multiplied by 1\\.2 or 1\\.5\\. || --- | | **Important:** The final magnetic state strongly depends on the initial values for MAGMOM.[\\[1]](#cite_note-huebsch:prx:11-1) This is true even if no symmetry is used (ISYM\\=\\-1\\), because of the many local minima that most exchange\\-correlation functionals have within spin\\-density\\-functional theory. || --- | Format and basis---------------- * For a spin\\-polarized calculation (ISPIN\\=2\\), MAGMOM is a list of NIONS positive or negative values that specify the magnitude and relative orientation of the magnetization on each ion. The on\\-site magnetic moments have no direction in real space, i.e., no orientation in the lattice. * For noncollinear calculation (LNONCOLLINEAR\\=T), the on\\-site magnetic moment is specified by three components for each ion. Without spin\\-orbit coupling (LSORBIT\\=False), the total energy depends only on the relative direction of the on\\-site magnetic moments. Hence, you can give the desired magnetic structure in Cartesian coordinates without considering how the lattice matrix or SAXIS is defined. * With spin\\-orbit coupling (LSORBIT\\=True), the three components must be specified in the basis of spinor space that is defined by SAXIS. The default is   \u03c3  1  \\=  x ^ {\\\\displaystyle \\\\sigma \\_{1}\\={\\\\hat {x}}}  ,  \u03c3  2  \\=  y ^ {\\\\displaystyle \\\\sigma \\_{2}\\={\\\\hat {y}}}  ,  \u03c3  3  \\=  z ^ {\\\\displaystyle \\\\sigma \\_{3}\\={\\\\hat {z}}} , such that MAGMOM can be given in Cartesian coordinates. The orientation of MAGMOM with respect to the lattice only matters if spin\\-orbit coupling is included (LSORBIT). Examples-------- * The most simple input for a bcc cell with AFM spin alignment would be the following. POSCAR file:  ``` AFM 2.80000 1.00000   .00000   .00000  .00000  1.00000   .00000  .00000   .00000  1.00000 1 1Cartesian  .00000   .00000   .00000  .50000   .50000   .50000  ``` with  ``` ISPIN = 2 MAGMOM = 1.0 -1.0  ``` specified in INCAR. In a perfectly AFM ordered cell, the total net magnetisation is zero, but the local magnetic moments can be written to the OUTCAR file by setting LORBIT tag (and if LORBIT\\<10 , the RWIGS tag in addition) in the INCAR file.* If you have problems converging to a desired magnetic solution, try to calculate first the non\\-magnetic ground state and continue from the generated WAVECAR and CHGCAR. To restart, e.g., a calculation with two atoms that have equally large and antiferromagnetically coupled on\\-site magnetic moments, you need to set the following in the INCAR file:  ```ICHARG = 1 ISPIN = 2 MAGMOM = m -m  ``` or for a noncollinear  ```ICHARG = 1LNONCOLLINEAR = TMAGMOM = 0 0 m  0 0 -m  ``` * For systems containing many atoms, MAGMOM input on a single line can be hard to read, especially in the noncollinear case. It is possible to provide INCAR input on multiple lines using backslashes (**\\\\**) as linebreaks. E.g. for a noncollinear system with AFM alignment and 16 atoms (the first 8 of them magnetic), the multi\\-line input could look like this:  ```MAGMOM =  3.0  2.0  1.0 \\         -3.0 -2.0 -1.0 \\          3.0  2.0  1.0 \\         -3.0 -2.0 -1.0 \\          3.0  2.0  1.0 \\         -3.0 -2.0 -1.0 \\          3.0  2.0  1.0 \\         -3.0 -2.0 -1.0 \\          24*0.0  ``` Related Tags and Sections------------------------- ISPIN,LNONCOLLINEAR, LSORBIT, SAXIS,LORBIT,I\\_CONSTRAINED\\_M Examples that use this tag  --- 1. \u2191 Huebsch, M\\-T and Nomoto, T and Suzuki, M\\-T and Arita, R,*Benchmark for ab initio prediction of magnetic structures based on cluster\\-multipole theory*, Phys. Rev. X **11**, 011031 (2021\\)."}
{"file_name": "Kinetic-energy_density_mixing.md", "content": "For the density mixing schemes to work reliably, the charge density mixer must be aware of all quantities that affect the total energy during the self\\-consistency cycle. For a standard DFT functional, this is solely the charge density. In case of meta\\-GGAs, however, the total energy depends on the kinetic energy density as well. In many cases the density mixing scheme works well enough without passing the kinetic energy density through the mixer, which is why LMIXTAU\\=.FALSE., per default. However, when the selfconsistency cycle fails to converge for one of the density\\-mixing algorithms (for instance, IALGO\\=38 or 48\\), one may set LMIXTAU\\=.TRUE. to have VASP pass the kinetic energy density through the mixer as well.This sometimes helps to cure convergence problems in the selfconsistency cycle."}
{"file_name": "Optimizing_the_parallelization.md", "content": "To find the optimal parallelization setup of a VASP calculation, it is necessary to run tests for each system, algorithm and computer architecture. Below, we offer general advice on how to optimize the parallelization. Optimizing the parallelization------------------------------ For repetitive tasks, **a few iterations estimate the performance** of the full calculation very well.For example, run only a few electronic or ionic self\\-consistency steps (without reaching full convergence).Compare the time various parallelization setups need to perform these few iterations.  Try to **get as close as possible to the actual system**.Specifically, use the same or a very similar physical system (atoms, cell size, cutoff, ...);run on the target computational hardware (CPUs, interconnect, number of nodes, ...).If too many parameters are different, the parallel configuration may not be transferable to the production calculation. In our experience, VASP yields the best performance by **combining multiple parallelization options** because the parallel efficiency of each level drops near its limit.By default, VASP distributes the number of bands (NBANDS) over the available MPI ranks.But it is often beneficial to add parallelization of the FFTs (NCORE), parallelization over **k** points (KPAR), and parallelization over separate calculations (IMAGES).Additionally, there are some parallelization options for specific algorithms in VASP, e.g., NOMEGAPAR for parallelization over imaginary frequency points in   G W {\\\\displaystyle GW}  and RPA calculations. In summary, **VASP parallelizes with** total ranks  \\= ranks parallelizing bands  \u00d7 NCORE  \u00d7 KPAR  \u00d7 IMAGES  \u00d7 other algorithm\\-dependent tags  . {\\\\displaystyle {\\\\text{total ranks}}\\={\\\\text{ranks parallelizing bands}}\\\\times {\\\\text{NCORE}}\\\\times {\\\\text{KPAR}}\\\\times {\\\\text{IMAGES}}\\\\times {\\\\text{other algorithm\\-dependent tags}}.} To optimize the parallelization, follow this recipe: 1. **Create a list of the relevant parallelization INCAR tags** for the specific calculation. **Read the documentation for each of the relevant tags** to understand the limits and reasonable choices.2. For any calculation involving electronic minimization, it can be useful to first **run VASP with ALGO\\=*None*** set in the INCAR file. With ALGO\\=*None* the computational setup for the electronic minimization is done without actually performing the minimization. For instance, the FFTs are planned, and the irreducible **k** points of the first Brillouin zone are constructed. Therefore, some parameters, e.g., the default number of Kohn\\-Sham orbitals (NBANDS) and the total number of plane waves, are written to the OUTCAR file while using barely any computational time.3. Combine the information from the documentation and the dry run into a few possible candidates for a reasonable setup. **Run test calculations** on a subset of the production run e.g. by reducing the number of steps.4. Run the production calculation with the best performing setup. For the common case of electronic minimization calculations, the following rules of thumb apply: * Aim to set the number of ranks to the default value of NBANDS divided by a small integer. Note that VASP will increase NBANDS to accommodate the number of ranks.* Choose NCORE as a factor of the cores per node to avoid communicating between nodes for the FFTs. Mind that NCORE cannot be set with OpenMP threading and/or the OpenACC GPU port.* The **k**\\-point parallelization is efficient but requires additional memory. Given sufficient memory, increase KPAR up to the number of irreducible **k** points. Keep in mind that KPAR should factorize the number of **k** points.* Finally, use the IMAGES tag to split several VASP runs into separate calculations. The limit is dictated by the number of desired calculations. Related tags an articles------------------------ Parallelization, KPAR, NCORE, KPAR, IMAGES"}
{"file_name": "LDAUL.md", "content": "LDAUL= \\[integer array]   Default: **LDAUL** \\= NTYP\\*2nDescription: LDAUL specifies the   l {\\\\displaystyle l} \\-quantum number for which the on\\-site interaction is added.  --- For LDAUL\\=\\-1 no on\\-site interaction is added. **Mind**: one *has* to specify one number for each atomic species."}
{"file_name": "LTHOMAS.md", "content": "LTHOMAS= .TRUE. \\| .FALSE.   Default: **LTHOMAS** \\= .FALSE.nDescription: LTHOMAS selects a decomposition of the exchange functional based on Thomas\\-Fermi exponential screening.  --- If LTHOMAS\\=.TRUE. the decomposition of the exchange operator (in a range\\-separated hybrid functional) into a short range and a long range part will be based on Thomas\\-Fermi exponential screening.The Thomas\\-Fermi screening length *k*TF is specified by means of the HFSCREEN tag. For typical semiconductors, a Thomas\\-Fermi screening length of about 1\\.8 \u00c5\\-1 yields reasonable band gaps. In principle, however, the Thomas\\-Fermi screening length depends on the valence electron density; VASP determines this parameter from the number of valence electrons (read from the POTCAR file) and the volume and writes the corresponding value to the OUTCAR file:  ``` Thomas-Fermi vector in A             =   2.00000  ``` | **Mind:** If LTHOMAS\\=.TRUE., then LHFCALC\\=.TRUE. is automatically set. || --- | Since, VASP counts the semi\\-core states and *d*\\-states as valence electrons, although these states do not contribute to the screening, the values reported by VASP are often incorrect."}
{"file_name": "VDW_C6.md", "content": "VDW\\_C6= \\[real (array)]nDescription: VDW\\_C6 defines the   C  6 {\\\\displaystyle C\\_{6}}  parameters (  J n m  6  m o l  \u2212 1 {\\\\displaystyle \\\\mathrm {Jnm} ^{6}\\\\mathrm {mol} ^{\\-1}} ) for each species defined in the POSCAR file.  --- VDW\\_C6 sets the   C  6 {\\\\displaystyle C\\_{6}}  parameters (  J n m  6  m o l  \u2212 1 {\\\\displaystyle \\\\mathrm {Jnm} ^{6}\\\\mathrm {mol} ^{\\-1}} ) for each species defined in the POSCAR file for the DFT\\-D2, DFT\\-ulg, Tkatchenko\\-Scheffler, and Many\\-body dispersion energy methods."}
{"file_name": "LOPTICS.md", "content": "LOPTICS= .TRUE. \\| .FALSE.   Default: **LOPTICS** \\= .FALSE.nDescription: LOPTICS\\=.TRUE. calculates the frequency dependent dielectric matrix after the electronic ground state has been determined.  --- The imaginary part is determined by a summation over empty states using the equation:  \u03f5  \u03b1 \u03b2  ( 2 )  ( \u03c9 )  \\=  4  \u03c0  2  e  2  \u03a9  l i m  q \u2192 0  1  q  2  \u2211  c , v ,  k  2  w  k  \u03b4 (  \u03f5  c  k  \u2212  \u03f5  v  k  \u2212 \u03c9 ) \u00d7 \u27e8  u  c  k  \\+  e  \u03b1  q  \\|  u  v  k  \u27e9 \u27e8  u  v  k  \\|  u  c  k  \\+  e  \u03b2  q  \u27e9 {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}\\\\left(\\\\omega \\\\right)\\={\\\\frac {4\\\\pi ^{2}e^{2}}{\\\\Omega }}\\\\mathrm {lim} \\_{q\\\\rightarrow 0}{\\\\frac {1}{q^{2}}}\\\\sum \\_{c,v,\\\\mathbf {k} }2w\\_{\\\\mathbf {k} }\\\\delta (\\\\epsilon \\_{c\\\\mathbf {k} }\\-\\\\epsilon \\_{v\\\\mathbf {k} }\\-\\\\omega )\\\\times \\\\langle u\\_{c\\\\mathbf {k} \\+\\\\mathbf {e} \\_{\\\\alpha }q}\\|u\\_{v\\\\mathbf {k} }\\\\rangle \\\\langle u\\_{v\\\\mathbf {k} }\\|u\\_{c\\\\mathbf {k} \\+\\\\mathbf {e} \\_{\\\\beta }q}\\\\rangle } here the indices *c* and *v* refer to conduction and valence band states respectively, and *u**c***k** is the cell periodic part of the orbitals at the k\\-point **k**. The real part of the dielectric tensor \u03b5(1\\) is obtained by the usual Kramers\\-Kronigtransformation  \u03f5  \u03b1 \u03b2  ( 1 )  ( \u03c9 ) \\= 1 \\+  2 \u03c0  P  \u222b  0  \u221e  \u03f5  \u03b1 \u03b2  ( 2 )  (  \u03c9 \u2032  )  \u03c9 \u2032  \u03c9  \u2032  2  \u2212  \u03c9  2  \\+ i \u03b7  d  \u03c9 \u2032 {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(1\\)}(\\\\omega )\\=1\\+{\\\\frac {2}{\\\\pi }}P\\\\int \\_{0}^{\\\\infty }{\\\\frac {\\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}(\\\\omega ')\\\\omega '}{\\\\omega '^{2}\\-\\\\omega ^{2}\\+i\\\\eta }}d\\\\omega '} where *P* denotes the principle value. The method is explained in detail in the paper by Gajdo\u0161 *et al.* (see Eqs. 15, 29, and 30\\).[\\[1]](#cite_note-gajdos:prb:06-1) The complex shift \u03b7 is determined by the parameter CSHIFT. Note that local field effects, i.e. changes of the cell periodic part of the potential are neglected in this approximation. These can be evaluated using either the implemented density functional perturbation theory (LEPSILON\\=.TRUE.), or the GW routines. The method selected using LOPTICS\\=.TRUE. requires an appreciable number of empty conduction band states. Reasonable results are usually only obtained, if the parameter NBANDS is roughly doubled or tripled in the INCAR file with respect to the VASP default.Furthermore it is emphasized that the routine works properly even for HF and screened exchange type calculations and hybrid functionals. In this case, finite differences are used to determine the derivatives of the Hamiltonian with respect to **k**. Note that the number of frequency grid points is determined by the parameter NEDOS. In many cases it is desirable to increase this parameter significantly from its default value. Values around NEDOS\\=2000 are strongly recommended. VASP posses multiple other routines to calculate the frequency dependent dielectric function.Specifically, one can use ALGO \\= TDHF (Casida/BSE calculations), ALGO \\= GW (GW calculations) and ALGO \\= TIMEEV (Time Evolution: apply a delta kick and follow the induced dipoles).Compared to LOPTICS\\=.TRUE., all those routines have the advantage to includeeffects beyond the independent particle approximation, however, they are usuallyalso much more expensive than LOPTICS\\=.TRUE.   | **Warning:** Note that LOPTICS \\= .TRUE. with ISMEAR \\= \\-2 is currently not supported. || --- | | **Mind:** Furthermore the combination of LOPTICS \\= .TRUE. and ISMEAR selecting the tetrahedron method is only supported as of VASP 6\\.3\\. || --- |"}
{"file_name": "Liquid_Si_-_MLFF.md", "content": "Overview>Liquid Si \\- MLFF> List of tutorials Task---- Generating a machine learning force field for liquid Si. For this tutorial, we expect that the user is already familiar with running conventional ab initio molecular dynamic calculations. Input----- ### POSCAR In this example we start from a 64 atom super cell of diamond\\-fcc Si (the same as in Liquid Si \\- Standard MD):  ```Si_CD_2x2x2     5.43090000000000    2.00000000   0.00000000   0.00000000    0.00000000   2.00000000   0.00000000    0.00000000   0.00000000   2.00000000 Si 64Direct   0.00000000   0.00000000   0.00000000   0.50000000   0.00000000   0.00000000   0.00000000   0.50000000   0.00000000   0.50000000   0.50000000   0.00000000   0.00000000   0.00000000   0.50000000   0.50000000   0.00000000   0.50000000   0.00000000   0.50000000   0.50000000   0.50000000   0.50000000   0.50000000   0.37500000   0.12500000   0.37500000   0.87500000   0.12500000   0.37500000   0.37500000   0.62500000   0.37500000   0.87500000   0.62500000   0.37500000   0.37500000   0.12500000   0.87500000   0.87500000   0.12500000   0.87500000   0.37500000   0.62500000   0.87500000   0.87500000   0.62500000   0.87500000   0.00000000   0.25000000   0.25000000   0.50000000   0.25000000   0.25000000   0.00000000   0.75000000   0.25000000   0.50000000   0.75000000   0.25000000   0.00000000   0.25000000   0.75000000   0.50000000   0.25000000   0.75000000   0.00000000   0.75000000   0.75000000   0.50000000   0.75000000   0.75000000   0.37500000   0.37500000   0.12500000   0.87500000   0.37500000   0.12500000   0.37500000   0.87500000   0.12500000   0.87500000   0.87500000   0.12500000   0.37500000   0.37500000   0.62500000   0.87500000   0.37500000   0.62500000   0.37500000   0.87500000   0.62500000   0.87500000   0.87500000   0.62500000   0.25000000   0.00000000   0.25000000   0.75000000   0.00000000   0.25000000   0.25000000   0.50000000   0.25000000   0.75000000   0.50000000   0.25000000   0.25000000   0.00000000   0.75000000   0.75000000   0.00000000   0.75000000    0.25000000   0.50000000   0.75000000   0.75000000   0.50000000   0.75000000   0.12500000   0.12500000   0.12500000   0.62500000   0.12500000   0.12500000   0.12500000   0.62500000   0.12500000   0.62500000   0.62500000   0.12500000   0.12500000   0.12500000   0.62500000   0.62500000   0.12500000   0.62500000   0.12500000   0.62500000   0.62500000   0.62500000   0.62500000   0.62500000   0.25000000   0.25000000   0.00000000   0.75000000   0.25000000   0.00000000   0.25000000   0.75000000   0.00000000   0.75000000   0.75000000   0.00000000   0.25000000   0.25000000   0.50000000   0.75000000   0.25000000   0.50000000   0.25000000   0.75000000   0.50000000   0.75000000   0.75000000   0.50000000   0.12500000   0.37500000   0.37500000   0.62500000   0.37500000   0.37500000   0.12500000   0.87500000   0.37500000   0.62500000   0.87500000   0.37500000   0.12500000   0.37500000   0.87500000   0.62500000   0.37500000   0.87500000   0.12500000   0.87500000   0.87500000   0.62500000   0.87500000   0.87500000  ``` ### KPOINTS We will start with a single k point in this example:  ```K-Points 0Gamma 1  1  1 0  0  0  ``` ### INCAR  ```#Basic parametersISMEAR = 0SIGMA = 0.1LREAL = AutoISYM = -1NELM = 100EDIFF = 1E-4LWAVE = .FALSE.LCHARG = .FALSE. #Parallelization of ab initio calculationsNCORE = 2  #MDIBRION = 0MDALGO = 2ISIF = 2SMASS = 1.0TEBEG = 2000NSW = 10000POTIM = 3.0RANDOM_SEED =          88951986                0                0 #Machine learning paramtersML_LMLFF = .TRUE.ML_ISTART = 0  ``` Calculation----------- ### Creating the liquid structure Because we don't have a structure of liquid silicon readily available, we first create that structure by starting from a super cell of crystalline silicon with 64 atoms. The temperature is set to 2000 K so that the crystal melts rapidly in the MD run. To improve the simulation speed drastically, we utilize the on\\-the\\-fly machine learning. Most of the ab initio steps will be replaced by very fast force\\-field ones. Within 10000 steps equivalent to 30 ps, we have obtained a good starting position for the subsequent simulations in the CONTCAR file. You can copy the input files or download them. After running the calculation, we obtained a force field, but its initial trajectory might be tainted but the unreasonable starting position. Nevertheless, it is instructive to inspect the output to understand how to assess the accuracy of a force field, before refining it in subsequent calculations.The main output files for the machine learning are ML\\_ABNcontains the ab initio structure datasets used for the learning. It will be needed for continuation runs as ML\\_AB.ML\\_FFNcontains the regression results (weights, parameters, etc.). It will be needed for continuation runs as ML\\_FF.ML\\_LOGFILElogging the proceedings of the machine learning. This file consists of keywords that are nicely \"grepable.\" The keywords are explained in the in the beginning of the file and upon \"grepping\". The status of each MD step is given by the keyword \"STATUS\". Please invoke the following command:  ```grep STATUS ML_LOGFILE  ``` The output should look similar to the following:  ```# STATUS ################################################################ STATUS This line describes the overall status of each step.# STATUS # STATUS nstep ..... MD time step or input structure counter# STATUS state ..... One-word description of step action# STATUS             - \"accurate\"  (1)\u00a0: Errors are low, force field is used# STATUS             - \"threshold\" (2)\u00a0: Errors exceeded threshold, structure is sampled from ab initio# STATUS             - \"learning\"  (3)\u00a0: Stored configurations are used for training force field# STATUS             - \"critical\"  (4)\u00a0: Errors are high, ab initio sampling and learning is enforced# STATUS             - \"predict\"   (5)\u00a0: Force field is used in prediction mode only, no error checking# STATUS is ........ Integer representation of above one-word description (integer in parenthesis)# STATUS doabin .... Perform ab initio calculation (T/F)# STATUS iff ....... Force field available (T/F, False after startup hints to possible convergence problems)# STATUS nsample ... Number of steps since last reference structure collection (sample = T)# STATUS ngenff .... Number of steps since last force field generation (genff = T)# STATUS ################################################################ STATUS            nstep     state is doabin    iff   nsample    ngenff# STATUS                2         3  4      5      6         7         8# STATUS ###############################################################STATUS                  0 threshold  2      T      F         0         0STATUS                  1 critical   4      T      F         0         1STATUS                  2 critical   4      T      F         0         2STATUS                  3 critical   4      T      T         0         1STATUS                  4 critical   4      T      T         0         1STATUS                  5 critical   4      T      T         0         1     .                  .        .   .      .      .         .         .     .                  .        .   .      .      .         .         .     .                  .        .   .      .      .         .         .STATUS               9997 accurate   1      F      T       945       996STATUS               9998 accurate   1      F      T       946       997STATUS               9999 accurate   1      F      T       947       998STATUS              10000 learning   3      T      T       948       999  ``` Another important keyword is \"ERR\". For this instance we should type the following command:  ```grep ERR ML_LOGFILE  ``` The output should look like the following:  ```# ERR ####################################################################### ERR This line contains the RMSEs of the predictions with respect to ab initio results for the training data.# ERR # ERR nstep ......... MD time step or input structure counter# ERR rmse_energy ... RMSE of energies (eV atom^-1)# ERR rmse_force .... RMSE of forces (eV Angst^-1)# ERR rmse_stress ... RMSE of stress (kB)# ERR ####################################################################### ERR               nstep      rmse_energy       rmse_force      rmse_stress# ERR                   2                3                4                5# ERR ######################################################################ERR                     0   0.00000000E+00   0.00000000E+00   0.00000000E+00ERR                     1   0.00000000E+00   0.00000000E+00   0.00000000E+00ERR                     2   0.00000000E+00   0.00000000E+00   0.00000000E+00ERR                     3   2.84605192E-05   9.82351889E-03   2.40003743E-02ERR                     4   1.83193349E-05   1.06700600E-02   5.37606479E-02ERR                     5   4.12132223E-05   1.34123085E-02   1.01588957E-01ERR                     6   9.51627413E-05   1.90335214E-02   1.31959103E-01.                       .                .                .                ..                       .                .                .                ..                       .                .                .                .ERR                  9042   1.07159240E-02   2.41283323E-01   4.95695745E+00ERR                  9052   1.07159240E-02   2.41283323E-01   4.95695745E+00ERR                 10000   1.07159240E-02   2.41283323E-01   4.95695745E+00  ``` This tag lists the errors on the energy, forces and stress of the force field compared to the ab initio results on the available training data. The second column shows the MD step. We see that the entry is not output at every MD step. The errors only change if the force field is updated, hence when an ab initio calculation is executed (it should correlate with the doabin column of the STATUS keyword). The other three columns show the errors on the energy (eV/atom), forces (ev/Angstrom) and stress (kB). ### Structral properties of the force field To examine the accuracy of structural properties, we compare the deviations between a 3 ps molecular dynamics run using the force field and a full ab initio calculation. For a meaningful comparison, it is best to start from the same initial structure. We will use the liquid structure, we obtained in the previous step and back it up  ```cp CONTCAR POSCAR.T2000_relaxed  ``` Now, we proceed with the force field calculation and set up the required files  ```cp POSCAR.T2000_relaxed POSCARcp ML_FFN ML_FF  ``` To run a shorter simulation using only the force field, we change the following INCAR tags to  ```ML_ISTART = 2NSW = 1000  ``` After the calculation finished, we backup the history of the atomic positions  ```cp XDATCAR XDATCAR.MLFF_3ps  ``` To analyze the pair correlation function, we use the PERL script *pair\\_correlation\\_function.pl* **Click to show/hide pair\\_correlation\\_function.pl**  ```#!/usr/bin/perl use strict;use warnings; #configuration for which ensemble average is to be calculatedmy $confmin=1;            #starting index of configurations in XDATCAR file for pair correlation functionmy $confmax=20000;           #last index of configurations in XDATCAR file for pair correlation functionmy $confskip=1;           #stepsize for configuration loopmy $species_1 = 1;        #species 1 for which pair correlation function is going to be calculatedmy $species_2 = 1;        #species 2 for which pair correlation function is going to be calculated#setting radial grid my $rmin=0.0;             #minimal value of radial gridmy $rmax=10.0;            #maximum value of radial gridmy $nr=300;                #number of equidistant steps in radial gridmy $dr=($rmax-$rmin)/$nr; #stepsize in radial gridmy $tol=0.0000000001;     #tolerance limit for r->0  my $z=0;                  #countermy $numelem;              #number of elementsmy @elements;             #number of atoms per element saved in list/arraymy $lattscale;            #scaling factor for latticemy @b;                    #Bravais matrixmy $nconf=0;              #number of configurations in XDATCAR filemy @cart;                 #Cartesian coordinates for each atom and configurationmy $atmin_1=0;            #first index of species onemy $atmax_1;              #last index of species onemy $atmin_2=0;            #first index of species twomy $atmax_2;              #last index of species twomy @vol;                  #volume of cell (determinant of Bravais matrix)my $pi=4*atan2(1, 1);     #constant pimy $natom=0;              #total number of atoms in cellmy @pcf;                  #pair correlation function (list/array)my $mult_x=1;             #periodic repetition of cells in x dimensionmy $mult_y=1;             #periodic repetition of cells in y dimensionmy $mult_z=1;             #periodic repetition of cells in z dimensionmy @cart_super;           #Cartesian cells over multiple cellsmy @vec_len;              #Length of lattice vectors in 3 spatial coordinates#my $ensemble_type=\"NpT\";  #Set Npt or NVT. Needs to be set since both have different XDATCAR file.my $ensemble_type=\"NVT\";  #Set Npt or NVT. Needs to be set since both have different XDATCAR file.my $av_vol=0;               #Average volume in cell #reading in XDATCAR filewhile (<>) {   chomp;   $_=~s/^/ /;   my @help=split(/[\\t,\\s]+/);   $z++;   if ($z==2) {      $lattscale = $help[1]; }   if ($z==3) {      $b[$nconf+1][1][1]=$help[1]*$lattscale;      $b[$nconf+1][1][2]=$help[2]*$lattscale;      $b[$nconf+1][1][3]=$help[3]*$lattscale; }   if ($z==4) {      $b[$nconf+1][2][1]=$help[1]*$lattscale;      $b[$nconf+1][2][2]=$help[2]*$lattscale;      $b[$nconf+1][2][3]=$help[3]*$lattscale; }   if ($z==5) {      $b[$nconf+1][3][1]=$help[1]*$lattscale;      $b[$nconf+1][3][2]=$help[2]*$lattscale;      $b[$nconf+1][3][3]=$help[3]*$lattscale; }   if ($z==7) {      if ($nconf==0) {         $numelem=@help-1;         for (my $i=1;$i<=$numelem;$i++) {            $elements[$i]=$help[$i];            $natom=$natom+$help[$i]; } } }   if ($_=~m/Direct/) {      $nconf=$nconf+1;      #for NVT ensemble only one Bravais matrix exists, so it has to be copied      if ($ensemble_type eq \"NVT\") {         for (my $i=1;$i<=3;$i++) {            for (my $j=1;$j<=3;$j++) {               $b[$nconf][$i][$j]=$b[1][$i][$j]; } } }      for (my $i=1;$i<=$natom;$i++) {         $_=<>;         chomp;         $_=~s/^/ /;         my @helpat=split(/[\\t,\\s]+/);         $cart[$nconf][$i][1]=$b[1][1][1]*$helpat[1]+$b[1][1][2]*$helpat[2]+$b[1][1][3]*$helpat[3];         $cart[$nconf][$i][2]=$b[1][2][1]*$helpat[1]+$b[1][2][2]*$helpat[2]+$b[1][2][3]*$helpat[3];         $cart[$nconf][$i][3]=$b[1][3][1]*$helpat[1]+$b[1][3][2]*$helpat[2]+$b[1][3][3]*$helpat[3]; }      if ($ensemble_type eq \"NpT\") {         $z=0; } }   last if eof; } if ($confmin>$nconf) {   print \"Error, confmin larger than number of configurations. Exiting...\\";   exit; }if ($confmax>$nconf) {   $confmax=$nconf; } for (my $i=1;$i<=$nconf;$i++) {   #calculate lattice vector lengths   $vec_len[$i][1]=($b[$i][1][1]*$b[$i][1][1]+$b[$i][1][2]*$b[$i][1][2]+$b[$i][1][3]*$b[$i][1][3])**0.5;   $vec_len[$i][2]=($b[$i][2][1]*$b[$i][2][1]+$b[$i][2][2]*$b[$i][2][2]+$b[$i][2][3]*$b[$i][2][3])**0.5;   $vec_len[$i][3]=($b[$i][3][1]*$b[$i][3][1]+$b[$i][3][2]*$b[$i][3][2]+$b[$i][3][3]*$b[$i][3][3])**0.5;   #calculate volume of cell   $vol[$i]=$b[$i][1][1]*$b[$i][2][2]*$b[$i][3][3]+$b[$i][1][2]*$b[$i][2][3]*$b[$i][3][1]+$b[$i][1][3]*$b[$i][2][1]*$b[$i][3][2]-$b[$i][3][1]*$b[$i][2][2]*$b[$i][1][3]-$b[$i][3][2]*$b[$i][2][3]*$b[$i][1][1]-$b[$i][3][3]*$b[$i][2][1]*$b[$i][1][2];   $av_vol=$av_vol+$vol[$i]; }$av_vol=$av_vol/$nconf; #choose species 1 for which pair correlation function is going to be calculated$atmin_1=1;if ($species_1>1) {   for (my $i=1;$i<$species_1;$i++) {     $atmin_1=$atmin_1+$elements[$i]; } }$atmax_1=$atmin_1+$elements[$species_1]-1;#choose species 2 to which paircorrelation function is calculated to$atmin_2=1;if ($species_2>1) {   for (my $i=1;$i<$species_2;$i++) {     $atmin_2=$atmin_2+$elements[$i]; } }$atmax_2=$atmin_2+$elements[$species_2]-1;#initialize pair correlation functionfor (my $i=0;$i<=($nr-1);$i++) {   $pcf[$i]=0.0; }# loop over configurations, make histogram of pair correlation function for (my $j=$confmin;$j<=$confmax;$j=$j+$confskip) {   for (my $k=$atmin_1;$k<=$atmax_1;$k++) {       for (my $l=$atmin_2;$l<=$atmax_2;$l++) {          if ($k==$l) {next};          for (my $g_x=-$mult_x;$g_x<=$mult_x;$g_x++) {             for (my $g_y=-$mult_y;$g_y<=$mult_y;$g_y++) {                for (my $g_z=-$mult_y;$g_z<=$mult_z;$g_z++) {                   my $at2_x=$cart[$j][$l][1]+$vec_len[$j][1]*$g_x;                   my $at2_y=$cart[$j][$l][2]+$vec_len[$j][2]*$g_y;                   my $at2_z=$cart[$j][$l][3]+$vec_len[$j][3]*$g_z;                   my $dist=($cart[$j][$k][1]-$at2_x)**2.0+($cart[$j][$k][2]-$at2_y)**2.0+($cart[$j][$k][3]-$at2_z)**2.0;                   $dist=$dist**0.5;                   #determine integer multiple                    my $zz=int(($dist-$rmin)/$dr+0.5);                   if ($zz<$nr) {                      $pcf[$zz]=$pcf[$zz]+1.0; } } } } } } } #make ensemble average, rescale functions and printfor (my $i=0;$i<=($nr-1);$i++) {   my $r=$rmin+$i*$dr;   if ($r<$tol) {      $pcf[$i]=0.0; }   else {      $pcf[$i]=$pcf[$i]*$av_vol/(4*$pi*$r*$r*$dr*(($confmax-$confmin)/$confskip)*($atmax_2-$atmin_2+1)*($atmax_1-$atmin_1+1));#*((2.0*$mult_x+1.0)*(2.0*$mult_y+1.0)*(2.0*$mult_z+1.0))); }   print $r,\" \",$pcf[$i],\"\\"; }  ``` and process the previously saved XDATCAR files  ```perl pair_correlation_function.pl XDATCAR.MLFF_3ps > pair_MLFF_3ps.dat  ``` To save time the pair correlation function for 1000 ab initio MD steps is precalculated in the file *pair\\_AI\\_3ps.dat*. The interested user can of course calculate the results of the ab initio MD by rerunning the above steps while switching off machine learning via  ```ML_LMLFF = .FALSE.  ``` We can compare the pair correlation functions, e.g. with gnuplot using the following command  ```gnuplot -e \"set terminal jpeg; set xlabel 'r(Ang)'; set ylabel 'PCF'; set style data lines; plot 'pair_MLFF_3ps.dat', 'pair_AI_3ps.dat' \" > PC_MLFF_vs_AI_3ps.jpg  ``` The pair correlation functions obtained that way should look similar to this figure [](File_PC_MLFF_vs_AI_3ps.html) We see that pair correlation is quite well reproduced although the error in the force of \\~0\\.242 eV/  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  shown above is a little bit too large. This error is maybe too large for accurate production calculations (usually an accuracy of approximately 0\\.1 eV/  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  is targeted), but since the pair correlation function is well reproduced it is perfectly fine to use this on\\-the\\-fly force field in the time\\-consuming melting of the crystal. ### Obtaining a more accurate force field Including the melting phase in the force field may impact the accuracy of the force field. To improve it is usually advisable to learn on the pure structures, which in our case this means to use the CONTCAR file obtained after the melting. Furthermore, the force field was learned using only a single k point so that we can improve the accuracy of the reference data by including more k points. In most calculations, it is important to conduct accurate ab initio calculations since bad reference data can limit the accuracy or even inhibit the learning of a force field. We restart from the liquid structure obtained before  ```cp POSCAR.T2000_relaxed POSCAR  ``` and change the following INCAR tags  ```ALGO = NormalML_LMLFF = .TRUE.ML_ISTART = 0NSW = 1000  ``` If you run have resources to run in parallel, you can reduce the computation time further by adding k point parallelization with the KPAR tag.We use a denser k\\-point mesh in the KPOINTS file  ```2x2x2 Gamma-centered mesh0 0 0Gamma 2 2 2 0 0 0  ``` We will learn a new force field with 1000 MD steps (each of 3 fs). Keep in mind to run the calculation using the **standard** version of VASP (usually *vasp\\_std*).After running the calculation, we examine the error \"ERR\" in the ML\\_LOGFILE by typing:  ```grep \"ERR\" ML_LOGFILE  ``` where the last entries should be close to  ```ERR                   886   5.98467749E-03   1.48190308E-01   2.38264786E+00ERR                   908   5.98467749E-03   1.48190308E-01   2.38264786E+00ERR                   925   5.98467749E-03   1.48190308E-01   2.38264786E+00ERR                   959   5.98467749E-03   1.48190308E-01   2.38264786E+00ERR                   980   5.98467749E-03   1.48190308E-01   2.38264786E+00ERR                   990   5.99559653E-03   1.50261779E-01   2.40349561E+00ERR                  1000   5.99559653E-03   1.50261779E-01   2.40349561E+00  ``` We immediately see that the errors for the forces are significantly lower than in the previous calculation with only one k point. This is due to the less noisy ab initio data which is easier to learn. To understand how the force field is learned, we inspect the ML\\_ABN file containing the training data. In the beginning of this file, you will find information about the number of reference structures for training  ``` 1.0 Version**************************************************     The number of configurations-------------------------------------------------- 48  ``` and the number of local reference configurations (size of the basis set)  ```**************************************************     The numbers of basis sets per atom type-------------------------------------------------- 382  ``` We will further continue the training a 1000 MD steps and see how the number of training structures and the number of local reference configurations change. Do the following steps:  ```cp ML_ABN ML_ABcp CONTCAR POSCAR  ``` and set the following INCAR tag  ```ML_ISTART = 1  ``` After running the calculation, we inspect the last instance of the errors in the ML\\_LOGFILE by typing:  ```grep ERR ML_LOGFILE  ``` The last few lines should have values close to:  ```ERR                   675   5.10937061E-03   1.46895065E-01   2.50094941E+00ERR                   861   5.10937061E-03   1.46895065E-01   2.50094941E+00ERR                   924   5.10937061E-03   1.46895065E-01   2.50094941E+00ERR                   942   5.01460989E-03   1.47816836E-01   2.47329693E+00ERR                  1000   5.01460989E-03   1.47816836E-01   2.47329693E+00  ``` We see that the accuracy has changed slightly. We also look at the ML\\_ABN file and the number of reference structures for training should increase compared to the run before  ``` 1.0 Version**************************************************     The number of configurations-------------------------------------------------- 99  ``` Also the number of local reference configurations (basis sets) increases compared to the previous calculation  ```**************************************************     The numbers of basis sets per atom type-------------------------------------------------- 665  ```   Ideally, one should continue learning until no structures need to be added to the training data and basis set anymore. Very often this can take up to 100ps depending on the material and conditions. In practice, the prediction of the Bayesian error exhibits numerical inaccuracies so that an ab initio calculation is conducted from time to time even if the force field is accurate enough. So measuring only the decreasing frequency of addition of new data is not sufficient to know when to finish. One should also look at the accuracy of the force on the training data and more importantly on the accuracy on some test data that is outside of the training sets. Download--------  MLFF\\_Liquid\\_Si\\_tutorial.tgz Overview>Liquid Si \\- MLFF> List of tutorials"}
{"file_name": "M_CONSTR.md", "content": "M\\_CONSTR= \\[real array]   Default: **M\\_CONSTR** \\= 3\\*NIONS\\*0\\.0nDescription: M\\_CONSTR specifies the desired local magnetic moment (size and/or direction) for the constrained local moments approach.   --- The M\\_CONSTR tag sets the desired size and/or direction of the integrated local magnetic moments in cartesian coordinates. For each ion 3 coordinates must be specified, i.e., for a system of *N* ions  ```M_CONSTR= M_1x M_1y M_1z  M_2x M_2y M_2z  ....  M_Nx M_Ny M_Nz  ``` For I\\_CONSTRAINED\\_M\\=1 the norm of this vector is meaningless since only the direction will be constrained. For I\\_CONSTRAINED\\_M\\=2 both the norm as well as the direction of the moments specified by means of M\\_CONSTR are subject to constraints. Setting  ```M_CONSTR=  ... 0 0 0 ...   ``` for a certain ion is equivalent to imposing no constraints on the integrated local magnetic moment at this ionic site. For an explanation of the constrained local moments approach see the description of the I\\_CONSTRAINED\\_M tag."}
{"file_name": "Fcc_Ni_(revisited).md", "content": "Overview> fcc Ni (revisited)> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials Task---- Calculation of the partial DOS of spin\\-polarized fcc Ni, a ferromagnet. Input----- ### POSCAR  ```fcc:                              -10.93     0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1Cartesian0 0 0  ``` ### INCAR  ```SYSTEM  = Ni fcc bulk ISTART  = 0ISPIN   = 2MAGMOM  = 1.0ISMEAR  = -5VOSKOWN = 1 LORBIT  = 11  ``` * Spin\\-polarized calculation with initial magnetic moment of 1 \u00b5B.* Interpolation scheme of Vosko, Wilk and Nusair is used (see VOSKOWN\\=1\\).* lm\\-decomposed DOSCAR is created.* Tetrahedron method with Bl\u00f6chl's corrections used for k\\-mesh integration. ### KPOINTS  ```k-points 0Gamma 11 11 11  0  0  0  ``` Calculation----------- ### Collinear case * The output for the magnetic moments in the OSZICAR should look like the following:  ```       N        EDAV:   1     0.139935173959E+02    0.13994E+02   -0.35801E+03  2338   0.828E+02DAV:   2    -0.623612680591E+01   -0.20230E+02   -0.19281E+02  2282   0.123E+02DAV:   3    -0.643764005251E+01   -0.20151E+00   -0.19906E+00  2536   0.140E+01DAV:   4    -0.643786482872E+01   -0.22478E-03   -0.22442E-03  2344   0.459E-01DAV:   5    -0.643786514671E+01   -0.31798E-06   -0.31687E-06  1832   0.173E-02    0.793E+00 ...DAV:   9    -0.545953126374E+01    0.48409E-02   -0.96206E-03  2946   0.839E-01    0.847E-02DAV:  10    -0.545946513577E+01    0.66128E-04   -0.77007E-05  1364   0.126E-01   1 F= -.54594651E+01 E0= -.54594651E+01  d E =0.000000E+00  mag=     0.5781  ``` * The l decomposed parts of the magnetic moment are written in the OUTCAR file:  ``` magnetization (x)  ```    ```# of ion     s       p       p       tot----------------------------------------  1       -0.007  -0.026   0.625   0.591  ``` * The example output for the spin up and down DOS shows an exchange splitting of approximately 0\\.5 eV: [](File_Fig_fccNi_revised_1.html) * Proper initialization of magnetic moments is very important:\t+ Too small initial magnetic moments will/may lead to nonmagnetic solution (by starting with an initial moment of 0\\.0 we arrive only to a magnetic of 0\\.002\\).\t+ Badly initialized calculations take longer to converge.\t+ Coexistence of low\\- and high spin solutions. ### Noncollinear case * For a noncollinear calculation replace ISPIN\\=2 and MAGMOM\\=1\\.0 in the INCAR file by the following:  ```LNONCOLLINEAR = .TRUE.MAGMOM        = 0.0 0.0 1.0  ``` * The last three lines of the OSZICAR file using this parameter should look like the following:  ```DAV:   9    -0.546480633680E+01    0.41628E-02   -0.49402E-04  7532   0.330E-01    0.695E-02DAV:  10    -0.546475032360E+01    0.56013E-04   -0.52286E-05  4328   0.446E-02   1 F= -.54647503E+01 E0= -.54647503E+01  d E =0.000000E+00  mag= 0.0000   0.0000   0.5792  ``` * By using MAGMOM \\= 1\\.0 0\\.0 0\\.0 we get the following output:  ```DAV:   9    -0.546481348871E+01    0.41496E-02   -0.50294E-04  7548   0.330E-01    0.692E-02DAV:  10    -0.546474438319E+01    0.69106E-04   -0.51451E-05  4288   0.432E-02   1 F= -.54647444E+01 E0= -.54647444E+01  d E =0.000000E+00  mag= 0.5792   0.0000   0.0000  ``` * Analogously if we set MAGMOM \\= 0\\.0 1\\.0 0\\.0 we get the following output:  ```DAV:   9    -0.546481179459E+01    0.41515E-02   -0.50430E-04  7552   0.330E-01    0.692E-02DAV:  10    -0.546474640011E+01    0.65394E-04   -0.51658E-05  4292   0.434E-02   1 F= -.54647464E+01 E0= -.54647464E+01  d E =0.000000E+00  mag= 0.0000   0.5792   0.0000  ``` Download--------  4\\_1\\_Ni.tgz Overview> fcc Ni (revisited)> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials"}
{"file_name": "Dipole_corrections_for_defects_in_solids.md", "content": "Similar to the case of charged atoms and molecules in a large cubic box also charged defects in semiconductors impose the problem of potentially slow convergence of the results with respect to the supercell size due to spurious electrostatic interaction between defects in neighboring supercells. Generally,the errors are less dramatic than for charged atoms or molecules since thecharged defect is embedded in a dielectric medium (bulk) and all spuriousinteractions between neighboring cells are scaled down by the bulk dielectricconstant   \u03b5 {\\\\displaystyle \\\\varepsilon } . Hence, the total error might remain small (order of 0\\.1eV) and one has not to worry too much about spurious electrostatic interactionsbetween neighboring cells. However, there exist three critical cases where oneshould definitely start to worry (and to apply dipole corrections): * Semiconductors containing first\\-row elements since they possess rather small lattice constants and hence the distance between two neighboring defects is smaller than in most other semiconductor materials (though one should note that the smaller lattice constant alone must not yet increase the errors dramatically since the leading scaling is   1  /  L {\\\\displaystyle 1/L} , only the contributions scaling   1  /  L  3 {\\\\displaystyle 1/L^{3}}  may become dangerous for small cells).* Semiconductors with a rather small dielectric constant   \u03b5 {\\\\displaystyle \\\\varepsilon }  .* High\\-charge states like 3\\+, 4\\+, 3\\- or 4\\- since the spurious interactions scale (approximately) proportional to the square of the total cell charge, e.g., for a 4\\+ state the error is about 16 times larger than for a 1\\+ state! The worst case one can ever think of is that all three conditions mentionedabove are fulfilled simultaneously. In this case the corrections can amount tothe order of several eV (instead of the otherwise typical order of few 0\\.1 eV)! In principle it is possible to apply the same procedure as in the case ofcharged atoms and molecules in vacuum. However, with the current implementation one has to care about following things and following restrictions apply: * Unfortunately a full correction is only possible for cubic cells, the only contribution which can always be corrected for any arbitrary cell shape, is the monopole\\-monopole interaction. However, for intermediate cell sizes the quadrupole\\-monopole interaction is not always negligible (it can reach the order of minus 30\\-40\u00a0% of the monopole\\-monopole term). Therefore, whenever possible the use of cubic cells is recommended. Otherwise one should try to use as large as possible cells (the dipole\\-dipole and monopole\\-quadrupole interactions scale like   1  /  L  3 {\\\\displaystyle 1/L^{3}}  and therefore, for larger cells a monopole\\-monopole correction alone becomes more and more reliable).* The corrections are only reasonable if the defect\\-induced perturbation of the charge density is strictly localized around the defect, i.e., if only the occupation of localized defect states is changed. Whenever the problem occurs that (partially) wrong bands (e.g. delocalized conduction band or valence band states instead of defect states) are occupied the calculated corrections become meaningless (the correction formulas are not valid for overlapping charges)! Therefore one should first calculate the difference between the charge densities of the charged defect cell and the ideal unperturbed bulk cell and check the localization of this difference charge (in between the defects the difference must vanish within the numerical error bars for the charge densities)!* Don't forget to scale down all results by the bulk dielectric constant   \u03b5 {\\\\displaystyle \\\\varepsilon } ! Yet, there is no possibility to enter any dielectric constant, all corrections are calculated and printed for   \u03b5 \\= 1 {\\\\displaystyle \\\\varepsilon \\=1} . Therefore, the corrected total energies printed after the final electronic iteration are meaningless! Hence, you should first calculate the energies without any corrections and later you have to add the corrections *by hand* using the output printed in the OUTCAR file. You must search for a line *DIPCOR: dipole corrections for dipole* and following lines. There you find the dipole moment, the quadrupole moment and the energy corrections. One should note that strictly one has to take the dielectric constant calculated by first\\-principles methods. Since VASP does not yet allow a simple calculation of dielectric constants, however, you have to use the experimental value (or values taken from other calculations). This empirism introduces slight uncertainties in your energy corrections. However, one can expect that the uncertainty should rarely exceed 5\\-10% since dielectric constants taken from experiment and those obtained from first\\-principles calculations usually agree very well (often within the order of 1\\-3%).* The dipole\\-dipole plus quadrupole\\-monopole corrections printed in OUTCAR are meaningless in their original form! We have to calculate a correction for the defect\\-induced multipoles, but since we have also included the surrounding bulk a quadrupole moment associated with the corresponding charge (extending over the whole cell!) is also included in the printed quadrupole moment (and in the corresponding energy corrections). Since in systems with cubic symmetry dipoles are forbidden by symmetry a dipole moment can only be defect induced (and only if the cubic symmetry is broken by atomic relaxations). In order to obtain the correct (usually quadrupole\\-monopole interaction only) energy correction, one has to proceed as follows:\t+ One has to calculate the quadrupole moment for an ideal bulk cell (neutral!) by setting IDIPOL\\=4 and DIPOL\\= same as in the defect cell (search for the line containing *Tr\\[quadrupol] ...* in the OUTCAR file).\t+ The corresponding quadrupole moment has to be subtracted from the quadrupole moment printed for the charged defect cell. The difference corresponds to the defect\\-induced part of the quadrupole moment.\t+ If no dipole\\-dipole interaction is present you can now simply scale down the energy printed on the line *dipol\\+quadrupol energy correction ...* in the OUTCAR file by the ratio *defect\\-induced quadrupole/total cell quadrupole* since this interaction is proportional to the quadrupole moment. After this scaling you should end up with reasonable numbers (usually smaller than the monopole\\-monopole correction printed on the line containing *energy correction for charged system ...* in the OUTCAR file).\t+ Add now the corrected value for the quadrupole\\-monopole interaction to the calculated monopole\\-monopole interaction energy (and finally scale the sum wit     1  /  \u03b5  \t{\\\\displaystyle 1/\\\\varepsilon }  ).\t+ The whole procedure is even more complicated if a dipole moment occurs also, since then only the quadrupole\\-monopole term has to be corrected but the dipole\\-dipole term is already correct!\t+ But you can easily help yourself: Take simply a cell of the same dimension and calculate a free ion (does not matter which one) of the same charge state (if this causes trouble try the opposite state, e.g. 4\\+ instead of 4\\-, but don't forget then to take the opposite sign for the printed monopole quadrupole energy since this energy is proportional to the cell charge). The calculation will provide a quadrupole moment and a certain quadrupole\\-monopole interaction energy. Since this energy is proportional to the quadrupole moment (times total cell charge) you can estimate the proportionality constant with which one has to multiply the quadrupole moment in order to obtain the corresponding monople\\-quadrupole interaction for the given cell size by dividing the energy by the quadrupole moment. Multiplying this constant by the quadrupole moment of the defect cell you can now calculate the quadrupole\\-monopole contribution alone and the dipole\\-dipole contribution is then known too. The dipole\\-dipole contribution will be kept and the defect\\-induced quadrupole\\-monopole contribution has to be added to this (just multiply the proportionality constant with the defect\\-induced} quadrupole moment).\t+ Then you finally end up with the correct values for all interactions (which have to be summed again and rescaled with     1  /  \u03b5  \t{\\\\displaystyle 1/\\\\varepsilon } \t). It's currently a clumsy procedure but it works satisfactorily.* Any potential correction (LDIPOL\\=*.TRUE.*) is currently impossible! Hence you can only use LDIPOL\\=*.FALSE.*! The reasons are:\t+ First the downscaling with     \u03b5  \t{\\\\displaystyle \\\\varepsilon } \t is missing and second the correction is not calculated from the defect\\-induced multipoles but from the total monopoles of the defect cell containing at least a meaningless quadrupole contribution (one had to subtract the quadrupole moment of the ideal cell before calculating any correction potential, but this is not yet implemented in the routine dipol.F). However, one has to expect that the potential corrections do not change the results dramatically ... Besides charged defects there's another critical type of defects which may cause serious trouble (and for which one should also apply dipole corrections): **neutral defects** or **defect complexes of low symmetry**. For such defects a dipole moment may occur leading to considerable dipole\\-dipole interactions. Though they fall off like   1  /  L  3 {\\\\displaystyle 1/L^{3}}  they might not be negligible (even for somewhat larger cells) if the induced dipole moment is rather large. The worst case that can happen is a defect complex with two (or more) rather distant defects (separated by distances of the order of nearest\\-neighbor bond lengths or larger) with a strong charge transfer between the defects forming the complex (e.g., one defect might possess the charge state 2\\+ and the other one the charge state 2\\-). This can easily happen for defect complexes representing acceptor\\-donor pairs. The most critical cases are again given for semiconductors with rather small lattice constants, rather small dielectric constants and for any defect complex causing strong charge transfers. Again the same restrictions and comments hold as stated above for charged cells: * You may currently only use cubic cells, LDIPOL\\=*.FALSE.* and you have to rescale the correction printed in OUTCAR by the bulk dielectric constant   \u03b5 {\\\\displaystyle \\\\varepsilon }  (i.e., the printed energies are again meaningless and have to be corrected *by hand*). There is only one point which might help, that is since in cubic cells any dipole moment can only be defect\\-induced no additional corrections are necessary (in contrast to the monopole\\-quadrupole energies of charged cells). \\*The other bad news is that for such defect complexes it may sometimes be hard to find the correct *center of mass* (DIPOL in INCAR file) for the defect induced charge perturbation (it's usually more easy for single point defects since DIPOL\\=*position of the point defect* is the correct choice). This introduces some uncertainties and one might try different values for DIPOL (the one giving the minimum correction should be the correct one).* DIPOL is internally aligned to the position of the closest FFT\\-grid point in real space. Hence, the position DIPOL is only determined within distances corresponding to the FFT\\-grid spacing (controlled by NGXF, NGYF, and NGZF). This might also play a certain role if for charged single point defects the position of the defect is not chosen to be (0,0,0\\)! In this case DIPOL might correspond to a position lying slightly off the position of the defect what may also introduces inaccuracies in the calculation of the electrostatic interactions (i.e., apparent dipole moments may occur which should be zero if the correct position DIPOL would have been chosen). In this case you should whenever possible try to adjust your FFT\\-grid in such a way that the position of the defect matches exactly some FFT\\-grid point in real space or otherwise never use any other (point) defect position than (0,0,0\\)... A **final note** has to be made: besides the electrostatic interactions there exist also spurious elastic interactions between neighboring cells which (according to a simple *elastic dipole lattice model*) should scale like   1  /  L  3 {\\\\displaystyle 1/L^{3}}  (leading order). Therefore, the corrected values may still show a certain variation with respect to the supercell size. One can check the relaxation energies (elastic energies) separately by calculating (and correcting) also unrelaxed cells (defect plus remaining atoms in their ideal bulk positions). If the k\\-point sampling is sufficient to obtain well\\-converged results (with respect to the BZ integration) one might even try to extrapolate the elastic interaction energies empirically by plotting the relaxation energies versus   1  /  L  3 {\\\\displaystyle 1/L^{3}}  (hopefully a linear function; if not try to plot it against   1  /  L  5 {\\\\displaystyle 1/L^{5}}  and look whether it matches a linear function) and taking the value for   1  /  L \u2192 0 {\\\\displaystyle 1/L\\\\rightarrow 0}  (i.e. the axis offset). However, usually the remaining errors due to spurious elastic interactions can be expected to be small (rarely larger than about 0\\.1 eV) and the extrapolation towards   L \u2192 \u221e {\\\\displaystyle L\\\\rightarrow \\\\infty }  may also be rather unreliable if the results are not perfectly converged with respect to the k\\-point sampling (though one should note that this may then hold for the electrostatic corrections too)."}
{"file_name": "NKREDX.md", "content": "NKREDX= \\[integer]   Default: **NKREDX** \\= 1nDescription: NKREDX specifies a reduction factor for the **q**\\-point grid representation of the exact exchange potential along reciprocal space direction **b**1.  --- One may restrict the sum over **q** in the Fock exchange potential (or one of its short range counterparts) to a subset, {**q****k**}, of the full (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-point set, {**k**}, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell,and *C*i is the integer grid reduction factor along reciprocal lattice direction**b**i. This leads to a reduction in the computational workload by a factor:  1  C  1  C  2  C  3 {\\\\displaystyle {\\\\frac {1}{C\\_{1}C\\_{2}C\\_{3}}}} In case one sets NKRED, the grid reduction factors will be uniformly set to *C*1\\=*C*2\\=*C*3\\=NKRED. If one wants to specify separate grid reduction factors for *C*1, *C*2, and *C*3 one should use *C*1\\=NKREDX, *C*2\\=NKREDY, and *C*3\\=NKREDZ, respectively.   | **Warning:** there are circumstances under which **NKRED** and **NKREDX**,**Y**,**Z** should not be used! || --- |"}
{"file_name": "LTMP2.md", "content": "Overview> MP2> LTMP2> stochastic LTMP2 > High energy contributions using stochastic LTMP2\")> List of tutorialsOn this page, we explain how to perform a calculation using the **LTMP2**[\\[1]](#cite_note-schaefer2017-1) algorithm. Make sure you successfully completed the preparation steps Hartree\\-Fock ground state and Hartree\\-Fock virtuals. **NOTE:** *If you use this algorithm, please cite reference [\\[1]](#cite_note-schaefer2017-1) in your publication in addition to the standard VASP reference.* The INCAR file-------------- The LTMP2 calculation can simply be performed using the following INCAR file  ```ALGO = ACFDTRK LMP2LT = .TRUE.NOMEGA = # number of tau points (see below)NBANDS = # same value as in the Hartree-Fock unoccupied step ( = number of plane-waves)ENCUT = # same value as in the Hartree-Fock stepLORBITALREAL = .TRUE.PRECFOCK = FastKPAR = # parallelization (see below)  ``` Make sure that VASP reads the WAVECAR file from the Hartree\\-Fock virtuals step. The setting for PRECFOCK is strongly recommended, since the code heavily relies on real space grid FFTs. #### NOMEGA flag The number of   \u03c4 {\\\\displaystyle \\\\tau } \\-points is controlled by the NOMEGA flag. This is necessary to calculate the Laplace transformed energy denominator (see Ref [\\[1]](#cite_note-schaefer2017-1) for details),  1  \u03b5  i  \\+  \u03b5  j  \u2212  \u03b5  a  \u2212  \u03b5  b  \\= \u2212  \u222b  0  \u221e  e  \u2212 (  \u03b5  i  \\+  \u03b5  j  \u2212  \u03b5  a  \u2212  \u03b5  b  ) \u03c4  d  \u03c4  . {\\\\displaystyle {\\\\frac {1}{\\\\varepsilon \\_{i}\\+\\\\varepsilon \\_{j}\\-\\\\varepsilon \\_{a}\\-\\\\varepsilon \\_{b}}}\\=\\-\\\\int \\_{0}^{\\\\infty }{\\\\textrm {e}}^{\\-(\\\\varepsilon \\_{i}\\+\\\\varepsilon \\_{j}\\-\\\\varepsilon \\_{a}\\-\\\\varepsilon \\_{b})\\\\tau }\\\\;{\\\\textrm {d}}\\\\tau \\\\;.} Usually it is sufficient to set NOMEGA\\=6\\. For materials with a small bandgap it is worth checking if the MP2 energy changes with increasing NOMEGA (e.g. 8 or 10\\). Note, that the MP2 energy diverges with 1/bandgap, independent of NOMEGA. Parallelization--------------- The LTMP2 algorithm is a high\\-performance code and can easily be used on many CPUs. Both OpenMP and MPI is supported. We recommend to use MPI for parallelization since the code possesses an almost ideal parallelization efficiency. OpenMP should only be used to increase the shared memory, if necessary. In order to activate the efficient MPI parallelization use the KPAR flag in the following way (note that the usual meaning of the KPAR flag becomes obsolete in the LTMP2 algorithm). KPAR specifies the number of plane\\-waves treated in parallel. Ideally, set KPAR to half of the used MPI ranks. If this results in memory issues, further decrease KPAR (such that KPAR is alway a divisor of the used MPI ranks) or increase the number of OpenMP threads. #### Example for 512 CPUs MPI ranks: 512    OpenMP threads per rank: 1     ```KPAR = 256  ``` To decrease the memory requirement you can alternatively set KPAR to 128 or 64 and so on. Or also try    MPI ranks: 256    OpenMP threads per rank: 2     ```KPAR = 128  ```"}
{"file_name": "HILLS_BIN.md", "content": "HILLS\\_BIN= \\[Integer]   Default: **HILLS\\_BIN** \\= NSWnDescription: HILLS\\_BIN sets the number of steps after which the bias potential is updated in a metadynamics run (in case VASP was compiled with \\-Dtbdyn).  --- In metadynamics (MDALGO\\=11 \\| 21\\), the bias potential is given as   V \\~  ( t , \u03be ) \\= h  \u2211  i \\= 1  \u230a t  /  t  G  \u230b  exp \u2061  {  \u2212  \\|  \u03be  ( t )  \u2212  \u03be  ( i \u22c5  t  G  )  \\|  2  2  w  2  }  . {\\\\displaystyle {\\\\tilde {V}}(t,\\\\xi )\\=h\\\\sum \\_{i\\=1}^{\\\\lfloor t/t\\_{G}\\\\rfloor }\\\\exp {\\\\left\\\\{\\-{\\\\frac {\\|\\\\xi ^{(t)}\\-\\\\xi ^{(i\\\\cdot t\\_{G})}\\|^{2}}{2w^{2}}}\\\\right\\\\}}.} Thre parameters (HILLS\\_H, HILLS\\_W, and HILLS\\_BIN) must be provided by the user.   The number of steps after which the bias potential is updated is set by HILLS\\_BIN."}
{"file_name": "Caveat.md", "content": "Redirect to: * ScGW0 caveat\")"}
{"file_name": "LTEMPER.md", "content": "LTEMPER= \\[logical]   Default: **LTEMPER** \\= .FALSE.nDescription: LTEMPER specified whether parallel tempering is used. The flag must be used in combination with IMAGES.  --- VASP supports various modes where simultaneous calculations for different INCAR, KPOINTS, POTCAR, or POSCAR files are performed. The parallel tempering mode is explained in this section, however, please read the section IMAGES first. Parallel tempering is also known as replica\\-exchange molecular dynamics.[\\[1]](#cite_note-sugi99-1) If the tags IMAGES\\=nn and LTEMPER\\=.TRUE. are set in the INCAR file, VASP performs parallel tempering calculations. In this case, it is expedient to supply different INCAR and POSCAR files in each subdirectory 01, 02, 03, ..., nn. For each subdiretory a different simulation temperature should be supplied using the tags TEBEG in the INCAR files 01/INCAR, 02/INCAR ... nn/INCAR. In the course of the simulations, VASP will attempt to swap the temperatures between the images. Swapping attempts are made every NTEMPER MD steps and accepted with a likelyhood of  p \\= min  (  1 ,  exp \u2061  (  \u2212  E  j  k  T  i  \u2212  E  i  k  T  j  )  exp \u2061  (  \u2212  E  i  k  T  i  \u2212  E  j  k  T  j  )  )  \\= min  (  1 ,  e  (  E  i  \u2212  E  j  )  (  1  k  T  i  \u2212  1  k  T  j  )  )  , {\\\\displaystyle p\\=\\\\min \\\\left(1,{\\\\frac {\\\\exp \\\\left(\\-{\\\\frac {E\\_{j}}{kT\\_{i}}}\\-{\\\\frac {E\\_{i}}{kT\\_{j}}}\\\\right)}{\\\\exp \\\\left(\\-{\\\\frac {E\\_{i}}{kT\\_{i}}}\\-{\\\\frac {E\\_{j}}{kT\\_{j}}}\\\\right)}}\\\\right)\\=\\\\min \\\\left(1,e^{(E\\_{i}\\-E\\_{j})\\\\left({\\\\frac {1}{kT\\_{i}}}\\-{\\\\frac {1}{kT\\_{j}}}\\\\right)}\\\\right),}   where   E  i  ,  E  j {\\\\displaystyle E\\_{i},E\\_{j}}  and  T  i  ,  T  j {\\\\displaystyle T\\_{i},T\\_{j}}  are the energies and temperatures of the considered two replicas. Note that VASP swaps the temperatures and not the positions between images. This means that the temperatures in each subdirectory change as the MD progresses. Information on the current temperatures for each image can be found in the OUTCAR files around the lines (all OUTCAR files will show the same information):  ```parallel tempering new  ``` The average acceptance ratios are also written to the OUTCAR file. For efficient parallel tempering the acceptance ratio should not fall much below 0\\.2\\-0\\.3\\. If the acceptance ratio is too small, one usually needs to increase the number of images. However, too many images can also decrease the probability that all images visit all allowed temperatures."}
{"file_name": "CSHIFT.md", "content": "CSHIFT= \\[real]n| Default: **CSHIFT** | \\= OMEGAMAX\\*1\\.3 / max(NOMEGA,40\\) | for GW calculations || --- | --- | --- ||  | \\= 0\\.1 | for linear response calculations | Description: CSHIFT sets the (small) complex shift \u03b7 in the Kramers\\-Kronig transformation and Hilbert transformation in linear response and GW calculations, respectively.  --- The default CSHIFT\\=0\\.1 is perfectly acceptable for most calculations and causes a slight smoothing of the real part of the dielectric function. If the gap is very small (i.e. approaching two times CSHIFT), slight inaccuracies in the static dielectric constant are possible, which can be remedied by decreasing CSHIFT. If CSHIFT is further decreased, it is strongly recommended to increase the parameter NEDOS to values around 2000\\. For GW type calculations, one should manually check that CSHIFT is at least as largeas the grid spacing at low frequencies. If CSHIFT is smaller than the grid spacing,the QP energies might show erratic behavior (for instance large re\\-normalization factors Z)."}
{"file_name": "ML_CSLOPE.md", "content": "ML\\_CSLOPE= \\[real]   Default: **ML\\_CSLOPE** \\=  0\\.2 {\\\\displaystyle 0\\.2}   Description: Parameter used in the automatic determination of threshold for error estimation in the machine learning force field method.  --- The usage of this tag in combination with the learning algorithms is described here: here. The standard error of the history of maximum estimated errors of the forces (ML\\_MHIS) and it's slope must be below ML\\_CSIG and ML\\_CSLOPE so that an update of the threshold for the maximum estimated error of forces ML\\_CTIFOR can take place."}
{"file_name": "LKPOINTS_OPT.md", "content": "LKPOINTS\\_OPT= .TRUE.\\| .FALSE.n| Default: **LKPOINTS\\_OPT** | \\= .TRUE. | if KPOINTS\\_OPT file is present. || --- | --- | --- | Description: LKPOINTS\\_OPT controlls whether VASP reads the KPOINTS\\_OPT file.  --- To avoid reading the KPOINTS\\_OPT file without removing it from the working directory, the LKPOINTS\\_OPT tag can be set to `.FALSE.` in the INCAR file."}
{"file_name": "VDW_A2.md", "content": "VDW\\_A2= \\[real]nDescription: VDW\\_A2 defines the damping function parameter   a  2 {\\\\displaystyle a\\_{2}}  .  --- VDW\\_A2 defines the damping function parameter   a  2 {\\\\displaystyle a\\_{2}}  for the DFT\\-D3 (BJ damping function) and DFT\\-D4 methods."}
{"file_name": "LIBMBD_ALPHA.md", "content": "LIBMBD\\_ALPHA= \\[real array]nDescription: LIBMBD\\_ALPHA defines the free\\-atom polarizabilities   \u03b1  0 {\\\\displaystyle \\\\alpha \\_{0}}  (bohr  3 {\\\\displaystyle ^{3}} ) used in the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_ALPHA allows to set values for the free\\-atom polarizabilities   \u03b1  0 {\\\\displaystyle \\\\alpha \\_{0}}  (bohr  3 {\\\\displaystyle ^{3}} ) used in the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods as implemented in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3). For each atom listed in the POSCAR file, a value has to be provided. The values are internally passed to the first column of the libMBD input **free\\_values** described at the page [\\[4]](#cite_note-libmbd_input-4). | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "ML_HEAT.md", "content": "This file contains the local heat flux at every MD step. This file is only written if ML\\_LHEAT\\=**.TRUE.**. A sample output should look like the following:  ```NSTEP=         1 QXYZ=  0.36329995E-03 -0.18158424E-03 -0.89885493E-03NSTEP=         2 QXYZ=  0.12017813E+00 -0.24353637E+00 -0.24858697E-02NSTEP=         3 QXYZ=  0.16434205E+00 -0.25889449E+00  0.86212831E-02NSTEP=         4 QXYZ=  0.20636827E+00 -0.24238677E+00 -0.33029653E-01NSTEP=         5 QXYZ=  0.22888948E+00 -0.19732842E+00 -0.15981468E-02NSTEP=         6 QXYZ=  0.18517072E+00 -0.19821527E+00  0.34029701E-01NSTEP=         7 QXYZ=  0.20600383E+00 -0.17943287E+00 -0.28752284E-01NSTEP=         8 QXYZ=  0.25245149E+00 -0.17896799E+00  0.66038212E-01NSTEP=         9 QXYZ=  0.22178615E+00 -0.13178134E+00  0.23810433E-01NSTEP=        10 QXYZ=  0.20140372E+00 -0.11168534E+00  0.90583309E-01  ``` Here \"NSTEP\" is the number of the MD step and \"QXYZ\" is the heat flux in three Cartesian directions.  ---"}
{"file_name": "MP2.md", "content": "By specifying ALGO\\=*MP2* in the INCAR file VASP calculates MP2 correlation energies. It is strongly recommended to calculate all virtual states spanned by the basis set before calling the MP2 routines. Thus any MP2 calculation should proceed in three steps: * The first step is the determination of the occupied orbitals of the Hartree\\-Fock Hamiltonian. Note that MP2 requires calculating the Hartree\\-Fock ground state, and any LDA or GGA correlation should be switched off. Following specific INCAR tags have to be set:  ```LHFCALC = .TRUE.AEXX = 1.0\u00a0; ALDAC = 0.0\u00a0; AGGAC = 0.0ALGO = D\u00a0; EDIFF = 1E-7  ``` * Next search for maximum number of plane\\-waves in the OUTCAR file and execute VASP again using the following INCAR tags:  ```NBANDS  =   maximum number of plane-wavesLHFCALC = .TRUE.AEXX = 1.0\u00a0; ALDAC = 0.0\u00a0; AGGAC = 0.0ALGO = Exact\u00a0; NELM = 1\u00a0; LOPTICS = .TRUE.  ``` * Finally calculate the MP2 correlation energy:  ```NBANDS  =   maximum number of plane-wavesLHFCALC = .TRUE.\u00a0;  AEXX = 1.0\u00a0; ALDAC = 0.0LMAXMP2\") = 2  ``` The flag LMAXMP2 specifies the maximum   l {\\\\displaystyle l}  quantum number for the treatment of the one\\-center terms. This should be set to twice the maximum of the non\\-local component in the pseudopotential. Alternatively LMAXFOCKAE can be set in the INCAR file. This is expected to be more efficient but slightly less accurate. Combining LMAXFOCKAE and LMAXFOCKMP2\") is in principle also allowed but hardly offers any advantage over using only LMAXFOCKAE or LMAXFOCKMP2\").  ---"}
{"file_name": "ML_ICOUPLE.md", "content": "ML\\_ICOUPLE= \\[integer array]nDescription: This tag specifies the atoms where the coupling parameter is introduced to calculate the chemical potential within the machine learning force field method.  --- Atom are ordered according to the POSCAR file and indices start with index 1\\. For thermodynamic integration calculations please have a look at the tag ML\\_LCOUPLE."}
{"file_name": "Wannier_functions.md", "content": "Wannier functions   \\|  w  m  R  \u27e9 {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle }  are constructed by a linear combination of Bloch states   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle } , i.e., the computed Kohn\\-Sham (KS) orbitals, as follows:  \\|  w  m  R  \u27e9 \\=  \u2211  n  k  e  \u2212 i  k  \u22c5  R  U  m n  k  \\|  \u03c8  n  k  \u27e9 . {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle \\=\\\\sum \\_{n\\\\mathbf {k} }e^{\\-i\\\\mathbf {k} \\\\cdot \\\\mathbf {R} }U\\_{mn\\\\mathbf {k} }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle .} Here,   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is a unitary matrix which can be generated using different approaches discussed below,   m {\\\\displaystyle m}  is an index enumerating Wannier functions with position   R {\\\\displaystyle \\\\mathbf {R} }  ,  n {\\\\displaystyle n}  is the band index, and   k {\\\\displaystyle \\\\mathbf {k} }  is the Bloch vector.Generally, one starts with an initial guess for   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  that is built from   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }} . The latter can be built from projections onto some localized\\-orbital basis. Comprehensive instructions on how to construct Wannier orbitals in VASP can be found here. One\\-shot singular\\-value decomposition (SVD)--------------------------------------------- In one\\-shot SVD,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is computed by projecting the KS orbitals onto localized orbitals basis   \u03d5  m  k {\\\\displaystyle \\\\phi \\_{m\\\\mathbf {k} }}  that is specified by the LOCPROJ tag:  A  m n  k  \\= \u27e8  \u03c8  n  k  \\|  S  \\|  \u03d5  m  k  \u27e9 , {\\\\displaystyle A\\_{mn\\\\mathbf {k} }\\=\\\\langle \\\\psi \\_{n\\\\mathbf {k} }\\|S\\|\\\\phi \\_{m\\\\mathbf {k} }\\\\rangle ,} where  \u03d5  i  k  (  r  ) \\=  e  i  k  \u22c5  r  Y  l m  (  r ^  )  R  n  ( r ) . {\\\\displaystyle \\\\phi \\_{i\\\\mathbf {k} }(\\\\mathbf {r} )\\=e^{\\\\mathrm {i} \\\\mathbf {k} \\\\cdot \\\\mathbf {r} }Y\\_{lm}({\\\\hat {r}})R\\_{n}(r).} Note that   i {\\\\displaystyle i}  encodes the quantum numbers   n {\\\\displaystyle n}  ,  l {\\\\displaystyle l} , and   m {\\\\displaystyle m} . Thus, in   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  ,  m {\\\\displaystyle m}  is not the magnetic quantum number. Then, VASP performs one\\-shot SVD for each k point  A  m n  k  \\= \\[ D \u03a3  V  \u2217  ]  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }\\=\\[D\\\\Sigma V^{\\*}]\\_{mn\\\\mathbf {k} }} to obtain the unitary matrix  U  m n  k  \\= \\[ D  V  \u2217  ]  m n  k  . {\\\\displaystyle U\\_{mn\\\\mathbf {k} }\\=\\[DV^{\\*}]\\_{mn\\\\mathbf {k} }.} Selected columns of the density matrix (SCDM)--------------------------------------------- The SCDM method [\\[1]](#cite_note-damle:mms:2018-1) is switched on using LSCDM. It has the advantage that the specification of a local basis in terms of atomic quantum numbers is omitted.  Maximally localized Wannier functions using Wannier90----------------------------------------------------- The interface of VASP with the Wannier90 code[\\[2]](#cite_note-mostofi:cpc:2014-2)[\\[3]](#cite_note-pizzi:jpcm:2020-3) is mainly controlled by LWANNIER90 and LWANNIER90\\_RUN. First, the initial guess for   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  can be created by providing the *projections block* in the **wannier90\\.win** file (also see WANNIER90\\_WIN) and setting LWANNIER90\\=True.  In order to obtain maximally localized Wannier functions,   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is constructed in a second step. For this,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  could be created using any projection method in the first step, i.e., single\\-shot SVD method (LOCPROJ), SCDM method (LSCDM), or Wannier90 (LWANNIER90). Then, Wannier90 can be executed directly or through VASP with the LWANNIER90\\_RUN tag."}
{"file_name": "SPRING_V0.md", "content": "SPRING\\_V0= \\[real (array)]n| Default: **SPRING\\_V0** | \\= 0 | for all coordinates with `status=8` in ICONST. || --- | --- | --- | Description: Rate at which the bias potential is shifted in   u c  /  f s {\\\\displaystyle uc/fs}  .  --- Consider the bias potential for a molecular\\-dynamics (MD) run of the form:  V \\~  (  \u03be  1  , \u2026 ,  \u03be  M  8  ) \\=  \u2211  \u03bc \\= 1  M  8  1 2  \u03ba  \u03bc  (  \u03be  \u03bc  ( q ) \u2212  \u03be  0 \u03bc  )  2  , {\\\\displaystyle {\\\\tilde {V}}(\\\\xi \\_{1},\\\\dots ,\\\\xi \\_{M\\_{8}})\\=\\\\sum \\_{\\\\mu \\=1}^{M\\_{8}}{\\\\frac {1}{2}}\\\\kappa \\_{\\\\mu }(\\\\xi \\_{\\\\mu }(q)\\-\\\\xi \\_{0\\\\mu })^{2},\\\\;} where the sum runs over all (  M  8 {\\\\displaystyle M\\_{8}} ) coordinates the potential acts upon (  \u03be  \u03bc  ( q ) {\\\\displaystyle \\\\xi \\_{\\\\mu }(q)} ). The coordinates are defined in the ICONST file by setting the `status=8`.Optionally, the position of minimum (  \u03be  0 \u03bc {\\\\displaystyle \\\\xi \\_{0\\\\mu }} ) can be shifted at a constant rate   \u03be \u02d9  \u03bc {\\\\displaystyle {\\\\dot {\\\\xi }}\\_{\\\\mu }}  every MD step, i.e.,  \u03be  0 \u03bc  ( t \\+ \u0394 t ) \\=  \u03be  0 \u03bc  ( t ) \\+  \u03be \u02d9  \u03bc  ( q ) \u0394 t , {\\\\displaystyle \\\\xi \\_{0\\\\mu }(t\\+\\\\Delta t)\\=\\\\xi \\_{0\\\\mu }(t)\\+{\\\\dot {\\\\xi }}\\_{\\\\mu }(q)\\\\Delta t,\\\\;} where   \u0394 t {\\\\displaystyle \\\\Delta t}  is the time step used in MD (POTIM). The rate   \u03be \u02d9  \u03bc {\\\\displaystyle {\\\\dot {\\\\xi }}\\_{\\\\mu }}  can be defined via the parameter SPRING\\_V0 and its units are   u c  /  f s {\\\\displaystyle uc/fs} , where   u c {\\\\displaystyle uc}  corresponds to the units of the coordinate the potential acts upon (e.g.,   \u00c5 {\\\\displaystyle {\\\\mathrm {\\\\AA} }}  for coordinates with `flag` R,   r a d . {\\\\displaystyle rad.}  for coordinates with `flag` A, dimensionless for coordinates with `flag` W, etc...).The number of items defined via SPRING\\_V0 must be equal to   M  8 {\\\\displaystyle M\\_{8}} , otherwise the calculation terminates with an error message."}
{"file_name": "POTIM.md", "content": "POTIM= \\[real]n| Default: **POTIM** | \\= none, | *must* be set if IBRION\\= 0 (MD) || --- | --- | --- ||  | \\= 0\\.5 | if IBRION\\= 1, 2, and 3 (ionic relaxation), and 5 (up to VASP.4\\.6\\) ||  | \\= 0\\.015 | if IBRION\\=5, and 6 (as of VASP.5\\.1\\) | Description: POTIM sets the time step in molecular dynamics or the step width in ionic relaxations.   --- * For IBRION \\= 0, POTIM gives the time step (in fs) in all ab\\-initio Molecular Dynamics runs, it *has* to be supplied therefore, otherwise VASP crashes immediately after having started. * For IBRION \\=1, 2, and 3, which corresponds to ionic relaxation using a quasi\\-Newton algorithm, conjugate\\-gradient algorithm, and damped molecular dynamics, respectively, the POTIM tag serves as a scaling constant for the step widths. The quasi\\-Newton algorithm is especially sensitive to the choice of this parameter. * For IBRION \\= 5, and 6, a phonon calculations using the finite differences approach is done, where POTIM is the width of the displacement of each ion to calculate the Hessian Matrix. VASP.4\\.6 and older releases: POTIM has to be small enough to ensure that the displacements are within the harmonic limit. The vibrational frequencies using the frozen phonon approach are based on the harmonic approximation. | **Mind:** For VASP.5\\.1 and newer releases, POTIM is automatically reset to 0\\.015 \u00c5, if the supplied value for POTIM is unreasonably large. || --- |"}
{"file_name": "NpT_ensemble.md", "content": "The NpT ensemble (isothermal\\-isobaric ensemble) is a statistical ensemble that is used to study material properties under the conditions of a constant particle number N, a pressure p fluctuating around an equilibrium value   \u27e8 p \u27e9 {\\\\displaystyle \\\\langle p\\\\rangle }  and a temperature T fluctuating around an equilibrium value   \u27e8 T \u27e9 {\\\\displaystyle \\\\langle T\\\\rangle } . This page describes how to sample the NpT ensemble from a molecular\\-dynamics run.  **Instructions for setting up an NpT ensemble**  The Parinello\\-Rahman algorithm[\\[1]](#cite_note-parrinello:prl:1980-1)[\\[2]](#cite_note-parrinello:jap:1981-2) is the method of choice when setting up an NpT molecular\\-dynamics run. To use the Parinello\\-Rahman algorithm the Langevin thermostat hasto be adjusted for an NpT simulation by setting the ISIF\\=3 in the INCAR file. Otherwise, the lattice is not allowed to change during the simulation, preventing VASP from keeping the pressure constant.Additionally the user can set LANGEVIN\\_GAMMA as when simulating a NVT ensemble,the tag LANGEVIN\\_GAMMA\\_L which is a friction coefficient forthe lattice degrees of freedom and the PMASS tag to assign a fictitious mass to the latticedegrees of freedom. | NpT ensemble | Langevin || --- | --- || MDALGO | 3 || ISIF | 3 || additional tags to set | LANGEVIN\\_GAMMA, LANGEVIN\\_GAMMA\\_L || optional tags to set | PMASS | The additional tags in the column for the thermostat have to be set because the defaultvalues are zero resulting in a different ensemble. To use the NpT ensemble VASP has to be compiled with the precompiler flag \\-Dtbdyn. A general guide for molecular\\-dynamics simulations can be found on the molecular\\-dynamics page. *An example INCAR file for the NpT ensemble*  ``` #INCAR molecular-dynamics tags NpT ensemble  IBRION = 0                      # choose molecular-dynamics  MDALGO = 3                      # using Langevin thermostat ISIF = 3                        # compute stress tensor and change box volume/shape  TEBEG = 300                     # set temperature  NSW = 10000                     # number of time steps  POTIM = 1.0                     # time step in femto seconds  LANGEVIN_GAMMA = 10.0 10.0 10.0 # Langevin friction coefficient for three atomic species LANGEVIN_GAMMA_L = 10.0         # Langevin friction coefficient for lattice degrees of freedom PMASS = 1000                    # the fictitious mass of the lattice degrees of freedom  ``` | **Mind:** This INCAR file only contains the parameters for the molecular\\-dynamics part. The electronic minimization or the machine learning tags have to be added. || --- | | **Warning:** Calculations of systems with limited long\\-range order (e.g. liquids) may lead to irreversible deformations of the cell within this ensemble. For those systems one must use an ICONST file containing constraints for the Bravais lattice. || --- |"}
{"file_name": "LPARD.md", "content": "LPARD= \\[logical]   Default: **LPARD** \\= .FALSE.nDescription: Determines whether partial (band and/or **k**\\-point\\-decomposed) charge densities are evaluated.   --- An LPARD run is a postprocessing step that requires a pre\\-converged calculation. It writes the partial density, or multiple partial charge densities, to one PARCHG file or several PARCHG.\\*.\\* files, depending on the setting of LSEPB and LSEPK. | **Warning:** The orbitals read from the WAVECAR file must be converged in a prior VASP run. || --- | | **Warning:** LPARD is not supported for noncollinear calculations (LNONCOLLINEAR\\=true). || --- | There are various ways to divide the partial charge density. You can pick the contributing bands either by index (refer to NBMOD and IBAND) or by energy range (refer to EINT), and select contributing **k** points through KPUSE.  | **Mind:** If only the LPARD tag is set, without any other tags to specify the separation of charge, then the NBMOD tag defaults to \\-1\\. The valence charge density (without the augmentation charges) is then written to the CHGCAR file, and no other partial charge output is generated. || --- |"}
{"file_name": "LWANNIER90.md", "content": "LWANNIER90= .TRUE. \\| .FALSE.   Default: **LWANNIER90** \\= .FALSE.nDescription: LWANNIER90\\=.TRUE. switches on the interface between VASP and WANNIER90. **N.B.**: This feature is only present if VASP is compiled with \\-DVASP2WANNIER90 or \\-DVASP2WANNIER90v2.  --- For LWANNIER90\\=.TRUE., VASP will write the input files for a WANNIER90 run: **wannier90\\.win**, **wannier90\\.mmn**, **wannier90\\.eig**, **wannier90\\.amn**, and if LWRITE\\_UNK\\=.TRUE. **wannier90\\.UNKp.s**. This is done by running wannier\\_setup in library mode as described in Chapter 6 of the WANNIER90 manual. For documentation of these files and tags therein, please refer to the WANNIER90 manual. The following cases may occur: * If **wannier90\\.win** does not exist, VASP will write the following template  ```num_wann = NBANDS begin unit_cell_cart  ... ... ...  ... ... ...  ... ... ...end unit_cell_cart begin atoms_cart   ... ... ...   ... ... ...   ... ... ...   ... ... ...  end atoms_cart mp_grid = .. .. .. begin kpoints   ... ... ...   ... ... ...   ... ... ...   ... ... ...end kpoints  ``` Here, the unit\\_cell\\_cart, atoms\\_cart, and kpoints blocks, and mp\\_grid array, will be set in accordance with the setup of the VASP calculation. This basically corresponds to the information given in the POSCAR and KPOINTS files.* If the **wannier90\\.win** file already exists, VASP will only add the aforementioned information if it is not already present. This means that VASP will check, for instance, whether or not the **wannier90\\.win** file contains a kpoints block, and add one if not. **Mind**: If it finds a kpoints block, VASP will not check whether this block agrees with the k points used in the VASP calculation! The user may create a **wannier90\\.win** file prior to running VASP with LWANNIER90\\=.TRUE., and specify any tag and/or block that is understood by wannier\\_setup and/or wannier\\_run. For instance, one can specify the projections block in the **wannier90\\.win** file that controls the initial guess for the maximally localized Wannier functions.Then, VASP writes the projections of the Bloch functions onto the relevant projectors to the **wannier90\\.amn** file. See Chapter 3 of the WANNIER90 manual for more information."}
{"file_name": "ML_WTOTEN.md", "content": "ML\\_WTOTEN= \\[real]n| Default: **ML\\_WTOTEN** | \\= 0\\.005 | if ML\\_IWEIGHT\\=1 || --- | --- | --- ||  | \\= 1\\.0 | otherwise | Description: Sets a scaling of the fitted potential energy.   --- For ML\\_IWEIGHT\\=2 and 3 (default), the potential energy in the training data set is multiplied by ML\\_WTOTEN (unitless). We recommend increasing ML\\_WTOTEN if you plan to apply the force field in a simulation where the accuracy of the total energy is most important. This puts a focus on the energy error and is desirable, for instance, for the computation of defect\\-formation energies. For ML\\_IWEIGHT\\=1, ML\\_WTOTEN has the unit of eV/atom, and the potential energy in the training data set is divided by it."}
{"file_name": "ML_LFAST.md", "content": "ML\\_LFAST= \\[logical]n| Default: **ML\\_LFAST** | \\= .TRUE. | for `ML_MODE = refit` || --- | --- | --- ||  | \\= .FALSE. | else | Description: This tag switches on the descriptors for refitting in the fast execution mode within machine learning force fields. This tag is usually switched on by `ML_MODE = refit` and doesn't need to be set explicitely. | **Mind:** This tag is only available as of VASP.6\\.4\\.0 || --- |  --- This tag switches on the descriptors for the fast execution mode. To use the fast execution mode the force field first has to be refit with the fast descriptors. This is done by setting `ML_MODE = refit`, which will automatically set ML\\_LFAST. As usual, the resulting ML\\_FFN has to be copied to ML\\_FF and the fast code will be automatically run in production mode runs by setting ML\\_MODE. The speedup of the fast method compared to the regular method is increasing with increasing number of local reference configurations. It should be noted that in the fast version no Bayesian error estimation is available.  Since the calculation time of the fast version is of the same order of magnitude as the timing for the output of the molecular\\-dynamics results, we advise decreasing the output frequency for molecular dynamics by the tag ML\\_OUTBLOCK. Additionally, the calculation and output of the pair\\-correlation function can be suppressed by `ML_OUTPUT_MODE = 0` as default.  | **Deprecated:** If `ML_LFAST = .TRUE.` is explicitely used without the ML\\_MODE tag then it can only be used with `ML_ISTART = 4` and `ML_IALGO_LINREG > 1`. || --- |"}
{"file_name": "LNONCOLLINEAR.md", "content": "LNONCOLLINEAR= .True. \\| .False.n| Default: **LNONCOLLINEAR** | \\= .False. |  || --- | --- | --- ||  | \\= .True. | if spin\\-orbit coupling is included (LSORBIT\\=.True.) | Description: Switch on noncollinear magnetic calculations.  --- For noncollinear magnetic calculations, set LNONCOLLINEAR \\= True in the INCAR file and use the `vasp_ncl` executable. The electronic minimization treats the full 2x2 spin density[\\[1]](#cite_note-hobbs:prb:00-1)  n  \u03c3  \u03c3 \u2032  (  r  ) \\=  \u2211  n \\= 1  N  \u03c8  n \u03c3  (  r  )  \u03c8  n  \u03c3 \u2032  \u2217  (  r  ) , {\\\\displaystyle n\\_{\\\\sigma \\\\sigma '}(\\\\mathbf {r} )\\=\\\\sum \\_{n\\=1}^{N}\\\\psi \\_{n\\\\sigma }(\\\\mathbf {r} )\\\\psi \\_{n\\\\sigma '}^{\\*}(\\\\mathbf {r} ),} which is written to the CHGCAR file. In spinor space, the part of the spin density proportional to the 2x2 unit matrix corresponds to the charge density, and the part proportional to the vector of Pauli matrices is the magnetization density.This enables the consideration of noncollinear magnetic structures within spin\\-density\\-functional theory. MAGMOM sets the initial magnetic moments. Write the final magnetic moments by setting LORBIT.  It is possible to **restart a noncollinear calculation** from a previous nonmagnetic calculation (ISPIN\\=1 and LNONCOLLINEAR\\=F) or spin\\-polarized calculation (ISPIN\\=2\\) by reading WAVECAR or CHGCAR files. The magnetization of the spin\\-polarized calculation is interpreted to point along SAXIS (default: Cartesian direction   z ^ {\\\\displaystyle {\\\\hat {z}}} ). It is not possible to rotate the magnetic moment locally on selected atoms when restarting with a magnetization density. The magnetic configuration can globally be rotated with respect to the lattice by restarting with a different SAXIS. In practice, we recommend performing noncollinear calculations in two steps: * First, calculate the nonmagnetic ground state and generate a WAVECAR and a CHGCAR file.* Second, read the WAVECAR and CHGCAR file, and supply initial magnetic moments using the MAGMOM tag. We recommend setting GGA\\_COMPAT \\= False and LASPH\\= True for noncollinear calculations since this improves the numerical precision of calculations using the generalized\\-gradient approximation (GGA). Consider setting AMIX\\_MAG and BMIX\\_MAG for better convergence when using density mixing. The I\\_CONSTRAINED\\_M tag can constrain the on\\-site magnetic moments. Supported as of VASP.4\\.5\\."}
{"file_name": "LDISENTANGLED.md", "content": "LDISENTANGLED= \\[logical]   Default: **LDISENTANGLED** \\= .FALSE.nDescription: Selects the disentangled cRPA method.   --- Selects the cRPA method of Miyake, Aryasetiawan, and Imada[\\[1]](#cite_note-miyake:prb:80-1). Following screening is subtracted from the full RPA polarizability:  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \\=  1  N  k  \u2211  k  \u2211  n  n \u2032  \u2208  T  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5 \\~  n  k  \u2212  \u03f5 \\~  n \u2032  k \u2212 q  \u2212 i \u03c9  \u27e8  u \\~  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u \\~  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u \\~  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u \\~  n  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\={\\\\frac {1}{N\\_{k}}}\\\\sum \\_{\\\\bf {k}}\\\\sum \\_{nn'\\\\in {\\\\cal {T}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{{\\\\tilde {\\\\epsilon }}\\_{n{\\\\bf {k}}}\\-{\\\\tilde {\\\\epsilon }}\\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}\\\\langle {\\\\tilde {u}}\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|{\\\\tilde {u}}\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle {\\\\tilde {u}}\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|{\\\\tilde {u}}\\_{n{\\\\bf {k}}}^{\\\\sigma }\\\\rangle }  ,where   \u03f5 \\~  n  k  \u03c3 {\\\\displaystyle {\\\\tilde {\\\\epsilon }}\\_{n{\\\\bf {k}}}^{\\\\sigma }}  is the disentangled band structure."}
{"file_name": "Files.md", "content": "All VASP input files and output files. Subcategories------------- This category has the following 3 subcategories, out of 3 total. ### H * HDF5 support### I * Input files### O * Output files Pages in category \"Files\"------------------------- The following 54 pages are in this category, out of 54 total. ### B * BSEFATBAND### C * CHG* CHGCAR* CONTCAR### D * DOSCAR* DYNMATFULL### E * EIGENVAL* ELFCAR### H * HILLSPOT### I * IBZKPT* ICONST* INCAR* Input and Output \\- a short Intro### K * KPOINTS* KPOINTS OPT* KPOINTS WAN### L * LOCPOT* LOCPROJ### M * ML AB* ML ABN* ML EATOM* ML FF* ML FFN* ML HEAT* ML HIS* ML LOGFILE* ML REG### O * OSZICAR* OUTCAR### P * PARCHG* PCDAT* PENALTYPOT* POSCAR* POSCAR.prim* POT* POTCAR* Construction:Potcar.h5* PRJCAR* PROCAR* PROCAR OPT* PROJCAR* PROOUT### Q * QPOINTS### R * REPORT### S * STOPCAR### T * TMPCAR### V * Vaspin.h5* Vaspout.h5* Vaspwave.h5### W * WAVECAR* WAVEDER* WFULLxxxx.tmp* Wxxxx.tmp### X * XDATCAR"}
{"file_name": "MD.md", "content": "To get an idea about what basically molecular dynamics is and what the main contents are we refer the reader to"}
{"file_name": "Electrostatic_corrections.md", "content": "For charged cells or for calculations of molecules and surfaces with a large dipole moment, the energy converges very slowly with respect to the size   L {\\\\displaystyle L}  of the supercell. Using methods discussed by Makov *et al.*[\\[1]](#cite_note-Makov95-1) and Neugebauer *et al.*[\\[2]](#cite_note-Neugebauer92-2), VASP can correct for the leading errors (in many details, we have taken a more general approach, though).  Suggested combination of tags for electrostatic corrections----------------------------------------------------------- In cases where the system has no net charge and no net dipole moment, no specific tags need to be set and this section can be skipped. ### Bulk If the system has a net dipole or net charge, please follow the recommendations of this wiki page. ### Surfaces If the system has a net dipole moment, a combination of IDIPOL\\=1,2,3 and LDIPOL tags may be used. The former corrects the energies, while the latter corrects the potential and forces. Optionally, DIPOL may be set. The following options may be used to improve convergence for this case. 1\\. Use any of these tags only after pre\\-converging the orbitals without the LDIPOL tag 2\\. The center of charge should be set in the INCAR file (DIPOL\\= center of mass)  3\\. Ensure that the cell is sufficiently large to determine the dipole moment with sufficient accuracy (see DIPOL). If the cell is too small, the charge might slash through the vacuum, causing very slow convergence. Often convergence improves with the size of the supercell. | **Warning:** Surface calculations with a net charge result in total energies that do not converge. Relative energies may still be useful. || --- | ### Wires Not implemented. ### Molecules If the system has a net dipole moment, use the LDIPOL tag. The former corrects the energies, while the latter corrects the potential and forces. Optionally, DIPOL may be set. Current limitations------------------- For the current implementation, there are several restrictions; please read carefully: * Charged systems: Quadrupole corrections are only correct for cubic supercells (this means that the calculated 1/*L*3 corrections are wrong for charged supercells if the supercell is non\\-cubic). In addition, we have found empirically that for charged systems with excess electrons (NELECT\\>NELECTneutral) more reliable results can be obtained if the energy after correction of the linear error (1/*L*) is plotted against 1/*L*3 to extrapolate results manually for *L*\u2192\u221e. This is due to the uncertainties in extracting the quadrupole moment of systems with excess electrons.* Potential corrections are only possible for orthorhombic cells (at least the direction in which the potential is corrected must be orthogonal to the other two directions). Step\\-by\\-step instructions--------------------------- ### Using the dipole correction for slab calculations In this section, we discuss step\\-by\\-step instructions to use the dipole corrections for slab calculations.  **Step 1:** Create a system which has enough vacuum on either side of the surface normal. An example for such a structure is shown below, for an fcc\\-Aluminium with a carbon adsorbed on one of its surface terminations.   ```Al3C1.0000000000000000   2.8637824638055176    0.0000000000000000    0.0000000000000000   1.4318912319027588    2.4801083645679673    0.0000000000000000   0.0000000000000000    0.0000000000000000   20.0000000000000000Al C 3 1Direct   0.8333333333333333    0.5000000000000000    0.3380865704891008   0.1666666666666666    0.8333333333333334    0.4550000000000000   0.4999999999999999    0.1666666666666667    0.5719134295108992   0.4999999999999999    0.1666666666666667    0.6619134295108993  ``` Note that the system has plenty of vacuum on either side. This empty space is important for the potential corrections needed for the LDIPOL tag. **Step 2:** Switch on the dipole corrections to the energy, potential and forces. Optionally set the DIPOL  ```LDIPOL    = TIDIPOL    = 3DIPOL     = 0.5 0.5 0.5  ``` **Step 3 (Optional):** View the dipole moment for the system using the following bash command,  ```grep dipolmoment OUTCAR | tail -1  ``` In this example, we get the following output:  ``` dipolmoment           0.000000      0.000000      0.128389 electrons x Angstroem  ``` which refers to the dipole moment along the three axes. Consistent with the POSCAR used in this example, only the last axis has a non\\-zero dipole moment. Related Tags and Sections------------------------- NELECT,EPSILON,DIPOL,IDIPOL,LDIPOL,LMONO,EFIELD Examples that use this tag"}
{"file_name": "TI_LAMBDA.md", "content": "TI\\_LAMBDA= real   Default: **TI\\_LAMBDA** \\= 0\\.0nDescription: TILAMBDA\") defines the coupling parameter   \u03bb {\\\\displaystyle \\\\lambda }  used in Thermodynamic integration with harmonic reference\"). The value of   \u03bb {\\\\displaystyle \\\\lambda }  must be from the inverval   \u27e8 0 , 1 \u27e9 {\\\\displaystyle \\\\langle 0,1\\\\rangle }  ."}
{"file_name": "NGZ.md", "content": "NGZ= \\[integer]   Default: **NGZ** \\= set in accordance with PREC and ENCUTnDescription: NGZ sets the number of grid points in the FFT grid along the third lattice vector.  --- By default NGZ is set in accordance with the requested \"precision\" mode PREC and the plane wave kinetic energy cutoff ENCUT: | PREC | NGZ || --- | --- || Normal | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Single (VASP.5\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Single (VASP.6\\) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || SingleN (VASP.6\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Accurate | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Low | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || Medium | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} || High | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | where  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT. Alternatively, NGZ can be set to a specific value in the INCAR file."}
{"file_name": "LSCK.md", "content": "LSCK= \\[logical]   Default: **LSCK** \\= .FALSE.\u00a0  | **Important:** Up to vasp.6\\.2, the default was LSCK\\= .TRUE. || --- |  --- Description: LSCK\\=.True. switches on the squeezed Coulomb kernel. If LSCK is set to .TRUE., the squeezed Coulomb kernel is used instead of the cosine window [\\[1]](#cite_note-riemelmoser:jcp:2020-1):  v  G  \\= 4 \u03c0  e  2  (  G  m a x  \u2212  G  m i n  ) (  G  m a x  \u2212 G )  (  G  m i n  2  \u2212 G ( 2  G  m i n  \u2212  G  m a x  )  )  2  for  E N C U T G W S O F T  \\=  \u210f  2  G  m i n  2  2  m  e  \\<  \u210f  2  G  2  2  m  e  \\<  \u210f  2  G  m a x  2  2  m  e  \\=  E N C U T G W {\\\\displaystyle v\\_{G}\\=4\\\\pi e^{2}{\\\\frac {(G\\_{max}\\-G\\_{min})(G\\_{max}\\-G)}{(G\\_{min}^{2}\\-G(2G\\_{min}\\-G\\_{max}))^{2}}}\\\\qquad {\\\\mbox{for}}\\\\quad \\\\mathrm {ENCUTGWSOFT} \\={\\\\frac {\\\\hbar ^{2}G\\_{min}^{2}}{2m\\_{e}}}\\<{\\\\frac {\\\\hbar ^{2}G^{2}}{2m\\_{e}}}\\<{\\\\frac {\\\\hbar ^{2}G\\_{max}^{2}}{2m\\_{e}}}\\=\\\\mathrm {ENCUTGW} } This kernel 'squeezes' the contributions from large wave vectors   G \\>  G  m a x {\\\\displaystyle G\\>G\\_{max}}  into the window given by ENCUTGWSOFT. Effectively, this extrapolates the random\\-phase\\-approximation\u2013correlation energy to the ENCUTGW   \u2192 \u221e {\\\\displaystyle \\\\to \\\\infty }  limit, assuming that the basis\\-set\\-incompleteness error falls off as   1  / {\\\\displaystyle 1/} ENCUTGW  3  /  2 {\\\\displaystyle ^{3/2}}  ."}
{"file_name": "Fcc_Ni_DOS.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Calculation of the DOS in fcc Ni. Incar----- ### POSCAR  ```fcc: 3.53  0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0  ```   ### INCAR  ``` SYSTEM = fcc Ni ISTART = 0\u00a0; ICHARG = 2 ENCUT  = 270 ISMEAR = -5  LORBIT = 11  ISPIN  = 2 MAGMOM = 1  ``` ### KPOINTS  ```k-points 0Monkhorst Pack 11 11 11 0  0  0  ``` Calculation----------- * The bash\\-script plotdos invokes *awk* and *gnuplot* to get the DOS from the vasprun.xml\") file and plot it.  ```awk 'BEGIN{i=1} /dos>/,\\                /\\/dos>/ \\                 {a[i]=$2\u00a0; b[i]=$3\u00a0; i=i+1} \\     END{for (j=12;j<i-5;j++) print a[j],b[j]}' vasprun.xml > dos.dat ef=`awk '/efermi/ {print $3}' vasprun.xml` cat >plotfile<<!# set term postscript enhanced eps colour lw 2 \"Helvetica\" 20# set output \"optics.eps\"plot \"dos.dat\" using (\\$1-$ef):(\\$2) w lp ! gnuplot -persist plotfile rm dos.dat plotfile  ``` Download--------  2\\_8\\_fccNi\\_dos.tgz  ---"}
{"file_name": "H2O_molecular_dynamics.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Molecular dynamics calculation for a   H  2  O {\\\\displaystyle \\\\mathrm {H} \\_{2}\\\\mathrm {O} }  molecule. Input----- ### POSCAR  ```H2O _20.52918  \u00a0! scaling parameter 12 0 0 0 12 0 0 0 12 1 2selectcart     0.00     0.00     0.00 T T F     1.10    -1.43     0.00 T T F     1.10     1.43     0.00 T T F  ``` To save time the box size is reduced to 12 a.u. ### INCAR  ```PREC = Normal   \u00a0! standard precision ENMAX = 400     \u00a0! cutoff should be set manuallyISMEAR = 0\u00a0; SIGMA = 0.1ISYM = 0        \u00a0! strongly recommended for MDIBRION = 0      \u00a0! molecular dynamicsNSW = 100       \u00a0! 100 stepsPOTIM = 1.0     \u00a0! timestep 1 fsSMASS = -3      \u00a0! Nose Hoover thermostatTEBEG =  2000\u00a0; TEEND = 2000\u00a0! temperature  ```   ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- * An example OSZICAR file (with 1000 steps and a step size of 0\\.5 fs) looks like this:  ```1 T=  2134. E= -.13655511E+02 F= -.14207209E+02 E0=.. EK= 0.55170E+00 SP= 0.00E+00 SK= 0.00E+002 T=  1971. E= -.13643254E+02 F= -.14152912E+02 E0=.. EK= 0.50966E+00 SP= 0.00E+00 SK= 0.00E+003 T=  1336. E= -.13629241E+02 Fd, which just encloses the cutoff sphere corresponding to the plane wave cutoff, is used. This accelerates the calculations by roughly a factor two to three, but causes slight changes in the tot= -.13974630E+02 E0=.. EK= 0.34539E+00 SP= 0.00E+00 SK= 0.00E+004 T=  1011. E= -.13624149E+02 F= -.13885486E+02 E0=.. EK= 0.26134E+00 SP= 0.00E+00 SK= 0.00E+005 T=  1307. E= -.13629772E+02 F= -.13967549E+02 E0=.. EK= 0.33778E+00 SP= 0.00E+00 SK= 0.00E+00  ``` [](File_Fig_H2O_1.html) * The pair correlation function can be visualized using e.g. the following script: * plot\\_PCDAT  ```awk <PCDAT >PCDAT.dat 'NR==8 { pcskal=$1}NR==9 { pcfein=$1}NR>=13 { line=line+1 if (line==257)  {    print \" \"    line=0 } else    print (line-0.5)*pcfein/pcskal,$1 } 'cat >plotfile<<!# set term postscript enhanced colour lw 2 \"Helvetica\" 20# set output \"pair_correlation.eps\"set title \"pair-correlation of H2O at 2000 K\"set xlabel \"r [Angstrom]\"set ylabel \"g(r)\"plot [0:15] \"PCDAT.dat\"  w lines !gnuplot -persist plotfile  ``` Download--------  H2Omd.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "LSPIN_VDW.md", "content": "LSPIN\\_VDW= \\[logical]   Default: **LSPIN\\_VDW** \\= .FALSE.nDescription: LSPIN\\_VDW\\=.TRUE. switches on the use of the spin\\-polarized formulation[\\[1]](#cite_note-thonhauser:prl:2015-1) for the nonlocal part of a van der Waals functional (available as of VASP.6\\.4\\.0\\).  --- | **Mind:** LSPIN\\_VDW\\=.TRUE. is possible only for van der Waals functionals that consist of a GGA for the semilocal part and the kernel type of Dion *et al.*[\\[2]](#cite_note-dion:prl:2004-2) (IVDW\\_NL\\=1\\) for the nonlocal part. || --- |"}
{"file_name": "PARCHG.md", "content": "PARCHG is an output file created when partial charge densities are calculated by setting LPARD \\= .TRUE..The file has the same structure as the CHG file, containing the structure followed by the charge density on the fine FFT grid, but missing the augmentation occupancies that are written to CHGCAR. The units are also equivalent to CHG and CHGCAR. The partial density written to PARCHG is part of the valence electron density that was converged selfconsistently in a previous run. The bands and **k** points that contribute to the partial charges are selected by the IBAND, NBMOD, EINT and KPUSE tags, allowing for fine control of the contributions to the partial charge density. PARCHG.nb.nk files------------------ If LSEPB and/or LSEPK are set to .TRUE. variants of the PARCHG file are written, separating the contributing bands and **k** points respectively. The units and format of the files stay the same. * If `LSEPB = .TRUE.`, **PARCHG.nb.ALLK** files are written, where nb is an index over all bands contributing to the partial charge density. * If `LSEPK = .TRUE.`, **PARCHG.ALLB.nk** files are created, where nk runs over all **k** points in KPUSE or all **k** points if KPUSE is not set. * For `LSEPB = .TRUE.` and `LSEPK = .TRUE.`, all combinations are written to **PARCHG.nb.nk** files. Format------ The PARCHG consists of the following blocks: * Structure in POSCAR format* FFT\\-grid dimensions NGXF, NGYF, NGZF* Partial charge density times FFT\\-grid volume is written with multiple real numbers per line until all NGXF\\*NGYF\\*NGZF values of the block are written. The real\\-space mesh (NX,NY,NZ) is uniform and is spanned by the lattice vectors   a \u2192  ,  b \u2192  ,  c \u2192 {\\\\displaystyle {\\\\vec {a}},{\\\\vec {b}},{\\\\vec {c}}}  defined in the structure block. The coordinates of the mesh points can be restored via  (  N  x  ,  N  y  ,  N  z  )  \\= ^  N  x  \u2212 1  N  G X F  a  \\+  N  y  \u2212 1  N  G Y F  b  \\+  N  z  \u2212 1  N  G Z F  c {\\\\displaystyle (N\\_{x},N\\_{y},N\\_{z}){\\\\hat {\\=}}{\\\\frac {N\\_{x}\\-1}{N\\_{GXF}}}\\\\mathbf {a} \\+{\\\\frac {N\\_{y}\\-1}{N\\_{GYF}}}\\\\mathbf {b} \\+{\\\\frac {N\\_{z}\\-1}{N\\_{GZF}}}\\\\mathbf {c} }  .The dimensions can be increased by increasing the cutoff energy (ENCUT) or explicitly by setting the fine FFT\\-grid dimensions (NGXF, NGYF, NGZF). To arrange the data on the real\\-space grid in the unit cell, mind that the data runs fastest over NX and slowest over NZ. To be more explicit, the density is written using the following command in Fortran  `WRITE(IU,FORM) (((C(NX,NY,NZ),NX=1,NGXF),NY=1,NGYF),NZ=1,NGZF)` . | **Important:** Remember that the values must be divided by the FFT\\-grid volume and the cell volume to obtain the partial charge density     n ( r )   {\\\\displaystyle n(r)}   in units     1  /     \u00c5    3     {\\\\displaystyle 1/\\\\mathrm {\\\\AA} ^{3}}   ^{3}}. || --- | Hence,  n ( r ) \\= d a t a ( r )  /  (  V  g r i d  \u2217  V  c e l l  ) , {\\\\displaystyle n(r)\\=data(r)/(V\\_{grid}\\*V\\_{cell}),}  V  g r i d  \\=  N  G X F  \u2217  N  G Y F  \u2217  N  G Z F  , {\\\\displaystyle V\\_{grid}\\=N\\_{GXF}\\*N\\_{GYF}\\*N\\_{GZF},}  V  c e l l  \\=  \\|  a  \u22c5 (  b  \u00d7  c  )  \\| {\\\\displaystyle V\\_{cell}\\=\\|\\\\mathbf {a} \\\\cdot (\\\\mathbf {b} \\\\times \\\\mathbf {c} )\\|}  ,where   n ( r ) {\\\\displaystyle n(r)}  is the partial charge density in units 1/\u00c5  3 {\\\\displaystyle ^{3}}  . ### Spin\\-polarized calculation In spin\\-polarized calculations, two data sets are stored in the PARCHG file.The first set contains the total partial density (spin up \\+ spin down), and the second is the magnetization density (spin up \\- spin down). Each block is separated by a blank line and a line containing the fine FFT grid dimensions NGXF NGYF NGZF. * Structure* FFT\\-grid dimensions* Partial charge density times FFT\\-grid volume (spin up \\+ spin down)* FFT\\-grid dimensions* Partial magnetization density (spin up \\- spin down)"}
{"file_name": "LTSSURF.md", "content": "LTSSURF= .TRUE. \\| .FALSE.   Default: **LTSSURF** \\= .FALSE.nDescription: if LTSSURF\u00a0 set to .TRUE., the standard parametrization of the Tkatchenko\\-Scheffler method is replaced by the one designed to enable reliable modeling of structure and stability for a broad class of organic molecules adsorbed on metal surfaces is activated[\\[1]](#cite_note-ruiz:prb:2016-1).  ---"}
{"file_name": "O_atom.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Performing a standard calculation for a single oxygen atom in a box. Getting to know the main input and output files of VASP.    Input----- ### POSCAR  ```O atom in a box 1.0         \u00a0! universal scaling parameters 8.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 8.0 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)1            \u00a0! number of atomscart         \u00a0! positions in cartesian coordinates 0 0 0  ``` We are using a POSCAR file with a single atom. Sufficiently large lattice parameters are selected so that no (significant) interactions between atoms in neighbouring cells is present. ### INCAR  ```SYSTEM = O atom in a boxISMEAR = 0 \u00a0! Gaussian smearing  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` For atoms or molecules a single k point is sufficient.When more k points are used only the interaction between atoms (which should be zero) is described more accurately. Calculation----------- ### stdout  ```running on    8 total coresdistrk:  each k-point on    8 cores,    1 groupsdistr:  one band on    1 cores,    8 groupsusing from now: INCAR     vasp.5.4.1 05Feb16 (build Aug 22 2016 16:46:23) complex                        POSCAR found\u00a0:  1 types and       1 ionsscaLAPACK will be usedLDA part: xc-table for Pade appr. of PerdewPOSCAR, INCAR and KPOINTS ok, starting setupWARNING: small aliasing (wrap around) errors must be expectedFFT: planning ...WAVECAR not readentering main loopN       E                     dE             d eps       ncg     rms          rms(c)DAV:   1     0.384469664751E+02    0.38447E+02   -0.96726E+02    16   0.293E+02DAV:   2     0.345965628955E+01   -0.34987E+02   -0.34942E+02    32   0.450E+01DAV:   3    -0.244485866931E+00   -0.37041E+01   -0.34307E+01    16   0.308E+01DAV:   4    -0.312557021227E+00   -0.68071E-01   -0.66914E-01    16   0.508E+00DAV:   5    -0.313520305300E+00   -0.96328E-03   -0.96311E-03    32   0.506E-01    0.286E-01DAV:   6    -0.314540466589E+00   -0.10202E-02   -0.17853E-03    16   0.332E-01    0.142E-01DAV:   7    -0.314637222361E+00   -0.96756E-04   -0.22710E-04    16   0.134E-011 F= -.31463722E+00 E0= -.16037490E+00  d E =-.308525E+00writing wavefunctions  ``` The example output (stdout) for the O atom was obtained using VASP version 5\\.4\\.1\\. The initial charge corresponds to the charge of isolated overlapping atoms (POTCAR file). For the first 4 steps the charge remains fixed, then the charge is updated (*rms(c)* column) Short explanation of the symbols in the OSZICAR and stdout file: | N | iteration count || --- | --- || E | total energy || dE | change of total energy || d eps | change of the eigenvalues (fixed potential) || ncg | number of optimisation steps      H  \u03c8   {\\\\displaystyle \\\\mathrm {H} \\\\psi }  {\\mathrm  {H}}\\psi || rms | total residual vector      \u2211  n k    w  k    f  n k   (  H  \u2212  \u03f5  n k   )  \u03c8  n k     {\\\\displaystyle \\\\sum \\_{nk}w\\_{k}f\\_{nk}(\\\\mathrm {H} \\-\\\\epsilon \\_{nk})\\\\psi \\_{nk}}  \\sum _{{nk}}w_{{k}}f_{{nk}}({\\mathrm  {H}}-\\epsilon _{{nk}})\\psi _{{nk}} || rms(c) | charge density residual vector | ### OUTCAR The individual parts of the OUTCAR file are separated by lines.  ```----------------------------------------------------------  ``` The OUTCAR file is divided into the following parts: * Reading INCAR, POTCAR, POSCAR * Nearest neighbor distances and analysis of symmetry * Verbose job information * Information on lattice, k points and positions * Information on the basis set (number of plane waves) * Non\\-local pseudo potential information * Information for each electronic step (one line in OSZICAR) * Timing and energy information  ```   POTLOK:  cpu time    0.0878: real time    0.0877   SETDIJ:  cpu time    0.0015: real time    0.0014    EDDAV:  cpu time    0.0267: real time    0.0434      DOS:  cpu time    0.0001: real time    0.0001   --------------------------------------------     LOOP:  cpu time    0.1165: real time    0.1346 eigenvalue-minimisations\u00a0:    16total energy-change (2. order)\u00a0: 0.3844697E+02  (-0.9672571E+02)number of electron       6.0000000 magnetizationaugmentation part        6.0000000 magnetization Free energy of the ion-electron system (eV)       --------------------------------------------------- alpha Z        PSCENC =         0.27135287 Ewald energy   TEWEN  =       -91.92708002 -Hartree energ DENC   =      -281.84385691 -exchange      EXHF   =         0.00000000 -V(xc)+E(xc)   XCENC  =        26.11948841 PAW double counting   =       245.99840262     -247.84808825 entropy T*S    EENTRO =        -0.08636665 eigenvalues    EBANDS =       -44.50008162 atomic energy  EATOM  =       432.26319604 Solvation  Ediel_sol  =         0.00000000 --------------------------------------------------- free energy    TOTEN  =        38.44696648 eV  energy without entropy =       38.53333313  energy(sigma->0) =       38.49014980  ``` * Information on the Eigenvalues  ```E-fermi\u00a0:  -8.8431     XC(G=0):  -0.8043     alpha+bet\u00a0: -0.1463k-point     1\u00a0:       0.0000    0.0000    0.0000band No.  band energies     occupation1     -23.8439      2.000002      -8.9040      1.333333      -8.9040      1.333334      -8.9040      1.333335      -0.4676      0.000006       1.8633      0.000007       1.8633      0.000008       1.8633      0.00000  ``` * Information on stress tensor  ```The O atom (Example: Oatom)FORCE on cell =-STRESS in cart. coord.  units (eV):Direction    XX          YY          ZZ          XY          YZ          ZX--------------------------------------------------------------------------------------Alpha Z     0.27135     0.27135     0.27135Ewald     -30.64236   -30.64236   -30.64236     0.00000     0.00000     0.00000Hartree    93.90244    93.90244    93.90244    -0.00000    -0.00000    -0.00000E(xc)     -27.93035   -27.93035   -27.93035    -0.00000    -0.00000    -0.00000Local    -147.86211  -147.86211  -147.86211     0.00000     0.00000     0.00000n-local   -20.54942   -20.54942   -20.54942    -0.00000    -0.00000    -0.00000augment     5.55366     5.55366     5.55366     0.00000    -0.00000     0.00000Kinetic   126.50998   126.50998   126.50997    -0.00000     0.00000    -0.00000Fock        0.00000     0.00000     0.00000     0.00000     0.00000     0.00000-------------------------------------------------------------------------------------Total      -0.74681    -0.74681    -0.74681     0.00000    -0.00000    -0.00000in kB      -2.33695    -2.33695    -2.33695     0.00000    -0.00000    -0.00000external pressure =       -2.34 kB  Pullay stress =        0.00 kB  ``` * Information on the energy  ```FREE ENERGIE OF THE ION-ELECTRON SYSTEM (eV)---------------------------------------------------free  energy   TOTEN  =        -0.31463722 eVenergy  without entropy=       -0.00611258  energy(sigma->0) =       -0.16037490  ```   The relevant energy for molecules and atoms is energy without entropy.  ```energy  without entropy=     -0.00611258  energy(sigma->0) =     -0.16037490  ``` Three degenerate p orbitals are occupied by 2/3 electrons causing an unphysical electronic entropy  ```entropy T*S    EENTRO =      -0.30852464  ``` A tiny value of SIGMA\\=0\\.01 would reduce the entropy but might slow convergence (default is SIGMA\\=0\\.2\\).SIGMA controls the electronic temperature, which is not a very meaningful quantity for molecules and atoms. The total energy is found to be essentially zero. VASP subtracts from any calculated energy the energy of the atom in the configuration for which the pseudo potential was generated. All pseudo potentials were generated using non spin\\-polarized reference atoms. ### Restart of the calculation When VASP is restarted the WAVECAR file is read and the run is continued from the previous wave functions (converging rapidly).  ```running on    8 total coresdistrk:  each k-point on    8 cores,    1 groupsdistr:  one band on    1 cores,    8 groupsusing from now: INCARvasp.5.4.1 05Feb16 (build Aug 22 2016 16:46:23) complex POSCAR found\u00a0:  1 types and       1 ionsscaLAPACK will be usedLDA part: xc-table for Pade appr. of Perdewfound WAVECAR, reading the headerPOSCAR, INCAR and KPOINTS ok, starting setupWARNING: small aliasing (wrap around) errors must be expectedFFT: planning ...reading WAVECARthe WAVECAR file was read successfullyinitial charge from wavefunctionentering main loop      N       E                     dE             d eps       ncg     rms          rms(c)DAV:   1    -0.314680766875E+00   -0.31468E+00   -0.83090E-05    16   0.564E-02    0.107E-02DAV:   2    -0.314677281013E+00    0.34859E-05   -0.10030E-05    16   0.198E-02  1 F= -.31467728E+00 E0= -.16041496E+00 d E =-.308525E+00writing wavefunctions  ``` Download-------- Oatom.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorialsBack to the main page."}
{"file_name": "Energy_cut_off_and_FFT_mesh.md", "content": "In general, the energy\\-cut\\-off must be chosen according to the pseudopotential.All POTCAR files contain a default energy cut off.Use this energy cut\\-off, but please alsoperform some bulk calculations with different energy cut\\-offto find out whether the recommended setting is correct.The cut\\-off which is specified in the POTCAR filewill usually result in an error in the cohesive energywhich is less than 10 meV. You should be aware of the difference between absolute andrelative convergence. The absolute convergencewith respect to the energy cut off ENCUT is the convergencespeed of the **total energy**,whereas relative convergence is the convergence speed of **energy differences**between different phases (e.g. energy of fcc minus energy of bcc structure).Energy differences converge much faster than the total energy.This is especially true if both situations are rather similar (e.g. hcp \\- fcc).In this case the error due to the finite cut\\-off is'transferable' from one situation to the other situation.If two configurations differ strongly from each other(different distribution of s p and d electrons, different hybridization)absolute convergence gets more and more critical. There are some rules of thumb, which you should check whenevermaking a calculation: For bulk materials the number of plane wavesper atom should be between 50\\-100\\. A smaller basis set mightresult in serious errors. A larger basis set is rarely necessary,and is a hint for a badly optimized pseudopotential.If a large vacuum is included the number of planewaves will be larger (i.e.   50 % {\\\\displaystyle 50\\\\%}  of your super cell vacuum   \u2192 {\\\\displaystyle \\\\to } number of plane waves increases by a factor of 2\\). More problematic than ENCUT is the choice of the FFT mesh, becausethis error is **not** easily transferable from one situation to the next.For an exact calculationthe FFT mesh must contain all wave vectors up to   2  G  c u t {\\\\displaystyle 2G\\_{\\\\rm {cut}}}  if  E  c u t  \\=  \u210f  2  2 m  G  c u t  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m}}G\\_{\\\\rm {cut}}^{2}}  ,  E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}}  being the used energy\\-cut\\-off.Increasing the FFT\\-mesh from this valuedoes not change the results, except for a possibly verysmall change due to the changed exchange\\-correlation potential.The reasons for this behavior are explained in Wrap\\-around errors. Nevertheless it is not always possible and necessary to use such a largeFFT mesh. In generalonly 'high quality' calculations (as defined in Technical errors) require a mesh which avoids all wrap around errors.For most calculations, and in particular for thesupplied pseudopotentials with the default cut off, it is sufficient to set NGX, NGY and NGZ to  3  /  4 {\\\\displaystyle 3/4}  of the required values (set PREC\\=*Medium* or PREC\\=Low in the INCARfile before running the *makeparam* utility or VASP.4\\.X).The values which strictly avoid any wrap\\-around errors are also writtento the OUTCAR file:  ``` WARNING: wrap around error must be expected          set NGX to  22   WARNING: wrap around error must be expected          set NGY to  22  WARNING: wrap around error must be expected          set NGZ to  22  ``` Just search for the string 'wrap'.As a rule of thumb the   3  /  4 {\\\\displaystyle 3/4}  will result in FFT mesh,which contain approximately 8x8x8\\=256 FFT points per atom (assumingthat there is no vacuum). One hint, that the FFT mesh is sufficient, is given by the lines  ``` soft charge-density along one line         0      1      2      3      4      5      6      7      8         x    32.0000 -.7711 1.9743  .0141  .3397 -.0569 -.0162 -.0006  .0000y    32.0000 6.7863  .0205  .2353  .1237 -.1729 -.0269 -.0006  .0000z    32.0000 -.7057 -.7680 -.0557  .1610 -.2262 -.0042 -.0069  .0000  ``` also written to the file OUTCAR (search for the string 'along'). These linescontain the charge density in reciprocal space at the positions  G  \\= 2 \u03c0  m  x  g  ( x )  ,  G  \\= 2 \u03c0  m  y  g  ( y )  ,  G  \\= 2 \u03c0  m  z  g  ( z )  . {\\\\displaystyle {\\\\mathbf {G}}\\=2\\\\pi m\\_{x}{\\\\mathbf {g}}^{(x)},\\\\quad {\\\\mathbf {G}}\\=2\\\\pi m\\_{y}{\\\\mathbf {g}}^{(y)},\\\\quad {\\\\mathbf {G}}\\=2\\\\pi m\\_{z}{\\\\mathbf {g}}^{(z)}.} The last number will always be 0 (it is set explicitly by VASP),but as a rule of thumb theprevious value divided by the total number of electrons should be smaller than   10  \u2212 4 {\\\\displaystyle 10^{\\-4}}  .To be more precise: Because of the wrap\\-around errors, certain partsof the charge density are wrapped to the other side of the grid,and the size of the 'wrapped' charge densitydivided by the number of electrons should be less than   10  \u2212 3  \u2212  10  \u2212 4 {\\\\displaystyle 10^{\\-3}\\-10^{\\-4}}  . Another important hint that the wrap around errors are toolarge is given by the forces. If there is a considerable drift inthe forces, increase the FFT mesh.Search for the string 'total drift' in the OUTCAR file, it is locatedbeneath the line *TOTAL\\-FORCE*:  ```    total drift:                -.00273      -.01048       .03856  ``` The drift should definitely not exceed the magnitude of the forces,in general it should be smaller than the size of theforces you are interested in (usually 0\\.1 eV/  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ). For the representation of the augmentation charges a secondmore accurate FFT mesh is used. Generally the time spent for the calculationon this mesh is relatively small, therefore there is no needto worry too much about the size of themesh, and relying on the defaults of the *makeparam* utilityis in most cases safe.In some rare cases like Cu, Fe  \\_ {\\\\displaystyle \\\\\\_}  pvwith extremely 'hard' augmentation charges,it might be necessary to increase NGXF in comparison to the defaultsetting. This can be done either by hand (setting NGXFin the param.inc file) or by giving avalue for ENAUG in the {{TAG\\|INCAR} file. As for the soft part of the charge density thetotal charge density (which is the sum of augmentation charges and soft part)is also written to the file OUTCAR:  ``` total charge-density along one line         0      1      2      3      4      5      6      7      8         x    32.0000 -.7711 1.9743  .0141  .3397 -.0569 -.0162 -.0006  .0000y    32.0000 6.7863  .0205  .2353  .1237 -.1729 -.0269 -.0006  .0000z    32.0000 -.7057 -.7680 -.0557  .1610 -.2262 -.0042 -.0069  .0000  ``` The same criterion which holds for the soft part should hold for thetotal charge density. If the second mesh is too small the forcesmight also be wrong (leading to a 'total drift' in the forces). **Mind**: The second mesh is only usedin conjunction with US\\-pseudopotentials.For normconserving pseudopotentials neither the charge densitynor the local potentials are set on the fine mesh.In this case set NG(X,Y,Z)F to NGX, Y, Z or simply to 1\\. Both settings resultin the same storage allocation. **Mind**: If very hard non\\-linear/partial core corrections areincluded the convergence of the exchange\\-correlation potentialwith respect to the FFT grid might cause problems. Allsupplied pseudopotentials have been tested in this respect and are safe. When to set ENCUT (and ENAUG) by hand------------------------------------- In most cases once can safely use the default values forENCUT and ENAUG, which are read from the POTCAR file.But there are some cases where this can results in small, easily avoidableinaccuracies. For instance, if you are interested in the energy difference betweenbulk phases with different compositions (i.e. Co \\- CoSi \\- Si).In this case the default ENCUT will be different for the calculationsof pure Co and pure Si, but it is preferable to use the samecut off for all calculations.In this case determine the maximal ENCUT and ENAUG from the POTCAR filesand use this value for all calculations. Another example is the calculation of adsorption energies of moleculeson surfaces. To minimize (for instance) non\\-transferable wrap errors oneshould calculatethe energy of an isolated molecule, of the surface only, and ofthe adsorbate/surface complex in the same super cell, using the same cut off.This usually requires to fix ENCUT and ENAUG by hand in the INCAR file.If one also wants to use real space optimization (LREAL\\=*On*), it is recommendedto use LREAL\\=*On* for all three calculations as well (the ROPT flagshould also be similar for all calculations).  ---"}
{"file_name": "ENINI.md", "content": "ENINI= \\[real]   Default: **ENINI** \\= ENCUTnDescription: ENINI controls the cutoff during the initial (steepest descent) phase for IALGO\\=48\\.  ---"}
{"file_name": "LMAXPAW.md", "content": "LMAXPAW= \\[integer]   Default: **LMAXPAW** \\= 2*l* max, where *l* max is the maximum angular quantum number of the PAW partial waves in the POTCAR file.nDescription: LMAXPAW sets the maximum *l* \\-quantum number for the evaluation of the one\\-center terms on the radial support grids in the PAW method.   --- Useful settings for LMAXPAW are for instance:  ```LMAXPAW= 0  ``` In this case, only spherical terms are evaluated on the radial grid. This does not mean that aspherical terms are totally neglected, because the compensation charges are always expanded up to 2*l* max on the plane wave grid.  ```LMAXPAW=-1   ``` For LMAXPAW\\=\\-1, no one\\-center correction terms are evaluated on the radial support grid, which effectively means that the behavior of US\\-PP's is recovered with PAW input datasets. Usually, this allows for somewhat faster calculations, and this switch might be of interest for relaxations and molecular dynamics runs. Energies should be evaluated with the default setting for LMAXPAW. For spinpolarized calculations, results using LMAXPAW\\=\\-1 might differ significantly from conventional PAW calculations, hence the use of LMAXPAW\\=\\-1 is not recommended for magnetic materials, spin\\-polarized molecules or atoms. Examples that use this tag  ---"}
{"file_name": "Optical_properties.md", "content": "Dielectric function------------------- When an external electric field   E {\\\\displaystyle \\\\mathbf {E} }  acts on a medium, both the electronic and ionic charges will react to the perturbing field. For dielectric materials, in a very simplistic approach, one can think that the bound charges will create dipoles inside the medium leading to an induced polarization,   P {\\\\displaystyle \\\\mathbf {P} } . The combined effects of both fields are expressed in the electric displacement field   D {\\\\displaystyle \\\\mathbf {D} } , given by  D  \\=  E  \\+ 4 \u03c0  P {\\\\displaystyle \\\\mathbf {D} \\=\\\\mathbf {E} \\+4\\\\pi \\\\mathbf {P} }  .If the external field is not strong enough to significantly change the properties of the dielectric medium, one can treat the induced polarization within the so\\-called linear response regime. Here, the information on how the dielectric reacts on the external field is given by the **dielectric function**:  \u03f5  \u03b1 \u03b2  \\=  \u03b4  \u03b1 \u03b2  \\+ 4 \u03c0  \u2202  P  i  \u2202  E  j {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }\\=\\\\delta \\_{\\\\alpha \\\\beta }\\+4\\\\pi {\\\\frac {\\\\partial P\\_{i}}{\\\\partial E\\_{j}}}}  ,which (assuming that the system has time\\-reversal symmetry) leads to   D  \u03b1  ( \u03c9 ) \\=  \u03f5  \u03b1 \u03b2  ( \u03c9 )  E  \u03b2  ( \u03c9 ) {\\\\displaystyle D\\_{\\\\alpha }(\\\\omega )\\=\\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )E\\_{\\\\beta }(\\\\omega )}  .Depending on the nature of the external field, there are different approaches for the calculation of   \u03f5 {\\\\displaystyle \\\\epsilon } . If   E {\\\\displaystyle \\\\mathbf {E} }  is static, then one can rely on perturbative methods based on finite differences or density functional perturbation theory (DFPT). However, if the perturbation is a time\\-dependent   E {\\\\displaystyle \\\\mathbf {E} } \\-field, (e.g., in measurements of the optical absorption, reflectance, magneto\\-optical Kerr effect (MOKE), etc.), the response will depend on the frequency of the external field. For these cases, one must employ methods based on time\\-dependent linear response, (e.g., Green\\-Kubo) or many\\-body perturbation theory. Below we present an overview of all possible cases where VASP employs either one of such methods for the calculation of   \u03f5 {\\\\displaystyle \\\\epsilon }  . ### Static response #### LEPSILON: density\\-functional\\-perturbation theory (DFPT) By setting LEPSILON\\=.True., VASP uses DFPT to compute the static ion\\-clamped dielectric matrix with or without local field effects (LRPA). Derivatives are evaluated using Sternheimer equations, avoiding the explicit computation of derivatives of the periodic part of the wave function. This method does not require the inclusion of empty states via NBANDS.At the end of the calculation, both the values of   \u03f5 {\\\\displaystyle \\\\epsilon }  including (LRPA\\=.True.) or excluding (LRPA\\=.False.) local\\-field effects are printed in the OUTCAR file. Perform a consistency check by comparing the values excluding local\\-field effects and static limit of   \u03f5 {\\\\displaystyle \\\\epsilon }  obtained with LOPTICS\\=.True., i.e.,   lim  \u03c9 \u2192 0  \u03f5 ( \u03c9 ) {\\\\displaystyle \\\\lim \\_{\\\\omega \\\\to 0}\\\\epsilon (\\\\omega )}  .#### LCALCEPS: finite differences approach With LCALCEPS\\=.True., the dielectric tensor is computed from the derivative of the polarization, using  \u03f5  i j  \u221e  \\=  \u03b4  i j  \\+  4 \u03c0  \u03f5  0  \u2202  P  i  \u2202  E  j  i , j \\= x , y , z  . {\\\\displaystyle \\\\epsilon \\_{ij}^{\\\\infty }\\=\\\\delta \\_{ij}\\+{\\\\frac {4\\\\pi }{\\\\epsilon \\_{0}}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}}\\\\qquad {i,j\\=x,y,z}.} However, here the derivative is evaluated explicitly by employing finite differences. The direction and intensity of the perturbing electric field have to be specified in the INCAR file using the EFIELD\\_PEAD tag. As with DFPT, at the end of the calculation, VASP will write the dielectric tensor in the OUTCAR file. Control over the inclusion of local\\-field effects is done with the variable LRPA.### Dynamical response: Green\\-Kubo and many\\-body perturbation theory #### LOPTICS: Green\\-Kubo formula LOPTICS allows for the evaluation of the frequency\\-dependent dielectric function once the ground state is computed. It uses the explicit expression to evaluate the imaginary part of   \u03f5 {\\\\displaystyle \\\\epsilon }  :  \u03f5  \u03b1 \u03b2  ( 2 )  ( \u03c9 )  \\=  4  \u03c0  2  e  2  \u03a9  l i m  q \u2192 0  1  q  2  \u2211  c , v ,  k  2  w  k  \u03b4 (  \u03f5  c  k  \u2212  \u03f5  v  k  \u2212 \u03c9 ) \u00d7 \u27e8  u  c  k  \\+  e  \u03b1  q  \\|  u  v  k  \u27e9 \u27e8  u  v  k  \\|  u  c  k  \\+  e  \u03b2  q  \u27e9 , {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{(2\\)}\\\\left(\\\\omega \\\\right)\\={\\\\frac {4\\\\pi ^{2}e^{2}}{\\\\Omega }}\\\\mathrm {lim} \\_{q\\\\rightarrow 0}{\\\\frac {1}{q^{2}}}\\\\sum \\_{c,v,\\\\mathbf {k} }2w\\_{\\\\mathbf {k} }\\\\delta (\\\\epsilon \\_{c\\\\mathbf {k} }\\-\\\\epsilon \\_{v\\\\mathbf {k} }\\-\\\\omega )\\\\times \\\\langle u\\_{c\\\\mathbf {k} \\+\\\\mathbf {e} \\_{\\\\alpha }q}\\|u\\_{v\\\\mathbf {k} }\\\\rangle \\\\langle u\\_{v\\\\mathbf {k} }\\|u\\_{c\\\\mathbf {k} \\+\\\\mathbf {e} \\_{\\\\beta }q}\\\\rangle ,} while the real part is evaluated using the Kramers\\-Kroing relation. At this level, there are no effects coming from local fields.This method requires two steps: First, obtain the electronic ground state. Secondly, increase the value of NBANDS in the INCAR file to include unoccupied states. Always check for convergence w.r.t. the number of unoccupied states.Furthermore, the INCAR should also include values for CSHIFT (the broadening applied to the Lorentzian function which replaces the   \u03b4 {\\\\displaystyle \\\\delta } \\-function), and NEDOS (the frequency grid for   \u03c9 {\\\\displaystyle \\\\omega }  ).#### ALGO \\= TDHF: Casida equation This option performs a time\\-dependent Hartree\\-Fock or time\\-dependent density\\-functional\\-theory (TDDFT) calculation. It follows the Casida equation and uses a Fourier transform of the time\\-evolving dipoles to compute   \u03f5 {\\\\displaystyle \\\\epsilon }  .The number of NBANDS controls how many bands are present in the time evolution. This can be fewer empty states compared to LOPTICS.The choice of time\\-dependent kernel is controlled by AEXX, HFSCREEN, and LFXC tags. For calculations using hybrid functionals, AEXX controls the fraction of exact exchange used in the exchange\\-correlation potential, while HFSCREEN specifies the range\\-separation parameter. For a pure TDDFT calculation, LFXC uses the local exchange\\-correlation kernel in the time\\-evolution equations.#### ALGO \\= TIMEEV: delta\\-pulse electric field Uses a delta\\-pulse electric field to probe all transitions and calculate the dielectric function by following the evolution in time of the dipole momenta. This algorithm is able to fully reproduce the absorption spectra from standard Bethe\\-Salpeter calculations by setting the correct time\\-dependent kernel with LHARTREE\\=.True. and LFXC\\=.True.The time step is controlled automatically by the CSHIFT and PREC. This means that the smaller the value of CSHIFT and the more accurate the level of precision chosen by the user, the higher the number of time steps that VASP will perform, and the higher the cost of the calculation.The number of valence and conduction bands involved in the time propagation is set by the NBANDSO and NBANDSV tags, respectively. Choose a small number of bands near the band gap to reproduce optical measurements.Finally, the maximum energy used in both the Fourier transform and in calculating the frequency\\-dependent dielectric function is set by OMEGAMAX, and the sampling of the frequency grid is controlled by NEDOS.#### ALGO \\= CHI: polarizability within RPA approximation Here, the frequency dielectric function is computed within the Random\\-Phase approximation. VASP will compute the polarizability   \u03c7 {\\\\displaystyle \\\\chi }  by setting ALGO\\=Chi in the INCAR file and then use  \u03f5  G  G  \u2032  \u2212 1  (  q  , \u03c9 ) \\=  \u03b4  G  G  \u2032  \\+ v (  q  \\+  G  )  \u03c7  G  G  \u2032  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} \\\\mathbf {G} '}^{\\-1}(\\\\mathbf {q} ,\\\\omega )\\=\\\\delta \\_{\\\\mathbf {G} \\\\mathbf {G} '}\\+v(\\\\mathbf {q} \\+\\\\mathbf {G} )\\\\chi \\_{\\\\mathbf {G} \\\\mathbf {G} '}(\\\\mathbf {q} ,\\\\omega )} to compute the dielectric function. Here,   v {\\\\displaystyle v}  is the bare Coulomb potential describing electron\\-electron interaction. This requires increasing NBANDS to include unoccupied states as generally the case for GW calculations.Two methods for computing the polarizability are available: For LSPECTRAL\\=.True., VASP will avoid direct computation of   \u03c7 {\\\\displaystyle \\\\chi }  and use a fast matrix\\-vector product. However, this can introduce spurious peaks at low frequencies for some values of CSHIFT and NOMEGA. The second method computes   \u03c7 {\\\\displaystyle \\\\chi }  directly and is activated by setting LSPECTRAL\\=.False.. However, it is much slower than the former method.#### ALGO \\= BSE: macroscopic dielectric function including excitons Setting ALGO\\=BSE computes the macroscopic dielectric function   \u03f5  M {\\\\displaystyle \\\\epsilon \\_{M}}  by solving the Bethe\\-Salpeter equations. The electron\\-hole pairs are treated as a new quasi\\-particle called exciton, and the dielectric function is built using the eigenvectors (  X  \u03bb  c v  k {\\\\displaystyle X\\_{\\\\lambda }^{cv\\\\mathbf {k} }} ) and eigenvalues (  \u03c9  \u03bb {\\\\displaystyle \\\\omega \\_{\\\\lambda }}  ):  \u03f5  M  (  q  , \u03c9 ) \\= 1 \\+ v (  q  )  \u2211  \u03bb  \u03bb \u2032  \u2211  c , v ,  k  \u2211  c \u2032  ,  v \u2032  ,  k  \u2032  \u27e8 c  k  \\|  e  i  q r  \\|  v  k  \u27e9  X  \u03bb  c v  k  \u27e8  c \u2032  k \u2032  \\|  e  \u2212 i  q r  \\|  v \u2032  k \u2032  \u27e9  X  \u03bb \u2032  c \u2032  v \u2032  k  \u2032  , \u2217  \u00d7  S  \u03bb ,  \u03bb \u2032  \u2212 1  (  1  \u03c9  \u03bb  \u2212 \u03c9 \u2212 i \u03b4  \\+  1  \u03c9  \u03bb  \\+ \u03c9 \\+ i \u03b4  )   . {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\=1\\+v(\\\\mathbf {q} )\\\\sum \\_{\\\\lambda \\\\lambda '}\\\\sum \\_{c,v,\\\\mathbf {k} }\\\\sum \\_{c',v',\\\\mathbf {k} '}\\\\langle c\\\\mathbf {k} \\|e^{i\\\\mathbf {qr} }\\|v\\\\mathbf {k} \\\\rangle X\\_{\\\\lambda }^{cv\\\\mathbf {k} }\\\\langle c'\\\\mathbf {k'} \\|e^{\\-i\\\\mathbf {qr} }\\|v'\\\\mathbf {k'} \\\\rangle X\\_{\\\\lambda '}^{c'v'\\\\mathbf {k} ',\\*}\\\\times S\\_{\\\\lambda ,\\\\lambda '}^{\\-1}\\\\left({\\\\frac {1}{\\\\omega \\_{\\\\lambda }\\-\\\\omega \\-i\\\\delta }}\\+{\\\\frac {1}{\\\\omega \\_{\\\\lambda }\\+\\\\omega \\+i\\\\delta }}\\\\right)\\~.} Here,   S  \u03bb  \u03bb \u2032 {\\\\displaystyle S\\_{\\\\lambda \\\\lambda '}}  is the overlap between exciton states of indices   \u03bb {\\\\displaystyle \\\\lambda }  and  \u03bb \u2032 {\\\\displaystyle \\\\lambda '}  (in general, the BSE Hamiltonian is not hermitian, so eigenstates associated to different eigenvalues are not necessarily orthogonal).The number of occupied and unoccupied states that are included in the BSE Hamiltonian is controlled by the NBANDSO and NBANDSV, respectively. Normally only a few bands above and below the band gap are required to converge the optical spectrum, and the memory requirements increase quickly with the number of bands. Thus, be careful in setting up these two tags.Regarding the comparison with optical experiments, (e.g., absorption, MOKE, reflectance),   q {\\\\displaystyle q}  is the photon momentum. Often, the   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  limit is considered. Furthermore, the coupling between the resonant and anti\\-resonant terms can be switched off, in what is called the Tamm\\-Dancoff approximation. This approximation can be activated with the variable ANTIRES set to 0\\. Setting this variable to 1 or 2 will include the coupling, but increase the computational cost.Level of approximation---------------------- ### Microscopic and macroscopic quantities It is important to distinguish between macroscopic quantities, measured over several repetitions of the unit cell, and microscopic quantities, which include fields that change rapidly in all regions of the unit cell. When measuring a property experimentally, it is the macroscopic version that will be represented in the experimental data. On the other hand, computationally, the microscopic quantities are more accessible. In other words, in order to compare experimental and computational results, the microscopic quantities, e.g., the dielectric function, must be averaged over several repetitions of the unit cell. It is possible to show that the macroscopic dielectric function,   \u03f5  M  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )}  is related to the microscopic one via  \u03f5  M  (  q  , \u03c9 ) \\=  1  \u03f5  G  \\= 0 ,  G  \u2032  \\= 0  \u2212 1  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\={\\\\frac {1}{\\\\epsilon \\_{\\\\mathbf {G} \\=0,\\\\mathbf {G} '\\=0}^{\\-1}(\\\\mathbf {q} ,\\\\omega )}}} where   \u03f5  G  \\= 0 ,  G  \u2032  \\= 0  \u2212 1  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} \\=0,\\\\mathbf {G} '\\=0}^{\\-1}(\\\\mathbf {q} ,\\\\omega )}  is the inverse dielectric function at   G  \\=  G  \u2032  \\= 0 {\\\\displaystyle \\\\mathbf {G} \\=\\\\mathbf {G} '\\=0}  . Note that this does not mean that   \u03f5  M  (  q  , \u03c9 ) \\=  \u03f5  G  \\= 0 ,  G  \u2032  \\= 0  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )\\=\\\\epsilon \\_{\\\\mathbf {G} \\=0,\\\\mathbf {G} '\\=0}(\\\\mathbf {q} ,\\\\omega )} ! The full matrix   \u03f5  G  ,  G  \u2032  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{\\\\mathbf {G} ,\\\\mathbf {G} '}(\\\\mathbf {q} ,\\\\omega )}  has to be inverted and it is the component at   G  \\=  G  \u2032  \\= 0 {\\\\displaystyle \\\\mathbf {G} \\=\\\\mathbf {G} '\\=0}  that is used to calculate   \u03f5  M  (  q  , \u03c9 ) {\\\\displaystyle \\\\epsilon \\_{M}(\\\\mathbf {q} ,\\\\omega )}  . ### Finite momentum dielectric function In the optical limit, the momentum of the incoming photon,   q {\\\\displaystyle \\\\mathbf {q} } , is almost zero, since the wavelength of the electric field is several times larger than the dimensions of the unit cell. Since the Coulomb potential diverges at very small momenta, the optical limit of the dielectric function must be obtained by taking with the limit of   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  instead of setting   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  .For instance, in the case of the independent particle approximation of full BSE, one yields  lim  q  \u2192 0  \u27e8 c  k  \\+  q  \\|  e  i  q  \u22c5  r  \\|  v  k  \u27e9  q  \u2248  lim  q  \u2192 0  \u27e8 c  k  \\+  q  \\|  1 \\+  i  q  \u22c5  r  \\|  v  k  \u27e9  q  \\=  q  ^  \u22c5 \u27e8 c  k  \\+  q  \\|  r  \\|  v  k  \u27e9 . {\\\\displaystyle \\\\lim \\_{\\\\mathbf {q} \\\\to 0}{\\\\frac {\\\\langle c\\\\mathbf {k} \\+\\\\mathbf {q} \\|e^{\\\\mathrm {i} \\\\mathbf {q} \\\\cdot \\\\mathbf {r} }\\|v\\\\mathbf {k} \\\\rangle }{q}}\\\\approx \\\\lim \\_{\\\\mathbf {q} \\\\to 0}{\\\\frac {\\\\langle c\\\\mathbf {k} \\+\\\\mathbf {q} \\|1\\+\\\\mathrm {i} \\\\mathbf {q} \\\\cdot \\\\mathbf {r} \\|v\\\\mathbf {k} \\\\rangle }{q}}\\={\\\\hat {\\\\mathbf {q} }}\\\\cdot \\\\langle c\\\\mathbf {k} \\+\\\\mathbf {q} \\|\\\\mathbf {r} \\|v\\\\mathbf {k} \\\\rangle .} VASP can also analyze the effects of finite momentum excitons. This is important, e.g., in the case of the optical absorption of bulk hexagonal BN. To calculate the absorption spectrum at finite momentum, set KPOINT\\_BSE to the index of the desired **q** point.  ### Local fields in the Hamiltonian Local fields, i.e., terms with finite   G {\\\\displaystyle \\\\mathbf {G} } , can be turned on or off in the Coulomb potential when evaluating the polarizability. VASP will distinguish the results in the OUTCAR file with:  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects)   ```  ```BORN EFFECTIVE CHARGES (including local field effects)   ```  ```PIEZOELECTRIC TENSOR (including local field effects)   ```  and  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (excluding local field effects)   ```  ```BORN EFFECTIVE CHARGES (excluding local field effects)   ```  ```PIEZOELECTRIC TENSOR (excluding local field effects)  ``` for both cases.  Another approximation can also be taken, where the contributions from the exchange\\-correlation kernel are neglected when evaluating the polarizability. This is equivalent to the so\\-called random\\-phase approximation (RPA) and can be activated by setting LRPA\\=.True. in the INCAR. ### Ion\\-clamped vs relaxed\\-ion/dressed dielectric function The dielectric function computed either in the static or dynamical response regimes does not consider the effects coming from changes of the ionic positions due to the incoming electric field. This can be corrected by computing the relaxed\\-ion (or dressed) dielectric function   \u03f5 \u00af {\\\\displaystyle {\\\\bar {\\\\epsilon }}} [\\[1]](#cite_note-wu:prb:2005-1)  \u03f5 \u00af  \u03b1 \u03b2  \\=  \u03f5  \u03b1 \u03b2  \\+  \u03a9  0  \u2212 1  Z  m \u03b1  (  \u03a6  \u2212 1  )  m n  Z  n \u03b2  , {\\\\displaystyle {\\\\bar {\\\\epsilon }}\\_{\\\\alpha \\\\beta }\\=\\\\epsilon \\_{\\\\alpha \\\\beta }\\+\\\\Omega \\_{0}^{\\-1}Z\\_{m\\\\alpha }(\\\\Phi ^{\\-1})\\_{mn}Z\\_{n\\\\beta },} where   \u03a9  0 {\\\\displaystyle \\\\Omega \\_{0}}  is the volume of the unit cell,   Z  n \u03b1 {\\\\displaystyle Z\\_{n\\\\alpha }}  is the Born effective charge, and   \u03a6  m n {\\\\displaystyle \\\\Phi \\_{mn}}  is the force constants matrix. ### Density\\-density versus current\\-current response functions The inclusion of an electromagnetic field in the Hamiltonian is subject to a gauge choice. For instance, a classical electric field can be described by either a scalar potential   \u03d5 {\\\\displaystyle \\\\phi }  or a longitudinal vector potential   A {\\\\displaystyle \\\\mathbf {A} }  in the incomplete Weyl gauge (  \u03d5 {\\\\displaystyle \\\\phi }  \\= 0\\). The former means that the perturbing potential couples to the electronic density, while the second, implies a vector potential couples to a current. The fundamental consequence is that one can define two different response functions: a density\\-density response function for the first,   \u03c7  \u03c1 \u03c1 {\\\\displaystyle \\\\chi \\_{\\\\rho \\\\rho }} ; and a current\\-current response function,   \u03c7  j j {\\\\displaystyle \\\\chi \\_{jj}} . This circumstance is a common source of error when comparing experimental and computational optical properties of periodic systems, as discussed by Sangalli et al.[\\[2]](#cite_note-sangalli:prb:2017-2). Infact, perturbations associated with longitudinal fields will be described by the density\\-density polarisability function   \u03c7  \u03c1 \u03c1 {\\\\displaystyle \\\\chi \\_{\\\\rho \\\\rho }} , (e.g., laser fields taken in the classical limit), while transverse fields will be described by the current\\-current polarizability   \u03c7  j j {\\\\displaystyle \\\\chi \\_{jj}} , which is in fact a 3x3 tensor, (e.g., required to obtain the MOKE). Fundamentally, the time\\-dependent density is associated only with the longitudinal part of the current via the continuity equation. This also links both response functions via  q  2  \u03c7  j j  (  q  , \u03c9 ) \\=  \u03c9  2  \u03c7  \u03c1 \u03c1  (  q  , \u03c9 ) . {\\\\displaystyle q^{2}\\\\chi \\_{jj}(\\\\mathbf {q} ,\\\\omega )\\=\\\\omega ^{2}\\\\chi \\_{\\\\rho \\\\rho }(\\\\mathbf {q} ,\\\\omega ).} It guarantees that the dielectric functions obtained from either approach match at finite momentum and frequency:   \u03f5 \\[  \u03c7  \u03c1 \u03c1  ] \\= \u03f5 \\[  \u03c7  j j  ] {\\\\displaystyle \\\\epsilon \\[\\\\chi \\_{\\\\rho \\\\rho }]\\=\\\\epsilon \\[\\\\chi \\_{jj}]}  . The current\\-current dielectric function is exact at both   q  \u2192 0 {\\\\displaystyle \\\\mathbf {q} \\\\to 0}  and at   q  \\= 0 {\\\\displaystyle \\\\mathbf {q} \\=0} . Especially for metals, it will reproduce the proper behavior of the Drude tail at   \u03c9 \\= 0 {\\\\displaystyle \\\\omega \\=0} . However,   \u03c7  j j {\\\\displaystyle \\\\chi \\_{jj}}  is more prone to numerical instabilities. Other dielectric properties--------------------------- ### Electron energy loss spectroscopy (EELS) In EELS experiments a narrow beam of electrons with a well defined energy is shot at the sample. These electrons then lose energy to the sample by exciting plasmons, electron\\-hole pairs, or other higher\\-order quasiparticles. The loss function can then be expressed as   E E L S  \\= \u2212  I m  \\[  \u03f5  \u2212 1  ( \u03c9 )  ]  . {\\\\displaystyle \\\\mathrm {EELS} \\=\\-\\\\mathrm {Im} \\\\left\\[\\\\epsilon ^{\\-1}(\\\\omega )\\\\right].} ### Optical conductivity From Maxwell's equations and the microscopic form of Ohm's law it is possible to arrive at the following relation between the tensorial dielectric function and the optical conductivity   \u03c3 ( \u03c9 ) {\\\\displaystyle \\\\sigma (\\\\omega )}  \u03c3  \u03b1 \u03b2  ( \u03c9 ) \\=  i  \u03c9  4 \u03c0  \\[  \u03b4  \u03b1 \u03b2  \u2212  \u03f5  \u03b1 \u03b2  ( \u03c9 )  ]  . {\\\\displaystyle \\\\sigma \\_{\\\\alpha \\\\beta }(\\\\omega )\\=\\\\mathrm {i} {\\\\frac {\\\\omega }{4\\\\pi }}\\\\left\\[\\\\delta \\_{\\\\alpha \\\\beta }\\-\\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )\\\\right].} ### Optical absorption For an electromagnetic wave traveling through a medium, one can express the electric field as   E  (  r  , t ) \\=  E  0  e  \u2212  i  ( \u03c9 t \u2212  q  \u22c5  r  ) {\\\\displaystyle \\\\mathbf {E} (\\\\mathbf {r} ,t)\\=\\\\mathbf {E} \\_{0}e^{\\-\\\\mathrm {i} (\\\\omega t\\-\\\\mathbf {q} \\\\cdot \\\\mathbf {r} )}} , and the effects of the medium in the wave propagation are contained inside the dispersion relation   \u03c9 \\= \u03c9 (  q  ) {\\\\displaystyle \\\\omega \\=\\\\omega (\\\\mathbf {q} )} . Using Maxwell's equations, one can arrive at   q  2  \\=  \u03c9  2  c  2  \u03f5 ( \u03c9 ) . {\\\\displaystyle q^{2}\\={\\\\frac {\\\\omega ^{2}}{c^{2}}}\\\\epsilon (\\\\omega ).} If the magnetic permeability of the material is assumed to be equal to that of vacuum, the equation above implies that the refractive index can be written as   n \\=  \u03f5 ( \u03c9 )  \\=  n \\~  \\+  i  k {\\\\displaystyle n\\={\\\\sqrt {\\\\epsilon (\\\\omega )}}\\={\\\\tilde {n}}\\+\\\\mathrm {i} k} . Since   n {\\\\displaystyle n}  is complex, the exponential factor in   E  (  r  , t ) {\\\\displaystyle \\\\mathbf {E} (\\\\mathbf {r} ,t)}  will have a dampening factor,   e  \u2212  \u03c9 c  k  q ^  \u22c5  r {\\\\displaystyle e^{\\-{\\\\frac {\\\\omega }{c}}k{\\\\hat {q}}\\\\cdot \\\\mathbf {r} }} , which accounts for the absorption of electromagnetic energy by the medium. With this relation one can define the absorption coefficient,   \u03b1 ( \u03c9 ) {\\\\displaystyle \\\\alpha (\\\\omega )}  as  \u03b1 ( \u03c9 ) \\=  2 \u03c9  c  k ( \u03c9 ) . {\\\\displaystyle \\\\alpha (\\\\omega )\\={\\\\frac {2\\\\omega }{c}}k(\\\\omega ).} ### Reflectance From the previous subsection, one can also define the reflectivity coefficient at normal incidence as  R \\=  ( 1 \u2212  n \\~  )  2  \\+  k  2  ( 1 \\+  n \\~  )  2  \\+  k  2  . {\\\\displaystyle R\\={\\\\frac {(1\\-{\\\\tilde {n}})^{2}\\+k^{2}}{(1\\+{\\\\tilde {n}})^{2}\\+k^{2}}}.} This equation can be generalized for any angle of incidence   \u03b8 {\\\\displaystyle \\\\theta } , resulting in the general form of Fresnel equations. ### Magneto\\-optical Kerr effect (MOKE) The incoming electromagnetic wave interacts with the finite magnetic moment of the material. Usually, the interaction is with the magnetization of the medium, but there are also antiferromagnetic systems that can observe a finite MOKE.Generally, the reflected wave will gain an extra complex phase with respect to the incident   E {\\\\displaystyle \\\\mathbf {E} } \\-field. For a surface or two\\-dimensional material, (e.g., hexagonal BN, MoS  2 {\\\\displaystyle \\_{2}} ), this phase can be computed using the off\\-diagonal components of the current\\-current dielectric tensor:  \u03b8  K  ( \u03c9 ) \\= \u2212  R e  \\[  \u03f5  x y  ( \u03c9 )  (  \u03f5  x x  ( \u03c9 ) \u2212 1 )  \u03f5  x x  ( \u03c9 )  ]  . {\\\\displaystyle \\\\theta \\_{\\\\mathrm {K} }(\\\\omega )\\=\\-\\\\mathrm {Re} \\\\left\\[{\\\\frac {\\\\epsilon \\_{xy}(\\\\omega )}{(\\\\epsilon \\_{xx}(\\\\omega )\\-1\\){\\\\sqrt {\\\\epsilon \\_{xx}(\\\\omega )}}}}\\\\right].} Electric response combined with perturbations of the ionic degrees of freedom----------------------------------------------------------------------------- ### Low\\-frequency corrections from atomic displacements The corrections from ionic motion to the low frequency regime can be added to   \u03f5  \u03b1 \u03b2  \u221e {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }^{\\\\infty }}  following[\\[3]](#cite_note-gonze:prb:1997-3)  \u03f5  \u03b1 \u03b2  ( \u03c9 ) \\=  \u03f5  \u03b1 \u03b2  \u221e  \\+  4 \u03c0  e  2  \u03a9  0  \u2211  \u03bd  S  \u03b1 \u03b2 , \u03bd  \u03c9  \u03bd  2  \u2212 ( \u03c9 \\+  i  \u03b7  )  2  , {\\\\displaystyle \\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )\\=\\\\epsilon \\_{\\\\alpha \\\\beta }^{\\\\infty }\\+{\\\\frac {4\\\\pi e^{2}}{\\\\Omega \\_{0}}}\\\\sum \\_{\\\u }{\\\\frac {S\\_{\\\\alpha \\\\beta ,\\\u }}{\\\\omega \\_{\\\u }^{2}\\-(\\\\omega \\+\\\\mathrm {i} \\\\eta )^{2}}},} where   \u03c9  \u03bd {\\\\displaystyle \\\\omega \\_{\\\u }}  is the phonon frequency of mode   \u03bd {\\\\displaystyle \\\u } , and   S  \u03b1 \u03b2 , \u03bd {\\\\displaystyle S\\_{\\\\alpha \\\\beta ,\\\u }}  is the mode\\-oscillator strength, defined by  S  \u03b1 \u03b2 , \u03bd  \\=  (  \u2211  I , \u03b4  Z  I \u03b1 \u03b4  \u2217  \u03b5  I \u03b4 , \u03bd  \u2217  (  q \\= 0  )  )  (  \u2211  J ,  \u03b4 \u2032  Z  J \u03b2  \u03b4 \u2032  \u2217  \u03b5  J  \u03b4 \u2032  , \u03bd  (  q \\= 0  )  )  . {\\\\displaystyle S\\_{\\\\alpha \\\\beta ,\\\u }\\=\\\\left(\\\\sum \\_{I,\\\\delta }Z\\_{I\\\\alpha \\\\delta }^{\\*}\\\\varepsilon \\_{I\\\\delta ,\\\u }^{\\*}(\\\\mathbf {q\\=0} )\\\\right)\\\\left(\\\\sum \\_{J,\\\\delta '}Z\\_{J\\\\beta \\\\delta '}^{\\*}\\\\varepsilon \\_{J\\\\delta ',\\\u }(\\\\mathbf {q\\=0} )\\\\right).} Here   Z  J \u03b2  \u03b4 \u2032  \u2217 {\\\\displaystyle Z\\_{J\\\\beta \\\\delta '}^{\\*}}  are the Born effective charges and   \u03b5  J  \u03b4 \u2032  , \u03bd  (  q \\= 0  ) {\\\\displaystyle \\\\varepsilon \\_{J\\\\delta ',\\\u }(\\\\mathbf {q\\=0} )}  are the eigendisplacements associated with the vibration mode   \u03bd {\\\\displaystyle \\\u }  for atom   J {\\\\displaystyle J}  along direction   \u03b4 \u2032 {\\\\displaystyle \\\\delta '} . More information on the theory and methods behind the computation of phonon frequencies and eigendisplacements can be found in the phonons dedicated page. Inclusion of the low\\-frequency corrections can be activated in the INCAR file with either IBRION \\= 5,6 (DFPT) or 7,8 (finite differences), and by setting to .True. the variables LEPSILON or LCALCEPS.  #### Polar materials For polar materials it is important to recall that there is a discontinuity near   \u0393 {\\\\displaystyle \\\\Gamma } , i.e.   \u03c9  \u03bd  2  (  q \u2192 0  ) \u2260  \u03c9  \u03bd  2  (  q \\= 0  ) {\\\\displaystyle \\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\\\to 0} )\\\eq \\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\=0} )} , and in fact, for a given unitary directional vector   q {\\\\displaystyle \\\\mathbf {q} } , it can be shown that the Lyddane\\-Sachs\\-Teller relationship holds[\\[3]](#cite_note-gonze:prb:1997-3)  \u220f  \u03bd  \u03c9  \u03bd  2  (  q \u2192 0  ) \u2212  \u03c9  2  \u03c9  \u03bd  2  (  q \\= 0  ) \u2212  \u03c9  2  \\=  \u2211  \u03b1 \u03b2  q  \u03b1  \u03f5  \u03b1 \u03b2  ( \u03c9 )  q  \u03b2  \u2211  \u03b1 \u03b2  q  \u03b1  \u03f5  \u03b1 \u03b2  \u221e  q  \u03b2  , {\\\\displaystyle \\\\prod \\_{\\\u }{\\\\frac {\\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\\\to 0} )\\-\\\\omega ^{2}}{\\\\omega \\_{\\\u }^{2}(\\\\mathbf {q\\=0} )\\-\\\\omega ^{2}}}\\={\\\\frac {\\\\sum \\_{\\\\alpha \\\\beta }q\\_{\\\\alpha }\\\\epsilon \\_{\\\\alpha \\\\beta }(\\\\omega )q\\_{\\\\beta }}{\\\\sum \\_{\\\\alpha \\\\beta }q\\_{\\\\alpha }\\\\epsilon \\_{\\\\alpha \\\\beta }^{\\\\infty }q\\_{\\\\beta }}},} meaning that the splitting in frequencies between the LO and TO modes at zero momentum carries over the evaluation of the dielectric function.  In order to obtain smooth phonon dispersions and to properly account for the LO\\-TO splitting in the evaluation of the optical limit of the dielectric function, users should read the dedicated page on LO\\-TO splitting \"Phonons: Theory\"), where it is explained how to set the variables LPHON\\_POLAR, PHON\\_DIELECTRIC, and PHON\\_BORN\\_CHARGES in the INCAR file. ### Corrections from strain The dielectric tensor can also be included in the evaluation of the elastic tensor,   C  j k {\\\\displaystyle C\\_{jk}} , (see theory of static linear response for more information on derived quantities from the static linear response). While this quantity is normally evaluated at fixed   E {\\\\displaystyle \\\\mathbf {E} } \\-field, in cases where a thin film is placed between layers of insulating materials, it is more convenient to evaluate the elastic tensor for fixed displacement field   D {\\\\displaystyle \\\\mathbf {D} } , since the boundary conditions fix the components of this vector in the direction normal to the surface.   If  C  j k  E {\\\\displaystyle C\\_{jk}^{E}}  is the elastic tensor defined at fixed   E {\\\\displaystyle \\\\mathbf {E} } \\-field and   C  j k  D {\\\\displaystyle C\\_{jk}^{D}}  the elastic tensor defined at fixed   D {\\\\displaystyle \\\\mathbf {D} } \\-field, then they are related by  C  j k  D  \\=  C  j k  E  \\+  e  \u03b1 j  ( \u03f5  )  \u03b1 \u03b2  \u2212 1  e  \u03b2 k  , {\\\\displaystyle C\\_{jk}^{D}\\=C\\_{jk}^{E}\\+e\\_{\\\\alpha j}(\\\\epsilon )\\_{\\\\alpha \\\\beta }^{\\-1}e\\_{\\\\beta k},} where   e  \u03b1 j {\\\\displaystyle e\\_{\\\\alpha j}}  is the ion\\-relaxed piezoelectric tensor."}
{"file_name": "LIBMBD_XC.md", "content": "LIBMBD\\_XC= pbe \\| pbe0 \\| hse \\| blyp \\| b3lyp \\| revpbe \\| am05 \\| nonenDefault: The functional set by the GGA, METAGGA or XC tag Description: LIBMBD\\_XC sets the exchange\\-correlation functional for the setting of damping parameters used in the methods available in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_XC allows to choose the exchange\\-correlation functional that determines which set of damping parameters is used in the methods available in the library libMBD of many\\-body dispersion methods. The value is internally passed to the libMBD input **xc** described at the page [\\[4]](#cite_note-libmbd_input-4). The possible choices depend on the dispersion method selected with the LIBMBD\\_METHOD tag and are listed in the file mbd\\_damping.F90 of the libMBD source code. If LIBMBD\\_XC\\=none is chosen, then no set of damping parameters is selected and either LIBMBD\\_TS\\_SR or LIBMBD\\_MBD\\_BETA has to be set. | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "NELMIN.md", "content": "NELMIN= \\[integer]   Default: **NELMIN** \\= 2nDescription: NELMIN specifies the minimum number of electronic self\\-consistency steps.   --- It is rarely necessary to change the value of the NELMIN tag. In some cases, e.g., in molecular\\-dynamics runs, or ionic\\-minimization methods, we recommend increasing the NELMIN tag to a value between 4 and 8\\."}
{"file_name": "LVGVCALC.md", "content": "LVGVCALC= .TRUE. \\| .FALSE.   Default: **LVGVCALC** \\= .TRUE.nDescription: LVGVCALC switches on calculation of the *vGv* expression for the orbital magnetic susceptibility. LVGVCALC is available as of VASP.6\\.4\\.0\\.  --- When performing a chemical shift calculation the standard *pGv* susceptibility[\\[1]](#cite_note-yates:prb:07-1) is calculated and used in the calculation of the CSA tensor. When LVGVCALC is true, the magnetic susceptibility is also calculated with the *vGv* approximation. LVGVAPPL determines whether the *vGv* or *pGv* result is applied in the calculation of the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution to the CSA tensor. The *vGv* expression for the orbital susceptibility was introduced by d'Avezac *et al.*[\\[2]](#cite_note-avezac:prb:01-2)In VASP its ultra\\-soft generalization is used.[\\[3]](#cite_note-dewijs:jcp:18-3)"}
{"file_name": "EINT.md", "content": "EINT= \\[real1] \\[real2] \\| \\[real1]   Default: **EINT** \\= not setnDescription: EINT sets the energy interval for bands contributing to the calculation of the partial charge density in eV.  --- * EINT\\= \\[real1] \\[real2]: If two values are given, the energy interval between those values is used.* EINT\\= \\[real1]: If only one value is given, the Fermi energy   \u03f5  f {\\\\displaystyle \\\\epsilon \\_{f}}  is used as the other limit \\[real2] of the interval.  --- | **Important:** The energies passed in EINT are used as set if NBMOD \\= \\-2, but will be added to the Fermi energy (     \u03f5  f     {\\\\displaystyle \\\\epsilon \\_{f}}  \\epsilon _{f} \\+ real1 and      \u03f5  f     {\\\\displaystyle \\\\epsilon \\_{f}}  \\epsilon _{f} \\+ real2\\) if NBMOD \\= \\-3\\. || --- | If \\[real1] is larger than \\[real2], the two values will be flipped internally, so a meaningful energy interval is used. If EINT is set, but NBMOD is not, it will be internally set to NBMOD \\= \\-2, and the input values of EINT will be treated as absolute energies. EINT can be conveniently used in combination with NBMOD \\= \\-3 to mimic the bias\\-voltage for simulating a scanning\\-tunneling\\-microscope image."}
{"file_name": "LWAVE.md", "content": "LWAVE= \\[logical]   Default: **LWAVE** \\= .NOT.LH5nDescription: LWAVE determines whether the wavefunctions are written to the WAVECAR file at the end of a run."}
{"file_name": "ML_MB.md", "content": "ML\\_MB= \\[integer]   Default: **ML\\_MB** \\= see belownDescription: This tag sets the maximum number of local reference configurations (i.e. basis functions in the kernel) in the machine learning force field method.  --- The defaults for ML\\_MB are different for each different ML\\_MODE setting. Here are the defaults for each mode: * `ML_MODE = train`:\t+ No ML\\_AB present (learning from scratch): `min(1500 , max(NSW , 2*ML_MCONF_NEW * MAXAT_SP)`\t+ ML\\_AB present (continuation of learning): `MB_AB + min(1500, max(NSW , 2*ML_MCONF_NEW * MAXAT_SP)`* `ML_MODE = select`: `MB_AB + ML_MCONF_NEW * MAXAT_SP`* `ML_MODE = refit`: `MB_AB + MAXAT_SP`* `ML_MODE = refitbayesian`: `MB_AB + MAXAT_SP`* `ML_MODE = run`: `MB_AB` using the following definitions: * `MAXAT_SP` \\= greatest number of atoms within all species among the current structures and the structures in the ML\\_AB file (if present).* `MB_AB` \\= greatest number of local reference configurations within all species in the ML\\_AB file. The default value for `ML_MODE = train` and `ML_MODE = select` is a relatively safe value for most materials. However one might need to increase it to a greater value for liquids, polymers and amorphous systems, or when a MLFF for many different polytypes is trained. By default (`ML_LBASIS_DISCARD = .TRUE.`), if the number of local reference configurations would exceed ML\\_MB, VASP would continue the calculation and disposes of these, but one should make extensive tests whether the generated MLFF is sufficiently accurate. If VASP stops, subsequent training can be restarted from the existing ML\\_AB file. This avoids loss of already acquired training data. Depending on the calculation mode VASP adds a little overhead in the allocation of ML\\_MB arrays to buffer for new candidate structures. Here are the buffer sizes for each mode: * `ML_MODE = train`:\t+ No ML\\_AB present (learning from scratch): `min(NSW , ML_MCONF_NEW) * MAXAT_SP`\t+ ML\\_AB present (continuation of learning): `min(NSW , ML_MCONF_NEW) * MAXAT_SP`* `ML_MODE = select`: `ML_MCONF_NEW * MAXAT_SP`* `ML_MODE = refit`: `MAXAT_SP`* `ML_MODE = refitbayesian`: `MAXAT_SP`* `ML_MODE = run`: `0` The flag ML\\_MB also determines the maximum number of rows of the design matrix. This is usually a huge matrix. The design matrix is allocated statically at the beginning of the run, since several parts of the code use MPI shared memory and dynamic reallocation of these arrays can cause issues on many operating systems. An estimate of the size of the design matrix and all other large arrays is printed out to the ML\\_LOGFILE before allocation. The design matrix is fully distributed in a block\\-cyclic fashion for scaLAPACK, and thus the memory requirement for each core scales inversely proportional to the number of used cores."}
{"file_name": "OpenACC_GPU_port_of_VASP.md", "content": "With VASP.6\\.2\\.0 we officially released the OpenACC GPU\\-port of VASP:Official in the sense that we now strongly recommend using this OpenACC version to run VASP on GPU accelerated systems. The previous CUDA\\-C GPU\\-port of VASP is considered to be deprecated and is no longer actively developed, maintained, or supported.As of VASP.6\\.3\\.0, the CUDA\\-C GPU\\-port of VASP has been dropped completely. Requirements------------ ### Software stack *Compiler* * To compile the OpenACC version of VASP you need a recent version of the NVIDIA HPC\\-SDK (\\>\\=21\\.2\\). In principle, any compiler that supports at least OpenACC standard 2\\.6 should do the trick, but we have only tried and tested the aforementioned ones.**N.B.**: the NVIDIA HPC\\-SDK versions 22\\.1 and 22\\.2 have a serious bug that prohibits the execution of the OpenACC version in conjunction with OpenMP\\-threading. When using these compiler versions you should compile without OpenMP support. This bug is fixed as of NVIDIA HPC\\-SDK version 22\\.3\\.*Libraries* * Numerical libraries: FFTW, BLAS, LAPACK, and scaLAPACK. In case you are using the NVIDIA HPC\\-SDK the only numerical library you will have to install yourself is FFTW. The latter three (BLAS, LAPACK, and scaLAPACK) are shipped with the SDK. Alternatively, you can link against an installation of Intel's oneAPI MKL library that provides all four.* The NVIDIA CUDA Toolkit (\\>\\=10\\.0\\). All necessary CUDA Toolkit components are shipped as part of the NVIDIA HPC\\-SDK.* A CUDA\\-aware version of MPI. The OpenMPI installations that are packaged with the NVIDIA HPC\\-SDK are CUDA\\-aware.* The NVIDIA Collective Communications Library (NCCL) (\\>\\=2\\.7\\.8\\). This library is not a strict requirement but its use is highly recommended for performance reasons. Suitable installations of NCCL are shipped as part of the NVIDIA HPC\\-SDK. *Drivers* * You need a CUDA driver that supports at least CUDA\\-10\\.0\\. ### Hardware We have only tested the OpenACC GPU\\-port of VASP with the following NVIDIA GPUs: * NVIDIA datacenter GPUs: P100 (Pascal), V100 (Volta), and A100 (Ampere).* NVIDIA Quadro GPUs: GP100 (Pascal), and GV100 (Volta). **N.B.**: Running VASP on other NVIDIA GPUs (e.g. \"gaming\" hardware) is technically possible but not advisable: these GPUs are not well suited since they do not offer fast double\\-precision floating\\-point arithmetic (FP64\\) performance and in general have smaller memories without error correction code (ECC) capabilities. Building-------- To build the OpenACC port of VASP it is probably best to base your `makefile.include` file on one of the archetypical templates and adapt these to the particulars of your system. Features and limitations------------------------ * Most features of VASP have been ported to GPU using OpenACC, with the notable exception of everything involving the RPA: GW and ACFDT. This is work in progress. * The use of parallel FFTs of the wave functions (NCORE\\>1\\) should be avoided for performance reasons. Currently, the OpenACC version will automatically switch to NCORE\\=1 even if otherwise specified in the INCAR file. * **Due to the use of NCCL, the OpenACC version of VASP may only be executed using a single MPI\\-rank per available GPU:** Using NCCL has large performance benefits in the majority of cases. However, we are aware of the fact that for calculations on small systems it would be useful to retain the ability to have multiple MPI\\-ranks share a GPU, and plan to make the use of NCCL optional to remove this limitation.Running the OpenACC version--------------------------- 1. Use a single MPI rank per GPU (currently, the use of NCCL precludes the use of multiple ranks per GPU).2. Use OpenMP threads in addition to MPI ranks to leverage more of the available CPU power. The OpenACC version is currently limited to the use of 1 MPI\\-rank/GPU, which means that potentially quite a bit of CPU power remains unused. Since there are still parts of the code that run CPU\\-side it can be beneficial to allow for the use of multiple OpenMP threads per MPI rank:\t* To see how to build VASP with OpenACC\\- *and* OpenMP\\-support have a look at the makefile.include.nvhpc\\_ompi\\_mkl\\_omp\\_acc file.**N.B.**: here we link against Intel's MKL library for CPU\\-sided FFTW, BLAS, LAPACK, and scaLAPACK calls and the Intel OpenMP runtime library (libiomp5\\.so). This is strongly recommended when compiling for Intel CPUs, especially when using multiple threads. To ensure that MKL uses the Intel OpenMP runtime library you need to set an environment variable, either by:  ```export MKL_THREADING_LAYER=INTEL ``` or by adding:  ```-x MKL_THREADING_LAYER=INTEL ``` as an option to your `mpirun` command.\t* Correct placement and pinning of OpenMPI ranks and OpenMP threads onto the CPU cores can be a bit tricky, and depends on the particular flavor of MPI one uses.3. To achieve the best performance it is important to chose KPAR and NSIM wisely. Unfortunately, the ideal values will depend on the particulars of your system, both in the sense of workload as well as hardware, so you will have to experiment with different settings. However, as a rule of thumb one can say:\t* Set KPAR to the number of GPUs (\\= MPI\\-ranks) you are going to use. This only makes sense, though, when the number of irreducible **k**\\-points in your calculation is more or less evenly dividable by KPAR, otherwise the distribution of the work over the MPI\\-ranks will be strongly imbalanced. This means your options in choosing this parameter are somewhat limited.\t* NSIM determines the number of bands that are optimized simultaneously in many of the electronic solvers (e.g RMM\\-DIIS and blocked\\-Davidson). As a rule, one should choose this parameter larger to get good performance on GPUs than one would for CPU\\-sided execution.**N.B.**: For optimal CPU\\-sided execution of VASP one would normally experiment with different settings for NCORE as well. When running on GPUs anything different from NCORE\\=1 will adversely affect performance, and VASP will automatically switch to NCORE\\=1, even if otherwise specified in the INCAR file. Credits------- A special thanks goes out to: Stefan Maintz, Markus Wetzstein, Alexey Romanenko, and Andreas Hehn from NVIDIA for all their help porting VASP to GPU using OpenACC! Related articles---------------- Installing VASP.6\\.X.X,makefile.include,Compiler options,Precompiler options,Linking to libraries,Toolchains,Combining MPI and OpenMP,Validation tests,Known issues  ---"}
{"file_name": "DQ.md", "content": "DQ= \\[real]   Default: **DQ** \\= 0\\.001nDescription: step size for the finite difference *k*\\-space derivative in the linear response calculation of chemical shifts.  --- Typical values for DQ are in the range \\[0\\.001 \\- 0\\.003]. The default is often sufficient."}
{"file_name": "CLN.md", "content": "CLN= \\[integer]nDescription: CLN selects the main quantum number of the excited electron when using ICORELEVEL.  --- This option is only used if ICORELEVEL\\=2 is set."}
{"file_name": "Nose-Hoover-chain_thermostat.md", "content": "The standard Nos\u00e9\\-Hoover thermostat suffers from well\\-known issues, such as the ergodicity violation in the case of simple harmonic oscillator[\\[1]](#cite_note-martyna:jcp:92-1). As proposed by Martyna and Klein[\\[1]](#cite_note-martyna:jcp:92-1), these problems can be solved by using multiple Nose Hoover thermostats connected in a chain. Although the underlining dynamics is non\\-Hamiltonian, the corresponding equations of motion conserve the following energy term:   H \u2032  \\=  H  (  r  ,  p  ) \\+  \u2211  j \\= 1  M  p  \u03b7  j  2  2  Q  j  \\+ ( 3 N \u2212  N  c  )  k  B  T  \u03b7  1  \\+  k  B  T  \u2211  j \\= 2  M  \u03b7  j  , {\\\\displaystyle {\\\\mathcal {H'}}\\={\\\\mathcal {H}}({\\\\mathbf {r}},{\\\\mathbf {p}})\\+\\\\sum \\\\limits \\_{j\\=1}^{M}{\\\\frac {p\\_{\\\\eta \\_{j}}^{2}}{2Q\\_{j}}}\\+(3N\\-N\\_{c})k\\_{B}T\\\\eta \\_{1}\\+k\\_{B}T\\\\sum \\\\limits \\_{j\\=2}^{M}\\\\eta \\_{j},} where   H  (  r  ,  p  ) {\\\\displaystyle {\\\\mathcal {H}}({\\\\mathbf {r}},{\\\\mathbf {p}})}  is the Hamiltonian of the physical system,   M {\\\\displaystyle M}  ,  N {\\\\displaystyle N}  and  N  c {\\\\displaystyle N\\_{c}}  are the numbers of thermostats, atoms in the cell, and geometric constraints, respectively, and   \u03b7  j {\\\\displaystyle \\\\eta \\_{j}}  ,  p  \u03b7  j {\\\\displaystyle p\\_{\\\\eta \\_{j}}} , and   Q  j {\\\\displaystyle Q\\_{j}}  are the position, momentum, and mass\\-like parameter associated with the thermostat   j {\\\\displaystyle j} . Just like the total energy in the NVE ensemble,  H \u2032 {\\\\displaystyle {\\\\mathcal {H'}}}  is valuable for diagnostics purposes. Indeed, a significant drift in   H \u2032 {\\\\displaystyle {\\\\mathcal {H'}}}  indicates that the corresponding computational setting is suboptimal. Typical reasons for this behavior involve noisy forces (e.g., because of a poor SCF convergence) and/or a too large integration step (defined via POTIM).  The number of thermostats is controlled by the flag NHC\\_NCHAINS. Typically, this flag is set to a value between 1 and 5, the maximal allowed value is 20\\. In the special case of NHC\\_NCHAINS\\=0, the thermostat is switched off, leading to a MD in the microcanonical ensemble. Another special case of NHC\\_NCHAINS\\=1 corresponds to the standard Nose\\-Hoover thermostat.  The only parameter of this thermostat is the characteristic time scale (  \u03c4 {\\\\displaystyle \\\\tau } ), defined via flag NHC\\_PERIOD. This parameter is used to setup the mass\\-like variables via the relations:   Q  1  \\= 3 ( N \u2212  N  c  )  k  B  T  \u03c4  2 {\\\\displaystyle Q\\_{1}\\=3(N\\-N\\_{c})k\\_{B}T\\\\tau ^{2}}  Q  j  \\=  k  B  T  \u03c4  2  ;  j \\= 2 , \u2026 , M {\\\\displaystyle Q\\_{j}\\=k\\_{B}T\\\\tau ^{2};\\\\;\\\\;\\\\;j\\=2,\\\\dots ,M} Furthermore, due to rapidly varying forces in thermostat variables propagators, the standard velocity Verlet algorithm with fixed integration step might be insufficiently accurate. As proposed by Tuckerman[\\[2]](#cite_note-2), the RESPA[\\[3]](#cite_note-3) methodology can be used to overcome this problem, in which the integration step used in thermostat variables propagation is split into NHC\\_NRESPA equal parts, each of which may be further divided into NHC\\_NS smaller parts treated by Suzuki\\-Yoshida scheme of fourth or sixth order.   ---"}
{"file_name": "EAUG.md", "content": "EAUG= \\[real]   Default: **EAUG** \\= value read from POTCARnDescription: EAUG specifies the energy cutoff for the plane\\-wave representation for the augmentation charges in eV for the pseudopotential it is read from.  --- For a multi\\-element POTCAR file, the maximum EAUG determines the cutoff energy for the plane\\-wave representation of the augmentation charges. | **Deprecated:** The value of EAUG can be overwritten by setting ENAUG in the INCAR file, but this functionality is deprecated and should not be used anymore. || --- |"}
{"file_name": "LANGEVIN_GAMMA.md", "content": "LANGEVIN\\_GAMMA= \\[Real array]   Default: **LANGEVIN\\_GAMMA** \\= NTYP\u00d70nDescription: LANGEVIN\\_GAMMA specifies the friction coefficients (in ps\\-1) for atomic degrees\\-of\\-freedom when using a Langevin thermostat (in case VASP was compiled with \\-Dtbdyn).  --- When using a Langevin thermostat[\\[1]](#cite_note-Allen91-1) (MDALGO\\=3\\), the friction coefficients \u03b3 for the atomic degrees\\-of\\-freedom are specified (in ps\\-1) using the LANGEVIN\\_GAMMA\\-tag. One has to specify a separate friction coefficient for each of the NTYP atomic species found on the POTCAR\\-file.  #### Practical example Consider a system consisting of 16 hydrogen and 48 silicon atoms. Suppose that eight silicon atoms are considered to be Langevin atoms and the remaining 32 Si atoms are either fixed or Newtonian atoms. The Langevin and Newtonian (or fixed) atoms should be considered as different species, *i.e.*, the POSCAR\\-file should contain the line like this:  ```Si H Si40 16 8  ``` As only the final eight Si atoms are considered to be Langevin atoms, the INCAR\\-file should contain the following line defining the friction coefficients:  ```LANGEVIN_GAMMA = 0.0   0.0   10.0  ``` *i.e.*, for all non\\-Langevin atoms, \u03b3 should be set to zero."}
{"file_name": "GW_calculations.md", "content": "The GW approximation is an approximation to the self\\-energy. GW calculations are available as of VASP.5\\.X. For details on the implementation and use of the *GW* routines, we recommend the papers by Shishkin *et al.* [\\[1]](#cite_note-shishkin:prb:2006-1)[\\[2]](#cite_note-shishkin:prb:2007-2)[\\[3]](#cite_note-shishkin:prl:2007-3) and Fuchs *et al.*[\\[4]](#cite_note-fuchs:prb:2007-4) Single step procedure: GW in one go=================================== As of VASP.6\\.3 all GW approximations can be run in one single run by selecting the corresponding ALGO tag and omitting NBANDS), for instance like so   ```System\") = SiCALGO = EVGW0, QPGW0, EVGW, QPGW, GW0R or GWR # use an algorithgm described belowNELMGW = 1,2,.. # number of self-consistency cyclesISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesLOPTICS = .TRUE.  # for insulators, omit for metals  ``` Note, NBANDS must not be present in the INCAR to select this procedure. | **Important:** In older versions a two step procedure is required, where the first step is always a DFT calculation and the second step the actual GW calculation. || --- | The two\\-step procedure is described below. Caveats------- The single\\-step GW procedure performs a DFT step internally with an exact diagonalization of the Kohn\\-Sham Hamiltonian using the maximum available NBANDS supported for the chosen ENCUT value. Consequently, a large number of unoccupied bands is initialized with random plane\\-wave coefficients. In rare cases, this yields two linearly dependent column vectors in the Hamiltonian and results in LAPACK errors like \"ZPOTRF fails\". These errors can be prevented using the two\\-step GW procedure as described below. Furthermore, one can \"ramp up\" NBANDS to the maximum value by repeatedly restarting the DFT calculation from a pre\\-converged WAVECAR with fewer bands. First step: DFT calculation=========================== *GW* calculations always require a one\\-electron basis set. Usually this set is obtained from a standard DFT calculation and written into the WAVECAR file and can be calculated for instance the following INCAR file:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesLOPTICS = .TRUE.  ``` Note, that a significant number of empty bands is required for *GW* calculations, so that it might be better to perform the calculations in two steps: first a standard ground\\-state calculation with few unoccupied orbitals only,  ```System\") = SiC ground-state occupied orbitalsISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesEDIFF = 1E-8              \u00a0! required tight tolerance for ground-state orbitals  ``` and, second, a calculation of a large number of unoccupied orbitals  ```System\")  = SiC unoccupied orbitalsALGO = Exact              \u00a0! use exact diagonalization of the HamiltonianNELM = 1                  \u00a0! since we are already converged stop after one stepNBANDS = 512              \u00a0! maybe even larger                ISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesLOPTICS = .TRUE.  ``` Furthermore, note that the flag LOPTICS\\=.TRUE. is required to write the file WAVEDER, which contains the derivative of the orbitals with respect to **k**. This derivative is used to construct the head and wings of the dielectric matrix employing **k**\u00b7**p** perturbation theory and is important to accelerate k\\-point convergence for insulators and semiconductors.  | **Warning:** For metals, in general, we recommend omitting the LOPTICS tag and removing the WAVEDER file from the directory. || --- | Optional: Use Hybrid functionals-------------------------------- Optionally, one can start a *GW* calculation from a hybrid functional, such as HSE. For hybrid functionals, the two step procedure will accordingly involve the following INCAR files. In the first step, converged HSE03 orbitals are determined (see here for a selection of available hybrid functionals):  ```System\")  = SiC ground-state occupied orbitalsISMEAR = 0\u00a0; SIGMA = 0.05ALGO = Damped\u00a0; TIME = 0.5 \u00a0! or ALGO = ConjugateLHFCALC = .TRUE.\u00a0; AEXX = 0.25\u00a0; HFSCREEN = 0.3 EDIFF = 1E-6     \u00a0! required tight tolerance for ground-state orbitals  ``` Secondly, determine the HSE03 orbitals for unoccupied states:  ```System\")  = SiC unoccupied orbitalsNBANDS = 512     \u00a0! maybe even largerALGO = ExactNELM = 1         \u00a0! since we are already converged stop after one stepISMEAR = 0\u00a0; SIGMA = 0.05LHFCALC = .TRUE.\u00a0; AEXX = 0.25\u00a0; HFSCREEN = 0.3 LOPTICS = .TRUE. # for insulators  ``` Second step: GW calculation=========================== The actual *GW* calculation is done in a second step. Here different *GW* flavors are possible and are selected with the ALGO tag.  Note that as of VASP.6 the GW ALGO tags have been renamed, see here for VASP.5\\.X tags. Single shot quasiparticle energies: G0W0---------------------------------------- This is the simplest *GW* calculation and computationally the most efficient one. A single\\-shot calculation is often referred to as G0W0 and calculates the quasiparticle energies from a single *GW* iteration by neglecting all off\\-diagonal matrix elements of the self\\-energy and employing a Taylor expansion of the self\\-energy around the DFT energies   E  n  q  ( 0 ) {\\\\displaystyle E\\_{n{\\\\bf {q}}}^{(0\\)}} . The corresponding equation becomes  E  n  q  \\=  E  n  q  ( 0 )  \\+  Z  n  q  \u27e8  \u03d5  n  q  ( 0 )  \\|  \u03a3 (  E  n  q  ( 0 )  ) \u2212  V  x c  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle E\\_{n{\\\\bf {q}}}\\=E\\_{n{\\\\bf {q}}}^{(0\\)}\\+Z\\_{n{\\\\bf {q}}}\\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|\\\\Sigma (E\\_{n{\\\\bf {q}}}^{(0\\)})\\-V\\_{xc}\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle } with the renormalization factor   Z  n  q  \\=  1  1 \u2212  R e  \u27e8  \u03d5  n  q  ( 0 )  \\|  \u03a3 \u2032  (  E  n  q  ( 0 )  )  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle Z\\_{n{\\\\bf {q}}}\\={\\\\frac {1}{1\\-{\\\\rm {Re}}\\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|\\\\Sigma '(E\\_{n{\\\\bf {q}}}^{(0\\)})\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle }}} In VASP, G0W0 calculations are selected using an INCAR file such as  ```System\")  = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05NELMGW = 1\u00a0! use NELM for VASP.6.2 and older ALGO = EVGW0\u00a0! use \"GW0\" for VASP.5.XNOMEGA = 50  ``` | **Mind:** Convergence with respect to the number of empty bands NBANDS and with respect to the number of frequencies NOMEGA must be checked carefully. || --- | To avoid complicated inter\\-nested tests, we recommend calculating all orbitals that the plane\\-wave basis set allows to calculate (except for simple tests). For further reading, please consult the section on ENCUTGW. After a successful G0W0 run, VASP will write the quasiparticle energies into the OUTCAR file for a set of NBANDSGW bands for every k\\-point in the Brillouin zone. Look for lines similar to   ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1for sc-GW calculations column KS-energies equals QP-energies in previous step and V_xc(KS)=  KS-energies - (<T + V_ion + V_H > + <T+V_H+V_ion>^1  + <V_x>^1) k-point   1\u00a0:       0.0000    0.0000    0.0000 band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation Imag(sigma)      1      -7.1627      -8.3040     -14.5626     -12.7276     -21.6682       0.6219       2.0000       1.2037     2      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914     3      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914     4      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914     5       0.4603      -0.4663     -13.7603     -12.5200     -18.1532       0.7471       2.0000       0.2167     6       0.4603      -0.4663     -13.7603     -12.5200     -18.1532       0.7471       2.0000       0.2167  ``` The first column is the band index and the third column denotes the quasiparticle energies   E  n  q {\\\\displaystyle E\\_{n{\\\\bf {q}}}} . Column two, four, five and seven refer to the DFT energies   E  n  q  ( 0 ) {\\\\displaystyle E\\_{n{\\\\bf {q}}}^{(0\\)}} , diagonal matrix elements of the self\\-energy   \u27e8  \u03d5  n  q  ( 0 )  \\|  \u03a3 ( \u03c9 \\=  E  n  q  ( 0 )  )  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle \\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|\\\\Sigma (\\\\omega \\=E\\_{n{\\\\bf {q}}}^{(0\\)})\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle } , the exchange\\-correlation potential   \u27e8  \u03d5  n  q  ( 0 )  \\|  V  x c  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle \\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|V\\_{xc}\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle }  and the renormalization factor   Z  n  q {\\\\displaystyle Z\\_{n{\\\\bf {q}}}}  defined above, respectively. Partially self\\-consistent calculations: EVGW0---------------------------------------------- In most cases, the *best* results (*i.e.*, closest to experiment) are obtained by iterating only   G {\\\\displaystyle G}  via the spectral representation  G  ( i )  (  r  ,  r  \u2032  , \u03c9 ) \\=  \u2211  n  k  \u03d5  n  k  \u2217 ( 0 )  (  r  )  \u03d5  n  k  ( 0 )  (  r  \u2032  )  \u03c9 \u2212  E  n  k  ( i ) {\\\\displaystyle G^{(i)}({\\\\bf {r}},{\\\\bf {r}}',\\\\omega )\\=\\\\sum \\_{n{\\\\bf {k}}}{\\\\frac {\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}}')}{\\\\omega \\-E\\_{n{\\\\bf {k}}}^{(i)}}}} but keeping   W {\\\\displaystyle W}  and the orbitals   \u03d5  n  q  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}}  fixed to the initial DFT level. This method goes back to Hybertsen and Louie [\\[5]](#cite_note-hybertsen:prb:1986-5) and can be achieved in two ways.  If the spectral method is not selected (LSPECTRAL\\=.FALSE., requiring much more compute time), the quasiparticle (QP) shifts are iterated automatically four times, and one finds four sets of QP shifts in the OUTCAR file. The first one corresponds to the G0W0 case. The INCAR file is simply:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = EVGW0\u00a0! use \"GW0\" in VASP.5.XLSPECTRAL =.FALSE.  ``` | **Tip:** In self\\-consistent GW calculations, convergence with the number of updated bands NBANDSGW must be checked carefully. || --- | For technical reasons, it is not possible to iterate   G {\\\\displaystyle G}  in this manner if LSPECTRAL\\=.TRUE. is set in the INCAR file (this is the default). In this case, an iteration number must be supplied in the INCAR file using the NELMGW tag. Usually, three to four iterations are sufficient to obtain accurate QP shifts.  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = EVGW0\u00a0! use \"GW0\" in VASP.5.XNELMGW = 4\u00a0! use NELM in VASP.6.2 and older  ``` The results are found again in the OUTCAR file  ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 4 k-point   1\u00a0:       0.0000    0.0000    0.0000 band No. old QP-enery  QP-energies   sigma(KS)   T+V_ion+V_H  V^pw_x(r,r')   Z            occupation Imag(sigma)      1      -8.6924      -8.7107     -14.2871       5.5647     -21.6681       0.6076       2.0000       1.1648     2      -3.4692      -3.4806     -15.6742      12.1894     -21.7437       0.7304       2.0000       0.6351     3      -3.4692      -3.4806     -15.6742      12.1894     -21.7437       0.7304       2.0000       0.6351     4      -3.4692      -3.4806     -15.6742      12.1894     -21.7437       0.7304       2.0000       0.6351     5      -0.6957      -0.7006     -13.6827      12.9802     -18.1531       0.7264       2.0000       0.2769     6      -0.6957      -0.7006     -13.6827      12.9802     -18.1531       0.7264       2.0000       0.2769     7      -0.6957      -0.7006     -13.6827      12.9802     -18.1531       0.7264       2.0000       0.2769  ``` In contrast to single shot GW calculations, the second column represent now the QP\\-energies from the previous iteration.  Partially self\\-consistent quasiparticle calculations: QPGW0------------------------------------------------------------ If non diagonal components of the self\\-energy (in the orbital basis) should be included use ALGO\\=QPGW0\\. The following setting can be used:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = QPGW0\u00a0! or \"scGW0\" for VASP.5.2.11 and older LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.\u00a0! ommit this lines for metalsNELMGW = 4\u00a0! use NELM for VASP.6.2 and older  ``` In this case, the orbitals are updated as well by constructing a hermitian (energy independent) approximation to the self\\-energy [\\[3]](#cite_note-shishkin:prl:2007-3). The \"static\" COHSEX approximation can be selected by setting NOMEGA \\= 1 [\\[6]](#cite_note-bruneval:prb:06-6). To improve convergence to the ground\\-state, the charge density (and the charge density only) is mixed using a Kerker type mixing in VASP.5\\.3\\.2 and more recent versions (see IMIX). The mixing parameters AMIX, BMIX, AMIX\\_MAG, BMIX\\_MAG, AMIN can be adjusted, if convergence problems are encountered. We strongly urge the user to monitor convergence by inspecting the lines   ```charge density residual ``` in the OUTCAR files. Alternatively, the mixing may be switched off by setting IMIX\\=0 and controlling the step width for the orbitals using the parameter TIME (which defaults to 0\\.4\\). This selects a fairly sophisticated damped MD algorithm that is also used for DFT methods when ALGO\\=Damped. This method is generally more reliable for metals and materials with strong charge sloshing. After every iteration, VASP writes the following lines into the OUTCAR file  ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1    GWSYM:  cpu time   15.8978: real time   15.9528 k-point   1\u00a0:       0.0000    0.0000    0.0000 band No. DFT-energies  QP-energies  QP-e(diag)   sigma(DFT)    Z            occupation      1      -7.1626      -8.4217      -8.3038      -8.9978       0.6219       2.0000     2      -2.0899      -3.4394      -3.4347      -3.5765       0.9047       2.0000     3      -2.0899      -3.4394      -3.4347      -3.5765       0.9047       2.0000     4      -2.0899      -3.4394      -3.4347      -3.5765       0.9047       2.0000     5       0.4604      -0.4787      -0.4663      -0.7800       0.7471       2.0000     6       0.4604      -0.4787      -0.4663      -0.7800       0.7471       2.0000     7       0.4604      -0.4787      -0.4663      -0.7800       0.7471       2.0000     8       5.1013       4.1883       4.2149       3.9518       0.7711       2.0000  ``` For the first iteration, here, the fourth column should be identical to the third column of the G0W0 results discussed above. The third column reports the quasiparticle energies obtained from including the off\\-diagonal matrix elements in the eigenvalue equation.  ### Caveats The *QPGW0* (or *scGW0* in VASP.5\\.2\\.11 and older) must be used with great caution, particularly in combination with symmetry.Symmetry is handled in a rather sophisticated manner. Specifically, only the minimal number of required combinations of *q* and *k* points is considered. In this case, symmetry must be applied to restore the full star of *q*. This is done by determining degenerate eigenvalue/eigenvector pairs and restoring their symmetry according to their irreducible representation. Although the procedure is generally relatively reliable, it fails to work properly if the degenerate states do not possess eigenvalues that are sufficiently close due to insufficient convergence in the preceding DFT calculations. That is because states are treated as degenerate if, and only if, their eigenenergies are within 0\\.01 eV. For large supercells with low symmetry, we strongly recommend switching off symmetry. Self\\-consistent EVGW and QPGW calculations------------------------------------------- Self\\-consistent *QPGW* calculations are only supported in a QP picture. As for *QPGW*0, it is possible to update the eigenvalues only (ALGO\\=*EVGW* or *GW* for VASP.5\\.X), or the eigenvalues and one\\-electron orbitals (ALGO\\=*QPGW* or *scGW* in VASP.5\\.2\\.11 and older). In all cases, a QP picture is maintained, *i.e.*, satellite peaks (shake ups and shake downs) can not be accounted for in the self\\-consistency cycle. Self\\-consistent *QPGW* calculations can be performed by simply repeatedly calling VASP using:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = EVGW   \u00a0! \"GW\" in VASP.5.X, eigenvalues only  or alternativelyALGO = QPGW   \u00a0! \"scGW\" in VASP.5.2.11 and older, eigenvalues and one electron orbitals  ``` For QPGW0 or QPGW, nondiagonal terms in the Hamiltonian are accounted for, *e.g.* the linearized QP equation is diagonalized, and the one\\-electron orbitals are updated [\\[3]](#cite_note-shishkin:prl:2007-3).Alternatively (and preferably), the user can specify an electronic iteration counter using NELMGW (NELM in VASP.6\\.2 and older):  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05NELMGW = 3  \u00a0! use NELM in VASP.6.2 and olderALGO = EVGW \u00a0! \"GW\" in VASP.5.X # or  ALGO = QPGW \u00a0! \"scGW\" in VASP.5.2.11 and older  ``` In this case, the one\\-electron energies (\\=QP energies) are updated 3 times (starting from the DFT eigenvalues) in both G and W. For ALGO\\=*QPGW* (or ALGO\\=*scGW* in VASP.5\\.2\\.11 and older), the one electron energies and one electron orbitals are updated 3 times [\\[3]](#cite_note-shishkin:prl:2007-3). As for ALGO \\= *QPGW0* (or *scGW0* in vasp.5\\.2\\.11 and older), the \"static\" COHSEX approximation can be selected by setting NOMEGA\\=1 [\\[6]](#cite_note-bruneval:prb:06-6). To improve convergence to the ground\\-state, the charge density is mixed using a Kerker type mixing starting with VASP.5\\.3\\.2 (see IMIX). The mixing parameters AMIX, BMIX, AMIX\\_MAG, BMIX\\_MAG, AMIN can be adjusted, if convergence problems are encountered.Alternatively, the mixing may be switched off by setting IMIX\\=0 and controlling the step width for the orbitals using the parameter TIME (which defaults to 0\\.4\\). This selects a fairly sophisticated damped MD algorithm that is also used for DFT methods when ALGO\\=Damped. This method is generally more reliable for metals and materials with strong charge sloshing. Additional information about this method is found here. ### Caveats Fully self\\-consistent QPGW calculations with an update of the orbitals in   G {\\\\displaystyle G}  and  W {\\\\displaystyle W} [\\[3]](#cite_note-shishkin:prl:2007-3) require significant care and are prone to diverge (QPGW0 calculations are usually less critical). As discussed, above, one can select this mode using:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = QPGW \u00a0! or \"scGW\" in VASP.5.2.11 and older, eigenvalues and one-electron orbitalsNELMGW = number of steps\u00a0! use NELM for VASP.6.2 and older  ``` However, one *caveat* applies to this case: when the orbitals are updated, the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  (stored in the WAVEDER file) will become incompatible with the orbitals.This can cause severe problems and convergence to the incorrect solution.  | **Warning:** For metals, in general, we recommend omitting the LOPTICS tag and removing the WAVEDER file from the directory. || --- | For insulators, VASP (version 5\\.3\\.2 or higher) can update the WAVEDER file in each electronic iteration if the finite difference method is used to calculate the first derivative of the orbitals with respect to   k {\\\\displaystyle k}  :  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = QPGW\u00a0! \"scGW\" in VASP.5.2.11 and older, eigenvalues and one-electron orbitalsNELMGW  = 10\u00a0! use NELM in VASP.6.2 and olderLOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.  ``` The combination LOPTICS\\=.TRUE.; LPEAD\\=.TRUE. is required since   \u03b4 H \u2212  \u03f5  n  k  S  \u03b4  k  i {\\\\displaystyle {\\\\frac {\\\\delta H\\-\\\\epsilon \\_{n{\\\\bf {k}}}S}{\\\\delta {k}\\_{i}}}}  is not available for *GW* like methods.LPEAD\\=.TRUE. circumvents this problem by calculating the derivatives of the orbitals using numerical differentiation on the finite k\\-point grid (this option is presently limited to insulators). Vertex corrections are presently not documented. This is a feature still under construction, and we recommend collaborating with the Vienna group if you desperately need that feature. Low scaling GW algorithms========================= The GW implementations in VASP described in the papers of Shishkin *et al.*[\\[1]](#cite_note-shishkin:prb:2006-1) [\\[2]](#cite_note-shishkin:prb:2007-2) avoids storage of the Green's function   G {\\\\displaystyle G}  as well as Fourier transformations between time and frequency domain entirely. That is, all calculations are performed solely on the real frequency axis using Kramers\\-Kronig transformations for convolutions in the equation of   \u03c7 {\\\\displaystyle \\\\chi }  and  \u03a3 {\\\\displaystyle \\\\Sigma }  in reciprocal space.  As of VASP.6 a new cubic scaling GW algorithm [\\[7]](#cite_note-liu:prb:2016-7) (called space\\-time implementation in the following) can be selected. This approach follows the idea of Rojas *et al.* [\\[8]](#cite_note-rojas:prl:1995-8) and performs the GW self\\-consistency cycle on imaginary time   t \u2192 i \u03c4 {\\\\displaystyle t\\\\to i\\\\tau }  and imaginary frequency axes   \u03c9 \u2192 i \u03c9 {\\\\displaystyle \\\\omega \\\\to i\\\\omega }  . | **Tip:** Using the low\\-scaling GW algorithm also calculates the total energy in the Random Phase approximation (RPA), which is described in a separate article. || --- | Low scaling, single shot GW calculations: G0W0R----------------------------------------------- The low\\-scaling analogue of G0W0 is selected with ALGO\\=G0W0R. In contrast to the single\\-shot GW calculations on the real\\-axes, here the self\\-energy   \u03a3 \\=  G  0  W  0 {\\\\displaystyle \\\\Sigma \\=G\\_{0}W\\_{0}}  is determined on the imaginary frequency axis. To this end, the overall scaling is reduced by one order of magnitude and is cubic with respect to the system size,because a small value for NOMEGA can be used (usually \\<20\\).  This algorithm evaluates: * Single\\-shot GW quasiparticle energies (from an analytical continuation of the self\\-energy to the real axis)[\\[7]](#cite_note-liu:prb:2016-7) * Natural orbitals from the first order change of the density matrix (i.e.   G  0  \u03a3  G  0 {\\\\displaystyle G\\_{0}\\\\Sigma G\\_{0}} ), see the NATURALO tag for more information [\\[9]](#cite_note-ramberger:jcp:2019-9). | **Mind:** This selection ignores NELMGW. || --- | Following INCAR file selects the low\\-scaling GW algorithm:  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.  ALGO = G0W0RNOMEGA = 12\u00a0! small number of frequencies necessary  ``` Search the OUTCAR file for the following lines  ```  QP shifts evaluated in KS or natural orbital/ Bruckner basis  k-point   1\u00a0:       0.0000    0.0000    0.0000  band No.  KS-energies   sigma(KS)    QP-e(linear)    Z         QP-e(zeros)     Z        occupation    Imag(E_QP)    QP_DIFF TAG        1      -7.1627      -8.6732      -8.2451       0.7166      -8.2346       0.7026       2.0000      -1.3101       0.0000   2       2      -2.0901      -3.4155      -3.0350       0.7129      -3.0272       0.7011       2.0000      -0.5582      -0.0000   2       3      -2.0901      -3.4155      -3.0350       0.7129      -3.0272       0.7011       2.0000      -0.5582       0.0000   2       4      -2.0901      -3.4155      -3.0350       0.7129      -3.0272       0.7011       2.0000      -0.5582      -0.0000   2       5       0.4603      -0.8219      -0.4904       0.7414      -0.4814       0.7273       2.0000      -0.1902       0.0000   2       6       0.4603      -0.8219      -0.4904       0.7414      -0.4814       0.7273       2.0000      -0.1902      -0.0000   2  ``` Here column four is obtained by a linearization of the self\\-energy around the Kohn\\-Sham energies (second column) and can be compared to the third column of single\\-shot GW calculations on the real axis.Column six represents another set of QP\\-energies that is obtained from the roots of the following equation  \u27e8  \u03d5  n  q  ( 0 )  \\|  T \\+  V  e x t  \\+  V  h  \\+ \u03a3 ( \u03c9 )  \\|  \u03d5  n  q  ( 0 )  \u27e9 \u2212 \u03c9 \\= 0 {\\\\displaystyle \\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma (\\\\omega )\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle \\-\\\\omega \\=0} These roots represent the poles of the Green's function in the spectral representation.  Optional: RPA Forces-------------------- Optionally, RPA forces can be calculated by adding following line to the INCAR:  ``` LRPAFORCE = .TRUE.   ``` After the QP\\-energies, VASP performs a linear\\-response calculation that is required for the RPA forces.[\\[10]](#cite_note-ramberger:prl:118-10)Following data block in the OUTCAR file can be found after a successful run:  ```POSITION                                       TOTAL RPA FORCE (eV/Angst)-----------------------------------------------------------------------------------     0.17542     -0.22348      0.17542        -0.292069      7.581315     -0.292069     1.12850      1.31044      1.12850         0.304683     -7.605527      0.304683-----------------------------------------------------------------------------------   total drift:                                0.012614     -0.024212      0.012614 SUGGESTED UPDATED POSCAR (direct coordinates)  step----------------------------------------------------------------------------------- -0.00958461  -0.00958461   0.13485779         0.04179056   0.04179056   0.00283088  0.25787833   0.25787833   0.22191754        -0.04337198  -0.04337198   0.00431513  ``` | **Warning:** Currently RPA forces for metallic systems are not supported. || --- | Low scaling, partially self\\-consistent GW calculations: EVGW0R--------------------------------------------------------------- | **Mind:** available as of vasp 6\\.4\\.0 || --- | The low\\-scaling analogue of EVGW0 is selected with ALGO\\=EVGW0R.Following INCAR file selects this algorithm:  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.  ALGO = EVGW0R NELMGW = 4 \u00a0! number of iterations in GNOMEGA = 12\u00a0! small number of frequencies necessary  ``` After each iteration, a similar block of data as for ALGO\\=G0W0R calculations is written to OUTCAR showing the NBANDSGW updated quasi\\-particle energies (poles) of the Green's function.  Partially self\\-consistent GW calculations: GW0R------------------------------------------------ The space\\-time implementation allows for true self\\-consistent GW calculations. That is, the solution of the Dyson equation for the Green's function can be obtained with a modest computational effort. The main procedure of a self\\-consistent GW calculation consists of four main steps * Obtain Green's function   G  G  G \u2032  ( j )  (  q  , i  \u03c9  n  ) \\=  \\[  \u03b4  G  G \u2032  \u2212  \u03a3  G  G \u2032  ( j \u2212 1 )  (  q  , i  \u03c9  n  )  G  G  G \u2032  ( j \u2212 1 )  (  q  , i  \u03c9  n  )  ]  \u2212 1  G  G  G \u2032  ( j \u2212 1 )  (  q  , i  \u03c9  n  ) {\\\\displaystyle G\\_{\\\\bf {GG'}}^{(j)}({\\\\bf {q}},i\\\\omega \\_{n})\\=\\\\left\\[\\\\delta \\_{\\\\bf {GG'}}\\-\\\\Sigma \\_{\\\\bf {GG'}}^{(j\\-1\\)}({\\\\bf {q}},i\\\\omega \\_{n})G\\_{\\\\bf {GG'}}^{(j\\-1\\)}({\\\\bf {q}},i\\\\omega \\_{n})\\\\right]^{\\-1}G\\_{\\\\bf {GG'}}^{(j\\-1\\)}({\\\\bf {q}},i\\\\omega \\_{n})} * Compute irreducible polarizability   \u03c7  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212  G  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  )  G  ( j )  (  r  \u2032  ,  r  , \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi ^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})G^{(j)}({\\\\bf {r}}',{\\\\bf {r}},\\-i\\\\tau \\_{m})} * Determine screened potential   W  G  G  \u2032  ( j )  (  q  ,  \u03c9  m  ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  ( j )  (  q  ,  \u03c9  m  )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(j)}({\\\\bf {q}},\\\\omega \\_{m})\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(j)}({\\\\bf {q}},\\\\omega \\_{m})V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})} * Calculate GW self\\-energy   \u03a3  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212  G  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  )  W  ( j )  (  r  \u2032  ,  r  , i  \u03c4  m  ) {\\\\displaystyle \\\\Sigma ^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})W^{(j)}({\\\\bf {r}}',{\\\\bf {r}},i\\\\tau \\_{m})} This procedure can be selected with the following INCAR settings  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.  NELMGW = number of iterations wanted\u00a0! NELM in 6.2 and olderALGO = GW0R\u00a0! ALGO = scGW0R has the same effect here, that is self-consistency in G, no update in W  ``` The number of self\\-consistency steps can be set with the NELMGW tag. Due to efficiency, VASP performs each step in the Hartree\\-Fock basis. This is the reason why there are two sets of QP\\-energies found after the first iteration (one for the QP\\-energies in the KS\\-basis and one for the QP energies in the HF basis)After the second iteration, only the QP energies obtained in the HF basis are printed, and a similar output as follows is found in the OUTCAR file   ```QP shifts evaluated in HF basisk-point   1\u00a0:       0.0000    0.0000    0.0000band No.  KS-energies   sigma(KS)    QP-e(linear)    Z         QP-e(zeros)     Z        occupation    Imag(E_QP)    QP_DIFF TAG      1      -7.1626      -8.6510      -8.2275       0.7154      -8.2173       0.7017       2.0000      -1.3177       0.0000   2     2      -2.0899      -3.4157      -3.0348       0.7127      -3.0269       0.7008       2.0000      -0.5614       0.0000   2     3      -2.0899      -3.4157      -3.0348       0.7127      -3.0269       0.7008       2.0000      -0.5614      -0.0000   2     4      -2.0899      -3.4157      -3.0348       0.7127      -3.0269       0.7008       2.0000      -0.5614       0.0000   2     5       0.4604      -0.8170      -0.4857       0.7407      -0.4768       0.7266       2.0000      -0.1945       0.0000   2     6       0.4604      -0.8170      -0.4857       0.7407      -0.4768       0.7266       2.0000      -0.1945      -0.0000   2     7       0.4604      -0.8170      -0.4857       0.7407      -0.4768       0.7266       2.0000      -0.1945       0.0000   2     8       5.1013       4.0069       4.2594       0.7693       4.2645       0.7598       2.0000      -0.0602       0.0000   2  ``` Here the meaning of each column is the same as for the other low\\-scaling GW algorithms.  Fully self\\-consistent GW caluclations: GWR------------------------------------------- If the screened potential should be updated during the self\\-consistency circle [\\[11]](#cite_note-grumet:prb:2018-11) the following INCAR file can be used  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.  NELMGW = number of iterations wanted\u00a0! use NELM in VASP.6.2 and olderALGO = GWR\u00a0! ALGO = scGWR has the same effect here, that is self-consistency in G and W  ``` The output is similar to partially self\\-consistent GW calculations, with the difference that *KS\\-energies* are replaced by the QP energies from previous iteration.  ### Caveats Using this option, similar caveats can be expected as for ALGO\\=*EVGW* and *QPGW* calculations and we recommend to leave out the LOPTICS and LPEAD line for metals.  The cubic scaling space\\-time GW algorithm requires considerably more memory than the corresponding quartic\\-scaling implementations, two Green's functions   G (  r ,  r \u2032  , i  \u03c4  n  ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau \\_{n})}  have to be stored in real\\-space. To reduce the memory overhead, VASP exploits Fast Fourier Transformations (FFT) to avoid storage of the matrices on the (larger) real space grid, on the one hand. The precision of the FFT can be selected with PRECFOCK, where usually the values *Fast* sufficient. On the other hand, the code avoids storage of redundant information, i.e., both the Green's function and polarizability matrices are distributed as well as the individual imaginary grid points. The distribution of the imaginary grid points can be set by hand with the NTAUPAR and NOMEGAPAR tags, which splits the imaginary grid points NOMEGA into NTAUPAR time and NOMEGAPAR groups. For this purpose both tags have to be divisors of NOMEGA.  The default values are usually reasonable choices provided the tag MAXMEM is set correctly and we strongly recommend to set MAXMEM instead of NTAUPAR.  | **Important:** As of version 6\\.2, MAXMEM is estimated automatically (if not set) from the \"MemAvailable\" entry of the Linux kernel in \"/proc/meminfo\". || --- | The required storage for a low\\-scaling RPA or GW calculation depends mostly on NTAUPAR, the number of MPI groups that share same imaginary time points. A rough estimate for the required bytes is given by   ```(NGX*NGY*NGZ)*(NGX_S*NGY_S*NGZ_S) / ( NCPU  / NTAUPAR ) * 16  ``` where \"NCPU\" is the number of MPI ranks used for the job,\"NGX,NGY,NGZ\" denotes the number of FFT grid points for the exact exchange and \"NGX\\_S,NGY\\_S,NGZ\\_S\" the number of FFT grid points for the supercell. Note, both grids are written to the OUTCAR file after the lines  ```FFT grid for exact exchange (Hartree Fock)FFT grid for supercell:  ``` The smaller NTAUPAR is set, the less memory per node the job requires to finish successfully.  The approximate memory requirement is calculated in advance and printed to screen and OUTCAR as follows:  ```min. memory requirement per mpi rank 1234 MB, per node 9872 MB  ```"}
{"file_name": "Stochastic_LTMP2.md", "content": "Overview> MP2> LTMP2> stochastic LTMP2 > High energy contributions using stochastic LTMP2\")> List of tutorialsOn this page, we explain how to perform a calculation using the **stochastic LTMP2**[\\[1]](#cite_note-schaefer2018-1) algorithm. Make sure you successfully completed the preparation steps Hartree\\-Fock ground state and Hartree\\-Fock virtuals. **NOTE:** *If you use this algorithm, please cite reference [\\[1]](#cite_note-schaefer2018-1) in your publication in addition to the standard VASP reference.* The INCAR file-------------- The LTMP2 calculation can simply be performed using the following INCAR file  ```ALGO = ACFDTRK LSMP2LT = .TRUE.ESTOP = # accuracy of energy per tau-pointNSTORB = # number of stochastic orbitals per cycleNOMEGA = # number of tau-points (see below)NBANDS = # same valule as in the Hartree-Fock unoccupieds step ( = number of plane-waves)ENCUT = # same value as in the Hartree-Fock stepLORBITALREAL = .TRUE.PRECFOCK = Fast  ``` Make sure that VASP reads the WAVECAR file from the Hartree\\-Fock virtuals step. The setting for PRECFOCK is strongly recommended, since the code heavily relies on real space grid FFTs. #### NOMEGA flag The number of   \u03c4 {\\\\displaystyle \\\\tau } \\-points is controlled by the NOMEGA flag. This is necessary to calculate the Laplace transformed energy denominator (see Ref [\\[1]](#cite_note-schaefer2018-1) for details),  1  \u03b5  i  \\+  \u03b5  j  \u2212  \u03b5  a  \u2212  \u03b5  b  \\= \u2212  \u222b  0  \u221e  e  \u2212 (  \u03b5  i  \\+  \u03b5  j  \u2212  \u03b5  a  \u2212  \u03b5  b  ) \u03c4  d  \u03c4  . {\\\\displaystyle {\\\\frac {1}{\\\\varepsilon \\_{i}\\+\\\\varepsilon \\_{j}\\-\\\\varepsilon \\_{a}\\-\\\\varepsilon \\_{b}}}\\=\\-\\\\int \\_{0}^{\\\\infty }{\\\\textrm {e}}^{\\-(\\\\varepsilon \\_{i}\\+\\\\varepsilon \\_{j}\\-\\\\varepsilon \\_{a}\\-\\\\varepsilon \\_{b})\\\\tau }\\\\;{\\\\textrm {d}}\\\\tau \\\\;.} Usually it is sufficient to set NOMEGA to 6\\. For materials with a small bandgap it is worth checking if the MP2 energy changes with increasing NOMEGA (e.g. 8 or 10\\). Note, that the MP2 energy diverges with 1/bandgap, independent of NOMEGA. #### ESTOP flag This flag defines the stop condition for the stochastic algorithm. It defines the energy accuracy in units of eV for each individual tau\\-point of the two individual MP2 energy contributions (direct MP2 term \\+ exchange MP2 term). Since the statistical errors of each contribution is independent, the standard deviation of the MP2 energy can be estimated as   \u03c3 \\= ESTOP  \u2217  2 \u22c5 NOMEGA  . {\\\\displaystyle \\\\sigma \\={\\\\texttt {ESTOP}}\\*{\\\\sqrt {2\\\\cdot {\\\\texttt {NOMEGA}}}}\\\\;.} According to our experience, the error of the resulting MP2 energy can then be safely estimated by   \u00b1 2 \u03c3 {\\\\displaystyle \\\\pm 2\\\\sigma }  . Thus, if you require an MP2 energy with a maximum error of   \u0394 {\\\\displaystyle \\\\Delta } , you should set  ESTOP  \\=  \u0394  2 \u22c5  2 \u22c5 NOMEGA  . {\\\\displaystyle {\\\\texttt {ESTOP}}\\={\\\\frac {\\\\Delta }{2\\\\cdot {\\\\sqrt {2\\\\cdot {\\\\texttt {NOMEGA}}}}}}\\\\;.} #### NSTORB flag This flag defines the number of stochastic orbitals per cycle, i.e. the number of stochastic orbitals that define one stochastic sample. If the sample is not large enough, the calculations is repeated until the accuracy, defined by ESTOP, is reached. As a rule of thumb we recommend to set NSTORB  \\= NBANDS  . {\\\\displaystyle {\\\\texttt {NSTORB}}\\={\\\\sqrt {\\\\texttt {NBANDS}}}\\\\;.} Parallelization--------------- The stochastic LTMP2 algorithm supports parallelization with MPI and OpenMP (OMP). The optimal setting is to set the number of MPI ranks as well as the **KPAR** flag to the number of cores (\\#cores), i.e. start VASP using  ```mpirun -np #cores vasp  ``` and write  ```KPAR = #cores  ``` in the INCAR file. With this setting the entire set of Hartree\\-Fock orbitals (WAVECAR) is available on each MPI rank, which is necessary to calculate stochastic samples independently. Note, that **KPAR** is only used to control the distribution of the orbitals and has nothing to do with **k**\\-point parallelization here. However, for very large systems (large WAVECAR files) the available storage per MPI rank could be insufficient to store the entire set of orbitals. In this case, simply decrease the **KPAR**. Note that the available memory for the orbitals can be calculated by (memory per MPI rank) \\* (number of MPI ranks) / KPAR. For example, if your WAVECAR file has 17 GB you need 2\\*17 GB \\= 34 GB of memory to distribute the orbitals (the factor 2 is due to double precision). If want to use 64 cores with 4 GB per core and 64 MPI ranks, you have to set **KPAR** \\= 4\\. In this case the orbitals are distributed over 64/4 \\= 16 MPI ranks. Each MPI rank will still be able to perform independent stochastic calculations, however, a bit more MPI communication is necessary.  It is also possible to increase the memory per MPI rank using shared memory with OMP. This is a viable option if your available memory per core is too small, decreasing **KPAR** does not help or you don't want to set too small **KPAR** values. However, in general, it is recommended to solve memory issues with the **KPAR** flag first."}
{"file_name": "CO_partial_DOS.md", "content": "Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials Task---- Calculation of the DOS of a CO molecule (using p4vasp) Input----- ### POSCAR  ```CO molecule in a box 1.0         \u00a0! universal scaling parameters 8.0 0.0 0.0 \u00a0! lattice vector  a(1) 0.0 8.0 0.0 \u00a0! lattice vector  a(2) 0.0 0.0 8.0 \u00a0! lattice vector  a(3)1 1          \u00a0! number of atoms for each speciessel          \u00a0! selective degrees of freedom are changedcart         \u00a0! positions in cartesian coordinates 0 0 0       F F T \u00a0! first atom 0 0 1.143   F F T \u00a0! second atom  ``` ### INCAR  ```SYSTEM = CO molecule in a boxISMEAR = 0  \u00a0! Gaussian smearingLORBIT = 11  ``` ### KPOINTS  ```Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0  ``` Calculation----------- * The PROCAR file gives valuable information of the character of the one electron states: | LORBIT\\=10 | DOSCAR and l decomposed PROCAR file || --- | --- || LORBIT\\=11 | DOSCAR and lm decomposed PROCAR file | * We'll use LORBIT\\=11 and see if we can distinguish   p  x {\\\\displaystyle p\\_{x}}  and  p  z {\\\\displaystyle p\\_{z}}  states. ### PROCAR  ```band   3 # energy  -11.46540832 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz    dx2    tot  1  0.000  0.510  0.000  0.036  0.000  0.000  0.000  0.000  0.000  0.546  2  0.000  0.146  0.000  0.010  0.000  0.000  0.000  0.000  0.000  0.157tot  0.000  0.656  0.000  0.047  0.000  0.000  0.000  0.000  0.000  0.703 band   4 # energy  -11.46540832 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz    dx2    tot  1  0.000  0.036  0.000  0.510  0.000  0.000  0.000  0.000  0.000  0.546  2  0.000  0.010  0.000  0.146  0.000  0.000  0.000  0.000  0.000  0.157tot  0.000  0.047  0.000  0.656  0.000  0.000  0.000  0.000  0.000  0.703  ```  ```band   5 # energy   -8.76483386 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz    dx2    tot  1  0.001  0.000  0.135  0.000  0.000  0.000  0.000  0.000  0.000  0.136  2  0.172  0.000  0.261  0.000  0.000  0.000  0.000  0.000  0.000  0.433tot  0.173  0.000  0.396  0.000  0.000  0.000  0.000  0.000  0.000  0.569  ``` * To plot the DOS start p4vasp: [](File_Fig_CO_1.html) Download--------  COstates.tgz Overview> O atom> O atom spinpolarized> O atom spinpolarized low symmetry> O dimer> CO> CO vibration> CO partial DOS> H2O>H2O vibration> H2O molecular dynamics> Further things to try > List of tutorials"}
{"file_name": "ML_MHIS.md", "content": "ML\\_MHIS= \\[integer]   Default: **ML\\_MHIS** \\= 10nDescription: This tag sets the number of estimated errors stored in memory to determine the threshold for error estimation in the machine learning force field method for ML\\_ICRITERIA\\=1\\. For ML\\_ICRITERIA\\=2, the history length is 50 x ML\\_MHIS (or hard coded to 400\\).  --- The use of this tag in combination with the learning algorithms is described here: here. ML\\_ICRITERIA\\=1: The ML code stores ML\\_MHIS errors from previous training steps: immediately after a re\\-training of the ML\\-FF, the estimated errors of the forces are reevaluated for the current structure (that was also just added as training structure). The average and the maximum error of the forces is stored in the history. After ML\\_MHIS updates of the force field, the threshold ML\\_CTIFOR is updated the first time and is then updated after every further update of the ML\\-FF. We recommend to read the section ML\\_ICRITERIA for further details. ML\\_ICRITERIA\\=2: Averaging is performed over 50 x ML\\_MHIS error predictions. Every MD step is considered in the averaging (as opposed to above, where only structures after re\\-training are considered)."}
{"file_name": "Spin_spirals.md", "content": "Generalized Bloch condition--------------------------- Spin spirals may be conveniently modeled using a generalization of the Bloch condition (set LNONCOLLINEAR\\=.TRUE. and LSPIRAL\\=.TRUE.):  \\[  \u03a8  k  \u2191  (  r )  \u03a8  k  \u2193  (  r )  ]  \\=  (  e  \u2212 i  q \u22c5  R  /  2  0  0  e  \\+ i  q \u22c5  R  /  2  )  \\[  \u03a8  k  \u2191  (  r \u2212 R )  \u03a8  k  \u2193  (  r \u2212 R )  ]  , {\\\\displaystyle \\\\left\\[{\\\\begin{array}{c}\\\\Psi \\_{\\\\bf {k}}^{\\\\uparrow }({\\\\bf {r)}}\\\\\\\\\\\\Psi \\_{\\\\bf {k}}^{\\\\downarrow }({\\\\bf {r)}}\\\\end{array}}\\\\right]\\=\\\\left({\\\\begin{array}{cc}e^{\\-i{\\\\bf {q\\\\cdot {\\\\bf {R/2}}}}}\\&0\\\\\\\\0\\&e^{\\+i{\\\\bf {q\\\\cdot {\\\\bf {R/2}}}}}\\\\end{array}}\\\\right)\\\\left\\[{\\\\begin{array}{c}\\\\Psi \\_{\\\\bf {k}}^{\\\\uparrow }({\\\\bf {r\\-R)}}\\\\\\\\\\\\Psi \\_{\\\\bf {k}}^{\\\\downarrow }({\\\\bf {r\\-R)}}\\\\end{array}}\\\\right],} *i.e.*, from one unit cell to the next the up\\- and down\\-spinors pick up an additional phase factor of   exp \u2061 ( \u2212 i  q  \u22c5  R  /  2 ) {\\\\displaystyle \\\\exp(\\-i{\\\\bf {q}}\\\\cdot {\\\\bf {R}}/2\\)}  and  exp \u2061 ( \\+ i  q  \u22c5  R  /  2 ) {\\\\displaystyle \\\\exp(\\+i{\\\\bf {q}}\\\\cdot {\\\\bf {R}}/2\\)} , respectively,where **R** is a lattice vector of the crystalline lattice, and **q** is the so\\-called spin\\-spiral propagation vector. The spin\\-spiral propagation vector is commonly chosen to lie within the first Brillouin zone of the reciprocal space lattice, and has to be specified by means of the QSPIRAL\\-tag. The generalized Bloch condition above gives rise to the following behavior of the magnetization density:  m  (  r  \\+  R  ) \\=  (  m  x  (  r  ) cos \u2061 (  q  \u22c5  R  ) \u2212  m  y  (  r  ) sin \u2061 (  q  \u22c5  R  )  m  x  (  r  ) sin \u2061 (  q  \u22c5  R  ) \\+  m  y  (  r  ) cos \u2061 (  q  \u22c5  R  )  m  z  (  r  )  ) {\\\\displaystyle {\\\\bf {m}}({\\\\bf {r}}\\+{\\\\bf {R}})\\=\\\\left({\\\\begin{array}{c}m\\_{x}({\\\\bf {r}})\\\\cos({\\\\bf {q}}\\\\cdot {\\\\bf {R}})\\-m\\_{y}({\\\\bf {r}})\\\\sin({\\\\bf {q}}\\\\cdot {\\\\bf {R}})\\\\\\\\m\\_{x}({\\\\bf {r}})\\\\sin({\\\\bf {q}}\\\\cdot {\\\\bf {R}})\\+m\\_{y}({\\\\bf {r}})\\\\cos({\\\\bf {q}}\\\\cdot {\\\\bf {R}})\\\\\\\\m\\_{z}({\\\\bf {r}})\\\\end{array}}\\\\right)} This is schematically depicted below:the components of the magnization in the *xy*\\-plane rotate about the spin\\-spiral propagation vector **q**.   [](File_Spinspiral.html)  **N.B.**: This does not mean that the magnetisation density may not have contributions along the *z*\\-direction.These, however, will not be affected by the generalized Bloch condition, *i.e.*,   m  z  (  r  ) {\\\\displaystyle m\\_{z}({\\\\bf {r}})}  will simply show the usual cell periodicity. If one explicitly wants to keep the magnetisation density from developing components along the *z*\\-direction set:  ```LZEROZ = .TRUE.  ``` This will set   m  z  (  r  ) \\= 0 {\\\\displaystyle m\\_{z}({\\\\bf {r}})\\=0}  at each iteration step of the electronic minimisation. Basis set considerations------------------------ The generalized Bloch condition redefines the Bloch functions as follows:  \u03a8  k  \u2191  (  r ) \\=  \u2211  G  C  k  G  \u2191  e  i (  k \\+  G \u2212  q  2  ) \u22c5  r {\\\\displaystyle \\\\Psi \\_{\\\\bf {k}}^{\\\\uparrow }({\\\\bf {r)\\=\\\\sum \\_{\\\\bf {G}}{\\\\rm {C\\_{\\\\bf {k{\\\\bf {G}}}}^{\\\\uparrow }e^{i({\\\\bf {k\\+{\\\\bf {G\\-{\\\\frac {\\\\bf {q}}{2}})\\\\cdot {\\\\bf {r}}}}}}}}}}}}  \u03a8  k  \u2193  (  r ) \\=  \u2211  G  C  k  G  \u2193  e  i (  k \\+  G \\+  q  2  ) \u22c5  r {\\\\displaystyle \\\\Psi \\_{\\\\bf {k}}^{\\\\downarrow }({\\\\bf {r)\\=\\\\sum \\_{\\\\bf {G}}{\\\\rm {C\\_{\\\\bf {k{\\\\bf {G}}}}^{\\\\downarrow }e^{i({\\\\bf {k\\+{\\\\bf {G\\+{\\\\frac {\\\\bf {q}}{2}})\\\\cdot {\\\\bf {r}}}}}}}}}}}} This changes the Hamiltonian only minimally:  (  H  \u2191\u2191  V  x c  \u2191\u2193  V  x c  \u2193\u2191  H  \u2193\u2193  )  \u2192  (  H  \u2191\u2191  V  x c  \u2191\u2193  e  \u2212 i  q \u22c5  r  V  x c  \u2193\u2191  e  \\+ i  q \u22c5  r  H  \u2193\u2193  )  , {\\\\displaystyle \\\\left({\\\\begin{array}{cc}H^{\\\\uparrow \\\\uparrow }\\&V\\_{\\\\rm {xc}}^{\\\\uparrow \\\\downarrow }\\\\\\\\V\\_{\\\\rm {xc}}^{\\\\downarrow \\\\uparrow }\\&H^{\\\\downarrow \\\\downarrow }\\\\end{array}}\\\\right)\\\\rightarrow \\\\left({\\\\begin{array}{cc}H^{\\\\uparrow \\\\uparrow }\\&V\\_{\\\\rm {xc}}^{\\\\uparrow \\\\downarrow }e^{\\-i{\\\\bf {q\\\\cdot {\\\\bf {r}}}}}\\\\\\\\V\\_{\\\\rm {xc}}^{\\\\downarrow \\\\uparrow }e^{\\+i{\\\\bf {q\\\\cdot {\\\\bf {r}}}}}\\&H^{\\\\downarrow \\\\downarrow }\\\\end{array}}\\\\right),} where in   H  \u2191\u2191 {\\\\displaystyle H^{\\\\uparrow \\\\uparrow }}  and  H  \u2193\u2193 {\\\\displaystyle H^{\\\\downarrow \\\\downarrow }}  the kinetic energy of a plane wave component changes to:  H  \u2191\u2191  :  \\|  k  \\+  G  \\|  2  \u2192  \\|  k  \\+  G  \u2212  q  /  2  \\|  2 {\\\\displaystyle H^{\\\\uparrow \\\\uparrow }:\\\\qquad \\|{\\\\bf {k}}\\+{\\\\bf {G}}\\|^{2}\\\\rightarrow \\|{\\\\bf {k}}\\+{\\\\bf {G}}\\-{\\\\bf {q}}/2\\|^{2}}  H  \u2193\u2193  :  \\|  k  \\+  G  \\|  2  \u2192  \\|  k  \\+  G  \\+  q  /  2  \\|  2 {\\\\displaystyle H^{\\\\downarrow \\\\downarrow }:\\\\qquad \\|{\\\\bf {k}}\\+{\\\\bf {G}}\\|^{2}\\\\rightarrow \\|{\\\\bf {k}}\\+{\\\\bf {G}}\\+{\\\\bf {q}}/2\\|^{2}} In the case of spin\\-spiral calculations the energy cutoff of the basis set of the individual spinor components is specified by means of the ENINI\\-tag. Additionally one needs to set ENMAX appropriately:ENMAX needs to be chosen larger than ENINI, and large enough so that the plane wave components of both the up\\-spinors as well as the components of the down\\-spinor all have a kinetic energy smaller than ENMAX.This is the case when:  E N M A X  \u2265  \u210f  2  2 m  (  G  i n i  \\+  \\|  q  \\|  )  2 {\\\\displaystyle {\\\\mathtt {ENMAX}}\\\\geq {\\\\frac {\\\\hbar ^{2}}{2m}}\\\\left(G\\_{\\\\rm {ini}}\\+\\|q\\|\\\\right)^{2}} where  G  i n i  \\=  2 m  \u210f  2  E N I N I {\\\\displaystyle G\\_{\\\\rm {ini}}\\={\\\\sqrt {{\\\\frac {2m}{\\\\hbar ^{2}}}{\\\\mathtt {ENINI}}}}} In most cases it is more than sufficient to set ENMAX\\=ENINI\\+100. To judge whether ENMAX was chosen large enough one will always get a warning at runtime, *e.g.*  ``` ----------------------------------------------------------------------------- |                                                                             ||           W    W    AA    RRRRR   N    N  II  N    N   GGGG  \u00a0!!!           ||           W    W   A  A   R    R  NN   N  II  NN   N  G    G \u00a0!!!           ||           W    W  A    A  R    R  N N  N  II  N N  N  G      \u00a0!!!           ||           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG  \u00a0!            ||           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                ||           W    W  A    A  R    R  N    N  II  N    N   GGGG  \u00a0!!!           ||                                                                             ||      To represent the spin spiral you requested, with a kinetic             ||      energy cutoff of ENINI=  300.00 eV, choose ENMAX >  331.21 eV          ||      Currently ENMAX=  400.00 eV                                            ||                                                                             | -----------------------------------------------------------------------------  ``` Symmetry-------- Generally the introduction of a spin\\-spiral will lower the symmetry of the system.At present VASP can not correctly account for the presence of a spin\\-spiral in its symmetry analysis. Therefore the use of symmetry has to be switched of completely:  ```ISYM = -1  ``` Initialization of the magnetic subsystem---------------------------------------- As for all calculations on magnetic systems it is highly advisable to initialise the magnetic subsystem by means of the MAGMOM tag. Note that, in case one does **not** specify initial magnetic moments, the initial order of the magnetic subsystem will be ferromagnetic (see the MAGMOM default values),and even if the groundstate of your system is not ferromagnetic, the initial ferromagnetic state might very well be a local minimum in which the system can remain stuck during the electronic minimisation. Of course, in case of spin\\-spiral calculations the magnetic subsystem is not completely characterized by the magnetic configuration within the unit cell,but will additionally depend on how the magnetization density changes from one unit cell to the next as determined by the spiral propagation vector. Consider the following two examples: * Two magnetic atoms per unit cell, both with initial magnetic moments *M* along the *y*\\-axis and   q \\= ( 0 , 0 ,  1 2  ) {\\\\displaystyle q\\=(0,0,{\\\\frac {1}{2}})}  :  ```MAGMOM = 0 M 0  0 M 0QSPIRAL= 0.0 0.0 0.5  ``` *i.e.*, a double layer antiferromagnet:[](File_Ss1.html)  * Two magnetic atoms per unit cell, both with initial magnetic moments *M* along the *y*\\- and *x*\\-axis, respectively, and   q \\= ( 0 , 0 ,  1 2  ) {\\\\displaystyle q\\=(0,0,{\\\\frac {1}{2}})}  :  ```MAGMOM = 0 M 0  M 0 0QSPIRAL= 0.0 0.0 0.5  ``` *i.e.*, a spin spiral:[](File_Ss2.html)  **N.B.**: both of the aforementioned magnetic arrangements obey the same generalized Bloch condition,   q \\= ( 0 , 0 ,0\\.5 ) {\\\\displaystyle q\\=(0,0,0\\.5\\)} , and during the electronic minimisation one may transform into the other if that lowers the total energy.In other words the generalized Bloch condition dictates the change in the magnetization density from one unit cell to the next, but it does not explicitly constrain the magnetic order *within* the unit cells themselves. Local magnetic moments---------------------- Analysing the magnetisation density from spin\\-spiral calculations in terms of site resolved local magnetic moments is a bit more involved than usual.Problems arise from the fact that in most cases the spin\\-spiral period will not be commensurate with the unit cell (otherwise there would be no reason to use the generalised Bloch theorem).This means that *implicitly* the magnetisation density is not cell periodic, as illustrated in the figure below: [](File_Ss3.html)The usual ways to analyse the site resolved local charge density and magnetisation (*e.g.* setting the LORBIT\\-tag: output in the PROCAR file and at the end of the OUTCAR file) do not account for this.As a workaround one may (ab)use the infrastructure created for the *constrained magnetic moment* approach, as follows:  ```I_CONSTRAINED_M = 1LAMBDA = 0.0  ``` *i.e.*, one switches on the constrained magnetic moment approach (I\\_CONSTRAINED\\_M\\=1) but sets the penalty potential to zero (LAMBDA\\=0\\.0).  **N.B.**: do not forget to set RWIGS appropriately. The magnetisation density will correctly integrated inside site centered sphere of radius RWIGS,and the resulting local magnetic moments are written under M\\_int, to the OSZICAR file.For instance:  ``` E_p =  0.00000E+00  lambda =  0.000E+00<lVp>=  0.00000E+00 DBL =  0.00000E+00 ion        MW_int                 M_int  1  1.178  0.000  0.000    1.573  0.000  0.000RMM:   8    -0.819213822792E+01    0.53417E-07   -0.43965E-08  2542   0.310E-03  ``` In the above, the local magnetic moment on ion 1 (after iteration 8\\) is   M \\=1\\.573  x ^  \u03bc  B {\\\\displaystyle M\\=1\\.573{\\\\hat {x}}\\\\;\\\\mu \\_{\\\\rm {B}}}  . Related Tags and Sections------------------------- LSPIRAL,QSPIRAL,LZEROZ,LNONCOLLINEAR,MAGMOM,ENINI,ENMAX,ISYM,I\\_CONSTRAINED\\_M,LAMBDA,M\\_CONSTR,RWIGS  ---"}
{"file_name": "KBLOCK.md", "content": "KBLOCK= \\[integer]   Default: **KBLOCK** \\= NSWnDescription: After `KBLOCK * NBLOCK` ionic steps the averaged pair\\-correlation function and DOS are written to the files PCDAT and DOSCAR. More details can be found on the page describing the tag NBLOCK.  ---"}
{"file_name": "Magnetism.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorialsThe tutorial is made of the following parts: 1. fcc Ni (revisited).html \"Fcc Ni (revisited)\")2. NiO3. NiO LSDA\\+U4. Spin\\-orbit coupling in a Ni monolayer5. Spin\\-orbit coupling in a Fe monolayer6. constraining local magnetic moments"}
{"file_name": "PHON_NWRITE.md", "content": "PHON\\_NWRITE= \\[integer]n| Default: **PHON\\_NWRITE** | \\= 1 |  || --- | --- | --- | Description: PHON\\_NWRITE determines how much output is written to the OUTCAR file when computing the phonon dispersion LPHON\\_DISPERSION\\=.TRUE.  --- Positive numbers mean human\\-readable output, and negative numbers mean one\\-line format. The available options are: | PHON\\_NWRITE | Description || --- | --- || 2 | For each q point, write the same as 1 and then the phonon modes with the displacement of each atom in the three cartesian directions per line. || 1 | For each q point, q\\-point coordinates are written in one line and the phonon frequencies are written one branch per line in different units. || 0 | No phonon output is written to OUTCAR. || \\-1 | For each q point, only a single line is written containing q\\-point coordinates and frequencies. || \\-2 | For each q point, q\\-point coordinates and frequencies are written in separate blocks and frequencies are reported in different units. || \\-3 | Like \\-2, but in addition, the phonon eigenvectors are written for each q point. | | **Mind:** Only available as of VASP 6\\.3\\.2\\. || --- |"}
{"file_name": "NWRITE.md", "content": "NWRITE= 0 \\| 1 \\| 2 \\| 3 \\| 4   Default: **NWRITE** \\= 2nDescription: This tag determines how much will be written to the file OUTCAR ('verbosity tag').  --- The options for NWRITE are given in detail as | NWRITE | 0 | 1 | 2 | 3 || --- | --- | --- | --- | --- || contributions to electronic energy at each electronic iteration | f | f | e | e || convergence information | f | f | e | e || eigenvalues | f\\+l | i | i | e || DOS \\+ charge density | f\\+l | i | i | e || total energy and electronic contributions | i | i | i | i || stress | i | i | i | i || basis vectors | f\\+l | i | i | i || forces | f\\+l | i | i | i || lattice and space group information for ISYM\\>0 | f | f | f | f || symmetry operations for ISYM\\>0 |  |  |  | f || timing information |  |  | X | X | where the following abbreviations have been used | f\\+l | first and last ionic step || --- | --- || f | first ionic step || i | each ionic step || e | each electronic step || X | when applicable | | **Tip:** For long molecular\\-dynamics runs, use NWRITE\\=0 or NWRITE\\=1\\. For short runs use NWRITE\\=2\\. NWRITE\\=3 might give information if something goes wrong. || --- | NWRITE\\=4 is for debugging only."}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_mMD2.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example the nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl via meta dynamics is correctly simulated by using extra \"repulsive potential walls.\" Input----- ### POSCAR  ```   1.00000000000000     12.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    12.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    12.0000000000000000   1   3   2cart         5.91331371  7.11364924  5.78037960         5.81982231  8.15982106  5.46969017         4.92222130  6.65954232  5.88978969         6.47810398  7.03808479  6.71586385         4.32824726  8.75151396  7.80743202         6.84157897  6.18713289  4.46842049  ``` ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=1000                                           # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # metaDynamics with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probabilityHILLS_BIN=50                                       # update the time-dependent bias                                                           # potential every 50 stepsHILLS_H=0.005                                      # height of the GaussianHILLS_W=0.05                                       # width of the Gaussian##############################################################################  ``` * Same INCAR file as in the previous example (Nuclephile Substitution CH3Cl \\- mMD). ### ICONST  ```R 1 5 0R 1 6 0S 1 -1 5  ``` * This file is the same as in the previous example (Nuclephile Substitution CH3Cl \\- mMD1). ### PENALTYPOT  ```  -3.00000   1.00000   0.30000   3.00000   1.00000   0.30000  ``` Calculation----------- In principle, meta dynamics always seeks for the path of least resistance. In the case of our model system this corresponds to the dissociation of the vdW complex (which is linked with a lower barrier than the SN2 reaction). In order to avoid this undesired process, an extra bias potential (\"repulsive walls\") is used whose role is to restrict our sampling to a relevant region (approx.   \u2212 3  \u00c5  \\< {\\\\displaystyle \\-3\\\\mathrm {\\\\AA} \\<}  collective variable   \\< 3 A {\\\\displaystyle \\<3A} ). In fact, the positions of walls can be chosen arbitrarily \\- we only require that the region between the walls contains all the information we are interested in (in this case we want to see free\\-energy minima for both \"reactant\" and \"product\" as well as the \"transition state\"). In order for the walls to be effective, we also require that they are significantly higher than the expected reaction barrier (otherwise the likelihood to cross the wall during meta dynamics would be higher than that for the barrier). From the potential energy profile (static calculations not reported here) we obtained a reasonable guess for the reaction barrier \\- it is about 0\\.4 eV \\- hence the height for the wall of 1 eV should be sufficient. ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD (note that the free energy is independent of the masses of atoms). The bias potential is specified in the PENALTYPOT file. For practical reasons, we split our (presumably long) meta dynamics calculation into shorter runs of length of 1000 fs (NSW\\=1000; POTIM\\=1\\). At the end of each run the HILLSPOT file (containing bias potential generated in previous run) must be copied to the PENALTYPOT fiel (the input file with bias potential) \\- this is done automatically in the script *run* which looks as follows:  ```#!/bin/bash runvasp=\"mpirun -np x executable_path\" # ensure that this sequence of MD runs is reproduciblecp POSCAR.init POSCARcp INCAR.init INCARrseed=\"RANDOM_SEED =         311137787                0                0\"echo $rseed >> INCAR  i=1while [ $i -le 50 ]  do   # start vasp  $runvasp   # ensure that this sequence of MD runs is reproducible  rseed=$(grep RANDOM_SEED REPORT |tail -1)  cp INCAR.init INCAR  echo $rseed >> INCAR   # use bias potential generated in previous mMD run  cp HILLSPOT PENALTYPOT   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` ### Time evolution of distance During the simulation, the time evolution of collective variable can be monitored using the script *timeEv.sh*:  ```#!/bin/bash rm timeEvol.dat  i=1while [ $i -le 1000 ] do  if test -f REPORT.$i  then    grep fic REPORT.$i |awk '{print $2 }' >>timeEvol.dat fi  let i=i+1done  ``` To execute this script type:  ```bash ./timeEv.sh  ``` This script creates the file *timeEvol.dat*. To visualize that file execute the following command:  ```gnuplot -e \"set terminal jpeg; set xlabel 'timestep'; set ylabel 'Collective variable (Ang)'; set style data lines; plot 'timeEvol.dat'\" > timeEvol.jpg  ``` The plot of the collective variable with respect to the timestep should look similar to this: [](File_TimeEvol_CHCl3_mMD2.html) If everything goes well, you should observe that the amplitude of oscillations of the collective variable increases (as larger and larger region of configuration space is visited by the meta dynamics) and at some poin the collective variable switches from a positive value (corresponding to reactant) to a negative value (correpsonding to product). At the end of your calculation, you should observe depending on how long you ran the calculation (50 or more ps) one or two crossings of the transition state (where the collective variable is equal to zero). ### 1D free\\-energy profile The current bias potential generated by meta dynamics is written to the HILLSPOT file. A negative image of this potential serves as an approximation of the free\\-energy profile and it can be visualized using the script *calcprofile1D.py*:  ```#!/usr/bin/python  from math import * def gauss_pot(x,x0,h,w):  en=h*e**(-(x-x0)**2/2.0/w**2)  return en f=raw_input('File name?\')ff=f+'.xyz'  name=raw_input('x1_min x1_max N:\')name=name.split()a0=float(name[0])a1=float(name[1])num=int(name[2]) f=open(f,'r') data=[]h=[]w=[]for line in f.readlines():  line=line.split()  x=[]  if (len(line)>2):    for i in range(len(line)-2):      x.append(float(line[i]))    data.append(x)    h.append(float(line[-2]))    w.append(float(line[-1]))f.close() ff=open(ff,'w')step=(a1-a0)/numx=a0for i in range(1,num):  en=0.0  penalty1=0  penalty2=0  x=x+step  for j in range(len(data)):    x0=data[j][0]    en_=gauss_pot(x,x0,h[j],w[j])    en+=en_  ff.write(`x`+'\\t'+`-en`+'\')CH3Cl_mMD1.tgzff.close()  ``` This script projects one\\-dimensional Gaussians defined in the input file (such as PENALTYPOT or HILLSPOT) onto a regular grid of   N {\\\\displaystyle N}  points defined by a user. The user is asked to provide the following data: (a) name of the input file, (b) the initial (x1\\_min) and the final (x1\\_max) grid point position, and the number of grid points (M) for the axis corresponding to the collective variable. The result is written in file with extension *.xyz*. In our example we will use the following inputs: Run script:  ```python calcprofile1D.py  ``` *File name?*  ```HILLSPOT  ``` *x1\\_min x1\\_max N:*  ```-5 5 500  ``` To plot the 1D free energy profile type:  ```gnuplot -e \"set terminal jpeg; set xlabel 'r (Ang)'; set ylabel 'Free energy (eV)'; set style data lines; plot 'HILLSPOT.xyz'\" > 1D_free_energy.jpg  ``` The resulting free energy profile should look like the following: [](File_1D_free_energy_CHCl3_mMD2.html) Download--------  CH3Cl\\_mMD2\\.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "NGZF.md", "content": "NGZF= \\[integer]   Default: **NGZF** \\= set in accordance with PREC, NGZ, ENCUT and ENAUGnDescription: NGZF sets the number of grid points in the \"fine\" FFT grid along the first lattice vector.  --- On this \"fine\" FFT mesh the localized augmentation charges are represented if ultrasoft pseudopotentials (USPPs) or the PAW method are used. In case USPPs are used, the local potentials (exchange\\-correlation, Hartree\\-potential, and ionic potentials) are also calculated on this \"fine\" FFT\\-mesh. By default NGZF is set in accordance with the requested \"precision\" mode PREC, NGZ, and the plane wave kinetic energy cutoffs ENCUT and ENAUG: | PREC | NGZ | NGZF || --- | --- | --- || Normal | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGZ || Single (VASP.5\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGZ || Single (VASP.6\\) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGZ || SingleN (VASP.6\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGZ || Accurate | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGZ || Low | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} || Medium | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 4\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} || High | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 16/3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} | where  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2  E  a u g  \\=  \u210f  2  2  m  e  G  a u g  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}\\\\qquad E\\_{\\\\rm {aug}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {aug}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT and   E  a u g {\\\\displaystyle E\\_{\\\\rm {aug}}} \\=ENAUG. Alternatively, NGZF can be set to a specific value in the INCAR file."}
{"file_name": "SMBJ.md", "content": "SMBJ= \\[real]   Default: **SMBJ** \\= 2nDescription: sets the   \u03c3 {\\\\displaystyle \\\\sigma }  parameter (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) in the LMBJ potential.  --- See the description of the METAGGA tag."}
{"file_name": "LRHFCALC.md", "content": "LRHFCALC= .TRUE. \\| .FALSE.   Default: **LRHFCALC** \\= .FALSE.nDescription: Switch on the decomposition of the exchange functional for the range\\-separated hybrid RSHXLDA or RSHXPBE functionals.  --- If LRHFCALC\\=.TRUE. the exchange functional is decomposed into short\\-range LDA (or PBE) and long\\-range Hartree\\-Fock for calculations with the range\\-separated hybrid RSHXLDA or RSHXPBE functionals.[\\[1]](#cite_note-iikura:jcp:2001-1)[\\[2]](#cite_note-gerber:cpl:2005-2)[\\[3]](#cite_note-gerber:jcp:2007-3) The screening parameter is specified by means of the HFSCREEN tag. The setting of the RSHXLDA and RSHXPBE functionals is shown on the page listing the hybrid functionals. | **Mind:*** If LRHFCALC\\=.TRUE., then LHFCALC\\=.TRUE. is automatically set. * If LRHFCALC\\=.TRUE., then AEXX\\=1 is automatically set, but AEXX can be set to another value. || --- |"}
{"file_name": "Ni_100_surface_bandstructure.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Calculation of the bandstructure of a Ni (100\\) surface. Input----- ### POSCAR  ```fcc (100) surface                          3.53000000000000          0.5000000000000000    0.5000000000000000    0.0000000000000000    -0.5000000000000000    0.5000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    5.0000000000000000 Ni 5Selective dynamicsDirect  0.0000000000000000  0.0000000000000000  0.0000000000000000   F   F   F  0.5000000000000000  0.5000000000000000  0.1000000000000014   F   F   F  0.0000000000000000  0.0000000000000000  0.2000000000000028   F   F   F  0.5000000000000000  0.5000000000000000  0.3004245271852446   T   T   T  0.0000000000000000 -0.0000000000000000  0.3959414474619545   T   T   T   0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  ``` ### INCAR  ```  ICHARG = 11general:  SYSTEM = clean (100) nickel surface  ENMAX  = 270  ISMEAR = 2\u00a0; SIGMA = 0.2  ALGO = Normal spin:  ISPIN = 2  MAGMOM = 5*1   LORBIT = 11  ``` * ICHARG\\=11: Read in charge density (1\\) and do not update it (\\+10\\) \\- non\\-selfconsistent run.* N.B.: You need to topy the CHGCAR file of example Ni 100 surface DOS into the directory where you want to run this calculation. ### KPOINTS  ```kpoints for band-structure G-X-M-G 13reziprok   .00000   .00000   .00000    1   .12500   .00000   .00000    1   .25000   .00000   .00000    1   .37500   .00000   .00000    1   .50000   .00000   .00000    1    .50000   .12500   .00000    1   .50000   .25000   .00000    1   .50000   .37500   .00000    1   .50000   .50000   .00000    1    .37500   .37500   .00000    1   .25000   .25000   .00000    1   .12500   .12500   .00000    1   .00000   .00000   .00000    1  ``` [](File_Fig_Ni_100_surfband_1.html) * 13 k points along line   \u0393 \u2212 X \u2212 M \u2212 \u0393 {\\\\displaystyle \\\\Gamma \\-X\\-M\\-\\\\Gamma }  .* The coordinates are given in reciprocal coordinates.* Each point has weight 1\\. Calculation----------- * In the OUTCAR file the status message on the actual job (non\\-selfconsistent calculation) is given:  ``` ...Static calculationcharge density remains constant during runspin polarized calculation ...  ``` * The bandstructure can be plotted using p4vasp: [](File_Fig_Ni_100_surfband_3.html) Download--------  Ni100clean\\_band.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "Density_mixing.md", "content": "**Density mixing** refers to the way of updating, e.g., the charge density with each iteration step in a self\\-consistent calculation within density\\-functional theory (DFT). In the case of magnetism and metaGGAs, VASP can also consider the spin\\-magnetization density and kinetic\\-energy density. Selecting the optimal procedure enhances the convergence of the electronic minimization and avoids charge sloshing. In many cases, VASP automatically selects suitable values, and it is unnecessary to set the tags related to density mixing manually.  Theory------ In each iteration of a DFT calculation, we start from a given charge density   \u03c1  i n {\\\\displaystyle \\\\rho \\_{in}}  and obtain the corresponding Kohn\\-Sham (KS) Hamiltonian and its eigenstates, i.e., KS orbitals. From the occupied KS orbitals, we can compute a new charge density   \u03c1  o u t {\\\\displaystyle \\\\rho \\_{out}} . Thus, conceptionally VASP solves a multidimensional fixed\\-point problem. To solve this problem, VASP uses nonlinear solvers that work with the input vector   \u03c1  i n {\\\\displaystyle \\\\rho \\_{in}}  and the residual   R \\=  \u03c1  o u t  \u2212  \u03c1  i n {\\\\displaystyle R\\=\\\\rho \\_{out}\\-\\\\rho \\_{in}} . The optimal solution is obtained within the subspace spanned by the input vectors. The most efficient density\\-mixing schemes are the Broyden[\\[1]](#cite_note-broyden:mc:1965-1) and the Pulay[\\[2]](#cite_note-pulay:cpl:1980-2) mixing (IMIX\\=4\\). In the Broyden[\\[1]](#cite_note-broyden:mc:1965-1) mixing, an approximate of the Jacobian matrix is iteratively improved to find the optimal solution. In the Pulay[\\[2]](#cite_note-pulay:cpl:1980-2) mixing, the input vectors are combined assuming linearity to minimize the residual. The implementation in VASP is based on the work of Johnson[\\[3]](#cite_note-johnson:prb:1988-3). Kresse and Furthm\u00fcller[\\[4]](#cite_note-kresse:cms:1996-4) extended on it and demonstrated that the Broyden and Pulay schemes transform into each other for certain choices of weights for the previous iterations. They also introduced an efficient metric putting additional weight on the long\\-range components of the density (small   G {\\\\displaystyle \\\\mathbf {G} }  vectors), resulting in a more robust convergence. Furthermore, VASP uses a Kerker preconditioning[\\[5]](#cite_note-kerker:prb:1981-5) to improve the choice of the input density for the next iteration. How to------ ### Improve the convergence For most simple DFT calculations, the default choice of the convergence parameters is well suited to converge the calculation. As a first step, we suggest visualizing your structure or examining the output for warnings to check for very close atoms. That can happen during a structure relaxation if VASP performs a large ionic step. If the structure is correct, we recommend increasing the number of steps NELM and only if that doesn't work starting to tweak the parameters AMIX or BMIX; preferably the latter. ### Magnetic calculations For magnetic materials, the charge density and the spin\\-magnetization density need to converge. Hence, if you have problems to converge to a desired magnetic solution, try to calculate first the non\\-magnetic groundstate, and continue from the generated WAVECAR and CHGCAR file. For the continuation job, you need to set  ```ISPIN = 2ICHARG = 1   ``` in the INCAR file. ### MetaGGAs For the density mixing schemes to work reliably, the charge density mixer must know all quantities that affect the total energy during the self\\-consistency cycle. For a standard DFT functional, this is solely the charge density. In the case of meta\\-GGAs, however, the total energy depends on the kinetic\\-energy density. In many cases, the density\\-mixing scheme works well enough without passing the kinetic\\-energy density through the mixer, which is why LMIXTAU\\=.FALSE., per default. However, when the self\\-consistency cycle fails to converge for one of the algorithms exploiting density mixing, e.g., IALGO\\=38 or 48, one may set LMIXTAU\\=.TRUE. to have VASP pass the kinetic\\-energy density through the mixer as well.It sometimes helps to cure convergence problems in the self\\-consistency cycle."}
{"file_name": "LMP2LT.md", "content": "LMP2LT= .FALSE. \\| .TRUE.n| Default: **LMP2LT** | \\= .FALSE. |  || --- | --- | --- | Description: LMP2LT selects a Laplace transformed MP2 algorithm.  --- If LMP2LT\\=.TRUE. and ALGO\\=ACFTDRK is set, a quartic scaling Laplace transformed MP2 algorithm is selected.[\\[1]](#cite_note-schaefer:JCP2017-1) This tag should be used in combination with KPAR to tweak parallelization as described in this tutorial."}
{"file_name": "VDW_S8.md", "content": "VDW\\_S8= \\[real]n| Default: **VDW\\_S8** | \\= 1\\.0 | for DFT\\-D3 || --- | --- | --- | Description: VDW\\_S8 defines the damping function parameter   s  8 {\\\\displaystyle s\\_{8}}  .  --- VDW\\_S8 sets the damping function parameter   s  8 {\\\\displaystyle s\\_{8}}  in the DFT\\-D3 and DFT\\-D4 methods."}
{"file_name": "AMIX.md", "content": "AMIX= \\[real]n| Default: **AMIX** | \\= 0\\.8 | if ISPIN\\=1 and one uses US\\-PPs || --- | --- | --- ||  | \\= 0\\.4 | if ISPIN\\=2 and one uses US\\-PPs ||  | \\= 0\\.4 | if one uses PAW datasets | Description: AMIX specifies the linear mixing parameter.  --- In VASP the eigenvalue spectrum of the charge dielectric matrix is calculated and written to the OUTCAR file at each electronic step. This allows a rather easy optimization of the mixing parameters, if required. Search in the OUTCAR file for  ```eigenvalues of (default mixing * dielectric matrix)  ``` The parameters for the mixing are optimal if the mean eigenvalue \u0393mean\\=1, and if the width of the eigenvalue spectrum is minimal. For an initial linear mixing (BMIX\u22480\\) an optimal setting for AMIX can be found easily by setting AMIXoptimal\\=AMIXcurrent\\*\u0393mean. For the Kerker scheme (IMIX\\=1\\) either AMIX or BMIX can be optimized, but we recommend to change only BMIX and keep AMIX fixed (you must decrease BMIX if the mean eigenvalue is larger than one, and increase BMIX if the mean eigenvalue \u0393mean\\<1\\).However, the optimal AMIX depends very much on the system, for metals this parameter usually has to be rather small, e.g. AMIX\\= 0\\.02\\."}
{"file_name": "DYNMATFULL.md", "content": "This file contains the eigenvalues, eigenvectors from the diagonalization of the dynamic matrix. Initial positions and atomic information of the system are also stored in this file.  This file is only set if PHON\\_NSTRUCT\\<0 is set.   ---"}
{"file_name": "NOMEGA.md", "content": "NOMEGA= \\[integer]n| Default: **NOMEGA** | \\= 100 | for GW calculations || --- | --- | --- ||  | \\= 12 | for ACFDT calculations | Description: NOMEGA specifies the number of (imaginary) frequency and imaginary time grid points.  --- Typically NOMEGA should be chosen around 50\\-100 (for the parallel version, NOMEGA should be dividable by the number of compute nodes to obtain maximum efficiency). For quick and memory conserving calculations, it is sufficient to set NOMEGA to values around NOMEGA \\= 20\\-30, but then you must expect errors of the order of 20\\-50 meV for the gap and 100\\-200 meV for the bottom of the conduction band. We furthermore recommend to increase NOMEGA not beyond 100 for a   k {\\\\displaystyle k} \\-point sampling of 4\u00d74\u00d74 points/atom: the joint DOS and the self\\-energy tend to possess spurious fine structure related to the finite   k {\\\\displaystyle k} \\-point grid. This fine structure is smoothed when smaller values for NOMEGA are used or if more   k {\\\\displaystyle k} \\-points are used. For 6\u00d76\u00d76   k {\\\\displaystyle k} \\-points/atom NOMEGA can be usually increased to 200\\-300 without noticing problems associated with this kind of noise. Note that the spectral method (see LSPECTRAL) scales very favorable with respect to the number of frequency points hence NOMEGA\\=30 is usually only slightly faster than NOMEGA\\=100\\.  * N.B: Low\\-scaling GW and RPA/ACFDT calculations require considerably fewer imaginary frequency (and time) points."}
{"file_name": "Vaspin.md", "content": "This file can be used to replace the typical INCAR, POSCAR, POTCAR, and KPOINTS files using a single HDF5 file. Currently, we do not provide a tool to systematically create this file from scratch, instead, this feature is currently mostly intended to reproduce previous calculations. A vaspout.h5 file that resulted from previous calculations can be renamed to vaspin.h5, copied to an empty directory, and used as input for a new VASP run."}
{"file_name": "ML_NMDINT.md", "content": "ML\\_NMDINT= \\[integer]n| Default: **ML\\_NMDINT** | \\= 1 | for ML\\_MODE \\= SELECT || --- | --- | --- ||  | \\= 10 | else | Description: Tag to control the minimum interval to get training samples in the machine learning force field method.  --- The usage of this tag in combination with the learning algorithms is described here: here This tag defines a lower threshold for taking new configurations from the MD, so that as long as the upper threshold for the Bayesian error (e.g. ML\\_CDOUB times ML\\_CTIFOR) is not exceeded, at least ML\\_NMDINT MD steps are preformed using the MLFF (i.e. no first principles calculation is performed). This avoids that many nearly identical structures are added."}
{"file_name": "NpH_ensemble.md", "content": "The NpH ensemble (isoenthalpic\u2013isobaric ensemble) is a statistical ensemble that is used to study material properties under the conditions of a constant particle number N, a pressure p fluctuating around an equilibrium pressure   \u27e8 p \u27e9 {\\\\displaystyle \\\\langle p\\\\rangle }  and a conserved enthalpy H (up to numerical inaccuracies). This page describes how to sample the NpH ensemble from a molecular\\-dynamics run.  **Instructions for setting up a NpH ensemble**  To run an NpH molecular\\-dynamics simulation `MDALGO = 3` has to be used. The LANGEVIN\\_GAMMA and LANGEVIN\\_GAMMA\\_L have to be zero to disable any thermostatting. By setting the tag `LANGEVIN_GAMMA = 0` the friction term andthe stochastic term of the Langevin thermostat will be zero, such that the velocities are determined by the Hellmann\\-Feynman forces or machine\\-learned force fields only. Setting the tag `LANGEVIN_GAMMA_L = 0`,removes the stochastic term and the friction term from the barostat, resulting in a box updatedepending solely on the kinetic stress tensor. The inertia of lattice degrees\\-of\\-freedom is controlled with the PMASS tag. | NpH ensemble | Langevin || --- | --- || MDALGO | 3 || ISIF | 3 || LANGEVIN\\_GAMMA\\_L | 0 || LANGEVIN\\_GAMMA | 0 || optional tags to set | PMASS | It is recommended to equilibrate the system of interest with an NPT molecular\\-dynamics run before starting the NpH run. A general guide for molecular\\-dynamics simulations can be found on the molecular\\-dynamics page. *An example INCAR file for the NpH ensemble*  ``` #INCAR molecular-dynamics tags NpH ensemble  IBRION = 0                   # choose molecular-dynamics  MDALGO = 3                   # using Andersen thermostat ISIF = 3                     # compute stress tensor but do not change box volume/shape  TEBEG = 300                  # set temperature  NSW = 10000                  # number of time steps  POTIM = 1.0                  # time step in femto seconds  LANGEVIN_GAMMA = 0.0 0.0     # setting friction and stochastic term of Langevin thermostat zero LANGEVIN_GAMMA_L = 0.0       # setting friction and stochastic term of Langevin barostat zero  ``` | **Mind:** This INCAR file only contains the parameters for the molecular\\-dynamics part. The electronic minimization or the machine learning tags have to be added. || --- |"}
{"file_name": "LMAXFOCKAE.md", "content": "**NMAXFOCKAE**= 1\\|2n| Default: **NMAXFOCKAE** | \\= 1 |  || --- | --- | --- |   **LMAXFOCKAE**= \\[integer]n| Default: **LMAXFOCKAE** | \\= \\-1 | for Hartree\\-Fock and hybrid functionals || --- | --- | --- ||  | \\= 4 | for post DFT methods | Description: **NMAXFOCKAE** and **LMAXFOCKAE** determine whether the overlap densities in the Fock exchange and correlated wave function methods are accurately reconstructed on the plane wave grid (shape restoration). This flag generally only applies to the Fock\\-exchange part as well as many\\-bodypost DFT methods (GW, RPA, MP2, etc.).  --- Detailed Discussion------------------- In the PAW method, the difference between the charge density of the all\\-electron partial waves   \u03d5  \u03b2 {\\\\displaystyle \\\\phi \\_{\\\\beta }}  andthe pseudo partial waves   \u03d5 \\~  \u03b2 {\\\\displaystyle {\\\\tilde {\\\\phi }}\\_{\\\\beta }}  Q  \u03b1 \u03b2  (  r  ) \\=  \u03d5  \u03b1  \u2217  (  r  )  \u03d5  \u03b2  (  r  ) \u2212  \u03d5 \\~  \u03b1  \u2217  (  r  )  \u03d5 \\~  \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })\\=\\\\phi \\_{\\\\alpha }^{\\*}({\\\\mathbf {r} })\\\\phi \\_{\\\\beta }({\\\\mathbf {r} })\\-{\\\\tilde {\\\\phi }}\\_{\\\\alpha }^{\\*}({\\\\mathbf {r} }){\\\\tilde {\\\\phi }}\\_{\\\\beta }({\\\\mathbf {r} })} is usually treated on spherical grids centered at each atom(one\\-center terms inside the PAW spheres, see PAW method and more detailed description for LMAXFOCK). To describe long range electrostatic effects, the *moments* of the differences of the all\\-electron and pseudo charge density also need to be added on the plane wave grid (compensation density, see PAW method).These compensation charges exactly restore the moments of the all\\-electron density on the plane wavegrid. For the Fock exchange the maximum *L* quantum number up to which the augmentation is done is controlled by LMAXFOCK. For the RPA, GW, and most post DFT methods, the one\\-center terms are, however, presentlynot implemented. Depending on the material, this can cause sizable errorsin particular for 3d and (to a lesser extent) 2p, 4d and 5d elements.To correct for this error, an alternative treatment is implementedon the plane wave grid for the exchange and correlation contributions. This allows to restore the all\\-electron densities accurately already on the plane wave gridby specifying the flags **LMAXFOCKAE** and **NMAXFOCKAE**. This improvedtreatment\u2014 termed shape restoration \u2014is available for exchange as well as many body correlation contributions.For exchange, the exact one\\-center terms are also implemented. This means shape restoration is not required and should not change the results. To achieve the improved treatment on the plane wave grid,   Q  \u03b1 \u03b2  (  r  ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }({\\\\mathbf {r} })}  is Fourier transformed to reciprocal space   Q  \u03b1 \u03b2  ( q ) {\\\\displaystyle Q\\_{\\\\alpha \\\\beta }(q)}  and then expandedin a set of orthogonal functions localized at each atomic site. These augmentation chargesare then added to the pseudo charge densities on the plane wave grid. Shape restoration is only accurate up to a certain plane wave cutoff, typically about 150 eV for **NMAXFOCKAE** \\=1, and 400 eV for **NMAXFOCKAE** \\= 2\\. Experience shows that **NMAXFOCKAE** \\=1 is sufficient to predict very accurate energy differences and quite accurate quasiparticle energies.    For **LMAXFOCKAE**\\=\\-1 (the default for DFT and Hartree\\-Fock calculations), only the moments of the all\\-electron charge densities are restored on the plane wave grid. This is the default for Hartree\\-Fock calculations, and the setting is very precise since for Hartree\\-Fock the one\\-center terms are implemented in radial grids as for DFT.  If **LMAXFOCKAE** is set to values larger than \\-1 (and **NMAXFOCKAE**\\=1\\), not only the moments of the all\\-electron charge density are restored on the plane wave grid, but also the all\\-electron charge density is restored up to a typical plane wave energy of 150 eV (controlled by QMAXFOCKAE). This setting yields very accurate results for post DFT methods (MP2, RPA, GW, etc.) for most sp bonded materials. **LMAXFOCKAE** is used to specify the maximum spherical (*L*) quantum number up to which this more accurate treatment is used. The default is **LMAXFOCKAE**\\=4 for post DFT methods.If no accurate augmentation is desired by the user, simply set **LMAXFOCKAE**\\=\\-1 in the INCAR file. If **LMAXFOCKAE** is set to values larger than \\-1 and **NMAXFOCKAE**\\=2, the charge density is restored accurately on the plane wave grid up to a typical plane wave energy of 400 eV. As before, **LMAXFOCKAE** can be used to specify the maximum spherical (*L*) quantum number up to which this more accurate treatment is used. **NMAXFOCKAE**\\=2 yields very accurate results for post DFT methods (MP2, RPA, GW) even for difficult 3d elements. For RPA and MP2 total energy calculations, differences between **NMAXFOCKAE**\\=1 and **NMAXFOCKAE**\\=2 are usually tiny for total energy differences. Since the absolute correlation energies might change, it is, however, vital to use the same setting for**NMAXFOCKAE** and **LMAXFOCKAE**, if energy differences are calculated. For GW calculations, increasing **NMAXFOCKAE** from 1 to 2 might change QP energies by 100\\-200 meV for 3d and late 4d and 5d elements. Despite the improve precision, **NMAXFOCKAE**\\=2 should be used with great caution. Specifically, noise and egg\\-box effects are introduced as **NMAXFOCKAE** is increased. So usethis flag only after extensive tests. The setting for **LMAXFOCKAE** should be also considered carefully. Generally, it suffices to set **LMAXFOCKAE** to twice the maximum *l* quantum number found in the POTCAR file.For instance for sp elements, **LMAXFOCKAE**\\= 2 suffices. For d elements, **LMAXFOCKAE**\\= 4 suffices(a d electron can create charge densities with *L*\\-quantum numbers up to 4\\), whereas for f elements, usersshould test whether **LMAXFOCKAE**\\= 6 is required. More details on shape restoration are explained in Ref.[\\[1]](#cite_note-shishkin:prb:2006-1) and [\\[2]](#cite_note-unzog:prb:2022-2). Usefull Settings---------------- In summary, useful manual settings of **NMAXFOCKAE** and **LMAXFOCKAE** are: * **LMAXFOCKAE**\\=\\-1, to switch off the accurate augmentation altogether (reduces noise in correlation energies).* **LMAXFOCKAE**\\=4 (or larger) to force an accurate treatment for the charge augmentation on the plane wave grid (can be selected even in Hartree\\-Fock type calculations, but causes some additional noise).* **NMAXFOCKAE**\\=2, to select the very accurate augmentation on the plane wave grid. Please check whether the VASP default setting for **LMAXFOCKAE** suffices (OUTCAR file). Use this setting only with care, as it can result in very noisy data for coarse FFT grids."}
{"file_name": "Prepare_a_POTCAR.md", "content": "The POTCAR file is a mandatory input file that holds the pseudopotential for each element in the structure. The templates for each element can be downloaded from the VASP Portal. There are sometimes multiple templates for one element with subtle differences. Step\\-by\\-step instructions--------------------------- **Step 1:** Select the latest version of POTCAR files unless you need to use an older one to reproduce a result. **Step 2:** Choose  * standard potentials for calculations depending mainly on occupied states, e.g., within density\\-functional theory, using hybrid functionals, or* GW variants if the calculation requires high accuracy for unoccupied states, i.e., for optical response and many\\-body perturbation theory. **Step 3:** Select a POTCAR for a certain family of exchange\\-correlation (XC) functionals. | **Tip:** The standard choice is to use the PBE version based on LEXCH\\=PE which has a high transferability to other XC functionals. || --- | All potentials are constructed based on solving the scalar relativistic Schr\u00f6dinger equation for a reference system with a certain XC functional. In most versions, one set is available for the LDA, and one for the GGA. The transferability to other XC functionals is seamless by specifying the XC tag in the INCAR.**Step 4 (optional):** Choose a different variant (reference atomic valence configuration, etc.) specified by the suffix.  | **Tip:** The standard choice is to use the bold version in the list of PAW potentials. || --- | See choosing pseudopotentials. | **Important:** Generally opt for the recommended POTCAR files, but test if the property of interest is sensitive to the choice of the pseudopotential. It may be possible to choose a computationally cheaper version or necessary to select a more demanding one. || --- | **Step 5:** For a single element in the structure, you can copy the POTCAR to the working directory, e.g,  ``` cp /path/to/pot/Al/POTCAR .  ``` For structures with multiple elements, the selected POTCAR files must be concatenated to create one POTCAR file containing all species present in the structure. Combine the potentials by entering, for instance,  ``` cat /path/to/pot/Al/POTCAR /path/to/pot/C/POTCAR /path/to/pot/H/POTCAR > POTCAR   ``` The order of the potentials must correspond to the order of the species in the POSCAR file. | **Tip:** If species names are given in the POSCAR, and the order does not match the order in the POTCAR, a warning is printed, but VASP will still run. || --- | Recommendations and advice-------------------------- | **Important:** Except for the 1st\\-row elements, all PAW potentials are designed to work at an energy cutoff (ENMAX tag in the POTCAR) of roughly 250 eV. This is a key aspect of making the calculation computationally cheap. We recommend performing a convergence study of the quantity of interest with respect to the energy cutoff (ENCUT tag in the INCAR). || --- | | **Mind:** Mismatched order of species in the POSCAR and POTCAR files is a common mistake! Add species names to your POSCAR to receive a warning if this happens. || --- | | **Mind:** You can mix and match POTCAR families. Even combining pseudopotentials generated with different XC functionals is possible, however make sure to specify the XC functional in the INCAR, see XC. || --- | Example for preparing a POTCAR for the Heusler alloy TiCo2Si------------------------------------------------------------------------------------ In this example, we want to prepare a POTCAR for a PBE calculation of ferromagnetic TiCo2Si. We are interested in the energy difference between the ferromagnetic and the nonmagnetic solutions. The structure is defined by the following POSCAR:  ```TiCo2Si 1.0  0.0000000000000000    2.8580789844367893    2.8580789844367893  2.8580789844367893    0.0000000000000000    2.8580789844367893  2.8580789844367893    2.8580789844367893    0.0000000000000000Co Si Ti 2  1  1direct  0.7500000000000000    0.7500000000000000    0.7500000000000000 Co  0.2500000000000000    0.2500000000000000    0.2500000000000000 Co  0.0000000000000000    0.0000000000000000    0.0000000000000000 Si  0.5000000000000000    0.5000000000000000    0.5000000000000000 Ti  ``` We will use the potpaw\\_PBE.64 potential set, and since we are interested in small energy differences caused by different magnetic solutions, we should use potentials with additional semicore\\-states in the valence for the 3d metals. The Co\\_pv and Ti\\_sv potentials seem appropriate for the transition metals. We do not expect Si to become magnetic and are not interested in unoccupied states, so the Si potential is a good choice compared to the harder, computationally more demanding Si\\_GW or even Si\\_sv\\_GW. On a UNIX machine, one can use the `cat` command to concatenate files together. One can redirect the output from `stdout` to a file using the `>` operator. The order in the POSCAR dictates the order in the POTCAR:  ```cat ~/potpaw_PBE.64/Co_pv/POTCAR ~/potpaw_PBE.64/Si/POTCAR ~/potpaw_PBE.64/Ti_sv/POTCAR > ~/scratch/TiCo2Si/POTCAR  ``` Related tags and sections------------------------- Available potentials, POTCAR, Choosing pseudopotentials, Projector\\-augmented\\-wave formalism"}
{"file_name": "XAS_-_Tutorial.md", "content": "Overview> XANES in Diamond> List of tutorialsThis tutorial explains how to calculate the X\\-ray absorption spectrum (XAS) of a given compound in particular the edge and near edge region. The respective spectroscopy is often called XANES (X\\-ray absorption near edge structure) or NEXAFS (near edge X\\-ray absorption fine structure).  This tutorial requires VASP 6\\.0 or higher. The tutorial is made of the following parts: 1. XANES in Diamond"}
{"file_name": "RSMBJ.md", "content": "RSMBJ= \\[real]   Default: **RSMBJ** \\= 7nDescription: sets the   r  s  t h {\\\\displaystyle r\\_{s}^{\\\\mathrm {th} }}  parameter (in bohr) in the LMBJ potential.  --- See the description of the METAGGA tag."}
{"file_name": "PROJCAR.md", "content": "The PROJCAR file contains information about the projections of the Kohn\\-Sham orbitals onto the localized orbitals specified with the LOCPROJ tag.This file is built specifically to be human\\-readable but contains the same information as the LOCPROJ file. For every localized orbital that is generated, a line is written with the following information: * ISITE: the index of the site in the POSCAR file.* R: the position in fractional coordinates.* Radial type: can be one of \"PAW projector\",\"PS partial wave\", \"Hydrogen\\-like\" depending on the choice of **Pr**, **Ps** or **Hy**, respectively. Then, for each Kohn\\-Sham orbital, the k point and spin indexes are reported.For each band, VASP writes the value of the projection   \u27e8  \u03b2  l m  \u03b1  \\|  S  \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\\\langle \\\\beta \\_{lm}^{\\\\alpha }\\|S\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  onto the different angular characters of the radial function. To find a list of the possible angular character, go to LOCPROJ and see the table in **\\<functions\\-Ylm\\-specs\\>**. Related Tags and Sections------------------------- LOCPROJ  ---"}
{"file_name": "IALGO.md", "content": "IALGO= \\-1 \\| 2\\-4 \\| 5\\-8 \\| 15\\-18 \\| 28 \\| 38 \\| 44\\-48 \\| 53\\-58n| Default: **IALGO** | \\= 8 | for VASP.4\\.4 and older || --- | --- | --- ||  | \\= 38 | else (if ALGO is not set) | Description: IALGO selects the algorithm to optimize the orbitals.  --- | **Warning:** We suggest selecting the algorithms via ALGO instead of IALGO. Algorithms other than those available via ALGO are subject to instabilities. || --- | Conjugate gradient algorithms----------------------------- The band\\-by\\-band conjugate gradient algorithms are no longer maintained or supported. * IALGO\\=5\\-8: Conjugate gradient algorithms | **Deprecated:** Not supported since vasp.5\\. || --- | Optimize each band iteratively using a conjugate gradient algorithm. Subspace\\-diagonalization before conjugate gradient algorithm. The conjugate gradient algorithm is used to optimize the eigenvalue of each band.* IALGO\\=5 steepest descent* IALGO\\=6 conjugated gradient* IALGO\\=7 preconditioned steepest descent* IALGO\\=8 preconditioned conjugated gradient IALGO\\=8 is always fastest, whereas IALGO\\=5\\-7 are only implemented for test purposes.Please mind, that IALGO\\=8 is not supported as of VASP.4\\.5, since M. Teter, Corning and M. Payne hold a patent on this algorithm. The algorithms have been replaced by faster and more efficient Davidson\\-like algorithms.* IALGO\\=15\\-18: Conjugate gradient algorithms | **Deprecated:** Not supported since vasp.5\\. || --- | Subspace\\-diagonalization after iterative refinement of the eigenvectors using the conjugate gradient algorithm. These switches are retained for compatibility reasons only and should not be used any longer. Generally IALGO\\=5\\-8 is preferable. Sub\\-switches as above.* IALGO\\=28: Conjugate gradient algorithm | **Deprecated:** Not supported since vasp.5\\. || --- | Subspace\\-diagonalization before conjugate gradient algorithm. No explicit orthonormalization of the gradients to the trial orbitals is done. This setting saves time, but does fail in most cases (mainly included for test purposes). Try IALGO\\=4X (RMM\\-DIIS) instead.The blocked\\-Davidson scheme---------------------------- * IALGO\\=38: Blocked\\-Davidson algorithm (ALGO\\=N). Kosugi algorithm (special blocked\\-Davidson iteration scheme). This algorithm is the default in VASP.4\\.6 and VASP.5\\.X. It optimizes a subset of NSIM bands simultaneously. The optimized bands are kept orthogonal to all other bands. If problems are encountered with the algorithm, try to decrease NSIM. Such problems are encountered, if linear dependencies develop in the search space. By reducing NSIM the rank of the search space is decreased.RMM\\-DIIS--------- * IALGO\\=44\\-48: Residual minimization method direct inversion in the iterative subspace (ALGO\\= F). IALGO\\=44\\-48 does not support hybrid functionals. The RMM\\-DIIS algorithm[\\[1]](#cite_note-wood:jpa:1985-1)[\\[2]](#cite_note-pulay:cpl:1980-2) reduces the number of orthonormalization steps (  O (  N  3  ) {\\\\displaystyle O(N^{3})} ) considerably and is therefore much faster than IALGO\\=8 and IALGO\\=38, at least for large systems and for workstations with a small memory band width. For optimal performance, we recommend to use this switch together with LREAL\\=Auto). The algorithm works in a blocked mode in which several bands are optimized at the same time. This can improve the performance even further on systems with a low memory band width (default is presently NSIM\\=4\\).The following sub\\-switches exist:* IALGO\\=44 steepest descent eigenvalue minimization* IALGO\\=46 residuum\\-minimization \\+ preconditioning* IALGO\\=48 preconditioned residuum\\-minimization (ALGO\\=F) IALGO\\=48 is usually most reliable (IALGO\\=44 and 46 are mainly for test purposes).For IALGO\\=4X, a subspace\\-diagonalization is performed before the residual vector minimization, and a Gram\\-Schmidt orthogonalization is employed after the RMM\\-DIIS step. In the RMM\\-DIIS step, each band is optimized individually (without the orthogonality constraint); a maximum of NRMM iterative steps per band are performed for each band. The default is NRMM\\=4, and we recommend leaving this value unchanged.Please mind, that the RMM\\-DIIS algorithm can fail in rare cases, whereas IALGO\\=38 did not fail for any system tested up to date. Therefore, if you have problems with IALGO\\=48 try first to switch to IALGO\\=38\\.However, in some cases the performance gains due to IALGO\\=48 are so significant that IALGO\\=38 might not be a feasible option. In the following we try to explain what to do if IALGO\\=48 does not work reliably:In general two major problems can be encountered when using IALGO\\=48: First, the optimization of unoccupied bands might fail for molecular dynamics and relaxations. This is because our implementation of the RMM\\-DIIS algorithm treats unoccupied bands more \"sloppy\" then occupied bands during MD's. The problem can be solved rather easily by specifying WEIMIN\\=0 in the INCAR file. In that case all bands are treated accurately.The other major problem (which occurs also for static calculations) is the initialization of the orbitals. Because the RMM\\-DIIS algorithm tends to find eigenvectors which are close the the initial set of trial vectors there is no guarantee to converge to the correct ground state! This situation is usually very easy to recognize; whenever one eigenvector is missing in the final solution, the convergence becomes slow at the end (mind, that it is possible that one state with a small fractional occupancy above the Fermi\\-level is missing). If you suspect that this is the case switch to ICHARG\\=12 (i.e. no update of charge and Hamiltonian) and try to calculate the orbitals with high accuracy (  10  \u2212 6 {\\\\displaystyle 10^{\\-6}} ). If the convergence is fairly slow or stucks at some precision, the RMM\\-DIIS algorithm has problems with the initial set of orbitals (as a rule of thumb not more than 12 electronic iterations should be required to determine the orbital for the default precision for ICHARG\\=12\\). The first thing to do in that case is to increase the number of bands (NBANDS) in the INCAR file. This is usually the simplest and most efficient fix, but it does not work in all cases. This solution is also undesirable for MD's and long relaxations because it increases the computational demand somewhat. A simple alternative \\- which worked in all tested cases \\- is to use IALGO\\=38 (Davidson) for a few non selfconsistent iterations and to switch then to the RMM\\-DIIS algorithm. This setup is automatically selected when ALGO\\= Fast is specified in the INCAR file (IALGO must not specified in the INCAR file in this case).The final option is somewhat complicated and requires an understanding of how the initialization algorithm of the RMM\\-DIIS algorithm works: after the random initialization of the orbitals, the initial orbitals for the RMM\\-DIIS algorithm are determined during a non selfconsistent steepest descent phase (the number of steepest descent sweeps is given by NELMDL, default is NELMDL\\=\\-12 for RMM\\-DIIS). During this initial phase in each sweep, one steepest descent step per orbital is performed between each sub space rotation. This \"automatic\" simple steepest descent approach during the delay is faced with a rather ill\\-conditioned minimization problem and can fail to produce reasonable trial orbitals for the RMM\\-DIIS algorithm. In this case the quantity in the column \"rms\" will not decrease during the initial phase (12 steps), and you must improve the conditioning of the problem by setting the ENINI parameter in the INCAR file. ENINI controls the cutoff during the initial (steepest descent) phase for IALGO\\=48\\. Default for ENINI is ENINI\\= ENCUT. If convergence problems are observed, start with a slightly smaller ENINI; reduce ENINI in steps of 20%, till the norm of the residual vector (column \"rms\") decreases continuously during the first 12 steps.The algorithm can be combined with LDIAG\\=.FALSE. to conserve the initial orbital order (when orbitals are read from the WAVECAR file).A final note concerns the mixing: IALGO\\=48 dislikes too abrupt mixing. Since the RMM\\-DIIS algorithm always stays in the space spanned by the initial orbitals, and too strong mixing (large AMIX, small BMIX) might require discontinuous changes of the orbitals, the initial mixing must not be too sizable for IALGO\\=48\\. Try to reduce AMIX and increase BMIX if you suspect such a situation. Increasing NBANDS also helps in this situation.Direct optimization------------------- * IALGO\\=53\\-58: Treat total free energy as variational quantity and minimize the functional completely selfconsistently[\\[3]](#cite_note-stich:prb:89-3)[\\[4]](#cite_note-gillan:jpc:89-4)[\\[5]](#cite_note-arias:prl:92-5). These algorithms have been carefully optimized and should be selected for Hartree\\-Fock type as well as meta\\-GGA functionals. The present version is rather stable and robust even for metallic systems.Important sub\\-switches:* IALGO\\=53 damped MD with damping term automatically determined by the given time\\-step (ALGO\\=D).* IALGO\\=54 damped MD (velocity quenched or quickmin)* IALGO\\=58 preconditioned conjugated gradient (ALGO\\=A) Furthermore, LSUBROT determines whether the subspace rotation matrix (rotation matrix in the space spanned by the occupied and unoccupied orbitals) is optimized. The current default is LSUBROT\\=.FALSE. This allows for efficient groundstate calculations for insulators. When hybrid functionals are used, LSUBROT\\=.TRUE. can be tried for small gap semiconductors and metals. This algorithm performs standard SCF steps during the direct optimization steps in order to determine an optimal rotation matrix between occupied and unoccupied orbitals. For hybrid functionals, LSUBROT\\=.TRUE. is generally faster, however, in rare cases, it can lead to instabilities[\\[6]](#cite_note-kresse:prb:96-6).The preconditioned conjugate gradient (IALGO\\= 58, ALGO\\= A) algorithm is recommended for insulators. The best stability is usually obtained if the number of bands equals half the number of electrons (non\\-spin\\-polarized case). In this case, the algorithm is fairly robust and foolproof and might even outperform the mixing algorithm.For small gap systems and for metals, it is however usually required (metals) or desirable (semiconductors) to use a larger value for NBANDS. In this case, we recommend using the damped MD algorithm (IALGO\\=53, ALGO\\=Damped) instead of the conjugate gradient.The stability of the all bands simultaneously algorithms depends strongly on the setting of TIME. For the conjugate gradient case, TIME controls the step size in the trial step, which is required in order to perform a line minimization of the energy along the gradient (or conjugated gradient). Too small steps make the line minimization less accurate, whereas too large steps can cause instabilities. The step size is usually automatically scaled by the actual step size minimizing the total energy along the gradient (values can range from 1\\.0 for insulators to 0\\.01 for metals with a large density of states at the Fermi\\-level).For the damped MD algorithm (IALGO\\=53, ALGO\\=Damped), a sensible TIME step is even more important. In this case TIME is not automatically adjusted, and the user is entirely responsible to choose an appropriate value. Too small time steps slow the convergence significantly, whereas too large values will always lead to divergence. It is sensible to optimize this value, in particular, if many different configurations are considered for a particular system. It is recommended to start with a small step size TIME, and to increase TIME by a factor 1\\.2 until the calculations diverge. The largest stable step TIME should then be used for all calculations.The damped MD algorithm can be combined with LDIAG\\=.FALSE. to conserve the initial orbital order (when orbitals are read from the WAVECAR file). The final algorithm IALGO\\=54 also uses a damped molecular dynamics algorithm but quenches the velocities to zero, if they are antiparallel to the present gradient (quick\\-min). It is usually not as efficient as IALGO\\=53, but it is also less sensitive to the TIME parameter. | **Mind:** It is very important to set an appropriate TIME for these algorithms. Furthermore, it might be expedient to set NELMDL to 1 or 2 for molecular dynamics simulations or relaxations in vasp.6\\. See the corresponding section in the documentation of NELMDL. If the ions move by a very large distance during relaxations, even NELMDL\\=3 can be tried (in particular for HF type Hamiltonians). || --- | Miscellaneous------------- * IALGO\\=\\-1: Performance test. VASP does not perform an actual calculation, only some important parts of the program will be executed and the timing for each part is printed out at the end.* IALGO\\=2: Orbitals and one\\-electron energies are kept fixed. One electron occupancies and electronic density of states (DOS) are, however, recalculated. This option is only useful if a pre\\-converged WAVECAR file is read. The option allows running selected post\\-processing tasks, such as local DOS, or the interface code to Wannier90\\.* IALGO\\=3: Orbitals are kept fixed. One\\-electron energies, band structure energies, and the electronic density of states (DOS) are, as well as, the total energy are recalculated for the present Hamiltonian (the one\\-electron occupancies are kept fixed, however). This option is only useful if a pre\\-converged WAVECAR file is read. The option also allows running selected post\\-processing tasks, such as local DOS, or the interface code to Wannier90\\.* IALGO\\=4: Orbitals are updated by applying a sub\\-space rotation. The Hamiltonian is evaluated in the space spanned by the orbitals (read from WAVECAR), and one diagonalization in this space is performed. No optimization outside the subspace spanned by the orbitals is performed. Note: if NBANDS is larger or equal to the total number of plane waves, the resulting one\\-electron orbitals are exact.* IALGO\\=90: Exact Diagonalization. This flag selects an exact diagonalization of the one\\-electron Hamiltonian. This requires a fairly large amount of memory and should be selected with caution. Specifically, we recommend selecting this algorithm to prepare the WAVECAR for RPA or GW calculations, where many unoccupied orbitals are calculated (more than 30\\-50\u00a0% of the states spanned by the full plane\\-wave basis). To speed up the calculations, we recommend performing a routine ground\\-state calculation before calculating the unoccupied states."}
{"file_name": "OUTCAR.md", "content": "The OUTCAR file gives detailed output of a VASP run, including: * A summary of the used input parameters.* Information about the electronic steps, KS\\-eigenvalues.* Stress tensors.* Forces on the atoms.* Local charges and magnetic moments.* Dielectric properties* The amount of output written onto the OUTCAR file can be chosen by modifying the NWRITE tag in the INCAR file.  ---"}
{"file_name": "NBLK.md", "content": "NBLK= \\[integer]n| Default: **NBLK** | \\= \\-1 | VASP.4\\.6 || --- | --- | --- ||  | \\= 256 | in VASP.5\\.2, if dfast | Description: NBLK determines the blocking factor in many BLAS level 3 routines.  --- In some cases, VASP has to perform a unitary transformation of the current orbitals. This is done using a work array CBLOCK and the following FORTRAN code:  ```      DO 100 IBLOCK=0,NPL-1,NBLK         ILEN=MIN(NBLK,NPL-IBLOCK)         DO 200 N1=1,N            DO 200 M=1,ILEN            CBLOCK(M,N1)=C(M+IBLOCK,N1)            C(M+IBLOCK,N1)=0  200    CONTINUEC        C(IBLOCK+I,N)=SUM_(J,K) CH(I,K) CBLOCK(K,N)         CALL ZGEMM ('N', 'N', ILEN, N, N, (1.,0.), CBLOCK, NBLK, CH, N,              &   (1.,0.), C(IBLOCK+1,1), NDIM)  100 CONTINUE  ``` ZGEMM is the matrix   \u00d7 {\\\\displaystyle \\\\times }  matrix multiplication command of the BLAS package. The task performed by this call is indicated by the comment line written above the ZGEMM call. Generally NBLK\\=16 or 32 is large enough for super\\-scalar machines. A large value might be necessary on vector machines for optimal performance (NBLK\\=128\\). Examples that use this tag  ---"}
{"file_name": "Sigma2_Oslo_2019.md", "content": "Lectures-------- * DFT, PW, and PAW: \"VASP: The basics(1\\). DFT, plane waves, PAW, ...\". * electronic convergence, BZ sampling: \"VASP: The basics(2\\). electronic convergence, BZ sampling ...\". * Hybrid functionals: \"VASP: Hybrid functionals\". * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". * Performance: \"VASP: running on HPC resources\". Environment Setup----------------- After login, open a Terminal and enter following command  ```source ~/data/bin/setup_environments.sh   ``` The job scripts found in the tutorial files (job.sh, doall.sh, etc) work only if the environment variables \"vasp\\_std, vasp\\_gam, vasp\\_ncl\" are defined. This is done via  ```export vasp_std=\"mpirun -np 2 /home/notebook/data/bin/vasp_std\"export vasp_gam=\"mpirun -np 2 /home/notebook/data/bin/vasp_gam\"export vasp_ncl=\"mpirun -np 2 /home/notebook/data/bin/vasp_ncl\"  ``` Tutorials--------- For the beginners:  A short introduction to the common Input and Output files. * Atoms and Molecules* Simple Bulk Systems* A bit of Surface Science* Hybrid Functionals* Optical Properties and Dielectric Response* The Random\\-Phase\\-Approximation: GW and ACFDT* The Bethe\\-Salpeter equation* Magnetism Further Examples---------------- #### Nudge Elastic Band Method and (constrained) Molecular Dynamics * Liquid Si \\- Standard MD * Transition State Search of Ammonia * Adsorption of H2O on TiO2 #### Magnetism in NiO * NiO GGA * NiO GGA\\+U * NiO HSE06 * Estimation of J magnetic coupling * Including the Spin\\-Orbit Coupling * Determining the Magnetic Anisotropy * Constraining the local magnetic moments #### NMR calculations * alpha\\-SiO2 * alpha\\-AlF3"}
{"file_name": "Many-body_dispersion_energy_with_fractionally_ionic_model_for_polarizability.md", "content": "A variant of Many\\-body dispersion energy method based on fractionally ionic model for polarizability of Gould[\\[1]](#cite_note-gould:jctc:2016_a-1), hereafter dubbed MBD@rsSCS/FI, has been introduced in Ref.[\\[2]](#cite_note-gould:jctc:2016_b-2)Just like in the original MBD@rsSCS, dispersion energy in MBD@rsSCS/FI is computed using  \\= \u2212  \u222b  F B Z  d  k  v  F B Z  \u222b  0  \u221e  d \u03c9  2 \u03c0  T r  {  l n  (  1  \u2212  A  L R  ( 0 )  ( \u03c9 )  T  L R  (  k  )  )  } {\\\\displaystyle E\\_{\\\\mathrm {disp} }\\=\\-\\\\int \\_{\\\\mathrm {FBZ} }{\\\\frac {d{\\\\mathbf {k} }}{v\\_{\\\\mathrm {FBZ} }}}\\\\int \\_{0}^{\\\\infty }{\\\\frac {d\\\\omega }{2\\\\pi }}\\\\,{\\\\mathrm {Tr} }\\\\left\\\\{\\\\mathrm {ln} \\\\left({\\\\mathbf {1} }\\-{\\\\mathbf {A} }\\_{LR}^{(0\\)}(\\\\omega ){\\\\mathbf {T} }\\_{LR}({\\\\mathbf {k} })\\\\right)\\\\right\\\\}}  .However, the two methods differ in the model used to approximate the atomic polarizabilities (  \u03b1  p  AIM {\\\\displaystyle \\\\alpha \\_{p}^{\\\\text{AIM}}} ) needed to define tensor  A  ( 0 )  ( \u03c9 ) (  k  ) {\\\\displaystyle \\\\mathbf {A} ^{(0\\)}(\\\\omega )({\\\\mathbf {k} })} . The MBD@rsSCS makes use of the pre\\-computed static polarizabilities of neutral atoms (  \u03b1  p atom {\\\\displaystyle \\\\alpha \\_{p}^{\\\\text{atom}}}  )  \u03b1  p  AIM  \\=  \u03b1  p atom  V  p  eff  V  p atom {\\\\displaystyle \\\\alpha \\_{p}^{\\\\text{AIM}}\\=\\\\alpha \\_{p}^{\\\\text{atom}}{\\\\frac {V\\_{p}^{\\\\text{eff}}}{V\\_{p}^{\\\\text{atom}}}}}  ,whereby the volume ratios between interacting and non\\-interacting atoms (  V  p  eff  V  p atom {\\\\displaystyle {\\\\frac {V\\_{p}^{\\\\text{eff}}}{V\\_{p}^{\\\\text{atom}}}}} ) is obtained using conventional Hirshfeld partitioning[\\[3]](#cite_note-hirshfeld:tca:1977-3). Although the MBD@rsSCS/FI employs a similar scaling relation:  \u03b1  p  AIM  ( \u03c9 ) \\=  \u03b1  p  FI  ( \u03c9 )  V  p  eff  V  p  FI {\\\\displaystyle \\\\alpha \\_{p}^{\\\\text{AIM}}(\\\\omega )\\=\\\\alpha \\_{p}^{\\\\text{FI}}(\\\\omega ){\\\\frac {V\\_{p}^{\\\\text{eff}}}{V\\_{p}^{\\\\text{FI}}}}}  ,it relies on Gould's model[\\[1]](#cite_note-gould:jctc:2016_a-1) of frequency\\-dependent polarizabilities (  \u03b1  p  FI  ( \u03c9 ) {\\\\displaystyle \\\\alpha \\_{p}^{\\\\text{FI}}(\\\\omega )} ) and charge densities of non\\-interacting fractional ions combined with iterative Hirshfeld partitioning[\\[4]](#cite_note-bultinck:jcp:07-4). Obviously, the MBD@rsSCS and the MBD@rsSCS/FI are equivalent for non\\-polar systems, such as graphite, but typically yield distinctly different results for polar and ionic materials[\\[2]](#cite_note-gould:jctc:2016_b-2).  The MBD@rsSCS/FI method is invoked by setting IVDW\\=263\\. Optionally, the following parameters can be user\\-defined (the given values are the default ones): * VDW\\_SR\\=0\\.83\u00a0: scaling parameter   \u03b2 {\\\\displaystyle \\\\beta } * LVDWEXPANSION\\=.FALSE.\u00a0: writes the two\\- to six\\- body contributions to the MBD dispersion energy in the OUTCAR (LVDWEXPANSION\\=*.TRUE.*)* LSCSGRAD\\=.TRUE.\u00a0: compute gradients (or not)* VDW\\_R0\u00a0: radii for atomic reference (see also Tkatchenko\\-Scheffler method)* ITIM\")\\=1: if set to \\+1, apply eigenvalue remapping to avoid unphysical cases where the eigenvalues of the matrix   (  1 \u2212  A  L R  ( 0 )  ( \u03c9 )  T  L R  (  k  )  ) {\\\\displaystyle \\\\left(1\\-\\\\mathbf {A} \\_{LR}^{(0\\)}(\\\\omega ){\\\\mathbf {T} }\\_{LR}({\\\\mathbf {k} })\\\\right)}  are non\\-positive, see reference[\\[2]](#cite_note-gould:jctc:2016_b-2) for details   | **Mind:*** This method requires the use of POTCAR files from the PAW dataset version 52 or later. * The parametrization of reference data is available only for elements of the first six rows of the periodic table except of the lanthanides. * The charge\\-density dependence of gradients is neglected. * This method is incompatible with the setting ADDGRID\\=*.TRUE.*. * It is essential that a sufficiently dense FFT grid (controlled via NGXF, NGYF and NGZF ) is used. We strongly recommend to use PREC\\=*Accurate* for this type of calculations (in any case, avoid using PREC\\=*Low*}). * The method has sometimes numerical problems if highly polarizable atoms are located at short distances. In such a case the calculation terminates with an error message *Error(vdw\\\\\\_tsscs\\\\\\_range\\\\\\_separated\\\\\\_k): d\\\\\\_lr(pp)\\<\\=0*. Note that this problem is not caused by a bug, but rather it is due to a limitation of the underlying physical model. * Analytical gradients of the energy are implemented (fore details see reference [\\[5]](#cite_note-bucko:jpcm:16-5)) and hence the atomic and lattice relaxations can be performed. * Due to the long\\-range nature of dispersion interactions, the convergence of energy with respect to the number of k\\-points should be carefully examined. * A default value for the free\\-parameter of this method is available only for the PBE (VDW\\_SR\\=0\\.83\\) and SCAN (VDW\\_SR\\=1\\.12\\) functionals. If any other functional is used, the value of VDW\\_SR must be specified in the INCAR file. || --- |"}
{"file_name": "METAGGA.md", "content": "METAGGA= SCAN \\| RTPSS \\| MBJ \\| LIBXC \\| ...nDefault: The functional specified by LEXCH in the POTCAR if also GGA is not specified. Description: Selects a meta\\-GGA functional.  --- | **Mind:*** If you select a meta\\-GGA functional, make sure that you use  POTCAR files that are suited for meta\\-GGA functionals. However, note that this requirement does not concern the deorbitalized meta\\-GGAs, i.e. those that do not depend on the kinetic\\-energy density, like SCANL. * Depending on the meta\\-GGA that is chosen, it may be recommended to use a PAW potential that is more accurate than the standard/recommended one. This is particularly the case with functionals (e.g., MBJ or the Minnesota functionals) that are very different from the standard ones like PBE or SCAN. The reason is that for such *special* functionals, using a PAW potential that includes more states in the valence or that is harder may be required to obtain results that are closer to the results that would be obtained with an all\\-electron code. Thus, it may be a good idea to do test calculations with different PAW potentials. * It is strongly recommended to set LASPH\\=.TRUE. to  account for aspherical contributions to the PAW one\\-centre terms. * Since VASP.6\\.4\\.0 it is possible to use hybrid functionals that mix meta\\-GGA and Hartree\\-Fock exchange (AEXX). Furthermore, two new tags, AMGGAX and AMGGAC, were created. || --- | Available functionals--------------------- * METAGGA\\=LIBXC The LIBXC tag allows to use a meta\\-GGA functional from the library of exchange\\-correlation functionals Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3). Along with METAGGA\\=LIBXC, it is also necessary to specify the tags LIBXC1 and LIBXC2 that specify the particular functional. Note that it is necessary to have Libxc \\>\\= 5\\.2\\.0 installed and VASP.6\\.3\\.0 or higher compiled with precompiler options.* METAGGA\\=TPSS, RTPSS, or M06L The implementation of the TPSS[\\[4]](#cite_note-tao:prl:2003-4) and RTPSS (revTPSS[\\[5]](#cite_note-perdew:prl:2009-5)) self\\-consistent meta\\-generalized gradient approximation within the projector\\-augmented\\-wave method in VASP is discussed by Sun *et al.*[\\[6]](#cite_note-sun:prb:11-6). For details on the M06\\-L functional, refer to the paper by Zhao and Truhlar[\\[7]](#cite_note-zhao:jcp:06-7).* METAGGA\\=TPSS\\_X, RTPSS\\_X, or M06L\\_X The exchange component of TPSS, RTPSS, or M06L. Available since VASP.6\\.4\\.3\\.* METAGGA\\=TPSS\\_C, RTPSS\\_C, or M06L\\_C The correlation component of TPSS, RTPSS, or M06L. Available since VASP.6\\.4\\.3\\.* METAGGA\\=MS0, MS1, or MS2 The MS (where MS stands for \"made simple\") functionals are presented in detail in"}
{"file_name": "NKRED.md", "content": "NKRED= \\[integer]   Default: **NKRED** \\= 1nDescription: NKRED specifies an uniform reduction factor for the **q**\\-point grid representation of the exact exchange potential and the correlation part in GW calculations.  --- One may restrict the sum over **q** in the Fock exchange potential (or one of its short range counterparts) to a subset, {**q****k**}, of the full (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-point set, {**k**}, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell,and *C*i is the integer grid reduction factor along reciprocal lattice direction**b**i. This leads to a reduction in the computational workload by a factor:  1  C  1  C  2  C  3 {\\\\displaystyle {\\\\frac {1}{C\\_{1}C\\_{2}C\\_{3}}}} In case one sets NKRED, the grid reduction factors will be uniformly set to *C*1\\=*C*2\\=*C*3\\=NKRED. If one wants to specify separate grid reduction factors for *C*1, *C*2, and *C*3 one should use *C*1\\=NKREDX, *C*2\\=NKREDY, and *C*3\\=NKREDZ, respectively. This flag also applies to GW and RPA calculations with a similar speedup. In GW and RPA type calculations,analogously to hybrid functional calculations the outermost loop over the momentum transfer **q** is reduced to a subgrid specified by the NKRED parameters.   | **Warning:** there are circumstances under which **NKRED** and **NKREDX**,**Y**,**Z** should not be used! || --- |"}
{"file_name": "ML_EATOM.md", "content": "This file includes information on lattice constants, atom types, atom positions, as well as kinetic and potential energy for each atom, for every Molecular Dynamics (MD) step. In each MD step, the information is structured as follows: first, the MD step is documented, followed by the lattice constants. The subsequent section of the file is organized into six columns. The initial column denotes the atom type, while columns two to four present the atomic positions in Cartesian coordinates. The fifth column indicates the kinetic energy, and the sixth column denotes the potential energy for an individual atom. The file is only written if ML\\_LEATOM\\=**.TRUE.**.  ---"}
{"file_name": "NiO_GGA+U.md", "content": "Description: Antiferromagnetic (AFM) configuration for NiO in the GGA\\+Ueff (Dudarev's) approach\u00a0; PBE functional In the Dudarev method, a Hubbard effective parameter Ueff \\= U \\- J is used. Concretely, the J value is considered equal to 0, and Ueff \\= U. For more details read the page on the LDAUTYPE\\-tag .   *Exercise\u00a0:* Study the change of the magnetic moment of Ni atoms and the DOS by varying the Ueff value.  --- * INCAR  ```NiO GGA+U AFM  SYSTEM    = \"NiO\" Electronic minimization  ENCUT     = 450  EDIFF     = 1E-5  LORBIT    = 11  LREAL     = .False.  ISTART    = 0  NELMIN    = 6  DOS  ISMEAR    = -5 Magnetism  ISPIN     = 2  MAGMOM    = 2.0 -2.0 2*0.0  Mixer  AMIX      = 0.2  BMIX      = 0.00001  AMIX_MAG  = 0.8  BMIX_MAG  = 0.00001 GGA+U  LDAU      = .TRUE.  LDAUTYPE  = 2  LDAUL     = 2 -1  LDAUU     = 5.00 0.00  LDAUJ     = 0.00 0.00  LDAUPRINT = 1  LMAXMIX   = 4   ``` * KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` * POSCAR  ``` NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ```  --- To check the results obtained with this approach, they can be compared to those determined with a hybrid approach. The magnetic moment for the Ni atoms and the Eg calculated using this approach are 1\\.67 \u03bcB and 3\\.97 eV respectively. Download--------  nio\\_gga\\+u.tgz  ---"}
{"file_name": "NOMEGAR.md", "content": "NOMEGAR= \\[integer]n| Default: **NOMEGAR** | \\= NOMEGA | for GW calculations || --- | --- | --- ||  | \\= 0 | for ACFDT calculations | Description: NOMEGAR specifies the number of frequency grid points along the real axis.  --- Usually NOMEGAR equals NOMEGA. If NOMEGAR is smaller than NOMEGA (for instance 0\\), frequencies along the imaginary time axis are included (this feature is currently not fully supported)."}
{"file_name": "ALDAX.md", "content": "ALDAX= \\[real]n| Default: **ALDAX** | \\= 1\\.0\\-AEXX | if LHFCALC\\=.TRUE. || --- | --- | --- ||  | \\= 1\\.0 | if LHFCALC\\=.FALSE. | Description: ALDAX is a parameter that multiplies the LDA exchange functional or the LDA part of the GGA exchange functional.  --- ALDAX can be used as the fraction of LDA exchange in a Hartree\\-Fock/DFT hybrid functional. | **Important:** ALDAX can be used only if LHFCALC\\=.TRUE. || --- | | **Mind:*** For versions of VASP prior to 6\\.4\\.0, ALDAX was constrained to be equal to 1\\.0\\-AEXX. This constraint is lifted since VASP.6\\.4\\.0\\. * ALDAX is implemented for all functionals listed at GGA except AM05\\. * ALDAX is implemented for the functionals from Libxc (see LIBXC1 for details). || --- |"}
{"file_name": "ML_EATOM_REF.md", "content": "ML\\_EATOM\\_REF= \\[real array]   Default: **ML\\_EATOM\\_REF** \\= 0\\.0nDescription: Reference total energies of isolated atoms used in the machine learning force field method.  --- This tag is only used if `ML_ISCALE_TOTEN = 1`. If ML\\_EATOM\\_REF is not provided in the INCAR file then 0\\.0 is assumed for all species in the system. By default this tag is not used since all energies are scaled to the average of the training data (`ML_ISCALE_TOTEN = 2`). If this tag is used, each reference energy should be obtained from a VASP calculation of an isolated atoms in a sufficiently large simulation box. The reference is then simply taken from the Helmholtz free energy from the OSZICAR file (value following \"1 F\\=\" in that file).  The reference energies are simply set in one line as a list for each species, i.e. like the following  ```ML_EATOM_REF = E_1 E_2 E_3 ...  ``` where E\\_1, E\\_2, E\\_2 etc. are the energies for species 1, 2, 3 etc. (corresponding to the order they occur in the POTCAR file). The unit of the energies is eV/atom.  | **Mind:** Reference energies are stored in the ML\\_AB file and are reused whenever the file is read in, i.e, in case of a continued training (`ML_MODE = train` with ML\\_AB present), refitting (`ML_MODE = refit`) or a re\\-selection run (`ML_MODE = select`). However, since VASP 6\\.4\\.3 the values in the INCAR file take precedence, hence, reference energies from the ML\\_AB file can be updated by providing new values for the ML\\_EATOM\\_REF tag in the INCAR file. In case you are unsure, check the ML\\_LOGFILE which lists the values actually used. || --- |"}
{"file_name": "SIGMA.md", "content": "SIGMA= \\[real]   Default: **SIGMA** \\= 0\\.2nDescription: SIGMA specifies the width of the smearing in eV.  ---"}
{"file_name": "Nonlocal_vdW-DF_functionals.md", "content": "The vdW\\-DF method originally proposed by Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1) consists of a semilocal exchange\\-correlation functional that is augmented with a nonlocal correlation functional   E c,disp {\\\\displaystyle E\\_{\\\\text{c,disp}}}  that approximately accounts for dispersion interactions. In VASP, the nonlocal functional is implemented using the algorithm of Rom\u00e1n\\-P\u00e9rez and Soler[\\[2]](#cite_note-romanperez:prl:09-2) that is based on FFTs and the convolution theorem to calculate efficiently the double real\\-space integral. Several versions of the vdW\\-DF functionals proposed in the literature can be used (see list below). The vdW\\-DF functionals are available since the 5\\.2\\.12\\.26May2011 version of VASP for the calculation of total energies and forces. The stress tensor calculation for the cell optimization (ISIF\\=3\\) is available since the VASP 5\\.2\\.12\\.11Nov2011 version for spin\\-unpolarized systems and VASP 5\\.3\\.1 for spin\\-polarized systems. They have been implemented by J. Klime\u0161. If you make use of the vdW\\-DF functionals presented in this section, we ask you to cite Ref. [\\[3]](#cite_note-klimes:prb:2011-3). Please also cite the original vdW\\-DF paper of Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1) and the paper of Rom\u00e1n\\-P\u00e9rez and Soler[\\[2]](#cite_note-romanperez:prl:09-2).  In versions of VASP prior to 6\\.4\\.0, a meta\\-GGA functional (e.g., SCAN) could be combined only with the rVV10 nonlocal functional. Conversely, a GGA functional could be combined only with the original nonlocal functional of Dion *et al.*. This restriction is lifted since VASP.6\\.4\\.0 thanks to the introduction of the IVDW\\_NL tag. Since VASP.6\\.4\\.0, the spin\\-polarized formulation of the nonlocal vdW correlation term[\\[4]](#cite_note-thonhauser:prl:2015-4) is available. It can be switched on with the logical tag LSPIN\\_VDW (.FALSE. by default), however its use is limited to the the functional of Dion *et al.* (not available for rVV10\\) and only when the nonlocal term is combined with a GGA functional. In other cases (and in prior versions of VASP), the nonlocal correlation functional is evaluated with the sum of the spin\\-up and spin\\-down electron densities. An overview of the performance of the vdW\\-DF functionals can be found for instance in Ref. [\\[3]](#cite_note-klimes:prb:2011-3)[\\[5]](#cite_note-berland:rpp:2015-5)[\\[6]](#cite_note-tran:prm:19-6). List of nonlocal vdW\\-DF functionals------------------------------------ * To add a nonlocal correlation energy   E c,disp {\\\\displaystyle E\\_{\\\\text{c,disp}}}  to the semilocal exchange\\-correlation energy (selected with the GGA, METAGGA or XC tag) one needs to set LUSE\\_VDW\\=.TRUE. in the INCAR file. * Since vdW\\-DF functionals tend to yield less spherical densities than standard GGA functionals, it is recommended to set LASPH\\=.TRUE. to get reasonably accurate contributions from the spheres around the atoms.   | **Important:*** For **VASP.6\\.4\\.2** and prior versions it was necessary to copy the vdw\\_kernel.bindat file into the working directory for calculations with the van der Waals kernel corresponding to IVDW\\_NL\\=1\\. Otherwise, vdw\\_kernel.bindat was generated at the beginning of the calculation, which took several hours. However, since **VASP.6\\.4\\.3** it is not really necessary to copy vdw\\_kernel.bindat into the directory, since its calculation has been considerably accelerated (about 2 minutes with 8 MPI ranks). More details are given below. Note that no vdw\\_kernel.bindat file is needed for calculations with the rVV10 kernel (IVDW\\_NL\\=2\\). || --- | Examples of INCAR files are shown below. * Original vdW\\-DF of Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1):  ```GGA       = REAGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * vdW\\-DF2 of Lee *et al.* (2nd version of vdW\\-DF)[\\[7]](#cite_note-lee:prb:2010-7):  ```GGA       = MLAGGAC     = 0.0LUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ``` * optPBE\\-vdW of Klime\u0161 *et al.*[\\[8]](#cite_note-klimes:jpcm:2010-8):  ```GGA       = ORAGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * optB88\\-vdW of Klime\u0161 *et al.*[\\[8]](#cite_note-klimes:jpcm:2010-8):  ```GGA       = BOPARAM1    = 0.1833333333PARAM2    = 0.22AGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * optB86b\\-vdW of Klime\u0161 *et al.*[\\[3]](#cite_note-klimes:prb:2011-3):  ```GGA       = MKPARAM1    = 0.1234 PARAM2    = 1.0AGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * BEEF\\-vdW of Wellendorff *et al.*[\\[9]](#cite_note-beef2012-9):  ```GGA       = BFLUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ```  or  ```GGA       = LIBXCLIBXC1    = GGA_XC_BEEFVDWLUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ``` Note that the GGA functional BEEF[\\[9]](#cite_note-beef2012-9) is available only via an external library, either libbeef (\\-Dlibbeef) or Libxc (\\-DUSELIBXC). * rev\\-vdW\\-DF2 (also known as vdW\\-DF2\\-B86R) of Hamada[\\[10]](#cite_note-hamada:prb:14-10):  ```GGA       = MKPARAM1    = 0.1234568 # =10/81PARAM2    = 0.7114AGGAC     = 0.0LUSE_VDW  = .TRUE.ZAB_VDW   = -1.8867 # the default is -0.8491LASPH     = .TRUE.  ``` In the vdW\\-DF2, BEEF\\-vdW and rev\\-vdW\\-DF2 functionals, the nonlocal correlation consists of the Dion *et al.* functional, but with the parameter   Z  a b {\\\\displaystyle Z\\_{ab}}  that is changed from \\-0\\.8491 (the default value in VASP) to \\-1\\.8867 by setting ZAB\\_VDW\\=\\-1\\.8867\\. * vdW\\-DF\\-cx of Berland and Hyldgaard[\\[11]](#cite_note-berland:prb:2015-11):  ```GGA       = CXAGGAC     = 0.0LUSE_VDW  = .TRUE.LASPH     = .TRUE.  ``` * vdW\\-DF3\\-opt1 of Chakraborty *et al.* [\\[12]](#cite_note-chakraborty:jctc:2020-12):  ```GGA       = BOPARAM1    = 0.1122334456PARAM2    = 0.1234568 # =10/81AGGAC     = 0.0LUSE_VDW  = .TRUE.IVDW_NL   = 3ALPHA_VDW = 0.94950 # default for IVDW_NL=3 but can be overwritten by this tagGAMMA_VDW = 1.12    # default for IVDW_NL=3 but can be overwritten by this tagLASPH     = .TRUE.  ``` * vdW\\-DF3\\-opt2 of Chakraborty *et al.* [\\[12]](#cite_note-chakraborty:jctc:2020-12):  ```GGA       = MKPARAM1    = 0.1234568 # =10/81PARAM2    = 0.58AGGAC     = 0.0LUSE_VDW  = .TRUE.IVDW_NL   = 4ZAB_VDW   = -1.8867 # the default is -0.8491ALPHA_VDW = 0.28248 # default for IVDW_NL=4 but can be overwritten by this tagGAMMA_VDW = 1.29    # default for IVDW_NL=4 but can be overwritten by this tagLASPH     = .TRUE.  ``` * rVV10 of Sabatini *et al.* [\\[13]](#cite_note-sabatini:prb:2013-13):  ```GGA       = MLLUSE_VDW  = .TRUE.IVDW_NL   = 2BPARAM    = 6.3     # default but can be overwritten by this tagCPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ``` * SCAN\\+rVV10 of Peng *et al.* [\\[14]](#cite_note-peng:prx:2016-14):  ```METAGGA   = SCANLUSE_VDW  = .TRUE.BPARAM    = 15.7    # the default value is 6.3CPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ``` * PBE\\+rVV10L of Peng and Perdew [\\[15]](#cite_note-peng:prb:2017-15):  ```GGA       = PELUSE_VDW  = .TRUE.BPARAM    = 10      # the default value is 6.3CPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ```  * r  2 {\\\\displaystyle ^{2}} SCAN\\+rVV10 of Ning *et al.* [\\[16]](#cite_note-ning:prb:2022-16):  ```METAGGA   = R2SCANLUSE_VDW  = .TRUE.BPARAM    = 11.95   # the default value is 6.3CPARAM    = 0.0093  # default but can be overwritten by this tagLASPH     = .TRUE.  ``` Important technical remarks--------------------------- * Kernel file vdw\\_kernel.bindat:\t+ **Until VASP.6\\.4\\.2**: The calculation of the nonlocal correlation functional of Dion *et al.* (used when IVDW\\_NL\\=1, which means for all functionals listed above except rVV10, SCAN\\+rVV10 and r       2    \t{\\\\displaystyle ^{2}} \tSCAN\\+rVV10\\) requires a precalculated kernel which is distributed via the VASP download portal (vdw\\_kernel.bindat.gz has to be decompressed). If VASP does not find this file, the kernel is calculated, which is however extremely demanding (several hours!). Thus, the kernel needs to be either copied to the VASP run directory for each calculation or can be stored in a central location and read from there. The location needs to be set in routine *PHI\\_GENERATE*. This does not work on some clusters and the kernel needs to be copied into the working directory in such cases. The distributed file uses little endian convention and can not be read on big endian machines. The big endian version of the file is available also from the VASP portal. In the case of the rVV10 nonlocal correlation functional, no precalculated kernel is required and it is calculated on the fly, which is however much less demanding than in the case of the functional of Dion *et al.*.\t+ **Since VASP.6\\.4\\.3**: The calculation of the kernel for the functional of Dion *et al.* (IVDW\\_NL\\=1\\), as well as for IVDW\\_NL\\=3 and 4, is tremendously faster: the default value of a parameter has been reduced (with basically no loss of accuracy) and the calculation has been parallelized (with MPI and OpenACC for GPUs). Therefore, starting a calculation without vdw\\_kernel.bindat file present in the directory should be no problem for the computational time, and a vdw\\_kernel.bindat file will be generated rather efficiently during the first iteration. Note that a file vdw\\_kernel.bindat that was generated for a given kernel (IVDW\\_NL\\=1, 3 or 4\\) can not be used for a calculation using another kernel, and in such a case the incompatibility of the vdw\\_kernel.bindat file will be detected and a new vdw\\_kernel.bindat file automatically generated to replace the incompatible one. * There are no special POTCAR files for the vdW\\-DF functionals and the PBE or LDA POTCAR files can be used. Currently the evaluation of the nonlocal correlation functional is not done fully within the PAW method, but the sum of the pseudo\\-valence density and partial core density is used. This approximation works rather well, as is discussed in [\\[3]](#cite_note-klimes:prb:2011-3), and the accuracy generally increases when the number of valence electrons is increased or when harder PAW datasets are used. For example, for adsorption it is recommended to compare the adsorption energy obtained with standard PAW datasets and more\\-electron POTCAR files for both PBE calculations and vdW\\-DF calculations to assess the quality of the results. * The evaluation of the nonlocal correlation energy requires some additional time. Most of it is spent on performing FFTs to evaluate the energy and potential. Thus the additional time is determined by the number of FFT grid points, basically the size of the simulation cell. It is almost independent on the number of the atoms in the cell, but increases with the amount of vacuum in the cell. The relative increase is high for isolated molecules in large cells, but small for solids in smaller cells with many k\\-points.   | **Mind:*** In VASP.6\\.2 (and prior versions) the stress tensor is broken for rVV10 (it is correct for other vdW\\-DF though). From VASP.6\\.3\\.0 onwards, the stress tensor for rVV10 is correct. || --- | Related Tags and Sections------------------------- LUSE\\_VDW, IVDW\\_NL, LSPIN\\_VDW, ZAB\\_VDW, ALPHA\\_VDW, GAMMA\\_VDW, BPARAM, CPARAM, GGA, AGGAC, PARAM1, PARAM2, METAGGA See also the alternative atom\\-pairwise and many\\-body dispersion methods: IVDW"}
{"file_name": "Forces.md", "content": "**Forces** on particles are a fundamental concept in condensed matter physics and chemistry. These forces describe the interactions that cause particles, such as atoms and molecules, to move and behave in specific ways. In VASP, forces result from electromagnetic interactions, which can be computed by means of the Hellmann\\-Feynman theorem within DFT, the random\\-phase approximation or by the use of machine learning force fields. Understanding interaction forces between atoms is crucial in many aspects of science, for example: * predicting the atomic structure of solids and molecules (ionic relaxation)* chemical reactions, catalysis, etc. (transition states)* thermodynamic processes (molecular dynamics) Formally, the force can be defined as follows. Let   r  ( t ) {\\\\displaystyle \\\\mathbf {r} (t)}  be the position of the particle, then the velocity is defined as the change of position with time  v  ( t ) \\=  d  r  ( t )  d t {\\\\displaystyle \\\\mathbf {v} (t)\\={\\\\frac {d\\\\mathbf {r} (t)}{dt}}} and the momentum   p  ( t ) {\\\\displaystyle \\\\mathbf {p} (t)}  of the particle is the velocity times the particle mass   m {\\\\displaystyle m}  p  ( t ) \\= m  v  ( t ) . {\\\\displaystyle \\\\mathbf {p} (t)\\=m\\\\mathbf {v} (t).} Newton's second law of motion states that the change of motion of an object is proportional to the force acting on the object and oriented in the same direction as the force vector. Therefore, the force is defined as the change of particle momentum with time  F  ( t ) \\= m  d  v  ( t )  d t  \\= m  a  ( t ) , {\\\\displaystyle \\\\mathbf {F} (t)\\=m{\\\\frac {d\\\\mathbf {v} (t)}{dt}}\\=m\\\\mathbf {a} (t),} where   a  ( t ) {\\\\displaystyle \\\\mathbf {a} (t)}  is the acceleration of the particle. With this equation of motion, the knowledge of some starting conditions   r  ( 0 ) {\\\\displaystyle \\\\mathbf {r} (0\\)}  and  v  ( 0 ) {\\\\displaystyle \\\\mathbf {v} (0\\)}  and an algorithm to compute the forces   F {\\\\displaystyle \\\\mathbf {F} }  the trajectory   r  ( t ) {\\\\displaystyle \\\\mathbf {r} (t)}  of a particle can be predicted for all times. Theory------ The force and the negative gradient of the potential energy is directly related. The gradient of the potential energy can be computed from the Lagrangian of the particle system of interest. The Lagrangian for an N particle system is  L \\=  \u2211  i \\= 1  N  m  i  v  i  2  \u2212 V ( {  r  i  } ) , {\\\\displaystyle L\\=\\\\sum \\_{i\\=1}^{N}m\\_{i}\\\\mathbf {v} \\_{i}^{2}\\-V(\\\\{\\\\mathbf {r} \\_{i}\\\\}),} where   V ( {  r  i  } ) {\\\\displaystyle V(\\\\{\\\\mathbf {r} \\_{i}\\\\})}  is the potential energy of the system. With Lagrange's equation of the second kind  d  d t  \u2202 L  \u2202  v  i  \\=  \u2202 L  \u2202  r  i {\\\\displaystyle {\\\\frac {d}{dt}}{\\\\frac {\\\\partial L}{\\\\partial \\\\mathbf {v} \\_{i}}}\\={\\\\frac {\\\\partial L}{\\\\partial \\\\mathbf {r} \\_{i}}}} the relation   F  i  \\= \u2212  \u2202 V ( {  r  i  } )  \u2202  r  i  \\= \u2212 \u2207 V ( {  r  i  } ) . {\\\\displaystyle \\\\mathbf {F} \\_{i}\\=\\-{\\\\frac {\\\\partial V(\\\\{\\\\mathbf {r} \\_{i}\\\\})}{\\\\partial \\\\mathbf {r} \\_{i}}}\\=\\-\\\abla V(\\\\{\\\\mathbf {r} \\_{i}\\\\}).} In order to predict forces and particle trajectories, the negative gradient of the potential energy has to be computed.    ### DFT Forces One way to compute the potential energy's negative gradient is through DFT. In DFT there is no classical potential energy function   V ( {  r  i  } ) {\\\\displaystyle V(\\\\{\\\\mathbf {r} \\_{i}\\\\})}  but a Hamiltonian   H {\\\\displaystyle {\\\\mathcal {H}}}  depending on the ionic positions   R  i {\\\\displaystyle \\\\mathbf {R} \\_{i}}  and the electronic positions   r  i {\\\\displaystyle \\\\mathbf {r} \\_{i}} . The total energy is given by  E  t o t  \\= \u2212  1 2  \u222b  \u2211  i  \u03c8  i  \u2217  (  r  )  \u2207  2  \u03c8  i  (  r  ) d  r  \u2212 \u222b  \u2211  A  Z  A  \\|  r  \u2212  R  A  \\|  n (  r  ) d  r  \\+ \u222b \u222b  1 2  n (  r  ) n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  r \u2032  d  r  \\+  E  x c  \\+  1 2  \u2211  A \u2260 B  Z  A  Z  B  \\|  R  A  \u2212  R  B  \\|  , {\\\\displaystyle E\\_{tot}\\=\\-{\\\\frac {1}{2}}\\\\int \\\\sum \\_{i}\\\\psi \\_{i}^{\\*}({\\\\bf {r}})\\\abla ^{2}\\\\psi \\_{i}({\\\\bf {r}})d{\\\\bf {r}}\\-\\\\int \\\\sum \\_{A}{\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}n({\\\\bf {r}})d{\\\\bf {r}}\\+\\\\int \\\\int {\\\\frac {1}{2}}{\\\\frac {n({\\\\bf {r}})n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d{\\\\bf {r'}}d{\\\\bf {r}}\\+E\\_{\\\\rm {xc}}\\+{\\\\frac {1}{2}}\\\\sum \\_{A\\\eq B}{\\\\frac {Z\\_{A}Z\\_{B}}{\\\\left\\\\vert {\\\\bf {R}}\\_{A}\\-{\\\\bf {R}}\\_{B}\\\\right\\\\vert }},} where   n (  r  ) {\\\\displaystyle n(\\\\mathbf {r} )}  denotes the electronic ground\\-state density and   \u03c8  i {\\\\displaystyle \\\\psi \\_{i}}  are the Kohn\\-Sham orbitals.   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  is the exchange\\-correlation energy. To obtain the force acting on ion A, the Hellmann\\-Feynman theorem has to be used.   F  A  \\= \u2212  \u2207  A  E  t o t  \\=  \u2207  A  \u2211  A  \u222b  Z  A  \\|  r  \u2212  R  A  \\|  n (  r  )  d  3  r \u2212  \u2207  A  1 2  \u2211  A \u2260 B  Z  A  Z  B  \\|  R  A  \u2212  R  B  \\|  , {\\\\displaystyle \\\\mathbf {F} \\_{A}\\=\\-\\\abla \\_{A}E\\_{tot}\\=\\\abla \\_{A}\\\\sum \\_{A}\\\\int {\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}n({\\\\bf {r}})d^{3}r\\-\\\abla \\_{A}{\\\\frac {1}{2}}\\\\sum \\_{A\\\eq B}{\\\\frac {Z\\_{A}Z\\_{B}}{\\\\left\\\\vert {\\\\bf {R}}\\_{A}\\-{\\\\bf {R}}\\_{B}\\\\right\\\\vert }},} where   \u2207  A {\\\\displaystyle \\\abla \\_{A}}  denotes the gradient with respect to ionic position   R  A {\\\\displaystyle \\\\mathbf {R} \\_{A}} . The DFT forces will depend on the chosen exchange\\-correlation functional via the electronic ground\\-state density   n (  r  ) {\\\\displaystyle n({\\\\bf {r}})} . Therefore, the choice of the proper exchange\\-correlation functional for the system of interest is crucial for obtaining proper forces and, hence, the correct material properties. ### RPA\\-forces The RPA approximation can be used to yield estimates for the exchange\\-correlation energy as well as forces (LRPAFORCE) within many\\-body perturbation theory.[\\[1]](#cite_note-ramberger:prl:118-1)Note that the RPA is a correction to the underlying functional. Therefore, the choiceof the proper exchange\\-correlation functional is still crucial in the RPA approach for obtaining forces.The RPA forces are computed by the following equation  F  A  \\= \u2212 T r \\[  \u03c1  ( 1 )  \u2207  A  V  K S  \u2212  \u03b3  ( 1 )  \u2207  A  S ] {\\\\displaystyle \\\\mathbf {F} \\_{A}\\=\\-Tr\\[\\\\rho ^{(1\\)}\\\abla \\_{A}V^{KS}\\-\\\\gamma ^{(1\\)}\\\abla \\_{A}S]} The operators   \u03c1  1 {\\\\displaystyle \\\\rho ^{1}}  and  \u03b3  1 {\\\\displaystyle \\\\gamma ^{1}}  are associated with the functional derivatives   \u03b4 E  /  \u03b4  V  K S {\\\\displaystyle \\\\delta E/\\\\delta V^{KS}}  and  \u03b4 E  /  \u03b4 S {\\\\displaystyle \\\\delta E/\\\\delta S}  respectively. S defines the overlap operator between the Kohn\\-Sham orbitals of the used DFT approximation. The first term of the force equation can be associated with the exchange energy and the second term of the equation can be associated with the correlation part. | **Mind:** It is recommended to use the Perdew\\-Burke\\-Ernzerhof (PBE) XC potential. || --- | | **Mind:** It is recommended to use the GW POTCAR\\-files. || --- | ### Machine\\-learned forces A speedy but less accurate approach for obtaining forces is through a machine\\-learned force field (MLFF). In this approach, a machine\\-learning model is first trained on either the DFT or RPA forces, whereby also energies and stresses are considered. In the case of the RPA, the stress tensor is not computed. The machine\\-learning approach will be an approximation to the underlying method against which it was fitted.  The machine learning force field decomposes the total DFT energy into local atomic contributions   E  B  ( {  R  C  } ) {\\\\displaystyle E\\_{B}(\\\\{\\\\mathbf {R} \\_{C}\\\\})}  depending on all atomic positions in the system. Therefore, the force acting on ion A is computed by  F  A  \\= \u2212  \u2207  A  \u2211  B \\= 1  N  E  B  ( {  R  C  } ) \\= \u2212  \u2211  B  N  w  B  d  K  B  ( {  R  C  } )  d  R  A  , {\\\\displaystyle \\\\mathbf {F} \\_{A}\\=\\-\\\abla \\_{A}\\\\sum \\_{B\\=1}^{N}E\\_{B}(\\\\{\\\\mathbf {R} \\_{C}\\\\})\\=\\-\\\\sum \\_{B}^{N}w\\_{B}{\\\\frac {dK\\_{B}(\\\\{\\\\mathbf {R} \\_{C}\\\\})}{d\\\\mathbf {R} \\_{A}}},} where   K (  R  C  ) {\\\\displaystyle K(\\\\mathbf {R} \\_{C})}  is the kernel matrix which can be found on the machine learning theory page. The kernel matrix as the local energies depends on the positions of all atoms   {  R  C  } {\\\\displaystyle \\\\{\\\\mathbf {R} \\_{C}\\\\}}  in the actual atomic configuration. Related concepts---------------- ### Stress and pressure The stress tensor (see ISIF) provides valuable information about how forces are distributed throughout a material, both in magnitude and direction. It includes normal stresses, which act perpendicular to a given plane, and shear stresses, which act parallel to the plane. Together, these components allow predicting how materials will behave under various conditions, such as tension, compression, or shear. The stress tensor can be computed from a viral theorem, including pair forces, or with a finite difference approach deforming the simulation box. Pressure, often denoted as P, is a scalar component of the stress tensor. It represents the normal force per unit area acting on a surface within the material. In the stress tensor, pressure is related to the diagonal components   \u03c3  x x {\\\\displaystyle \\\\sigma \\_{xx}}  ,  \u03c3  y y {\\\\displaystyle \\\\sigma \\_{yy}} , and   \u03c3  z z {\\\\displaystyle \\\\sigma \\_{zz}}  :  P \\=  1 3  (  \u03c3  x x  \\+  \u03c3  y y  \\+  \u03c3  z z  ) . {\\\\displaystyle P\\={\\\\frac {1}{3}}(\\\\sigma \\_{xx}\\+\\\\sigma \\_{yy}\\+\\\\sigma \\_{zz}).} In other words, the pressure is the average of the normal components of the stress tensor in the three spatial directions. In electronic structure calculations, finite basis sets are used to express the electron density. Due to this finiteness of the basis set, errors on the stress tensor and the pressure are introduced. The error in the pressure is referred to as Pulay stress and can be corrected with the tag PSTRESS or by increasing ENCUT. ### Force constants and phonons The forces are defined as the negative gradient of the potential energy. The force\\-constant matrix is defined by   \u03a6  I \u03b1 J \u03b2  ( {  R  0  } ) \\=  \u2202 E ( {  R  } )  \u2202  R  I \u03b1  \u2202  R  J \u03b2  \\|  R  \\=  R  0  \\= \u2212  \u2202  F  I \u03b1  ( {  R  } )  \u2202  R  J \u03b2  \\|  R  \\=  R  0 {\\\\displaystyle \\\\Phi \\_{I\\\\alpha J\\\\beta }(\\\\{\\\\mathbf {R} ^{0}\\\\})\\=\\\\left.{\\\\frac {\\\\partial E(\\\\{\\\\mathbf {R} \\\\})}{\\\\partial R\\_{I\\\\alpha }\\\\partial R\\_{J\\\\beta }}}\\\\right\\|\\_{\\\\mathbf {R} \\=\\\\mathbf {R^{0}} }\\=\\-\\\\left.{\\\\frac {\\\\partial F\\_{I\\\\alpha }(\\\\{\\\\mathbf {R} \\\\})}{\\\\partial R\\_{J\\\\beta }}}\\\\right\\|\\_{\\\\mathbf {R} \\=\\\\mathbf {R^{0}} }} and is, therefore, the gradient of the force. The force\\-constant matrix is a fundamental concept in solid\\-state physics and materials science, especially in the context of understanding the vibrational properties of crystals. It is a mathematical representation of the interatomic forces and their interactions within a crystal lattice. This matrix is used to describe the relationships between atomic displacements and the resulting forces that occur in a crystal. By Fourier transforming the force\\-constant matrix, the dynamical matrix is obtained. By computing the eigenvalues of the dynamic matrix on various reciprocal lattice points, the phonon dispersion relation can be obtained. Understanding phonons is essential as they influence materials properties such as the electrical conductivity, thermal conductivity, and mechanical properties of materials. How To------ * Structure optimization* Volume optimization* Phonons from finite differences* Phonons from perturbation theory* Computing the phonon dispersion and DOS* Machine learning Basics* Machine learning best practice* Molecular dynamics simulation* ACFDT/RPA calculations"}
{"file_name": "TS_search_using_the_Improved_Dimer_Method.md", "content": "Description:  --- * INCAR  ```SYSTEM = Ammonia flippingIBRION = 44NSW = 100EDIFF = 1e-6EDIFFG = -0.01  ``` * KPOINTS  ```k-points 0 G 1 1 1  ``` * POSCAR  ```ammonia flipping  1.00000000000000    6.000000    0.000000    0.000000    0.000000    7.000000    0.000000    0.000000    0.000000    8.000000  H    N    3     1 Direct    0.6462   0.5736   0.5000 0.5000   0.3547   0.5000 0.3538   0.5736   0.5000 0.5000   0.5000   0.5000\u00a0! decay direction 0.000004   -0.000001    0.511990 0.000000   -0.000003    0.547859-0.000004   -0.000001    0.511988 0.000000    0.000000   -0.111986  ``` Download-------- ammonia\\_flipping.tgz, sub\\-folder improved\\_dimer  --- To the list of examples\") or to the main page"}
{"file_name": "Fast.md", "content": "``` ## define the commands that run vasp_std, vasp_ncl, and vasp_gam ## Default: ###export VASP_TESTSUITE_EXE_STD=\"mpirun -np 4 $PWD/../bin/vasp_std\"##export VASP_TESTSUITE_EXE_NCL=\"mpirun -np 4 $PWD/../bin/vasp_ncl\"##export VASP_TESTSUITE_EXE_GAM=\"mpirun -np 4 $PWD/../bin/vasp_gam\"  ## Run the tests in the FAST category #export VASP_TESTSUITE_RUN_FAST=Y  ```"}
{"file_name": "ML_SIGV0.md", "content": "ML\\_SIGV0= \\[real]   Default: **ML\\_SIGV0** \\= 1\\.0nDescription: This flag sets the noise parameter   s  v {\\\\displaystyle s\\_{\\\\mathrm {v} }}  (see here for definition) for the fitting in the machine learning force field method.  --- If the regularization needs to be controlled manually, like e.g. in the fitting via singular value decomposition (ML\\_MODE\\=*REFIT* or ML\\_IALGO\\_LINREG\\=4\\), the best is to keep this parameter constant at 1 and control the regularization via the precision parameter   s  w {\\\\displaystyle s\\_{\\\\mathrm {w} }}  (see ML\\_SIGW0). For the theory of this regularization parameter see this section. Related tags and sections------------------------- ML\\_LMLFF, ML\\_IREG, ML\\_SIGW0, ML\\_IALGO\\_LINREG Examples that use this tag  ---"}
{"file_name": "K-point_integration.md", "content": "In this section wediscuss partial occupancies. A must for all readers. First there is the question why to use partial occupancies atall. The answer is: partial occupancies help to decrease the numberof k\\-points necessary to calculate an accurate band\\-structure energy.This answer might be strange at first sight.What we want to calculate is, the integral over the filled parts ofthe bands  \u2211  n  1  \u03a9  B Z  \u222b  \u03a9  B Z  \u03f5  n  k  \u0398 (  \u03f5  n  k  \u2212 \u03bc )  d  k  , {\\\\displaystyle \\\\sum \\_{n}{\\\\frac {1}{\\\\Omega \\_{\\\\mathrm {BZ} }}}\\\\int \\_{\\\\Omega \\_{\\\\mathrm {BZ} }}\\\\epsilon \\_{n{\\\\mathbf {k}}}\\\\,\\\\Theta (\\\\epsilon \\_{n{\\\\mathbf {k}}}\\-\\\\mu )\\\\,d{\\\\mathbf {k}},} where   \u0398 ( x ) {\\\\displaystyle \\\\Theta (x)}  is the Dirac step function. Due to our finitecomputer resources this integral has to be evaluated usinga discrete set of k\\-points[\\[1]](#cite_note-baldereschi:prb:1973-1)[\\[2]](#cite_note-chadi:prb:1973-2)[\\[3]](#cite_note-monkhorst:prb:1976-3):  1  \u03a9  B Z  \u222b  \u03a9  B Z  \u2192  \u2211  k  w  k  . {\\\\displaystyle {\\\\frac {1}{\\\\Omega \\_{\\\\mathrm {BZ} }}}\\\\int \\_{\\\\Omega \\_{\\\\mathrm {BZ} }}\\\\to \\\\sum \\_{\\\\mathbf {k}}w\\_{\\\\mathbf {k}}.} Keeping the step function we get a sum  \u2211  k  w  k  \u03f5  n  k  \u0398 (  \u03f5  n  k  \u2212 \u03bc ) , {\\\\displaystyle \\\\sum \\_{\\\\mathbf {k}}w\\_{\\\\mathbf {k}}\\\\epsilon \\_{n{\\\\mathbf {k}}}\\\\,\\\\Theta (\\\\epsilon \\_{n{\\\\mathbf {k}}}\\-\\\\mu ),} which converges exceedingly slow with the number of k\\-points included.This slow convergence speed arises only from the fact thatthe occupancies jump form 1 to 0 at the Fermi\\-level.If a band is completely filled the integral can be calculatedaccurately using a low number of k\\-points (this is thecase for semiconductors and insulators). For metals the trick is now to replace the step function   \u0398 (  \u03f5  n  k  \u2212 \u03bc ) {\\\\displaystyle \\\\Theta (\\\\epsilon \\_{n{\\\\mathbf {k}}}\\-\\\\mu )} by a (smooth) function   f ( {  \u03f5  n  k  } ) {\\\\displaystyle f(\\\\{\\\\epsilon \\_{n{\\\\mathbf {k}}}\\\\})} resulting in a much faster convergence speedwithout destroying the accuracy of the sum.Several methods have been proposed to solve this dazzling problem. Linear tetrahedron methods-------------------------- Within the linear tetrahedron method, the term   \u03f5  n  k {\\\\displaystyle \\\\epsilon \\_{n{\\\\mathbf {k}}}}  is interpolatedlinearly between two k\\-points. Bloechl[\\[4]](#cite_note-bloechl:prb:1994-4) has recently revisedthe tetrahedron method to give effective weights   f ( {  \u03f5  n  k  } ) {\\\\displaystyle f(\\\\{\\\\epsilon \\_{n{\\\\mathbf {k}}}\\\\})} for each band and k\\-point. In addition Bloechel wasable to derive a correction formula which removes thequadratic error inherent in the linear tetrahedron method(linear tetrahedron method with Bloechel corrections).The linear tetrahedron is more or less fool proof and requiresa minimal interference by the user. The main drawback is that the Bloechels method is not variational with respect tothe partial occupancies if the correction terms are included,therefore the calculated forces might be wrongby a few percent. If accurate forces are requiredwe recommend a finite temperature method. Finite temperature approaches \\- smearing methods------------------------------------------------- In this case the step function is simply replaced by a smoothfunction, for example the Fermi\\-Dirac function[\\[5]](#cite_note-mermin:pra:1965-5)  f (  \u03f5 \u2212 \u03bc  \u03c3  ) \\=  1  exp \u2061 (  \u03f5 \u2212 \u03bc  \u03c3  ) \\+ 1  . {\\\\displaystyle f({\\\\frac {\\\\epsilon \\-\\\\mu }{\\\\sigma }})\\={\\\\frac {1}{\\\\exp({\\\\frac {\\\\epsilon \\-\\\\mu }{\\\\sigma }})\\+1}}.} or a Gauss like function[\\[6]](#cite_note-devita:phd:1992-6)  f (  \u03f5 \u2212 \u03bc  \u03c3  ) \\=  1 2  (  1 \u2212  e r f  \\[  \u03f5 \u2212 \u03bc  \u03c3  ]  )  . {\\\\displaystyle f({\\\\frac {\\\\epsilon \\-\\\\mu }{\\\\sigma }})\\={\\\\frac {1}{2}}\\\\left(1\\-{\\\\mathrm {erf} }\\\\left\\[{\\\\frac {\\\\epsilon \\-\\\\mu }{\\\\sigma }}\\\\right]\\\\right).} is one used quite frequently in the context of solid state calculations.Nevertheless, it turns out that the total energy is no longervariational (or minimal) in this case. It is necessary to replace thetotal energy by some generalized free energy  F \\= E \u2212  \u2211  n  k  w  k  \u03c3 S (  f  n  k  ) . {\\\\displaystyle F\\=E\\-\\\\sum \\_{n{\\\\mathbf {k}}}w\\_{\\\\mathbf {k}}\\\\sigma S(f\\_{n{\\\\mathbf {k}}}).} The calculated forces are now the derivatives of this free energy   F {\\\\displaystyle F} (see Forces).In conjunction with Fermi\\-Dirac statisticsthe free energy might be interpreted as the free energyof the electrons at some finite temperature   \u03c3 \\=  k  B  T {\\\\displaystyle \\\\sigma \\=k\\_{\\\\mathrm {B} }T}  ,but the physical significance remains unclear in the caseof Gaussian smearing. Despite this problem, it ispossible to obtain an accurateextrapolation for   \u03c3 \u2192 0 {\\\\displaystyle \\\\sigma \\\\to 0} from results at finite   \u03c3 {\\\\displaystyle \\\\sigma }  using the formula  E ( \u03c3 \u2192 0 ) \\=  E  0  \\=  1 2  ( F \\+ E ) . {\\\\displaystyle E(\\\\sigma \\\\to 0\\)\\=E\\_{0}\\={\\\\frac {1}{2}}(F\\+E).} In this way we get a \"physical\" quantity from afinite temperature calculation, and the Gaussian smearing methodserves as an mathematical tool to obtain faster convergence with respectto the number of k\\-points.For Al this method converges even faster than thelinear tetrahedron method with Bloechel corrections. Improved functional form by Methfessel and Paxton------------------------------------------------- The method described previously has two shortcomings: * The forces calculated by VASP are a derivative of the free electronic energy F (see Forces). Therefore the forces can not be used to obtain the equilibrium groundstate, which corresponds to an energy\\-minimum of   E ( \u03c3 \u2192 0 ) {\\\\displaystyle E(\\\\sigma \\\\to 0\\)} . Nonetheless the error in the forces is generally small and acceptable.* The parameter   \u03c3 {\\\\displaystyle \\\\sigma }  must be chosen with great care. If   \u03c3 {\\\\displaystyle \\\\sigma }  is too large the energy   E ( \u03c3 \u2192 0 ) {\\\\displaystyle E(\\\\sigma \\\\to 0\\)}  will converge to the wrong value even for an infinite k\\-point mesh. If   \u03c3 {\\\\displaystyle \\\\sigma }  is too small the convergence speed with the number of k\\-points will deteriorate. An optimal choice for   \u03c3 {\\\\displaystyle \\\\sigma }  for several cases is given in table 1\\. Aluminium possesses an extremely simple DOS, Lithium and Tellurium are also simple nearly free electron metals, therefore   \u03c3 {\\\\displaystyle \\\\sigma }  might be large. For Copper   \u03c3 {\\\\displaystyle \\\\sigma }  is restricted by the fact that the d\\-band lies approximately 0\\.5 eV beneath the Fermi\\-level. Rhodium and Vanadium posses a fairly complex structure in the DOS at the Fermi\\-level,   \u03c3 {\\\\displaystyle \\\\sigma }  must be small. The only way to get a good math\\>\\\\sigma\\</math\\> is by performing several calculations with different k\\-point meshes and different parameters for   \u03c3 {\\\\displaystyle \\\\sigma }  . Table 1: Typical convenient settings for   \u03c3 {\\\\displaystyle \\\\sigma }  for different metals. |  | Sigma(eV) || --- | --- || Aluminium | 1\\.0 || Lithium | 0\\.4 || Tellurium | 0\\.8 || Copper, Palladium | 0\\.4 || Vanadium | 0\\.2 || Rhodium | 0\\.2 || Potassium | 0\\.3 |   These problems can be solved by adopting a slightly differentfunctional form for   f ( {  \u03f5  n  k  } ) {\\\\displaystyle f(\\\\{\\\\epsilon \\_{n{\\\\mathbf {k}}}\\\\})} . This is possibleby expanding the step function in a complete orthonormal set of functions(method of Methfessel and Paxton [\\[7]](#cite_note-methfessel:prb:1989-7)).The Gaussian function is only the first approximation (  N {\\\\displaystyle N} \\=0\\)to the step function, further successive approximations (  N {\\\\displaystyle N} \\=1,2,...) are easily obtained.In similarity to the Gaussian method, the energy has to be replacedby a generalized free energy functional  F \\= E \u2212  \u2211  n  k  w  k  \u03c3 S (  f  n  k  ) . {\\\\displaystyle F\\=E\\-\\\\sum \\_{n{\\\\mathbf {k}}}w\\_{\\\\mathbf {k}}\\\\sigma S(f\\_{n{\\\\mathbf {k}}}).} In contrast to the Gaussian methodthe entropy term   \u2211  n  k  w  k  \u03c3 S (  f  n  k  ) {\\\\displaystyle \\\\sum \\_{n{\\\\mathbf {k}}}w\\_{\\\\mathbf {k}}\\\\sigma S(f\\_{n{\\\\mathbf {k}}})}  will be very smallfor reasonable values of   \u03c3 {\\\\displaystyle \\\\sigma } (for instance for the values given in table 1\\). The  \u2211  n  k  w  k  \u03c3 S (  f  n  k  ) {\\\\displaystyle \\\\sum \\_{n{\\\\mathbf {k}}}w\\_{\\\\mathbf {k}}\\\\sigma S(f\\_{n{\\\\mathbf {k}}})} is a simple error estimation for the difference between thefree energy   F {\\\\displaystyle F}  and the \"physical\" energy   E ( \u03c3 \u2192 0 ) {\\\\displaystyle E(\\\\sigma \\\\to 0\\)}  .  \u03c3 {\\\\displaystyle \\\\sigma }  can be increased till this error estimation gets too large."}
{"file_name": "KPOINTS_OPT_NKBATCH.md", "content": "KPOINTS\\_OPT\\_NKBATCH \\= \\[integer] Default: KPOINTS\\_OPT\\_NKBATCH= Number of k\\-points in the irreducible Brillouin zone of the self\\-consistent calculation.nDescription: KPOINTS\\_OPT\\_NKBATCH determines the size of the batch of k\\-points for the KPOINTS\\_OPT driver.  --- When the KPOINTS\\_OPT is present an additional non\\-self\\-consistent calculation is performed after self\\-consistency is reached.This one\\-shot calculation is done in batches of N k\\-points to reduce memory usage.Increasing the size of the batch leads to faster calculation times but higher memory usage in the non\\-self\\-consistent calculation."}
{"file_name": "LFXC.md", "content": "LFXC= .TRUE. \\| .FALSE.n| Default: **LFXC** | \\= .FALSE. |  || --- | --- | --- | Description: LFXC enables the local exchange\\-correlation kernel in TD\\-DFT and TDHF calculations.  --- The local exchange\\-correlation kernel is determined via [\\[1]](#cite_note-sander:prb:15-1)  f  x c  l o c  (  r  ,  r  \u2032  )  \\=  \u03b4  2  {  E  c  D F T  \\+  (  1 \u2212  c  x  )  E  x  D F T  }  \u03b4 \u03c1 (  r  ) \u03b4 \u03c1  (  r  \u2032  ) {\\\\displaystyle f\\_{\\\\mathrm {xc} }^{\\\\rm {loc}}\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\={\\\\frac {\\\\delta ^{2}\\\\left\\\\{E\\_{\\\\mathrm {c} }^{\\\\mathrm {DFT} }\\+\\\\left(1\\-c\\_{\\\\rm {x}}\\\\right)E\\_{\\\\mathrm {x} }^{\\\\mathrm {DFT} }\\\\right\\\\}}{\\\\delta \\\\rho (\\\\mathbf {r} )\\\\delta \\\\rho \\\\left(\\\\mathbf {r} '\\\\right)}}}  ,where   c  x {\\\\displaystyle c\\_{\\\\rm {x}}}  is the fraction of the exchange interaction set by AEXX."}
{"file_name": "NGXF.md", "content": "NGXF= \\[integer]   Default: **NGXF** \\= set in accordance with PREC, NGX, ENCUT and ENAUGnDescription: NGXF sets the number of grid points in the \"fine\" FFT grid along the first lattice vector.  --- On this \"fine\" FFT mesh the localized augmentation charges are represented if ultrasoft pseudopotentials (USPPs) or the PAW method are used. In case USPPs are used, the local potentials (exchange\\-correlation, Hartree\\-potential and ionic potentials) are also calculated on this \"fine\" FFT\\-mesh. By default NGXF is set in accordance with the requested \"precision\" mode PREC, NGX, and the plane wave kinetic energy cutoffs ENCUT and ENAUG: | PREC | NGX | NGXF || --- | --- | --- || Normal | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGX || Single (VASP.5\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGX || Single (VASP.6\\) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGX || SingleN (VASP.6\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGX || Accurate | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGX || Low | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} || Medium | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 4\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} || High | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 16/3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} | where  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2  E  a u g  \\=  \u210f  2  2  m  e  G  a u g  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}\\\\qquad E\\_{\\\\rm {aug}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {aug}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT and   E  a u g {\\\\displaystyle E\\_{\\\\rm {aug}}} \\=ENAUG. Alternatively, NGXF can be set to a specific value in the INCAR file."}
{"file_name": "Molecular_dynamics_-_Tutorial.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorialsThe tutorial is made of the following parts: 1. Liquid Si \\- Standard MD2. Liquid Si \\- Freezing3. Nuclephile Substitution CH3Cl \\- Standard MD4. Nuclephile Substitution CH3Cl \\- mMD15. Nuclephile Substitution CH3Cl \\- mMD26. Nuclephile Substitution CH3Cl \\- mMD37. Nuclephile Substitution CH3Cl \\- SG8. Nuclephile Substitution CH3Cl \\- BM"}
{"file_name": "MP2_calculations.md", "content": "By specifying ALGO\\=*MP2* in the INCAR file VASP calculates MP2 correlation energies. It is strongly recommended to calculate all virtual states spanned by the basis set before calling the MP2 routines. Thus any MP2 calculation should proceed in three steps: * The first step is the determination of the occupied orbitals of the Hartree\\-Fock Hamiltonian. Note that MP2 requires to calculate the Hartree\\-Fock groundstate, and any LDA or GGA correlation should be switched off. Following specific INCAR tags have to be set:  ```LHFCALC = .TRUE.AEXX = 1.0\u00a0; ALDAC = 0.0\u00a0; AGGAC = 0.0ALGO = D\u00a0; EDIFF = 1E-7  ``` * Next search for maximum number of plane\\-waves in the OUTCAR file and execute VASP again using the following INCAR tags:  ```NBANDS  =   maximum number of plane-wavesLHFCALC = .TRUE.AEXX = 1.0\u00a0; ALDAC = 0.0\u00a0; AGGAC = 0.0ALGO = Exact\u00a0; NELM = 1\u00a0; LOPTICS = .TRUE.  ``` * Finally calculate the MP2 correlation energy:  ```NBANDS  =   maximum number of plane-wavesLHFCALC = .TRUE.\u00a0;  AEXX = 1.0\u00a0; ALDAC = 0.0LMAXMP2\") = 2  ``` The flag LMAXMP2 specifies the maximum   l {\\\\displaystyle l}  quantum number for the treatment of the one\\-center terms. This should be set to twice the maximum of the non local component in the pseudopotential. Alternatively LMAXFOCKAE can be set in the INCAR file. This is expected to be more efficient, but slightly less accurate. Combining LMAXFOCKAE and LMAXFOCKMP2\") is in principle also allowed but hardly offers any advantage over using only LMAXFOCKAE or LMAXFOCKMP2\").   ---"}
{"file_name": "NPACO.md", "content": "NPACO= \\[integer]   Default: **NPACO** \\= 256nDescription: NPACO sets the number of slots in the pair\\-correlation function written to PCDAT.  --- VASP evaluates the pair\\-correlation function each NBLOCK steps and writes the PC\\-function after NBLOCK\u00d7KBLOCK steps to the PCDAT file."}
{"file_name": "IVDW_NL.md", "content": "IVDW\\_NL= \\[integer]n| Default: **IVDW\\_NL** | \\= 1 | for a GGA || --- | --- | --- ||  | \\= 2 | for a METAGGA | Description: IVDW\\_NL allows to select the kernel of the nonlocal van der Waals part of a functional (available as of VASP.6\\.4\\.0\\).  --- IVDW\\_NL\\=1 corresponds to the kernel of Dion *et al.*[\\[1]](#cite_note-dion:prl:2004-1) and IVDW\\_NL\\=2 to the kernel rVV10[\\[2]](#cite_note-sabatini:prb:2013-2). Note that the kernel of Dion *et al.* contains one adjustable parameter (ZAB\\_VDW), while the rVV10 kernel contains two such parameters (BPARAM and CPARAM)."}
{"file_name": "Number_of_G-vectors_changed_in_the_star.md", "content": "This happens because the number of G vectors in the plane\\-wave basis for each k\\-point is determined according to  \u210f  2  2  m  e  (  G \\+ k  )  2  \\< ENCUT {\\\\displaystyle {\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}(\\\\mathbf {G\\+k} )^{2}\\<{\\\\text{ENCUT}}} Using this criterion for different k\\-points will yield a different number of G\\-vectors that fall within the sphere for each k\\-point. VASP by default computes the orbitals for k points in the irreducible Brillouin zone (IBZ) i.e. k\\-points that cannot be generated from another in the set by symmetry.For some calculations, VASP needs to generate the orbitals in the full Brillouin zone (FBZ) and does so by applying the symmetry operations to the orbitals in the IBZ to get them in the FBZ.The number of G\\-vectors within the sphere should be the same for k\\-points that are in a star i.e. the set of k\\-points that are generated by applying all the symmetry operations to one k\\-points in the IBZ.Sometimes the number of G\\-vectors is different for k\\-points that are within a star and you see this error  ``` -----------------------------------------------------------------------------|                                                                             ||     EEEEEEE  RRRRRR   RRRRRR   OOOOOOO  RRRRRR      ###     ###     ###     ||     E        R     R  R     R  O     O  R     R     ###     ###     ###     ||     E        R     R  R     R  O     O  R     R     ###     ###     ###     ||     EEEEE    RRRRRR   RRRRRR   O     O  RRRRRR       #       #       #      ||     E        R   R    R   R    O     O  R   R                               ||     E        R    R   R    R   O     O  R    R      ###     ###     ###     ||     EEEEEEE  R     R  R     R  OOOOOOO  R     R     ###     ###     ###     ||                                                                             ||     internal error in GENERATE_KPOINTS_TRANS: number of G-vector            ||     changed in star 570 569                                                 ||                                                                             ||       ---->  I REFUSE TO CONTINUE WITH THIS SICK JOB ... BYE!!! <----       ||                                                                             | -----------------------------------------------------------------------------  ``` This should in principle not happen but it can happen because the symmetry operations are found within the SYMPREC tolerance. There are a few things you can try to circumvent this problem: * Symmetrize your POSCAR file using this script also see more details in POSCAR) * Try and change ENCUT slightly * Deactivate symmetries by setting ISYM\\=0 or ISYM\\=\\-1    ---"}
{"file_name": "VDW_C6AU.md", "content": "VDW\\_C6AU= \\[real (array)]nDescription: VDW\\_C6AU defines the   C  6 {\\\\displaystyle C\\_{6}}  parameters (  H a r t r e e {\\\\displaystyle \\\\mathrm {Hartree} }    b o h r  6 {\\\\displaystyle \\\\mathrm {bohr} ^{6}} ) for each species defined in the POSCAR file.  --- VDW\\_C6AU sets the   C  6 {\\\\displaystyle C\\_{6}}  parameters (  H a r t r e e {\\\\displaystyle \\\\mathrm {Hartree} }    b o h r  6 {\\\\displaystyle \\\\mathrm {bohr} ^{6}} ) for each species defined in the POSCAR file for the Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods."}
{"file_name": "NGYF.md", "content": "NGYF= \\[integer]   Default: **NGYF** \\= set in accordance with PREC, NGY, ENCUT and ENAUGnDescription: NGYF sets the number of grid points in the \"fine\" FFT grid along the second lattice vector.  --- On this \"fine\" FFT mesh the localized augmentation charges are represented if ultrasoft pseudopotentials (USPPs) or the PAW method are used. In case USPPs are used, the local potentials (exchange\\-correlation, Hartree\\-potential and ionic potentials) are also calculated on this \"fine\" FFT\\-mesh. By default NGYF is set in accordance with the requested \"precision\" mode PREC, NGY, and the plane wave kinetic energy cutoffs ENCUT and ENAUG: | PREC | NGY | NGYF || --- | --- | --- || Normal | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGY || Single (VASP.5\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGY || Single (VASP.6\\) | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGY || SingleN (VASP.6\\) | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | NGY || Accurate | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 2\u00d7NGY || Low | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} || Medium | 3/2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 4\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} || High | 2\u00d7     G   c u t      {\\\\displaystyle G\\_{\\\\rm {cut}}}  G_{{{\\rm {cut}}}} | 16/3\u00d7     G   a u g      {\\\\displaystyle G\\_{\\\\rm {aug}}}  }} | where  E  c u t  \\=  \u210f  2  2  m  e  G  c u t  2  E  a u g  \\=  \u210f  2  2  m  e  G  a u g  2 {\\\\displaystyle E\\_{\\\\rm {cut}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {cut}}^{2}\\\\qquad E\\_{\\\\rm {aug}}\\={\\\\frac {\\\\hbar ^{2}}{2m\\_{e}}}G\\_{\\\\rm {aug}}^{2}} with   E  c u t {\\\\displaystyle E\\_{\\\\rm {cut}}} \\=ENCUT and   E  a u g {\\\\displaystyle E\\_{\\\\rm {aug}}} \\=ENAUG. Alternatively, NGYF can be set to a specific value in the INCAR file."}
{"file_name": "LSINGLES.md", "content": "LSINGLES= .TRUE. \\| .FALSE.   Default: **LSINGLES** \\= .FALSE.nDescription: Switch on singles contribution to correlation energy for GW algorithms.[\\[1]](#cite_note-klimes:jcp:143-1)  --- LSINGLES enables the calculation of the singles contributions to the correlation energy that can be represented by the following Feynman (time\\-ordered) diagrams:[\\[2]](#cite_note-kaltak:thesis2015-2)[\\[1]](#cite_note-klimes:jcp:143-1) [](File_SinglesDiagrams.html) LSINGLES is used in combination with the low\\-scaling ACFDT/RPA and GW algorithms.  If the ACFDT/RPA algorithm is selected with ALGO\\=RPAR\\|ACFDTR and LSINGLES is set, the code calculates two singles contributions and writes following lines to OUTCAR  ```HF single shot energy change        -1.23182672renormalized HF singles             -1.23310555  ``` Here, **renomalized HF singles** corresponds to the renormalized singles contribution suggested by Ren and coworkers:[\\[3]](#cite_note-ren:prb:88-3) **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle E^{rSE}\\_c \\= \\-\\\\sum\\_{a\\\\in virt, i\\\\in occ} \\\\frac{\\|\\\\langle i\\| V^{HF} \\- V\\_0^{KS}\\|a\\\\rangle\\|^2 }{\\\\epsilon\\_a\\-\\\\epsilon\\_i} }** This contribution accounts for the change of the mean\\-field exchange energy and can be derived consistently within the AC\\-FDT framework as described in Sec. II D Eq. (28\\) of Klime\u0161 et al.[\\[1]](#cite_note-klimes:jcp:143-1) In contrast, the **HF single shot energy change** line contains the somewhat simpler contribution[\\[1]](#cite_note-klimes:jcp:143-1) **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle E\\_c^{rSE} \\= \\\\mathrm{Tr}\\\\left\\[ (\\\\gamma\\_{HF} \\- \\\\gamma\\_{DFT})\\\\hat h\\_{HF} \\\\right], }** where **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle \\\\gamma\\_{HF}}** is the Hartree\\-Fock density matrix, determined for the Hartree\\-Fock Hamiltonian **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle \\\\hat h\\_{HF}}** and **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle \\\\gamma\\_{DFT}}** is the Kohn\\-Sham density matrix.In all practical calculations, we found that both values, the single\\-shot HF and renormalized singles contributions, are exceedingly close to each other. If the GW algorithm is selected with ALGO\\=G0W0R, the OUTCAR contains also the singles contribution beyond the Hartree\\-Fock level **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle E\\_c^{GWSE} \\= \\\\mathrm{Tr}\\\\left\\[ (\\\\gamma\\_{RPA} \\- \\\\gamma\\_{DFT})\\\\hat h\\_{HF} \\\\right], }** where **Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (\"Math extension cannot connect to Restbase.\") from server \"https://www.vasp.at/wiki/restbase/vasp.at/v1/\":): {\\\\displaystyle \\\\gamma\\_{RPA}}** is the RPA density matrix.[\\[1]](#cite_note-klimes:jcp:143-1)For versions \\<\\= 6\\.4\\.2, this contribution is not directly printed to file. However, the first and second term is printed to OUTCAR:  ```Energies using frozen KS orbitalsHartree-Fock free energy of the ion-electron system (eV) ... eigenvalues         EBANDS =       -88.61789695   <--------Tr{ gam_DFT h_HF}--------- ...Energies after update of density matrix Hartree-Fock free energy of the ion-electron system (eV)  ... eigenvalues         EBANDS =       -89.68870320   <--------Tr{ gam_RPA h_HF}--------- ...  ``` Version \\>6\\.4\\.2 writes the GWSE singles contribution to OUTCAR:   ``` GWSE singles contribution:        -1.07080625  ``` | **Mind:** The singles contribution is calculated correctly only for the default NATURALO\\=2\\. || --- | The ACFDT total energy in the limit of infinite energy cutoff is then obtained by adding the singles contribution to the value of  `HF+E_corr(extrapolated)u00a0 =u00a0 \u00a0 -153.98810072 eV`"}
{"file_name": "LVTOT.md", "content": "LVTOT= \\[logical]   Default: **LVTOT** \\= .FALSE.nDescription: Determines whether the total local potential   V LOCPOT  (  r  ) {\\\\displaystyle V\\_{\\\\text{LOCPOT}}(\\\\mathbf {r} )}  (in eV) is written to the LOCPOT file.  ---  V LOCPOT  (  r  ) \\=  V ionic  (  r  ) \\+ \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  r \u2032  \\+  V  xc  (  r  ) {\\\\displaystyle V\\_{\\\\text{LOCPOT}}(\\\\mathbf {r} )\\=V\\_{\\\\text{ionic}}(\\\\mathbf {r} )\\+\\\\int {\\\\frac {n(\\\\mathbf {r'} )}{\\|\\\\mathbf {r} \\-\\\\mathbf {r'} \\|}}d\\\\mathbf {r'} \\+V\\_{\\\\text{xc}}(\\\\mathbf {r} )} where   V ionic  (  r  ) {\\\\displaystyle V\\_{\\\\text{ionic}}(\\\\mathbf {r} )}  is the ionic potential,the second term is the Hartree potential, and   V  xc  (  r  ) {\\\\displaystyle V\\_{\\\\text{xc}}(\\\\mathbf {r} )}  is the (semi\\-)local exchange\\-correlation potential. If LVTOT\\=.TRUE., the   V LOCPOT  (  r  ) {\\\\displaystyle V\\_{\\\\text{LOCPOT}}(\\\\mathbf {r} )}  is written to the LOCPOT file and the POT file. The POT file additionally contains the augmentation part.  | **Warning:** LVHAR\\=T changes the content of the LOCPOT file. || --- | WRT\\_POTENTIAL also gives access to the total local potential and offers more options."}
{"file_name": "EVENONLY.md", "content": "EVENONLY= .TRUE. \\| .FALSE.   Default: **EVENONLY** \\= .FALSE.nDescription: EVENONLY\\=.TRUE. selects a subset of **k**\\-points for the representation of the Fock exchange potential, with *C*1\\=*C*2\\=*C*3\\=1, and *n*1\\+*n*2\\+*n*3 even.  --- One may restrict the sum over **q** in the Fock exchange potential (or one of its short range counterparts) to a subset, {**q****k**}, of the full (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-point set, {**k**}, for which the following holds  q  k  \\=  b  1  n  1  C  1  N  1  \\+  b  2  n  2  C  2  N  2  \\+  b  3  n  3  C  3  N  3  ,  (  n  i  \\= 0 , . . ,  N  i  \u2212 1 ) {\\\\displaystyle \\\\mathbf {q\\_{k}} \\=\\\\mathbf {b} \\_{1}{\\\\frac {n\\_{1}C\\_{1}}{N\\_{1}}}\\+\\\\mathbf {b} \\_{2}{\\\\frac {n\\_{2}C\\_{2}}{N\\_{2}}}\\+\\\\mathbf {b} \\_{3}{\\\\frac {n\\_{3}C\\_{3}}{N\\_{3}}},\\\\quad (n\\_{i}\\=0,..,N\\_{i}\\-1\\)} where **b**1,2,3 are the reciprocal lattice vectors of the primitive cell,and *C*i is the integer grid reduction factor along reciprocal lattice direction**b**i. EVENONLY\\=.TRUE. selects a subset of **k**\\-points with *C*1\\=*C*2\\=*C*3\\=1, and *n*1\\+*n*2\\+*n*3 even. It reduces the computational work load for HF type calculations by a factor two, but is only sensible for high symmetry cases (such as sc, fcc or bcc cells).   | **Warning:** there are circumstances under which **NKRED** and **NKREDX**,**Y**,**Z** should not be used! || --- |"}
{"file_name": "Many-body_perturbation_theory.md", "content": "**Many\\-body perturbation theory** includes screening and renormalization effects beyond the density\\-functional theory (DFT). It is based on the Green's\\-function formalism and can be derived and visualized in terms of a diagrammatic expansion of, e.g., the electron interacting with other electrons. Instead of describing the electrons by means of Kohn\\-Sham (KS) orbitals, the renormalized (or dressed) propagators yield quasiparticle orbitals. Theory------ ### Random\\-phase approximation (RPA) GW and RPA are post\\-DFT methods used to solve the many\\-body problem approximatively.  RPA stands for the random\\-phase approximation and is often used as a synonym for the adiabatic connection fluctuation\\-dissipation theorem (ACFDT). RPA/ACFDT provides access to the correlation energy of a system and can be understood in terms of Feynman diagrams as an infinite sum of all bubble diagrams, where excitonic effects (interactions between electrons and holes) are neglected. The RPA/ACFDT is used as a post\\-processing tool to determine a more accurate ground\\-state energy. * RPA/ACFDT: Correlation energy in the Random Phase Approximation . ### Constrained random\\-phase approximation The constrained random\\-phase approximation (CRPA) is a method that allows calculating the effective interaction parameter   U {\\\\displaystyle U}  ,  J {\\\\displaystyle J}  and  J \u2032 {\\\\displaystyle J'}  for model Hamiltonians. The main idea is to neglect the screening effects of specific target states in the screened Coulomb interaction   W {\\\\displaystyle W}  of the   G W {\\\\displaystyle GW}  method. Usually, the target space is low\\-dimensional (up to 5 states) and therefore allows for the application of a higher\\-level theory, such as dynamical\\-mean\\-field theory (DMFT). * Formalism used for the CRPA method ### GW method The GW approximation goes hand in hand with the RPA since the very same diagrammatic contributions are taken into account in the screened Coulomb interaction of a system often denoted as W. However, in contrast to the RPA/ACFDT, the GW method provides access to the spectral properties of the system by means of determining the energies of the quasi\\-particles of a system using a screened exchange\\-like contribution to the self\\-energy. The GW approximation is currently one of the most accurate many\\-body methods to calculate band\\-gaps. * The GW approximation of Hedin's equations. ### Bethe\\-Salpeter equations (BSE) VASP offers a powerful module for solving time\\-dependent DFT (TD\\-DFT) and time\\-dependent Hartree\\-Fock equations (TDHF) (the Casida equation) or the Bethe\\-Salpeter (BSE) equation[\\[1]](#cite_note-albrecht:prl:98-1)[\\[2]](#cite_note-rohlfing:prl:98-2). These approaches are used for obtaining the frequency\\-dependent dielectric function with the excitonic effects and can be based on the ground\\-state electronic structure in the DFT, hybrid\\-functional, or *GW*  approximations. VASP also offers the TDHF and BSE calculations beyond the Tamm\\-Dancoff approximation (TDA)[\\[3]](#cite_note-sander:prb:15-3). * Tags and articles related to BSE calculations. ### Second\\-order M\u00f8ller\\-Plesset perturbation theory (MP2\\) There are three implementations available: * **MP2**[\\[4]](#cite_note-marsman-4): this implementation is recommended for very small unit cells, very few k\\-points and very low plane\\-wave cuttofs. The system size scaling of this algorithm is N\u2075.* **LTMP2**[\\[5]](#cite_note-schaefer2017-5): for all larger systems this Laplace transformed MP2 (LTMP) implementation is recommended. Larger cutoffs and denser k\\-point meshes can be used. It possesses a lower system size scaling (N\u2074) and a more efficient k\\-point sampling.* **stochastic LTMP2**[\\[6]](#cite_note-schaefer2018-6): even faster calculations at the price of statistical noise can be achieved with the stochastic MP2 algorithm. It is an optimal choice for very large systems where only relative errors per valence electron are relevant. Keeping the absolute error fixed, the algorithm exhibits a cubic scaling with the system size, N\u00b3, whereas for a fixed relative error, a linear scaling, N\u00b9, can be achieved. Note that there is no k\\-point sampling and no spin polarization implemented for this algorithm. How to------ Practical guides to different diagrammatic approximations are found on following pages: * ACFDT: ACFDT/RPA calculations.* GW: Practical guide to GW calculations.* BSE: BSE calculations.* Using the GW routines for the determination of frequency dependent dielectric matrix: GW and dielectric matrix.* MP2 method: MP2 ground state calculation \\- Tutorial."}
{"file_name": "ML_SIGW0.md", "content": "ML\\_SIGW0= \\[real]   Default: nonen| Default: **ML\\_SIGW0** | \\= 1E\\-7 | for ML\\_MODE \\= REFIT || --- | --- | --- ||  | \\= 1\\.0 | else | Description: This flag sets the precision parameter   s  w {\\\\displaystyle s\\_{\\\\mathrm {w} }}  (see here for definition) for the fitting in the machine learning force field method.   --- The default value for ML\\_MODE\\=*REFIT* works reliably in most calculations. However, if the regularization needs to be controlled manually, like e.g. in the fitting via singular value decomposition (ML\\_MODE\\=*REFIT* or ML\\_IALGO\\_LINREG\\=4\\), the best is to control the regularization via this parameter and keep the noise paramter   s  v {\\\\displaystyle s\\_{\\\\mathrm {v} }}  (see ML\\_SIGV0) constant at 1\\. For the theory of this regularization parameter see this section."}
{"file_name": "Tkatchenko-Scheffler_method_with_iterative_Hirshfeld_partitioning.md", "content": "The Tkatchenko\\-Scheffler method, which uses fixed neutral atoms as a reference to estimate the effective volumes of atoms\\-in\\-molecule (AIM) and to calibrate their polarizabilities and dispersion coefficients, fails to describe the structure and the energetics of ionic solids. As shown in"}
{"file_name": "IDIPOL.md", "content": "IDIPOL= 1 \\| 2 \\| 3 \\| 4nDescription: IDIPOL switches on monopole/dipole and quadrupole corrections to the total energy in a specific direction (1\\-3\\) or all directions (4\\)  --- IDIPOL \\= 1\\-3-------------- The dipole moment will be calculated only parallel to the direction of the first, second or third lattice vector, respectively. The corrections for the total energy are calculated as the energy difference between a monopole/dipole and quadrupole in the current supercell and the same dipole placed in a super cell with the corresponding lattice vector approaching infinity.  | **Tip:** This flag should be used for slab calculations, with the surface normal being the direction in which the IDIPOL is set || --- | IDIPOL \\= 4----------- For IDIPOL\\=4 the full dipole moment in all directions will be calculated, and the corrections to the total energy are calculated as the energy difference between a monopole/dipole/quadrupole in the current supercell and the same monopole/dipole/quadrupole placed in a vacuum. | **Tip:** Use this flag for calculations for isolated molecules. || --- | **Note**: strictly speaking quadrupole corrections is not the proper wording. The relevant quantity is  \u222b  d  3  r  \u03c1 (  r  ) \u2016  r  \u2016  2  . {\\\\displaystyle \\\\int d^{3}{\\\\mathbf {r} }\\\\rho (\\\\mathbf {r} )\\\\Vert \\\\mathbf {r} \\\\Vert ^{2}.}"}
{"file_name": "IRC_calculations.md", "content": "The potential energy profiles along the **intrinsic reaction coordinate** (IRC) can be computed via the method of Hratchian and Schlegel[\\[1]](#cite_note-hratchian:jpc:2002-1). The algorithm starts from the transition state and propagates the system via the damped\\-velocity\\-Verlet algorithm. The damping is realized via rescaling the velocity vector to a constant value (  v  0 {\\\\displaystyle v\\_{0}} ) after each propagation step. At the same time, the time step is adaptively changed so as to ensure that the trajectory generated by the algorithm does not differ from true IRC by more than the predefined tolerance factor   \u0394  0 {\\\\displaystyle \\\\Delta \\_{0}} . As an input, the structure of a well\\-relaxed transition state and the direction of the unstable vibration mode must be provided. For that purpose, a CONTCAR file from an improved\\-dimer\\-method calculation converged with a tight relaxation criterion (e.g., EDIFFG \\=\\-0\\.005\\) can be used. To obtain a complete energy profile along the IRC connecting two stable states, two independent calculations with positive (IRC\\_DIRECTION \\=1\\) and negative (IRC\\_DIRECTION \\=\\-1\\) initial displacement along the direction of the unstable mode must be performed.  The following parameters can be modified to affect the performance of the method:  * IRC\\_DIRECTION  direction of the initial displacement (\\-1\\|1 \u2013 negative\\|positive)* IRC\\_STOP the number of steps the energy must monotonously increase before the algorithm terminates. In order to avoid a premature termination, especially close to transition states., e.g., due to numerical noise, IRC\\_STOP should always be greater than 1\\.* IRC\\_DELTA0 the tolerance factor   \u0394  0 {\\\\displaystyle \\\\Delta \\_{0}}  in \u00c5* IRC\\_MINSTEP specifies the lower limit for the time step in fs* IRC\\_MAXSTEP specifies the upper limit for the time step in fs* IRC\\_VNORM0 the value of   v  0 {\\\\displaystyle v\\_{0}}  in \u00c5/fs \\- the smaller the value, the closer the computed trajectory follows the true IRC (but the more ionic steps are required, which might be a limitation if the calculation is performed at a DFT level) | **Mind:** This method is presently available only for fixed cell shape (i.e., ISIF \\= 2\\) simulations. || --- | | **Mind:** The calculation must be initialized from a very well\\-relaxed transition state (EDIFFG \\= \\-0\\.005 or less in absolute value). || --- | | **Mind:** This type of calculation can be also performed at the MLFF level. || --- | Practical example----------------- As practical example, let us consider the SN2 reaction of CH3Cl with Cl\\- for which we wish to determine potential energy profile along IRC using machine learned forcefield trained to reproduce PBE density functional approximation. The IRC calculation consists of two independent simulations corresponding to parts of path linking transition state with reactant and with product, respectively. For practical reasons, we shall therefore run the simulations in two different directories called, say, m and p, both of which should contain POSCAR, KPOINTS, POTCAR, INCAR and ML\\_FF files. The POSCAR file:  ```transition state for the SN2 reaction of CH3Cl with Cl-  1.00000000000000   12.0000000000000000    0.0000000000000000    0.0000000000000000    0.0000000000000000   12.0000000000000000    0.0000000000000000    0.0000000000000000    0.0000000000000000   12.0000000000000000  C    H    Cl    1     3     2 Direct 0.5850734246784209  0.5520914206000113  0.6939676081570985\u00a0! coordinates for atom 1 0.6198799799863561  0.5166828822917992  0.6192173893914401 0.5120438703668218  0.5155341457726120  0.7311383922253840 0.6232988535554732  0.6240585575728448  0.7315296645899942 0.4727762112937258  0.6675904758190063  0.5870243322899322 0.6973145053782144  0.4366510550400121  0.8010186348593505\u00a0! coordinates for atom N! unstable direction optimized by the dimer method 0.50309310E+00 -0.52116977E+00  0.48103627E+00            \u00a0! components for atom 1-0.29990134E-01  0.31072124E-01 -0.24160721E-01-0.37734828E-01  0.43431417E-01 -0.39422281E-01-0.41647034E-01  0.41752749E-01 -0.38921427E-01-0.20205452E+00  0.20762993E+00 -0.17619553E+00-0.19166655E+00  0.19728353E+00 -0.20233630E+00            \u00a0! components for atom N  ``` is simply a copy of a CONTCAR file from a well converged improved dimer calculation. Notice that besides usual structural input, POSCAR must contain unstable direction that is needed to initialize the algorithm. To obtain the ML\\_FF used in this example, the data included in compressed directory File:GenerateMLFF.zip should be used. The POTCAR file should be prepared for atoms C, H, and Cl and the KPOINTS file  ```Automatic 0Gamma1  1  10. 0. 0.  ``` The INCAR file located in directory m should contain the following lines:  ```IBRION = 40                  # invokes the IRC calculationIRC_DIRECTION = -1           # negative initial direction of movementIRC_STOP = 20                # terminate when IRC_STOP energies in row increaseIRC_VNORM0 = 0.0005          # affects accuracy, the smaller the better but the more                              # ionic steps neededNSW = 5000                   # maximal number of steps ISIF = 2NELECT = 22                  # the overall charge of this                             # system is -1 hence the number                             # of electrons is increased (not really needed when                              # the calculation is done at the MLFF level) ML_LMLFF = .TRUE.            # invoke MLFF ML_ISTART = 2                # sets the mode of MLFF to production   ``` The INCAR file located in directory p should differ from that in directory m only in the value of parameter IRC\\_DIRECTION , which should be set to positive 1\\. [](File_IrcExample1.html) Potential energy profile along intrinsic reaction coordinate generated in this practical example for the SN2 reaction of CH3Cl with Cl\\-.             Both calculations can be finished in just a few seconds and the potential energy profile along IRC: Both calculations can be finished in just a few seconds and the potential energy profile along IRC: shown on the figure above, can be obtained by a simple post\\-processing. For instance, this simple bash script ircShift.sh:  ```#!/usr/bin/bash e0=$(grep \"IRC (A):\" m/OUTCAR|awk '{print $5}'|head -1) grep \"IRC (A):\" m/OUTCAR|awk '{print $3,$5 - \"'${e0}'\"}' >tmp.tmpgrep \"IRC (A):\" p/OUTCAR|awk '{print $3,$5 - \"'${e0}'\"}' >>tmp.tmp sort -n tmp.tmp >ircShift.dat  ``` executed in a directory one level above directories m and p generates the file ircShift.dat containing data in two\\-column format that can be visualized using gnuplot, xmgrace, origin, or many other popular visualization tools."}
{"file_name": "All.md", "content": "``` ## define the commands that run vasp_std, vasp_ncl, and vasp_gam ## Default: ###export VASP_TESTSUITE_EXE_STD=\"mpirun -np 4 $PWD/../bin/vasp_std\"##export VASP_TESTSUITE_EXE_NCL=\"mpirun -np 4 $PWD/../bin/vasp_ncl\"##export VASP_TESTSUITE_EXE_GAM=\"mpirun -np 4 $PWD/../bin/vasp_gam\"  ```"}
{"file_name": "INIWAV.md", "content": "INIWAV= 0 \\| 1n| Default: **INIWAV** | \\= 1 |  || --- | --- | --- | Description: INIWAV specifies how to set up the initial orbitals in case ISTART\\=0\\.  --- * INIWAV\\=0 Take 'jellium orbitals', i.e., fill the Kohn\\-Sham\u2013orbital arrays with plane waves of lowest kinetic energy \\= lowest eigenvectors for a constant potential ('jellium'). | **Important:** 'jellium' calculations require a specific POTCAR file, not included in the standard potential database. || --- | * INIWAV\\=1 Fill the Kohn\\-Sham\u2013orbital arrays with random numbers. It is definitely the safest fool\\-proof switch. | **Tip:** Use INIWAV\\=1 whenever possible. || --- | | **Mind:** The INIWAV tag is only used for jobs that start from scratch (ISTART\\=0\\) and has no meaning otherwise. || --- | Examples that use this tag  ---"}
{"file_name": "ML_ISTART.md", "content": "ML\\_ISTART= \\[integer]   Default: **ML\\_ISTART** \\= 0n| **Warning:** This tag is deprecated and we advise to use ML\\_MODE instead. || --- | Description: This tag selects the mode of operation (e.g. start from scratch, prediction\\-only,...) of the machine learning force fields method.  --- If the machine learning force fields method is enabled via ML\\_LMLFF \\= .TRUE., this tag further specifies the mode of operation when VASP is run. The following cases can be selected: * ML\\_ISTART \\= 0: On\\-the\\-fly learning is enabled, starting from scratch. Force predictions from the machine learning force field are used to drive the MD simulation. However, if the error estimation performed in each time step indicates a high force error an ab initio calculation is performed instead and the collected energy, forces and stress are used to improve the machine learning force field. Setting ML\\_ISTART \\= 0 starts the machine learning force field from scratch. Hence, in the beginning of the MD run there is no force field available and ab initio calculations will happen frequently.* ML\\_ISTART \\= 1: Same as ML\\_ISTART \\= 0 but taking into account pre\\-existing ab initio data. This is the usual choice for continuing a previous MD simulation with activated machine learning. Before the MD run starts the ML\\_AB file, copied from ML\\_ABN from a previous run, is read and the contained ab initio energies, forces and stresses are used to generate an initial force field. Note that this preparative learning step adopts the previous choice of local reference configurations, i.e. the reference atomic environments entering the kernel are taken from a list in the ML\\_AB file. Then, the MD simulation is started with on\\-the\\-fly learning enabled. The ML\\_AB file does not necessarily need to contain structures matching the current starting configuration in the POSCAR file in terms of simulation box, present elements or number of atoms. However, if the same elements appear the initial force field is of course used for predictions. In any case the provided training data is included in the finally generated machine learning force field, i.e. the ML\\_FFN file will define a force field applicable to both, the structures in the ML\\_AB file **and** the current MD simulation. By restarting repeatedly with ML\\_ISTART \\= 1 while providing an ML\\_AB file from the last run it is possible to iteratively extend the applicability of the resulting machine learning force field, e.g. by exploring different temperature ranges or element compositions. | **Tip:** Setting ML\\_ISTART \\= 1 together with NSW \\= 0 allows to repeat learning on the given training data and create a new force field in ML\\_FFN without actually performing additional MD steps. In this way force field parameters (e.g. cutoff radii, number of radial basis functions, etc.) can be varied without recalculating the entire trajectory. Moreover, because Bayesian error estimation is not required when no MD is run it is possible to switch the regression algorithm via the tag ML\\_IALGO\\_LINREG and check whether in this way better fitting results can be achieved. In order to avoid that the starting structure in the POSCAR file is processed and eventually added to the training data just set ML\\_CTIFOR to a large value (e.g. 1000\\). || --- | * ML\\_ISTART \\= 2: Prediction only. In this mode the previously trained machine learning force field is read from the ML\\_FF file. The MD simulation is driven with predictions from the force field only, no ab initio calculations are performed and no learning is executed. However, in order to monitor the quality of predictions the Bayesian error estimate of forces is still computed and logged in the ML\\_LOGFILE. This setting is typically used when the machine learning force field is considered mature and ready for production runs.* ML\\_ISTART \\= 3: Learning from given ab initio data only, no MD time steps. In this operation mode a new machine learning force field is generated from ab initio data provided in the ML\\_AB file. The structures are read in and processed one by one as if harvested via an MD simulation. In other words, the same steps are performed as in on\\-the\\-fly training but the source of data is not an MD run but the series of structures available in ML\\_AB. This operation mode can be used to generate VASP machine learning force fields from pre\\-computed or external ab initio data sets. At first glance ML\\_ISTART \\= 3 looks very similar to the combination of ML\\_ISTART \\= 1 and NSW \\= 0 described above. However, there is an important difference: Setting ML\\_ISTART \\= 3 will ignore the list of local reference configurations in the ML\\_AB file and instead will determine a new collection which is written to the resulting ML\\_ABN file. | **Tip:** If calculations for ML\\_ISTART \\= 3 are too time\\-consuming using the default settings, it is useful to increase ML\\_MCONF\\_NEW to values around 10\\-16 and set ML\\_CDOUB \\= 4\\. This often accelerates the calculations by a factor of 2\\-4\\. || --- |  The ML\\_AB file may contain values for *CTIFOR* for each training structure. These are the thresholds used to sample that structure from the previous training. If a value for ML\\_CTIFOR is specified in the INCAR file, that value is then used and the thresholds from the ML\\_AB are ignored. Otherwise: 1\\) If thresholds exist in the ML\\_AB they are used. 2\\) If no thresholds are specified the default value for ML\\_CTIFOR is used.* ML\\_ISTART \\= 4: Refitting of the force field is done based on an existing ML\\_AB file, but the number of local reference configurations is taken from the ML\\_AB file. NSW on the input is ignored and only a single step is executed. No ab\\-initio calculation is carried out."}
{"file_name": "ML_LAFILT2.md", "content": "ML\\_LAFILT2= \\[logical]   Default: **ML\\_LAFILT2** \\= .TRUE.nDescription: This tag specifies whether angular filtering is applied or not within the machine learning force field method.  --- For the desciption of the filters please see: ML\\_IAFILT2 and ML\\_AFILT2. The applied angular filter is also briefly described here."}
{"file_name": "EFIELD_PEAD.md", "content": "EFIELD\\_PEAD= \\[real array]n| Default: **EFIELD\\_PEAD** | \\= 3\\*0\\.01 | if LCALCEPS\\=.TRUE. || --- | --- | --- ||  | \\= 3\\*0\\.0 | else | Description: EFIELD\\_PEAD specifies the homogeneous electric force field in the electric enthalpy functional used to compute the self\\-consistent response to finite electric fields. EFIELD\\_PEAD is specified in units of eV/\u00c5. | **Mind:** If EFIELD\\_PEAD is used in combination with LCALCEPS\\=.TRUE., electric field values below 1E\\-5 will be reset to the default value. || --- |  ---  If  ```EFIELD_PEAD=\u03b5x \u03b5y \u03b5z   ``` is set, with \\|*\u03b5*\\|\\>0, VASP will first determine the zero\\-field groundstate of the system, and subsequently switch on the electric field and compute the field\\-polarized groundstate orbitals. Additionally, from the change in the macroscopic electronic polarization due to the applied electric field, VASP calculates (part of) the components on the diagonal of the ion\\-clamped static dielectric tensor (\u03b5\u221e), in accordance with:  \u03f5  i i  \u221e  \\= 1 \\+  4 \u03c0  \u03f5  0  \u2202  P  i  \u2202  E  i  ,  i \\= x , y , z {\\\\displaystyle \\\\epsilon \\_{ii}^{\\\\infty }\\=1\\+{\\\\frac {4\\\\pi }{\\\\epsilon \\_{0}}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{i}}},\\\\qquad {i\\=x,y,z}} Beware: this option is only useful if one is interested in selected components on the diagonal of the ion\\-clamped dielectric tensor (for instance, in cubic systems). To calculate the full ion\\-clamped dielectric tensor of a system  \u03f5  i j  \u221e  \\=  \u03b4  i j  \\+  4 \u03c0  \u03f5  0  \u2202  P  i  \u2202  E  j  ,  i , j \\= x , y , z {\\\\displaystyle \\\\epsilon \\_{ij}^{\\\\infty }\\=\\\\delta \\_{ij}\\+{\\\\frac {4\\\\pi }{\\\\epsilon \\_{0}}}{\\\\frac {\\\\partial P\\_{i}}{\\\\partial {\\\\mathcal {E}}\\_{j}}},\\\\qquad {i,j\\=x,y,z}} from field\\-polarized calculations, use LCALCEPS\\=.TRUE.. **Note**: One should be aware that when the electric field is chosen to be too large, the electric enthalpy functional will lose its minima, and VASP will not be able to find a stationary solution for the field\\-polarized orbitals.This is discussed in some detail by Souza *et al.*.[\\[1]](#cite_note-souza:prl:02-1)VASP will produce a warning if:  e  \\|  E  \u22c5  a  i  \\|  \\>  1 10  E  g a p  /  N  i  , {\\\\displaystyle e\\|{\\\\mathcal {E}}\\\\cdot \\\\mathbf {a} \\_{i}\\|\\>{\\\\frac {1}{10}}E\\_{\\\\mathrm {gap} }/N\\_{i},} where *E*gap is the bandgap, **a**i are the lattice vectors, and *N*i is the number of **k**\\-points along the reciprocal lattice vector *i*, in the regular (*N*1\u00d7*N*2\u00d7*N*3) **k**\\-mesh. The factor 1/10 is chosen to be on the safe side. If one does not include unoccupied bands, VASP is obviously not able to determine the bandgap and can not check whether the electric field might be too large. This will also produce a warning message. ### An example: \u03b5\u221e in NaF * Using the following INCAR file:  ```PREC = MedEDIFF= 1E-6 ISMEAR = 0 EFIELD_PEAD = 0.0 0.0 0.01  ``` The computation of the static dielectric properties from the field\\-polarized groundstate orbitals requires a very tight convergence of the solutions. The EDIFF\\-tag specifies the usual convergence criterium for the zero\\-field solution. As a default VASP will try for an even tighter convergence of the field\\-polarized groundstate: EDIFF/100! Reaching this level of convergence may be very costly and in rare cases even impossible.* KPOINTS file:  ```6x6x6 0Gamma 6 6 6 0 0 0   ``` **Note**: The *PEAD* related routines only work for regular meshes of **k**\\-points that include the \u0393\\-point, i.e.\\~either uneven meshes (not recommended) or \u0393\\-centered meshes (like the one above).* POSCAR file:  ``` NaF 4.5102 0.0 0.5 0.5 0.5 0.0 0.5 0.5 0.5 0.0 1 1Direct  0.0000000000000000  0.0000000000000000  0.0000000000000000  0.5000000000000000  0.5000000000000000  0.5000000000000000  ``` * and LDA Na\\_sv and F PAW datasets. With the input above, running VASP should produce something akin to:  ``` entering main loop       N       E                     dE             d eps       ncg     rms          rms(c)DAV:   1    -0.121171874254E+03   -0.12117E+03   -0.11093E+04   392   0.169E+03DAV:   2    -0.290944564657E+03   -0.16977E+03   -0.15372E+03   412   0.454E+02DAV:   3    -0.296448270211E+03   -0.55037E+01   -0.54726E+01   516   0.857E+01DAV:   4    -0.296558918897E+03   -0.11065E+00   -0.11062E+00   432   0.122E+01DAV:   5    -0.296564115002E+03   -0.51961E-02   -0.51960E-02   568   0.177E+00    0.512E+00      ...         ...                ...      ...         ...                ...DAV:  11    -0.295718441201E+03    0.31316E-05   -0.40516E-06   436   0.471E-02    0.256E-03DAV:  12    -0.295718441337E+03   -0.13610E-06   -0.13352E-06   276   0.146E-02       N       E                     dE             d eps       ncg     rms          rms(c) gam= 0.000 g(H,U,f)=  0.142E-07 0.000E+00 0.322E-02 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00SDA:   1    -0.295718441659E+03   -0.29572E+03   -0.12885E-02   360   0.322E-02 0.000E+00      ...         ...                ... gam= 0.382 g(H,U,f)=  0.220E-07 0.167E-07 0.186E-10 ort(H,U,f) =-0.260E-08-0.389E-08 0.523E-10DMP:   4    -0.295718441597E+03    0.43565E-09   -0.14510E-07   360   0.387E-07-0.644E-08 gam= 0.382 g(H,U,f)=  0.232E-08 0.318E-09 0.166E-11 ort(H,U,f) =-0.471E-08-0.181E-08 0.590E-11DMP:   5    -0.295718441603E+03   -0.59431E-08   -0.61690E-10   360   0.264E-08-0.651E-08 final diagonalization p_tot=(  0.875E-06  0.875E-06  0.875E-06 )       N       E                     dE             d eps       ncg     rms          rms(c) p_tot=(  0.875E-06  0.875E-06  0.875E-06 )dp_tot=(  0.000E+00  0.000E+00  0.000E+00 )  diag[e(oo)]=(    ---      ---    1.00000 ) gam= 0.000 g(H,U,f)=  0.149E-04 0.000E+00 0.000E+00 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00SDA:   1    -0.295718441612E+03   -0.14804E-07   -0.59582E-05   360   0.149E-04 0.000E+00      ...         ...                ...      ...         ...                ... gam= 0.519 g(H,U,f)=  0.392E-07 0.000E+00 0.000E+00 ort(H,U,f) = 0.919E-08 0.000E+00 0.000E+00DMP:   9    -0.295718447444E+03   -0.21085E-07   -0.17608E-07   360   0.392E-07 0.919E-08 p_tot=(  0.868E-06  0.868E-06  0.116E-02 )dp_tot=( -0.721E-08 -0.723E-08  0.116E-02 )  diag[e(oo)]=(    ---      ---    1.91593 ) gam= 0.519 g(H,U,f)=  0.210E-07 0.000E+00 0.000E+00 ort(H,U,f) =-0.164E-08 0.000E+00 0.000E+00DMP:  10    -0.295718447453E+03   -0.83301E-08   -0.80481E-08   360   0.210E-07-0.164E-08 final diagonalization p_tot=(  0.860E-06  0.860E-06  0.118E-02 )dp_tot=( -0.154E-07 -0.155E-07  0.118E-02 )  diag[e(oo)]=(    ---      ---    1.92723 )   1 F= -.29571845E+03 E0= -.29571845E+03  d E =-.223452E-12  ``` where one can discern three distinct blocks of SCF iterations. The first one (steps marked with DAV) corresponds to the calculation of the zero\\-field groundstate. After this groundstate has been reached, the **k**\\-point mesh is regenerated using a set of symmetry operations, which takes into account that the symmetry of the system is possibly reduced by the applied electric field. In most cases the new set of **k**\\-points is larger than the original one. The orbitals at the additional **k**\\-points are generated from their symmetry equivalent counterparts in the zero\\-field case. This expanded set of orbitals is now reoptimized until convergence is better than EDIFF/100 (the second block, marked DMP), and the initial electronic polarization is computed. Then the electric field is switched on, and the field\\-polarized groundstate is calculated. This is the last block of steps marked with DMP. From the change in the electronic dipole moment due to the electric field VASP computes (part of) the components on the diagonal of the ion\\-clamped static dielectric tensor. This information is found both in the OUTCAR file and on stdout:  ```   diag[e(oo)]=(       ----        ----      1.92723 )  ```  --- To speed up the computation of the field\\-polarized groundstate one may set SKIP\\_EDOTP\")\\=.TRUE. to avoid the recalculation of the electronic polarization at each iteration during the SCF procedure.However, the additional term in Hamiltonian (second term on the right\\-hand\\-side of the electric enthalpy functional) has to be correctly included and can not be kept fixed.Basically this means one does not minimize the total energy but optimizes the orbitals until a stationary point is reached. A stationary point is considered to be reached as soon as the norm of the gradient on the orbitals is smaller than EDIFF/100, and the SCF procedure will stop.In the case of the previous example this will lead to:  ```       N       E                     dE             d eps       ncg     rms          rms(c) gam= 0.000 g(H,U,f)=  0.149E-04 0.000E+00 0.000E+00 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00SDA:   1    -0.295718441603E+03   -0.60750E-08   -0.59581E-05   360   0.149E-04 0.000E+00 gam= 0.519 g(H,U,f)=  0.332E-05 0.000E+00 0.000E+00 ort(H,U,f) = 0.629E-05 0.000E+00 0.000E+00      ...         ...                ...      ...         ...                ... gam= 0.519 g(H,U,f)=  0.124E-07 0.000E+00 0.000E+00 ort(H,U,f) =-0.141E-08 0.000E+00 0.000E+00DMP:  11    -0.295718435607E+03    0.13956E-06   -0.46725E-08   360   0.124E-07-0.141E-08 gam= 0.519 g(H,U,f)=  0.637E-08 0.000E+00 0.000E+00 ort(H,U,f) = 0.218E-10 0.000E+00 0.000E+00DMP:  12    -0.295718435599E+03    0.78403E-08   -0.25522E-08   360   0.637E-08 0.218E-10 final diagonalization p_tot=(  0.844E-06  0.844E-06  0.117E-02 )dp_tot=( -0.313E-07 -0.313E-07  0.117E-02 )  diag[e(oo)]=(    ---      ---    1.92478 )   1 F= -.29571844E+03 E0= -.29571844E+03  d E =-.223448E-12  ```"}
{"file_name": "ML_RCUT1.md", "content": "ML\\_RCUT1= \\[real]   Default: **ML\\_RCUT1** \\= 8\\.0nDescription: Sets the cutoff radius   R  cut {\\\\displaystyle R\\_{\\\\text{cut}}}  for the radial descriptor   \u03c1  i  ( 2 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}(r)}  in  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  .  --- The radial descriptor for machine\\-learned force fields is constructed from  \u03c1  i  ( 2 )  ( r )  \\=  1  4 \u03c0  \u222b  \u03c1  i  (  r  r  ^  )  d  r  ^  , where  \u03c1  i  (  r  )  \\=  \u2211  j \\= 1  N  a  f  c u t  (  r  i j  )  g  (  r  \u2212  r  i j  ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}\\\\left(r\\\\right)\\={\\\\frac {1}{4\\\\pi }}\\\\int \\\\rho \\_{i}\\\\left(r{\\\\hat {\\\\mathbf {r} }}\\\\right)d{\\\\hat {\\\\mathbf {r} }},\\\\quad {\\\\text{where}}\\\\quad \\\\rho \\_{i}\\\\left(\\\\mathbf {r} \\\\right)\\=\\\\sum \\\\limits \\_{j\\=1}^{N\\_{\\\\mathrm {a} }}f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)g\\\\left(\\\\mathbf {r} \\-\\\\mathbf {r} \\_{ij}\\\\right)}  and  g  (  r  ) {\\\\displaystyle g\\\\left(\\\\mathbf {r} \\\\right)}  is an approximation of the delta function. A basis set expansion of   \u03c1  i  ( 2 )  ( r ) {\\\\displaystyle \\\\rho \\_{i}^{(2\\)}(r)}  yields the expansion coefficients   c  n 00  i {\\\\displaystyle c\\_{n00}^{i}} , which are used in practice to describe the atomic environment; refer to the theory of machine\\-learned force fields for details. The tag ML\\_RCUT1 sets the cutoff radius   R  cut {\\\\displaystyle R\\_{\\\\text{cut}}}  at which the cutoff function   f  c u t  (  r  i j  ) {\\\\displaystyle f\\_{\\\\mathrm {cut} }\\\\left(r\\_{ij}\\\\right)}  decays to zero. | **Mind:** The cutoff radius determines how many neighbor atoms      N   a      {\\\\displaystyle N\\_{\\\\mathrm {a} }}   }} are considered to describe each central atom's environment. Hence, important features may be missed if the cutoff radius is too small. On the other hand, a large cutoff radius increases the computational cost of the descriptor as the cutoff sphere contains more neighbor atoms. A good compromise is always system\\-dependent. Therefore, different values should be tested to achieve satisfying accuracy **and** speed. || --- | The unit of the cut\\-off radius is   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ."}
{"file_name": "Bandstructure_of_Si_in_GW_(VASP2WANNIER90).md", "content": "Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\)> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorials Task---- Calculation of the bandstructure of Si in GW using the VASP2WANNIER90 interface.  --- **Mind**: The procedure to compute bandstructure in GW using V2W is almost identical to the corresponding HSE one described in Si bandstructure. **Mind**: The standard procedure for GW calculations is described in Bandgap of Si in GW.  --- Step 1: a DFT groundstate calculation------------------------------------- Everything starts with a standard DFT groundstate calculation (in this case PBE). * INCAR  ```ISMEAR =  0SIGMA  =  0.05GGA    = PE  ```   * KPOINTS  ```4x4x4 0 G 4 4 4 0 0 0  ``` * POSCAR  ```system Si5.4300.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.000.25 0.25 0.25  ``` Step 2: obtain DFT virtual orbitals----------------------------------- To obtain a WAVECAR file with a reasonable number of virtual orbitals (50\\-100 per atom)we need to restart from the previous groundstate calculation with ALGO\\=Exact, and manually set thenumber of bands by means of the NBANDS\\-tag.To obtain the corresponding WAVEDER file we additionally specify LOPTICS\\=.TRUE. * INCAR  ```ALGO = ExactNBANDS  = 64LOPTICS = .TRUE.NEDOS = 2000 ISMEAR =  0SIGMA  =  0.05GGA    = PE  ``` Step 3: GW calculation including LWANNIER90 TAG----------------------------------------------- Restart from the WAVECAR and WAVEDER files of the previous calculation, with * INCAR  ```## Frequency dependent dielectric tensor including## local field effects within the RPA (default) or## including changes in the DFT xc-potential (LRPA=.FALSE.).## N.B.: beware one first has to have done a## calculation with ALGO=Exact and LOPTICS=.TRUE.## and a reasonable number of virtual states (see above)ALGO = GW0\u00a0; LSPECTRAL = .TRUE.\u00a0; NOMEGA = 50#LRPA = .FALSE. ## be sure to take the same number of bands as for## the LOPTICS=.TRUE. calculation, otherwise the## WAVEDER file is not read correctlyNBANDS = 64##VASP2WANNIER90LWANNIER90=.TRUE.  ``` Use the wannier90\\.win file given below which contains all instructions needed to generate thenecessary input files for the WANNIER90 runs (wannier90\\.amn, wannier90\\.mmn, wannier90\\.eig).  * wannier90\\.win  ```num_wann=8num_bands=8 exclude_bands = 9-64 Begin ProjectionsSi:sp3End Projections dis_froz_max=9dis_num_iter=1000 guiding_centres=true # Bandstructure plot #restart         =  plot#bands_plot      =  true#begin kpoint_path#L 0.50000  0.50000 0.5000 G 0.00000  0.00000 0.0000#G 0.00000  0.00000 0.0000 X 0.50000  0.00000 0.5000#X 0.50000  0.00000 0.5000 K 0.37500 -0.37500 0.0000#K 0.37500 -0.37500 0.0000 G 0.00000  0.00000 0.0000#end kpoint_path#bands_num_points 40#bands_plot_format gnuplot xmgrace begin unit_cell_cart     2.7150000     2.7150000     0.0000000     0.0000000     2.7150000     2.7150000     2.7150000     0.0000000     2.7150000end unit_cell_cart begin atoms_cartSi       0.0000000     0.0000000     0.0000000Si       1.3575000     1.3575000     1.3575000end atoms_cart mp_grid =     4     4     4 begin kpoints     0.0000000     0.0000000     0.0000000     0.2500000     0.0000000     0.0000000     0.5000000     0.0000000     0.0000000     0.2500000     0.2500000     0.0000000     0.5000000     0.2500000     0.0000000    -0.2500000     0.2500000     0.0000000     0.5000000     0.5000000     0.0000000    -0.2500000     0.5000000     0.2500000     0.0000000     0.2500000     0.0000000     0.0000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.2500000    -0.2500000     0.0000000     0.0000000     0.0000000    -0.2500000     0.0000000     0.0000000     0.0000000    -0.2500000     0.2500000     0.2500000     0.2500000     0.0000000     0.5000000     0.0000000     0.0000000     0.0000000     0.5000000    -0.5000000    -0.5000000    -0.5000000     0.0000000     0.2500000     0.2500000     0.2500000     0.0000000     0.2500000    -0.2500000    -0.2500000     0.0000000    -0.2500000     0.0000000    -0.2500000     0.0000000    -0.2500000    -0.2500000     0.0000000     0.5000000     0.2500000     0.2500000     0.0000000     0.5000000    -0.2500000    -0.2500000     0.2500000    -0.5000000    -0.2500000    -0.5000000     0.2500000     0.5000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.5000000    -0.2500000     0.0000000     0.2500000     0.5000000    -0.2500000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.5000000     0.5000000     0.0000000     0.2500000    -0.5000000    -0.2500000     0.0000000     0.0000000    -0.5000000    -0.2500000    -0.2500000     0.0000000    -0.5000000     0.2500000     0.2500000    -0.2500000     0.5000000     0.2500000     0.5000000    -0.2500000    -0.5000000     0.0000000    -0.2500000     0.2500000     0.2500000     0.5000000     0.5000000     0.2500000     0.0000000    -0.2500000    -0.5000000     0.2500000    -0.2500000     0.2500000     0.2500000     0.5000000     0.5000000    -0.5000000     0.0000000    -0.2500000     0.0000000    -0.2500000     0.2500000     0.2500000     0.0000000    -0.2500000    -0.2500000    -0.2500000    -0.5000000     0.2500000     0.5000000     0.2500000     0.2500000    -0.2500000     0.0000000    -0.5000000    -0.2500000    -0.2500000     0.2500000     0.2500000     0.5000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.2500000     0.5000000     0.2500000     0.2500000    -0.2500000     0.0000000     0.2500000     0.0000000     0.5000000     0.5000000     0.5000000     0.0000000     0.5000000     0.2500000    -0.2500000     0.5000000     0.5000000     0.2500000    -0.2500000    -0.5000000    -0.2500000    -0.7500000     0.2500000    -0.5000000    -0.2500000    -0.2500000     0.2500000    -0.5000000end kpoints  ``` Step 4: WANNIER90----------------- ### Compute Wannier functions run wannier90:  wannier90\\.x wannier90 This run generates the wannier90 standard output (wannier90\\.wout)and the file wannier90\\.chk needed for the wannier interpolation (next step)  ### Obtain bandstructure (Wannier interpolation) Uncomment the bandstructure plot flags in wannier90\\.win and rerun (restart) wannier90: wannier90\\.x wannier90 This run generates the following bandstructure files which can be visualized using xmgrace or gnuplot: wannier90\\_band.agr wannier90\\_band.dat wannier90\\_band.gnu to plot the band structure using gnuplot:`gnuplot -persist wannier90_band.gnu` Download--------  Si\\_bandstructure\\_GW.tgz Overview> bandgap of Si in GW> bandstructure of Si in GW (VASP2WANNIER90\\)> bandstructure of SrVO3 in GW > CRPA of SrVO3 > Equilibrium volume of Si in the RPA> List of tutorialsBack to the main page."}
{"file_name": "BMIX_MAG.md", "content": "BMIX\\_MAG= \\[real]   Default: **BMIX\\_MAG** \\= 1\\.0nDescription: BMIX\\_MAG sets the cutoff wave vector for Kerker mixing scheme[\\[1]](#cite_note-kerker:prb:81-1) (IMIX\\=1 and/or INIMIX\\=1\\) for the magnetization density.  --- The default mixing parameters for spinpolarized calculations are: IMIX\\=4, AMIX\\=0\\.4, AMIN\\=min(0\\.1,AMIX,AMIX\\_MAG), BMIX\\=1\\.0, AMIX\\_MAG\\=1\\.6, and BMIX\\_MAG\\=1\\.0\\.These settings are consistent with an (initial) spin enhancement factor of 4, which is usually a reasonable approximation. There are only a few other parameter combinitions which can be tried, if convergence turns out to be very slow. In particular, for slabs, magnetic systems and insulating systems (e.g. molecules and clusters), an initial \"linear mixing\" can result in faster convergence than the Kerker model function.[\\[1]](#cite_note-kerker:prb:81-1) One can therefore try to use the following setting   ```AMIX     = 0.2BMIX     = 0.0001\u00a0! almost zero, but 0 will crash some versionsAMIX_MAG = 0.8BMIX_MAG = 0.0001\u00a0! almost zero, but 0 will crash some versions  ``` **Mind**: For spinpolarized calculations the defaults for the mixing parameters AMIX and BMIX are different than for the non\\-spinpolarized case."}
{"file_name": "POSCAR.md", "content": "The POSCAR file is a mandatory VASP input file. It is a plain text file and contains at least the lattice geometry and the ionic positions. Optionally, also starting velocities for a molecular\\-dynamics simulation can be provided here. This file shares its format with VASP output file CONTCAR. That may contain an additional section with predictor\\-corrector coordinates necessary for restarting molecular\\-dynamics runs. Creating a POSCAR file is often the starting point of VASP\\-supported research. It can be written manually or obtained from various online materials and crystallographic databases providing a download in the POSCAR file format. File format----------- ### Minimal example In its simplest form the POSCAR file contains basic information about the lattice, per\\-species number of ions and their positions. This is sufficient in most situation where a VASP calculation is started from scratch. Have a look at this example for cubic boron nitride:  ```Cubic BN3.570.0 0.5 0.50.5 0.0 0.50.5 0.5 0.0 B N 1 1Direct0.00 0.00 0.00 0.25 0.25 0.25  ``` As indicated by the text coloring there are four blocks corresponding to the following file contents: **Comment line** The first line is reserved for a free user comment, e.g. a system description. **Scaling factor and lattice** In this block the first line specifies a universal lattice scaling factor   s {\\\\displaystyle s} . The next three lines define the lattice vectors. Each line holds the unscaled Cartesian components of one lattice vector. The actual lattice vectors   a \u2192  1  ,  a \u2192  2 {\\\\displaystyle {\\\\vec {a}}\\_{1},{\\\\vec {a}}\\_{2}}  and  a \u2192  3 {\\\\displaystyle {\\\\vec {a}}\\_{3}}  (in  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) are the product of the given numbers with the lattice scaling factor. Set the universal scaling factor to 1 if you want to enter the lattice vectors directly and avoid any additional scaling. **Ion species and numbers:**  This section defines how many ions of each species are present. The first line lists the species names, the second specifies the number of ions for each species. The given order should match the order of species appearing in the POTCAR file. | **Warning:** If machine\\-learned force fields are used (ML\\_LMLFF\\=.TRUE.), it is not possible to give the same name to different groups of atoms in the POSCAR file. || --- | **Ion positions:**  Finally, the ion positions   R \u2192 {\\\\displaystyle {\\\\vec {R}}}  (in  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) are listed in this section. The first line selects one of the two possible modes how the coordinates   x  1  ,  x  2 {\\\\displaystyle x\\_{1},x\\_{2}}  and  x  3 {\\\\displaystyle x\\_{3}}  given in the following lines are interpreted: * \"Direct\" means the positions are provided in direct (fractional) coordinates:  R \u2192  \\=  x  1  a \u2192  1  \\+  x  2  a \u2192  2  \\+  x  3  a \u2192  3  , {\\\\displaystyle {\\\\vec {R}}\\=x\\_{1}{\\\\vec {a}}\\_{1}\\+x\\_{2}{\\\\vec {a}}\\_{2}\\+x\\_{3}{\\\\vec {a}}\\_{3},} where   R \u2192 {\\\\displaystyle {\\\\vec {R}}}  is the position vector of an ion. * \"Cartesian\" specifies that positions are provided in a Cartesian coordinate system. However, the actual ion positions are also multiplied with the universal scaling factor, i.e.  R \u2192  \\= s  (  x  1  x  2  x  3  )  . {\\\\displaystyle {\\\\vec {R}}\\=s\\\\left({\\\\begin{array}{c}x\\_{1}\\\\\\\\x\\_{2}\\\\\\\\x\\_{3}\\\\end{array}}\\\\right).} The total number of lines with positions must match the total number of ions given in the previous section. The ion species are also derived from there, i.e. in the example above it is implied that the list of positions contains one boron ion, followed by one nitrogen nuclei. ### Full format specification The POSCAR file format is constructed from multiple sections arranged in a predefined order. Some sections contain only a single line, others span over many lines, some may even be omitted. The following list defines the section order and their contents: | Section | Number of lines | Required section? | Content || --- | --- | --- | --- || Comment | 1 | mandatory | The first line is reserved for a free user comment, e.g. a system description. The maximum line length is 40 characters, extra characters are truncated. || Scaling factor(s) | 1 | mandatory | This line may contain one or three numbers. If one number is provided it specifies a universal lattice scaling factor     s   {\\\\displaystyle s}  s. It is multiplied with the three vectors in the following section to obtain the lattice vectors of the unit cell. Also, the ion positions are scaled with this factor if the \"Cartesian\" mode is selected (see section \"Ion positions\"). If the number is negative, it is interpreted as the desired cell volume. Then, the scaling factor     s   {\\\\displaystyle s}  s is computed automatically to obtain the desired volume. If three numbers are provided in this line they act as individual scaling factors for the x\\-,y\\- and z\\-Cartesian components for the lattice vectors (and \"Cartesian\" mode ion positions). In this case all three numbers must be positive. || Lattice | 3 | mandatory | This sections contains three lines defining the lattice vectors. Each line holds the unscaled Cartesian components of one lattice vector. The actual lattice vectors         a \u2192     1   ,     a \u2192     2     {\\\\displaystyle {\\\\vec {a}}\\_{1},{\\\\vec {a}}\\_{2}}  }_{1},{\\vec {a}}_{2}} and         a \u2192     3     {\\\\displaystyle {\\\\vec {a}}\\_{3}}  }_{3}} (in       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA ) are the product of the given numbers with the lattice scaling factor `s`. Set the universal scaling factor to 1 if you want to enter the lattice vectors directly and avoid any additional scaling. || Species names | 1 | optional | This line lists the species of the present ions. The given order should match the order of species appearing in the POTCAR file. This line is optional, if omitted the species names are taken from the POTCAR file.   | **Warning:*** In a VASP calculation the POTCAR file together with the `Ions per species` section below defines the species of all ions provided in the POSCAR file! This `Species names` section should be considered only as a helpful comment to identify species when inspecting a POSCAR file independently. Switching species names here will not actually change the species of ions in a calculation if the POTCAR file stays the same! * If machine\\-learned force fields are used (ML\\_LMLFF\\=.TRUE.), it is not possible to give the same name to different groups of atoms in the POSCAR file. * The number of characters a species name can have is only two. If more than two characters are given the code will run but will truncate the name species names after two characters. For example, \"Si1\" and \"Si2\" would both be treated as \"Si\" and Si\". In the case of ML\\_LMLFF\\=.TRUE. the code would be terminated since twice the same name for different species is not allowed. | | --- | || Ions per species | 1 | mandatory | This mandatory line lists how many ions of each species are present. The given order should match the order of species appearing in the POTCAR file. || Selective dynamics | 1 | optional | If the line after the \"Ions per species\" section contains `Selective dynamics` it enables the \"selective dynamics\" feature (actually only the first character is relevant and must be *S* or *s*). This allows to provide extra flags for each atom signaling whether the respective coordinate(s) of this atom will be allowed to change during the ionic relaxation. This setting is useful if only certain shells around a defect or layers near a surface should relax. See also the IBRION tag. || Ion positions | 1 \\+ \\#atoms | mandatory | Here, the ion positions        R \u2192      {\\\\displaystyle {\\\\vec {R}}}  {{\\vec  R}} (in       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA ) are listed. The first line selects one of the two possible modes how the coordinates      x  1   ,  x  2     {\\\\displaystyle x\\_{1},x\\_{2}}  ,x_{2}} and      x  3     {\\\\displaystyle x\\_{3}}  } given in the following lines are interpreted: * \"Direct\" means the positions are provided in direct (fractional) coordinates:       R \u2192    \\=  x  1       a \u2192     1   \\+  x  2       a \u2192     2   \\+  x  3       a \u2192     3   ,   {\\\\displaystyle {\\\\vec {R}}\\=x\\_{1}{\\\\vec {a}}\\_{1}\\+x\\_{2}{\\\\vec {a}}\\_{2}\\+x\\_{3}{\\\\vec {a}}\\_{3},}  }=x_{1}{\\vec {a}}_{1}+x_{2}{\\vec {a}}_{2}+x_{3}{\\vec {a}}_{3},}where        R \u2192      {\\\\displaystyle {\\\\vec {R}}}  {{\\vec  R}} is the position vector of an ion. * \"Cartesian\" specifies that positions are provided in a Cartesian coordinate system. However, the actual ion positions are also multiplied with the universal scaling factor, i.e.       R \u2192    \\= s  (      x  1        x  2        x  3       )  .   {\\\\displaystyle {\\\\vec {R}}\\=s\\\\left({\\\\begin{array}{c}x\\_{1}\\\\\\\\x\\_{2}\\\\\\\\x\\_{3}\\\\end{array}}\\\\right).}  }=s\\left({\\begin{array}{c}x_{1}\\\\x_{2}\\\\x_{3}\\end{array}}\\right).}  Actually, only the first character on the line is significant and the only key characters recognized are `C`, `c`, `K` or `k` for switching to the \"Cartesian\" mode. Everything else will be interpreted as \"Direct\" mode. The total number of lines with positions must match the total number of ions given in the \"Ions per species\" section. The ion species are also derived from there, e.g. if the \"Ions per species\" section lists `5 8`, then there must be five ion position lines for the first species, followed by eight ions of the second species. If your are not sure whether you have a correct input please check the OUTCAR file, which contains both the final Cartesian components of the vector        R \u2192      {\\\\displaystyle {\\\\vec {R}}}  {{\\vec  R}} and the positions in direct (fractional) coordinates. If the selective dynamics feature is enabled on each coordinate triplet is followed by three additional logical flags, i.e. each is either `T` or `F` for true and false, respectively. This determines whether to allow changes of the coordinates or not. If the line selective dynamics is removed from the POSCAR file this flag will be ignored (and internally set to `T`).   | **Mind:** The flags refer to the positions of the ions in direct coordinates, no matter whether the positions are entered in \"Cartesian\" or \"Direct\" coordinate modes. | | --- |   For example, consider the following ion specification:  ``` ... Selective dynamics Cartesian 0.00 0.00 0.00 T F T 1.27 0.98 0.32 F T F ...  ```  Here, the first atom is allowed to move into the direction of the first and third direct lattice vector. The second atom may only move in the second lattice vector direction. If no initial velocities are provided, the file may end here. || Lattice velocities | 8 | from CONTCAR only1 | Contains the lattice vectors         a \u2192     1   ,     a \u2192     2     {\\\\displaystyle {\\\\vec {a}}\\_{1},{\\\\vec {a}}\\_{2}}  }_{1},{\\vec {a}}_{2}} and         a \u2192     3     {\\\\displaystyle {\\\\vec {a}}\\_{3}}  }_{3}} and their velocities. Lattice velocities occur when in molecular dynamics simulations lattice vectors are treated as dynamic variables, i.e., are allowed to change over time (IBRION\\=0 together with ISIF\\=3\\). When written to the CONTCAR file the section starts with a line containing the string `Lattice velocities and vectors`. While reading in the POSCAR file upon restarting only the first character of the line is checked for `L` or `l`. The following line specifies the initialization state of the lattice velocities (usually just the integer 1\\). The next three lines contain the velocities corresponding to the three lattice vectors divided by the time step given via the POTIM tag. The remaining three lines repeat the actual lattice vectors         a \u2192     1   ,     a \u2192     2     {\\\\displaystyle {\\\\vec {a}}\\_{1},{\\\\vec {a}}\\_{2}}  }_{1},{\\vec {a}}_{2}} and         a \u2192     3     {\\\\displaystyle {\\\\vec {a}}\\_{3}}  }_{3}} where multiplication with the scaling factor     s   {\\\\displaystyle s}  s has already been taken into account. || Ion velocities | 1 \\+ \\#atoms | optional | Here initial velocities for all ions can be provided. The input format is similar to the section \"Ion positions\" above. The first line determines the input mode which is either \"Direct\" or \"Cartesian\". In contrast to the reading of ion positions there is no multiplication with the scaling factor     s   {\\\\displaystyle s}  s applied in the \"Cartesian\" mode. Another minor difference is the interpretation of the contents of the first line in this section. In addition to `C`, `c`, `K` or `k` as the first character also an empty line is switching on the \"Cartesian\" mode. Everything else enables the \"Direct\" mode instead. The velocity section written out to the CONTCAR file always starts with an empty line and velocities are given in \"Cartesian\" mode. The following lines contain the velocity vectors of each ion defined in the \"Ion positions\" section. Velocities must be provided in units \"direct lattice vector/timestep\" or       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA /fs for \"Direct\" or \"Cartesian\" mode, respectively.   | **Tip:** Entering velocities by hand is rarely done because a simple alternative to set initial velocities is provided via the TEBEG tag. | | --- |    | **Mind:** Different rules for the input in this section apply for special VASP features: * IBRION\\=0 and SMASS\\=\\-2: In this case the velocities are kept constant during the MD allowing to calculate the energy for a set of different linear dependent positions (for instance frozen phonons and dimers with varying bond\\-length). The actual steps taken are POTIM times read velocities. Hence, to avoid ambiguities, set POTIM to 1\\. Then, the velocities will are simply interpreted as vectors, along which the ions are moved. Therefore, for the \"Direct\" and \"Cartesian\" modes they are given in units of direct coordinates and       \u00c5     {\\\\displaystyle \\\\mathrm {\\\\AA} }  \\AA , respectively (again, no multiplication with the scaling factor). * IBRION\\=44: The vectors in this section are interpreted as directions of the unstable mode in the context of the Improved Dimer Method. | | --- | || MD extra | variable | from CONTCAR only1 | The predictor\\-corrector coordinates are only provided to continue a molecular dynamic run from a CONTCAR file of a previous run, they can not be entered by hand. | 1 \"from CONTCAR only\": This section is usually not entered manually by the user. It appears in the CONTCAR file output at the end of VASP runs which involve ionic steps and is intended for restarting a previous calculation. ### Precision and symmetry VASP determines the symmetry of the system from the POSCAR file.It is a common mistake to enter the positions with insufficient precision(too few digits). To make the best use of the symmetry routines in VASP, it is stronglyrecommended to specify the positions (and lattice parameters) in the POSCAR file with at least 7 significant digits (but preferably more).Internal tests for symmetry operations are done against a user\\-suppliedvalue for the precision, specified by SYMPREC (defaults to 10\\-5).Hence, 5 significant digits are absolutely borderline and can causeserious issues in the automatic symmetry determination, for instance, finding somebut not all generators for the symmetry group. Also, \"noise\" in the positionsmight grow during relaxations, so that sometimes, upon reading the CONTCAR file,some symmetry operations are not found. All these issues are best avoided bymaking the initial POSCAR file as accurate as possible. If you have a POSCAR file with the positions written with low precision and would like to reconstruct with higher precision, we recommend using a symmetry package, such as spglib[\\[1]](#cite_note-spglib-1), to find the symmetries given a certain precision, symmetrizing the lattice vectors and positions and writing the POSCAR file with a higher number of significant digits.This can be done using pymatgen[\\[2]](#cite_note-pymatgen-2) (which interfaces with spglib[\\[1]](#cite_note-spglib-1)) to symmetrize the structure and write it to a POSCAR file, see example on github. ### Examples  ```Cubic BN3.570.00000000 0.50000000 0.500000000.50000000 0.00000000 0.500000000.50000000 0.50000000 0.00000000 B N 1 1Selective dynamicsCartesian0.00000000 0.00000000 0.00000000 T T F0.25000000 0.25000000 0.25000000 F F FCartesian0.01000000 0.01000000 0.010000000.00000000 0.00000000 0.00000000optionally predictor-corrector coordinates    given on file CONTCAR of MD-run  ....  ....  ```  ```fcc Si 3.9 0.50000000 0.50000000 0.00000000 0.00000000 0.50000000 0.50000000 0.50000000 0.00000000 0.50000000 1cartesian0.00000000 0.00000000 0.00000000  ```  ```MgO Fm-3m (No. 225) 1.0 2.606553 0.000000 1.504894 0.868851 2.457482 1.504894 0.000000 0.000000 3.009789 Mg O 1 1direct 0.000000 0.000000 0.000000 Mg 0.500000 0.500000 0.500000 O  ```"}
{"file_name": "Toolchains.md", "content": "Below we list the toolchains (compilers \\+ assorted libraries) that we have used to build and test VASP in our nightly tests during the development.Starting from VASP.6\\.3\\.0, the toolchains are listed separately for each version of VASP. * These lists of toolchains are not comprehensive. They show what we have employed on a regular basis. Other/newer versions of the compilers and libraries than those listed below will, in all probability, work just as well (or better). | **Tip:** We encourage using up\\-to\\-date versions of compilers and libraries since they are continuously improved and bugs are identified and fixed. || --- | * Also for older versions of VASP, we recommend using up\\-to\\-date versions of compilers and libraries. In most cases, this will not be a problem. Except in some cases, VASP code was adjusted, e.g., to accommodate changes in the behavior of a compiler. Example: Compilation with GCC \\> 7\\.X.X is only possible as of VASP.6\\.2\\.0\\. That is because the GCC compilers became more strict and do not accept certain code constructs used in older VASP versions.[\\[1]](#cite_note-gcc-beyond-7-support-1) VASP.6\\.4\\.3------------ | Compilers | MPI | FFT | BLAS | LAPACK | ScaLAPACK | CUDA | HDF5 | Other | Remarks | Known issues || --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- || intel\\-oneapi\\-compilers\\-2024\\.0\\.2 | intel\\-oneapi\\-mpi\\-2021\\.10\\.0 | intel\\-oneapi\\-mkl\\-2023\\.2\\.0 | | | | \\- | hdf5\\-1\\.14\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.3 | Rocky Linux 8\\.8 | \\- || gcc\\-12\\.3\\.0 | openmpi\\-4\\.1\\.6 | intel\\-oneapi\\-mkl\\-2023\\.2\\.0 | | | netlib\\-scalapack\\-2\\.2\\.0 | \\- | hdf5\\-1\\.14\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.3 | Rocky Linux 8\\.8 | \\- || nvhpc\\-24\\.1(OpenACC) | openmpi\\-4\\.1\\.6(CUDA\\-aware) | intel\\-oneapi\\-mkl\\-2023\\.2\\.0 | | | netlib\\-scalapack\\-2\\.2\\.0 | cuda\\-11\\.8 | hdf5\\-1\\.14\\.0 | wannier90\\-3\\.1\\.0 | Rock Linux 8\\.8NVIDIA GPUs(A30\\) | \\- || aocc\\-4\\.0\\.0 | openmpi\\-4\\.1\\.4 | amdfftw\\-4\\.0 | amdblis\\-4\\.0 | amdlibflame\\-4\\.0 | amdscalapack\\-4\\.0 | \\- | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.2 | On AMD CPUs(Zen3\\) | Reduce optimization level || nec\\-5\\.0\\.2 | nmpi\\-2\\.25\\.0 | nlc\\-3\\.0\\.0 | | | netlib\\-scalapack\\-2\\.2\\.0 | \\- | \\- | wannier90\\-3\\.1\\.0 | Rocky Linux 8\\.8NEC SX\\-Aurora TSUBASAvector engine | VASP \\>\\= 6\\.3\\.0[\\[2]](#cite_note-nec-aurora-support-2) | VASP.6\\.3\\.0------------ | Compilers | MPI | FFT | BLAS | LAPACK | ScaLAPACK | CUDA | HDF5 | Other | Remarks | Known issues || --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- || intel\\-oneapi\\-compilers\\-2022\\.0\\.1 | intel\\-oneapi\\-mpi\\-2021\\.5\\.0 | intel\\-oneapi\\-mkl\\-2022\\.0\\.1 | | | | \\- | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | \\- || intel\\-parallel\\-studio\\-xe\\-2021\\.4\\.0 | | | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | \\- || gcc\\-11\\.2\\.0 | openmpi\\-4\\.1\\.2 | intel\\-oneapi\\-mkl\\-2022\\.0\\.1 | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.2 | Centos 8\\.3Intel Broadwell | \\- || gcc\\-11\\.2\\.0 | openmpi\\-4\\.1\\.2 | fftw\\-3\\.3\\.10 | openblas\\-0\\.3\\.18 | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.2 | Centos 8\\.3Intel Broadwell | \\- || gcc\\-11\\.2\\.0 | openmpi\\-4\\.1\\.2 | amdfftw\\-3\\.1 | amdblis\\-3\\.1 | amdlibflame\\-3\\.1 | amdscalapack\\-3\\.1 | \\- | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.2 | Centos 8\\.3AMD Zen3 | \\- || gcc\\-9\\.3\\.0 | openmpi\\-4\\.0\\.5 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.10 | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || gcc\\-7\\.5\\.0 | openmpi\\-4\\.0\\.5 | intel\\-mkl\\-2020\\.2\\.254 | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || nvhpc\\-22\\.2(OpenACC) | openmpi\\-4\\.1\\.2 | intel\\-oneapi\\-mkl\\-2022\\.0\\.1 | | | netlib\\-scalapack\\-2\\.1\\.0 | nvhpc\\-22\\.2(cuda\\-11\\.0\\) | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0 | Centos 8\\.3NVIDIA GPUs(P100 \\& V100\\) | OpenACC\\+OpenMP[\\[4]](#cite_note-omp-acc-bug-1-4) || nvhpc\\-21\\.2(OpenACC) | openmpi\\-4\\.0\\.5(CUDA\\-aware) | intel\\-mkl\\-2020\\.2\\.254 | | | netlib\\-scalapack\\-2\\.1\\.0 | nvhpc\\-21\\.2(cuda\\-11\\.0\\) | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3NVIDIA GPUs(P100 \\& V100\\) | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || nvhpc\\-21\\.2 | openmpi\\-4\\.0\\.5 | intel\\-mkl\\-2020\\.2\\.254 | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || nvhpc\\-21\\.2 | openmpi\\-4\\.0\\.5 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.10 | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || aocc\\-3\\.2\\.0 | openmpi\\-4\\.1\\.2 | amdfftw\\-3\\.1 | amdblis\\-3\\.1 | amdlibflame\\-3\\.1 | amdscalapack\\-3\\.1 | \\- | hdf5\\-1\\.13\\.0 | wannier90\\-3\\.1\\.0libxc\\-5\\.2\\.2 | On AMD CPUs(Zen3\\) | \\- || nec\\-3\\.4\\.0 | nmpi\\-2\\.18\\.0 | nlc\\-2\\.3\\.0 | | | netlib\\-scalapack\\-2\\.2\\.0 | \\- | \\- | wannier90\\-3\\.1\\.0 | Centos 8\\.3NEC SX\\-Aurora TSUBASAvector engine | VASP \\>\\= 6\\.3\\.0[\\[2]](#cite_note-nec-aurora-support-2) | Older versions of VASP.6------------------------ | Compilers | MPI | FFT | BLAS | LAPACK | ScaLAPACK | CUDA | HDF5 | Other | Remarks | Known issues || --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- || intel\\-parallel\\-studio\\-xe\\-2021\\.1\\.1 | | | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | \\- || gcc\\-9\\.3\\.0 | openmpi\\-4\\.0\\.5 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.10 | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3)VASP \\>\\= 6\\.2\\.0[\\[1]](#cite_note-gcc-beyond-7-support-1) || gcc\\-7\\.5\\.0 | openmpi\\-4\\.0\\.5 | intel\\-mkl\\-2020\\.2\\.254 | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || nvhpc\\-21\\.2(OpenACC) | openmpi\\-4\\.0\\.5(CUDA\\-aware) | intel\\-mkl\\-2020\\.2\\.254 | | | netlib\\-scalapack\\-2\\.1\\.0 | nvhpc\\-21\\.2(cuda\\-11\\.0\\) | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3NVIDIA GPUs(P100 \\& V100\\) | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || nvhpc\\-21\\.2 | openmpi\\-4\\.0\\.5 | intel\\-mkl\\-2020\\.2\\.254 | | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) || nvhpc\\-21\\.2 | openmpi\\-4\\.0\\.5 | fftw\\-3\\.3\\.8 | openblas\\-0\\.3\\.10 | | netlib\\-scalapack\\-2\\.1\\.0 | \\- | hdf5\\-1\\.10\\.7 | wannier90\\-3\\.1\\.0 | Centos 8\\.3Intel Broadwell | Memory\\-leak[\\[3]](#cite_note-ompi-bug-1-3) | Footnotes and"}
{"file_name": "ML_FFCAR.md", "content": "This file contains the machine\\-learned force field, necessary for prediction\\-only mode (`ML_MODE = run`). Its format is identical to the ML\\_FFN file written out during training, for further details please have a look at the documentation there.  ---"}
{"file_name": "Electronic_ground-state_properties.md", "content": "At the end of an electronic minimization, VASP has obtained a converged set of orbitals (WAVECAR).Based on the orbitals also the corresponding density is computed via k\\-point integration (CHGCAR).The orbitals and the density reveal important insights into material properties and are often the first step towards analyzing and understanding a material. An easy way to visualize the properties discussed below is using py4vasp. Properties of orbitals---------------------- For practical purposes, one is most interested in the energy eigenvalues of the orbitals and their local projections.Consider first the eigenvalues:Counting all orbitals with eigenvalues in a certain energy interval yields the density of states (DOS) (DOSCAR).Often, looking at the DOS can provide valuable insight into the electronic properties of a material, e.g., an estimate of the electron itinerancy or specific heat. It is, therefore, often the first step to start towards understanding a novel material. [](File_Band.html \"Band structure plot of energy eigenvalues of orbitals\") The band structure contains even more details about the electronic eigenvalues (EIGENVAL) by resolving them with respect to the Bloch vector **k**.Usually, one uses high\\-symmetry paths in the Brillouin zone for band structures.They make it easy to recognize fundamental and direct bandgaps of the material.Alternatively, VASP directly reports the bandgaps to the OUTCAR file with the verbosity controlled by the BANDGAP tag.The electronic eigenvalues determine the occupations of each orbital in conjunction with the settings for ISMEAR, SIGMA, and EFERMI. Next, we consider the projections of the orbitals that you activate with the LORBIT tag.VASP projects each orbital onto functions with defined angular momentum within the PAW sphere of each ion.This site projection augments the data produced by DOS and band\\-structure calculations.In addition, the projections describe how much charge has a particular angular momentum and spin near an ion.This serves as a good approximation for the magnetic structure of the system. Properties on the grid---------------------- The charge density is defined on a real\\-space grid in the unit cell and results from a sum over bands and **k** points of all occupied orbitals. The grid is often called FFT grid because the underlying calculation requires repeatedly switching between real and reciprocal space via FFTs on that grid. For magnetic calculations (ISPIN\\=2 or LNONCOLLINEAR\\=T), the orbitals and charge density have additional spin indices and include the magnetization.VASP stores the charge density in the CHGCAR file and can use it to restart a calculation (ICHARG\u226510\\), which is particularly relevant for non\\-self\\-consistent calculations like band\\-structure calculations.  Most of the time, the total charge density is not specific enough to get insight into material properties.For this reason, VASP offers the possibility of creating band\\-decomposed charge densities.Selecting a specific band index or **k** point can shed light, e.g., on the localization of defects.This feature is helpful in computing the charge density in the vicinity of the Fermi energy.At a surface, this density is a good first approximation to compare to experimental scanning\\-tunneling\\-microscopy (STM) images. [](File_Work_function.html \"Average potential perpendicular to the surface of the system.\") During the electronic optimization, VASP also computes the total potential.If you want to analyze the potential, use the WRT\\_POTENTIAL tag to select the potential that should be written.Alternatively, use the legacy tag LVTOT if you only need the total potential.A common application is to inspect planar averages parallel to surfaces or interfaces.VASP will compute these averages automatically depending on the IDIPOL setting.Compute the difference of the average potential and the Fermi energy to get the work function. Subcategories------------- This category has the following 6 subcategories, out of 6 total. ### B * Band structure### C * Charge density### D * Density of states### E * Electrostatics### M * Magnetism### P * Potential Pages in category \"Electronic ground\\-state properties\"------------------------------------------------------- The following 13 pages are in this category, out of 13 total. ### B * Band\\-decomposed charge densities* BANDGAP### C * CHGCAR* Computing the work function### E * EFERMI### I * ICHARG* IDIPOL* ISMEAR### K * K\\-point integration### L * LORBIT* LVTOT### S * SIGMA### W * WRT POTENTIAL"}
{"file_name": "NBMOD.md", "content": "NBMOD= \\-3 \\| \\-2 \\| \\-1 \\| 0 \\| \\[positive integer]n| Default: **NBMOD** | \\= n | if IBAND is set and contains n values || --- | --- | --- ||  | \\= \\-2 | if EINT is set and IBAND is not set ||  | \\= \\-1 | if neither EINT nor IBAND are set | Description: NBMOD controls how bands are selected when computing partial charge densities.   --- NBMOD is used with other tags to define the mode of band selection for partial charge densities in PARCHG, vaspout.h5, or CHGCAR files. There are several ways to set this tag.  * NBMOD \\= n: Use n bands If a positive integer is passed, NBMOD represents the number of values in the array IBAND. If IBAND is specified, NBMOD is set automatically to the number of values passed in IBAND. | **Tip:** There is no good reason to set NBMOD to a positive integer since it will be overwritten regardless if IBAND is set or not. Use the IBAND tag alone to enter this mode. || --- | * NBMOD \\= 0: Use all bands All bands, even unoccupied ones, are contributing to calculating the partial charge density. E.g. the resulting partial charge density in the PARCHG file will sum up to twice the value of the number of total bands NBANDS.* NBMOD \\= \\-1: Use all occupied bands This mode writes the charge density of all occupied states to the CHGCAR file, and no PARCHG file is produced. In contrast to producing a CHGCAR file from the WAVECAR input without the partial charges methodology (e.g. by setting LPARD \\= .FALSE., ALGO \\= None, and NELM \\= 1\\), the augmentation occupancies is not included in the produced CHGCAR file for NBMOD \\= \\-1\\. However, the fine FFT grid's valence charge density is equivalent.* NBMOD \\= \\-2: Use an absolute energy interval to select contributing bands The partial charge density is calculated for electrons in the energy interval specified by EINT.* NBMOD \\= \\-3: Use an energy interval to select contributing bands and add the Fermi energy   \u03f5  f {\\\\displaystyle \\\\epsilon \\_{f}}  to the passed values The partial charge density is calculated for electrons in the energy interval specified by EINT. In this mode, the values in EINT are interpreted as relative to the Fermi energy   \u03f5  f {\\\\displaystyle \\\\epsilon \\_{f}} . E.g. if EINT \\= \\-0\\.1 0\\.5 and   \u03f5  f {\\\\displaystyle \\\\epsilon \\_{f}}  \\= 2\\.43, the chosen energy interval will range from 2\\.33 to 2\\.93 eV."}
{"file_name": "Vibrational_frequencies_of_CO_on_Ni_111_surface.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Calculation of the vibrational frequencies of CO@Ni(111\\) (on top). Input----- ### POSCAR  ```Ni - (111) + CO on-top                     3.53000000000000          0.7071067800000000    0.0000000000000000    0.0000000000000000    -0.3535533900000000    0.6123724000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    5.1961523999999999   Ni   C    O      5     1     1Selective dynamicsDirect  0.0000000000000000  0.0000000000000000  0.0000000000000000   F   F   F  0.3333333300000021  0.6666666699999979  0.1111111100000031   F   F   F  0.6666666699999979  0.3333333300000021  0.2222222199999990   F   F   F -0.0000000000000000  0.0000000000000000  0.3326227833039623   F   F   F  0.3333333300000021  0.6666666699999979  0.4445699380869117   F   F   F  0.3333333300000021  0.6666666699999979  0.5403264650180125   F   F   T  0.3333333300000021  0.6666666699999979  0.6032949698060487   F   F   T   0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  ``` * Frequencies only for the CO molecule and the z\\-direction (z\\- and (x,y) are independent). N.B.: this POSCAR is essentially the result (CONTCAR file) of the relaxation performed in the CO on Ni 111 surface example. ### INCAR  ``` SYSTEM = CO on Ni111 - frequencies general:  ENMAX  = 400  ISMEAR =    2 \u00a0; SIGMA = 0.2  ALGO   = Fast  EDIFF  = 1E-6  MAXMIX = 60  # reuse the mixer between ionic steps, saves time dynamic:  NSW = 100  IBRION = 5  NFREE  = 2  ``` * Small termination criterion (EDIFF).* Automatic frequency calculation (displacement 0\\.04   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} }  ).* Reuse of the mixer between ionic steps (MAXMIX) to save time. ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * Finite differences give the following additional output in the OUTCAR fiel for frequency calculations:  ```Finite differences progress: Degree of freedom:   1/  2 Displacement:        1/  2 Total:               1/  4  ``` * After the first calculation for the equilibrium geometry, NFREE displacements (  \u00b1 {\\\\displaystyle \\\\pm } POTIM) are performed for each degree of freedom. From these displacements the dynamical matrix is set up and diagonalized. * At the end of the OUTCAR file the following are listed:\t+ Forces.\t+ The dynamical matrix and finally.\t+ The eigenfrequencies.\t+ Eigenvectors (first normalized and then mass\\-weighted). * The example output for the eigenvectors and eigenvalues of the dynamical matrix from the OUTCAR file should look like the following:  ```Eigenvectors and eigenvalues of the dynamical matrix----------------------------------------------------  1 f  =   63.914144 THz   401.584411 2PiTHz 2131.946301 cm-1   264.327748 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000            0           0           0     0.000000  1.441116  2.038046            0           0           0     1.248043  0.720558  4.076093            0           0           0     0.000000  0.000000  6.108743            0           0           0     0.000000  1.441116  8.153979            0           0           0     0.000000  1.441116  9.908620            0           0   -0.761748     0.000000  1.441116 11.063296            0           0    0.623594    2 f  =   12.467410 THz    78.335050 2PiTHz  415.868035 cm-1    51.561083 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000            0           0           0     0.000000  1.441116  2.038046            0           0           0     1.248043  0.720558  4.076093            0           0           0     0.000000  0.000000  6.108743            0           0           0     0.000000  1.441116  8.153979            0           0           0     0.000000  1.441116  9.908620            0           0   -0.623594     0.000000  1.441116 11.063296            0           0   -0.781748  ``` As one can see the first vibrational mode is the so\\-called *CO stretch* mode (stretching and contracting the C\\-O bond),whereas the second mode shows the CO molecule moving w.r.t. to the metallic surface (*CO\\-metal*). * Try to change the selective dynamics tag such that displacements in x and y direction are allowed as well for CO (note thatthe selective dynamics flags always refer to cartesian coordinates),i.e,  ``` 0.3333333300000021  0.6666666699999979  0.5403264650180125   F   F   T 0.3333333300000021  0.6666666699999979  0.6032949698060487   F   F   T  ```  to  ``` 0.3333333300000021  0.6666666699999979  0.5403264650180125   T   T   T 0.3333333300000021  0.6666666699999979  0.6032949698060487   T   T   T  ``` Also test whether you need to decrease EDIFF to 1E\\-8\\. Download--------  COonNi111\\_freq.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "Blocked-Davidson_algorithm.md", "content": "The workflow of the blocked\\-Davidson iterative matrix diagonalization scheme implemented in VASP is as follows:[\\[1]](#cite_note-kresse:cms:1996-1)[\\[2]](#cite_note-kresse:prb:96-2) * Take a subset (block) of   n  1 {\\\\displaystyle n\\_{1}}  orbitals out of the total set of NBANDS orbitals:  {  \u03c8  n  \\|  n \\= 1 , . . ,  N  b a n d s  } \u21d2 {  \u03c8  k  1  \\|  k \\= 1 , . . ,  n  1  } {\\\\displaystyle \\\\{\\\\psi \\_{n}\\|n\\=1,..,N\\_{\\\\rm {bands}}\\\\}\\\\Rightarrow \\\\{\\\\psi \\_{k}^{1}\\|k\\=1,..,n\\_{1}\\\\}}  .* Extend the subspace spanned by   {  \u03c8  1  } {\\\\displaystyle \\\\{\\\\psi ^{1}\\\\}}  by adding the preconditioned residual vectors of   {  \u03c8  1  } {\\\\displaystyle \\\\{\\\\psi ^{1}\\\\}}  :  {  \u03c8  k  1  /  g  k  1  \\=  (  1 \u2212  \u2211  n \\= 1  N  b a n d s  \\|  \u03c8  n  \u27e9 \u27e8  \u03c8  n  \\|  S  )  K  (  H  \u2212  \u03f5  a p p  S  )  \u03c8  k  1  \\|  k \\= 1 , . . ,  n  1  }  . {\\\\displaystyle \\\\left\\\\{\\\\psi \\_{k}^{1}\\\\,/\\\\,g\\_{k}^{1}\\=\\\\left(1\\-\\\\sum \\_{n\\=1}^{N\\_{\\\\rm {bands}}}\\|\\\\psi \\_{n}\\\\rangle \\\\langle \\\\psi \\_{n}\\|{\\\\bf {S}}\\\\right){\\\\bf {K}}\\\\left({\\\\bf {H}}\\-\\\\epsilon \\_{\\\\rm {app}}{\\\\bf {S}}\\\\right)\\\\psi \\_{k}^{1}\\\\,\\|\\\\,k\\=1,..,n\\_{1}\\\\right\\\\}.} * Rayleigh\\-Ritz optimization (\"subspace rotation\") within the   2  n  1 {\\\\displaystyle 2n\\_{1}} \\-dimensional space spanned by   {  \u03c8  1  /  g  1  } {\\\\displaystyle \\\\{\\\\psi ^{1}/g^{1}\\\\}} , to determine the   n  1 {\\\\displaystyle n\\_{1}}  lowest eigenvectors:  d i a g  {  \u03c8  1  /  g  1  } \u21d2 {  \u03c8  k  2  \\|  k \\= 1 , . . ,  n  1  } {\\\\displaystyle {\\\\rm {diag}}\\\\{\\\\psi ^{1}/g^{1}\\\\}\\\\Rightarrow \\\\{\\\\psi \\_{k}^{2}\\|k\\=1,..,n\\_{1}\\\\}} * Extend the subspace with the residuals of   {  \u03c8  2  } {\\\\displaystyle \\\\{\\\\psi ^{2}\\\\}}  :  {  \u03c8  k  2  /  g  k  1  /  g  k  2  \\=  (  1 \u2212  \u2211  n \\= 1  N  b a n d s  \\|  \u03c8  n  \u27e9 \u27e8  \u03c8  n  \\|  S  )  K  (  H  \u2212  \u03f5  a p p  S  )  \u03c8  k  2  \\|  k \\= 1 , . . ,  n  1  }  . {\\\\displaystyle \\\\left\\\\{\\\\psi \\_{k}^{2}\\\\,/\\\\,g\\_{k}^{1}\\\\,/\\\\,g\\_{k}^{2}\\=\\\\left(1\\-\\\\sum \\_{n\\=1}^{N\\_{\\\\rm {bands}}}\\|\\\\psi \\_{n}\\\\rangle \\\\langle \\\\psi \\_{n}\\|{\\\\bf {S}}\\\\right){\\\\bf {K}}\\\\left({\\\\bf {H}}\\-\\\\epsilon \\_{\\\\rm {app}}{\\\\bf {S}}\\\\right)\\\\psi \\_{k}^{2}\\\\,\\|\\\\,k\\=1,..,n\\_{1}\\\\right\\\\}.} * Rayleigh\\-Ritz optimization (\"subspace rotation\") within the   3  n  1 {\\\\displaystyle 3n\\_{1}} \\-dimensional space spanned by   {  \u03c8  1  /  g  1  /  g  2  } {\\\\displaystyle \\\\{\\\\psi ^{1}/g^{1}/g^{2}\\\\}}  :  d i a g  {  \u03c8  1  /  g  1  /  g  2  } \u21d2 {  \u03c8  k  3  \\|  k \\= 1 , . . ,  n  1  } {\\\\displaystyle {\\\\rm {diag}}\\\\{\\\\psi ^{1}/g^{1}/g^{2}\\\\}\\\\Rightarrow \\\\{\\\\psi \\_{k}^{3}\\|k\\=1,..,n\\_{1}\\\\}} * If need be the subspace may be extended by repetition of this cycle of adding residual vectors and Rayleigh\\-Ritz optimization of the resulting subspace:  d i a g  {  \u03c8  1  /  g  1  /  g  2  /  . .  /  g  d \u2212 1  } \u21d2 {  \u03c8  k  d  \\|  k \\= 1 , . . ,  n  1  } {\\\\displaystyle {\\\\rm {diag}}\\\\{\\\\psi ^{1}/g^{1}/g^{2}/../g^{d\\-1}\\\\}\\\\Rightarrow \\\\{\\\\psi \\_{k}^{d}\\|k\\=1,..,n\\_{1}\\\\}} Per default VASP will not iterate deeper than   d \\= 4 {\\\\displaystyle d\\=4} , though it may break off even sooner when certain criteria that measure the convergence of the orbitals have been met.* When the iteration is finished, store the optimized block of orbitals back into the set:  {  \u03c8  k  d  \\|  k \\= 1 , . . ,  n  1  } \u21d2 {  \u03c8  k  \\|  k \\= 1 , . . ,  N  b a n d s  } {\\\\displaystyle \\\\{\\\\psi \\_{k}^{d}\\|k\\=1,..,n\\_{1}\\\\}\\\\Rightarrow \\\\{\\\\psi \\_{k}\\|k\\=1,..,N\\_{\\\\rm {bands}}\\\\}}  .* Move on to the next block   {  \u03c8  k  1  \\|  k \\=  n  1  \\+ 1 , . . , 2  n  1  } {\\\\displaystyle \\\\{\\\\psi \\_{k}^{1}\\|k\\=n\\_{1}\\+1,..,2n\\_{1}\\\\}}  .* When LDIAG\\=.TRUE. (default), a Rayleigh\\-Ritz optimization in the complete subspace   {  \u03c8  k  \\|  k \\= 1 , . . ,  N  b a n d s  } {\\\\displaystyle \\\\{\\\\psi \\_{k}\\|k\\=1,..,N\\_{\\\\rm {bands}}\\\\}}  is performed after all orbitals have been optimized.   The blocksize   n  1 {\\\\displaystyle n\\_{1}}  used in the blocked\\-Davidson algorithm can be set by means of the NSIM tag.In principle   n  1  \\= 2 \u00d7 {\\\\displaystyle n\\_{1}\\=2\\\\times }  NSIM, but for technical reasons it needs to be dividable by an integer *N*:  n  1  \\=  i n t  (  2 \u2217  N S I M  \\+ N \u2212 1  N  )  N {\\\\displaystyle n\\_{1}\\={\\\\rm {int}}\\\\left({\\\\frac {2\\*{\\\\rm {NSIM}}\\+N\\-1}{N}}\\\\right)N} where   N {\\\\displaystyle N}  is the \"number of band groups per k\\-point group\":  N \\=  \\#  o f  M P I  r a n k s  I M A G E S  \u2217  K P A R  \u2217  N C O R E {\\\\displaystyle N\\={\\\\frac {\\\\rm {\\\\\\#\\\\;of\\\\;MPI\\\\;ranks}}{{\\\\rm {IMAGES}}\\*{\\\\rm {KPAR}}\\*{\\\\rm {NCORE}}}}} (see the section on parallelization basics). As mentioned before, the optimization of a block of orbitals is stopped when either the maximum iteration depth (NRMM), or a certain convergence threshold has been reached. The latter may be fine\\-tuned by means of the EBREAK, DEPER, and WEIMIN tags. Note: we do not recommend you to do so! Rather rely on the defaults instead. The blocked\\-Davidson algorithm is approximately a factor of 1\\.5\\-2 slower than the RMM\\-DIIS, but more robust."}
{"file_name": "Difficult_to_converge_systems.md", "content": "There can be many reasons why convergence to the electronic ground state fails. Below you find some strategies to overcome convergence issues in the electronic minimization. Step\\-by\\-step instructions--------------------------- **Step 1:** Simplify the calculation and reduce time\\-to\\-solution. Try to create a minimal INCAR file with as few tags as possible. If the calculation converges, then gradually add them back until you find which one was causing the problem. Try to reduce the time\\-to\\-solution as much as possible by lowering the **k**\\-point sampling (or using gamma\\-only calculations if applicable), lower ENCUT, use PREC\\=Normal. **Step 2:** Check the value of ISMEAR. If you have partially occupied states set ISMEAR\\=\\-1 or 1\\. **Step 3:** Fixing the charge density (for cases where density mixing is used) **Step 4:** Increase NBANDS. Check if you have enough bands. You can do this by looking at the OUTCAR file and checking that there are enough empty states, i.e., states with zero occupation. When using an iterative solver, the last states might not be accurately described, if these are occupied, then convergence is likely to fail. Often, the VASP default setting for NBANDS is insufficient for systems with f\\-orbitals or calculations with meta\\-GGA's. **Step 5:** Switch ALGO. **Step 6:** For IALGO\\=5X or 4X change TIME. Method\\-specific recommendations-------------------------------- In the following, we will describe a few recipes that work for particular systems.Some of these recipes might be transferable even to other methods. ### Magnetic calculation with LDA\\+U Magnetic calculations present a lot of challenges, in particular when the energy differences between different magnetic configurations are small.Our recommendation is to split the calculation into multiple steps: 1. give initial magnetization only to the magnetic atoms2. use spin\\-polarized calculation3. perform the calculation in 3 steps (always starting from the previous WAVECAR):\t1. step 1 with ICHARG\\=12 and ALGO\\=Normal without any LDA\\+U tags\t2. step 2 with ALGO\\=All (Conjugate gradient) and a small TIME step 0\\.05 instead of the default 0\\.4 (this is crucial)\t3. step 3 add LDA\\+U tags keeping ALGO\\=All and small TIME It might be helpful to split step 1\\. in two by first running with a smaller ENCUT and then restarting the calculation from the WAVECAR with the desired ENCUT. ### MBJ calculation This exchange\\-correlation functional is not particularly easy to converge in some systems. For these systems, we recommend that you split the calculation into multiple steps that successively bring you closer to the solution (always restarting from the WAVECAR of the previous step): 1. Converge with the PBE functional2. Converge with the METAGGA\\=MBJ functional with the CMBJ parameter set to some value and ALGO\\=All and TIME\\=0\\.13. Converge with the METAGGA\\=MBJ functional without CMBJ parameter set and ALGO\\=All and TIME\\=0\\.1 Similar to the recipe for magnetic calculation with LDA\\+U, it might be helpful to run steps 1\\. to 3\\. with a low ENCUT and then perform step 3\\. again with the desired ENCUT. ### Dipole Correction 1. First, converge the calculation with LDIPOL\\=.FALSE. Store the WAVECAR in the same folder.2. Use the WAVECAR to restart the calculation with LDIPOL\\=.TRUE."}
{"file_name": "LSCALU.md", "content": "LSCALU= \\[logical]   Default: **LSCALU** \\= .FALSE.nDescription: LSCALU switches on the parallel LU decomposition (using scaLAPACK) in the orthonormalization of the wave functions.   --- For LSCALU\\=.TRUE. the LU decomposition in the orthormalization of the wave functions is done in parallel, using scaLAPACK routines.Provided, of course, LSCALAPACK\\=.TRUE. and VASP was compiled with scaLAPACK support (precompiler flag: \\-DscaLAPACK). In many cases, the scaLAPACK LU decomposition based is *slower* than the serial LU decomposition (compare the timing ORTHCH in the respective OUTCAR files). Hence the default is LSCALU\\=.FALSE.(subspace rotations, however, are still done using scaLAPACK)."}
{"file_name": "LPHON_READ_FORCE_CONSTANTS.md", "content": "LPHON\\_READ\\_FORCE\\_CONSTANTS= .TRUE. \\| .FALSE.n| Default: **LPHON\\_READ\\_FORCE\\_CONSTANTS** | \\= .FALSE. |  || --- | --- | --- | Description: LPHON\\_READ\\_FORCE\\_CONSTANTS read the force constants from a vaspin.h5 file containing the force constants computed with a previous VASP run.  --- After the computation of the force constants using finite\\-differences (IBRION\\=5,6\\) or density\\-functional perturbation theory (IBRION\\=7,8\\) on a supercell the force constants are written to the vaspout.h5 file.To plot the phonon dispersion on a different path the user can modify the QPOINTS file and read the force constants computed previously (i.e. without performing the finite\\-differences computations on supercells again).To do so copy vaspout.h5 to vaspin.h5 and set LPHON\\_READ\\_FORCE\\_CONSTANTS\\=.TRUE. in the INCAR file.Note that when this is set only the phonon dispersion is performed and then VASP quits without running any additional calculation specified in the INCAR file. | **Mind:** Only available as of VASP 6\\.4\\.0\\. || --- |"}
{"file_name": "ANDERSEN_PROB.md", "content": "ANDERSEN\\_PROB= 0\u2264\\[real]\u22641   Default: **ANDERSEN\\_PROB** \\= 0nDescription: ANDERSEN\\_PROB sets the collision probability for the Anderson thermostat (in case VASP was compiled with \\-Dtbdyn).  --- In the approach proposed by Andersen[\\[1]](#cite_note-Andersen80-1) the system is thermally coupled to a fictitious heat bath with the desired temperature. The coupling is represented by stochastic impulsive forces that act occasionally on randomly selected particles. The collision probability is defined as an average number of collisions per atom and time\\-step. This quantity can be controlled by the flag ANDERSEN\\_PROB. The total number of collisions with the heat\\-bath is written in the file REPORT for each MD step. | **Tip:** Setting ANDERSEN\\_PROB\\=0, *i.e.*, no collisions with the heat\\-bath) generates the microcanonical (*NVE*) ensemble. || --- |"}
{"file_name": "Installation.md", "content": "| Installing VASP.6\\.X.X | Installing VASP.5\\.X.X || --- | --- |  --- Pages in category \"Installation\"-------------------------------- The following 36 pages are in this category, out of 36 total. ### C * Combining MPI and OpenMP* Compiler options* CUDA\\-C GPU port of VASP### I * Installing VASP.5\\.X.X* Installing VASP.6\\.X.X### L * Linking to libraries### M * Makefile.include* Makefile.include.aocc ompi aocl* Makefile.include.aocc ompi aocl omp* Makefile.include.fujitsu a64fx* Makefile.include.fujitsu a64fx omp* Makefile.include.gnu* Makefile.include.gnu omp* Makefile.include.gnu ompi aocl* Makefile.include.gnu ompi aocl omp* Makefile.include.gnu ompi mkl omp* Makefile.include.intel* Makefile.include.intel omp* Makefile.include.intel ompi mkl omp* Makefile.include.intel serial* Makefile.include.nec aurora* Makefile.include.nvhpc* Makefile.include.nvhpc acc* Makefile.include.nvhpc omp* Makefile.include.nvhpc omp acc* Makefile.include.nvhpc ompi mkl omp* Makefile.include.nvhpc ompi mkl omp acc* Makefile.include.oneapi* Makefile.include.oneapi omp### O * OpenACC GPU port of VASP### P * Personal computer installation* Precompiler options* Profiling### S * Shared memory### T * Toolchains### V * Validation tests"}
{"file_name": "LIBXC2.md", "content": "LIBXC2= \\[string] or \\[integer]nDescription: LIBXC2 specifies the correlation functional from the library of exchange\\-correlation functionals Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3). LIBXC2 can be used only if the functional specified with LIBXC1 corresponds to only exchange and not to exchange and correlation.  --- A detailed explanation of how to use LIBXC1 and LIBXC2 and examples can be found on the LIBXC1 page. Related Tags and Sections------------------------- LIBXC1,LIBXC1\\_Pn,LIBXC2\\_Pn,LTBOUNDLIBXC,GGA,METAGGA,LHFCALC,AEXX,ALDAX,ALDAC,AGGAX,AGGAC,List of hybrid functionals   Examples that use this tag"}
{"file_name": "LIBMBD_METHOD.md", "content": "LIBMBD\\_METHOD= \\[string]   Default: **LIBMBD\\_METHOD** \\= mbd\\-rsscs (default in libMBD)nDescription: LIBMBD\\_METHOD selects one of the methods available in the library libMBD of many\\-body dispersion methods[\\[1]](#cite_note-libmbd_1-1)[\\[2]](#cite_note-libmbd_2-2)[\\[3]](#cite_note-hermann:jcp:2023-3).  --- LIBMBD\\_METHOD can be set to a label (string) corresponding to one of the methods listed on the libMBD website (see **method** at the page [\\[4]](#cite_note-libmbd_input-4)). | **Mind:** Note that the use of the mbd\\-nl method[\\[5]](#cite_note-hermann:prl:2020-5) is currently not possible, since the associated atomic polarizabilities and semilocal functional are currently not implemented in VASP. || --- | | **Important:** This feature is available from VASP.6\\.4\\.3 onwards that needs to be compiled with \\-DLIBMBD. || --- | libMBD is a separate library package that has to be downloaded[\\[2]](#cite_note-libmbd_2-2) and compiled before VASP is compiled with the corresponding precompiler options and links to the libraries."}
{"file_name": "LEXCH.md", "content": "LEXCH= \\[string]\u00a0LEXCH= CA.OR.PBEn| Default:  **LEXCH** | \\= CA | for LDA pseudopotentials || --- | --- | --- ||  | \\= PE | for GGA pseudopotentials | Definition: Set the default exchange\\-correlation functional.  --- The functional specified by LEXCH was used as a reference when the PAW potential was created. The transferability of PAW potentials to other exchange\\-correlation functionals is quite good. So, the functional used during the calculation can be freely adjusted (despite the very prominent warning in the stdout)."}
{"file_name": "VALUE_MAX.md", "content": "VALUE\\_MAX= \\[real array]nDescription: VALUE\\_MAX sets the upper limits for the monitoring of geometric parameters (in case VASP was compiled with \\-Dtbdyn).  --- For MDALGO\\=1 \\| 2, the geometric parameters defined in the ICONST file may be monitored without being subjected to a constraint or bias potential (STATUS\\=7 in the ICONST\\-file). If all values of monitored parameters defined in the ICONST file (STATUS\\=7) are smaller than VALUE\\_MIN or larger than VALUE\\_MAX, the simulation terminates. Upper limits for monitored coordinates, must be supplied for each geometric parameter in the ICONST file with STATUS\\=7."}
{"file_name": "LWRITE_UNK.md", "content": "LWRITE\\_UNK= .TRUE. \\| .FALSE.   Default: **LWRITE\\_UNK** \\= .FALSE.nDescription: LWRITE\\_UNK decides whether the cell\\-periodic part of the relevant Bloch functions is written.  --- For LWRITE\\_UNK\\=True, VASP writes the cell\\-periodic part of the Kohn\u2013Sham orbitals in spin channel s at k point p to the file **wannier90\\.UNKp.s**. This file can be used to plot Wannier orbitals with WANNIER90\\. For details on the execution of wannier\\_setup in VASP, see the description of the LWANNIER90 tag.For information on the **wannier90\\.win** file and the execution of WANNIER90, we refer to the WANNIER90 manual."}
{"file_name": "CH_SIGMA.md", "content": "CH\\_SIGMA= \\[real]   Default: **CH\\_SIGMA** \\= 0\\.3nDescription: This tag specifies the width of the Gaussian broadening in eV of the imaginary dielectric function for a core electron.  --- This feature is only available from VASP version 6\\.0 or higher."}
{"file_name": "LWAVEH5.md", "content": "LWAVE= \\[logical]   Default: **LWAVE** \\= LH5nDescription: LWAVEH5 determines whether the wavefunctions are written to vaspwave.h5 file at the end of a run."}
{"file_name": "ICAMM_Rennes_2016.md", "content": "Lectures-------- * DFT, PW, and PAW: \"VASP: The basics(1\\). DFT, plane waves, PAW, ...\". * electronic convergence, BZ sampling: \"VASP: The basics(2\\). electronic convergence, BZ sampling ...\". * structure relaxation, MD: \"VASP: The basics(3\\). structure relaxation, phonons, MD...\". * Hybrid functionals: \"VASP: Hybrid functionals\". * Dielectric properties: \"VASP: Dielectric response. Perturbation theory, linear response, and finite electric fields\". * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". * BSE: \"VASP: Beyond DFT. The Bethe\\-Salpeter Equation\". * Magnetism: \"Magnetism: Spin\\-orbit coupling, magnetic exchange and anisotropy\". * NMR: \"NMR calculations\". Tutorials--------- * From Atoms to Bulk systems: A description of the examples \"Atoms and molecules\" and \"Simple bulk systems\".* Surface Science: A description of the examples \"A bit of surface science\".* Ammonia Flipping: A description of the examples \"Transition State Search methods\".* Adsorption of H2O on TiO2: A description of the examples \"Constrained Molecular Dynamics\".* Dielectric properties and RPA: A description of the examples \"Dielectric properties and RPA\". Exercises--------- HOWTO: running the exercises### Atoms and molecules O atom O atom spinpolarized O atom spinpolarized low symmetry O dimer  CO CO vibration CO partial DOS  H2O H2O vibration H2O molecular dynamics ### Simple bulk systems fcc Si fcc Si DOS fcc Si bandstructure cd Si cd Si volume relaxation cd Si relaxation fcc Ni graphite TS binding energy graphite MBD binding energy graphite interlayer distance ### A bit of surface science Ni 100 surface relaxation Ni 100 surface DOS Ni 100 surface bandstructure Ni 111 surface relaxation CO on Ni 111 surface Ni 111 surface high precision partial DOS of CO on Ni 111 surface vibrational frequencies of CO on Ni 111 surface STM of graphite STM of graphene ### Hybrid functionals bandgap of Si using different DFT\\+HF methods fcc Ni DOS with hybrid functional Si HSE bandstructure ### Transition State Search of Ammonia relaxed geometry TS search using the NEB Method Vibrational Analysis of the TS TS search using the Improved Dimer Method ### Adsorption of H2O on TiO2 using standard relaxation and constrained MD standard relaxation constrained MD using a canonical ensemble constrained MD using a microcanonical ensemble ### Magnetism on NiO NiO GGA NiO GGA\\+U NiO HSE06 Estimation of J magnetic coupling Including the Spin\\-Orbit Coupling Determining the Magnetic Anisotropy Constraining the local magnetic moments ### Dielectric properties and RPA dielectric properties of SiC bandgap of Si in GW equilibrium volume of Si in the RPA bandstructure of SrVO3 in GW dielectric properties of Si using BSE model BSE calculation on Si\") ### NMR calculations alpha\\-SiO2 alpha\\-AlF3  ---"}
{"file_name": "GGA.md", "content": "GGA= PE \\| RP \\| PS \\| AM \\| LIBXC \\| ...   Default: **GGA** \\= exchange\\-correlation functional in accordance with the POTCAR filenDescription: GGA specifies a LDA or GGA exchange\\-correlation functional.  --- This tag was added to perform GGA calculations with pseudopotentials generated with conventional LDA reference configurations. | **Important:** VASP recalculates the exchange\\-correlation energy inside the PAW sphere and corrects the atomic energies given by the POTCAR file. For this to work, the original LEXCH tag must not be modified in the POTCAR file. || --- | A few points should be noted: * The LIBXC option (or just LI) allows to use a LDA or GGA functional from the library of exchange\\-correlation functionals Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3). Along with GGA\\=LIBXC, it is also necessary to specify the LIBXC1 and LIBXC2 tags that specify the particular functional. Note that it is necessary to have Libxc \\>\\= 5\\.2\\.0 installed and VASP.6\\.3\\.0 or higher compiled with precompiler options.* When the OR, BO, MK, ML or CX GGA is used in combination with the nonlocal vdW\\-DF functional of Dion *et al.*[\\[4]](#cite_note-dion:prl:2004-4), the GGA component of the correlation should in principle be turned off with AGGAC\\=0 (see nonlocal vdW\\-DF functionals). The possible options for the GGA tag are: **LDA functionals:** | CA (or PZ) | Slater exchange[\\[5]](#cite_note-dirac:mpcps:1930-5) \\+ Perdew\\-Zunger parametrization of Ceperley\\-Alder Monte\\-Carlo correlation data[\\[6]](#cite_note-ceperley1980-6)[\\[7]](#cite_note-perdewzunger1981-7) || --- | --- || SL | Slater exchange only[\\[5]](#cite_note-dirac:mpcps:1930-5), available since VASP.6\\.4\\.3 || CA\\_C (or PZ\\_C) | Correlation\\-only Perdew\\-Zunger parametrization of Ceperley\\-Alder Monte\\-Carlo correlation data[\\[6]](#cite_note-ceperley1980-6)[\\[7]](#cite_note-perdewzunger1981-7), available since VASP.6\\.4\\.3 || VW | Slater exchange[\\[5]](#cite_note-dirac:mpcps:1930-5) \\+ Vosko\\-Wilk\\-Nusair correlation (VWN5\\)[\\[8]](#cite_note-vosko1980-8) || HL | Slater exchange[\\[5]](#cite_note-dirac:mpcps:1930-5) \\+ Hedin\\-Lundqvist correlation[\\[9]](#cite_note-hedin1971-9) || WI | Slater exchange[\\[5]](#cite_note-dirac:mpcps:1930-5) \\+ Wigner correlation[\\[10]](#cite_note-Wigner:tfs:1938-10) (Eq. (3\\.2\\) in Ref. [\\[11]](#cite_note-pines:ssp:1955-11)) || LIBXC (or LI) | Any LDA from Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3) (the LIBXC1 and LIBXC2 tags are also required) | **GGA functionals:** | LIBXC (or LI) | Any GGA from Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3) (the LIBXC1 and LIBXC2 tags are also required) || --- | --- || 91 | Perdew\\-Wang (PW91\\)[\\[12]](#cite_note-perdew:prb:1991-12) || PE | Perdew\\-Burke\\-Ernzerhof (PBE)[\\[13]](#cite_note-perdew:prl:1996-13) || PBE\\_X | Exchange\\-only Perdew\\-Burke\\-Ernzerhof (PBEx)[\\[13]](#cite_note-perdew:prl:1996-13), available since VASP.6\\.4\\.3 || PBE\\_C | Correlation\\-only Perdew\\-Burke\\-Ernzerhof (PBEc)[\\[13]](#cite_note-perdew:prl:1996-13), available since VASP.6\\.4\\.3 || RE | Revised PBE from Zhang and Yang (revPBE)[\\[14]](#cite_note-zhang1998-14) || RP | Revised PBE from Hammer et al. (RPBE)[\\[15]](#cite_note-hammer1999-15) || PS | Revised PBE for solids (PBEsol)[\\[16]](#cite_note-perdew:prl:2008-16) || AM | Armiento\\-Mattson (AM05\\)[\\[17]](#cite_note-armiento:prb:05-17)[\\[18]](#cite_note-mattson:jcp:08-18)[\\[19]](#cite_note-mattson:prb:09-19) || B3 | B3LYP[\\[20]](#cite_note-stephens:jpc:1994-20) with VWN3[\\[8]](#cite_note-vosko1980-8) for LDA correlation || B5 | B3LYP[\\[20]](#cite_note-stephens:jpc:1994-20) with VWN5[\\[8]](#cite_note-vosko1980-8) for LDA correlation || Designed to be combined with nonlocal vdW\\-DF functionals: |  || OR | optPBE exchange[\\[21]](#cite_note-klimes:jpcm:2010-21) \\+ PBE correlation[\\[13]](#cite_note-perdew:prl:1996-13) || BO (with PARAM1\\=0\\.1833333333 and PARAM2\\=0\\.22\\) | optB88 exchange[\\[21]](#cite_note-klimes:jpcm:2010-21) \\+ PBE correlation[\\[13]](#cite_note-perdew:prl:1996-13) || MK | optB86b exchange[\\[22]](#cite_note-klimes:prb:2011-22) \\+ PBE correlation[\\[13]](#cite_note-perdew:prl:1996-13) || ML | PW86R exchange[\\[23]](#cite_note-lee:prb:2010-23) \\+ PBE correlation[\\[13]](#cite_note-perdew:prl:1996-13) || CX | CX (LV\\-PW86r) exchange[\\[24]](#cite_note-berland:prb:2015-24) \\+ PBE correlation[\\[13]](#cite_note-perdew:prl:1996-13) || BF | BEEF (requires VASP compiled with \\-Dlibbeef)[\\[25]](#cite_note-beef2012-25) |"}
{"file_name": "LAMBDA.md", "content": "LAMBDA= \\[real]   Default: **LAMBDA** \\= 0nDescription: LAMBDA sets the weight with which the penalty terms of the constrained local moment approach enter into the total energy expression and the Hamiltonian.  --- See the explanation given in the description of the I\\_CONSTRAINED\\_M tag."}
{"file_name": "Style-guide.md", "content": "Redirect to: * Construction:Style\\-guide\")"}
{"file_name": "FFCAR.md", "content": "Redirect to: * ML FF"}
{"file_name": "Harris_Foulkes_functional.md", "content": "The **Harris\\-Foulkes** (HF) **functional** is a non\\-self\\-consistent functional. The potential is constructed for some \"input\" charge density, then the band\\-structure term is calculated for this fixed non\\-self\\-consistent potential. Double counting corrections are calculated from the input charge density. The functional can be written as  E  H F  \\[  \u03c1  i n  , \u03c1 ] \\=  b a n d s t r u c t u r e  f o r  (  V  i n  H  \\+  V  i n  x c  ) \\+  T r  \\[ ( \u2212  V  i n  H  /  2 \u2212  V  i n  x c  )  \u03c1  i n  ] \\+  E  x c  \\[  \u03c1  i n  \\+  \u03c1  c  ] . {\\\\displaystyle E\\_{\\\\mathrm {HF} }\\[\\\\rho \\_{\\\\mathrm {in} },\\\\rho ]\\=\\\\mathrm {bandstructure} \\\\mathrm {for} (V\\_{\\\\mathrm {in} }^{H}\\+V\\_{\\\\mathrm {in} }^{xc})\\+\\\\mathrm {Tr} \\[(\\-V\\_{\\\\mathrm {in} }^{H}/2\\-V\\_{\\\\mathrm {in} }^{xc})\\\\rho \\_{\\\\mathrm {in} }]\\+E^{xc}\\[\\\\rho \\_{\\\\mathrm {in} }\\+\\\\rho \\_{c}].} In our experience, the functional gives a good description of the binding energies, equilibrium\\-lattice constants, and bulk\\-modulus even for covalently bonded systems like Ge. In a test calculation, we have found that the pair\\-correlation function of l\\-Sb calculated with the HF functional and the full Kohn\\-Sham functional differs only slightly. Nevertheless, we must point out that the computational gain in comparison to a self\\-consistent calculation is in many cases very small (for Sb less than   20  % {\\\\displaystyle 20\\~\\\\%} ). The main reason why to use the HF functional is therefore to access and establish the accuracy of the HF functional. To our knowledge, VASP is one of the few pseudopotential codes, which can access the validity of the HF functional at a very basic level, i.e., without any additional restrictions like local basis\\-sets, etc. The band\\-structure energy is exactly evaluated using the same plane\\-wave basis\\-set and the same accuracy used for the self\\-consistent calculation. The forces and the stress tensor are correct, insofar as they are an exact derivative of the Harris\\-Foulkes functional. During a molecular dynamics calculation or an ionic relaxation the charge density is updated at each ionic step to enforce the HF functional. Ideas based on the Harris\\-Foulkes functional are applied when LCORR or ICHARG\\=12\\."}
{"file_name": "Si_bandstructure.md", "content": "Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials Task---- Calculation of the bandstructure for Si within DFT\\+HF.  The bandstructure in VASP can be obtained following three different procedures. The standard procedure (procedure 1\\), applicable at PBE level, is also described in Fcc Si bandstructure example. Within Hybrid functional theory it is possible to plot bandstructure using procedure 2 or 3\\. Procedure 1: Standard procedure (DFT)------------------------------------- Only possible within DFT. Described in Fcc Si bandstructure example: ### Standard self\\-consistent (SC) run * POSCAR  ```system Si5.4300.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.000.25 0.25 0.25  ``` * INCAR  ```System\") = fcc Si ISMEAR = 0; SIGMA = 0.1;  ``` * KPOINTS  ```4x4x4 0 G 4 4 4 0 0 0  ``` ### Non\\-SC calculation (ICHARG\\=11\\) Use preconverged CHGCAR file and a suitable KPOINTS file (KPOINTS\\_PBE\\_bands) * INCAR  ```System\") = fcc Si ICHARG = 11 #charge read fileISMEAR = 0; SIGMA = 0.1;LORBIT = 11  ``` * KPOINTS  ```k-points for bandstructure L-G-X-U K-G 10linereciprocal  0.50000  0.50000  0.50000    1  0.00000  0.00000  0.00000    1   0.00000  0.00000  0.00000    1  0.00000  0.50000  0.50000    1   0.00000  0.50000  0.50000    1  0.25000  0.62500  0.62500    1   0.37500  0.7500   0.37500    1  0.00000  0.00000  0.00000    1  ``` ### Plot using p4v P4VASP: p4v Procedure 2: 0\\-weight (Fake) SC procedure (PBE \\& Hybrids)----------------------------------------------------------- This procedure can be applied to compute bandstructure at Hybrid functionals and DFT level. ### Standard DFT run * INCAR  ```## Default       ISMEAR =  0SIGMA  =  0.01GGA    = PE ## HSE#LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX = 0.25#ALGO = D\u00a0; TIME = 0.4\u00a0; LDIAG = .TRUE.  ``` * KPOINTS  ```Automatically generated mesh 0 G 4 4 4 0 0 0  ``` ### Hybrid calculation using a suitably modified KPOINTS file * INCAR  ```## Default       ISMEAR =  0SIGMA  =  0.01GGA    = PE ## HSELHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX = 0.25ALGO = D\u00a0; TIME = 0.4\u00a0; LDIAG = .TRUE.  ``` * KPOINTS\\_HSE\\_bands (see README.txt)  ```Explicit k-points list 18Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.25000000000000    0.00000000000000    0.00000000000000             8    0.50000000000000    0.00000000000000    0.00000000000000             4    0.25000000000000    0.25000000000000    0.00000000000000             6    0.50000000000000    0.25000000000000    0.00000000000000            24   -0.25000000000000    0.25000000000000    0.00000000000000            12    0.50000000000000    0.50000000000000    0.00000000000000             3   -0.25000000000000    0.50000000000000    0.25000000000000             60.00000000 0.00000000 0.00000000 0.0000.00000000 0.05555556 0.05555556 0.0000.00000000 0.11111111 0.11111111 0.0000.00000000 0.16666667 0.16666667 0.0000.00000000 0.22222222 0.22222222 0.0000.00000000 0.27777778 0.27777778 0.0000.00000000 0.33333333 0.33333333 0.0000.00000000 0.38888889 0.38888889 0.0000.00000000 0.44444444 0.44444444 0.0000.00000000 0.50000000 0.50000000 0.000  ``` ### Plot using p4v P4VASP: p4v **Mind**: Remove from the bandstructure plot the eigenvalues corresponding to the the regular k\\-points mesh. Procedure 3: VASP2WANNIER90 (GW, Hybrids, PBE)---------------------------------------------- Wannier function interpolation using the VASP2WANNIER90 interface. Applicable in all cases (here applied for hybrids; for GW see Bandstructure\\_of\\_Si\\_in\\_GW\\_(VASP2WANNIER90\\) example.html \"Bandstructure of Si in GW (VASP2WANNIER90)\")).  ### Standard DFT run * INCAR  ```## Default       ISMEAR =  0SIGMA  =  0.01GGA    = PE ## HSE#LHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX = 0.25#ALGO = D\u00a0; TIME = 0.4\u00a0; LDIAG = .TRUE. ##VASP2WANNIER#LWANNIER90=.TRUE.  ``` * KPOINTS  ```Automatically generated mesh 0 G 4 4 4 0 0 0  ``` ### HSE \\+ LWANNIER90 run * INCAR  ```## Default       ISMEAR =  0SIGMA  =  0.01GGA    = PE ## HSELHFCALC = .TRUE.\u00a0; HFSCREEN = 0.2\u00a0; AEXX = 0.25ALGO = D\u00a0; TIME = 0.4\u00a0; LDIAG = .TRUE. ##VASP2WANNIERLWANNIER90=.TRUE.  ``` Use the wannier90\\.win file given below which contains all instructions needed to generate the necessary input files for the WANNIER90 runs (wannier90\\.amn, wannier90\\.mmn, wannier90\\.eig). **Mind**: If the wannier90\\.win file does not exist VASP will create a default wannier90\\.win compatible withthe POSCAR and INCAR files, which needs to be suitably modified by including the proper instruction required to generate the maximally localized wannier functions (refer to the WANNIER90 manual). * wannier90\\.win  ```num_wann=8num_bands=8 Begin ProjectionsSi:sp3End Projections dis_froz_max=9dis_num_iter=1000 guiding_centres=true #restart         =  plot#bands_plot      =  true#begin kpoint_path#L 0.50000  0.50000 0.5000 G 0.00000  0.00000 0.0000#G 0.00000  0.00000 0.0000 X 0.50000  0.00000 0.5000#X 0.50000  0.00000 0.5000 K 0.37500 -0.37500 0.0000#K 0.37500 -0.37500 0.0000 G 0.00000  0.00000 0.0000#end kpoint_path#bands_num_points 40#bands_plot_format gnuplot xmgrace begin unit_cell_cart     2.7150000     2.7150000     0.0000000     0.0000000     2.7150000     2.7150000     2.7150000     0.0000000     2.7150000end unit_cell_cart begin atoms_cartSi       0.0000000     0.0000000     0.0000000Si       1.3575000     1.3575000     1.3575000end atoms_cart mp_grid =     4     4     4 begin kpoints     0.0000000     0.0000000     0.0000000     0.2500000     0.0000000     0.0000000     0.5000000     0.0000000     0.0000000     0.2500000     0.2500000     0.0000000     0.5000000     0.2500000     0.0000000    -0.2500000     0.2500000     0.0000000     0.5000000     0.5000000     0.0000000    -0.2500000     0.5000000     0.2500000     0.0000000     0.2500000     0.0000000     0.0000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.2500000    -0.2500000     0.0000000     0.0000000     0.0000000    -0.2500000     0.0000000     0.0000000     0.0000000    -0.2500000     0.2500000     0.2500000     0.2500000     0.0000000     0.5000000     0.0000000     0.0000000     0.0000000     0.5000000    -0.5000000    -0.5000000    -0.5000000     0.0000000     0.2500000     0.2500000     0.2500000     0.0000000     0.2500000    -0.2500000    -0.2500000     0.0000000    -0.2500000     0.0000000    -0.2500000     0.0000000    -0.2500000    -0.2500000     0.0000000     0.5000000     0.2500000     0.2500000     0.0000000     0.5000000    -0.2500000    -0.2500000     0.2500000    -0.5000000    -0.2500000    -0.5000000     0.2500000     0.5000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.5000000    -0.2500000     0.0000000     0.2500000     0.5000000    -0.2500000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.5000000     0.5000000     0.0000000     0.2500000    -0.5000000    -0.2500000     0.0000000     0.0000000    -0.5000000    -0.2500000    -0.2500000     0.0000000    -0.5000000     0.2500000     0.2500000    -0.2500000     0.5000000     0.2500000     0.5000000    -0.2500000    -0.5000000     0.0000000    -0.2500000     0.2500000     0.2500000     0.5000000     0.5000000     0.2500000     0.0000000    -0.2500000    -0.5000000     0.2500000    -0.2500000     0.2500000     0.2500000     0.5000000     0.5000000    -0.5000000     0.0000000    -0.2500000     0.0000000    -0.2500000     0.2500000     0.2500000     0.0000000    -0.2500000    -0.2500000    -0.2500000    -0.5000000     0.2500000     0.5000000     0.2500000     0.2500000    -0.2500000     0.0000000    -0.5000000    -0.2500000    -0.2500000     0.2500000     0.2500000     0.5000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.2500000     0.5000000     0.2500000     0.2500000    -0.2500000     0.0000000     0.2500000     0.0000000     0.5000000     0.5000000     0.5000000     0.0000000     0.5000000     0.2500000    -0.2500000     0.5000000     0.5000000     0.2500000    -0.2500000    -0.5000000    -0.2500000    -0.7500000     0.2500000    -0.5000000    -0.2500000    -0.2500000     0.2500000    -0.5000000end kpoints  ``` ### Compute Wannier functions run wannier90:  wannier90\\.x wannier90 This run generates the wannier90 standard output (wannier90\\.wout)and the file wannier90\\.chk needed for the wannier interpolation (next step)  ### Obtain bandstructure (Wannier interpolation) and plot using XMGRACE or GNUPLOT Uncomment the bandstructure plot flags in wannier90\\.win and rerun (restart) wannier90: wannier90\\.x wannier90 This run generates the following bandstructure files which can be visualized using xmgrace or gnuplot: wannier90\\_band.agr wannier90\\_band.dat wannier90\\_band.gnu   * README.txt  ```Bandstructure plot in VASP (Three different ways) 1) Standard way: PBE (Fcc Si bandstructure example).   1.1  Standard self-consistent (SC) run   1.2  non-SC calculation ({{TAGBL|ICHARG}}=11) using preconverged {{TAGBL|CHGCAR}} file and KPOINTS_PBE_bands   1.3  Plot using p4v 2) Fake SC procedure: PBE & HSE   2.1 Standard self-consistent (SC) run   2.2 Additional SC-run using KPOINTS_HSE_bands   2.3 Plot using p4v  ----The file KPOINTS_HSE_bands is constructed by copying the {{TAG|IBZKPT}} file from run 2.1 to the {{TAG|KPOINTS}} file: IBZKPTAutomatically generated mesh 8Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.25000000000000    0.00000000000000    0.00000000000000             8    0.50000000000000    0.00000000000000    0.00000000000000             4    0.25000000000000    0.25000000000000    0.00000000000000             6    0.50000000000000    0.25000000000000    0.00000000000000            24   -0.25000000000000    0.25000000000000    0.00000000000000            12    0.50000000000000    0.50000000000000    0.00000000000000             3   -0.25000000000000    0.50000000000000    0.25000000000000             6 Then add the desired additional k-points with zero weight and change the total number of k-points Explicit k-points list      18 <--- CHANGE TOTAL NUMBER OF K-POINTS\u00a0!!Reciprocal lattice    0.00000000000000    0.00000000000000    0.00000000000000             1    0.25000000000000    0.00000000000000    0.00000000000000             8    0.50000000000000    0.00000000000000    0.00000000000000             4    0.25000000000000    0.25000000000000    0.00000000000000             6    0.50000000000000    0.25000000000000    0.00000000000000            24   -0.25000000000000    0.25000000000000    0.00000000000000            12    0.50000000000000    0.50000000000000    0.00000000000000             3   -0.25000000000000    0.50000000000000    0.25000000000000             60.00000000 0.00000000 0.00000000 0.000 <--- ZERO WEIGHT\u00a0!!0.00000000 0.05555556 0.05555556 0.0000.00000000 0.11111111 0.11111111 0.0000.00000000 0.16666667 0.16666667 0.0000.00000000 0.22222222 0.22222222 0.0000.00000000 0.27777778 0.27777778 0.0000.00000000 0.33333333 0.33333333 0.0000.00000000 0.38888889 0.38888889 0.0000.00000000 0.44444444 0.44444444 0.0000.00000000 0.50000000 0.50000000 0.000---- 3) VASP2WANNIER90: PBE, HSE & GW    3.1 Standard SC run using the existing wannier.win file     3.2 run wannier90 (wannier90.x wannier90) to generate MLWFs   3.3 uncomment bandstructure plot flags in wannier90.win and restart wannier90 ----If the wannier90.win file does not exist VASP will create a default wannier90.win compatible withthe {{TAG|POSCAR}} and {{TAG|INCAR}}, which need to be suitably modify by including the proper instruction required to generate the MLWFs (refer to the wannier90 manual): default wannier90.win num_wann =     8 \u00a0! set to NBANDS by VASP use_bloch_phases = .T. begin unit_cell_cart     2.7150000     2.7150000     0.0000000     0.0000000     2.7150000     2.7150000     2.7150000     0.0000000     2.7150000end unit_cell_cart begin atoms_cartSi       0.0000000     0.0000000     0.0000000Si       1.3575000     1.3575000     1.3575000end atoms_cart mp_grid =     4     4     4 begin kpoints     0.0000000     0.0000000     0.0000000     0.2500000     0.0000000     0.0000000     0.5000000     0.0000000     0.0000000     0.2500000     0.2500000     0.0000000     0.5000000     0.2500000     0.0000000    -0.2500000     0.2500000     0.0000000     0.5000000     0.5000000     0.0000000    -0.2500000     0.5000000     0.2500000     0.0000000     0.2500000     0.0000000     0.0000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.2500000    -0.2500000     0.0000000     0.0000000     0.0000000    -0.2500000     0.0000000     0.0000000     0.0000000    -0.2500000     0.2500000     0.2500000     0.2500000     0.0000000     0.5000000     0.0000000     0.0000000     0.0000000     0.5000000    -0.5000000    -0.5000000    -0.5000000     0.0000000     0.2500000     0.2500000     0.2500000     0.0000000     0.2500000    -0.2500000    -0.2500000     0.0000000    -0.2500000     0.0000000    -0.2500000     0.0000000    -0.2500000    -0.2500000     0.0000000     0.5000000     0.2500000     0.2500000     0.0000000     0.5000000    -0.2500000    -0.2500000     0.2500000    -0.5000000    -0.2500000    -0.5000000     0.2500000     0.5000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.5000000    -0.2500000     0.0000000     0.2500000     0.5000000    -0.2500000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.5000000     0.5000000     0.0000000     0.2500000    -0.5000000    -0.2500000     0.0000000     0.0000000    -0.5000000    -0.2500000    -0.2500000     0.0000000    -0.5000000     0.2500000     0.2500000    -0.2500000     0.5000000     0.2500000     0.5000000    -0.2500000    -0.5000000     0.0000000    -0.2500000     0.2500000     0.2500000     0.5000000     0.5000000     0.2500000     0.0000000    -0.2500000    -0.5000000     0.2500000    -0.2500000     0.2500000     0.2500000     0.5000000     0.5000000    -0.5000000     0.0000000    -0.2500000     0.0000000    -0.2500000     0.2500000     0.2500000     0.0000000    -0.2500000    -0.2500000    -0.2500000    -0.5000000     0.2500000     0.5000000     0.2500000     0.2500000    -0.2500000     0.0000000    -0.5000000    -0.2500000    -0.2500000     0.2500000     0.2500000     0.5000000     0.0000000     0.2500000    -0.2500000    -0.2500000    -0.5000000    -0.2500000     0.5000000     0.2500000     0.2500000    -0.2500000     0.0000000     0.2500000     0.0000000     0.5000000     0.5000000     0.5000000     0.0000000     0.5000000     0.2500000    -0.2500000     0.5000000     0.5000000     0.2500000    -0.2500000    -0.5000000    -0.2500000    -0.7500000     0.2500000    -0.5000000    -0.2500000    -0.2500000     0.2500000    -0.5000000end kpoints----  ``` Wannier90 Manual: WANNIER90 manual LWANNIER90 in the VASP Manual: LWANNIER90. Download--------  5\\_4\\_Si\\_bandstructure.tgz Overview> bandgap of Si using different DFT\\+HF methods> MgO optimum mixing> fcc Ni DOS with hybrid functional> Si bandstructure > List of tutorials"}
{"file_name": "Calculation_of_dimers.md", "content": "Reproducing accurate dimer distances is an important difficult benchmark for a potential. If a potential works accurately for dimers and bulk calculations, one can be quite confident that the potential possesses excellent transferability. For the simulation of the dimers, one can use the   \u0393 {\\\\displaystyle \\\\Gamma }  point and displace the second atom along the diagonal direction. Generally bonding length and vibrational frequency have to be compared with accurate reference data. It is recommended to perform these calculations using the constant velocity molecular dynamic mode (i.e. IBRION\\=2, SMASS\\=\\-2\\). This mode speeds up the calculation because the wave functions are extrapolated and predicted using information from previous steps. The INCAR file must contain additional lines to perform the constant velocity MD:  ```#ionic relaxationNSW = 10     #number of steps for IOMSMASS = -2   #constant velocity MDPOTIM = 1    #time-step for ionic-motion  ``` In addition to the positions the POSCAR file must also contain velocities:  ```dimer 1     10.00000    .00000    .00000       .00000  10.00000    .00000       .00000    .00000  10.00000 2cart 0       0       0 1.47802 1.47802 1.47802cart   0       0       0 -.02309 -.02309 -.02309  ``` For this POSCAR file the starting distance is 2\\.56   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } , in each step the distance is reduced by 0\\.04   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } , leading to a final distance of 2\\.20   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } . The obtained energies can be fitted to a Morse potential. Mind: In some rare cases like C2, the calculation of the dimer turns out to be problematic. For this case the LUMO (lowest unoccupied molecular orbital) and the HOMO (highest occupied molecular orbital) cross at a certain distance, and are actually degenerate, if the total energy is used as a variational quantity (i.e.   \u03c3 \u2192 0 {\\\\displaystyle \\\\sigma \\\\to 0} ). Within the finite temperature LDA these difficulties are avoided, but interpreting the results is not easy because of the finite entropy (for C2 see Ref. [\\[1]](#cite_note-pederson:prb:1991-1))."}
{"file_name": "LWEIGHTED.md", "content": "LWEIGHTED= \\[logical]   Default: **LWEIGHTED** \\= .FALSE.nDescription: LWEIGHTED selects the weighted cRPA method.   --- Selects the cRPA method of Sasioglu, Friedrich and Bl\u00fcgel[\\[1]](#cite_note-sasioglu:prb:83-1) where following screening are subtracted from the full RPA polarizability:  \u03c7 \\~  G , G  \u2032  \u03c3  (  q  , i \u03c9 ) \u2248  1  N  k  \u2211  n  n \u2032  k  f  n  k  \u2212  f  n \u2032  k \u2212 q  \u03f5  n  k  \u2212  \u03f5  n \u2032  k \u2212 q  \u2212 i \u03c9  p  n  k  \u03c3  p  n \u2032  k \u2212 p  \u03c3 \u2032  \u27e8  u  n  k  \u03c3  \\|  e  \u2212 i  ( G \\+ q ) r  \\|  u  n \u2032  k \u2212 q  \u03c3 \u2032  \u27e9 \u27e8  u  n \u2032  k \u2212 q  \u03c3 \u2032  \\|  e  \u2212 i  (  G \u2032  \u2212 q )  r \u2032  \\|  u  n \u2032  k  \u03c3  \u27e9 {\\\\displaystyle {\\\\tilde {\\\\chi }}\\_{{\\\\bf {G,G}}'}^{\\\\sigma }({\\\\bf {q}},i\\\\omega )\\\\approx {\\\\frac {1}{N\\_{k}}}\\\\sum \\_{nn'{\\\\bf {k}}}{\\\\frac {f\\_{n{\\\\bf {k}}}\\-f\\_{n'{\\\\bf {k\\-q}}}}{\\\\epsilon \\_{n{\\\\bf {k}}}\\-\\\\epsilon \\_{n'{\\\\bf {k\\-q}}}\\-i\\\\omega }}p\\_{n{\\\\bf {k}}}^{\\\\sigma }p\\_{n'{\\\\bf {k\\-p}}}^{\\\\sigma '}\\\\langle u\\_{n{\\\\bf {k}}}^{\\\\sigma }\\|e^{\\-i{\\\\bf {(G\\+q)r}}}\\|u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\\\rangle \\\\langle u\\_{n'{\\\\bf {k\\-q}}}^{\\\\sigma '}\\|e^{\\-i{\\\\bf {(G'\\-q)r'}}}\\|u\\_{n'{\\\\bf {k}}}^{\\\\sigma }\\\\rangle }"}
{"file_name": "Molecular_dynamics.md", "content": "To get an idea about what basically molecular dynamics is and what the main contents are we refer the reader to"}
{"file_name": "Metadynamics.md", "content": "Theory------ In metadynamics,[\\[1]](#cite_note-laio:pnas:02-1)[\\[2]](#cite_note-iannuzzi:prl:03-2) the bias potentialthat acts on a selected number of geometric parameters (collective variables) \u03be\\={\u03be1, \u03be2, ...,\u03be*m*} is constructed on\\-the\\-fly during the simulation. The Hamiltonian for the metadynamics   H \\~  ( q , p ) {\\\\displaystyle {\\\\tilde {H}}(q,p)}  can be written as:  H \\~  ( q , p , t ) \\= H ( q , p ) \\+  V \\~  ( t , \u03be ) , {\\\\displaystyle {\\\\tilde {H}}(q,p,t)\\=H(q,p)\\+{\\\\tilde {V}}(t,\\\\xi ),} where   H ( q , p ) {\\\\displaystyle H(q,p)}  is the Hamiltonian for the original (unbiased) system, and   V \\~  ( t , \u03be ) {\\\\displaystyle {\\\\tilde {V}}(t,\\\\xi )}  is the time\\-dependent bias potential. The latter term is usually defined as a sum of Gaussian hills with height *h* and width *w*:  V \\~  ( t , \u03be ) \\= h  \u2211  i \\= 1  \u230a t  /  t  G  \u230b  exp \u2061  {  \u2212  \\|  \u03be  ( t )  \u2212  \u03be  ( i \u22c5  t  G  )  \\|  2  2  w  2  }  . {\\\\displaystyle {\\\\tilde {V}}(t,\\\\xi )\\=h\\\\sum \\_{i\\=1}^{\\\\lfloor t/t\\_{G}\\\\rfloor }\\\\exp {\\\\left\\\\{\\-{\\\\frac {\\|\\\\xi ^{(t)}\\-\\\\xi ^{(i\\\\cdot t\\_{G})}\\|^{2}}{2w^{2}}}\\\\right\\\\}}.} In practice,   V \\~  ( t , \u03be ) {\\\\displaystyle {\\\\tilde {V}}(t,\\\\xi )}  is updated by adding a new Gaussian with a time increment *t*G, which is typically one or two orders of magnitude greater than the time step used in the MD simulation. In the limit of infinite simulation time, the bias potential is related to the free energy via:  A ( \u03be ) \\= \u2212  lim  t \u2192 \u221e  V \\~  ( t , \u03be ) \\+ c o n s t . {\\\\displaystyle A(\\\\xi )\\=\\-\\\\lim \\_{t\\\\to \\\\infty }{\\\\tilde {V}}(t,\\\\xi )\\+const.} Practical hints as how to adjust the parameters used in metadynamics (*h*, *w*, *t*G) are given in Refs.[\\[3]](#cite_note-ensing:jpc:05-3) and [\\[4]](#cite_note-laio:jpc:05-4). The error estimation in free\\-energy calculations with metadynamics is discussed in Ref.[\\[4]](#cite_note-laio:jpc:05-4). How to------ ### Anderson thermostat * For a metadynamics run with Andersen thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=1 (MDALGO\\=11 in VASP 5\\.x), and choose an appropriate setting for ANDERSEN\\_PROB3. Set the parameters HILLS\\_H, HILLS\\_W, and HILLS\\_BIN4. Define collective variables in the ICONST\\-file, and set the `STATUS` parameter for the collective variables to 55. If needed, define the bias potential in the PENALTYPOT\\-file The actual time\\-dependent bias potential is written to the HILLSPOT\\-file, which is updated after adding a new Gaussian. At the beginning of the simulation, VASP attempts to read the initial bias potential from the PENALTYPOT\\-file. For the continuation of a metadynamics run, copy HILLSPOT to PENALTYPOT. The values of all collective variables for each MD step are listed in REPORT\\-file, check the lines after the string Metadynamics. ### Nose\\-Hoover thermostat * For a metadynamics run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=2 (MDALGO\\=21 in VASP 5\\.x), and choose an appropriate setting for SMASS3. Set the parameters HILLS\\_H, HILLS\\_W, and HILLS\\_BIN4. Define collective variables in the ICONST\\-file, and set the STATUS parameter for the collective variables to 55. If needed, define the bias potential in the PENALTYPOT\\-file The actual time\\-dependent bias potential is written to the HILLSPOT\\-file, which is updated after adding a new Gaussian. At the beginning of the simulation, VASP attempts to read the initial bias potential from the PENALTYPOT\\-file. For the continuation of a metadynamics run, copy HILLSPOT to PENALTYPOT. The values of all collective variables for each MD step are listed in REPORT\\-file, check the lines after the string Metadynamics."}
{"file_name": "ML_AFILT2.md", "content": "ML\\_AFILT2= \\[real]   Default: **ML\\_AFILT2** \\= 0\\.002nDescription: This tag sets the filtering parameter for the angular filtering for ML\\_IAFILT2 in the machine learning force field method.  --- This tag is only used if ML\\_LAFILT2\\=*.TRUE.* and ML\\_IAFILT2\\=2 are used. The angular filtering function[\\[1]](#cite_note-boyd:book:2000-1) for ML\\_IAFILT2\\=2 is described as   \u03b7  l ,  a  F I L T  \\=  1  1 \\+  a  F I L T  \\[ l ( l \\+ 1 )  ]  2 {\\\\displaystyle \\\\eta \\_{l,a\\_{\\\\mathrm {FILT} }}\\={\\\\frac {1}{1\\+a\\_{\\\\mathrm {FILT} }\\[l(l\\+1\\)]^{2}}}} . The tag ML\\_AFILT2 sets the parameter   a  F I L T {\\\\displaystyle a\\_{\\\\mathrm {FILT} }}  ."}
{"file_name": "I_CONSTRAINED_M.md", "content": "I\\_CONSTRAINED\\_M= 1 \\| 2 \\| 4   Default: **I\\_CONSTRAINED\\_M** \\= nonenDescription: I\\_CONSTRAINED\\_M switches on the constrained local moments approach.  --- VASP offers the possibility to add a penalty contribution to the total energy expression (and consequently a penalty functional to the Hamiltonian) that drives the local magnetic moment (integral of the magnetization in a site centered sphere of radius RWIGS) into a direction given by the M\\_CONSTR\\-tag. * I\\_CONSTRAINED\\_M\\=1: Constrain the *direction* of the magnetic moments. The total energy is given by  E \\=  E  0  \\+  \u2211  I  \u03bb  \\[  M \u2192  I  \u2212  M ^  I  0  (  M ^  I  0  \u22c5  M \u2192  I  )  ]  2 {\\\\displaystyle E\\=E\\_{0}\\+\\\\sum \\_{I}\\\\lambda \\\\left\\[{\\\\vec {M}}\\_{I}\\-{\\\\hat {M}}\\_{I}^{0}\\\\left({\\\\hat {M}}\\_{I}^{0}\\\\cdot {\\\\vec {M}}\\_{I}\\\\right)\\\\right]^{2}} where *E*0 is the usual DFT energy, and the second term on the right\\-hand\\-side represents the penalty. The sum is taken over all atomic sites *I*,   M ^  I  0 {\\\\displaystyle {\\\\hat {M}}\\_{I}^{0}}  is the desired direction (unit vector) of the magnetic moment at site *I* (as specified using M\\_CONSTR), and   M \u2192  I {\\\\displaystyle {\\\\vec {M}}\\_{I}}  is the integrated magnetic moment inside a sphere \u03a9*I* (the radius **must** be specified by means of RWIGS) around the position of atom *I*,  M \u2192  I  \\=  \u222b  \u03a9  I  m \u2192  (  r  )  F  I  (  \\|  r  \\|  ) d  r {\\\\displaystyle {\\\\vec {M}}\\_{I}\\=\\\\int \\_{\\\\Omega \\_{I}}{\\\\vec {m}}(\\\\mathbf {r} )F\\_{I}(\\|\\\\mathbf {r} \\|)d\\\\mathbf {r} } where *F**I*(\\|**r**\\|) is a function of norm 1 inside \u03a9*I*, that smoothly goes to zero towards the boundary of \u03a9*I*.The penalty term in the total energy introduces an additional potential inside the aforementioned spheres centered at the atomic sites *I*, given by  V  I  (  r  ) \\= 2 \u03bb  \\[  M \u2192  I  \u2212  M ^  I  0  (  M ^  I  0  \u22c5  M  I  \u2192  )  ]  \u22c5  \u03c3 \u2192  F  I  (  \\|  r  \\|  ) {\\\\displaystyle V\\_{I}(\\\\mathbf {r} )\\=2\\\\lambda \\\\left\\[{\\\\vec {M}}\\_{I}\\-{\\\\hat {M}}\\_{I}^{0}\\\\left({\\\\hat {M}}\\_{I}^{0}\\\\cdot {\\\\vec {M\\_{I}}}\\\\right)\\\\right]\\\\cdot {\\\\vec {\\\\sigma }}F\\_{I}(\\|\\\\mathbf {r} \\|)} where   \u03c3 \u2192  \\= (  \u03c3  x  ,  \u03c3  y  ,  \u03c3  z  ) {\\\\displaystyle {\\\\vec {\\\\sigma }}\\=(\\\\sigma \\_{x},\\\\sigma \\_{y},\\\\sigma \\_{z})}  are the Pauli spin\\-matrices.* I\\_CONSTRAINED\\_M\\=2: Constrain the *size and direction* of the magnetic moments. The total energy is given by  E \\=  E  0  \\+  \u2211  I  \u03bb  (  M \u2192  I  \u2212  M \u2192  I  0  )  2 {\\\\displaystyle E\\=E\\_{0}\\+\\\\sum \\_{I}\\\\lambda \\\\left({\\\\vec {M}}\\_{I}\\-{\\\\vec {M}}\\_{I}^{0}\\\\right)^{2}} where   M \u2192  I  0 {\\\\displaystyle {\\\\vec {M}}\\_{I}^{0}}  is the desired magnetic moment at site *I* (as specified using M\\_CONSTR).The additional potential that arises from the penalty contribution to the total energy is given by  V  I  (  r  ) \\= 2 \u03bb  (  M \u2192  I  \u2212  M \u2192  I  0  )  \u22c5  \u03c3 \u2192  F  I  (  \\|  r  \\|  ) {\\\\displaystyle V\\_{I}(\\\\mathbf {r} )\\=2\\\\lambda \\\\left({\\\\vec {M}}\\_{I}\\-{\\\\vec {M}}\\_{I}^{0}\\\\right)\\\\cdot {\\\\vec {\\\\sigma }}F\\_{I}(\\|\\\\mathbf {r} \\|)} * I\\_CONSTRAINED\\_M\\=4: Constrain the *direction and sign* of the magnetic moments[\\[1]](#cite_note-ma:prb:15-1), available since VASP.6\\.4\\.0\\. The total energy is given by  E \\=  E  0  \\+  \u2211  I  \u03bb  (  \\|  M \u2192  I  \\|  \u2212  M ^  I  0  \u22c5  M \u2192  I  ) {\\\\displaystyle E\\=E\\_{0}\\+\\\\sum \\_{I}\\\\lambda \\\\left(\\|{\\\\vec {M}}\\_{I}\\|\\-{\\\\hat {M}}\\_{I}^{0}\\\\cdot {\\\\vec {M}}\\_{I}\\\\right)} where   M ^  I  0 {\\\\displaystyle {\\\\hat {M}}\\_{I}^{0}}  is the desired magnetic moment at site *I* (as specified using M\\_CONSTR).The additional potential that arises from the penalty contribution to the total energy is given by  V  I  (  r  ) \\= \u03bb  (  M ^  I  \u2212  M ^  I  0  )  \u22c5  \u03c3 \u2192  F  I  (  \\|  r  \\|  ) {\\\\displaystyle V\\_{I}(\\\\mathbf {r} )\\=\\\\lambda \\\\left({\\\\hat {M}}\\_{I}\\-{\\\\hat {M}}\\_{I}^{0}\\\\right)\\\\cdot {\\\\vec {\\\\sigma }}F\\_{I}(\\|\\\\mathbf {r} \\|)} where   M ^  I {\\\\displaystyle {\\\\hat {M}}\\_{I}}  denotes the unit vector in   M \u2192  I {\\\\displaystyle {\\\\vec {M}}\\_{I}}  direction.The weight \u03bb, with which the penalty terms enter into the total energy expression and the Hamiltonian in the above is specified through the LAMBDA tag. As is probably clear from the above, applying constraints by means of a penalty functional contributes to the total energy. This contribution, however, decreases with increasing LAMBDA and can in principle be made vanishingly small [\\[1]](#cite_note-ma:prb:15-1). Increasing LAMBDA stepwise, from one run to another (slowly so the solution remains stable) one thus converges towards the DFT total energy for a given magnetic configuration.  --- When one uses the constrained moment approach, additional information pertaining to the effect of the constraints is written into the OSZICAR file:  ``` E_p =  0.36856E-07  lambda =  0.500E+02<lVp>=  0.30680E-02 DBL = -0.30680E-02 ion        MW_int                 M_int  1 -0.565  0.000  0.000   -0.770  0.000  0.000  2  0.565  0.000  0.000    0.770  0.000  0.000  3 -0.565  0.000  0.000   -0.770  0.000  0.000  4  0.565  0.000  0.000    0.770  0.000  0.000DAV:   8    -0.133293620177E+03    0.15284E-05   -0.29410E-08  4188   0.144E-03    0.119E-04  ``` E\\_p is the contribution to the total energy arising from the penalty functional. Under M\\_int VASP lists the integrated magnetic moment at each atomic site. The column labeled MW\\_int shows the result of the integration of magnetization density which has been smoothed towards the boundary of the sphere. It is actually the smoothed integrated moment which enters in the penalty terms (the smoothing ensures that the total local potential remains continuous at the sphere boundary). One should look at the latter numbers to check whether enough of the magnetization density around each atomic site is contained within the integration sphere and increase RWIGS accordingly. What exactly constitutes \"enough\" in this context is hard to say. It is best to set RWIGS in such a manner that the integration spheres do not overlap and are otherwise as large as possible.  ```DAV:   9    -0.133293621087E+03   -0.91037E-06   -0.18419E-08  4188   0.104E-03   1 F= -.13329362E+03 E0= -.13329362E+03  d E =0.000000E+00  mag=     0.0000     0.0000     0.0000  E_p =  0.36600E-07  lambda =  0.500E+02 ion             lambda*MW_perp  1  -0.67580E-03  -0.12424E-22  -0.88276E-23  2   0.67580E-03   0.14700E-22  -0.24744E-22  3  -0.67790E-03  -0.82481E-23  -0.19834E-22  4   0.67790E-03   0.15710E-23   0.34505E-22  ``` Under lambda\\*MW\\_perp the constraining \"magnetic field\" at each atomic site is listed. It shows which magnetic field is added to the DFT Hamiltonian to stabilize the magnetic configuration."}
{"file_name": "RMM-DIIS.md", "content": "The implementation of the Residual Minimization Method with Direct Inversion in the Iterative Subspace (RMM\\-DIIS) in VASP[\\[1]](#cite_note-kresse:cms:1996-1)[\\[2]](#cite_note-kresse:prb:96-2) is based on the original work of Pulay:[\\[3]](#cite_note-pulay:cpl:1980-3) * The procedure starts with the evaluation of the preconditioned residual vector for some selected orbital   \u03c8  m  0 {\\\\displaystyle \\\\psi \\_{m}^{0}}  :  K \\|  R  m  0  \u27e9 \\= K \\| R (  \u03c8  m  0  ) \u27e9 {\\\\displaystyle K\\\\vert R\\_{m}^{0}\\\\rangle \\=K\\\\vert R(\\\\psi \\_{m}^{0})\\\\rangle } where   K {\\\\displaystyle K}  is the preconditioning function, and the residual is computed as:  \\| R ( \u03c8 ) \u27e9 \\= ( H \u2212  \u03f5  a p p  ) \\| \u03c8 \u27e9 {\\\\displaystyle \\\\vert R(\\\\psi )\\\\rangle \\=(H\\-\\\\epsilon \\_{\\\\rm {app}})\\\\vert \\\\psi \\\\rangle } with  \u03f5  a p p  \\=  \u27e8 \u03c8 \\| H \\| \u03c8 \u27e9  \u27e8 \u03c8 \\| S \\| \u03c8 \u27e9 {\\\\displaystyle \\\\epsilon \\_{\\\\rm {app}}\\={\\\\frac {\\\\langle \\\\psi \\\\vert H\\\\vert \\\\psi \\\\rangle }{\\\\langle \\\\psi \\\\vert S\\\\vert \\\\psi \\\\rangle }}} * Then a Jacobi\\-like trial step is taken in the direction of the vector:  \\|  \u03c8  m  1  \u27e9 \\= \\|  \u03c8  m  0  \u27e9 \\+ \u03bb K \\|  R  m  0  \u27e9 {\\\\displaystyle \\\\vert \\\\psi \\_{m}^{1}\\\\rangle \\=\\\\vert \\\\psi \\_{m}^{0}\\\\rangle \\+\\\\lambda K\\\\vert R\\_{m}^{0}\\\\rangle } and a new residual vector is determined:  \\|  R  m  1  \u27e9 \\= \\| R (  \u03c8  m  1  ) \u27e9 {\\\\displaystyle \\\\vert R\\_{m}^{1}\\\\rangle \\=\\\\vert R(\\\\psi \\_{m}^{1})\\\\rangle } * Next a linear combination of the initial orbital   \u03c8  m  0 {\\\\displaystyle \\\\psi \\_{m}^{0}}  and the trial orbital   \u03c8  m  1 {\\\\displaystyle \\\\psi \\_{m}^{1}}  \\|  \u03c8 \u00af  M  \u27e9 \\=  \u2211  i \\= 0  M  \u03b1  i  \\|  \u03c8  m  i  \u27e9 ,  M \\= 1 {\\\\displaystyle \\\\vert {\\\\bar {\\\\psi }}^{M}\\\\rangle \\=\\\\sum \\_{i\\=0}^{M}\\\\alpha \\_{i}\\\\vert \\\\psi \\_{m}^{i}\\\\rangle ,\\\\,\\\\,M\\=1} is sought, such that the norm of the residual vector is minimized. Assuming linearity in the residual vector:  \\|  R \u00af  M  \u27e9 \\= \\| R (  \u03c8 \u00af  M  ) \u27e9 \\=  \u2211  i \\= 0  M  \u03b1  i  \\|  R  m  i  \u27e9 {\\\\displaystyle \\\\vert {\\\\bar {R}}^{M}\\\\rangle \\=\\\\vert R({\\\\bar {\\\\psi }}^{M})\\\\rangle \\=\\\\sum \\_{i\\=0}^{M}\\\\alpha \\_{i}\\\\vert R\\_{m}^{i}\\\\rangle } this requires the minimization of:  \u2211  i j  \u03b1  i  \u2217  \u03b1  j  \u27e8  R  m  i  \\|  R  m  j  \u27e9  \u2211  i j  \u03b1  i  \u2217  \u03b1  j  \u27e8  \u03c8  m  i  \\| S \\|  \u03c8  m  j  \u27e9 {\\\\displaystyle {\\\\frac {\\\\sum \\_{ij}\\\\alpha \\_{i}^{\\*}\\\\alpha \\_{j}\\\\langle R\\_{m}^{i}\\\\vert R\\_{m}^{j}\\\\rangle }{\\\\sum \\_{ij}\\\\alpha \\_{i}^{\\*}\\\\alpha \\_{j}\\\\langle \\\\psi \\_{m}^{i}\\\\vert S\\\\vert \\\\psi \\_{m}^{j}\\\\rangle }}} with respect to   {  \u03b1  i  \\|  i \\= 0 , . . , M } {\\\\displaystyle {\\\\{\\\\alpha \\_{i}\\|i\\=0,..,M\\\\}}}  .This step is usually called *direct inversion of the iterative subspace* (DIIS).* The next trial step (  M \\= 2 {\\\\displaystyle M\\=2} ) starts from   \u03c8 \u00af  1 {\\\\displaystyle {\\\\bar {\\\\psi }}^{1}} , along the direction   K  R \u00af  1 {\\\\displaystyle K{\\\\bar {R}}^{1}} . In each iteration   M {\\\\displaystyle M}  is increased by 1, and a new trial orbital:  \\|  \u03c8  m  M  \u27e9 \\= \\|  \u03c8 \u00af  M \u2212 1  \u27e9 \\+ \u03bb K \\|  R \u00af  M \u2212 1  \u27e9 {\\\\displaystyle \\\\vert \\\\psi \\_{m}^{M}\\\\rangle \\=\\\\vert {\\\\bar {\\\\psi }}^{M\\-1}\\\\rangle \\+\\\\lambda K\\\\vert {\\\\bar {R}}^{M\\-1}\\\\rangle } and its corresponding residual vector   R (  \u03c8  m  M  ) {\\\\displaystyle R(\\\\psi \\_{m}^{M})}  are added to the iterative subspace, that is subsequently inverted to yield   \u03c8 \u00af  M {\\\\displaystyle {\\\\bar {\\\\psi }}^{M}}  .The algorithm keeps iterating until the norm of the residual   R \u00af  M {\\\\displaystyle {\\\\bar {R}}^{M}}  has dropped below a certain threshold, or the maximum number of iterations per orbital has been reached (NRMM).* Replace   \u03c8  m  0 {\\\\displaystyle \\\\psi \\_{m}^{0}}  by  \u03c8 \u00af  M {\\\\displaystyle {\\\\bar {\\\\psi }}^{M}}  and move on to start work on the next orbital, *e.g.*   \u03c8  m \\+ 1  0 {\\\\displaystyle \\\\psi \\_{m\\+1}^{0}}  . The size of the trial step   \u03bb {\\\\displaystyle \\\\lambda }  is a critical value for the stability of the algorithm. We have found that a reasonable choice for the trial step can be obtained from the minimization of the Rayleigh quotient along the search direction in *the first step*, this optimal   \u03bb {\\\\displaystyle \\\\lambda }  is then used for a particular orbital until the algorithm moves on to the next orbital.[\\[1]](#cite_note-kresse:cms:1996-1)[\\[2]](#cite_note-kresse:prb:96-2) As mentioned before, the optimization of an orbital is stopped when either the maximum number of iterations per orbital (NRMM), or a certain convergence threshold has been reached. The latter may be fine\\-tuned by means of the EBREAK, DEPER, and WEIMIN tags. Note: we do not recommend you to do so! Rather rely on the defaults instead. The RMM\\-DIIS algorithm works on a \"per\\-orbital\" basis and as such it trivially parallelizes over orbitals, which is the default  parallelization strategy of VASP. However, to cast some of the operations involved into the form of *matrix\\-matrix multiplications* and leverage the performance of BLAS3 library calls, the RMM\\-DIIS implementation in VASP works on NSIM orbitals simultaneously. Note that, in the self\\-consistency cycle of VASP, subspace rotation and RMM\\-DIIS refinement of the orbitals alternate.Furthermore, VASP re\\-orthonormalizes the orbitals after the RMM\\-DIIS refinement step.It should be emphasized that, in principle, the RMM\\-DIIS method should also converge without any explicit subspace diagonalization and/or re\\-orthonormalization.However, in our experience their inclusion speeds up convergence so substantially that it shortens the time\\-to\\-solution of most calculations, even though these operations scale as   O (  N  3  ) {\\\\displaystyle O(N^{3})} .[\\[1]](#cite_note-kresse:cms:1996-1)[\\[2]](#cite_note-kresse:prb:96-2) A drawback of the RMM\\-DIIS method is that it always converges toward the eigenstates which are closest to the initial trial orbitals. This leads, in principle, to serious problems because there is no guarantee of convergence to the correct ground state at all: if the initial set of orbitals does not \u2018\u2018span\u2019\u2019 the ground state it might happen that in the final solution some eigenstates are \u2018\u2018missing\u2019\u2019. To avoid this, the initialization of the orbitals must be done with great care.Therefore, either the number of non\\-selfconsistent cycles at the start of self\\-consistency cycle is chosen to be large (NELMDL \\= 12, for ALGO \\= VeryFast), or the non\\-selfconsistent cycles are done with the blocked\\-Davidson algorithm before switching over to the use of the RMM\\-DIIS (ALGO \\= Fast). The RMM\\-DIIS is approximately a factor of 1\\.5\\-2 faster than the blocked\\-Davidson algorithm, but less robust."}
{"file_name": "CMBJB.md", "content": "CMBJB= \\[real]n| Default: **CMBJB** | \\= 1\\.023 | if METAGGA\\=MBJ || --- | --- | --- ||  | \\= 0\\.5 | if METAGGA\\=LMBJ | Description: sets the   \u03b2 {\\\\displaystyle \\\\beta }  parameter in the MBJ and LMBJ potentials.  --- See the description of the METAGGA tag."}
{"file_name": "NTARGET_STATES.md", "content": "NTARGET\\_STATES= \\[integer array]nDescription: Controls which Wannier states are excluded in constrained random phase approximation. Check also NCRPA\\_BANDS.  --- This tag is effective for ALGO\\=CRPA and ignored otherwise.For instance   ```NTARGET_STATES = 1 2 4   ``` selects the Wannier state 1, 2 and 4, where the ordering of the Wannier states depends on the chosen basis set. ###"}
{"file_name": "PARAM2.md", "content": "PARAM2= \\[real]   Default: **PARAM2** \\= 1\\.0nDescription:   \u03ba {\\\\displaystyle \\\\kappa }  for GGA\\=MK, or   \u03bc {\\\\displaystyle \\\\mu }  for GGA\\=BO.  --- The PARAM2 tag determines the value corresponding to different parameters depending on the GGA functional that is chosen:  * \u03ba {\\\\displaystyle \\\\kappa }  in the optB86b[\\[1]](#cite_note-klimes:prb:2011-1) (  \u03ba {\\\\displaystyle \\\\kappa }  is not shown in this work since implicitly set to 1\\.0\\), B86R[\\[2]](#cite_note-hamada:prb:2014-2), and DF3\\-opt2[\\[3]](#cite_note-chakraborty:jctc:2020-3) exchange functionals, which have the same analytical form and correspond to GGA\\=MK. PARAM2 should in principle be set to 1\\.0 for the nonlocal optB86b\\-vdW functional[\\[1]](#cite_note-klimes:prb:2011-1), to 0\\.711357 for the nonlocal rev\\-vdW\\-DF2[\\[2]](#cite_note-hamada:prb:2014-2) functional, or to  0\\.58 {\\\\displaystyle 0\\.58}  for the vdW\\-DF3\\-opt2 nonlocal functional[\\[3]](#cite_note-chakraborty:jctc:2020-3). * \u03bc {\\\\displaystyle \\\\mu }  in the optB88[\\[4]](#cite_note-klimes:jpcm:2010-4) and DF3\\-opt1[\\[3]](#cite_note-chakraborty:jctc:2020-3) exchange functionals, which have the same analytical form and correspond to GGA\\=BO. PARAM2 should in principle be set to 0\\.22 for the nonlocal optB88\\-vdW functional[\\[4]](#cite_note-klimes:jpcm:2010-4) or to   10  /  81 \u22480\\.1234568 {\\\\displaystyle 10/81\\\\approx 0\\.1234568}  for the vdW\\-DF3\\-opt1[\\[3]](#cite_note-chakraborty:jctc:2020-3) nonlocal functional. The complete INCAR file for the nonlocal van der Waals functionals mentioned above can be found at Nonlocal vdW\\-DF functionals."}
{"file_name": "IOP_Chester_2019.md", "content": "Lectures-------- * DFT, PW, and PAW: \"VASP: The basics. DFT, plane waves, PAW, ...\". * Hybrid functionals: \"VASP: Hybrid functionals\". * Beyond DFT: RPA: \"VASP: beyond DFT. The Random\\-Phase\\-Approximation\". * Geometry optimization: Tutorial on geometry optimisation by Dr. Jonathan Skelton. * Surfaces and interfaces by Dr. Alberto Roldan. * Electronic structure of materials surfaces and interfaces by Dr. Theodoros Papadopoulos. * Performance: \"VASP: running on HPC resources\". Allocating Computing Nodes and Environment Setup------------------------------------------------ An interactive shell should be allocated after login. The following command allocates an interactive node with 8 CPUs for 90 minutes  ```qsub -A y15 -q <queue> -IVl select=1:ncpus=8,walltime=01:30:00,place=scatter:excl  ``` Here `<queue>` is `R1179799` for the 14:00\\-15:30 and `R1171601` for the 16:00\\-17:30 session, respectively.After successful allocation, one has to setup the environment as follows.  To have access to the vasp binaries, the corresponding module has to be loaded into the environment. Furthermore, the job scripts found in the tutorial tar files (job.sh, doall.sh, etc) work only if the environment variables \"vasp\\_std, vasp\\_gam, vasp\\_ncl\" are defined.Enter following commands in the terminal window after login, to setup up the environment.  ```module load vasp/5.4.4-intel18-impi18-wannier90_1.2export vasp_ncl=\"mpirun -ppn 8 -np 8 /lustre/home/y07/vasp5/5.4.4-intel18-impi18/bin/vasp_ncl\"export vasp_gam=\"mpirun -ppn 8 -np 8 /lustre/home/y07/vasp5/5.4.4-intel18-impi18/bin/vasp_gam\"export vasp_std=\"mpirun -ppn 8 -np 8 /lustre/home/y07/vasp5/5.4.4-intel18-impi18/bin/vasp_std\"  ``` Submitting jobs--------------- Alternative to an interactive shell, one may submit jobs to the cluster as follows  ```qsub vasp.job  ``` where the jobfile \"vasp.job\" reads  ```#!/bin/bash --login #PBS -N VASP-Test#PBS -l select=1:ncpus=36#PBS -l place=scatter:excl#PBS -l walltime=00:30:00#PBS -A y15  cd $PBS_O_WORKDIR module load vaspmpiexec_mpt -ppn 36 -n 36 vasp_std | tee vasp.out  ``` Install sumo for post processing-------------------------------- Sumo[\\[1]](https://sumo.readthedocs.io/) can be used to plot band structures and density of states. A local installation is possible with following commands   ```module load anaconda/python3pip install --user --upgrade pippip3 install --user --upgrade scipypip3 install --user --upgrade numpypip3 install --user sumo  ``` Tutorials--------- All tutorial files can be extracted to your home folder as follows   ```cd ~\u00a0; mkdir examples cd ~/examplescp /lustre/home/shared/VASP_Workshop_Chester/examples.tgz .tar -xvf examples.tgz  ``` Electronic structure examples are located on the following folder on cirrus:  ```/lustre/home/shared/VASP_Workshop_Chester/COonNi111.zip  ``` For the beginners:  A short introduction to the common Input and Output files. * Atoms and Molecules* Simple Bulk Systems* A bit of Surface Science* Hybrid Functionals* Optical Properties and Dielectric Response* The Random\\-Phase\\-Approximation: GW and ACFDT* The Bethe\\-Salpeter equation* Magnetism Further Examples---------------- #### Optimisation in the bulk * Exercises by Jonathan Skelton #### Nudge Elastic Band Method and (constrained) Molecular Dynamics * Liquid Si \\- Standard MD * Transition State Search of Ammonia * Adsorption of H2O on TiO2 #### Magnetism in NiO * NiO GGA * NiO GGA\\+U * NiO HSE06 * Estimation of J magnetic coupling * Including the Spin\\-Orbit Coupling * Determining the Magnetic Anisotropy * Constraining the local magnetic moments ### Surfaces and Interfaces * Exercises by Alberto Roldan Martinez"}
{"file_name": "LMIXTAU.md", "content": "LMIXTAU= .TRUE. \\| .FALSE.   Default: **LMIXTAU** \\= .FALSE.nDescription: send the kinetic\\-energy density through the density mixer as well.  --- In many cases, the density\\-mixing scheme works well enough without passing the kinetic\\-energy density through the mixer. Therefore VASP uses LMIXTAU\\=.FALSE. per default. However, when the self\\-consistency cycle fails to converge for one of the algorithms exploiting density mixing, e.g, IALGO\\=38 or 48, we recommend setting LMIXTAU\\=.TRUE.."}
{"file_name": "NBSEEIG.md", "content": "NBSEEIG= \\[integer]   Default: **NBSEEIG** \\= 0nDescription: NBSEEIG sets the number of BSE eigenvectors written to the BSEFATBAND file. If BSEHOLE or BSEELECTRON is set, NBSEEIG exciton wavefunctions are written to the CHG.XX files. Related tags and sections------------------------- BSE, BSEFATBAND, BSE calculations Examples that use this tag  ---"}
{"file_name": "Ni_100_surface_DOS.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Calculation of the local density of states (LDOS) of a Ni (100\\) surface. Input----- ### POSCAR  ```fcc (100) surface                          3.53000000000000          0.5000000000000000    0.5000000000000000    0.0000000000000000    -0.5000000000000000    0.5000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    5.0000000000000000 Ni 5Selective dynamicsDirect  0.0000000000000000  0.0000000000000000  0.0000000000000000   F   F   F  0.5000000000000000  0.5000000000000000  0.1000000000000014   F   F   F  0.0000000000000000  0.0000000000000000  0.2000000000000028   F   F   F  0.5000000000000000  0.5000000000000000  0.3004245271852446   T   T   T  0.0000000000000000 -0.0000000000000000  0.3959414474619545   T   T   T   0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  0.00000000E+00  ```   ### INCAR  ```general:  SYSTEM = clean (100) Ni surface  ENMAX = 270  ISMEAR =   -5  ALGO = Normal  spin:  ISPIN = 2  MAGMOM = 5*1      LORBIT = 11  # lm and site decomposed DOS inside PAW spheres  ``` * Using the tetrahedron method (with Bl\u00f6chl corrections).* LM and site decomposed DOS.* N.B.: We want to use the optimized structure of Ni 100 surface relaxation. Normally this would mean copying the CONTCAR file of Ni 100 surface relaxation to the POSCAR file in the directory where you want to run Ni 100 surface DOS. In this case, however, that has already been taken care of and the POSCAR file from the downloadable tar file is the correct one. ### KPOINTS  ```k-points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * At the end of the OUCAR\") file the information on the local charge and magnetization is given.  ``` total charge# of ion     s       p       d       tot----------------------------------------  1        0.461   0.316   8.331   9.108  2        0.483   0.466   8.323   9.273  3        0.484   0.462   8.324   9.270  4        0.490   0.481   8.329   9.300  5        0.472   0.337   8.341   9.150----------------------------------------tot        2.390   2.062  41.648  46.100   total charge# of ion     s       p       d       tot----------------------------------------  1       -0.003  -0.019   0.715   0.692  2       -0.008  -0.023   0.619   0.588  3       -0.007  -0.024   0.620   0.589  4       -0.008  -0.024   0.622   0.591  5       -0.004  -0.020   0.705   0.681----------------------------------------tot       -0.030  -0.110   3.281   3.141  ``` * Using LORBIT\\=1 and changing RWIGS the total number of electrons within the spheres coud be adapted (nickel pseudo\\-potential has a valence of 10\\). * Enhancement of the magnetic moment at the surface. * Magnetic moment int the center \"bulk like\". * The surface and bulk projected\\-DOS plotted for each spin component spearately should show a band narrowing and larger exchange splitting at the surface: [](File_Fig_Ni_100_surfDOS_1.html) * The DOS of can be plotted using p4vasp: [](File_Fig_Ni_100_surfDOS_2.html) Download--------  Ni100clean\\_LDOS.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
{"file_name": "Alpha-SiO2.md", "content": "*Exercise\u00a0:* Determine the 17O Cq value and the Si and O schieldings. \u03b1\\-SiO2 crystallizes in the trigonal P312 space group. a \\= b \\= 4\\.604 \u00c5; c \\= 5\\.207 \u00c5 \u03b1 \\= \u03b2 \\= 90\u00b0; \u03b3 \\= 120\u00b0 The unit cell contains two independent atoms (1 Si and 1 O) with 3 formula units (SiO2) per unit cell (Z\\=3\\). SiO4 tetrahedron units are linked together by corner sharing. In this exercise one wants first to calculate the EFG tensor components of 17O.This is very fast task calculated at the end of the first SCF calculation (ground state property).The experimental values for the Cq is 5\\.19 MHz. The nuclear quadrupolar momentum used to transform EFG in Cq is Q \\= 2\\.55 10\\-30 m2(see the paper of Profeta *et al.* (http://pubs.acs.org/doi/abs/10\\.1021/ja027124r)(Silicon has a 1/2 nuclear spin, so Q is zero) In a second step one wants to calculate the shielding parameters for Si and O. This is done using the linear response using the GIPAW formalism.As the calculation is quite time consuming, only very few k\\-points and small ENCUT are used with standard PAW data sets.The calculated shielding tensors components can be compared to the ones obtained by Profeta *et al.* * INCAR  ``` SYSTEM      = Si O2 GGA          = PE ISTART       = 1 ICHARG       = 0 INIWAV       = 1 LREAL        =  AUTO ISYM         = 2 ISPIN        = 1  ``` Ionic minimisation  ``` NSW          = 0 ISIF         = 2 IBRION       = 2  ``` 1. EDIFFG \\= \\-2E\\-2  ``` POTIM        = 0.1  ``` Electronic minimisation  ``` IALGO        = 38 LWAVE        = .TRUE. EMIN         =   -20.0 EMAX         =   10.0 NEDOS        = 1601  ``` EFG Calculation  ``` LEFG         = .TRUE. QUAD_EFG     = 0.0 25.5  ``` Chemical Shift  ``` PREC         = Normal    # nice ENCUT        = 400.0      # typically higher cutoffs than usual are needed ISMEAR = 0; SIGMA= 0.1 # no fancy smearings, SIGMA sufficiently small EDIFF        = 1E-9      # you'd need much smaller EDIFFs. LCHIMAG      = .TRUE.   # to switch on linear response for chemical shifts DQ           = 0.001         # often the default is sufficient ICHIBARE     = 1       # often the default is sufficient LNMR_SYM_RED = .TRUE. # be on the safe side NLSPLINE     = .TRUE.  # only needed if LREAL is NOT set. LREAL        = A          # helps for speed for large systems, not needed NBANDS       = 30       # to safe memory,\u00a0??? = NELECT/2   ```   * KPOINTS  ```automatic mesh 0Auto 20  ``` * POSCAR  ```O2 Si1   1.00000000000000     4.6040000915999997    0.0000000000000000    0.0000000000000000    -2.3020000457999998    3.9871810383000001    0.0000000000000000     0.0000000000000000    0.0000000000000000    5.2069997787000002   Si   O     3     6Direct  0.4436617824484789 -0.0000000000000000  0.3333333429999996 -0.0000000000000000  0.4436617824484789  0.6666666870000029  0.5563382175515210  0.5563382175515210 -0.0000000000000000  0.3926661416221499  0.3062177364999842  0.2428214976299141  0.6937822635000156  0.0864484051221655  0.5761548406299137  0.9135515948778347  0.6073338583778505  0.9094881546299145  0.3062177364999842  0.3926661416221499  0.7571785323700884  0.0864484051221655  0.6937822635000156  0.4238451593700863  0.6073338583778505  0.9135515948778347  0.0905118383700884  ``` Download--------  SiO2\\_NMR.tgz  ---"}
{"file_name": "WFULLxxxx.md", "content": "These files store the full\\-screened exchange   W {\\\\displaystyle W} , needed for BSE calculations. The *xxxx* in the name corresponds to integer values labeling the k\\-point index. During the BSE calculations, VASP will first try to read the WFULLxxxx.tmp files, and then, if these are missing, the Wxxxx.tmp files. For small isotropic (jellium\\-like) bulk systems, results with the Wxxxx.tmp might be similar to the results obtained using the WFULLxxxx.tmp files. However, for molecules and atoms as well as surfaces it is strictly required to use the full\\-screened Coulomb kernel.   ---"}
{"file_name": "Blue_moon_ensemble.md", "content": "In general, constrained molecular dynamics generates biased statistical averages. It can be shown that the correct average for a quantity   a ( \u03be ) {\\\\displaystyle a(\\\\xi )}  can be obtained using the formula (blue moon ensemble average):  a ( \u03be ) \\=  \u27e8  \\|  Z  \\|  \u2212 1  /  2  a (  \u03be  \u2217  )  \u27e9  \u03be  \u2217  \u27e8  \\|  Z  \\|  \u2212 1  /  2  \u27e9  \u03be  \u2217  , {\\\\displaystyle a(\\\\xi )\\={\\\\frac {\\\\langle \\|\\\\mathbf {Z} \\|^{\\-1/2}a(\\\\xi ^{\\*})\\\\rangle \\_{\\\\xi ^{\\*}}}{\\\\langle \\|\\\\mathbf {Z} \\|^{\\-1/2}\\\\rangle \\_{\\\\xi ^{\\*}}}},} where   \u27e8 . . .  \u27e9  \u03be  \u2217 {\\\\displaystyle \\\\langle ...\\\\rangle \\_{\\\\xi ^{\\*}}}  stands for the statistical average of the quantity enclosed in angular parentheses computed for a constrained ensemble and   Z {\\\\displaystyle Z}  is a mass metric tensor defined as:  Z  \u03b1 , \u03b2  \\=  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  \u03b1  \u22c5  \u2207  i  \u03be  \u03b2  ,  \u03b1 \\= 1 , . . . , r ,  \u03b2 \\= 1 , . . . , r , {\\\\displaystyle Z\\_{\\\\alpha ,\\\\beta }\\={\\\\sum }\\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{\\\\alpha }\\\\cdot \\\abla \\_{i}\\\\xi \\_{\\\\beta },\\\\,\\\\alpha \\=1,...,r,\\\\,\\\\beta \\=1,...,r,} It can be shown that the free energy gradient can be computed using the equation:[\\[1]](#cite_note-Carter89-1)[\\[2]](#cite_note-Otter00-2)[\\[3]](#cite_note-Darve02-3)[\\[4]](#cite_note-Fleurat05-4)  (  \u2202 A  \u2202  \u03be  k  )  \u03be  \u2217  \\=  1  \u27e8  \\|  Z  \\|  \u2212 1  /  2  \u27e9  \u03be  \u2217  \u27e8  \\|  Z  \\|  \u2212 1  /  2  \\[  \u03bb  k  \\+  k  B  T  2  \\|  Z  \\|  \u2211  j \\= 1  r  (  Z  \u2212 1  )  k j  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  j  \u22c5  \u2207  i  \\|  Z  \\|  ]  \u27e9  \u03be  \u2217  , {\\\\displaystyle {\\\\Bigl (}{\\\\frac {\\\\partial A}{\\\\partial \\\\xi \\_{k}}}{\\\\Bigr )}\\_{\\\\xi ^{\\*}}\\={\\\\frac {1}{\\\\langle \\|Z\\|^{\\-1/2}\\\\rangle \\_{\\\\xi ^{\\*}}}}\\\\langle \\|Z\\|^{\\-1/2}\\[\\\\lambda \\_{k}\\+{\\\\frac {k\\_{B}T}{2\\|Z\\|}}\\\\sum \\_{j\\=1}^{r}(Z^{\\-1})\\_{kj}\\\\sum \\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{j}\\\\cdot \\\abla \\_{i}\\|Z\\|]\\\\rangle \\_{\\\\xi ^{\\*}},} where   \u03bb  \u03be  k {\\\\displaystyle \\\\lambda \\_{\\\\xi \\_{k}}}  is the Lagrange multiplier associated with the parameter   \u03be  k {\\\\displaystyle {\\\\xi \\_{k}}}  used in the SHAKE algorithm.[\\[5]](#cite_note-Ryckaert77-5) The free\\-energy difference between states (1\\) and (2\\) can be computed by integrating the free\\-energy gradients over a connecting path:  \u0394  A  1 \u2192 2  \\=  \u222b  \u03be ( 1 )  \u03be ( 2 )  (  \u2202  A  \u2202 \u03be  )  \u03be  \u2217  \u22c5 d  \u03be  . {\\\\displaystyle {\\\\Delta }A\\_{1\\\\rightarrow 2}\\=\\\\int \\_{\\\\xi (1\\)}^{\\\\xi (2\\)}{\\\\Bigl (}{\\\\frac {\\\\partial {A}}{\\\\partial \\\\xi }}{\\\\Bigr )}\\_{\\\\xi ^{\\*}}\\\\cdot d{\\\\xi }.} Note that as the free\\-energy is a state quantity, the choice of path connecting (1\\) with (2\\) is irrelevant. How to------ The information needed to determine the blue moon ensemble averages within a Constrained molecular dynamics can be obtained by setting LBLUEOUT\\=.TRUE. The following output is written for each MD step in the file REPORT:  ```>Blue_moon       lambda        |z|^(-1/2)    GkT           |z|^(-1/2)*(lambda+GkT)  b_m>  0.585916E+01  0.215200E+02 -0.117679E+00  0.123556E+03  ```   with the four numerical terms indicating   \u03bb  \u03be  k {\\\\displaystyle \\\\lambda \\_{\\\\xi \\_{k}}}  ,  \\|  Z  \\|  \u2212 1  /  2 {\\\\displaystyle \\|Z\\|^{\\-1/2}}  ,  (  k  B  T  2  \\|  Z  \\|  \u2211  j \\= 1  r  (  Z  \u2212 1  )  k j  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  j  \u22c5  \u2207  i  \\|  Z  \\|  ) {\\\\displaystyle \\\\left({\\\\frac {k\\_{B}T}{2\\|Z\\|}}\\\\sum \\_{j\\=1}^{r}(Z^{\\-1})\\_{kj}\\\\sum \\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{j}\\\\cdot \\\abla \\_{i}\\|Z\\|\\\\right)} , and   (  \\|  Z  \\|  \u2212 1  /  2  \\[  \u03bb  k  \\+  k  B  T  2  \\|  Z  \\|  \u2211  j \\= 1  r  (  Z  \u2212 1  )  k j  \u2211  i \\= 1  3 N  m  i  \u2212 1  \u2207  i  \u03be  j  \u22c5  \u2207  i  \\|  Z  \\|  ]  ) {\\\\displaystyle \\\\left(\\|Z\\|^{\\-1/2}\\[\\\\lambda \\_{k}\\+{\\\\frac {k\\_{B}T}{2\\|Z\\|}}\\\\sum \\_{j\\=1}^{r}(Z^{\\-1})\\_{kj}\\\\sum \\_{i\\=1}^{3N}m\\_{i}^{\\-1}\\\abla \\_{i}\\\\xi \\_{j}\\\\cdot \\\abla \\_{i}\\|Z\\|]\\\\right)} , respectively. Note that one line introduced by the string 'b\\_m\\>' is written for each constrained coordinate. With this output, the free energy gradient with respected to the fixed coordinate   \u03be  k {\\\\displaystyle {\\\\xi \\_{k}}}  can conveniently be determined (by equation given above) as a ratio between averages of the last and the second numerical terms. In the simplest case when only one constraint is used, the free energy gradient can be obtained as follows:  ```grep b_m REPORT |awk 'BEGIN {a=0.;b=0.} {a+=$5;b+=$3} END {print a/b}'  ``` As example of a blue moon ensemble average, let us consider calculation of unbiased potential energy average from constrained MD. For simplicity, only a single constraint is assumed. Here we extract   \\|  Z  \\|  \u2212 1  /  2 {\\\\displaystyle \\|Z\\|^{\\-1/2}}  for each step and store the data in an auxiliary file zet.dat:  ```grep b_m REPORT |awk '{print $3}' > zet.dat  ``` Here we extract potential energy for each step and store the data in an auxiliary file energy.dat:  ```grep e_b REPORT |awk '{print $3}' > energy.dat  ``` Finally, the weighted average is determined according to the first formula shown above:   ```paste energy.dat zet.dat |awk 'BEGIN {a=0.;b=0.} {a+=$1*$2;b+=$2} END {print a/b}'  ```"}
{"file_name": "LMAXMIX.md", "content": "LMAXMIX= \\[integer]   Default: **LMAXMIX** \\= 2nDescription: LMAXMIX controls up to which *l*\\-quantum number the one\\-center PAW charge densities are passed through the charge density mixer and written to the CHGCAR file.  --- Higher *l*\\-quantum numbers (*l*\\>LMAXMIX) are not handled by the density mixer (these components of the one\\-center charge density are set to the value corresponding to the present orbitals). Usually, it is not necessary to increase LMAXMIX, but the following cases are exceptions: * DFT\\+U calculations require, in many cases, an increase of LMAXMIX to 4 for *d*\\-electrons (or 6 for *f*\\-elements) to obtain fast convergence to the ground state. * The CHGCAR file will contain the one\\-center PAW occupancy matrices up to LMAXMIX. When the CHGCAR file is read and kept fixed in the course of the calculations (ICHARG\\=11\\), the results will not necessarily be identical to a self\\-consistent run. The deviations will be large for DFT\\+U calculations. For the calculation of band structures within the DFT\\+U approach, it is strictly required to increase LMAXMIX to 4 for *d*\\-elements and to 6 for *f*\\-elements. * SDFT calculations that consider noncollinear magnetism often require slow mixing of the spin density up to 4 for *d*\\-elements and up to 6 for *f*\\-elements to obtain fast convergence to the ground state."}
{"file_name": "Advanced_molecular-dynamics_sampling.md", "content": "In a molecular\\-dynamics (MD) calculation, we are often interested in rare events or specific transitions. **Advanced molecular\\-dynamics sampling** helps to capture these during an MD run within a feasible simulation time.  Theory------ * Interface pinning: Interface pinning calculations.* Biased molecular dynamics: Biased molecular dynamics.* Metadynamics: Metadynamics.* Constrained molecular dynamics: Constrained molecular dynamics.* Blue moon ensemble: Blue moon ensemble.* Slow\\-growth approach: Slow\\-growth approach. How to------ * Interface pinning: Interface pinning calculations.* Constrained molecular dynamics: Constrained molecular dynamics.* Metadynamics: Metadynamics.* Biased molecular dynamics: Biased molecular dynamics.* Slow\\-growth approach: Slow\\-growth approach.* Thermodynamic integration: Thermodynamic integration"}
{"file_name": "Conjugate_gradient_optimization.md", "content": "Instead of the previous iteration scheme, which is justsome kind of Quasi\\-Newton scheme, it also possible to optimize theexpectation value of the Hamiltonian using a successive number ofconjugate gradient steps.The first step is equal to the steepest descent step in section Single band steepest descent scheme.In all following steps the preconditioned gradient   g  n  N {\\\\displaystyle g\\_{n}^{N}} is conjugated to the previous search direction.The resulting conjugate gradient algorithm is almost as efficient as the algorithmgiven in Efficient single band eigenvalue\\-minimization.For further reading see [\\[1]](#cite_note-teter:prb:1989-1)[\\[2]](#cite_note-bylander:prb:1990-2)[\\[3]](#cite_note-press:book:1986-3)."}
{"file_name": "IRC_DELTA0.md", "content": "IRC\\_DELTA0= real   Default: **IRC\\_DELTA0** \\= 0\\.0015nDescription: Defines the tolerance factor   \u0394  0 {\\\\displaystyle \\\\Delta \\_{0}}  in \u00c5 used in the IRC calculations.   --- The smaller the value of IRC\\_DELTA0, the closer the computed IRC trajectory follows the true IRC pathway. However, a small tolerance factor   \u0394  0 {\\\\displaystyle \\\\Delta \\_{0}}  necessitates more time steps and, thus, computational effort."}
{"file_name": "NiO.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials Task---- Calculation of NiO, an antiferromagnet. Input----- ### POSCAR  ```AFM  NiO 4.17 1.0 0.5 0.5 0.5 1.0 0.5 0.5 0.5 1.0 2 2Cartesian 0.0 0.0 0.0 1.0 1.0 1.0 0.5 0.5 0.5 1.5 1.5 1.5  ``` * AFM coupling: 4 atoms in the basis (instead of 2\\). ### INCAR  ```SYSTEM = NiO     ISTART = 0 ISPIN = 2MAGMOM = 2.0 -2.0 2*0  ENMAX = 250.0EDIFF = 1E-3 ISMEAR = -5 AMIX = 0.2BMIX = 0.00001AMIX_MAG = 0.8BMIX_MAG = 0.00001 LORBIT = 11  ``` * Initial magnetic moments of 2\u03bcB (Ni) and 0\u03bcB (O).* AMIX\\=0\\.2 and AMIX\\_MAG\\=0\\.8 (default), BMIX and BMIX\\_MAG practically zero, i.e. linear mixing. ### KPOINTS  ```k-points 0gamma 4  4  4  0  0  0  ``` Calculation----------- * The total magnetic moment should be 0 in the OSZICAR file:  ```DAV:  13    -0.267936242334E+02    0.12794E-03   -0.12638E-04   552   0.298E-01    0.169E-02DAV:  14    -0.267936352231E+02   -0.10990E-04   -0.21775E-05   520   0.107E-01   1 F= -.26793635E+02 E0= -.26793635E+02  d E =0.000000E+00  mag=     0.0000  ``` * The partial and integrated magnetic moments within the PAW spheres are given in the OUTCAR file:  ``` magnetization (x) # of ion     s       p       d       tot----------------------------------------  1       -0.012  -0.014   1.245   1.219  2        0.012   0.014  -1.242  -1.216  3        0.000  -0.001   0.000  -0.001  4        0.000  -0.001   0.000  -0.001-----------------------------------------------tot        0.000  -0.003   0.003   0.000  ``` * The example total DOS and the partial l\\-decomposed DOS for the d orbitals of Ni should look like the following: [](File_Fig_NiO_1.html) Download--------  4\\_2\\_NiO.tgz Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorials"}
{"file_name": "VDW_SR.md", "content": "VDW\\_SR= \\[real]nDescription: VDW\\_SR defines the damping function parameter   s  R {\\\\displaystyle s\\_{R}}  (or scaling factor).  --- VDW\\_SR sets the damping function parameter   s  R {\\\\displaystyle s\\_{R}}  (or scaling factor) for the DFT\\-D2, DFT\\-D3, DDsC, Tkatchenko\\-Scheffler and Many\\-body dispersion energy methods."}
{"file_name": "DOSCAR.md", "content": "The DOSCAR file contains the DOS and integrated DOS. The units are number of states/eV and number of states, respectively and thus extensively defined. The intensive DOS is obtained by dividing by the Volume of the unit cell. For dynamic simulations and relaxations, an averaged DOS and an averaged integrated DOS is written to the file. For a description of how the averaging is done see the tags NBLOCK, KBLOCK, EMIN, EMAX and NEDOS. The first few lines of the DOSCAR file are made up by a header:  ```Number of Ions (including empty spheres), Number of Ions, 0 (no partial DOS) or 1 (incl. partial DOS), NCDIJ (currently not used)     Volume of the unit cell [Angst**3], length of the basis vectors (a,b,c [m]), POTIM[s]the initial Temperature TEBEG 'CAR'the name of the system as given by SYSTEM in INCARE(max), E(min), (the energy range in which the DOS is given), NEDOS,  E(fermi), 1.0000  ``` which is followed by NEDOS lines with the columns  ```energy     DOS     integrated DOS  ``` The density of states (DOS)   n \u00af {\\\\displaystyle {\\\\bar {n}}} , for Methfessel\\-Paxton smearing (ISMEAR\\>0\\) and Fermi\\-Dirac smearing (ISMEAR\\=\\-1\\) is determined as the difference of the integrated DOS between two pins, i.e.  n \u00af  (  \u03f5  i  ) \\= ( N (  \u03f5  i  ) \u2212 N (  \u03f5  i \u2212 1  ) )  /  \u0394 \u03f5 {\\\\displaystyle {\\\\bar {n}}(\\\\epsilon \\_{i})\\=(N(\\\\epsilon \\_{i})\\-N(\\\\epsilon \\_{i\\-1}))/\\\\Delta \\\\epsilon } where   \u0394 \u03f5 {\\\\displaystyle \\\\Delta \\\\epsilon }  is the distance between two pins (energy difference between two grid point in the DOSCAR file), and   N (  \u03f5  i  ) {\\\\displaystyle N(\\\\epsilon \\_{i})}  is the integrated DOS  N (  \u03f5  i  ) \\=  \u222b  \u2212 \u221e  \u03f5  i  n ( \u03f5 ) d \u03f5 . {\\\\displaystyle N(\\\\epsilon \\_{i})\\=\\\\int \\_{\\-\\\\infty }^{\\\\epsilon \\_{i}}n(\\\\epsilon )d\\\\epsilon .} This method conserves the total number of electrons exactly.For the tetrahedron method (ISMEAR\\=\\-4 or \\-5\\), the total integrated DOS is computed using the formulas in Appendix A and B of Bloechl's paper [\\[1]](#cite_note-bloechl:prb:1994-1) and the DOS using the formulas from Appendix C [\\[1]](#cite_note-bloechl:prb:1994-1).In this case, it is not guaranteed that integrating the DOS will conserve the number of electrons. This can however be systematically improved by increasing NEDOS. For spin\\-polarized calculations ISPIN\\=2 each line holds five data columns with the following format  ```energy     DOS(up) DOS(dwn)  integrated DOS(up) integrated DOS(dwn)  ``` If RWIGS or LORBIT (important for Wigner Seitz radii) is set in the INCAR file, an lm\\- and site\\-projected DOS is calculated and written to the DOSCAR file for each ion. This data, again, contains NEDOS lines with various columns depending on the choice of LORBIT, ISPIN and LNONCOLLINEAR.  In the case of colinear calculations with ISPIN\\=1, the format for l\\-decomposed calculations for each ion is  ```energy s-DOS p-DOS d-DOS  ``` while for lm\\-resolved calculations the format is:  ```energy  s  p_y p_z p_x d_{xy} d_{yz} d_{z2-r2} d_{xz} d_{x2-y2},...  ``` For spin\\-polarized systems ISPIN \\= 2 additional columns are printed for each spin channel  ```energy s-DOS(up) s-DOS(down) p-DOS(up) p-DOS(dwn) d-DOS(up) d-DOS(dwn)  ``` and correspondingly if lm\\-decomposed densities are selected with LORBIT.  For non\\-collinear calculations, information on the individual spinor components is available only for the site projected density of states:  ```energy s-DOS(total) s-DOS(mx) s-DOS(my) s-DOS(mz) p-DOS(total) p-DOS(mx) ...  ``` In this case, the (site projected) total density of states (total) and the (site projected) energy resolved magnetization density in the   x {\\\\displaystyle x}  (mx),   y {\\\\displaystyle y}  (my) and   z {\\\\displaystyle z}  (mz) directions are available. In all cases, the units of the l\\- and site projected DOS are states/atom/energy.   The site projected DOS is not evaluated in the parallel version for the following cases: * vasp.4\\.5, NPAR  \u2260 {\\\\displaystyle \\\eq } 1 no site projected DOS* vasp.4\\.6, NPAR  \u2260 {\\\\displaystyle \\\eq } 1, LORBIT\\=0\\-5 no site projected DOS In vasp.4\\.6 the site projected DOS can be evaluated for LORBIT\\=10\\-12, even if NPAR is not equal 1 (contrary to previous releases). * vasp.5 needs no specification of NPAR Mind: For relaxations, the DOSCAR is usually useless. If you want to get an accurate DOS for the final configuration, first copy CONTCAR to POSCAR and continue with one static (ISTART\\=1; NSW\\=0\\) calculation.  --- 1. \u2191 a b P.E. Bl\u00f6chl, O. Jepsen, and O.K. Andersen, Phys. Rev. B **49**, 16223 (1994\\)."}
{"file_name": "LMONO.md", "content": "LMONO= .TRUE. \\| .FALSE.   Default: **LMONO** \\= .FALSE.nDescription: LMONO switches on monopole\\-monopole corrections for the total energy.  --- The flag switches on monopole corrections for charged systems. The correction is calculated only a posteriori for the total energy. No correction to the potential is calculated. | **Tip:** If corrections for the potential are desired as well, please use LDIPOL instead (when using LDIPOL, VASP automatically determines whether the system is charged and activates the monopole corrections automatically). || --- | The primary use of this flag is for defect calculations in charged supercells, as wellas charged 0D systems (molecules and atoms). VASP also automatically calculatescorrections to the total energy related to repeated dipoles (IDIPOL\\=4\\). The user then needs to decide whetherthose are sensible or not. Specifically, for super cells using periodic boundary conditions, it is often not possible to determine the dipole at the defect site accurately,whereas for 0D systems (i.e. atoms and molecules) the dipole can be determined accurately."}
{"file_name": "ENAUG.md", "content": "ENAUG= \\[real]   Default: **ENAUG** \\= largest *EAUG* read from the POTCAR filenDescription: ENAUG specifies the cut\\-off energy of the plane wave representation of the augmentation charges in eV.  --- ENAUG determines NGXF, NGYF, and NGZF in accordance with the PREC tag. | **Deprecated:** ENAUG is considered as deprecated and should not be used anymore. || --- | | **Warning:** Setting ENAUG has an effect only if PREC is set to one of the old settings (Low, Medium or High), otherwise it is ignored. || --- |"}
{"file_name": "Slow-growth_approach.md", "content": "The free\\-energy profile along a geometric parameter   \u03be {\\\\displaystyle \\\\xi }  can be scanned by an approximate slow\\-growthapproach[\\[1]](#cite_note-woo1997-1).In this method, the value of   \u03be {\\\\displaystyle \\\\xi }  is linearly changedfrom the value characteristic for the initial state (1\\) to that forthe final state (2\\) with a velocity of transformation  \u03be \u02d9 {\\\\displaystyle {\\\\dot {\\\\xi }}}  .The resulting work needed to perform a transformation   1 \u2192 2 {\\\\displaystyle 1\\\\rightarrow 2} can be computed as:  w  1 \u2192 2  i r r e v  \\=  \u222b  \u03be ( 1 )  \u03be ( 2 )  (  \u2202  V ( q )  \u2202 \u03be  )  \u22c5  \u03be \u02d9  d t . {\\\\displaystyle w\\_{1\\\\rightarrow 2}^{irrev}\\=\\\\int \\_{\\\\xi (1\\)}^{\\\\xi (2\\)}\\\\left({\\\\frac {\\\\partial {V(q)}}{\\\\partial \\\\xi }}\\\\right)\\\\cdot {\\\\dot {\\\\xi }}\\\\,dt.} In the limit of infinitesimally small   \u03be \u02d9 {\\\\displaystyle {\\\\dot {\\\\xi }}} , the work   w  1 \u2192 2  i r r e v {\\\\displaystyle w\\_{1\\\\rightarrow 2}^{irrev}} corresponds to the free\\-energy difference between the the final and initial state.In the general case,   w  1 \u2192 2  i r r e v {\\\\displaystyle w\\_{1\\\\rightarrow 2}^{irrev}}  is the irreversible work relatedto the free energy via Jarzynski's identity[\\[2]](#cite_note-jarzynski1997-2):  e x  p  \u2212  \u0394  A  1 \u2192 2  k  B  T  \\=  \u27e8  e x  p  \u2212  w  1 \u2192 2  i r r e v  k  B  T  \u27e9  . {\\\\displaystyle exp^{\\-{\\\\frac {\\\\Delta A\\_{1\\\\rightarrow 2}}{k\\_{B}\\\\,T}}}\\={\\\\bigg \\\\langle }exp^{\\-{\\\\frac {w\\_{1\\\\rightarrow 2}^{irrev}}{k\\_{B}\\\\,T}}}{\\\\bigg \\\\rangle }.} Note that calculation of the free\\-energy via this equation requiresaveraging of the term   e x p  {  \u2212  w  1 \u2192 2  i r r e v  k  B  T  } {\\\\displaystyle {\\\\rm {exp}}\\\\left\\\\{\\-{\\\\frac {w\\_{1\\\\rightarrow 2}^{irrev}}{k\\_{B}\\\\,T}}\\\\right\\\\}} over many realizations of the   1 \u2192 2 {\\\\displaystyle 1\\\\rightarrow 2} transformation.Detailed description of the simulation protocol that employs Jarzynski's identitycan be found in reference [\\[3]](#cite_note-oberhofer2005-3). Anderson thermostat------------------- * For a slow\\-growth simulation, one has to perform a calcualtion very similar to Constrained molecular dynamics but additionally the transformation velocity\\-related INCREM\\-tag for each geometric parameter with STATUS\\=0 has to be specified. For a slow\\-growth approach run with Andersen thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=1, and choose an appropriate setting for ANDERSEN\\_PROB3. Define geometric constraints in the ICONST file, and set the **STATUS** parameter for the constrained coordinates to 04. When the free\\-energy gradient is to be computed, set LBLUEOUT\\=.TRUE. 5. Specify the transformation velocity\\-related INCREM\\-tag for each geometric parameter with STATUS\\=0. Nose\\-Hoover thermostat----------------------- * For a slow\\-growth approach run with Nose\\-Hoover thermostat, one has to: 1. Set the standard MD\\-related tags: IBRION\\=0, TEBEG, POTIM, and NSW2. Set MDALGO\\=2, and choose an appropriate setting for SMASS3. Define geometric constraints in the ICONST\\-file, and set the STATUS parameter for the constrained coordinates to 04. When the free\\-energy gradient is to be computed, set LBLUEOUT\\=.TRUE. 5. Specify the transformation velocity\\-related INCREM\\-tag for each geometric parameter with STATUS\\=0   VASP can handle multiple (even redundant) constraints. Note, however, that a too large number of constraints can cause problems with the stability of the SHAKE algorithm. In problematic cases, it is recommended to use a looser convergence criterion (see SHAKETOL) and to allow a larger number of iterations (see SHAKEMAXITER) in the SHAKE algorithm. Hard constraints may also be used in metadynamics simulations (see MDALGO\\=11 \\| 21\\). Information about the constraints is written onto the REPORT\\-file: check the lines following the string: Const\\_coord"}
{"file_name": "CUTOFF_MU.md", "content": "CUTOFF\\_MU= \\[real] ( \\[real] )n| Default: **CUTOFF\\_MU** | \\= 0\\.8 \\* Fermi level of a system with NUM\\_WANN orbitals occupied |  || --- | --- | --- | Description: CUTOFF\\_MU specifies the energy cutoff   \u03bc {\\\\displaystyle \\\\mu }  in eV for the function specified by CUTOFF\\_MU.  --- The value   \u03bc {\\\\displaystyle \\\\mu }  of CUTOFF\\_MU corresponds to the energy cutoff of the cutoff function used to obtain Wannier functions with the one\\-shot method \"Wannier functions\").The meaning of   \u03bc {\\\\displaystyle \\\\mu }  depends on the CUTOFF\\_TYPE tag. For spin\\-polarized calculations (`ISPIN = 2`), two values can be specified for CUTOFF\\_MU, one for each spin channel.If only a single value is specified, it will be used for both spin channels. The default value is computed by first determining the Fermi level of the system if it had NUM\\_WANN orbitals occupied and multiplying by 0\\.8\\. This gives reasonable freedom to determine the unitary transformation   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  from Bloch states to Wannier functions. | **Tip:** Careful tuning of this parameter is required to obtain a good Wannierization. || --- |"}
{"file_name": "Memory_requirements.md", "content": "The memory requirements of VASP can easily exceed your computer facilities.In this case the first step is to estimate where the excessive memory requirementsderive from. There are two possibilities: * Storage of wave functions: All bands for all k\\-points must be kept in memory at the same time. The memory requirements for the wave functions are:  ```NKDIM*NBANDS*NRPLWV*16  ``` The factor 16 arises from the fact that all quantities are COMPLEX\\*16\\. * Work arrays for the representation of the charge density, local potentials, structure factor and large work arrays: A total of approximately 10 arrays is allocated on the second finer grid:  ```4*(NGXF/2+1)*NGYF*NGZF*16  ``` Once again all quantities are COMPLEX\\*16\\. Try to reduce the memory requirements by reducing the corresponding parameters.See section \\\\ref{imp} for a discussion of the minimal requirements forthese parameters.  ---"}
{"file_name": "Ionic_contributions_to_the_frequency_dependent_dielectric_function_of_NaCl.md", "content": "Overview> dielectric properties of SiC> dielectric properties of Si > Ionic contributions to the frequency dependent dielectric function of NaCl > List of tutorials Task---- Calculation of the ionic contruibutions to the frequency dependent dielectric function of NaCl.  Calculation----------- To get the full (electronic \\& ionic) frequency dependent dielectric function you will have to compute them separately. Step 1\\. Do a standard DFT calculation Step 2\\. Calculate the *electronic* contributions to the frequency dependent dielectric function. Step 3\\. Calculate the *ionic* contributions to the frequency dependent dielectric function. Step 4\\. Add the two dielectric functions together:   \u03b5 ( \u03c9 ) \\=  \u03b5  e l e c  ( \u03c9 ) \\+  \u03b5  i o n  ( \u03c9 ) {\\\\displaystyle \\\\varepsilon (\\\\omega )\\=\\\\varepsilon \\_{\\\\rm {elec}}(\\\\omega )\\+\\\\varepsilon \\_{\\\\rm {ion}}(\\\\omega )} This approach can be used for semi\\-conductors and insulators, not for metals. Input----- ### POSCAR  ```NaCl FCC                                 5.55596202        0.5000000000000000    0.5000000000000000    0.0000000000000000    0.0000000000000000    0.5000000000000000    0.5000000000000000    0.5000000000000000    0.0000000000000000    0.5000000000000000  Na   Cl    1     1Direct 0.0000000000000000  0.0000000000000000  0.0000000000000000 0.5000000000000000  0.5000000000000000  0.5000000000000000  ``` ### KPOINTS A smaller 4x4x4 or 8x8x8 would also suffice in case you are running interactively on one core.   ```Gamma-centred 11x11x11 Monkhorst-Pack grid 0 G11 11 110 0 0  ``` ### INCAR * INCAR file for the static calculation:  ```PREC = HighISMEAR = 0\u00a0; SIGMA = 0.01EDIFF = 1.E-8GGA = PS  ``` * INCAR electronic contributions to the frequency dependent dielectric function[\\[1]](#cite_note-gajdos:prb:2006-1) (see other tutorials for more advanced options: Dielectric\\_properties\\_of\\_SiC. The same procedures for the electronic contributions apply to this example.)  ```PREC = HighISMEAR = 0\u00a0; SIGMA = 0.01EDIFF = 1.E-8GGA = PSALGO = ExactLOPTICS = .TRUE.  ```   * INCAR ionic contributions to the frequency dependent dielectric function[\\[2]](#cite_note-bokdam:scr:2016-2):  ```PREC = HighISMEAR = 0\u00a0; SIGMA = 0.01EDIFF = 1.E-8GGA = PSEDIFF = 1.E-8#The ionic dielectric function can be calculated in two ways:#################1# DFPT (faster), but does not allow for METAGGA use. ######################IBRION = 8; LEPSILON=.TRUE.#2# Finite differences (slower). #############################################IBRION = 6; LPEAD=.TRUE; LCALCEPS=.TRUE.#NFREE = 2\u00a0; POTIM = 0.015#In both 1 and 2 the calculated dielectric function is in vasprun.xml #######  ``` Results------- Download all necessary files and run doall.sh. An Awk script (\"extract\\_diel\\_vasprun\") is used to extract the dielectric function from the vasprun.xml file and write it into a easy to plot two\\-column format. If everything goes well you will obtain two files (\"diel.electron.dat\" and \"diel.ion.dat\"). The two dielectric functions have been plotted in the following figure: [](File_NaCl-diel-ion.html) *Note that the units on the frequency axes are different, eV and 2  \u03c0 {\\\\displaystyle \\\\pi } THz!* The high frequency 'ion\\-clamped' dielectric constant (  \u03b5  \u221e {\\\\displaystyle \\\\varepsilon \\_{\\\\infty }} ) was obtained with the LOPTICS calculation. The static field (  \u03c9 \\= 0 {\\\\displaystyle \\\\omega \\=0} ) contribution of the ionic lattice to the dielectric constant (   \u03b5  i o n {\\\\displaystyle \\\\varepsilon \\_{\\\\rm {ion}}} ) can be calculated by DFPT or by the finite\\-difference method. In both cases the phonon frequencies (ie. eigenvalues of the dynamical matrix) and the Born effective charges are calculated and written to the OUTCAR file:  ```BORN EFFECTIVE CHARGES (including local field effects) (in e, cummulative output)---------------------------------------------------------------------------------ion    1   1     1.07157     0.00000     0.00000   2     0.00000     1.07157    -0.00000   3    -0.00000    -0.00000     1.07157ion    2   1    -1.07157    -0.00000    -0.00000   2    -0.00000    -1.07157     0.00000   3     0.00000     0.00000    -1.07157  ```  ```Eigenvectors and eigenvalues of the dynamical matrix----------------------------------------------------  1 f  =    5.130373 THz   32.235082 2PiTHz  171.130804 cm-1    21.217523 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000     0.000000   -0.000000    0.779560     2.777981  2.777981  2.777981     0.000000   -0.000000   -0.626328  2 f  =    5.130373 THz    32.235082 2PiTHz  171.130804 cm-1    21.217523 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000    -0.697237   -0.348675    0.000000     2.777981  2.777981  2.777981     0.560186    0.280139    0.000000  3 f  =    5.130373 THz    32.235082 2PiTHz  171.130804 cm-1    21.217523 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000    -0.348675    0.697237    0.000000     2.777981  2.777981  2.777981     0.280139   -0.560186    0.000000  ```   We see that the Born charge on the Na and Cl ion have an opposite sign. If a phonon mode is 'dipole\\-active', meaning that the dipole moment of all ions involved in the mode changes in size during one period, it will appear in the frequency dependent dielectric function. This is the case here as we can see in the eigenvectors of the dynamical matrix.  The total static dielectric constant is then the sum of the two contributions:   \u03b5  0  \\=  \u03b5  \u221e  \\+  \u03b5  i o n {\\\\displaystyle \\\\varepsilon \\_{0}\\=\\\\varepsilon \\_{\\\\infty }\\+\\\\varepsilon \\_{\\\\rm {ion}}} ### Further study on the three imaginary phonon modes Besides the three dipole\\-active modes, there are thee imaginary (f/i) phonon modes. Here these modes do not indicate that our structure is dynamically unstable. The finite plane\\-wave basisset that we have used can give slightly different answers for the total energy depending on where in the cell we place the center of mass of all ions combined.  ```   4 f/i=    0.005715 THz     0.035910 2PiTHz    0.190642 cm-1     0.023637 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000     0.366245    0.491651   -0.128181     2.777981  2.777981  2.777981     0.455847    0.611934   -0.159541  5 f/i=    0.005715 THz     0.035910 2PiTHz    0.190642 cm-1     0.023637 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000    -0.395455    0.176626   -0.452443     2.777981  2.777981  2.777981    -0.492204    0.219838   -0.563134  6 f/i=    0.005715 THz     0.035910 2PiTHz    0.190642 cm-1     0.023637 meV            X         Y         Z           dx          dy          dz     0.000000  0.000000  0.000000     0.319009   -0.345498   -0.413704     2.777981  2.777981  2.777981     0.397055   -0.430024   -0.514918  ``` * Are the vectors for the Na and Cl in modes 4, 5 and 6 parallel? The two vectors do not have the same lenght. In this case that is the result of mass\\-weighting of the eigenvectors.  * Calculate   m  N a  /  m  C l {\\\\displaystyle {\\\\sqrt {m\\_{\\\\rm {Na}}/m\\_{\\\\rm {Cl}}}}} . The masses you can get by  ```grep POMASS POTCAR  ``` * Is the calculated mass ratio similar as the ratio between the two displacement vectors? (  \u22120\\.128181  /  m  N a  \\= ? \u22120\\.159541  /  m  C l {\\\\displaystyle \\-0\\.128181/{\\\\sqrt {m\\_{\\\\rm {Na}}}}\\=?\\-0\\.159541/{\\\\sqrt {m\\_{\\\\rm {Cl}}}}}  ) Plotting-------- Use xmgrace or your other favourite plotting tool to plot the two collumn files (diel.electron.dat and diel.electron.dat):  ```xmgrace -nxy diel.electron.dat &xmgrace -nxy diel.ion.dat  ```"}
{"file_name": "EVENONLYGW.md", "content": "EVENONLYGW= \\[logical]   Default: **EVENONLYGW** \\= .FALSE.nDescription: EVENONLYGW allows to restrict the k\\-points in the evaluation of response functions (in GW calculations) to even values.  --- EVENONLYGW\\=*.TRUE.* is only of limited use and restricts the summation to k\\-points with   n  1  \\+  n  2  \\+  n  3 {\\\\displaystyle n\\_{1}\\+n\\_{2}\\+n\\_{3}}  being even (  \u0393 {\\\\displaystyle \\\\Gamma }  point and from there on every second k\\-point included)."}
{"file_name": "NELMDL.md", "content": "NELMDL= \\[integer]n| Default: **NELMDL** | \\= \\-12 | if ISTART\\=0, INIWAV\\=1, and IALGO\\=48 or IALGO\\=50 || --- | --- | --- ||  | \\= 0 | if WAVECAR is present ||  | \\= \\-5 | else | Description: NELMDL specifies the number of non\\-self\\-consistent steps at the beginning.  --- If the orbitals are initialized using a random number generator (the default in VASP), the initial orbitals are usually unreasonable and the iterative matrix diagonalization will require 5\\-10 steps to obtain reasonable orbitals. The charge density corresponding to the initial orbitals is also, at best, erratic. It is hence advisable to perform a few electronic steps while keeping the initial Hamiltonian fixed. This initial Hamiltonian is usually determined from a superposition of atomic charge densities (see ICHARG). Such a 'delay' is absolutely necessary if the SCF\\-convergence is slow and problematic (e.g. for surfaces or metallic clusters, low dimensional system). Without a delay, VASP will most likely not converge, or at least the convergence speed is slowed significantly. NELMDL might be set to a positive or negative value. A negative value means that the delay is only performed in the first ionic step (usually the recommended option). A positive number means that a delay is employed after each ionic movement. This can improve the convergence speed in VASP.6 (see below) but is not recommended in VASP.5\\. For calculations using a direct minimization of the Hamiltonian (ALGO\\=ALL or ALGO\\=DAMPED), the Davidson algorithm is used during the delay phase and the Hamiltonian is kept fixed during these steps.  Special considerations for VASP.6: * For calculations using a direct minimization of the Hamiltonian (ALGO\\=ALL or ALGO\\=DAMPED): if NELMDL is set, the Davidson algorithm is used in the first NELMDL steps as described above. Using a positive NELMDL (i.e. delay in every ionic step) does not work reliably in VASP.5, due to issues in the orbital and charge density prediction. In VASP.6, using NELMDL\\=1 (or NELMDL\\=2\\) and direct minimization often improves the stability and efficiency of molecular dynamics simulations or relaxations (ALGO\\=ALL or ALGO\\=DAMPED). Note, however, that this might require one to prepare a reasonable WAVECAR file since NELMDL \\=1/2 might not suffice to obtain a reasonable set of orbitals from the initial random numbers. * For HF\\-type calculations, if NELMDL is larger or equal to 3, VASP will perform NELMDL non\\-selfconsistent steps using the Davidson algorithm, and a local Hamiltonian is calculated using the semi\\-local DFT functional corresponding to the chosen hybrid functional (i.e. PBE for HSE and PBE0\\). This is expedient if the ions move by a large distance between the ionic steps. Setting NELMDL \\=3 can thus improve the stability and performance during relaxations using HF\\-type Hamiltonians. Try to use ALGO\\=All and NELMDL\\=3 if you encounter convergence issues during relaxations using HF\\-type Hamiltonians."}
{"file_name": "GW0_caveat.md", "content": "Redirect to: * ScGW0 caveat\")"}
{"file_name": "Phonons_from_finite_differences.md", "content": "The phonon calculations using a finite differences approach are carried out by setting **IBRION**\\=5 or 6 in the INCAR file.When these tags are set, the second\\-order force constants are computed using finite differences. The dynamical matrix is constructed, diagonalized and the phonon modes and frequencies of the system are reported in the OUTCAR file.If ISIF\\>\\=3, the internal strain tensors are computed as well. | **Mind:** Only zone\\-center (\u0393\\-point) frequencies are calculated. || --- | It is possible to obtain the phonon dispersion at different **q** points by computing the second\\-order force constants on a sufficiently large supercell and Fourier interpolating the dynamical matrices in the unit cell. Input----- There are two options to compute the second\\-order force constants using finite differences: * IBRION\\=5, all atoms are displaced in all three Cartesian directions, resulting in a significant computational effort even for moderately sized high\\-symmetry systems.* IBRION\\=6, only symmetry inequivalent displacements are considered, and the remainder of the force\\-constants matrix is filled using symmetry operations. POTIM determines the step size. If too large values are supplied in the input file, the step size defaults to 0\\.015 \u00c5 (starting from VASP.5\\.1\\). Expertise shows that this is a very reasonable compromise. The NFREE tag determines how many displacements are used for each direction and ion: * NFREE\\=2 uses central differences, *i.e.*, each ion is displaced by a small positive and negative displacement, \u00b1POTIM, along each of the Cartesian directions.* NFREE\\=4 uses four displacements along each of the Cartesian directions \u00b1POTIM and \u00b12\u00d7POTIM.* NFREE\\=1 uses a single displacement (this is strongly discouraged). If ISIF\\>\\=3, the elastic and internal strain tensors are computed. The selective dynamics mode of the POSCAR file is presently only supported for IBRION\\=5; in this case, only those components of the Hessian matrix are calculated for which the selective dynamics tags are set to .TRUE. in the POSCAR file. | **Important:** The selective dynamics always refer to the Cartesian components of the Hessian matrix, contrary to the behavior during ionic relaxation. || --- |  For the following POSCAR file, for instance,  ```Cubic BN   3.57 0.0 0.5 0.5 0.5 0.0 0.5 0.5 0.5 0.0 1 1selectiveDirect 0.00 0.00 0.00  F F F 0.25 0.25 0.25  T F F  ``` atom 2 is displaced in the *x*\\-direction only, and only the *x*\\-component of the second atom of the Hessian matrix is calculated. If LEPSILON\\=.TRUE. or LCALCEPS\\=.TRUE., additional dielectric properties are computed. Output------ The phonon modes and frequencies are written to the OUTCAR file after the following lines:  ``` Eigenvectors and eigenvalues of the dynamical matrix ----------------------------------------------------  ``` The following lines are repeated for each normal mode and should look like the following example output:  ```   1 f  =   14.329944 THz    90.037693 2PiTHz  477.995462 cm-1    59.263905 meV             X         Y         Z           dx          dy          dz      0.000000  0.000000  0.000000     0.009046   -0.082007   -0.006117      0.000000  2.731250  2.731250     0.009046    0.106244    0.006563      0.000000  5.462500  5.462500     0.009046    0.082007    0.006117      0.000000  8.193750  8.193750     0.009046   -0.106244   -0.006563 ...   2 f  =   14.329944 THz    90.037693 2PiTHz  477.995462 cm-1    59.263905 meV             X         Y         Z           dx          dy          dz      0.000000  0.000000  0.000000     0.003458    0.021825   -0.093181      0.000000  2.731250  2.731250     0.003458    0.005416    0.094689      0.000000  5.462500  5.462500     0.003458   -0.021825    0.093181      0.000000  8.193750  8.193750     0.003458   -0.005416   -0.094689 ... ...  ``` The first number is the label of the normal mode. If this number is followed by *f* it is a purely real mode, stating the mode is vibrationally stable. Otherwise, if it is followed by *f/i*, the mode is an imaginary mode (\"soft mode\"). These labels are followed by the eigenfrequency of the mode in different units. The following table labeled by (*x,y,z,dx,dy,dz*) contains the Cartesian positions of the atoms and the normalized eigenvectors of the eigenmodes in Cartesian coordinates.  There should be 3  N {\\\\displaystyle N}  normal modes, where   N {\\\\displaystyle N}  is the number of atoms in the supercell (POSCAR). The modes are ordered in descending order with respect to the eigenfrequency. The last three modes are the translational modes (they are usually disregarded). Finally, IBRION\\=6 and ISIF\u22653 allows to calculate the elastic constants. The elastic tensor is determined by performing six finite distortions of the lattice and deriving the elastic constants from the strain\\-stress relationship.[\\[1]](#cite_note-lepage:prb:2002-1) The elastic tensor is calculated both, for 'clamped' ions, as well, as allowing for relaxation of the ions. The elastic moduli for rigid ions are written after the line  ```SYMMETRIZED ELASTIC MODULI (kBar)  ``` The ionic contributions are determined by inverting the ionic Hessian matrix and multiplying with the internal strain tensor,[\\[2]](#cite_note-wu:prb:2005-2) and the corresponding contributions are written after the lines:  ```ELASTIC MODULI CONTR FROM IONIC RELAXATION (kBar)  ``` The final elastic moduli, including both, the contributions for distortions with rigid ions and the contributions from the ionic relaxations, are summarized at the very end:  ```TOTAL ELASTIC MODULI (kBar)  ``` There are a few caveats to this approach: most notably, the plane\\-wave cutoff (ENCUT) needs to be sufficiently large to converge the stress tensor. This is usually only achieved if the default cutoff is increased by roughly 30%, but it is strongly recommended to increase the cutoff systematically, (e.g., in steps of 15%), until full convergence is achieved. Practical hints--------------- The computation of the second\\-order force constants requires accurate forces.Therefore, the tag PREC\\=Accurate is recommended in the INCAR.The ADDGRID\\=TRUE should **not** be set without careful testing. A practical way to check for convergence is to monitor the \u0393 point (**q**\\=0\\) optical mode frequencies while varying the ENCUT, PREC, and **k** point density (KPOINTS). Additionally, compare the result to phonons from density\\-functional\\-perturbation theory (DFPT). To get the phonon frequencies quickly on the command line, simply type the following:  ```grep THz OUTCAR  ``` To get an accurate phonon dispersion, perform the force\\-constants calculation in a large enough supercell.When increasing the size of the supercell, we recommend decreasing the **k**\\-point density in the KPOINTS file to yield the same resolution.For example, for the primitive cell of silicon, a 12x12x12 Gamma\\-centered **k**\\-point mesh is needed to obtain accurate phonon frequencies at the Gamma point. When replicating the unit cell to a 2x2x2 supercell, a 6x6x6 **k** point mesh will produce an equivalent sampling. For a 4x4x4 supercell, a 3x3x3 **k** point mesh will suffice. It is possible to use phonopy[\\[3]](#cite_note-phonopy-3) to post\\-process the results of a finite differences calculation done with VASP.[\\[4]](#cite_note-phonopy_dfpt-4) | **Tip:** In contrast to computing phonons within DFPT, the finite difference approach can be used in combination with any Exchange\\-correlation functional. || --- | IBRION\\=5, is available as of VASP.4\\.5, IBRION\\=6 starting from VASP.5\\.1\\.In some older versions (pre VASP.5\\.1\\), NSW (number of ionic steps) must be set to 1 in the INCAR file, since NSW\\=0 sets the IBRION\\=\u22121 regardless of the value supplied in the INCAR file.Although VASP.4\\.6 supports IBRION\\=5\\-6, VASP.4\\.6 does not change the set of **k** points automatically (often the displaced configurations require a different **k**\\-point grid). Hence, the finite difference routine might yield incorrect results in VASP.4\\.6\\. Related tags and sections------------------------- IBRION,ISIF,POTIM,Phonons: Theory,Phonons from density\\-functional\\-perturbation theory"}
{"file_name": "IPEAD.md", "content": "IPEAD= 1 \\| 2 \\| 3 \\| 4   Default: **IPEAD** \\= 4nDescription: IPEAD specifies the order of the finite difference stencil used to compute the derivative of the cell\\-periodic part of the orbitals w.r.t. **k**, \\|\u2207**k**un**k**\u27e9 (LPEAD\\=.TRUE.), and the derivative of the polarization w.r.t. the orbitals, \u03b4**P**/\u03b4\u27e8\u03c8n**k**\\| for (LCALCEPS\\=.TRUE., or EFIELD\\_PEAD\u2260**0**).  --- A central finite differences formula or order IPEAD is used to compute the first\\-order derivative of the cell\\-periodic part of the orbitals w.r.t. **k**.The coefficients for the different orders can be found here."}
{"file_name": "Vaspout.md", "content": "The vaspout.h5 file is a hierarchical HDF5 file containing the inputs and outputs of a VASP calculation. To analyze the data in this file we recommend using py4vasp. This file is only produced if your VASP version was compiled with HDF5 support. Contents of the file-------------------- At the highest level, the vaspout.h5 has the following HDF5 groups: 1. input \\- contains hierarchical versions of these files after parsing.2. original \\- contains a textual copy of the KPOINTS, INCAR, POSCAR and POTCAR files that were provided to start the calculation.3. intermediate \\- contains information from MD and ionic relaxation calculations, including the positions of the ions, forces, stresses, and total energies for each ionic step.4. results \\- contains the final quantities of the calculation like the density of states, electronic eigenvalues, linear\\-response functions, etc...5. version \\- keeps track of which version of VASP was used to produce this file. This is needed for compatibility reasons with older files. Related tags and sections------------------------- vaspin.h5, vaspwave.h5, OUTCAR"}
{"file_name": "Dielectric_properties_of_Si.md", "content": "Overview> dielectric properties of SiC> dielectric properties of Si > Ionic contributions to the frequency dependent dielectric function of NaCl > List of tutorials Task---- Calculation of the static and frequency dependent dielectric properties of Si.Please have a look at the example on calculation of the static and frequency dependent dielectric properties of SiC first.The same procedures apply to this example. Input----- ### POSCAR  ```system Si5.4300.5 0.5 0.00.0 0.5 0.50.5 0.0 0.5 2cart0.00 0.00 0.000.25 0.25 0.25  ``` ### INCAR * INCAR file for the static calculation:  ```## Static dielectric properties by means of DFPT#NBANDS = 4#EDIFF = 1E-6#LEPSILON = .TRUE.## try to add this to the DFPT calculation#LPEAD = .TRUE.## to get the ionic contributions to the## static dielectric properties from## perturbation theory#IBRION = 8 ## Static dielectric properties by means of PEAD#EDIFF = 1E-8      # finite field requires very tight convergence#LCALCEPS = .TRUE.#NELM = 100 ## Leave this inISMEAR = 0SIGMA = 0.01GGA = PE  ```   * INCAR for the frequency dependent calculation:  ```## Frequency dependent dielectric tensor without## local field effects#ALGO = Exact#NBANDS  = 64#LOPTICS = .TRUE.\u00a0; CSHIFT = 0.1#NEDOS = 2000## and you might try with the following#LPEAD = .TRUE. ## Frequency dependent dielectric tensor with and## without local field effects in RPA and due to## changes in the DFT xc-potential## N.B.: beware one first has to have done a## calculation with LOPTICS = .TRUE. (see above)#ALGO = CHI\u00a0; LSPECTRAL = .FALSE.#LRPA = .FALSE.## be sure to take the same number of bands as for## the LOPTICS = .TRUE. calculation, otherwise the## WAVEDER file is not read correctly# NBANDS = 64 ## Leave this inISMEAR = 0SIGMA = 0.01GGA = PE  ``` Calculation----------- Download--------  Si\\_dielectric.tgz Overview> dielectric properties of SiC> dielectric properties of Si > Ionic contributions to the frequency dependent dielectric function of NaCl > List of tutorials"}
{"file_name": "ISYM.md", "content": "ISYM= \\-1 \\| 0 \\| 1 \\| 2 \\| 3n| Default: **ISYM** | \\= 1 | if VASP runs with USPPs || --- | --- | --- ||  | \\= 3 | if LHFCALC\\=.TRUE. ||  | \\= 2 | else | Description: ISYM determines the way VASP treats symmetry.  --- ISYM\\=1 \\| 2 \\| 3, switches on the use of symmetry.For ISYM\\=\\-1 \\| 0, the use of symmetry is switched off. For ISYM\\=2 a more efficient, memory conserving symmetrization of the charge density is used (than for ISYM\\=1\\). This reduces memory requirements in particular for the parallel version. For ISYM\\=3, VASP does not directly symmetrize the charge density. Instead, the charge density is constructed by applying the relevant symmetry operations to the orbitals at the **k**\\-points in the irreducible part of the Brillouin zone. This method of symmetrization is used when LHFCALC\\=.TRUE. For ISYM\\=0, VASP does not use symmetry, but it will assume that \u03a8**k**\\=\u03a8\\***\\-k** and reduces the sampling of the Brillouin zone accordingly. This value should be set for molecular dynamics, i.e. IBRION\\=0\\.  For ISYM\\=\\-1 the use of symmetry is switched off completely. When the use of symmetry is switched on, VASP determines the point group symmetry and the space group consistent with the structure and initial velocities found on the POSCAR file (this is written out to the OUTCAR file for each NWRITE option), and the initial magnetic moments specified through the MAGMOM tag in the INCAR file. The SYMPREC\\-tag (VASP.4\\.4\\.4 and newer versions) determines by how much atomic positions may differ and still be judged to be equivalent by the symmetry detection algorithms. The default is 10\\-5, which is usually sufficiently large even if the POSCAR file has been generated with a single precision program. Increasing the SYMPREC tag means, that the positions in the POSCAR file can be less accurate. During the symmetry analysis, VASP determines * the Bravais lattice type of the supercell,* the point group symmetry and the space group of the supercell with basis (static and dynamic) \\- and prints the names of the group (space group: only 'family'),* the type of the generating elementary (primitive) cell if the supercell is a non\\-primitive cell,* all 'trivial non\\-trivial' translations (\\= trivial translations of the generating elementary cell within the supercell) \\-\\- needed for symmetrization of the charge,* the symmetry\\-irreducible set of k\\-points if automatic k\\-mesh generation was used and additionally the symmetry\\-irreducible set of tetrahedra if the tetrahedron method was chosen together with the automatic k\\-mesh generation and of course also the corresponding weights ('symmetry degeneracy'),* and tables marking and connecting symmetry equivalent ions. The symmetry analysis is done in four steps: * First the point group symmetry of the lattice (as supplied by the user) is determined.* Then tests are performed, on whether the basis breaks the symmetry. Accordingly, these symmetry operations are removed.* The initial velocities are checked for symmetry breaking.* Finally, it is checked whether MAGMOM breaks the symmetry. Correspondingly the magnetic symmetry group is determined. The program symmetrizes automatically: * The total charge density according to the determined space group* The forces on the ions according to the determined space group.* The stress tensor according to the determined space group Why is symmetrization necessary: Within LDA the symmetry of the supercell and the charge density is always the same. This symmetry is broken because a symmetry\\-irreducible set of **k** points is used for the calculation. To restore the correct charge density and the correct forces it is necessary to symmetrize these quantities. It must be stressed that VASP does not determine the symmetry elements of the primitive cell. If the supercell has a lower symmetry than the primitive cell only the lower symmetry of the supercell is used in the calculation. In this case, one should not expect that forces that should be zero according to symmetry will be precisely zero in actual calculations. The symmetry of the primitive cell is in fact broken in several places in VASP: * Local potential: In reciprocal space, the potential *V*(**G**) should be zero, if **G** is not a reciprocal lattice vector of the primitive cell. For PREC\\=Medium, this is not guaranteed due to \"aliasing\" or wrap around and the charge density (and therefore the Hartree potential) might violate this point. But even for PREC\\=High, small errors are introduced, because the exchange\\-correlation potential is calculated in real space.* **k**\\-points: In most cases, the automatic **k**\\-point grid does not have the symmetry of the primitive cell.  | **Tip:** If symmetry is switched on then NWRITE\\=3 writes out the symmetry operations to the OUTCAR file. || --- |"}
{"file_name": "Electron-phonon_interactions_from_Monte-Carlo_sampling.md", "content": "**Important**: This feature is only available from VASP6\\.0 or higher. First of all this method needs a sufficiently large super cell.It also involves phonon calculations for the   \u0393 {\\\\displaystyle \\\\Gamma }  point (see Phonons from finite differences). So many tags in the INCAR will be used from the phonon calculations. To enable electron\\-phonon interactions from MC methods PHON\\_LMC\\=*.TRUE.* has to be set in the INCAR file. Also IBRION\\=6 has to be selected (the Monte\\-Carlo (MC) method is currently only implemented for IBRION\\=6\\). The first implementation of electron\\-phonon interactions from MC sampling in VASP is found in Ref. [\\[1]](#cite_note-karsai:njp:2018-1). The original publication of the ZG configuration (one\\-shot method) is found in Ref. [\\[2]](#cite_note-zacharias:prb:2016-2).  Full MC sampling---------------- ### Input The tag PHON\\_NSTRUCT sets the number of structures generated due to the MC sampling. Convergence of the observable with respect to this number should be monitored. The tag TEBEG\\=0 is also needed to choose the temperature at which the sampling is run. Additionally the PHON\\_LBOSE can be set *.TRUE.* or *.FALSE.* (default PHON\\_LBOSE\\=*.TRUE.*), which selects Bose\\-Einstein or Maxwell\\-Boltzmann statistics, respectively.  A sample INCAR file for 0 K looks like the following:  ```System = DEFAULTPREC = AccurateISMEAR = 0; SIGMA = 0.1;IBRION = 6 PHON_LMC = .TRUE.PHON_NSTRUCT = 100TEBEG = 0.0  ``` ### Output The MC sampling code produces many POSCAR files with different distorted Wycoff positions but unchanged Brillouin matrix. The files are labeled as   ```POSCAR.TEBEG.NUMBER  ``` where the NUMBER runs from 1 to PHON\\_NSTRUCT. ZG configuration (one\\-shot sampling)------------------------------------- Alternatively to the full MC sampling, a one shot method, introduced by M. Zacharias and F. Giustino[\\[2]](#cite_note-zacharias:prb:2016-2) (named ZG configuration after the authors), is available. This method only uses a single distorted structure and hence it is orders of magnitude faster than the full MC sampling, while it retains an accuracy very close to the full MC sampling for converged super cell sizes. For example we showed that for the zero\\-point renormalization of the band gap the accuracy is within 5 meV between the ZG configurations and the full MC sampling[\\[1]](#cite_note-karsai:njp:2018-1). Hence we suggest to use this method preferably, where convergence of the super cell size is hard to achieve or the 5 meV accuracy is enough. ### Input To select the ZG configuration PHON\\_NSTRUCT\\=0 has to be set in the INCAR file.  The number of different temperatures and the list of temperatures (in K) have to be provided using the tags PHON\\_NTLIST and PHON\\_TLIST, respectively, in the INCAR file. An example would look like:  ```PHON_NTLIST = 4PHON_TLIST = 0.0 100.0 200.0 350.0  ``` This makes the simultaneous calculation of the ZG configuration at several temperatures possible.  An example INCAR file for a temperature range from 0\\-700 K (with step size of 100 K) is given as:  ```System\") = DEFAULTPREC = AccurateISMEAR = 0; SIGMA = 0.1;IBRION = 6PHON_NTLIST = 8PHON_TLIST = 0.0 100.0 200.0 300.0 400.0 500.0 600.0 700.0PHON_NSTRUCT = 0PHON_LMC = .TRUE.  ``` ### Output Similar to the MC sampling the ZG configuration method produces several POSCAR files with different distorted Wycoff positions but unchanged Brillouin matrix. The files are labeled as   ```POSCAR.TEMP  ``` where TEMP runs over all temperatures defined by PHON\\_TLIST."}
{"file_name": "PHON_BORN_CHARGES.md", "content": "PHON\\_BORN\\_CHARGES= \\[3x3xNIONS real]n| Default: **PHON\\_BORN\\_CHARGES** | \\= None |  || --- | --- | --- | Description: PHON\\_BORN\\_CHARGES sets the Born effective charges to be used for the dipole\\-dipole corrections in the computation of the phonon dispersion. This is only used when LPHON\\_POLAR\\=.TRUE.  --- If the material is non\\-metallic and polar (i.e. two or more atoms in the unit cell carry nonzero Born effective charge tensors), a special treatment of the long\\-range dipole\\-dipole interaction is required to obtain a smooth phonon dispersion.This is activated by setting LPHON\\_POLAR\\=.TRUE. and supplying the static dielectric tensor (PHON\\_DIELECTRIC) and the Born\\-effective charges (PHON\\_BORN\\_CHARGES) which can be obtained in a separate VASP calculation using the LEPSILON or LCALCEPS tag.The dipole\\-dipole part of the interatomic force\\-constants is evaluated using an Ewald summation with the number of   G {\\\\displaystyle \\\\mathbf {G} }  vectors determined by the cutoff length (PHON\\_G\\_CUTOFF). | **Mind:** Only available as of VASP 6\\.3\\.2\\. || --- |"}
{"file_name": "VDW_SCALING.md", "content": "VDW\\_S6= \\[real]nDescription: VDW\\_S6 defines the global scaling factor   s  6 {\\\\displaystyle s\\_{6}}  .  --- VDW\\_S6 sets the global scaling factor   s  6 {\\\\displaystyle s\\_{6}}  for the DFT\\-D2, DFT\\-D4, DFT\\-ulg, and Tkatchenko\\-Scheffler methods."}
{"file_name": "ENCUTFOCK.md", "content": "ENCUTFOCK= \\[real]nDefault: none Description: The ENCUTFOCK tag sets the energy cutoff that determines the FFT grids used by the Hartree\\-Fock routines.  --- The flag ENCUTFOCK is no longer supported in VASP.5\\.2\\.4 and newer versions.Please use PRECFOCK instead.   The only sensible value for ENCUTFOCK is ENCUTFOCK\\=0\\.This implies that the smallest possible FFT grid, which just encloses the cutoff spherecorresponding to the plane wave cutoff, is used. This accelerates the calculations by roughly a factor two to three,but causes slight changes in the total energies and some noise in the calculated forces.The FFT grid used internally in the exact exchange (Hartree\\-Fock) routinesis written to the OUTCAR file. Simply search for lines starting with  ```FFT grid for exact exchange (Hartree Fock)  ```   In many cases, a sensible approach is to determine the electronic and ionic groundstate using ENCUTFOCK\\=0, and to make one final total energy calculationwithout the flag ENCUTFOCK."}
{"file_name": "ML_XMIX.md", "content": "ML\\_CX= \\[real]   Default: **ML\\_CX** \\= 0\\.0nDescription: The parameter determines to which value the threshold (ML\\_CTIFOR) is updated within the machine learning force field methods.  --- The use of this tag in combination with the learning algorithms is described here: here. If ML\\_ICRITERIA\\>0, ML\\_CTIFOR is set to the average of the errors of the forces stored in a history. Note that ML\\_ICRITERIA\\=1 and ML\\_ICRITERIA\\=2, average over different data. In the first case the average is performed over errors after updates of the force fields, and in the second case over all recent error estimates (see ML\\_ICRITERIA). In both cases, if ML\\_CTIFOR is updated, it is set to  ML\\_CTIFOR \\= (average of the stored errors in the history) \\*(1\\.0 \\+ ML\\_CX). Obviously setting ML\\_CX to a positive value will result in fewer first principles calculations and fewer updates of the MLFF, whereas negative values result in more frequent first principles calculations (as well as updates of the MLFF). Typical values of ML\\_CX are between \\-0\\.2 and 0\\.0 for ML\\_ICRITERIA\\=1, and 0\\.0 and 0\\.3 for ML\\_ICRITERIA\\=2 (a good starting value is 0\\.2 for ML\\_ICRITERIA\\=2\\). For training runs using heating, the default usually results in very well balanced machine learned force fields. When the training is performed at a fixed temperature, it is often desirable to decrease to ML\\_CX\\=\\-0\\.1, in order to increase the number of first principle calculations and thus the size of the training set (the default can result in too few training data). The number of entries in the history are controlled by ML\\_MHIS for ML\\_ICRITERIA\\=1, and it is currently fixed to 400 for ML\\_ICRITERIA\\=2 (in future releases 50 x ML\\_MHIS)."}
{"file_name": "Pseudopotential.md", "content": "[](File_Sketch_Pseudopotentials.html \"Sketch of a pseudopotential and pseudowavefunction\") Sketch of a pseudopotential and pseudowavefunction **Pseudopotentials**, or effective potentials, are well\\-behaved potentials that replace the diverging ionic potentials. As a result, the pseudopotential approach significantly speeds up electronic structure calculations and makes the simulation of a wider range of materials feasible.  In a nutshell: * The pseudopotential and associated information required for a calculation must be present in a POTCAR file. * Simple instructions to set up a POTCAR file with the correct format: Preparing a POTCAR. * Recommendations on selecting potentials: Choosing pseudopotentials. * Overview of all versions and nomenclature: Available pseudopotentials Theory------ VASP employs the projector\\-augmented\\-wave (PAW) method that uses a plane\\-wave basis. A plane\\-wave basis is most convenient for periodic systems, however without the help of **pseudopotentials** the description of oscillations near the nuclei (nodal features) would necessitate an excessively high number of plane waves. The PAW method introduces a mixed basis where the Kohn\\-Sham (KS) orbitals are decomposed in three contributions: The pseudo orbitals, pseudo\\-onsite orbitals and all\\-electron onsite orbitals. The PAW potentials and resulting pseudo orbitals are identical to the true ionic potentials and KS orbitals outside a specific radius, as illustrated in the figure. These pseudo orbitals contain no nodal features and are, thus, given in a plane\\-wave basis. Inside the PAW spheres the nodal features are reintroduced on a radial logarithmic grid by subtracting the pseudo\\-onsite orbitals and adding the all\\-electron onsite orbitals. An additional approximation taken alongside the pseudopotential method is the *frozen\\-core approximation*. Here, the electrons associated with an ion are separated into valence electrons (ZVAL) that are assumed to take part in the physical/chemical property of interest and core electrons that are included as screening of the ionic potential. The separation into valence and core states depends on the property of interest and chemical bonds that occur for a specific material. For a specific atom type, VASP has a range of available pseudopotentials that vary in terms of core radius, the number of valence electrons, their ability to describe excited states, etc. The plane\\-wave coefficients of the pseudo orbitals are associated with reciprocal vectors   G {\\\\displaystyle \\\\mathbf {G} }  in Fourier space. The number of Fourier components determines the computational cost and can be controlled by the cutoff energy (ENCUT). The appropriate value depends on the pseudopotential and other factors. A potential is considered *soft* when few Fourier components are sufficient for an accurate representation, and *hard* otherwise. It is advised to perform a convergence study on ENCUT with respect to the quantity of interest. Subcategories------------- This category has the following 2 subcategories, out of 2 total. ### P * POTCAR tag* Projector\\-augmented\\-wave method Pages in category \"Pseudopotentials\"------------------------------------ The following 4 pages are in this category, out of 4 total. ### A * Available pseudopotentials### C * Choosing pseudopotentials### P * POTCAR* Preparing a POTCAR"}
{"file_name": "ML_LHEAT.md", "content": "ML\\_LHEAT= \\[logical]   Default: **ML\\_LHEAT** \\= .FALSE.nDescription: This tag specifies whether the heat flux is calculated or not in the machine learning force field method.  --- The heat flux within machine learning force fields is decomposed into atomic contributions written as  q  ( t ) \\=  \u2211  i \\= 1  N  a  d  d t  (  r  i  E  i  )  , {\\\\displaystyle \\\\mathbf {q} (t)\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}{\\\\frac {d}{dt}}\\\\left(\\\\mathbf {r} \\_{i}E\\_{i}\\\\right),}  E  i  \\=  m  i  \\|  v  i  \\|  2  2  \\+  U  i {\\\\displaystyle E\\_{i}\\={\\\\frac {m\\_{i}\\\\left\\|\\\\mathbf {v} \\_{i}\\\\right\\|^{2}}{2}}\\+U\\_{i}} where   r  i {\\\\displaystyle \\\\mathbf {r} \\_{i}}  ,  v  i {\\\\displaystyle \\\\mathbf {v} \\_{i}}  and  E  i {\\\\displaystyle E\\_{i}}  denote the position vector, velocity and energy of atom   i {\\\\displaystyle i} , respectively. The number of atoms in the system is denoted by   N  a {\\\\displaystyle N\\_{a}} . The heat flux can be further rewritten as  q  ( t ) \\=  \u2211  i \\= 1  N  a  v  i  E  i  \\+  \u2211  i \\= 1  N  a  r  i  (  m  i  v  i  \u22c5  d  v  i  d t  \\+  \u2211  j \\= 1  N  a  v  j  \u22c5  \u2207  j  U  i  )  . {\\\\displaystyle \\\\mathbf {q} (t)\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\mathbf {v} \\_{i}E\\_{i}\\+\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\mathbf {r} \\_{i}\\\\left(m\\_{i}\\\\mathbf {v} \\_{i}\\\\cdot {\\\\frac {d\\\\mathbf {v} \\_{i}}{dt}}\\+\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\mathbf {v} \\_{j}\\\\cdot \\\abla \\_{j}U\\_{i}\\\\right).} Using the equation of motions  m  i  d  v  i  d t  \\= \u2212  \u2211  j \\= 1  N  a  \u2207  i  U  j {\\\\displaystyle m\\_{i}{\\\\frac {d\\\\mathbf {v} \\_{i}}{dt}}\\=\\-\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\abla \\_{i}U\\_{j}} the heat flux can be simplified to  q  ( t ) \\=  \u2211  i \\= 1  N  a  v  i  E  i  \u2212  \u2211  i \\= 1  N  a  \u2211  j \\= 1  N  a  r  i  (  v  i  \u22c5  \u2207  i  U  j  )  \\+  \u2211  i \\= 1  N  a  \u2211  j \\= 1  N  a  r  i  (  v  j  \u22c5  \u2207  j  U  i  )  \\=  \u2211  i \\= 1  N  a  v  i  E  i  \\+  \u2211  i \\= 1  N  a  \u2211  j \\= 1  N  a  (  r  i  \u2212  r  j  )  (  v  j  \u22c5  \u2207  j  U  i  )  . {\\\\displaystyle \\\\mathbf {q} (t)\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\mathbf {v} \\_{i}E\\_{i}\\-\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\mathbf {r} \\_{i}\\\\left(\\\\mathbf {v} \\_{i}\\\\cdot \\\abla \\_{i}U\\_{j}\\\\right)\\+\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\mathbf {r} \\_{i}\\\\left(\\\\mathbf {v} \\_{j}\\\\cdot \\\abla \\_{j}U\\_{i}\\\\right)\\=\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\mathbf {v} \\_{i}E\\_{i}\\+\\\\sum \\\\limits \\_{i\\=1}^{N\\_{a}}\\\\sum \\\\limits \\_{j\\=1}^{N\\_{a}}\\\\left(\\\\mathbf {r} \\_{i}\\-\\\\mathbf {r} \\_{j}\\\\right)\\\\left(\\\\mathbf {v} \\_{j}\\\\cdot \\\abla \\_{j}U\\_{i}\\\\right).} Finally (in a post\\-processing step), the thermal conductivity at temperature   T {\\\\displaystyle T}  in the Green\\-Kubo formalism can be calculated from the correlation of the heat flux   q {\\\\displaystyle \\\\mathbf {q} }  as  \u03ba \\=  1  3 V  k  b  T  2  \u222b  0  \u221e  \u27e8  q  ( t ) \u22c5  q  ( 0 ) \u27e9 d t , {\\\\displaystyle \\\\kappa \\={\\\\frac {1}{3Vk\\_{b}T^{2}}}\\\\int \\\\limits \\_{0}^{\\\\infty }\\\\langle \\\\mathbf {q} (t)\\\\cdot \\\\mathbf {q} (0\\)\\\\rangle dt,}   where   V {\\\\displaystyle V}  and  k  b {\\\\displaystyle k\\_{b}}  denotes the volume of the system and the Boltzmann constant, respectively.   The heat flux is written to the file ML\\_HEAT."}
{"file_name": "Fcc_Si_bandstructure.md", "content": "Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials Task---- Computation of the bandstructure in fcc Si along L\\-\u0393\\-X\\-U and K\\-\u0393. Input----- ### POSCAR  ```fcc Si: 3.9 0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.0 0.5 1cartesian0 0 0  ``` ### INCAR  ```System\") = fcc Si ICHARG = 11 #charge read fileENCUT  =    240ISMEAR = 0; SIGMA = 0.1;LORBIT = 11  ``` ### KPOINTS  ```k-points for bandstructure L-G-X-U K-G 10linereciprocal  0.50000  0.50000  0.50000    1  0.00000  0.00000  0.00000    1   0.00000  0.00000  0.00000    1  0.00000  0.50000  0.50000    1   0.00000  0.50000  0.50000    1  0.25000  0.62500  0.62500    1   0.37500  0.7500   0.37500    1  0.00000  0.00000  0.00000    1  ``` * k points along the line   L \u2212 \u0393 \u2212 X \u2212 U K \u2212 \u0393 {\\\\displaystyle L\\-\\\\Gamma \\-X\\-UK\\-\\\\Gamma }  .* 10 points per line.* Keyword *line* to generate bandstructure.* In reciprocal coordinates.* All points with weight 1\\.* Example bandstructure should look like this: [](File_Fig_Si_5.html) ### CHGCAR This calculation needs a converged charge density as input (ICHARG\\=11\\).You may use the CHGCAR file of the fcc Si DOS example. CALCULATION----------- * To copy the self\\-consistent charge density of example fccSidos to your current working directory, type:  ```cp ../fccSidos/CHGCAR .  ``` * You must do this otherwise VASP can not read the CHGCAR and will terminate. * To plot the bandstructure use p4vasp: [](File_Fig_Si_6.html) **Mind**: For this calculations you need the CHGCAR file of the fcc Si DOS example. Download--------  fccSiband.tgz Overview> fcc Si> fcc Si DOS> fcc Si bandstructure> cd Si> cd Si volume relaxation> cd Si relaxation> beta\\-tin Si> fcc Ni> graphite TS binding energy> graphite MBD binding energy > graphite interlayer distance > List of tutorials"}
{"file_name": "Liquid_Si_-_Freezing.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example, the goal is to simulate the freezing of liquid Si. Input----- ### POSCAR  ``` Si15.12409564534287297131     0.5000000000000000    0.5000000000000000    0.0000000000000000     0.0000000000000000    0.5000000000000000    0.5000000000000000     0.5000000000000000    0.0000000000000000    0.5000000000000000 48Direct  0.8550657259653851  0.3204575801875221  0.6180363868822553  0.6045454476433229  0.0546379652195404  0.1629680405553871  0.4803889256776521  0.2999635319377835  0.0131251454718051  0.8413504226620471  0.7598095803296524  0.1917781560970181  0.9754163118144437  0.6134171268457649  0.7421364242876367  0.2668229391055025  0.0066502741664650  0.0031140604380929  0.8935777664000575  0.3324172908647429  0.9535738516718881  0.0527608886321274  0.5249316429131962  0.5293744880144071  0.4396089233132741  0.7564833235979471  0.5665855438788387  0.5907859878830199  0.5198033580597228  0.3581725847640679  0.2120832721474721  0.4042899613004446  0.7921535013319151  0.0225803885096466  0.8414911198321031  0.1209255489569852  0.0992500701525566  0.3917384466892963  0.3612433325214984  0.9673794138223195  0.5206425706394114  0.1719623236201897  0.2774602656926126  0.8480860088162007  0.2673309412777037  0.0196991774214161  0.8282178425383616  0.6986213756952502  0.3570927152895376  0.2951488295546784  0.2651851032568589  0.1663829731894614  0.9766237917413699  0.6051764245375237  0.4931841331696695  0.8689890620771937  0.2612357008392290  0.8006473407426477  0.1033419073227807  0.4706563716777467  0.0161340851939779  0.9953827418297991  0.8853439845676159  0.7827740166661069  0.1821830067208054  0.9399555168314748  0.0720651739141343  0.2539424963694544  0.6857919074323433  0.4443385370769313  0.0486404637002326  0.4180706114402839  0.7055263679666055  0.6802623819082319  0.7983614866719116  0.2237125282521105  0.4055474352416297  0.0077044950891134  0.2963682069847125  0.5771265542042112  0.2019757061665083  0.2782449529809642  0.0451513130915826  0.7644934848784113  0.9312079203181675  0.9090938018377080  0.3429249881187518  0.6341882597200124  0.2969253226419481  0.3227590981305088  0.3587691103780569  0.1061057273904179  0.0931868777500710  0.8710437838676732  0.6541301230631744  0.4261617089364881  0.6784300588817769  0.3263889355408940  0.5560491395978739  0.5597052314845080  0.0174390112509929  0.6129003207931863  0.0595962318875451  0.1019295953521402  0.3340999072062676  0.7689671766774326  0.1768870209149794  0.1604177484299765  0.9603661624482890  0.3311649224573259  0.1439224909303592  0.3792868784787023  0.2806150985211180  0.4921541531665999  0.8079860889823454  0.9194188799048340  0.9131036494263627  0.3002081239026374  0.7834053620019006  0.8650323716139056  0.4704528574512951  0.7221628305989689  0.9746107190983403  0.2886552568292480  0.5927625600330780  0.4239421203107919  0.4116743942942291  0.2198943758058664  0.7072597030225044  0.2104494234814825  0.6457654201409418  0.8275863924787099  0.6784628197745537  0.7205455185203838  0.1093053357228383  0.6344130299021448  0.1650970001101275  0.8037018707797643  0.3965793440603315  0.5364088146415013  0.6064549771969059  0.6686412136025504  0.7848666926903073  0.5681234351534038  ``` ### INCAR  ```SYSTEM =  Si# electronic degrees                                                            LREAL = A                      # real space projectionPREC  = Normal                 # chose Low only after testsEDIFF = 1E-5                   # do not use default (too large drift)ISMEAR = -1\u00a0; SIGMA = 0.130    # Fermi smearing: 1500 K 0.086 10-3ALGO = Very Fast               # recommended for MD (fall back ALGO = Fast)MAXMIX = 40                    # reuse mixer from one MD step to nextISYM = 0                       # no symmetry                                    NELMIN = 4                     # minimum 4 steps per time step, avoid breaking after 2 steps# MD (do little writing to save disc space)IBRION = 0                     # main molecular dynamics tagNSW = 400                      # number of MD stepsPOTIM = 3                      # time step of MDNWRITE = 0                     # controls outputNBLOCK = 10                    # after ten steps pair correlation function is written outLCHARG = .FALSE.               # no charge density written outLWAVE = .FALSE.                # no wave function coefficients written outTEBEG = $i                     # starting temperature for MDTEEND = $i                     # end temperature for MD# canonic (Nose) MD with XDATCAR updated every 10 stepsMDALGO = 2                     \u00e4 switch to select thermostatSMASS =  3                     # Nose massISIF = 2                       # this tag selects the ensemble in combination with the thermostat  ``` * Most of the tags here are very similar to the tags used in the previous example (Liquid Si \\- Standard MD).* A stepwise cooling will be applied in this example via a script where $i for TEBEG and TEEND will be replaced in each calculation (see below). ### KPOINTS  ```Si-freezing0 0 0Gamma 1 1 1 0 0 0  ``` * A single k\\-point is sufficient in this example. Calculation----------- We will execute the cooling stepwise so several calculations at different temperatures are required in this calculation. The INCAR is created with a script for each temperature and run separately. After each step the important files are saved to file.$i, where $i are the temperatures ranging from 2000 to 800 K in steps of 100 K. The script running the calculations looks like the following:   ```for i in 2000 1900 1800 1700 1600 1500 1400 1300 1200 1100 1000 900 800 docat >INCAR <<!SYSTEM =  Si# electronic degrees                                                            LREAL = A                      # real space projectionPREC  = Normal                 # chose Low only after testsEDIFF = 1E-5                   # do not use default (too large drift)ISMEAR = -1\u00a0; SIGMA = 0.130    # Fermi smearing: 1500 K 0.086 10-3ALGO = Very Fast               # recommended for MD (fall back ALGO = Fast)MAXMIX = 40                    # reuse mixer from one MD step to nextISYM = 0                       # no symmetry                                    NELMIN = 4                     # minimum 4 steps per time step, avoid breaking after 2 steps# MD (do little writing to save disc space)IBRION = 0                     # main molecular dynamics tagNSW = 400                      # number of MD stepsPOTIM = 3                      # time step of MDNWRITE = 0                     # controls outputNBLOCK = 10                    # after ten steps pair correlation function is written outLCHARG = .FALSE.               # no charge density written outLWAVE = .FALSE.                # no wave function coefficients written outTEBEG = $i                     # starting temperature for MDTEEND = $i                     # end temperature for MD# canonic (Nose) MD with XDATCAR updated every 10 stepsMDALGO = 2                     \u00e4 switch to select thermostatSMASS =  3                     # Nose massISIF = 2                       # this tag selects the ensemble in combination with the thermostat !mpirun -np 2 /path/to/your/vasp/executablecp XDATCAR XDATCAR.$icp OUTCAR OUTCAR.$icp PCDAT PCDAT.$icp CONTCAR CONTCAR.$icp POSCAR POSCAR.$icp OSZICAR OSZICAR.$icp CONTCAR POSCARdone  ``` * Before running the script one has to replace \"'/path/to/your/vasp/executable'\" by the path to his \"'vasp\\_gam'\" executable. The script is then simply starte by typing the following command in the command line:  ```bash ./script  ``` ### Diffusion The diffusion coefficient in 3 dimensions is given as  D \\=  \u27e8  x  2  \u27e9  6 t {\\\\displaystyle D\\={\\\\frac {\\\\langle x^{2}\\\\rangle }{6t}}} where t defines time and   \u27e8  x  2  \u27e9 {\\\\displaystyle \\\\langle x^{2}\\\\rangle } . The 6 in the denominator contains a factor of 3 accounting for the 3 spatial dimensions (usually the diffusion coefficient is written with a 2 in the denominator in literature corresponding to only one dimension). In our case, we calculate the above equation as follows  D \\=  \u27e8  \u2211  i  N  \\[  x  i  ( t ) \u2212  x  i  ( 0 )  ]  2  \u27e9  6 \u0394 t {\\\\displaystyle D\\={\\\\frac {\\\\langle \\\\sum \\_{i}^{N}\\[x\\_{i}(t)\\-x\\_{i}(0\\)]^{2}\\\\rangle }{6\\\\Delta t}}}  . Here the diffusion coefficient is calculated over an ensemble average to get better statistics. Our calculations were carried out for 1200 fs for each temperature. We will average in our case over the last 900 fs regarding the first 300 fs as equilibration of each temperature. The following python script (*diffusion\\_coefficient.py*) calculates the diffusion coefficient at a given temperature:  **Click to show/*diffusion\\_coefficient.py***  ```#!/usr/bin/python import sysimport reimport math #setting grid for histogram potim = 3                               #timestep from INCAR filereadfile = open(sys.argv[1],\"r\")        #input XDATCAR file in format XDATCAR.TEMPtemp=re.sub(\"XDATCAR.\",,sys.argv[1])  #extracts temperature from input file namez=0                                     #counternatoms=0                                #number of atoms in XDATCAR fileposion = []                             #atom positions in Cartesian coordinatesconfcount = 0                           #number of structures in XDATCAR filedirect=[]                               #number of time steps for each structure in XDATCAR filea=[]                                    #lattice parameter in 1st dimensionb=[]                                    #lattice parameter in 2nd dimensionc=[]                                    #lattice parameter in 3rd dimension#read in XDATCAR fileline=readfile.readline()while (line):  z=z+1  line.strip()  line=re.sub('^',' ',line)  y=line.split()  if (z==2):     scale=float(y[0])  if (z==3):     a.append(float(y[0]))     a.append(float(y[1]))     a.append(float(y[2]))     a_len=(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])**0.5  if (z==4):     b.append(float(y[0]))     b.append(float(y[1]))     b.append(float(y[2]))     b_len=(b[0]*b[0]+b[1]*b[1]+b[2]*b[2])**0.5  if (z==5):     c.append(float(y[0]))     c.append(float(y[1]))     c.append(float(y[2]))     c_len=(c[0]*c[0]+c[1]*c[1]+c[2]*c[2])**0.5  if (z==7):     natoms=int(y[0])  if (y[0]==\"Direct\"):     direct.append(int(y[2]))     posion.append([])     for i in range(0,natoms):        line=readfile.readline()        line.strip()        line=re.sub('^',' ',line)        f=line.split()        cartpos_x=a[0]*float(f[0])+a[1]*float(f[1])+a[2]*float(f[2])        cartpos_y=b[0]*float(f[0])+b[1]*float(f[1])+b[2]*float(f[2])        cartpos_z=c[0]*float(f[0])+c[1]*float(f[1])+c[2]*float(f[2])        #positions of ions for each structure are obtained here        posion[confcount].append([cartpos_x,cartpos_y,cartpos_z])     confcount=confcount+1  line=readfile.readline()readfile.close #calculate diffusion coefficient#skip first 10 configurations corresponding to 300 fsd=0.0for i in range(10,confcount):   for j in range(0,natoms):      x_diff=posion[i][j][0]-posion[0][j][0]      #if length is larger than 0.5 (in crystallographic coordinates) then we have to shift atom      #due to periodic image to obtain the shortest distance.      if (abs(x_diff)>(0.5*a_len)):         if (x_diff<0):            x_diff=x_diff+a_len         elif (x_diff>0):            x_diff=x_diff-a_len      y_diff=posion[i][j][1]-posion[0][j][1]      if (abs(y_diff)>(0.5*b_len)):         if (y_diff<0):            y_diff=y_diff+b_len         elif (y_diff>0):            y_diff=y_diff-b_len      z_diff=posion[i][j][2]-posion[0][j][2]      if (abs(z_diff)>(0.5*c_len)):         if (z_diff<0):            z_diff=z_diff+c_len         elif (x_diff>0):            z_diff=z_diff-c_len      d=d+x_diff**2.0+y_diff**2.0+z_diff**2.0  #print diffusion coefficient (in Ang^2/ps) vs temperature (in K)d=d/(confcount-1-10)/natoms/6.0time=(direct[confcount-1]-direct[10])*potim/10**3.0 #conversion to psprint temp,d/time  ```   Since the atoms can move such that the distance between old and new positions becomes larger than 0\\.5 (in crystallographic or fractional coordinates). Let us take for example the movement of atom 0 in the   x {\\\\displaystyle x}  direction from 0 to \\-0\\.25, which would be output in the CONTCAR as 0\\.75\\. The distance corresponding to that would be then calculated as 0\\.75 which is wrong since we have periodic images and the real shortest distance would be 0\\.25\\. Hence all distances larger than 0\\.5 have to be shifted by \\-1\\.0\\. This is taken care of in the script. We will use a short bash script (*dscript.sh*) to calculate the diffusion coefficient at different temperatures and plot them in a file (diff\\_coeff.jpg):   ```#!/bin/bash if test -f \"diff_coeff.dat\"; then   rm diff_coeff.dat fi touch diff_coeff.dat for i in 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000; do   diffusion_coefficient.py XDATCAR.$i >>  diff_coeff.datdone gnuplot -e \"set terminal jpeg; set key left; set xlabel 'temperature (K)'; set ylabel 'D (Ang^2/ps)'; set style data lines; plot 'diff_coeff.dat' \" > diff_coeff.jpg  ```   To execute it just type the following command:  ```bash ./dscript.sh  ``` The data for the diffusion coefficient at each temperature is output to *diff\\_coeff.dat* and plotted in *diff\\_coeff.jpg* which should look like the following: [](File_Diff_coeff.html) **Exercise**: Interpret Fig. 1 yourself! **Click to show/Solution****Solution**:For a given phase the diffusion coefficient depends directly on the temperature by  D \\= \u03bc  k  B  T {\\\\displaystyle D\\=\\\\mu k\\_{B}T} where   k  B {\\\\displaystyle k\\_{B}}  is the Boltzmann constant and   \u03bc {\\\\displaystyle \\\\mu }  is the mobility of the particle. Evidently, this relation is approximately fulfilled in Fig. 1\\. At approximately 1400 K we see a peak. This temperature should correspond to the phase transition temperature. Close to the phase transition point the scaling with respect to the reduced temperature   T  r e d {\\\\displaystyle T\\_{\\\\mathrm {red} }}  becomes   \u27e8  x  2  \u27e9 \u221d  T  r e d  1 \u2212 \u03b1  ,  T  r e d  \\=  T \u2212  T  c  T  c {\\\\displaystyle \\\\langle x^{2}\\\\rangle \\\\propto T\\_{\\\\mathrm {red} }^{1\\-\\\\alpha },\\\\qquad \\\\qquad \\\\qquad T\\_{\\\\mathrm {red} }\\={\\\\frac {T\\-T\\_{c}}{T\\_{c}}}} where   \u03b1 {\\\\displaystyle \\\\alpha }  is an anomalous dimension (it may be positive or negative) and   T  c {\\\\displaystyle T\\_{c}}  is the critical temperature. For infinite large systems and infinite time, this would lead to a singularity in the plot, but since we are dealing with a finite\\-sized system it results in a finite peak at the phase transition point. ### Pair correlation function The pair\\-correlation function provides information about the probability of finding two atoms at a given distance   r {\\\\displaystyle r}  .The pair\\-correlation function is save for each temperature under *PCDAT.T*. The following script will plot the pair correlation functions at different temperatures in one figure:  ```#!/bin/bash for i in 800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000; do   awk <PCDAT.$i >pair.$i ' NR==8 {pcskal=$1} NR==9 {pcfein=$1} NR>=10036 {line=line+1; print (line-0.5)*pcfein/pcskal,$1} 'done gnuplot -e \"set terminal jpeg; set key left; set xlabel 'r (Ang)'; set ylabel 'PCF'; set style data lines; plot 'pair.2000','pair.1400','pair.800' \" > pair.jpg  ``` To execute it type the following command:  ```bash ./pair.sh  ``` The plot should look like the following: [](File_Pair_liquid_Si_freezing.html) **Exercise:** Interpret the figure yourself! **Click to show/Solution****Solution**:Crystalline structures usually have less diffuse pair correlation functions since the atoms are usually vibrating around high symmetry points. In liquids, the average positions are smeared out over a wider range of distances. With decreasing temperature, the pair correlation function in the plot gets more structured. This indicates that crystallization is happening.   Download--------  Si\\_Liquid\\_Freezing.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "OFIELD_Q6_NEAR.md", "content": "OFIELD\\_Q6\\_NEAR= \\[real]nDescription: OFIELD\\_Q6\\_NEAR sets the near\\-fading distance (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for the computation of a continuous   Q  6 {\\\\displaystyle Q\\_{6}}  parameter in the interface\\-pinning method.   ---"}
{"file_name": "LVDWSCS.md", "content": "LVDWSCS= .TRUE. \\| .FALSE.   Default: **LVDWSCS** \\= .FALSE.nDescription: LVDWSCS\u00a0 activates the self\\-consistent screening in Tkatchenko\\-Scheffler method.  ---"}
{"file_name": "Phonons_from_density-functional-perturbation_theory.md", "content": "The phonon calculations using density\\-functional\\-perturbation theory (DFPT) are carried out by setting **IBRION**\\=7 or 8 in the INCAR file. | **Mind:** Only zone\\-center (\u0393\\-point) frequencies are calculated. || --- | In general, the DFPT routines in VASP are somewhat rudimentary and only support displacements commensurate with the supercell, i.e., so\\-called q\\=0 phonons.Therefore, this approach offers few advantages over computing phonons from finite differences.In particular, the DFPT routines are limited to LDA and GGA functionals, and they do not determine the elastic tensors, since the perturbation with respect to the strain tensor is not implemented.The only advantage of the linear response routines is that they eliminate the need to choose the magnitude of the finite displacement POTIM.Therefore, it might be helpful to first calculate phonon frequencies within DFPT and then switch to the finite differences approach in order to determine the largest displacement that will produce results compatible with the linear response routines. A few technical comments: VASP solves the linear Sternheimer equation to determine the linear response of the orbitals. Hence, unoccupied orbitals are not required. Internally, the VASP routines for linear response rely on finite differences in two places: 1. The first place is the determination of the second derivative of the exchange\\-correlation functional: Since most functionals do not support an algebraic determination of second derivatives, VASP always resorts to finite differences to determine the second\\-order change of the exchange correlation\\-potential and the PAW one\\-center terms for each atomic displacement.2. Second, after VASP has determined the first\\-order change of the orbitals, it computes all second derivatives using finite displacements. To this end, VASP displaces the selected atom in the selected directions adds the calculated linear response to the orbitals, and finally determines the differences in the forces and the stress tensor for positive and negative displacements.It can be shown that this yields precisely the second\\-order force constants and the internal strain tensor, respectively. Input----- To use DFPT, set the tag **IBRION**\\=7 or 8 in the INCAR file.There are two options for using the DFPT routines to compute the second\\-order force\\-constants * IBRION\\=7, all the atoms are displaced in all three Cartesian directions,* IBRION\\=8, uses symmetry to reduce the number of displacements. If LEPSILON\\=.TRUE. or LCALCEPS\\=.TRUE., additional dielectric properties are computed.  Output------ The second derivates of the total energy with respect to ionic displacements (interatomic force constants) are computed,the dynamical matrix is constructed, diagonalized and the phonon modes and frequencies of the system are reported after the following lines:  ``` Eigenvectors and eigenvalues of the dynamical matrix ----------------------------------------------------  ``` The mixed second derivative with respect to the strain and the ionic displacement (internal strain tensor) are evaluated and reported.Although the contributions from the ionic relaxations to the elastic tensor are calculated, the ion\\-clamped elastic tensor (rigid ion) is not determined because the perturbation with respect to the strain tensor is not implemented. Furthermore, the Born effective charges are determined analytically by contracting the linear response of the orbitals over the \"polarization\" vector Eq. (30\\) in Ref. [\\[1]](#cite_note-gajdos:prb:2006-1).These should agree well with the Born effective charges that were previously determined when the linear response with respect to external fields LEPSILON\\=.TRUE. was calculated (there are two different routes to calculate mixed derivatives).The final summary output towards the end of the OUTCAR file writes the Born effective charges determined from the linear response with respect to external fields. It is possible to obtain the phonon dispersion at different **q** points\") by computing the force constants on a sufficiently large supercell and Fourier interpolating the dynamical matrices in the primitive cell. It is also possible to use phonopy[\\[2]](#cite_note-phonopy-2) to use the results of a density\\-functional\\-perturbation theory calculation done with VASP.[\\[3]](#cite_note-phonopy_dfpt-3) | **Mind:** IBRION\\=7 or 8 are supported by VASP.5\\.1 and later versions. || --- | Related tags and sections------------------------- IBRION,LEPSILON,Phonons: Theory,Phonons from finite differences"}
{"file_name": "Hybrid_functionals__formalism.md", "content": "The hybrid functionals can be categorized into two types: unscreened and range\\-separated (i.e., screened), as described in more details below. Note that the hybrid functionals are implemented within the generalized KS scheme[\\[1]](#cite_note-seidl:prb:96-1). Thus, the total energy is minimized with respect to the orbitals (instead of the electron density), which means that the HF exchange leads to a nonlocal operator as in the Hartree\\-Fock\\-Roothaan theory. ### Unscreened hybrid functionals In hybrid exchange\\-correlation functionals, the exchange component consists of a mixing of GGA (or meta\\-GGA) and Hartree\\-Fock exchange:  E  x c  h y b r i d  \\= \u03b1  E  x  H F  \\+ ( 1 \u2212 \u03b1 )  E  x  G G A  \\+  E  c  G G A  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {hybrid} }\\=\\\\alpha E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+(1\\-\\\\alpha )E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA} }\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} },} where   \u03b1 {\\\\displaystyle \\\\alpha }  is the mixing parameter (AEXX) that is typically in the range 0\\.1\\-0\\.5\\. Two examples of hybrid functionals, PBE0 and B3LYP, are given below. * PBE0:[\\[2]](#cite_note-perdew:jcp:1996-2)  E  x c  P B E 0  \\=  1 4  E  x  H F  \\+  3 4  E  x  P B E  \\+  E  c  P B E  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {PBE0} }\\={\\\\frac {1}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+{\\\\frac {3}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE} }\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {PBE} },} where   E  x  P B E {\\\\displaystyle E\\_{x}^{\\\\rm {PBE}}}  and  E  c  P B E {\\\\displaystyle E\\_{c}^{\\\\rm {PBE}}}  denote the exchange and correlation parts of the PBE density functional, respectively.* B3LYP[\\[3]](#cite_note-stephens:jpc:1994-3), well known and popular amongst quantum chemists:  E  x  B 3 L Y P  \\=0\\.8  E  x  L D A  \\+0\\.2  E  x  H F  \\+0\\.72 \u0394  E  x  B 88  ,  E  c  B 3 L Y P  \\=0\\.19  E  c  V W N 3  \\+0\\.81  E  c  L Y P  , {\\\\displaystyle {\\\\begin{aligned}E\\_{\\\\mathrm {x} }^{\\\\mathrm {B3LYP} }\\&\\=0\\.8E\\_{\\\\mathrm {x} }^{\\\\mathrm {LDA} }\\+0\\.2E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\+0\\.72\\\\Delta E\\_{\\\\mathrm {x} }^{\\\\mathrm {B88} },\\\\\\\\E\\_{\\\\mathrm {c} }^{\\\\mathrm {B3LYP} }\\&\\=0\\.19E\\_{\\\\mathrm {c} }^{\\\\mathrm {VWN3} }\\+0\\.81E\\_{\\\\mathrm {c} }^{\\\\mathrm {LYP} },\\\\end{aligned}}} where   E  x  B 3 L Y P {\\\\displaystyle E\\_{x}^{\\\\rm {B3LYP}}}  and  E  c  B 3 L Y P {\\\\displaystyle E\\_{c}^{\\\\rm {B3LYP}}}  are the B3LYP exchange and correlation energy contributions, respectively.   E  x  B 3 L Y P {\\\\displaystyle E\\_{x}^{\\\\rm {B3LYP}}}  consists of 80% of LDA exchange plus 20% of nonlocal Hartree\\-Fock exchange, and 72% of the gradient corrections of the Becke88 exchange functional.   E  c  B 3 L Y P {\\\\displaystyle E\\_{c}^{\\\\rm {B3LYP}}}  consists of 81% of LYP correlation energy, which contains a local and a semilocal (gradient dependent) part, and 19% of the (local) Vosko\\-Wilk\\-Nusair correlation functional III, which is fitted to the correlation energy in the random phase approximation RPA of the homogeneous electron gas.The nonlocal Hartree\\-Fock exchange energy,   E  x {\\\\displaystyle E\\_{x}} , can be written as  E  x  H F  \\= \u2212  e  2  2  \u2211  n  k  , m  q  f  n  k  f  m  q  \u00d7 \u222b \u222b  d  3  r  d  3  r  \u2032  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  n  k  (  r  \u2032  )  \u03c8  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{n\\\\mathbf {k} ,m\\\\mathbf {q} }f\\_{n\\\\mathbf {k} }f\\_{m\\\\mathbf {q} }\\\\times \\\\int \\\\int d^{3}\\\\mathbf {r} d^{3}\\\\mathbf {r} '{\\\\frac {\\\\psi \\_{n\\\\mathbf {k} }^{\\*}(\\\\mathbf {r} )\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}} with   {  \u03c8  n  k  (  r  ) } {\\\\displaystyle \\\\{\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} )\\\\}}  being the set of one\\-electron Bloch states of the system, and   {  f  n  k  } {\\\\displaystyle \\\\{f\\_{n\\\\mathbf {k} }\\\\}}  the correspondingset of (possibly fractional) occupational numbers.The sums over   k {\\\\displaystyle {\\\\bf {k}}}  and  q {\\\\displaystyle {\\\\bf {q}}}  run over all   k {\\\\displaystyle {\\\\bf {k}}}  points chosen to sample the Brillouin zone (BZ), whereas the sums over   m {\\\\displaystyle m}  and  n {\\\\displaystyle n}  run over all bands at these   k {\\\\displaystyle {\\\\bf {k}}}  points. The corresponding nonlocal Hartree\\-Fock potential is given by  V  x  H F  (  r  ,  r  \u2032  )  \\= \u2212  e  2  2  \u2211  m  q  f  m  q  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\|  \\= \u2212  e  2  2  \u2211  m  q  f  m  q  e  \u2212 i  q  \u22c5  r  \u2032  u  m  q  \u2217  (  r  \u2032  )  u  m  q  (  r  )  \\|  r  \u2212  r  \u2032  \\|  e  i  q  \u22c5  r  , {\\\\displaystyle V\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }{\\\\frac {\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }e^{\\-i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} '}{\\\\frac {u\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')u\\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}{\\\\vert \\\\mathbf {r} \\-\\\\mathbf {r} '\\\\vert }}e^{i\\\\mathbf {q} \\\\cdot \\\\mathbf {r} },} where   u  m  q  (  r  ) {\\\\displaystyle u\\_{m\\\\mathbf {q} }(\\\\mathbf {r} )}  is the cell periodic part of the Bloch state,  \u03c8  n  q  (  r  ) {\\\\displaystyle \\\\psi \\_{n\\\\mathbf {q} }(\\\\mathbf {r} )} , at   k {\\\\displaystyle {\\\\bf {k}}}  point,   q {\\\\displaystyle {\\\\bf {q}}} , with band index *m*.Using the decomposition of the Bloch states,   \u03c8  m  q {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {q} }} , in plane waves,  \u03c8  m  q  (  r  ) \\=  1  \u03a9  \u2211  G  C  m  q  (  G  )  e  i (  q  \\+  G  ) \u22c5  r {\\\\displaystyle \\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} )\\={\\\\frac {1}{\\\\sqrt {\\\\Omega }}}\\\\sum \\_{\\\\mathbf {G} }C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} )e^{i(\\\\mathbf {q} \\+\\\\mathbf {G} )\\\\cdot \\\\mathbf {r} }} the Hartree\\-Fock exchange potential may be written as   V  x  H F  (  r  ,  r  \u2032  )  \\=  \u2211  k  \u2211  G  G  \u2032  e  i (  k  \\+  G  ) \u22c5  r  V  k  H F  (  G  ,  G  \u2032  )  e  \u2212 i (  k  \\+  G  \u2032  ) \u22c5  r  \u2032 {\\\\displaystyle V\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {r} ,\\\\mathbf {r} '\\\\right)\\=\\\\sum \\_{\\\\mathbf {k} }\\\\sum \\_{\\\\mathbf {G} \\\\mathbf {G} '}e^{i(\\\\mathbf {k} \\+\\\\mathbf {G} )\\\\cdot \\\\mathbf {r} }V\\_{\\\\mathbf {k} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)e^{\\-i(\\\\mathbf {k} \\+\\\\mathbf {G} ')\\\\cdot \\\\mathbf {r} '}} where  V  k  H F  (  G  ,  G  \u2032  )  \\= \u27e8  k  \\+  G  \\|  V  x  H F  \\|  k  \\+  G  \u2032  \u27e9 \\= \u2212  4 \u03c0  e  2  \u03a9  \u2211  m  q  f  m  q  \u2211  G  \u2033  C  m  q  \u2217  (  G  \u2032  \u2212  G  \u2033  )  C  m  q  (  G  \u2212  G  \u2033  )  \\|  k  \u2212  q  \\+  G  \u2033  \\|  2 {\\\\displaystyle V\\_{\\\\mathbf {k} }^{\\\\mathrm {HF} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)\\=\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|V\\_{\\\\mathrm {x} }^{\\\\mathrm {HF} }\\|\\\\mathbf {k} \\+\\\\mathbf {G} '\\\\rangle \\=\\-{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }\\\\sum \\_{\\\\mathbf {G} ''}{\\\\frac {C\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}{\\|\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} ''\\|^{2}}}} is the representation of the Hartree\\-Fock potential in reciprocal space.In VASP, these expressions are implemented within the PAW formalism.[\\[4]](#cite_note-paier:jcp:05-4) ### Range\\-separated hybrid functionals #### Error function screening with short\\-range Hartree\\-Fock exchange More popular in solid\\-state physics, are the screened hybrid functionals, where only the short\\-range (SR) exchange is mixed, while the long\\-range (LR) exchange is still fully GGA:  E  x c  h y b r i d  \\= \u03b1  E  x  H F , S R  ( \u03bc ) \\+ ( 1 \u2212 \u03b1 )  E  x  G G A , S R  ( \u03bc ) \\+  E  x  G G A , L R  ( \u03bc ) \\+  E  c  G G A  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {hybrid} }\\=\\\\alpha E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,SR} }(\\\\mu )\\+(1\\-\\\\alpha )E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {GGA,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {GGA} },} where   \u03bc {\\\\displaystyle \\\\mu }  is the screening parameter (HFSCREEN) that determines the range separation. The most popular range\\-separated functional, HSE, is given below. * HSE: In the range\\-separated HSE03[\\[5]](#cite_note-heyd:jcp:03-5)[\\[6]](#cite_note-heyd:jcp:04-6)[\\[7]](#cite_note-heyd:jcp:06-7) and HSE06[\\[8]](#cite_note-krukau:jcp:06-8) hybrid functionals the slowly decaying long\\-range part of the Hartree\\-Fock exchange interaction (see the discussion on the Coulomb singularity) is replaced by the corresponding part of the PBE density functional counterpart. The resulting expression for the exchange\\-correlation energy is given by:  E  x c  H S E  \\=  1 4  E  x  H F , S R  ( \u03bc ) \\+  3 4  E  x  P B E , S R  ( \u03bc ) \\+  E  x  P B E , L R  ( \u03bc ) \\+  E  c  P B E  . {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {HSE} }\\={\\\\frac {1}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,SR} }(\\\\mu )\\+{\\\\frac {3}{4}}E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {PBE} }.} The decomposition of the Coulomb kernel is obtained using the following construction:  1 r  \\=  S  \u03bc  ( r ) \\+  L  \u03bc  ( r ) \\=  e r f c  ( \u03bc r )  r  \\+  e r f  ( \u03bc r )  r  , {\\\\displaystyle {\\\\frac {1}{r}}\\=S\\_{\\\\mu }(r)\\+L\\_{\\\\mu }(r)\\={\\\\frac {\\\\mathrm {erfc} (\\\\mu r)}{r}}\\+{\\\\frac {\\\\mathrm {erf} (\\\\mu r)}{r}},} where   r \\=  \\|  r  \u2212  r  \u2032  \\| {\\\\displaystyle r\\=\\|{\\\\bf {r}}\\-{\\\\bf {r}}'\\|} , and   \u03bc {\\\\displaystyle \\\\mu }  (set by HFSCREEN) is the parameter that defines the range separation, and is related to a characteristic distance,   2  /  \u03bc {\\\\displaystyle 2/\\\\mu } , at which the short\\-range interactions become negligible. Note: It has been shown that the optimum   \u03bc {\\\\displaystyle \\\\mu } , controlling the range separation is approximately 0\\.2\\-0\\.3 \u00c5\\-1.[\\[5]](#cite_note-heyd:jcp:03-5)[\\[6]](#cite_note-heyd:jcp:04-6)[\\[7]](#cite_note-heyd:jcp:06-7)[\\[8]](#cite_note-krukau:jcp:06-8)To select the HSE06 functional you need to select (HFSCREEN\\=0\\.2\\). Using the decomposed Coulomb kernel one may straightforwardly rewrite the nonlocal Hartree\\-Fock exhange energy:  E  x  H F , S R  ( \u03bc ) \\= \u2212  e  2  2  \u2211  n  k  , m  q  f  n  k  f  m  q  \u222b \u222b  d  3  r  d  3  r  \u2032  e r f c  ( \u03bc  \\|  r  \u2212  r  \u2032  \\|  )  \\|  r  \u2212  r  \u2032  \\|  \u00d7  \u03c8  n  k  \u2217  (  r  )  \u03c8  m  q  \u2217  (  r  \u2032  )  \u03c8  n  k  (  r  \u2032  )  \u03c8  m  q  (  r  ) . {\\\\displaystyle E\\_{\\\\mathrm {x} }^{\\\\rm {HF,SR}}(\\\\mu )\\=\\-{\\\\frac {e^{2}}{2}}\\\\sum \\_{n\\\\mathbf {k} ,m\\\\mathbf {q} }f\\_{n\\\\mathbf {k} }f\\_{m\\\\mathbf {q} }\\\\int \\\\int d^{3}\\\\mathbf {r} d^{3}\\\\mathbf {r} '{\\\\frac {\\\\mathrm {erfc} (\\\\mu \\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|)}{\\|\\\\mathbf {r} \\-\\\\mathbf {r} '\\|}}\\\\times \\\\psi \\_{n\\\\mathbf {k} }^{\\*}(\\\\mathbf {r} )\\\\psi \\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {r} ')\\\\psi \\_{n\\\\mathbf {k} }(\\\\mathbf {r} ')\\\\psi \\_{m\\\\mathbf {q} }(\\\\mathbf {r} ).} The representation of the corresponding short\\-range Hartree\\-Fock potential in reciprocal space is given by  V  k  H F , S R  (  G  ,  G  \u2032  )  \\= \u27e8  k  \\+  G  \\|  V  x  S R  \\[ \u03bc ]  \\|  k  \\+  G  \u2032  \u27e9  \\= \u2212  4 \u03c0  e  2  \u03a9  \u2211  m  q  f  m  q  \u2211  G  \u2033  C  m  q  \u2217  (  G  \u2032  \u2212  G  \u2033  )  C  m  q  (  G  \u2212  G  \u2033  )  \\|  k  \u2212  q  \\+  G  \u2033  \\|  2  \u00d7  (  1 \u2212  e  \u2212  \\|  k  \u2212  q  \\+  G  \u2033  \\|  2  /  4  \u03bc  2  )  . {\\\\displaystyle {\\\\begin{aligned}V\\_{\\\\mathbf {k} }^{\\\\mathrm {HF,SR} }\\\\left(\\\\mathbf {G} ,\\\\mathbf {G} '\\\\right)\\&\\=\\\\langle \\\\mathbf {k} \\+\\\\mathbf {G} \\|V\\_{x}^{\\\\rm {SR}}\\[\\\\mu ]\\|\\\\mathbf {k} \\+\\\\mathbf {G} '\\\\rangle \\\\\\\\\\&\\=\\-{\\\\frac {4\\\\pi e^{2}}{\\\\Omega }}\\\\sum \\_{m\\\\mathbf {q} }f\\_{m\\\\mathbf {q} }\\\\sum \\_{\\\\mathbf {G} ''}{\\\\frac {C\\_{m\\\\mathbf {q} }^{\\*}(\\\\mathbf {G} '\\-\\\\mathbf {G} '')C\\_{m\\\\mathbf {q} }(\\\\mathbf {G} \\-\\\\mathbf {G} '')}{\\|\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} ''\\|^{2}}}\\\\times \\\\left(1\\-e^{\\-\\|\\\\mathbf {k} \\-\\\\mathbf {q} \\+\\\\mathbf {G} ''\\|^{2}/4\\\\mu ^{2}}\\\\right).\\\\end{aligned}}} The only difference to the reciprocal space representation of the complete Hartree\\-Fock exchange potential is the second factor in the summand above, representing the complementary error function in reciprocal space. The short\\-range PBE exchange energy and potential, and their long\\-range counterparts, are arrived at using the same decomposition, in accordance with Heyd *et al*.[\\[5]](#cite_note-heyd:jcp:03-5) It is easily seen that the long\\-range term in the decomposed Coulomb kernel becomes zero for   \u03bc \\= 0 {\\\\displaystyle \\\\mu \\=0} , and the short\\-range contribution then equals the full Coulomb operator, whereas for   \u03bc \u2192 \u221e {\\\\displaystyle \\\\mu \\\\rightarrow \\\\infty }  it is the other way around. Consequently, the two limiting cases of the HSE functional are a true PBE0 functional for   \u03bc \\= 0 {\\\\displaystyle \\\\mu \\=0} , and a pure PBE calculation for   \u03bc \u2192 \u221e {\\\\displaystyle \\\\mu \\\\rightarrow \\\\infty }  . #### Error function screening with long\\-range Hartree\\-Fock exchange Screened hybrid functionals with Hartree\\-Fock exchange at long range are more popular in molecular chemistry, where a proper decay of the exchange\\-correlation potential at long range far from the nuclei may be important. These functionals are less useful for solid\\-state physics, in particular for bulk solids. Examples belonging to this class of functionals are (available in VASP): * RSHXLDA and RSHXPBE:[\\[9]](#cite_note-iikura:jcp:2001-9)[\\[10]](#cite_note-gerber:cpl:2005-10)[\\[11]](#cite_note-gerber:jcp:2007-11) In the RSHXLDA and RSHXPBE functionals the exchange operator is decomposed into short\\-range LDA/PBE and long\\-range Hartree\\-Fock:  E  x c  R S H X L D A  \\=  E  x  L D A , S R  ( \u03bc ) \\+  E  x  H F , L R  ( \u03bc ) \\+  E  c  L D A  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {RSHXLDA} }\\=E\\_{\\\\mathrm {x} }^{\\\\mathrm {LDA,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {LDA} },}  E  x c  R S H X P B E  \\=  E  x  P B E , S R  ( \u03bc ) \\+  E  x  H F , L R  ( \u03bc ) \\+  E  c  P B E  , {\\\\displaystyle E\\_{\\\\mathrm {xc} }^{\\\\mathrm {RSHXPBE} }\\=E\\_{\\\\mathrm {x} }^{\\\\mathrm {PBE,SR} }(\\\\mu )\\+E\\_{\\\\mathrm {x} }^{\\\\mathrm {HF,LR} }(\\\\mu )\\+E\\_{\\\\mathrm {c} }^{\\\\mathrm {PBE} },} where   \u03bc {\\\\displaystyle \\\\mu }  (set by HFSCREEN) is the parameter that defines the range separation. The use of the long\\-range Hartree\\-Fock exchange is activated with the LRHFCALC tag. This functional can only be used when the short\\-range density functional part is LDA or PBE. When LDA is chosen, a value of   \u03bc \\=0\\.75 {\\\\displaystyle \\\\mu \\=0\\.75}  \u00c5\\-1 is recommended for solids.[\\[11]](#cite_note-gerber:jcp:2007-11)#### Thomas\\-Fermi exponential screening with short\\-range Hartree\\-Fock exchange In the case of Thomas\\-Fermi screening (activated with the LTHOMAS tag), the Coulomb kernel is again decomposed in a short\\-range and a long\\-range part with the exponential function.[\\[12]](#cite_note-bylander:prb:90-12)[\\[1]](#cite_note-seidl:prb:96-1)[\\[13]](#cite_note-picozzi:prb:00-13) This decomposition can be conveniently written in reciprocal space:  4 \u03c0  e  2  \\|  G  \\|  2  \\=  S  \u03bc  (  \\|  G  \\|  ) \\+  L  \u03bc  (  \\|  G  \\|  ) \\=  4 \u03c0  e  2  \\|  G  \\|  2  \\+  k  T F  2  \\+  (  4 \u03c0  e  2  \\|  G  \\|  2  \u2212  4 \u03c0  e  2  \\|  G  \\|  2  \\+  k  T F  2  )  , {\\\\displaystyle {\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}}}\\=S\\_{\\\\mu }(\\|\\\\mathbf {G} \\|)\\+L\\_{\\\\mu }(\\|\\\\mathbf {G} \\|)\\={\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}\\+k\\_{\\\\mathrm {TF} }^{2}}}\\+\\\\left({\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}}}\\-{\\\\frac {4\\\\pi e^{2}}{\\|\\\\mathbf {G} \\|^{2}\\+k\\_{\\\\mathrm {TF} }^{2}}}\\\\right),} where   k  T F {\\\\displaystyle k\\_{\\\\rm {TF}}}  (set by HFSCREEN) is the Thomas\\-Fermi screening length. For typical semiconductors, a Thomas\\-Fermi screening length of about 1\\.8 \u00c5\\-1 yields reasonable band gaps. In principle, however, the Thomas\\-Fermi screening length depends on the valence\\-electron density; VASP determines this parameter from the number of valence electrons (read from the POTCAR file) and the volume and writes the corresponding value to the OUTCAR file:  ``` Thomas-Fermi vector in A             =   2.00000  ``` Since VASP counts the semi\\-core states and *d*\\-states as valence electrons, although these states do not contribute to the screening, the values reported by VASP are often incorrect.  Another important detail concerns the implementation of the density\\-functional part in the screened exchange case. Literature suggests that a global enhancement factor   z {\\\\displaystyle z}  (see Eq. 3\\.15\\)[\\[1]](#cite_note-seidl:prb:96-1) should be used, whereas VASP implements a local\\-density\\-dependent enhancement factor   z \\=  k  T F  /  k {\\\\displaystyle z\\=k\\_{\\\\rm {TF}}/k}  , where   k {\\\\displaystyle k}  is the Fermi wave vector corresponding to the local density (and not the average density as suggested Seidl *et al*.[\\[1]](#cite_note-seidl:prb:96-1). The VASP implementation is in the spirit of the *local* density approximation."}
{"file_name": "SHAKEMAXITER.md", "content": "SHAKEMAXITER= \\[Integer]   Default: **SHAKEMAXITER** \\= 1000nDescription: SHAKEMAXITER specifies the maximum number of iterations in the SHAKE algorithm (in case VASP was compiled with \\-Dtbdyn).  --- Constrained molecular dynamics (MDALGO\\=1 \\| 2\\) are performed using a SHAKE algorithm.[\\[1]](#cite_note-Ryckaert77-1) If the error for all geometric constraints does not decrease below a predefined tolerance (SHAKETOL) within the allowed number of iterations, VASP terminates with an error message. The aforementioned maximum number of iterations is set by means of the SHAKEMAXITER tag."}
{"file_name": "NCRPA_BANDS.md", "content": "NCRPA\\_BANDS= \\[integer array]nDescription: Controls which bands are excluded in the constrained random phase approximation. Check also NTARGET\\_STATES.  --- This tag is effective for ALGO\\=CRPA and ignored otherwise. For instance   ```NCRPA_BANDS = 21 22 23   ``` removes all screening effects between bands 21, 22 and 23 in the random phase approximation of the screened Coulomb interaction.  ###"}
{"file_name": "VDW_CNRADIUS.md", "content": "VDW\\_CNRADIUS= \\[real]   Default: **VDW\\_CNRADIUS** \\= 21\\.167nDescription: VDW\\_CNRADIUS defines the cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for the calculation of the coordination numbers.  --- VDW\\_CNRADIUS sets the cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for the calculation of the coordination numbers used for the DFT\\-D3 method."}
{"file_name": "Tkatchenko-Scheffler_method.md", "content": "The expression for the dispersion energy within the method of Tkatchenko and Scheffler[\\[1]](#cite_note-tkatchenko:prl:09-1) is formally identical to that of the DFT\\-D2 method. The important difference is, however, that the dispersion coefficients and damping function are charge\\-density dependent. The Tkatchenko\\-Scheffler method is therefore able to take into account variations in vdW contributions of atoms due to their local chemical environment. In this method the polarizability, dispersion coefficients, and atomic radii of an atom in a molecule or a solid are computed from their free\\-atomic values using the following relations:  \u03b1  i  \\=  \u03bd  i  \u03b1  i  f r e e  , {\\\\displaystyle \\\\alpha \\_{i}\\=\\\u \\_{i}\\\\,\\\\alpha \\_{i}^{free},}  C  6 i i  \\=  \u03bd  i  2  C  6 i i  f r e e  , {\\\\displaystyle C\\_{6ii}\\=\\\u \\_{i}^{2}\\\\,C\\_{6ii}^{free},}  R  0 i  \\=  (  \u03b1  i  \u03b1  i  f r e e  )  1 3  R  0 i  f r e e  . {\\\\displaystyle R\\_{0i}\\=\\\\left({\\\\frac {\\\\alpha \\_{i}}{\\\\alpha \\_{i}^{free}}}\\\\right)^{\\\\frac {1}{3}}R\\_{0i}^{free}.} The free\\-atomic quantities   \u03b1  i  f r e e  ,  C  6 i i  f r e e {\\\\displaystyle \\\\alpha \\_{i}^{free},C\\_{6ii}^{free}}  and  R  0 i  f r e e {\\\\displaystyle R\\_{0i}^{free}}  are tabulated for all elements from the first six rows of the periodic table except for lanthanides. If a Tkatchenko\\-Scheffler calculation is performed for the system containing an unsupported element, the user has to define the corresponding values using the tags VDW\\_ALPHA, VDW\\_C6 and VDW\\_R0 (see below). The effective atomic volumes   \u03bd  i {\\\\displaystyle \\\u \\_{i}}  are determined using the Hirshfeld partitioning of the all\\-electron density:  \u03bd  i  \\=  \u222b  r  3  w  i  (  r  ) n (  r  )  d  3  r  \u222b  r  3  n  i  f r e e  (  r  )  d  3  r {\\\\displaystyle \\\u \\_{i}\\={\\\\frac {\\\\int r^{3}\\\\,w\\_{i}({\\\\mathbf {r} })n({\\\\mathbf {r} })\\\\,d^{3}{\\\\mathbf {r} }}{\\\\int r^{3}\\\\,n\\_{i}^{free}({\\\\mathbf {r} })\\\\,d^{3}{\\\\mathbf {r} }}}} where   n (  r  ) {\\\\displaystyle n({\\\\mathbf {r} })}  is the total electron density and   n  i  f r e e  (  r  ) {\\\\displaystyle n\\_{i}^{free}({\\\\mathbf {r} })}  is the spherically averaged electron density of the neutral free atomic species   i {\\\\displaystyle i} . The Hirshfeld weight   w  i  (  r  ) {\\\\displaystyle w\\_{i}({\\\\mathbf {r} })}  is defined by free atomic densities as follows:  w  i  (  r  ) \\=  n  i  f r e e  (  r  )  \u2211  j \\= 1  N  a t  n  j  f r e e  (  r  )  . {\\\\displaystyle w\\_{i}({\\\\mathbf {r} })\\={\\\\frac {n\\_{i}^{free}({\\\\mathbf {r} })}{\\\\sum \\_{j\\=1}^{N\\_{at}}n\\_{j}^{free}({\\\\mathbf {r} })}}.} The combination rule to define the strength of the dipole\\-dipole dispersion interaction between unlike species is:  C  6 i j  \\=  2  C  6 i i  C  6 j j  \\[  \u03b1  j  \u03b1  i  C  6 i i  \\+  \u03b1  i  \u03b1  j  C  6 j j  ]  . {\\\\displaystyle C\\_{6ij}\\={\\\\frac {2C\\_{6ii}\\\\,C\\_{6jj}}{\\[{\\\\frac {\\\\alpha \\_{j}}{\\\\alpha \\_{i}}}C\\_{6ii}\\+{\\\\frac {\\\\alpha \\_{i}}{\\\\alpha \\_{j}}}C\\_{6jj}]}}.} The parameter   R  0 i j {\\\\displaystyle R\\_{0ij}}  used in the damping function of the DFT\\-D2 method is obtained from the atom\\-in\\-molecule vdW radii as follows:  R  0 i j  \\=  R  0 i  \\+  R  0 j  . {\\\\displaystyle R\\_{0ij}\\=R\\_{0i}\\+R\\_{0j}.} The Tkatchenko\\-Scheffler method is invoked by setting IVDW\\=2\\|20\\. The following parameters can be optionally defined in INCAR (the given values are the default ones): * LVDWSCS\\=.FALSE.\u00a0: activates the self\\-consistent screening in Tkatchenko\\-Scheffler method* VDW\\_RADIUS\\=50\\.0\u00a0: cutoff radius (in \u00c5) for pair interactions* VDW\\_S6\\=1\\.00\u00a0: global scaling factor   s  6 {\\\\displaystyle s\\_{6}} * VDW\\_SR\\=0\\.94\u00a0: scaling factor   s  R {\\\\displaystyle s\\_{R}} * VDW\\_D\\=20\\.0\u00a0: damping parameter   d {\\\\displaystyle d} * VDW\\_ALPHA\\=\\[real array]\u00a0: free\\-atomic polarizabilities (atomic units) for each species defined in the POSCAR file* VDW\\_C6AU\\=\\[real array]\u00a0: free\\-atomic   C  6 {\\\\displaystyle C\\_{6}}  parameters (atomic units) for each species defined in the POSCAR file* VDW\\_C6\\=\\[real array]\u00a0: free\\-atomic   C  6 {\\\\displaystyle C\\_{6}}  parameters (  J n m  6  m o l  \u2212 1 {\\\\displaystyle \\\\mathrm {Jnm} ^{6}\\\\mathrm {mol} ^{\\-1}} ) for each species defined in the POSCAR file (this parameter overrides VDW\\_C6AU)* VDW\\_R0AU\\=\\[real array]\u00a0: free\\-atomic   R  0 {\\\\displaystyle R\\_{0}}  parameters (atomic units) for each species defined in the POSCAR file* VDW\\_R0\\=\\[real array]\u00a0:   R  0 {\\\\displaystyle R\\_{0}}  parameters (in \u00c5) for each species defined in the POSCAR file (this parameter overrides VDW\\_R0AU)* LVDW\\_EWALD\\=.FALSE.\u00a0: the lattice summation in  {\\\\displaystyle E\\_{\\\\mathrm {disp} }}  expression is computed by means of Ewald's summation (*.TRUE.* ) or via a real space summation over all atomic pairs within cutoff radius VDW\\_RADIUS (*.FALSE.*). (available in VASP.5\\.3\\.4 and later)* LTSSURF\\=.FALSE.: if set to .TRUE., the standard parametrization of the Tkatchenko\\-Scheffler method is replaced by the one designed to enable reliable modeling of structure and stability for a broad class of organic molecules adsorbed on metal surfaces is activated[\\[2]](#cite_note-2) The performance of the Tkatchenko\\-Scheffler method in optimization of various crystalline systems has been examined in reference [\\[3]](#cite_note-bucko:prb:13-3).   | **Mind:*** This method requires the use of POTCAR files from the PAW dataset version 52 or later. * The input reference data for non\\-interacting atoms is available only for elements of the first six rows of the periodic table except for lanthanides. If the system contains other elements, the user must provide the free\\-atomic parameters for all atoms in the system via VDW\\_ALPHA, VDW\\_C6, VDW\\_R0 defined in the INCAR file. * The charge\\-density dependence of gradients is neglected. * The DFT\\-TS method is incompatible with the setting ADDGRID\\=*.TRUE.*. * It is essential that a sufficiently dense FFT grid (controlled via NGXF, NGYF and NGZF) is used in the DFT\\-TS calculation \\- we strongly recommend to use PREC\\=*Accurate* for this type of calculations (in any case, avoid using PREC\\=*Low*). * Defaults for the parameters controlling the damping function (VDW\\_S6, VDW\\_SR, VDW\\_D) are available for the PBE, PBE0, HSE03, HSE06, TPSS, and M06L functionals. If any other functional is used, the value of VDW\\_SR must be specified in the INCAR file. * Ewald's summation in the calculation of           {\\\\displaystyle E\\_{disp}}  E_{{disp}} (controlled via LVDW\\_EWALD) implemented according to reference [\\[4]](#cite_note-kerber:jcc:08-4) is available as of VASP.5\\.3\\.4\\. * Parameters VDW\\_C6AU and VDW\\_R0AU are available as of VASP.5\\.3\\.4\\. * Hirshfeld charges for all configurations generated in a calculation are written out in the OUTCAR file. The corresponding table is introduced by the expression *Hirshfeld charges:*. || --- |"}
{"file_name": "Static_linear_response__theory.md", "content": "Let\u2019s consider three types of static perturbations 1. atomic displacements   u  m {\\\\textstyle u\\_{m}}  with   m \\= I \u03b1 {\\\\displaystyle m\\=I\\\\alpha }  with   I \\= {1\\..  N atoms  } {\\\\displaystyle I\\=\\\\{1\\..N\\_{\\\\text{atoms}}\\\\}}  and  \u03b1 \\= {1\\..3 } {\\\\displaystyle \\\\alpha \\=\\\\{1\\..3\\\\}} 2. homogeneous strains   \u03b7  j {\\\\textstyle \\\\eta \\_{j}}  with   j \\= {1\\..6 } {\\\\textstyle j\\=\\\\{1\\..6\\\\}} 3. static electric field   E  \u03b1 {\\\\textstyle {\\\\mathcal {E}}\\_{\\\\alpha }}  with   \u03b1 \\= {1\\..3 } {\\\\textstyle \\\\alpha \\=\\\\{1\\..3\\\\}} By performing a Taylor expansion of the total energy $E$ in terms of these perturbations we obtain[\\[1]](#cite_note-wu:prb:2005-1)  E ( u ,  E  , \u03b7 ) \\=  E  0  \\+  \u2202 E  \u2202  u  m  u  m  \\+  \u2202 E  \u2202  E  \u03b1  E  \u03b1  \\+  \u2202 E  \u2202  \u03b7  j  \u03b7  j  \\+  1 2  \u2202  2  E  \u2202  u  m  \u2202  u  n  u  m  u  n  \\+  1 2  \u2202  2  E  \u2202  E  \u03b1  \u2202  E  \u03b2  E  \u03b1  E  \u03b2  \\+  1 2  \u2202  2  E  \u2202  \u03b7  j  \u2202  \u03b7  k  \u03b7  j  \u03b7  k  \\+  \u2202  2  E  \u2202  u  m  \u2202  E  \u03b1  u  m  E  \u03b1  \\+  \u2202  2  E  \u2202  u  m  \u2202  \u03b7  j  u  m  \u03b7  j  \\+  \u2202  2  E  \u2202  E  \u03b1  \u2202  \u03b7  j  E  \u03b1  \u03b7  j  \\+ terms of higher order {\\\\displaystyle {\\\\begin{aligned}E(u,{\\\\mathcal {E}},\\\\eta )\\=\\&E\\_{0}\\+\\\\\\\\\\&{\\\\frac {\\\\partial E}{\\\\partial u\\_{m}}}u\\_{m}\\+{\\\\frac {\\\\partial E}{\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }}}{\\\\mathcal {E}}\\_{\\\\alpha }\\+{\\\\frac {\\\\partial E}{\\\\partial \\\\eta \\_{j}}}\\\\eta \\_{j}\\+\\\\\\\\\\&{\\\\frac {1}{2}}{\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{m}\\\\partial u\\_{n}}}u\\_{m}u\\_{n}\\+{\\\\frac {1}{2}}{\\\\frac {\\\\partial ^{2}E}{\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }\\\\partial {\\\\mathcal {E}}\\_{\\\\beta }}}{\\\\mathcal {E}}\\_{\\\\alpha }{\\\\mathcal {E}}\\_{\\\\beta }\\+{\\\\frac {1}{2}}{\\\\frac {\\\\partial ^{2}E}{\\\\partial \\\\eta \\_{j}\\\\partial \\\\eta \\_{k}}}\\\\eta \\_{j}\\\\eta \\_{k}\\+\\\\\\\\\\&{\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{m}\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }}}u\\_{m}{\\\\mathcal {E}}\\_{\\\\alpha }\\+{\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{m}\\\\partial \\\\eta \\_{j}}}u\\_{m}\\\\eta \\_{j}\\+{\\\\frac {\\\\partial ^{2}E}{\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }\\\\partial \\\\eta \\_{j}}}{\\\\mathcal {E}}\\_{\\\\alpha }\\\\eta \\_{j}\\+{\\\\text{terms of higher order}}\\\\end{aligned}}}   The derivatives of the energy with respect to an electric field are the polarization, with respect to atomic displacements are the forces, with respect to changes in the lattice vectors are the stress tensor.  P  \u03b1  \\= \u2212  \u2202 E  \u2202  E  \u03b1 polarization {\\\\displaystyle P\\_{\\\\alpha }\\=\\-{\\\\frac {\\\\partial E}{\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }}}\\\\qquad {\\\\text{polarization}}}  F  m  \\= \u2212  \u03a9  0  \u2202 E  \u2202  u  m forces {\\\\displaystyle F\\_{m}\\=\\-\\\\Omega \\_{0}{\\\\frac {\\\\partial E}{\\\\partial u\\_{m}}}\\\\qquad {\\\\text{forces}}}  \u03c3  j  \\=  \u2202 E  \u2202  \u03b7  j stresses {\\\\displaystyle \\\\sigma \\_{j}\\={\\\\frac {\\\\partial E}{\\\\partial \\\\eta \\_{j}}}\\\\qquad {\\\\text{stresses}}} This leads to the following \u2018clamped\\-ion\u2019 or \u2018frozen\\-ion\u2019 definitions:  \u03c7 \u00af  \u03b1 \u03b2  \\= \u2212  \u2202  2  E  \u2202  E  \u03b1  \u2202  E  \u03b2  \\|  u , \u03b7 dielectric susceptibility {\\\\displaystyle {\\\\overline {\\\\chi }}\\_{\\\\alpha \\\\beta }\\=\\-{\\\\frac {\\\\partial ^{2}E}{\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }\\\\partial {\\\\mathcal {E}}\\_{\\\\beta }}}\\|\\_{u,\\\\eta }\\\\qquad {\\\\text{dielectric susceptibility}}}  C \u00af  j k  \\=  \u2202  2  E  \u2202  \u03b7  j  \u2202  \u03b7  k  \\|  u ,  E elastic tensor {\\\\displaystyle {\\\\overline {C}}\\_{jk}\\={\\\\frac {\\\\partial ^{2}E}{\\\\partial \\\\eta \\_{j}\\\\partial \\\\eta \\_{k}}}\\|\\_{u,{\\\\mathcal {E}}}\\\\qquad {\\\\text{elastic tensor}}}  \u03a6  m n  \\=  \u03a9  0  \u2202  2  E  \u2202  u  m  \u2202  u  n  \\|  E  , \u03b7 force\\-constants {\\\\displaystyle \\\\Phi \\_{mn}\\=\\\\Omega \\_{0}{\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{m}\\\\partial u\\_{n}}}\\|\\_{{\\\\mathcal {E}},\\\\eta }\\\\qquad {\\\\text{force\\-constants}}}  e \u00af  \u03b1 k  \\=  \u2202  2  E  \u2202  E  \u03b1  \u2202  \u03b7  k  \\|  u piezoelectric tensor {\\\\displaystyle {\\\\overline {e}}\\_{\\\\alpha k}\\={\\\\frac {\\\\partial ^{2}E}{\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }\\\\partial \\\\eta \\_{k}}}\\|\\_{u}\\\\qquad {\\\\text{piezoelectric tensor}}}  Z  m \u03b1  \u2217  \\= \u2212  \u03a9  0  \u2202  2  E  \u2202  u  m  \u2202  E  \u03b1  \\|  \u03b7 Born effective charges {\\\\displaystyle Z\\_{m\\\\alpha }^{\\*}\\=\\-\\\\Omega \\_{0}{\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{m}\\\\partial {\\\\mathcal {E}}\\_{\\\\alpha }}}\\|\\_{\\\\eta }\\\\qquad {\\\\text{Born effective charges}}}  \u039e  m j  \\= \u2212  \u03a9  0  \u2202  2  E  \u2202  u  m  \u2202  \u03b7  j  \\|  E force response internal strain tensor {\\\\displaystyle \\\\Xi \\_{mj}\\=\\-\\\\Omega \\_{0}{\\\\frac {\\\\partial ^{2}E}{\\\\partial u\\_{m}\\\\partial \\\\eta \\_{j}}}\\|\\_{\\\\mathcal {E}}\\\\qquad {\\\\text{force response internal strain tensor}}}   To compare with experimental results, however, the static response properties should take into account the ionic relaxation. This follows from the Taylor expansion above by looking at the ionic positions where the energy is minimal:  E \\~  (  E  , \u03b7 ) \\=  min  u  E ( u ,  E  , \u03b7 ) {\\\\displaystyle {\\\\tilde {E}}({\\\\mathcal {E}},\\\\eta )\\={\\\\text{min}}\\_{u}E(u,{\\\\mathcal {E}},\\\\eta )} The physical \u2018relaxed\\-ion\u2019 tensors are   \u03c7  \u03b1 \u03b2  \\=  \u03c7 \u00af  \u03b1 \u03b2  \\+  \u03a9  0  \u2212 1  Z  m \u03b1  \u2217  ( \u03a6  )  m n  \u2212 1  Z  n \u03b2  \u2217 dielectric susceptibility  C  j k  \\=  C \u00af  j k  \\+  \u03a9  0  \u2212 1  \u039e  m j  ( \u03a6  )  m n  \u2212 1  \u039e  n k elastic tensor  e  \u03b1 j  \\=  e \u00af  \u03b1 j  \\+  \u03a9  0  \u2212 1  Z  m \u03b1  \u2217  ( \u03a6  )  m n  \u2212 1  \u039e  n j piezoelectric tensor {\\\\displaystyle {\\\\begin{aligned}\\\\chi \\_{\\\\alpha \\\\beta }\\&\\={\\\\overline {\\\\chi }}\\_{\\\\alpha \\\\beta }\\+\\\\Omega \\_{0}^{\\-1}Z\\_{m\\\\alpha }^{\\*}(\\\\Phi )\\_{mn}^{\\-1}Z\\_{n\\\\beta }^{\\*}\\\\qquad {\\\\text{dielectric susceptibility}}\\\\\\\\C\\_{jk}\\&\\={\\\\overline {C}}\\_{jk}\\+\\\\Omega \\_{0}^{\\-1}\\\\Xi \\_{mj}(\\\\Phi )\\_{mn}^{\\-1}\\\\Xi \\_{nk}\\\\qquad {\\\\text{elastic tensor}}\\\\\\\\e\\_{\\\\alpha j}\\&\\={\\\\overline {e}}\\_{\\\\alpha j}\\+\\\\Omega \\_{0}^{\\-1}Z\\_{m\\\\alpha }^{\\*}(\\\\Phi )\\_{mn}^{\\-1}\\\\Xi \\_{nj}\\\\qquad {\\\\text{piezoelectric tensor}}\\\\end{aligned}}} The second term on the right\\-hand side of each of these equations is called the ionic contributions to the dielectric susceptibility, elastic tensor, and piezoelectric tensor. The ionic contributions to the dielectric tensor are:   \u03f5  i j  ion  \\=  4 \u03c0  \u03a9  \u2211  k l  Z  i k  \u2217  \u03a6  k l  \u2212 1  Z  l j  \u2217 {\\\\displaystyle \\\\epsilon \\_{ij}^{\\\\text{ion}}\\={\\\\frac {4\\\\pi }{\\\\Omega }}\\\\sum \\_{kl}Z\\_{ik}^{\\*}\\\\Phi \\_{kl}^{\\-1}Z\\_{lj}^{\\*}} The ionic contributions to the elastic tensor   C  i k  ion  \\=  \u2211  k l  \u039e  i j  \u03a6  j k  \u2212 1  \u039e  k l {\\\\displaystyle C\\_{ik}^{\\\\text{ion}}\\=\\\\sum \\_{kl}\\\\Xi \\_{ij}\\\\Phi \\_{jk}^{\\-1}\\\\Xi \\_{kl}} The ionic contributions to the piezoelectric tensor   e  i j  ion  \\=  \u2211  k l  Z  i j  \u2217  \u03a6  j k  \u2212 1  \u039e  k l {\\\\displaystyle e\\_{ij}^{\\\\text{ion}}\\=\\\\sum \\_{kl}Z\\_{ij}^{\\*}\\\\Phi \\_{jk}^{\\-1}\\\\Xi \\_{kl}}"}
{"file_name": "LVGVAPPL.md", "content": "LVGVAPPL= .TRUE. \\| .FALSE.   Default: **LVGVAPPL** \\= .FALSE.nDescription: LVGVAPPL determines whether the *vGv* orbital magnetic susceptibility is applied in the calculation of the CSA tensor. LVGVAPPL is available as of VASP.6\\.4\\.0\\.  --- When performing a chemical shift calculation the standard *pGv* susceptibility is used to calculate the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution to the CSA tensor by default.This can be overruled with LVGVAPPL.In case LVGVAPPL is true, the *vGv* susceptibility is applied for the calculation of the   G \\= 0 {\\\\displaystyle \\\\mathbf {G\\=0} }  contribution to the CSA tensor. For details see LVGVCALC."}
{"file_name": "LEFG.md", "content": "LEFG= .TRUE. \\| .FALSE.   Default: **LEFG** \\= .FALSE.nDescription: The LEFG Computes the Electric Field Gradient at positions of the atomic nuclei.  --- For LEFG\\=.TRUE., the electric field gradient tensors at the positions of the atomic nuclei are calculated using the method of Petrilli *et al.*[\\[1]](#cite_note-petrilli:prb:98-1) The EFG tensors are symmetric. The principal components *V*ii and asymmetry parameter \u03b7 are printed for each atom. Following convention the principal components *V*ii are ordered such that:  \\|  V  z z  \\|  \\>  \\|  V  x x  \\|  \\>  \\|  V  y y  \\|  . {\\\\displaystyle \\|V\\_{zz}\\|\\>\\|V\\_{xx}\\|\\>\\|V\\_{yy}\\|.} The asymmetry parameter is defined as \u03b7\\=(*V*yy\\-*V*xx)/*V*zz.For so\\-called \"quadrupolar nuclei\", *i.e.*, nuclei with nuclear spin I\\>1/2, NMR experiments canaccess *V*zz and \u03b7. **Beware**: Attaining convergence can require somewhat smaller EDIFF than the default of 1\\.e\\-4and somewhat larger cutoff ENCUT than default with PREC\\=A. Moreover, the calculation ofEFGs typically requires high quality PAW data sets. Semi\\-core electrons can be important (check with\\*\\_pv or \\*\\_sv POTCARs) as well as explicit inclusion of augmentation channel(s) with *d*\\-projectors. To convert the *V*zz values into the *C*q often encountered in NMR literature, one has to specify the nuclear quadrupole moment by means of the QUAD\\_EFG\\-tag. **Beware**: for heavy nuclei inaccuracies are to be expected because of an incomplete treatement of relativistic effects."}
{"file_name": "Computing_the_work_function.md", "content": "The work function is defined as the work needed to move an electron from a surface to a point in vacuum sufficiently far away from this surface.It is a central quantity in surface science, vacuum science, catalysis, and other related fields as it characterizes a given surface; illustrating the presence of impurities, adsorbates, and possible surface reconstruction.It is typically measured using surface science techniques such as thermionic emission, the Kelvin probe method, etc.It has also served as an important measure in various theoretical models about metallic surfaces.On this page, we describe how to compute the work function using outputs from a DFT calculation performed using VASP.We detail best practices, required INCAR tags, and possible pitfalls. | **Mind:** The work function is a property of a surface, not a bulk property. Hence, the content of this page only applies to systems with reduced dimensionality (such as surfaces), i.e.,\u00a0systems where there is expected to be a charge\\-density\\-free region in at least one direction of the cell. || --- | Required quantities------------------- The work function,   \u03a6 {\\\\textstyle \\\\Phi } , is computed using the expression,   \u03a6 \\= e  \u03d5  v a c u u m  \u2212  \u03b5  F {\\\\displaystyle \\\\Phi \\=e\\\\phi \\_{\\\\mathrm {vacuum} }\\-\\\\varepsilon \\_{\\\\mathrm {F} }}  where   \u03d5  v a c u u m {\\\\textstyle \\\\phi \\_{\\\\mathrm {vacuum} }}  is the vacuum potential, i.e.,\u00a0the potential sufficiently far away from a surface, such that if an electron were to be placed at this position, it would not feel the presence of the surface.   \u03b5  F {\\\\textstyle \\\\varepsilon \\_{F}}  is the Fermi level of the surface, and   e {\\\\textstyle e}  is the charge on the electron (equal to 1 in atomic units). In the next section, we describe how   \u03d5  v a c u u m {\\\\textstyle \\\\phi \\_{\\\\mathrm {vacuum} }}  and  \u03b5  F {\\\\textstyle \\\\varepsilon \\_{F}}  are determined from the LOCPOT and OUTCAR files, respectively. Step\\-by\\-step instructions--------------------------- **Step 1**: Ensure that the chosen structure has a large enough atom\\-free, i.e.,\u00a0charge\\-density\\-free, and field\\-free region in the direction normal to the surface.A good rule of thumb is to center the atoms in your cell and have anywhere between 8\u201312 \u00c5 of vacuum on either side in this direction. | **Warning:** An insufficiently large vacuum region causes a field within the vacuum region and, thus, leads to inaccurate values of the vacuum potential (see point 3\\). || --- | **Step 2**: Perform a ground\\-state\\-DFT calculation. We suggest setting PREC\\=Accurate. If your cell has a net dipole moment, (i.e.,\u00a0it is not symmetric along the direction of the surface normal), we suggest switching on the dipole correction by using the following INCAR tags: LDIPOL, IDIPOL, DIPOL. The use of the dipole correction is crucial to obtaining a flat field\\-free region in the potential (*c.f*. next point). In addition to these tags, set the LVHAR\\=T to output only the Hartree and ionic potentials to the LOCPOT file or set `WRT_POTENTIAL=hartree ionic` to store the potentials in the vaspout.h5 file. | **Tip:** We recommend using only the Hartree and ionic potentials as the exchange\\-correlation potential decays very slowly in the vacuum region. Using the sum of the Hartree and ionic potentials allows for determining the work function with significantly less vacuum requirements (and hence lower computational cost). || --- | **Step 3**: Compute the vacuum potential. Average the contents of the LOCPOT or the /results/potential/hartree and /results/potential/ionic datasets of the vaspout.h5 file along the lattice vectors of the surface, (i.e.,\u00a0both directions perpendicular to the surface normal). Find the field\\-free region by determining the region of space where the potential remains constant. This value of the potential is the vacuum potential.  | **Tip:** There exist two vacuum potential regions, one for either direction of the surface normal. Depending on your system, one of the directions may be more relevant than another. || --- | **Step 3b**: Alternatively, VASP can compute the vacuum potential when you set LVACPOTAV\\=T in the INCAR file.You can then `grep` for the output in the OUTCAR file  ```   grep upper OUTCAR  ``` which gives the following example output:  ```  vacuum level on the upper side and lower side of the slab         8.049         7.778  ``` **Step 4**: Determine the Fermi energy.The Fermi energy is written directly to the OUTCAR file. `grep` for the following lines in the OUTCAR to get the Fermi energy in eV.  ```  grep \"Fermi energy\" OUTCAR  ``` Example------- [](File_Workfunction_potentials.html) Vacuum potential referenced to the Fermi energy plotted against the distance along the surface normal. Insets to the figure show the work function for (red) a clean Pt(111\\) surface (blue) Pt(111\\) with a carbon atom adsorbed on only one surface termination (atom center \\~15 \u00c5 on the *x* axis). Consider an example of a carbon atom adsorbed on an *fcc*\\-Pt(111\\) surface. The structure of such a system is  ```Pt16C1.0000000000000000   5.5437171645025325    0.0000000000000000    0.0000000000000000   0.0000000000000000    4.8009998958550284    0.0000000000000000   0.0000000000000000    0.0000000000000000   20.0000000000000000Pt C16 1Direct   0.1250000000000000    0.0833333333333334    0.3302590208582500   0.6250000000000000    0.0833333333333334    0.3302590208582500   0.3749999999999999    0.5833333333333334    0.3302590208582500   0.8750000000000001    0.5833333333333334    0.3302590208582500   0.3749999999999999    0.2500000000000000    0.4434196736194167   0.8750000000000001    0.2500000000000000    0.4434196736194167   0.1250000000000000    0.7500000000000000    0.4434196736194167   0.6250000000000000    0.7500000000000000    0.4434196736194167   0.1250000000000000    0.4166666666666667    0.5565803263805833   0.6250000000000000    0.4166666666666667    0.5565803263805833   0.3749999999999999    0.9166666666666666    0.5565803263805833   0.8750000000000001    0.9166666666666666    0.5565803263805833   0.1250000000000000    0.0833333333333334    0.6697409791417500   0.6250000000000000    0.0833333333333334    0.6697409791417500   0.3749999999999999    0.5833333333333334    0.6697409791417500   0.8750000000000001    0.5833333333333334    0.6697409791417500   0.0000000000000000    0.0000000000000000    0.7597409791417501  ``` The bottom and top surfaces are not identical: one is clean, and the other has carbon adsorbed on it. Since the system has a net dipole moment, we need to use the dipole correction in our calculation.An example INCAR file for this system is,  ```LDIPOL  = TIDIPOL  = 3DIPOL   = 0.5 0.5 0.5LVHAR   = TPREC    = Accurate  ``` The Figure to the right shows a representative example of the vacuum potential obtained by averaging the contents of LOCPOT.This potential is referenced to the Fermi energy and is plotted against the distance along the surface normal (*x* axis) for two systems,*fcc* Pt(111\\) surface (in blue) and Pt(111\\) surface with a carbon atom adsorbed on one surface termination (Pt(111\\)\\-C\\*).The vacuum potentials are flat, (i.e.,\u00a0constant), on either side (magnified in insets).The work function on either side of the slab is annotated in the insets as   \u03a6 {\\\\textstyle \\\\Phi } . It is equal for both sides of the clean slab but slightly higher for the case of Pt(111\\)\\-C\\*."}
{"file_name": "Electron_Phonon_Couplings__Statistical_averages.md", "content": "Overview> Band gap renormalization in diamond using one\\-shot method> List of tutorials Task---- Calculating the zero\\-point renormalization (ZPR) and the temperature dependence of the indirect band gap in diamond using a one\\-shot method \"Electron-phonon interactions theory\")[\\[1]](#cite_note-Zacharias:PRL:2015-1)[\\[2]](#cite_note-zacharias:prb:2016-2). Input----- ### POSCAR * Primitive cell (*POSCAR.prim*):  ```C_2_fcc   1.00000000000000     0.00000000   1.78349300  1.78349300     1.78349300   0.00000000  1.78349300     1.78349300   1.78349300  0.00000000 C 2Direct  0.00000000  0.00000000  0.00000000  0.75000000  0.75000000  0.75000000  ``` * 4x4x4 super cell used in this calculation (*POSCAR.4x4x4*):  ```C_128_fcc   1.00000000000000    0.00000000   7.13397200   7.13397200    7.13397200   0.00000000   7.13397200    7.13397200   7.13397200   0.00000000 C 128Direct   0.00000000   0.00000000   0.00000000   0.25000000   0.00000000   0.00000000   0.50000000   0.00000000   0.00000000   0.75000000   0.00000000   0.00000000   0.00000000   0.25000000   0.00000000   0.25000000   0.25000000   0.00000000   0.50000000   0.25000000   0.00000000   0.75000000   0.25000000   0.00000000   0.00000000   0.50000000   0.00000000   0.25000000   0.50000000   0.00000000   0.50000000   0.50000000   0.00000000   0.75000000   0.50000000   0.00000000   0.00000000   0.75000000   0.00000000   0.25000000   0.75000000   0.00000000   0.50000000   0.75000000   0.00000000   0.75000000   0.75000000   0.00000000   0.00000000   0.00000000   0.25000000   0.25000000   0.00000000   0.25000000   0.50000000   0.00000000   0.25000000   0.75000000   0.00000000   0.25000000   0.00000000   0.25000000   0.25000000   0.25000000   0.25000000   0.25000000   0.50000000   0.25000000   0.25000000   0.75000000   0.25000000   0.25000000   0.00000000   0.50000000   0.25000000   0.25000000   0.50000000   0.25000000   0.50000000   0.50000000   0.25000000   0.75000000   0.50000000   0.25000000   0.00000000   0.75000000   0.25000000   0.25000000   0.75000000   0.25000000   0.50000000   0.75000000   0.25000000   0.75000000   0.75000000   0.25000000   0.00000000   0.00000000   0.50000000   0.25000000   0.00000000   0.50000000   0.50000000   0.00000000   0.50000000   0.75000000   0.00000000   0.50000000   0.00000000   0.25000000   0.50000000   0.25000000   0.25000000   0.50000000   0.50000000   0.25000000   0.50000000   0.75000000   0.25000000   0.50000000   0.00000000   0.50000000   0.50000000   0.25000000   0.50000000   0.50000000   0.50000000   0.50000000   0.50000000   0.75000000   0.50000000   0.50000000   0.00000000   0.75000000   0.50000000   0.25000000   0.75000000   0.50000000   0.50000000   0.75000000   0.50000000   0.75000000   0.75000000   0.50000000   0.00000000   0.00000000   0.75000000   0.25000000   0.00000000   0.75000000   0.50000000   0.00000000   0.75000000   0.75000000   0.00000000   0.75000000   0.00000000   0.25000000   0.75000000   0.25000000   0.25000000   0.75000000   0.50000000   0.25000000   0.75000000   0.75000000   0.25000000   0.75000000   0.00000000   0.50000000   0.75000000   0.25000000   0.50000000   0.75000000   0.50000000   0.50000000   0.75000000   0.75000000   0.50000000   0.75000000   0.00000000   0.75000000   0.75000000   0.25000000   0.75000000   0.75000000   0.50000000   0.75000000   0.75000000   0.75000000   0.75000000   0.75000000   0.18750000   0.18750000   0.18750000   0.43750000   0.18750000   0.18750000   0.68750000   0.18750000   0.18750000   0.93750000   0.18750000   0.18750000   0.18750000   0.43750000   0.18750000   0.43750000   0.43750000   0.18750000   0.68750000   0.43750000   0.18750000   0.93750000   0.43750000   0.18750000   0.18750000   0.68750000   0.18750000   0.43750000   0.68750000   0.18750000   0.68750000   0.68750000   0.18750000   0.93750000   0.68750000   0.18750000   0.18750000   0.93750000   0.18750000   0.43750000   0.93750000   0.18750000   0.68750000   0.93750000   0.18750000   0.93750000   0.93750000   0.18750000   0.18750000   0.18750000   0.43750000   0.43750000   0.18750000   0.43750000   0.68750000   0.18750000   0.43750000   0.93750000   0.18750000   0.43750000   0.18750000   0.43750000   0.43750000   0.43750000   0.43750000   0.43750000   0.68750000   0.43750000   0.43750000   0.93750000   0.43750000   0.43750000   0.18750000   0.68750000   0.43750000   0.43750000   0.68750000   0.43750000   0.68750000   0.68750000   0.43750000   0.93750000   0.68750000   0.43750000   0.18750000   0.93750000   0.43750000   0.43750000   0.93750000   0.43750000   0.68750000   0.93750000   0.43750000   0.93750000   0.93750000   0.43750000   0.18750000   0.18750000   0.68750000   0.43750000   0.18750000   0.68750000   0.68750000   0.18750000   0.68750000   0.93750000   0.18750000   0.68750000   0.18750000   0.43750000   0.68750000   0.43750000   0.43750000   0.68750000   0.68750000   0.43750000   0.68750000   0.93750000   0.43750000   0.68750000   0.18750000   0.68750000   0.68750000   0.43750000   0.68750000   0.68750000   0.68750000   0.68750000   0.68750000   0.93750000   0.68750000   0.68750000   0.18750000   0.93750000   0.68750000   0.43750000   0.93750000   0.68750000   0.68750000   0.93750000   0.68750000   0.93750000   0.93750000   0.68750000   0.18750000   0.18750000   0.93750000   0.43750000   0.18750000   0.93750000   0.68750000   0.18750000   0.93750000   0.93750000   0.18750000   0.93750000   0.18750000   0.43750000   0.93750000   0.43750000   0.43750000   0.93750000   0.68750000   0.43750000   0.93750000   0.93750000   0.43750000   0.93750000   0.18750000   0.68750000   0.93750000   0.43750000   0.68750000   0.93750000   0.68750000   0.68750000   0.93750000   0.93750000   0.68750000   0.93750000   0.18750000   0.93750000   0.93750000   0.43750000   0.93750000   0.93750000   0.68750000   0.93750000   0.93750000   0.93750000   0.93750000   0.93750000  ``` ### KPOINTS  ```K-Points 0Gamma 1  1  1 0  0  0  ``` * We only need a single k\\-point, since the convergence is done via the super\\-cell size. ### INCAR  ```general: System\") = cd-C PREC = Accurate ALGO = FAST ISMEAR = 0  SIGMA = 0.1; IBRION = 6 PHON_LMC = .TRUE. PHON_NSTRUCT = 0 PHON_NTLIST = 1 PHON_TLIST = 0.0  ``` * The tags with \"PHON\\_\" control the electron\\-phonon related features. PHON\\_LMC enables the calculation of structures with random displacements (one shot or Monte Carlo) of the atoms according to the density matrix of a harmonic oscillator. By selecting PHON\\_NSTRUCT\\=0 a one\\-shot configuration (ZG configuration) is obtained. The tag PHON\\_NTLIST selects the number of temperatures for which the structure with the one shot calculation is obtained. This requires also the list of temperatures given by PHON\\_TLIST which have exact PHON\\_NTLIST number of elements.* IBRION\\=6 is selected to obtain the eigenvectors and eigenvalues of the dynamical matrix at the Gamma point. Calculation----------- This example will use a one\\-shot method \"Electron-phonon interactions theory\"), where only a single structure that contains the electron\\-phonon information is required for a given temperature.\u00a0The \"Gamma\" version of VASP is used throughout this example since only a single k point is used in the calculations. The calculation consists of two steps: 1. Obtain new \"distorted\" POSCAR file which contains special displacements. This calculation also contains the band gap of the original structure.2. Execute simple DFT calculation for the structure containing the special displacements to obtain the band gap.3. Extract ZPR as the difference between the band gaps from the two calculations. ### Obtain structure with special displacements To run the calculation *POSCAR.4x4x4* needs to be copied to *POSCAR* and *INCAR.init* to *INCAR*. Execute VASP.  Copy the OUTCAR file to *OUTCAR.init*. It will be later used for the band gap of the \"undistorted\" structure. The new POSCAR file containing the special displacements is given as *POSCAR.T\\=0\\.*. ### Calculate electronic levels of structure with special displacements Copy the file *POSCAR.T\\=0\\.* to *POSCAR*. Delete (or comment out with *\\#*) all the lines in the INCAR file related to \"PHON\\_\" so that it looks like the following:  ```System\") = cd-CPREC = AccurateALGO = FASTISMEAR = 0 SIGMA = 0.1;  ``` Execute VASP. Copy *OUTCAR* to *OUTCAR.T\\=0\\.*. ### Extract ZPR We extract the band gap renormalization as   \u0394  E  r m  \\=  E  S P  \u2212 E {\\\\displaystyle \\\\Delta E\\_{\\\\mathrm {rm} }\\=E\\_{\\\\mathrm {SP} }\\-E} where   E  S P {\\\\displaystyle E\\_{\\\\mathrm {SP} }}  and  E {\\\\displaystyle E}  are the band gaps with and without special displacements, respectively.  Since the 4x4x4 cell of cubic diamond has 3 degenerate bands at the valence band maximum and 6 degenerate bands at the conduction band minimum, they are averaged in the calculation of the band gap. This is necessary since the convergence with respect to cell size is drastically improved this way. Also, all perturbation theory calculations in the literature evaluate the band gap the same way, which ensures the compatibility of the different computational methods. The band gaps are extracted from the previously saved files *OUTCAR.init* and *OUTCAR.T\\=0\\.* using the following script: **Click to show/*extract\\_zpr.sh***  ```#!/bin/bash  i=\"OUTCAR.T=0.\"j=\"OUTCAR.init\" homo1=`awk '/NELECT/ {print $3/2}' $i`homo2=`awk '/NELECT/ {print $3/2-1}' $i`homo3=`awk '/NELECT/ {print $3/2-2}' $i`lumo1=`awk '/NELECT/ {print $3/2+var+1}' $i`lumo2=`awk '/NELECT/ {print $3/2+var+2}' $i`lumo3=`awk '/NELECT/ {print $3/2+var+3}' $i`lumo4=`awk '/NELECT/ {print $3/2+var+4}' $i`lumo5=`awk '/NELECT/ {print $3/2+var+5}' $i`lumo6=`awk '/NELECT/ {print $3/2+var+6}' $i`e1a=`grep \"   $homo1  \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e1b=`grep \"   $homo2  \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e1c=`grep \"   $homo3  \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`e2a=`grep \"   $lumo1  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2b=`grep \"   $lumo2  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2c=`grep \"   $lumo3  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2d=`grep \"   $lumo4  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2e=`grep \"   $lumo5  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`e2f=`grep \"   $lumo6  \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`    homo_ref=`awk '/NELECT/ {print $3/2}' $j`lumo_ref=`awk '/NELECT/ {print $3/2+var+1}' $j` h_ref=`grep \"   $homo_ref  \" $j | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`l_ref=`grep \"   $lumo_ref  \" $j | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   echo \"The band gap (in eV) without zero-point vibrations is:\"echo \"$h_ref $l_ref\" |awk '{print ($2-$1)}'echo \"The band gap (in eV) including zero-point vibrations is:\"echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f\" |awk '{print (($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)}'echo \"The zero-point renormalization of the band gap (in eV) is:\" echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f $h_ref $l_ref\" |awk '{print (($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)-($11-$10)}'  ``` To use the script please type:  ```bash extract_zpr.sh  ``` The output of the script should look like the following:  ```The band gap (in eV) without zero-point vibrations is:4.4049The band gap (in eV) including zero-point vibrations is:4.05102The zero-point renormalization of the band gap (in eV) is:-0.353883  ``` ### Better accuracy The accuracy of the band gap renormalization depends dominantly on the size of the super cell, so this is the quantity that has to be usually converged in this type of calculation. This example contains a POSCAR file for a 5x5x5 cell (*POSCAR.5x5x5*).After repeating all above steps with this POSCAR file the following results should be obtained:  ```The band gap (in eV) without zero-point vibrations is:4.1421The band gap (in eV) including zero-point vibrations is:3.83717The zero-point renormalization of the band gap (in eV) is:-0.304933  ``` The interested user can try to further increase the cell size, by making a super cell from the primitive cell (*POSCAR.prim*) provided by this tutorial (how to build a super cell is for example covered here). ### Temperature dependence of the band gap Here the temperature dependence of the band gap due to electron\\-phonon interactions is calculated. The input files are located in the directory  *TEMP\\_DEPENDENCE*. Switch to this directory. Copy *POSCAR.4x4x4* to *POSCAR* and *INCAR.init* to *INCAR*. The *INCAR* file contains following lines which are different from the calculation of the ZPR:  ```PHON_NTLIST = 8PHON_TLIST = 0.0 100.0 200.0 300.0 400.0 500.0 600.0 700.0  ``` After running the calculations several new POSCAR files are created.  Before running the calculations copy *INCAR.run\\_temp* to *INCAR*. Run a standard VASP calculation for each of them to obtain the band gap or use the script *run\\_temperature.sh* provided with this calculation: **Click to show/*run\\_temperature.sh***  ```#!/bin/bash # please enter your executable path herevasp_exec=./vasp_gam #please enter the number of processors used for VASP herenp=8 for i in 0 100 200 300 400 500 600 700 do   cp POSCAR.T\\=$i. POSCAR   mpirun -np $np $vasp_exec   mv OUTCAR OUTCAR.T\\=$idone  ```   To run the script please edit the file and set your VASP executable path (*vasp\\_exec*) and the number of processors you are going to use (*np*). To run the calculation type:  ```bash ./run_temperature.sh  ``` This step produces several OUTCAR files which can be analyzed using the script *extract\\_temp.sh*: **Click to show/*extract\\_temp.sh***  ```!/bin/bash  if [ -f gap_vs_temp.dat ]then   rm gap_vs_temp.dat fi touch gap_vs_temp.datcounter=0 for temp in 0 100 200 300 400 500 600 700 do   i=\"OUTCAR.T=$temp\"    homo1=`awk '/NELECT/ {print $3/2}' $i`   homo2=`awk '/NELECT/ {print $3/2-1}' $i`   homo3=`awk '/NELECT/ {print $3/2-2}' $i`   lumo1=`awk '/NELECT/ {print $3/2+var+1}' $i`   lumo2=`awk '/NELECT/ {print $3/2+var+2}' $i`   lumo3=`awk '/NELECT/ {print $3/2+var+3}' $i`   lumo4=`awk '/NELECT/ {print $3/2+var+4}' $i`   lumo5=`awk '/NELECT/ {print $3/2+var+5}' $i`   lumo6=`awk '/NELECT/ {print $3/2+var+6}' $i`   e1a=`grep \"^    $homo1   \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`   e1b=`grep \"^    $homo2   \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`   e1c=`grep \"^    $homo3   \" $i | head -$nkpt | sort -n -k 2 | tail -1 | awk '{print $2}'`   e2a=`grep \"^    $lumo1   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2b=`grep \"^    $lumo2   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2c=`grep \"^    $lumo3   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2d=`grep \"^    $lumo4   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2e=`grep \"^    $lumo5   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`   e2f=`grep \"^    $lumo6   \" $i | head -$nkpt | sort -n -k 2 | head -1 | awk '{print $2}'`    if [ $temp -eq \"0\" ]   then      ref=`echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f\" |awk '{print (($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)}'` fi    echo \"$e1a $e1b $e1c $e2a $e2b $e2c $e2d $e2e $e2f $temp $ref\" |awk '{print $10,(($4+$5+$6+$7+$8+$9)/6.0-($1+$2+$3)/3.0)-$11}' >> gap_vs_temp.datdone  ``` To run the script please type the following:  ```bash ./extract_temp.sh  ``` This script calculates the relative change of the band with respect to temperature (that means the offset is shifted to zero). The result is written to *gap\\_vs\\_temp.dat*. To plot the data please type the following:  ```gnuplot -e \"set terminal jpeg;set xlabel 'T (K)'; set ylabel 'band gap'; set style data lines; plot 'gap_vs_temp.dat', 'C_exp_points_offset0.dat' w circles, 'C_exp_fit_offset0.dat'\" > gap_vs_temp.jpg  ```   The resulting curve should look like the following: [](File_Temperature_dependence_of_cd-C_4x4x4.html) The experimental data (blue lines and circles) are taken from reference [\\[3]](#cite_note-ODonnell:APL:1991-3). Temperature dependence of the band gap including volume effects--------------------------------------------------------------- In the previous step, we see that the experimental slope of the temperature dependence of the band gap is underestimated. To improve the agreement we will now also consider the volume dependence. The volume dependence is calculated from quasi\\-harmonic calculations [\\[4]](#cite_note-Baroni:RMG:2010-4).  First save your obtained band gap vs. temperature curve, since it will be overwritten otherwise. Type the following:  ```mv gap_vs_temp.dat gap_vs_temp_novol.dat  ``` Go out of the directory *./TEMP\\_DEPENDENCE* and go to the directory *./QUASI\\_HARMONIC*. For the purpose of this tutorial, the quasi\\-harmonic calculations will be performed for the 4x4x4 cell but for exact calculations, one needs to go to larger cell sizes until the results are converged. There are three scripts in this directory to perform the quasi\\-harmonic calculations: 1. *quasi\\_harm\\_4x4x4\\_diamond\\_create\\_pos\\_and\\_run\\_vasp.sh*2. *quasi\\_harm\\_4x4x4\\_diamond\\_make\\_energy\\_vs\\_volume\\_plots.sh*3. *quasi\\_harm\\_4x4x4\\_diamond\\_obtain\\_fitting.sh* For a quasi\\-harmonic fit we need free energy vs. volume curves at different temperatures. Starting from the equilibrium volume we need to create POSCAR files at different volumes. To do this use the script: **Click to show/*quasi\\_harm\\_4x4x4\\_diamond\\_create\\_pos\\_and\\_run\\_vasp.sh***  ```#! /bin/bash # please enter your executable path herevasp_exec=./vasp_gam #please enter the number of processors used for VASP herenp=8 cp INCAR.qh INCAR for i in 6.13521592 6.27789536 6.4205748 6.56325424 6.70593368 6.84861312 6.99129256 7.133972 7.27665144 7.41933088 7.56201032 7.70468976 7.8473692 7.99004864 8.13272808 dosed \"s/7.13397200/${i}/g\" POSCAR.4x4x4 > POSCAR_$icp POSCAR_$i POSCARmpirun -np 8 $vasp_exec mv OUTCAR OUTCAR_$idone  ``` This script creates 15 POSCAR files where the volume is varied in both directions in steps of 2 percent with respect to the starting volume. It also runs the necessary VASP calculations to obtain the dynamical matrix. To run this script please set your executable path and number of processors in the script and type:  ```bash ./quasi_harm_4x4x4_diamond_create_pos_and_run_vasp.sh  ``` This script renames all the OUTCAR files for each volume which are needed in the next step.In that step the free energy vs. volume curves need to be extracted for each temperature. To do this use the script: **Click to show/*quasi\\_harm\\_4x4x4\\_diamond\\_make\\_energy\\_vs\\_volume\\_plots.sh***  ```#!/bin/bash bandshift=0gwrun=-1dgbd=-1val=-1con=-1gwldadiff=-1test=-1while [[ $# -gt 0 ]] do   key=\"$1\"   case $key in   esac   shiftdone if [ -f \"helpscript.perl\" ]; then   rm helpscript.perl fi cat > helpscript.perl  <<EOF#!/bin/perl use strict;use warnings; my \\$zahler=0;my @entropy=0;my \\$ezp=0;my \\$fhelmholtz=0;my \\$uenergy;my \\$kboltzmann=8.6173303*10**(-5.0);my \\$ntemp=8;my \\$tmax=700;my \\$tmin=0;my \\$tstep=100;for (my \\$itemp=1;\\$itemp<=\\$ntemp;\\$itemp++) {   \\$entropy[\\$itemp]=0; }while (<>) {   chomp;   \\$_=~s/^/ /;   my @help=split(/[\\t,\\s]+/);   \\$zahler=\\$zahler+1;   if (\\$zahler == 1) {\\$uenergy=\\$help[1];}   else  {      my \\$homega=\\$help[2]/1000;      \\$ezp=\\$ezp+\\$homega*0.5;      for (my \\$itemp=1;\\$itemp<=\\$ntemp;\\$itemp++) {         my \\$temp=(\\$itemp-1)*\\$tstep+\\$tmin;         my \\$kbt=\\$kboltzmann*\\$temp;         if (\\$temp < 0.0000001)  { }         else {              \\$entropy[\\$itemp]=\\$entropy[\\$itemp]-\\$kboltzmann*log(1-exp(-\\$homega/\\$kbt));              \\$entropy[\\$itemp]=\\$entropy[\\$itemp]+\\$kboltzmann*\\$homega/\\$kbt*(1/(exp(\\$homega/\\$kbt)-1)); } } }   last if eof; } \\$ezp=\\$ezp; #/ \\$zahler; for (my \\$itemp=1;\\$itemp<=\\$ntemp;\\$itemp++) {    my \\$temp=(\\$itemp-1)*\\$tstep+\\$tmin;     \\$entropy[\\$itemp]=\\$entropy[\\$itemp]; # / \\$zahler;     \\$fhelmholtz=\\$uenergy+\\$ezp-\\$temp*\\$entropy[\\$itemp];    printf (\"%15.8e %15.8e\\",\\$temp,\\$fhelmholtz); }printf (\"#NOTEMP %15.8e\\",\\$uenergy); EOF rm OUTTEMP*first=0for i in OUTCAR_*; do    echo \"Starting $i\"   v2=${i##OUTCAR_}   if [ -f \"helpfile.help\" ]; then      rm helpfile.help fi   touch helpfile.help   cp OUTCAR_$v2 OUTCAR   awk '/free energy/' OUTCAR | tail -n 1| awk '{print $5}' >> helpfile.help   awk '/[0-9]* f .* THz/ {print $1,$10}' OUTCAR >> helpfile.help   awk '/[0-9]* f.i.*THz/ {print $1,$9}' OUTCAR >> helpfile.help   volume=`awk '/volume of cell/ {print $5}' OUTCAR | tail -n 1`    perl helpscript.perl helpfile.help > hhhhelp.txt    runcount=0   while read line; do      runcount=$((runcount+1))      if [[ $first -eq 0 ]]; then         echo $line | awk -v var=\"$volume\" '{print var,$2,$1}' > OUTTEMP_$runcount      else         echo $line | awk -v var=\"$volume\" '{print var,$2}' >> OUTTEMP_$runcount fi   done < ./hhhhelp.txt    first=1done for i in OUTTEMP_*; do   v2=${i##OUTTEMP_}   mv OUTTEMP_$v2 OUTHELP   sort -n -k 1 OUTHELP > OUTTEMP_$v2done rm helpfile.helprm helpscript.perlrm hhhhelp.txtrm OUTHELP  ``` To use this script please type:  ```bash ./quasi_harm_4x4x4_diamond_make_energy_vs_volume_plots.sh  ``` The free energy curves for each volume are saved to *OUTTEMP\\_\\**. Finally to obtain the equilibrium volume at each temperature use the following script: **Click to show/*quasi\\_harm\\_4x4x4\\_diamond\\_obtain\\_fitting.sh***  ```#!/bin/bash for i in OUTTEMP_* do   cp $i OUTTEMP.current   #extract temperature   temp=`head -n 1 OUTTEMP.current|awk '{print $3}'`   #do fitting   gnuplot -e \"E(V)=E0+9.0/8.0*B0*V0*((V0/V)**(2.0/3.0)-1)**2 + 9.0/16.0*B0*\\      (B0P-4)*V0*((V0/V)**(2.0/3.0)-1.0)**3.0 + R*((V0/V)**(2.0/3.0)-1.0)**4.0;\\      B0P = 1;B0 = 1;V0 = 720;E0 = -1150;R  = -1.0;fit E(x) 'OUTTEMP.current'  u 1:2 via B0P,B0,V0,E0,R\" &> suppress_output   #extract volume from fit   a=`grep \"V0\" fit.log|grep \"=\" |tail -n 1|awk '{print ($3/2.0)**(1.0/3.0)}'`   #print temperature and volume to    echo \"temperature: $temp, a_latt: $a\" done rm suppress_outputrm OUTTEMP.current  ``` To run this script type:  ```bash ./quasi_harm_4x4x4_diamond_obtain_fitting.sh  ``` The output should look like the following:  ```temperature: 0.00000000e+00, a_latt: 7.18012temperature: 1.00000000e+02, a_latt: 7.18014temperature: 2.00000000e+02, a_latt: 7.18064temperature: 3.00000000e+02, a_latt: 7.18267temperature: 4.00000000e+02, a_latt: 7.18613temperature: 5.00000000e+02, a_latt: 7.19037temperature: 6.00000000e+02, a_latt: 7.19493temperature: 7.00000000e+02, a_latt: 7.19959temperature: #NOTEMP, a_latt: 7.15218  ``` Now switch back to the folder *./TEMP\\_DEPENDENCE* and replace the lattice parameters at each temperature in the *POSCAR.T\\=\\** files by the one obtained for the above fit. After that rerun the scripts *run\\_temperature.sh* and *extract\\_temp.sh*. To plot the newly obtained curve together with the other curves please type:  ```gnuplot -e \"set terminal jpeg;set xlabel 'T (K)'; set ylabel 'band gap'; set style data lines; plot 'gap_vs_temp_novol.dat', 'C_exp_points_offset0.dat' w circles, 'C_exp_fit_offset0.dat', 'gap_vs_temp.dat'\" > gap_vs_temp_volume.jpg  ``` The resulting plot should look like the following: [](File_Temperature_dependence_of_cd-C_4x4x4_vol.html) Now we see in this plot that by adding volume effects a better agreement with experiment is obtained. For this tutorial, we only used a 4x4x4 cell since larger cells would be already quite time\\-consuming, but for the converged 5x5x5 cell both curves should look slightly worse compared to experiment. A discrepancy between experiment and theory is expected, since the electron exchange and correlation are not sufficiently described within PBE which was used in this example. To get a really excellent agreement one needs to use the GW approximation [\\[5]](#cite_note-karsai:njp:2018-5). Strictly speaking, the correct way to add volume effects to electron\\-phonon interactions would be to first change the volume for each temperature and then calculate the electron\\-phonon interaction for that temperature. In this tutorial and also in reference [\\[5]](#cite_note-karsai:njp:2018-5), it is done the other way around. Hence the electron\\-phonon interactions need to be calculated only once. In reference [\\[5]](#cite_note-karsai:njp:2018-5) we observed that the two approaches give very similar results."}
{"file_name": "Thermodynamic_integration_with_harmonic_reference.md", "content": "The Helmholtz free energy (  A {\\\\displaystyle A} ) of a fully interacting system (1\\) can be expressed in terms of that of system harmonic in Cartesian coordinates (0,  x {\\\\displaystyle \\\\mathbf {x} } ) as follows  A  1  \\=  A  0 ,  x  \\+ \u0394  A  0 ,  x  \u2192 1 {\\\\displaystyle A\\_{1}\\=A\\_{0,\\\\mathbf {x} }\\+\\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 1}} where   \u0394  A  0 ,  x  \u2192 1 {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 1}}  is anharmonic free energy. The latter term can be determined by means of thermodynamic integration[\\[1]](#cite_note-1) (TI)  \u0394  A  0 ,  x  \u2192 1  \\=  \u222b  0  1  d \u03bb \u27e8  V  1  \u2212  V  0 ,  x  \u27e9  \u03bb {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 1}\\=\\\\int \\_{0}^{1}d\\\\lambda \\\\langle V\\_{1}\\-V\\_{0,\\\\mathbf {x} }\\\\rangle \\_{\\\\lambda }} with   V  i {\\\\displaystyle V\\_{i}}  being the potential energy of system   i {\\\\displaystyle i}  ,  \u03bb {\\\\displaystyle \\\\lambda }  is a coupling constant and   \u27e8 \u22ef  \u27e9  \u03bb {\\\\displaystyle \\\\langle \\\\cdots \\\\rangle \\_{\\\\lambda }}  is the NVT ensemble average of the system driven by the Hamiltonian  H  \u03bb  \\= \u03bb  H  1  \\+ ( 1 \u2212 \u03bb )  H  0 ,  x {\\\\displaystyle {\\\\mathcal {H}}\\_{\\\\lambda }\\=\\\\lambda {\\\\mathcal {H}}\\_{1}\\+(1\\-\\\\lambda ){\\\\mathcal {H}}\\_{0,\\\\mathbf {x} }} Free energy of harmonic reference system within the quasi\\-classical theory writes  A  0 ,  x  \\=  A  e l  (  x  0  ) \u2212  k  B  T  \u2211  i \\= 1  N  v i b  ln \u2061  k  B  T  \u210f  \u03c9  i {\\\\displaystyle A\\_{0,\\\\mathbf {x} }\\=A\\_{\\\\mathrm {el} }(\\\\mathbf {x} \\_{0})\\-k\\_{\\\\mathrm {B} }T\\\\sum \\_{i\\=1}^{N\\_{\\\\mathrm {vib} }}\\\\ln {\\\\frac {k\\_{\\\\mathrm {B} }T}{\\\\hbar \\\\omega \\_{i}}}} with the electronic free energy   A  e l  (  x  0  ) {\\\\displaystyle A\\_{\\\\mathrm {el} }(\\\\mathbf {x} \\_{0})}  for the configuration corresponding to the potential energy minimum with the atomic position vector   x  0 {\\\\displaystyle \\\\mathbf {x} \\_{0}}  ,the number of vibrational degrees of freedom   N  v i b {\\\\displaystyle N\\_{\\\\mathrm {vib} }} , and the angular frequency   \u03c9  i {\\\\displaystyle \\\\omega \\_{i}}  of vibrational mode   i {\\\\displaystyle i}  obtained using the Hesse matrix   H  \\_  x {\\\\displaystyle {\\\\underline {\\\\mathbf {H} }}^{\\\\mathbf {x} }}  .Finally, the harmonic potential energy is expressed as   V  0 ,  x  (  x  ) \\=  V  0 ,  x  (  x  0  ) \\+  1 2  (  x  \u2212  x  0  )  T  H  \\_  x  (  x  \u2212  x  0  ) {\\\\displaystyle V\\_{0,\\\\mathbf {x} }(\\\\mathbf {x} )\\=V\\_{0,\\\\mathbf {x} }(\\\\mathbf {x} \\_{0})\\+{\\\\frac {1}{2}}(\\\\mathbf {x} \\-\\\\mathbf {x} \\_{0})^{T}{\\\\underline {\\\\mathbf {H} }}^{\\\\mathbf {x} }(\\\\mathbf {x} \\-\\\\mathbf {x} \\_{0})} Thus, a conventional TI calculation consists of the following steps: 1. determine   x  0 {\\\\displaystyle \\\\mathbf {x} \\_{0}}  and  V  0 ,  x  (  x  0  ) {\\\\displaystyle V\\_{0,\\\\mathbf {x} }(\\\\mathbf {x} \\_{0})}  in structural relaxation2. compute   \u03c9  i {\\\\displaystyle \\\\omega \\_{i}}  in vibrational analysis3. use the data obtained in the point 2 to determine   H  \\_  x {\\\\displaystyle {\\\\underline {\\\\mathbf {H} }}^{\\\\mathbf {x} }}  that defines the harmonic forcefield4. perform NVT MD simulations for several values of   \u03bb \u2208 \u27e8 0 , 1 \u27e9 {\\\\displaystyle \\\\lambda \\\\in \\\\langle 0,1\\\\rangle }  and determine   \u27e8  V  1  \u2212  V  0 ,  x  \u27e9 {\\\\displaystyle \\\\langle V\\_{1}\\-V\\_{0,\\\\mathbf {x} }\\\\rangle } 5. integrate   \u27e8  V  1  \u2212  V  0 ,  x  \u27e9 {\\\\displaystyle \\\\langle V\\_{1}\\-V\\_{0,\\\\mathbf {x} }\\\\rangle }  over the   \u03bb {\\\\displaystyle \\\\lambda }  grid and compute   \u0394  A  0 ,  x  \u2192 1 {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 1}} Unfortunately, there are several problems linked with such a straightforward approach. First, the systems with rotational and/or translational degrees of freedom cannot be treated in a straightforward manner because   V  0 ,  x  (  x  ) {\\\\displaystyle V\\_{0,\\\\mathbf {x} }(\\\\mathbf {x} )}  is not invariant under rotations and translations. Conventional TI is thus unsuitable for simulations of gas phase molecules or adsorbate\\-substrate systems. and this problem also imposes restrictions on the choice of thermostat used in NVT simulation (Langevin thermostat, for instance, does not conserve position of the center of mass and is therefore unsuitable for the use in conventional TI). Furthermore, if the Hesse matrix of the harmonic system has one or more eigenvalues that nearly vanish, the simulations with   \u03bb \u2192 {\\\\displaystyle \\\\lambda \\\\rightarrow }  0 is likely to generate unphysical configurations causing serious convergence issues. These problems have been addressed in series of works by Amsler et al.[\\[2]](#cite_note-2)[\\[3]](#cite_note-3) First, the method was formulated in terms of rotationally and translationally invariant internal coordinates   q  \\=  q  (  x  ) {\\\\displaystyle \\\\mathbf {q} \\=\\\\mathbf {q} (\\\\mathbf {x} )} , whereby the free energy of interacting system is repartitioned as follows:  A  1  \\=  A  0 ,  x  \\+ \u0394  A  0 ,  x  \u2192 0 ,  q  \\+ \u0394  A  0 ,  q  \u2192 1 {\\\\displaystyle A\\_{1}\\=A\\_{0,\\\\mathbf {x} }\\+\\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 0,\\\\mathbf {q} }\\+\\\\Delta A\\_{0,\\\\mathbf {q} \\\\rightarrow 1}} where   \u0394  A  0 ,  x  \u2192 0 ,  q {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 0,\\\\mathbf {q} }}  is the free energy change due to transformation from the system harmonic in   x {\\\\displaystyle \\\\mathbf {x} }  into the system harmonic in   q {\\\\displaystyle \\\\mathbf {q} }  and  \u0394  A  0 ,  q  \u2192 1 {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {q} \\\\rightarrow 1}}  is that for the transformation of the latter into a fully interacting system. The force field for the system harmonic in   q {\\\\displaystyle \\\\mathbf {q} }  is defined as:   V  0 ,  q  (  q  ) \\=  V  0 ,  q  (  q  0  ) \\+  1 2  (  q  \u2212  q  0  )  T  H \\_  q  (  q  \u2212  q  0  ) {\\\\displaystyle V\\_{0,\\\\mathbf {q} }(\\\\mathbf {q} )\\=V\\_{0,\\\\mathbf {q} }(\\\\mathbf {q} \\_{0})\\+{\\\\frac {1}{2}}(\\\\mathbf {q} \\-\\\\mathbf {q} \\_{0})^{T}\\\\mathbf {{\\\\underline {H}}^{q}} (\\\\mathbf {q} \\-\\\\mathbf {q} \\_{0})} where   q  0  \\=  q  (  x  0  ) {\\\\displaystyle \\\\mathbf {q} \\_{0}\\=\\\\mathbf {q} (\\\\mathbf {x} \\_{0})}  and the Hesse matrix   H \\_  q {\\\\displaystyle \\\\mathbf {\\\\underline {H}} ^{\\\\mathbf {q} }}  defined for a potential energy minimum is related to   H \\_  x {\\\\displaystyle \\\\mathbf {\\\\underline {H}} ^{\\\\mathbf {x} }}  via  H \\_  x  \\=  B \\_  T  H \\_  q  B \\_ {\\\\displaystyle \\\\mathbf {\\\\underline {H}} ^{\\\\mathbf {x} }\\=\\\\mathbf {\\\\underline {B}} ^{T}\\\\mathbf {\\\\underline {H}} ^{\\\\mathbf {q} }\\\\mathbf {\\\\underline {B}} } with   B \\_  i , j  \\=  \u2202  q  i  \u2202  x  j {\\\\displaystyle \\\\mathbf {\\\\underline {B}} \\_{i,j}\\={\\\\frac {\\\\partial q\\_{i}}{\\\\partial x\\_{j}}}} being the Wilson matrix. Note that the calculation of the term   \u0394  A  0 ,  x  \u2192 0 ,  q {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {x} \\\\rightarrow 0,\\\\mathbf {q} }}  is inexpensive as it corresponds to a force field to force field transformation. Furthermore, this term vanishes in the case of phase volume conserving coordinates, such as interatomic distances.  The TI calculations in internal coordinates are performed in NVT ensemble using any thermostat available in VASP. The coupling parameter   \u03bb {\\\\displaystyle \\\\lambda }  is defined by setting the parameter TI\\_LAMBDA in the INCAR file.The set of internal coordinates used in the TI calculation are defined via the ICONST file by setting the status to 3\\. The Hesse matrix   H \\_  x {\\\\displaystyle \\\\mathbf {\\\\underline {H}} ^{\\\\mathbf {x} }}  is provided in the file HESSEMAT and its transformation into   H \\_  q {\\\\displaystyle \\\\mathbf {\\\\underline {H}} ^{\\\\mathbf {q} }}  is performed by VASP. The potential energies of the system 1 and 0,  q {\\\\displaystyle \\\\mathbf {q} } , needed to compute   \u27e8  V  1  \u2212  V  0 ,  q  \u27e9 {\\\\displaystyle \\\\langle V\\_{1}\\-V\\_{0,\\\\mathbf {q} }\\\\rangle }  used as integrant in the TI expression for   \u0394  A  0 ,  q  \u2192 1 {\\\\displaystyle \\\\Delta A\\_{0,\\\\mathbf {q} \\\\rightarrow 1}} , are written in the file REPORT in lines introduce by a string \"e\\_ti\\>\""}
{"file_name": "Exchange-correlation_functional.md", "content": "In the Kohn\\-Sham (KS) formulation of density\\-functional theory (DFT)[\\[1]](#cite_note-hohenberg:pr:1964-1)[\\[2]](#cite_note-kohn:pr:1965-2), the total energy is given by  E  t o t  K S \u2212 D F T  \\= \u2212  1 2  \u2211  i  \u222b  \u03c8  i  \u2217  (  r  )  \u2207  2  \u03c8  i  (  r  )  d  3  r \u2212  \u2211  A  \u222b  Z  A  \\|  r  \u2212  R  A  \\|  n (  r  )  d  3  r \\+  1 2  \u222b \u222b  n (  r  ) n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r  d  3  r \u2032  \\+  E  x c  \\+  1 2  \u2211  A \u2260 B  Z  A  Z  B  \\|  R  A  \u2212  R  B  \\| {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}\\=\\-{\\\\frac {1}{2}}\\\\sum \\_{i}\\\\int \\\\psi \\_{i}^{\\*}({\\\\bf {r}})\\\abla ^{2}\\\\psi \\_{i}({\\\\bf {r}})d^{3}r\\-\\\\sum \\_{A}\\\\int {\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}n({\\\\bf {r}})d^{3}r\\+{\\\\frac {1}{2}}\\\\int \\\\int {\\\\frac {n({\\\\bf {r}})n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}rd^{3}r'\\+E\\_{\\\\rm {xc}}\\+{\\\\frac {1}{2}}\\\\sum \\_{A\\\eq B}{\\\\frac {Z\\_{A}Z\\_{B}}{\\\\left\\\\vert {\\\\bf {R}}\\_{A}\\-{\\\\bf {R}}\\_{B}\\\\right\\\\vert }}} where the terms on the right\\-hand side represent the non\\-interacting kinetic energy of the electrons, the electrons\\-nuclei attraction energy, the classical Coulomb electron\\-electron repulsive energy, the exchange\\-correlation energy, and the nuclei\\-nuclei repulsion energy, respectively. The KS orbitals   \u03c8  i {\\\\displaystyle \\\\psi \\_{i}}  and the electronic density   n \\=  \u2211  i  \\|  \u03c8  i  \\|  2 {\\\\displaystyle n\\=\\\\sum \\_{i}\\\\left\\\\vert \\\\psi \\_{i}\\\\right\\\\vert ^{2}}  that are used to evaluate   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  are obtained by solving self\\-consistently the KS equations  (  \u2212  1 2  \u2207  2  \u2212  \u2211  A  Z  A  \\|  r  \u2212  R  A  \\|  \\+ \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r \u2032  \\+  v  x c  (  r  )  )  \u03c8  i  (  r  ) \\=  \u03f5  i  \u03c8  i  (  r  ) . {\\\\displaystyle \\\\left(\\-{\\\\frac {1}{2}}\\\abla ^{2}\\-\\\\sum \\_{A}{\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}\\+\\\\int {\\\\frac {n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}r'\\+v\\_{\\\\rm {xc}}({\\\\bf {r}})\\\\right)\\\\psi \\_{i}({\\\\bf {r}})\\=\\\\epsilon \\_{i}\\\\psi \\_{i}({\\\\bf {r}}).} The only terms in   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  and in the KS equations that are not known exactly are the **exchange\\-correlation energy functional**   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and potential   v  x c  \\= \u03b4  E  x c  /  \u03b4 n {\\\\displaystyle v\\_{\\\\rm {xc}}\\=\\\\delta E\\_{\\\\rm {xc}}/\\\\delta n} . Therefore, the accuracy of the calculated properties depends strongly on the approximations used for   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and  v  x c {\\\\displaystyle v\\_{\\\\rm {xc}}}  . Several hundreds of approximations for the **exchange and correlation** have been proposed[\\[3]](#cite_note-libxc_list-3). They can be classified into families: the local density approximation (LDA), generalized gradient approximation (GGA), meta\\-GGA, and hybrid. There is also the possibility to include van der Waals corrections or an on\\-site Coulomb repulsion using DFT\\+U on top of another functional. More details on the different types of approximations available in VASP and how to use them can be found in the pages and subcategories listed below. How to------ * Semilocal functionals:\t+ LDA and GGA: GGA\t+ Meta\\-GGA: METAGGA* Hybrids: LHFCALC, AEXX, HFSCREEN and list of hybrid functionals* DFT\\+U: LDAU and LDAUTYPE* Atom\\-pairwise and many\\-body methods for van der Waals interactions (selected with the IVDW tag):\t+ Methods from Grimme et al.:\t\t- DFT\\-D2[\\[4]](#cite_note-grimme:jcc:06-4)\t\t- DFT\\-D3[\\[5]](#cite_note-grimme:jcp:10-5)[\\[6]](#cite_note-grimme:jcc:11-6)\t\t- DFT\\-D4[\\[7]](#cite_note-caldeweyher:jcp:2019-7) (available as of VASP.6\\.2 as external package)\t+ Methods from Tkatchenko, Scheffler et al.:\t\t- Tkatchenko\\-Scheffler method[\\[8]](#cite_note-tkatchenko:prl:09-8)\t\t- Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning[\\[9]](#cite_note-bucko:jctc:13-9)[\\[10]](#cite_note-bucko:jcp:14-10)\t\t- Self\\-consistent screening in Tkatchenko\\-Scheffler method[\\[11]](#cite_note-tkatchenko:prl:12-11)\t\t- Many\\-body dispersion energy[\\[11]](#cite_note-tkatchenko:prl:12-11)[\\[12]](#cite_note-ambrosetti:jcp:14-12)\t\t- Many\\-body\\_dispersion\\_energy\\_with\\_fractionally\\_ionic\\_model\\_for\\_polarizability[\\[13]](#cite_note-gould:jctc:2016_a-13)[\\[14]](#cite_note-gould:jctc:2016_b-14)\t\t- Library libMBD of many\\-body dispersion methods[\\[15]](#cite_note-libmbd_1-15)[\\[16]](#cite_note-libmbd_2-16)[\\[17]](#cite_note-hermann:jcp:2023-17)\t+ dDsC dispersion correction[\\[18]](#cite_note-steinmann:jcp:11-18)[\\[19]](#cite_note-steinmann:jctc:11-19)\t+ DFT\\-ulg[\\[20]](#cite_note-kim:jpcl:2012-20)* Nonlocal vdW\\-DF functionals for van der Waals interactions: LUSE\\_VDW and IVDW\\_NL"}
{"file_name": "Exchange-correlation_functionals.md", "content": "In the Kohn\\-Sham (KS) formulation of density\\-functional theory (DFT)[\\[1]](#cite_note-hohenberg:pr:1964-1)[\\[2]](#cite_note-kohn:pr:1965-2), the total energy is given by  E  t o t  K S \u2212 D F T  \\= \u2212  1 2  \u2211  i  \u222b  \u03c8  i  \u2217  (  r  )  \u2207  2  \u03c8  i  (  r  )  d  3  r \u2212  \u2211  A  \u222b  Z  A  \\|  r  \u2212  R  A  \\|  n (  r  )  d  3  r \\+  1 2  \u222b \u222b  n (  r  ) n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r  d  3  r \u2032  \\+  E  x c  \\+  1 2  \u2211  A \u2260 B  Z  A  Z  B  \\|  R  A  \u2212  R  B  \\| {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}\\=\\-{\\\\frac {1}{2}}\\\\sum \\_{i}\\\\int \\\\psi \\_{i}^{\\*}({\\\\bf {r}})\\\abla ^{2}\\\\psi \\_{i}({\\\\bf {r}})d^{3}r\\-\\\\sum \\_{A}\\\\int {\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}n({\\\\bf {r}})d^{3}r\\+{\\\\frac {1}{2}}\\\\int \\\\int {\\\\frac {n({\\\\bf {r}})n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}rd^{3}r'\\+E\\_{\\\\rm {xc}}\\+{\\\\frac {1}{2}}\\\\sum \\_{A\\\eq B}{\\\\frac {Z\\_{A}Z\\_{B}}{\\\\left\\\\vert {\\\\bf {R}}\\_{A}\\-{\\\\bf {R}}\\_{B}\\\\right\\\\vert }}} where the terms on the right\\-hand side represent the non\\-interacting kinetic energy of the electrons, the electrons\\-nuclei attraction energy, the classical Coulomb electron\\-electron repulsive energy, the exchange\\-correlation energy, and the nuclei\\-nuclei repulsion energy, respectively. The KS orbitals   \u03c8  i {\\\\displaystyle \\\\psi \\_{i}}  and the electronic density   n \\=  \u2211  i  \\|  \u03c8  i  \\|  2 {\\\\displaystyle n\\=\\\\sum \\_{i}\\\\left\\\\vert \\\\psi \\_{i}\\\\right\\\\vert ^{2}}  that are used to evaluate   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  are obtained by solving self\\-consistently the KS equations  (  \u2212  1 2  \u2207  2  \u2212  \u2211  A  Z  A  \\|  r  \u2212  R  A  \\|  \\+ \u222b  n (  r \u2032  )  \\|  r  \u2212  r \u2032  \\|  d  3  r \u2032  \\+  v  x c  (  r  )  )  \u03c8  i  (  r  ) \\=  \u03f5  i  \u03c8  i  (  r  ) . {\\\\displaystyle \\\\left(\\-{\\\\frac {1}{2}}\\\abla ^{2}\\-\\\\sum \\_{A}{\\\\frac {Z\\_{A}}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {R}}\\_{A}\\\\right\\\\vert }}\\+\\\\int {\\\\frac {n({\\\\bf {r'}})}{\\\\left\\\\vert {\\\\bf {r}}\\-{\\\\bf {r'}}\\\\right\\\\vert }}d^{3}r'\\+v\\_{\\\\rm {xc}}({\\\\bf {r}})\\\\right)\\\\psi \\_{i}({\\\\bf {r}})\\=\\\\epsilon \\_{i}\\\\psi \\_{i}({\\\\bf {r}}).} The only terms in   E  t o t  K S \u2212 D F T {\\\\displaystyle E\\_{\\\\rm {tot}}^{\\\\rm {KS\\-DFT}}}  and in the KS equations that are not known exactly are the **exchange\\-correlation energy functional**   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and potential   v  x c  \\= \u03b4  E  x c  /  \u03b4 n {\\\\displaystyle v\\_{\\\\rm {xc}}\\=\\\\delta E\\_{\\\\rm {xc}}/\\\\delta n} . Therefore, the accuracy of the calculated properties depends strongly on the approximations used for   E  x c {\\\\displaystyle E\\_{\\\\rm {xc}}}  and  v  x c {\\\\displaystyle v\\_{\\\\rm {xc}}}  . Several hundreds of approximations for the **exchange and correlation** have been proposed[\\[3]](#cite_note-libxc_list-3). They can be classified into families: the local density approximation (LDA), generalized gradient approximation (GGA), meta\\-GGA, and hybrid. There is also the possibility to include van der Waals corrections or an on\\-site Coulomb repulsion using DFT\\+U on top of another functional. More details on the different types of approximations available in VASP and how to use them can be found in the pages and subcategories listed below. How to------ * Semilocal functionals:\t+ LDA and GGA: GGA\t+ Meta\\-GGA: METAGGA* Hybrids: LHFCALC, AEXX, HFSCREEN and list of hybrid functionals* DFT\\+U: LDAU and LDAUTYPE* Atom\\-pairwise and many\\-body methods for van der Waals interactions (selected with the IVDW tag):\t+ Methods from Grimme et al.:\t\t- DFT\\-D2[\\[4]](#cite_note-grimme:jcc:06-4)\t\t- DFT\\-D3[\\[5]](#cite_note-grimme:jcp:10-5)[\\[6]](#cite_note-grimme:jcc:11-6)\t\t- DFT\\-D4[\\[7]](#cite_note-caldeweyher:jcp:2019-7) (available as of VASP.6\\.2 as external package)\t+ Methods from Tkatchenko, Scheffler et al.:\t\t- Tkatchenko\\-Scheffler method[\\[8]](#cite_note-tkatchenko:prl:09-8)\t\t- Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning[\\[9]](#cite_note-bucko:jctc:13-9)[\\[10]](#cite_note-bucko:jcp:14-10)\t\t- Self\\-consistent screening in Tkatchenko\\-Scheffler method[\\[11]](#cite_note-tkatchenko:prl:12-11)\t\t- Many\\-body dispersion energy[\\[11]](#cite_note-tkatchenko:prl:12-11)[\\[12]](#cite_note-ambrosetti:jcp:14-12)\t\t- Many\\-body\\_dispersion\\_energy\\_with\\_fractionally\\_ionic\\_model\\_for\\_polarizability[\\[13]](#cite_note-gould:jctc:2016_a-13)[\\[14]](#cite_note-gould:jctc:2016_b-14)\t\t- Library libMBD of many\\-body dispersion methods[\\[15]](#cite_note-libmbd_1-15)[\\[16]](#cite_note-libmbd_2-16)[\\[17]](#cite_note-hermann:jcp:2023-17)\t+ dDsC dispersion correction[\\[18]](#cite_note-steinmann:jcp:11-18)[\\[19]](#cite_note-steinmann:jctc:11-19)\t+ DFT\\-ulg[\\[20]](#cite_note-kim:jpcl:2012-20)* Nonlocal vdW\\-DF functionals for van der Waals interactions: LUSE\\_VDW and IVDW\\_NL"}
{"file_name": "ML_CX.md", "content": "ML\\_CX= \\[real]   Default: **ML\\_CX** \\= 0\\.0nDescription: The parameter determines to which value the threshold (ML\\_CTIFOR) is updated within the machine learning force field methods.  --- The use of this tag in combination with the learning algorithms is described here: here. If ML\\_ICRITERIA\\>0, ML\\_CTIFOR is set to the average of the errors of the forces stored in a history. Note that ML\\_ICRITERIA\\=1 and ML\\_ICRITERIA\\=2, average over different data. In the first case the average is performed over errors after updates of the force fields, and in the second case over all recent error estimates (see ML\\_ICRITERIA). In both cases, if ML\\_CTIFOR is updated, it is set to  ML\\_CTIFOR \\= (average of the stored errors in the history) \\*(1\\.0 \\+ ML\\_CX). Obviously setting ML\\_CX to a positive value will result in fewer first principles calculations and fewer updates of the MLFF, whereas negative values result in more frequent first principles calculations (as well as updates of the MLFF). Typical values of ML\\_CX are between \\-0\\.2 and 0\\.0 for ML\\_ICRITERIA\\=1, and 0\\.0 and 0\\.3 for ML\\_ICRITERIA\\=2 (a good starting value is 0\\.2 for ML\\_ICRITERIA\\=2\\). For training runs using heating, the default usually results in very well balanced machine learned force fields. When the training is performed at a fixed temperature, it is often desirable to decrease to ML\\_CX\\=\\-0\\.1, in order to increase the number of first principle calculations and thus the size of the training set (the default can result in too few training data). The number of entries in the history are controlled by ML\\_MHIS for ML\\_ICRITERIA\\=1, and it is currently fixed to 400 for ML\\_ICRITERIA\\=2 (in future releases 50 x ML\\_MHIS)."}
{"file_name": "Performance_issues,_try_NCORE,_KPAR,_ALGO,_LREAL.md", "content": "Many user have difficulties to make good choices for various computational and technical parameters, resulting in suboptimal performance. Here is a very brief outline which tags can make a difference performance wise. Nowadays computations are usually performed on multi\\-core machines. Two tags are relevant to optimize the performance on multi\\-core machines: KPAR and NCORE. Using the tag KPAR, the k\\-points are distributed in a round\\-robin fashion ontothe compute cores. A group of *N*\\=(total number of cores/KPAR) cores jointly work on a group of **k**\\-points.Within this group of *N* cores the usual parallelism over bands and/or plane wave coefficients can be used. KPAR is particularly efficient for small unit cellsand many k\\-points and it causes essentially no communication overhead. For small until cells and few atoms in the unit cell, one often achieves the best performance by setting  KPAR \\= total\\-number\\-of\\-cores.   NCORE determines how many cores share the work on an individual orbital. The current default is NCORE\\=1, meaning that one orbital is treated by one core. NCORE\\=1 is the optimal setting only for small unit cells, and platforms with a small communication bandwidth. However, this mode requires a lot of memory for large systems, because the non\\-local projector functions must be stored on each core. In addition, substantial all\\-to\\-all communications are required to orthogonalize the bands. On massively parallel systems and modern multi\\-core machines we, therefore, strongly recommend to set   ```NCORE = 2 up to number-of-cores-per-socket (or number-of-cores-per-node)  ```   For large unit cells, this can improve the performance by up to a factor four compared to the default. Ideally, NCORE should be a factor of the number\\-of\\-cores\\-per\\-socket (or number\\-of\\-cores\\-per\\-node), since this reduces communication between the sockets or nodes. The best value NCORE depends somewhat on the number of atomsin the unit cell. Values around 4 are usually ideal for 100 atoms in the unit cell. For very large unit cells (more than 400 atoms) values around 12\\-16 are often optimal. If you perform long and expensive simulations, please make your own tests.   For large unit cells (more than 50\\-100 atoms), it is usually expedient to use real spaceprojects LREAL and change to ALGO\\= Fast  ```ALGO  = FastLREAL = Auto  ``` ALGO does not change the predicted energy, but uses a more efficient (but slightly less robust) algorithm for the optimization of the electronic degrees of freedom. LREAL slightly changes the energy by up to 1 meV/atom, but can greatly improve the performance of VASP for large unit cells. Note, though that in order to calculate relative energies or adsorption energies on surface, one should stick to one and the same setting for LREAL.       ---"}
{"file_name": "OMEGAMIN.md", "content": "OMEGAMIN= \\[real]   Default: **OMEGAMIN** \\= minimum transition energy (0\\.05 for metals)nDescription: OMEGAMIN sets the minimum frequency in the frequency grid.   ---"}
{"file_name": "Basis_set_convergence_of_RPA-ACFDT_calculations.md", "content": "The expression for the ACFDT\\-RPA correlation energy written in terms of reciprocal lattice vectors reads:  E  c  R P A  \\=  \u222b  0  \u221e  d  \u03c9  2 \u03c0  \u2211  q  \u2208  B Z  \u2211  G  {  (  l n  \\[ 1 \u2212  \u03c7 \\~  0  (  q  ,  i  \u03c9 ) V (  q  ) ]  )  G , G  \\+  V  G , G  (  q  )  \u03c7 \\~  0  (  q  ,  i  \u03c9 )  } {\\\\displaystyle E\\_{\\\\rm {c}}^{\\\\rm {RPA}}\\=\\\\int \\_{0}^{\\\\infty }{\\\\frac {\\\\mathrm {d} \\\\omega }{2\\\\pi }}\\\\sum \\_{{\\\\mathbf {q} }\\\\in \\\\mathbf {BZ} }\\\\sum \\_{\\\\mathbf {G} }\\\\left\\\\{(\\\\mathrm {ln} \\[1\\-{\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },\\\\mathrm {i} \\\\omega )V({\\\\mathbf {q} })])\\_{\\\\mathbf {G,G} }\\+V\\_{\\\\mathbf {G,G} }({\\\\mathbf {q} }){\\\\tilde {\\\\chi }}^{0}({\\\\mathbf {q} },{\\\\mathrm {i} }\\\\omega )\\\\right\\\\}}  . The sum over reciprocal lattice vectors has to be truncated at some   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\mathrm {max} }} , determined by   \u210f  2  \\|  G  \\+  q  \\|  2  2  m  e {\\\\displaystyle {\\\\frac {\\\\hbar ^{2}\\|{\\\\mathbf {G} }\\+{\\\\mathbf {q} }\\|^{2}}{2\\\\mathrm {m} \\_{e}}}}  \\< ENCUTGW, which can be set in the INCAR file. The default value is   2 3  \u00d7 {\\\\displaystyle {\\\\frac {2}{3}}\\\\times }  ENCUT, which experience has taught us not to change. For systematic convergence tests, instead increase ENCUT and repeat steps 1 to 4, but be aware that the \"maximum number of plane\\-waves\" changes when ENCUT is increased. Note that it is virtually impossible, to converge absolute correlation energies. Rather concentrate on relative energies (e.g. energy differences between two solids, or between a solid and the constituent atoms). Since correlation energies converge very slowly with respect to   G  m a x {\\\\displaystyle \\\\mathbf {G} \\_{\\\\rm {max}}} , VASP automatically extrapolates to the infinite basis set limit using a linear regression to the equation: [\\[1]](#cite_note-harl:2008-1)[\\[2]](#cite_note-harl:2010-2)[\\[3]](#cite_note-klimes:2014-3)  E  c  (  G  ) \\=  E  c  ( \u221e ) \\+  A  G  3 {\\\\displaystyle E\\_{\\\\mathrm {c} }({\\\\mathbf {G} })\\=E\\_{\\\\mathrm {c} }(\\\\infty )\\+{\\\\frac {A}{{\\\\mathbf {G} }^{3}}}}  . Furthermore, the Coulomb kernel is smoothly truncated between ENCUTGWSOFT and ENCUTGW using a simple cosine like window function (Hann window function). Alternatively, the basis set extrapolation can be performed by setting LSCK\\=.TRUE., using the squeezed Coulomb kernel method.[\\[4]](#cite_note-riemelmoser:jcp:2020-4) The default for ENCUTGWSOFT is 0\\.8  \u00d7 {\\\\displaystyle \\\\times } ENCUTGW (again we do not recommend to change this default).  The integral over   \u03c9 {\\\\displaystyle \\\\omega }  is evaluated by means of a highly accurate minimax integration.[\\[5]](#cite_note-kaltak:2014-5) The number of   \u03c9 {\\\\displaystyle \\\\omega }  points is determined by the flag NOMEGA, whereas the energy range of transitions is determined by the band gap and the energy difference between the lowest occupied and highest unoccupied one\\-electron orbital. VASP determines these values automatically (from vasp.5\\.4\\.1 on), and the user should only carefully converge with respect to the number of frequency points NOMEGA. A good choice is usually NOMEGA\\=12, however, for large gap systems one might obtain   \u03bc {\\\\displaystyle \\\\mu } eV convergence per atom already using 8 points, whereas for metals up to NOMEGA\\=24 frequency points are sometimes necessary, in particular, for large unit cells. Strictly adhere to the steps outlines above. Specifically, be aware that steps two and three require the WAVECAR file generated in step one, whereas step four requires the WAVECAR and WAVEDER file generated in step three (generated by setting LOPTICS\\=*.TRUE.*)."}
{"file_name": "DFT-D4.md", "content": "DFT\\-D4 is an external package maintained by the Grimme group that can be linked to VASP.Read the documentation for more information about this package.DFT\\-D4 adds van\\-der\\-Waals (vdW) interactions to DFT because they are not included in most exchange\\-correlation functionals.It approximates the vdW interactions considering only the structure of the system which allows for a fast computation.Since every functional has different interactions between atoms, DFT\\-D4 tailors its adjustable parameters to the functional. Usage----- In most cases, it is sufficient to set IVDW\\=13 in the INCAR file if VASP was compiled and linked to DFT\\-D4.Internally, VASP passes the name of the used exchange\\-correlation functional to DFT\\-D4\\.Subsequently, DFT\\-D4 maps this name of the functional to optimized settings for the adjustable parameters of the vdW interaction.VASP uses these parameters to compute the DFT\\-D4 energies, forces, and stresses in every ionic step and adds them to the corresponding DFT terms.As a result, you can relax structures or run MD simulations with an approximate treatment of vdW interactions. | **Warning:** Below, we explain how to tweak the parameters of DFT\\-D4\\. Typically, you should not modify them unless you have a very good reason, e.g., because the interface is not implemented for the exchange\\-correlation functional you use. || --- | VASP allows setting the following tags in the INCAR file to change the strength of the vdW interaction. * VDW\\_S6, VDW\\_S8 determine the strength of the dipole\\-dipole and dipole\\-quadrupole interaction.* VDW\\_A1, VDW\\_A2 are scaling constants in the Becke\\-Johnson damping. For more information regarding these parameters, please refer to the DFT\\-D4 paper.[\\[1]](#cite_note-caldeweyher:pccp:2020-1)"}
{"file_name": "ML_IWEIGHT.md", "content": "ML\\_IWEIGHT= \\[integer]   Default: **ML\\_IWEIGHT** \\= 3nDescription: This tag controls which procedure is used for normalizing and weighting the energies, forces, and stresses in the machine learning force field method.  --- To achieve optimal training it is important to normalize the available data. Furthermore, sometimes it may be desired to emphasize some training quantities over others, e.g. one might want excellent force predictions, even at the cost of sacrificing some energy and stress accuracy. How normalizing and weighting are performed can be controlled with the ML\\_IWEIGHT together with weighting parameters ML\\_WTOTEN, ML\\_WTIFOR and ML\\_WTSIF for energies, forces, and stresses, respectively. The following procedures can be selected via ML\\_IWEIGHT: * ML\\_IWEIGHT \\= 1: Manual control over normalization/weighting: the unnormalized energies, forces, and stress tensor training data are divided by the weights determined by the flags ML\\_WTOTEN (eV/atom), ML\\_WTIFOR (eV/  \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) and ML\\_WTSIF (kBar), respectively. * ML\\_IWEIGHT \\= 2: Normalization via global standard deviations: The energies, forces, and stresses are normalized by their respective standard deviation over the entire training data. Then, the normalized quantities are weighted by ML\\_WTOTEN, ML\\_WTIFOR and ML\\_WTSIF when they are processed for learning in the design matrix   \u03a6 {\\\\displaystyle \\\\mathbf {\\\\Phi } }  (see this section). In this case the values of ML\\_WTOTEN, ML\\_WTIFOR and ML\\_WTSIF are unitless quantities. * ML\\_IWEIGHT \\= 3: Normalization via averages over subset standard deviations: Same as ML\\_IWEIGHT \\= 2 but the training data is divided into individual subsets. For each subset, the standard deviations are calculated separately. Then, the energies, forces, and stresses are normalized using the average of the standard deviations of all subsets. Finally, as for ML\\_IWEIGHT \\= 2 the normalized quantities are multiplied by ML\\_WTOTEN, ML\\_WTIFOR and ML\\_WTSIF for learning purposes. By default (ML\\_LUSE\\_NAMES\\=*.FALSE.*) the division into subsets is based on the atom types and number of atoms per type. If two systems contain the same atom types and the same number of atoms per type then they are considered to be in the same subset. To further divide them into subsets set ML\\_LUSE\\_NAMES\\=*.TRUE.* and choose different system names in the first line of the POSCAR file. This can be useful if training is performed for widely different materials, for instance, different phases with widely different energies. Without the finer subset assignment, the overall energy standard deviation might become large, reducing the weight of the energies too much of given subsets. For ML\\_IWEIGHT \\= 2, 3 the weights are unitless quantities used to multiply the data, whereas for ML\\_IWEIGHT \\= 1 they have a unit. All three methods provide unitless energies, forces, and stress tensors, which are then passed to the learning algorithm. Although the defaults are usually rather sensible, it can be useful to explore different weights. For instance, if vibrational frequencies are supposed to be reproduced accurately, we found it helpful to increase ML\\_WTIFOR to 10\\-100\\. On the other hand, if the energy difference between different phases needs to be described accurately by the force field, it might be useful to increase ML\\_WTOTEN to around 10\\-100\\. | **Tip:** On\\-the\\-fly learning implies that training structures accumulate along the running MD trajectory. Hence, also the standard deviations of energies, forces, and stresses change over time and will be recalculated whenever a learning step is triggered. We highly recommend using ML\\_IWEIGHT \\= 3 because this ensures that at any time learning is performed on an adequately normalized set. || --- |"}
{"file_name": "Nuclephile_Substitution_CH3Cl_-_mMD3.md", "content": "Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials Task---- In this example the nucleophile substitution of a Cl\\- by another Cl\\- in CH3Cl via meta dynamics is simulated using two collective variables simultaneously. Input----- ### POSCAR  ```   1.00000000000000     9.0000000000000000    0.0000000000000000    0.0000000000000000     0.0000000000000000    9.0000000000000000    0.0000000000000000     0.0000000000000000    0.0000000000000000    9.0000000000000000   C    H    Cl   1   3   2Direct  0.1570348572197245  0.2904054711139102  0.1422643997559632  0.1466469234176954  0.4066467848992589  0.1077433527138946  0.0469134772399311  0.2399491465236156  0.1544210764126938  0.2197893311177821  0.2820094213788985  0.2462070949679763  0.9809163623144840  0.4723904404063168  0.3674924467383788  0.2601754409903839  0.1874592103557934  0.9964911656110944  ``` ### KPOINTS  ```Automatic 0Gamma 1  1  1 0. 0. 0.  ``` * For isolated atoms and molecules interactions between periodic images are negligible (in sufficiently large cells) hence no Brillouin zone sampling is necessary. ### INCAR  ```PREC=LowEDIFF=1e-6LWAVE=.FALSE.LCHARG=.FALSE.NELECT=22NELMIN=4LREAL=.FALSE.ALGO=VeryFastISMEAR=-1SIGMA=0.0516 ############################# MD setting #####################################IBRION=0                                           # MD simulationNSW=1000                                           # number of stepsPOTIM=1                                            # integration stepTEBEG=600                                          # simulation temperatureMDALGO=11                                          # metaDynamics with Andersen thermostatANDERSEN_PROB=0.10                                 # collision probabilityHILLS_BIN=50                                       # update the time-dependent bias                                                   # potential every 50 stepsHILLS_H=0.005                                      # height of the GaussianHILLS_W=0.05                                       # width of the Gaussian##############################################################################  ``` ### ICONST  ```R 1 5 5R 1 6 5  ``` * In contrast to the previous examples two collective variables are used simultaneously (and no combination of them). ### PENALTYPOT  ```   5.00000   1.00000   9.00000   0.50000   5.00000   2.00000   9.00000   0.50000   5.00000   3.00000   9.00000   0.50000   5.00000   4.00000   9.00000   0.50000   5.00000   5.00000   9.00000   0.50000   1.00000   5.00000   9.00000   0.50000   2.00000   5.00000   9.00000   0.50000   3.00000   5.00000   9.00000   0.50000   4.00000   5.00000   9.00000   0.50000  ``` Calculation----------- Sometimes it is difficult to find one single parameter that approximates the reaction coordinate well but it is often possible to identify a small set of parameters that form a basis for the reaction coordinate. These parameters (collective variables) can be used in meta dynamics to determine free\\-energy surface. In this example we use two C\\-Cl distances as collective variables in the ICONST file. We still want to avoid the dissociation of the vdW complexes, which is an undesired process, hence we define an initial bias potential whose role is to ensure that no C\\-Cl distance becomes longer than   5  \u00c5 {\\\\displaystyle 5\\\\mathrm {\\\\AA} }  (defined in the PENALTYPOT file). ### Running the calculation The mass for hydrogen in this example is set 3\\.016 a.u. corresponding to the tritium isotope. This way larger timesteps can be chosen for the MD (note that the free energy is independent of the masses of atoms). The bias potential is specified in the PENALTYPOT file. For practical reasons, we split our (presumably long) meta dynamics calculation into shorter runs of length of 1000 fs (NSW\\=1000; POTIM\\=1\\). At the end of each run the HILLSPOT file (containing bias potential generated in previous run) must be copied to the PENALTYPOT file (the input file with bias potential) \\- this is done automatically in the script *run* which looks as follows:  ```#!/bin/bash runvasp=\"mpirun -np x executable_path\" # ensure that this sequence of MD runs is reproduciblecp POSCAR.init POSCARcp INCAR.init INCARrseed=\"RANDOM_SEED =         311137787                0                0\"echo $rseed >> INCAR  i=1while [ $i -le 100 ]  do   # start vasp  $runvasp   # ensure that this sequence of MD runs is reproducible  rseed=$(grep RANDOM_SEED REPORT |tail -1)  cp INCAR.init INCAR  echo $rseed >> INCAR   # use bias potential generated in previous mMD run  cp HILLSPOT PENALTYPOT   # use the last configuration generated in the previous  # run as initial configuration for the next run  cp CONTCAR POSCAR   # backup some important files  cp REPORT REPORT.$i  cp vasprun.xml vasprun.xml.$i   let i=i+1done  ``` * The user has to adjust the *runvasp* variable, which holds the command for the executable command.* Please run this script by typing:  ```bash ./run  ``` ### Time evolution of distance During the simulation, the time evolution of collective variable can be monitored using the script *timeEv.sh*:  ```#!/bin/bash rm timeEvol1.dat timeEvol2.dat  i=1while [ $i -le 1000 ] do  if test -f REPORT.$i  then    grep fic REPORT.$i |awk '{if (NR%2==1) {print $2} }' >>timeEvol1.dat    grep fic REPORT.$i |awk '{if (NR%2==0) {print $2} }' >>timeEvol2.dat fi  let i=i+1done  ``` To execute this script type:  ```bash ./timeEv.sh  ``` This script creates two files *timeEvol1\\.dat* and *timeEvol2\\.dat*, which hold the time evolution of the C\\-Cl distances for both Cl atoms. To visualize that file execute the following command:  ```gnuplot -e \"set terminal jpeg; set xlabel 'timestep'; set ylabel 'Collective variable (Ang)'; set style data lines; plot 'timeEvol1.dat', 'timeEvol2.dat'\" > timeEvol.jpg  ``` The obtained time evolution of the collective variables should look like the following: [](File_TimeEvol_CH3Cl_mMD3.html) From this plot we very nicely see that at the beginning the two collective variables run parallel to each other, staying at the same side at approximately the same distance from the centre atom. After approximately 50000 steps the two collective variables cross and switch. This indicates very nicely that the substitution reaction occured. One should note that the atoms come close to each other but never touch each other because of the repulsive forces. So the distances will be of course never 0 but some finite positive distances. After almost 50000 steps the collective variables switch back again. In principle one should obtain that the substitution reaction will go forth and back as the bias potentials are added to potential energy (as already explained in the previous example). ### 2D free\\-energy profile To calculate the free\\-energy profile in 2D we use the script *calcprofile2D.py* attached with this example: **Click to show/calcprofile2D.py**  ```#!/usr/bin/python from math import * def gauss_pot(x,y,x0,y0,h,w):  en=h*e**(-((x-x0)**2+(y-y0)**2)/2.0/w**2)  return en ff=raw_input('File name?\') f=open(ff,'r')data=[]h=[]w=[]for line in f.readlines():  line=line.split()  x=[]  if (len(line)>2):    for i in range(len(line)-2):      x.append(float(line[i]))    data.append(x)    h.append(float(line[-2]))    w.append(float(line[-1]))f.close() name=raw_input('x1_min x1_max M:\')name=name.split()a0=float(name[0])a1=float(name[1])num1=int(name[2]) name=raw_input('x2_min x2_max N:\')name=name.split()b0=float(name[0])b1=float(name[1])num2=int(name[2]) ff=ff+'.xyz' f=open(ff,'w') stepA=(a1-a0)/num1stepB=(b1-b0)/num2x=a0for i in range(1,num1):  x=x+stepA  y=b0  for k in range(1,num2):    en=0.0    y=y+stepB    x_=(x+y)/2.    y_=(x-y)/2.    for j in range(len(data)):        x0=data[j][0]        y0=data[j][1]        en_=gauss_pot(x,y,x0,y0,h[j],w[j])        en+=en_    f.write(`x`+'\\t'+`y`+'\\t'+`-en`+'\')  f.write('\') f.close()  ```   This script projects a set of two\\-dimmensional Gaussians defined in the input file (such as PENALTYPOT or HILLSPOT) onto a regular 2D grid of   M \u00d7 N {\\\\displaystyle M\\\\times N}  points defined by the user. The user is asked to provide the following data: (a) the name of the input file, (b) the initial (*x1\\_min*) and final (*x1\\_max*) grid points, and the number of grid points (*M*) for the axis corresponding to the first collective variable, and (c) the initial (*x2\\_min*) and final (*x2\\_max*) grid points and the number of grid points (*N*) for the axis corresponding to the second collective variable. The result is written to a file with extension *.xyz* and it can be visualized by regular plotting tools like Gnuplot. In our example we will use the following inputs:  Run script:   ```python calcprofile2D.py  ``` *File name?*  ```PENALTYPOT  ``` *x1\\_min x1\\_max M:*  ```0 7 100  ``` *x2\\_min x2\\_max N:*  ```0 7 100  ``` The following script (*plot\\_2D\\_profile.gp*) can be used to plot the 2D density:  ```set terminal jpeg set palette rgb 33,13,10 set view 0,0 set contourset noclabelset pm3d implicit at bset nosurface set pm3d map set cntrparam levels incremental 0., 0.02, 0.5 set out \"PENALTYPOT.jpg\"splot \"PENALTYPOT.xyz\" with lines  title 'bias potential (eV)'  ``` Please execute this script with the following command:  ```gnuplot plot_2D_profile.gp  ``` The resulting free energy profile should look like the following: [](File_PENALTYPOT_mMD3_2D_profile.html) Download--------  CH3Cl\\_mMD3\\.tgz Overview>Liquid Si \\- Standard MD> Liquid Si \\- Freezing> Nucleophile Substitution CH3Cl \\- Standard MD> Nuclephile Substitution CH3Cl \\- mMD1> Nuclephile Substitution CH3Cl \\- mMD2> Nuclephile Substitution CH3Cl \\- mMD3> Nuclephile Substitution CH3Cl \\- SG> Nuclephile Substitution CH3Cl \\- BM> List of tutorials"}
{"file_name": "LIBXC1_Pn.md", "content": "LIBXC1\\_Pn= \\[real]nDescription: LIBXC1\\_Pn, where   n \\= 1 , 2 , \u2026 {\\\\displaystyle n\\=1,2,\\\\ldots }  allows to specify the values of the parameters of the functional implemented in Libxc that is called with LIBXC1.  --- For many of the functionals implemented in the library of exchange\\-correlation functionals Libxc[\\[1]](#cite_note-marques:cpc:2012-1)[\\[2]](#cite_note-lehtola:sx:2018-2)[\\[3]](#cite_note-libxc-3) it is possible to modify the parameters if one does not want to use the default values. If a functional from Libxc has parameters that can be modified, then they are listed in OUTCAR below \"Parameters of Libxc functionals:\" as P  n {\\\\displaystyle n}  (  n \\= 1 , 2 , \u2026 {\\\\displaystyle n\\=1,2,\\\\ldots } ). LIBXC1\\_Pn and LIBXC2\\_Pn are for the functionals called with LIBXC1 and LIBXC2, respectively. An example is given below for the GGA PBE functional[\\[4]](#cite_note-perdew:prl:1996-4) where the default parameters   \u03bc \\=0\\.21951 {\\\\displaystyle \\\\mu \\=0\\.21951}  in exchange and   \u03b2 \\=0\\.066725 {\\\\displaystyle \\\\beta \\=0\\.066725}  in correlation are changed to   \u03bc \\= 10  /  81 \u22480\\.12345679 {\\\\displaystyle \\\\mu \\=10/81\\\\approx 0\\.12345679}  and  \u03b2 \\=0\\.046 {\\\\displaystyle \\\\beta \\=0\\.046}  to get the PBEsol functional[\\[5]](#cite_note-perdew:prl:2008-5) (of course, the simpler way to use PBEsol from Libxc would be to call it directly with LIBXC1\\=GGA\\_X\\_PBE\\_SOL and LIBXC2\\=GGA\\_C\\_PBE\\_SOL).  ```GGA = LIBXCLIBXC1 = GGA_X_PBE # or 101LIBXC2 = GGA_C_PBE # or 130LIBXC1_P2 = 0.12345679LIBXC2_P1 = 0.046  ``` | **Mind:** The ALDAX, ALDAC, AGGAX, AGGAC, AMGGAX, and AMGGAC tags are ignored if the Libxc functional is an exchange\\-correlation functional (those with a tag that contains XC) || --- | For Libxc functionals that are the semilocal component of a hybrid functional, i.e. those with a tag that starts with HYB (LHFCALC\\=.TRUE. will be set automatically if such a functional is selected), the following explains how it works for the mixing and screening parameters: * Mixing parameter:\t+ It is usually one of the parameters LIBXC1\\_Pn, and can therefore be modified.\t+ For HYB\\_GGA\\_XC\\_PBEH, HYB\\_GGA\\_XC\\_B1WC, HYB\\_GGA\\_XC\\_HSE03, HYB\\_GGA\\_XC\\_HSE06, HYB\\_GGA\\_XC\\_HSE12, and HYB\\_GGA\\_XC\\_HSE12S, the value of AEXX (even if not specified explicitly in INCAR) will be used and automatically passed to the corresponding parameter in Libxc. On the other hand, if this corresponding parameter (LIBXC1\\_Pn) is specified in INCAR, then it will be used (instead of AEXX), however note that it will be only for the semilocal component of the hybrid functional and not for the exact exchange that will still use AEXX.\t+ For all hybrid functionals except those listed just above, AEXX will not be considered for the semilocal component of the hybrid functional, but only for the exact exchange component. Therefore, a particular choice for the mixing parameter has to be done by specifying both AEXX (for the exact exchange) and the appropriate LIBXC1\\_Pn (for the semilocal component).\t+ The ALDAX, ALDAC, AGGAX, AGGAC, AMGGAX, and AMGGAC tags are ignored if the Libxc functional is an hybrid functional (those with a tag that starts with HYB).* Screening parameter:\t+ It is usually one of the parameters LIBXC1\\_Pn if it is a screened functional, and can therefore be modified.\t+ For HYB\\_GGA\\_XC\\_HSE03, HYB\\_GGA\\_XC\\_HSE06, HYB\\_GGA\\_XC\\_HSE12, and HYB\\_GGA\\_XC\\_HSE12S, the value of HFSCREEN (even if not specified explicitly in INCAR) will be used and automatically passed to the corresponding parameter in Libxc. On the other hand, if this corresponding parameter (LIBXC1\\_Pn) is specified in INCAR, then it will be used (instead of HFSCREEN), however note that it will be only for the semilocal component of the hybrid functional and not for the exact exchange that will still use HFSCREEN.\t+ For all hybrid functionals except those listed just above, HFSCREEN will not be considered for the semilocal component of the hybrid functional, but only for the exact exchange component. Therefore, a particular choice for the screening parameter has to be done by specifying both HFSCREEN (for the exact exchange) and the appropriate LIBXC1\\_Pn (for the semilocal component)."}
{"file_name": "Magnetism_-_Tutorial.md", "content": "Overview> fcc Ni (revisited).html \"Fcc Ni (revisited)\")> NiO> NiO LSDA\\+U> Spin\\-orbit coupling in a Ni monolayer> Spin\\-orbit coupling in a Fe monolayer>constraining local magnetic moments  > List of tutorialsThe tutorial is made of the following parts: 1. fcc Ni (revisited).html \"Fcc Ni (revisited)\")2. NiO3. NiO LSDA\\+U4. Spin\\-orbit coupling in a Ni monolayer5. Spin\\-orbit coupling in a Fe monolayer6. constraining local magnetic moments"}
{"file_name": "On-the-fly_machine_learning_force_field_generation_using_Bayesian_linear_regression.md", "content": "Redirect to: * Machine learning force field: Theory"}
{"file_name": "LRPA.md", "content": "LRPA= .TRUE. \\| .FALSE.   Default: **LRPA** \\= .FALSE.nDescription: LRPA\\=.TRUE. includes local field effect on the Hartree level only.  --- For LRPA\\=.TRUE. local field effects are included on the Hartree level only. This means that cell periodic microscopic changes of the local potential related to the change of the Hartree potential are included. For LRPA\\=.FALSE. changes of the Hartree *and the exchange\\-correlation potential* are included. This usually increases the dielectric constants. The final values for the dielectric tensor can be found in the OUTCAR file after the lines.  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in RPA (Hartree))  ``` For LRPA\\=.FALSE. the dielectric tensor is written after the lines:  ```MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in DFT)  ``` The dielectric tensor *excluding* local field effects is always calculated (regardless of LRPA). The piezoelectric tensors and the Born effective charges as well as the ionic contributions the to dielectric tensor are only calculated for LRPA\\=.FALSE.. | **Warning:** We recommend using the LRPA tag only in combination with LEPSILON or LCALCEPS, where the treatment of the terms beyond RPA is unambiguous. In the MBPT calculations various approximations beyond RPA can be used, hence more precise control of the included terms should be used via the tags LHARTREE, LADDER, and LFXC. || --- |"}
{"file_name": "LCORR.md", "content": "LCORR= \\[logical]   Default: **LCORR** \\= .TRUE.nDescription: Controls whether Harris corrections are calculated or not.  --- Based on the ideas of the Harris\\-Foulkes functional it is possible to derive a correction to the forces for non fully self\\-consistent calculations, we call these corrections Harris corrections. For LCORR\\=*.TRUE.* these corrections are calculated and included in the stress\\-tensor and the forces. The contributions are explicitly written to the file OUTCAR and help to show how well forces and stress are converged. For surfaces, the correction term might be relatively large and testing has shown that the corrected forces converge much faster to the exact forces than uncorrected forces."}
{"file_name": "Band-structure_calculation_using_meta-GGA_functionals.md", "content": "For band\\-structure calculations with meta\\-GGA functionals, follow the same procedure as for band\\-structure calculations using hybrid functionals. The reason is that a regular k mesh has to be provided in order to compute the kinetic\\-energy density."}
{"file_name": "DEPER.md", "content": "DEPER= \\[real]   Default: **DEPER** \\= 0\\.3nDescription: DEPER specifies a relative stopping criterion for the optimization of an eigenvalue.  --- The tags DEPER, WEIMIN, and EBREAK allow fine tuning of the iterative matrix diagonalization, and are best not changed. They are optimized for a large variety of systems, and changing one of the parameters usually decreases performance or can even screw up the iterative matrix diagonalization totally.In general, these tags control when the optimization of a single band is stopped within the iterative matrix diagonalization schemes: DEPER specifies a relative break\\-criterion: the optimization of a band is stopped after the energy change becomes smaller than DEPER multiplied with the energy change in the first iterative optimization step. The maximum number of optimization steps is always 4\\."}
{"file_name": "LTRIPLET.md", "content": "LTRIPLET= .TRUE. \\| .FALSE.n| Default: **LTRIPLET** | \\= .FALSE. |  || --- | --- | --- | Description: LTRIPLET selects a triplet ansatz for Bethe\\-Salpeter\\-equations (BSE) calculations. This is synonymous to LHARTREE \\= .FALSE.  --- For a usual BSE calculation (LHARTREE\\=.TRUE.; LTRIPLET \\= .FALSE.), the excited state corresponds to a singlet if the ground state is not spin\\-polarized (ISPIN\\=1\\) or anti\\-ferromagnetic (ISPIN\\=2, total magnetic moment 0\\). This is so because the ansatz for the BSE calculation involves a hole and an electron pair prepared within each spin channel. For instance, an electron with up spin is removed from the ground\\-state determinant and placed with the same spin into a previously unoccupied orbital. If there are no separate spin channels this ansatz results in a net spin\\-zero, which corresponds to a singlet state. If LTRIPLET\\=.TRUE., VASP assumes that an *up* electron is removed from the ground\\-state determinant and placed as a *down* electron into a previously unoccupied orbital (spin flip). This ansatz corresponds to a triplet state as it has a net spin of one. Without spin\\-orbit coupling (LSORBIT \\= .FALSE.), the transition probability from the singlet ground state to the triplet solutions will be exactly zero. These excitations correspond to dark, potentially long\\-lived triplet excitons. However, VASP calculates the transition probabilities incorrectly, by assuming that a spin\\-flip excitation has the same transition probabilities as a usual singlet excitation.The reported transition probabilities (\"optical transitions\" in vasprun.xml\")) are hence incorrect; they should be all zero. Likewise, the contributions to the dielectric function are zero for triplet excitations,and incorrectly reported in the vasprun.xml\") file. If a non\\-magnetic material is calculated using ISPIN\\=2 for both the groundstate and BSE calculation, and a usual BSE calculation is performed (LHARTREE\\=.TRUE.; LTRIPLET \\= .FALSE.), allsinglet transitions as well as one set of the triplet excitations (those with   m  S  \\= 0 {\\\\displaystyle m\\_{S}\\=0}  ) are calculated. All triplet transitions will have zero transition probabilities. If LTRIPLET \\= .TRUE. is set for the BSE calculation, the other two sets of triplet excitations (those with   m  S  \\= 1 {\\\\displaystyle m\\_{S}\\=1}  and  m  S  \\= \u2212 1 {\\\\displaystyle m\\_{S}\\=\\-1} ) are determined. Note that as for ISPIN\\=1 for ISPIN\\=2 and LTRIPLET \\= .FALSE., incorrect non\\-zero transition probabilities are reported in the vasprun.xml\") file (they should be all exactly zero, since the underlying pair states fed into the BSE can not be excited by light). To obtain meaningful transition probabilities for the singlet and triplet excitations, include spin\\-orbit coupling by setting LSORBIT \\= .TRUE. in the INCAR file throughout the calculation, i.e., for the ground\\-state and BSE calculation. In this case, the singlet and all three sets of triplet excitations are calculated simultaneously, and proper transition probabilities are assigned to each transition. Small transition probabilities might be observed even for triplet excitations as a result of spin\\-orbit coupling. LTRIPLET \\= .TRUE. should not be used for calculations including spin\\-orbit coupling. | **Warning:** LTRIPLET\\=.TRUE. has not been extensively tested in combination with spin\\-polarized ground states (ISPIN\\=2\\). || --- | | **Warning:** We are not sure whether the BSEFATBAND approach can be combined with the LTRIPLET tag. || --- |"}
{"file_name": "PFLAT.md", "content": "PMASS= \\[logical]nDescription: Control flag for the output of the profiling routines.  --- If specified as PMASS\\=*.TRUE.*, only the flat profile is printed out in the OUTCAR. Examples that use this tag  ---"}
{"file_name": "Wannier_orbitals_from_VASP.md", "content": "Wannier orbitals are an important tool to study chemical bonding.They also form the basis of various interpolation techniques.As a quick summary, a Wannier orbital   \\|  w  m  R  \u27e9 {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle }  is a function obtained from a linear combination of the Bloch (Kohn\\-Sham) orbitals   \\|  \u03c8  n  k  \u27e9 {\\\\displaystyle \\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle }  :  \\|  w  m  R  \u27e9 \\=  \u2211  n  k  e  \u2212 i  k  \u22c5  R  U  m n  k  \\|  \u03c8  n  k  \u27e9 , {\\\\displaystyle \\|w\\_{m\\\\mathbf {R} }\\\\rangle \\=\\\\sum \\_{n\\\\mathbf {k} }e^{\\-i\\\\mathbf {k} \\\\cdot \\\\mathbf {R} }U\\_{mn\\\\mathbf {k} }\\|\\\\psi \\_{n\\\\mathbf {k} }\\\\rangle ,} where the unitary matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is chosen such that the Wannier orbitals are localized in real space.The process of finding a suitable Wannier transformation matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  is known as Wannierization.This page guides you through the steps required to perform Wannierization using the approaches available in VASP. One\\-shot Wannierization using a singular\\-value decomposition-------------------------------------------------------------- The two main Wannierization methods are projections onto local functions using the LOCPROJ tag and the Selected\\-Columns\\-of\\-the\\-Density\\-Matrix (SCDM) method using the LSCDM tag.The LOCPROJ approach offers fine\\-grained control over the Wannierization process but is also more involved for electronically complex systems.In this case, projection targets have to be chosen and placed manually using the LOCPROJ tag.In contrast, the SCDM approach offers very little control and instead generates Wannier orbitals automatically from a small set of input parameters[\\[1]](#cite_note-damle:mms:2018-1).This is convenient for systems where the electronic character of the band structure is complicated or unknown. Both approaches produce as output a matrix   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  .In the case of the LOCPROJ tag, this is the projection matrix between the Bloch orbitals and the local functions,   \u03b2  m {\\\\displaystyle \\\\beta \\_{m}}  :  A  m n ,  k  \u2261 \u27e8  \u03b2  m  \\|  S \\~  \\|  \u03a8  n  k  \u27e9 . {\\\\displaystyle A\\_{mn,{\\\\bf {k}}}\\\\equiv \\\\langle \\\\beta \\_{m}\\|{\\\\tilde {S}}\\|\\\\Psi \\_{n{\\\\bf {k}}}\\\\rangle .} The operator   S \\~ {\\\\displaystyle {\\\\tilde {S}}}  is the overlap operator in the projector\\-augmented\\-wave method.In the case of the SCDM method, the matrix   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is the result of an iterative process that extracts local functions from the information contained in the electronic one\\-particle density matrix. In general,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is not going to be a unitary matrix.It could, in principle, be used to transform the Bloch orbitals into a set of non\\-orthogonal Wannier orbitals.However, for many applications, it is desirable to have orthonormal Wannier orbitals, such as for Wannier interpolation.Therefore,   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  needs first to be orthonormalized. In VASP, we employ a one\\-shot orthonormalization procedure that uses the singular\\-value decomposition (SVD) of   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  :  A  m n  k  \\= \\[ D \u03a3  V  \u2020  ]  m n  k  , {\\\\displaystyle A\\_{mn\\\\mathbf {k} }\\=\\[D\\\\Sigma V^{\\\\dagger }]\\_{mn\\\\mathbf {k} },} which is then used to construct the unitary matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  :  U  m n  k  \\= \\[ D  V  \u2020  ]  m n  k  . {\\\\displaystyle U\\_{mn\\\\mathbf {k} }\\=\\[DV^{\\\\dagger }]\\_{mn\\\\mathbf {k} }.} In contrast to iterative methods (e.g., Gram\\-Schmidt orthogonalization), the SVD orthogonalization operates simultaneously on all local functions.This ensures that the symmetry properties of the local functions encoded in   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  are preserved during the orthonormalization procedure. LOCPROJ method-------------- To generate Wannier orbitals using local projections, it is sufficient to specify the LOCPROJ tag with suitable projection targets.VASP will then apply the one\\-shot orthonormalization internally to obtain the Wannier transformation matrix   U  m n  k {\\\\displaystyle U\\_{mn\\\\mathbf {k} }}  .The number of Wannier orbitals is the same as the total number of local functions. | **Tip:** You can write the Wannier transformation matrix to disk by setting `LWRITE_WANPROJ = true`. || --- | This information can then be used to perform Wannier interpolation of the electronic band structure (for example, using the KPOINTS\\_WAN file).It can also be passed to Wannier90 (more on that later). To find a good representation of the electronic band structure in terms of Wannier orbitals, it is important to choose suitable projection targets.In general, this can be a difficult task as some bands hybridize and disperse, changing electronic character as a function of the Bloch vector   k {\\\\displaystyle \\\\mathbf {k} }  .It is thus expedient to understand the relevant electronic bands before attempting a Wannierization using LOCPROJ. To gain insight into the electronic character of certain bands, you can use the LORBIT tag.This decomposes the bands into local contributions either in terms of spherical harmonics (`LORBIT < 10`) or in terms of PAW projector functions (`LORBIT \u2265 10`).The relevant information is written to the PROCAR file and can be used to determine suitable projection targets for LOCPROJ. ### Example \\- diamond Let us examine a small example to highlight the procedure of determining projection targets.Here, we aim to Wannierize the four highest\\-lying valence bands of diamond.This is a group of bands that is energetically isolated (they are surrounded by band gaps).Since there is no mixing with any other states, the Wannierization process of these four bands is relatively simple.With the standard C POTCAR distributed with VASP, we can conveniently set `NBANDS = 4` to only consider those states. First, let us run a calculation with `LORBIT = 1` and `RWIGS = 1.1`.This decomposes the bands into   l {\\\\displaystyle l}  and  m {\\\\displaystyle m}  quantum numbers in terms of spherical harmonics.We get information on each k\\-point in the PROCAR file.Here is the start of the file, which contains information about the \u0393\\-point:  ```PROCAR lm decomposed# of k-points:    8         # of bands:    4         # of ions:    2  k-point     1\u00a0:    0.00000000 0.00000000 0.00000000     weight = 0.01562500 band     1 # energy  -11.73066124 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.508  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.508    2  0.508  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.508tot    1.016  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  1.016 band     2 # energy    9.78016466 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.000  0.173  0.173  0.173  0.032  0.032  0.000  0.032  0.000  0.613    2  0.000  0.173  0.173  0.173  0.032  0.032  0.000  0.032  0.000  0.613tot    0.000  0.346  0.345  0.346  0.063  0.063  0.000  0.063  0.000  1.226 band     3 # energy    9.78126079 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.000  0.305  0.011  0.202  0.002  0.037  0.000  0.056  0.000  0.613    2  0.000  0.305  0.011  0.202  0.002  0.037  0.000  0.056  0.000  0.613tot    0.000  0.610  0.023  0.404  0.004  0.074  0.000  0.112  0.000  1.226 band     4 # energy    9.78126093 # occ.  2.00000000 ion      s     py     pz     px    dxy    dyz    dz2    dxz  x2-y2    tot    1  0.000  0.041  0.334  0.143  0.061  0.026  0.000  0.007  0.000  0.613    2  0.000  0.041  0.334  0.143  0.061  0.026  0.000  0.007  0.000  0.613tot    0.000  0.081  0.668  0.287  0.122  0.052  0.000  0.015  0.000  1.226  ``` From this, we learn that the four valence bands are predominantly s\\-like and p\\-like (make sure that this is true also at the other k\\-points).This was to be expected since carbon forms hybridized sp\\-3 bonds in diamond. With this information, we can now specify projection targets.We seek to map the four bands in the simulation to four Wannier orbitals, so we choose to setup four sp\\-3 hybrids on one atom.The minimal INCAR file used in this example looks like this:  ``` ISMEAR = 0                  \u00a0! use Gaussian smearing for insulator SIGMA = 0.01                \u00a0! use small smearing NBANDS = 4                  \u00a0! use only 4 bands LOCPROJ = 1\u00a0: sp3\u00a0: Hy 1 4. \u00a0! ... to map onto 4 sp-3 functions  ``` The last part of the LOCPROJ setting (Hy 1 4\\.) specifies that we want Hyrdogen\\-like atomic orbitals (spherical harmonics) with main quantum number   n \\= 1 {\\\\displaystyle n\\=1}  and a diffusivity of   \u03b1 \\= 4 {\\\\displaystyle \\\\alpha \\=4}  .The diffusivity influences the spread of the local function.A higher value generally results in a higher degree of localization.This is beneficial for Wannier interpolation and yields Wannier orbitals of higher quality in that regard. | **Tip:** You may also choose to use the PAW information to specify local orbitals with LOCPROJ. In this case, you should use `LORBIT = 11` to extract the relevant information from the basis. || --- | For this example calculation, we use a relatively course \u0393\\-centered regular mesh of 4x4x4 k\\-points. To gauge the quality of the generated Wannier orbitals, we can plot the electronic band structure using Wannier interpolation and compare it against the ab\\-initio data.As of VASP 6\\.3\\.0, this can conveniently be done all in one run by providing the KPOINTS\\_OPT and the KPOINTS\\_WAN file.These files are automatically read from disk and provide a way to calculate the electronic eigenvalues at specific k\\-points. * KPOINTS\\_OPT: Charge density is kept fixed and the Hamiltonian is diagonalized at each provided k\\-point.* KPOINTS\\_WAN: Hamiltonian is constructed, interpolated and diagonalized using the Wannier orbitals. Importantly, these k\\-points can be different from those specified in the KPOINTS file. Here, we specify a k\\-point path through the first Brillouin zone using the line mode for both files.The results can then be read from the vaspout.h5 at the following locations:  ```results/electron_eigenvalues_kpoints_opt/results/electron_eigenvalues_kpoints_wan/  ``` The results can be seen in the following band\\-structure plot: [](File_Locproj-c-4.html) Electronic band structure of diamond. Comparison between ab\\-initio data and Wannier interpolation using LOCPROJ method. The agreement between both methods is already very good.The remaining differences can be systematically decreased by increasing the k\\-point density in the initial KPOINTS file or by choosing a more suitable local basis. SCDM method----------- In contrast to the LOCPROJ method, the SCDM method does not rely on the specification of a local basis.To activate the SCDM method, set `LSCDM = true`.This will use the information contained in the electronic one\\-particle density matrix to construct localized functions from the original Bloch (Kohn\\-Sham) orbitals.These localized functions are then orthonormalized using the one\\-shot SVD approach to obtain orthonormal Wannier orbitals. The number of Wannier orbitals obtained is controlled via the NUM\\_WANN tag. | **Mind:** You must ensure that `NUM_WANN \u2264 NBANDS` in order to have enough information to construct the Wannier orbitals. || --- | ### Example \\- diamond Let us repeat the example calculation shown earlier to obtain Wannier orbitals in diamond using the SCDM method.Once again, we choose `NBANDS = 4` and we set `NUM_WANN = 4` as well.The minimal INCAR file for this example looks like this:  ``` ISMEAR = 0     \u00a0! use Gaussian smearing for insulator SIGMA = 0.01   \u00a0! use small smearing NBANDS = 4     \u00a0! use only 4 bands NUM_WANN = 4   \u00a0! ... to map onto 4 Wannier orbitals LSCDM = true   \u00a0! ... using the SCDM method  ``` For this example calculation, we use the same course \u0393\\-centered regular mesh of 4x4x4 k\\-points as before.We also specify the same k\\-point path for KPOINTS\\_OPT and KPOINTS\\_WAN to perform band\\-structure calculations.The results can be seen in the following band\\-structure plot: [](File_Scdm-bands-c-5.html) Electronic band structure of diamond. Comparison between ab\\-initio data and Wannier interpolation using SCDM method. Also in this case, the agreement between both methods is very good. ### Comparison with LOCPROJ The diamond example shows that a Wannierization of good quality can be achieved with both the LOCPROJ as well as the SCDM approach.However, the bands considered in that example are fully isolated from the rest of the band structure and their electronic character is well known. In general, finding suitable projection targets can be a difficult and arduous task.This is where the more automatic SCDM method has a clear advantage over the LOCPROJ approach.The SCDM method extracts the electronic character of the bands directly from the density matrix.On the other hand, the LOCPROJ approach requires the user to have a good understanding of the band structure of the material. However, specifying local functions via LOCPROJ also has advantages over the SCDM method.First, there is very little control over the orbitals that the SCDM method generates because the number of calculational parameters is so small.This can be undesirable if the location, shape or symmetry of the Wannier orbital is important.With LOCPROJ, you can choose the kind of orbital much more freely, for example, to study chemical bonding.Second, SCDM orbitals do not generally obey the same symmetries as the crystal or as molecular bonds.This is because the SCDM procedure employs an iterative scheme for choosing \"optimal\" localized functions one after the other (this is based on a rank\\-revealing QR decomposition).As such, orbitals that should be symmetrically equivalent such as the hybridized sp\\-3 orbitals in the case of diamond end up being slightly different from each other.Consequently, the Wannier interpolation of the electronic band structure using SCDM orbitals will not be able to perfectly reproduce degeneracies since the underlying symmetries are broken.Usually, this difference is comparatively small but it is something to keep in mind. Disentanglement--------------- When `NBANDS > NUM_WANN` or when the bands are not energetically isolated, Wannierization becomes more involved.The difficulty lies in determining which electronic states to select when transforming the initial Bloch orbitals to the Wannier orbitals.This process is known as disentanglement. When using the LOCPROJ or SCDM methods, disentanglement can be achieved by applying a smooth cutoff or weight function to the electronic states during the Wannierization process.Loosely speaking, electronic states with a larger weight will be fitted more accurately.In VASP, we currently support three types of cutoff functions that can be selected via CUTOFF\\_TYPE, `erfc`, `gaussian` and `fermi`.The tags CUTOFF\\_MU and CUTOFF\\_SIGMA control the position,   \u03bc {\\\\displaystyle \\\\mu } , and width,   \u03c3 {\\\\displaystyle \\\\sigma } , of these cutoff functions, respectively. The complementary error function and Fermi function are particularly useful in scenarios where the band structure does not have a gap above the relevant energies, such as in metals.The Gaussian function is useful for extracting a Wannier representation from a group of bands that is not surrounded by any gaps, below or above. ### Example \\- SCDM Wannierization of LiF [](File_Scdm-bands-lif-disentangle.html) Electronic band structure of LiF. Comparison between ab\\-initio data and Wannier interpolation using SCDM method. LiF is an insulator with a wide band gap.The Wannierization of the valence states in isolation is as simple as shown earlier.However, the lowest\\-lying conduction states are relatively dispersive and hybridize with higher\\-lying states.This renders the Wannierization of these conduction bands difficult without disentanglement. To obtain the lowest lying conduction bands of LiF, we choose the `erfc` cutoff function with an appropriate   \u03bc {\\\\displaystyle \\\\mu }  and  \u03c3 {\\\\displaystyle \\\\sigma }  .By default, VASP chooses reasonable default values for these parameters.However, in order to get a good Wannier fit of the band structure, both   \u03bc {\\\\displaystyle \\\\mu }  and  \u03c3 {\\\\displaystyle \\\\sigma }  should be chosen carefully by the user through trial and error.As a rule of thumb, the smooth edge of the complementary error function should be positioned such that states below it are to be fitted more accurately.For this example, we have chosen   \u03bc \\= 10  eV {\\\\displaystyle \\\\mu \\=10{\\\\text{eV}}}  and  \u03c3 \\=0\\.1  eV {\\\\displaystyle \\\\sigma \\=0\\.1{\\\\text{eV}}} , which places the edge of the cutoff function amidst the lowest\\-lying conduction bands with a relatively sharp edge. The minimal INCAR file for this example is provided below:  ``` ISMEAR = 0          \u00a0! use Gaussian smearing for insulator SIGMA = 0.01        \u00a0! use small smearing NBANDS = 16         \u00a0! use 16 bands, including unoccupied states NUM_WANN = 9        \u00a0! ... to map to 9 Wannier orbitals LSCDM = true        \u00a0! ... using the SCDM method CUTOFF_TYPE = erfc  \u00a0! choose erfc cutoff function CUTOFF_MU = 10      \u00a0! ... and place it at 10 eV CUTOFF_SIGMA = 0.1  \u00a0! ... with a width of 0.1 eV  ``` The initial k\\-point mesh is chosen to be 8x8x8 \u0393\\-centered. The Wannier\\-interpolated band structure compares favorably against the ab\\-initio data below   \u03bc {\\\\displaystyle \\\\mu }  and starts to diverge from it more and more above   \u03bc {\\\\displaystyle \\\\mu }  .This is a general trend with these kinds of calculations and is an unavoidable side effect of the disentanglement procedure.The alternative would be a much higher and sharper cutoff that requires more Wannier states to be constructed.This is however not generally advisable as it can negatively affect the quality of the Wannierization. | **Tip:** A hard cutoff can be achieved by specifying a tiny CUTOFF\\_SIGMA. || --- | | **Mind:** The quality of the Wannierization can depend strongly on the choice of CUTOFF\\_MU and CUTOFF\\_SIGMA. It will often take some trial and error to find reasonable parameters. || --- | Wannier90--------- Wannier orbitals obtained inside VASP via the LOCPROJ or SCDM methods can be passed to Wannier90 for further processing.Wannier90 employs an iterative algorithm that generates so\\-called maximally\\-localized Wannier functions (MLWF).MLWFs are usually superior in terms of quality for band structure calculations.However, even though they are generated from an iterative procedure, Wannier90 still relies on good first guesses for the localized functions.This is where the SCDM method can provide a suitable set of initial functions for the MLWF procedure.In the case of the LOCPROJ tag, the projection matrix   A  m n  k {\\\\displaystyle A\\_{mn\\\\mathbf {k} }}  is passed directly to Wannier90 where the Wannier transformation is constructed.VASP handles the communication of the projection targets and matrix dimensions automatically. To generate MLWFs from VASP orbitals, you can add the following lines to your INCAR file:  ``` LWANNIER90 = true   # or lwannier90_run = true WANNIER90_WIN = \"   dis_num_iter = 100   num_iter = 100 \"  ``` where dis\\_num\\_iter specifies the number of iteration during Wannier90's disentanglement procedure and num\\_iter the number of iteration during the MLWF procedure. | **Important:** Make sure that VASP is compiled with the VASP2WANNIER90 precompiler option. || --- | | **Important:** When using the SCDM method together with Wannier90, it is recommended to set `dis_num_iter = 0` via WANNIER90\\_WIN or in the Wannier90 input file. || --- | LWANNIER90 activates the interface between VASP and Wannier90 and writes a wannier90\\.win input file that can then be read by Wannier90\\.In addition to the basic input parameters, VASP also writes the overlap matrices   M  m n {\\\\displaystyle M\\_{mn}}  and  A  m n {\\\\displaystyle A\\_{mn}}  to the corresponding files, wannier90\\.mmn and wannier90\\.amn.  M  m n {\\\\displaystyle M\\_{mn}}  contains the overlaps between all pairs of Bloch orbitals.Meanwhile,   A  m n {\\\\displaystyle A\\_{mn}}  contains the overlaps between the Bloch orbitals and the projection targets (in this case, the SCDM orbitals obtained from VASP). | **Tip:** The wannier90\\.mmn and wannier90\\.amn files can be explicitly written via `LWRITE_MMN_AMN = true`. This is switched on by default when `LWANNIER90 = true`. It is unnecessary to write these files when `LWANNIER90_RUN = true` as they are directly passed to Wannier90\\. || --- | Run VASP with the above INCAR tags to generate Wannier orbitals via SCDM or LOCPROJ and to generate the required Wannier90 input files.Afterwards, run Wannier90 to generate MLWFs (all of this can be done in one run when setting `LWANNIER90_RUN = true`).At this point, you can use the functionality available in Wannier90 to plot the band structure, the orbitals, etc. When plotting orbitals using Wannier90, in addition to `LWRITE_MMN_AMN = true`, it may also be necessary to set `LWRITE_UNK = true`.This writes the cell\\-periodic part of the Bloch orbitals to disk."}
{"file_name": "DDsC_dispersion_correction.md", "content": "The expression for the density\\-dependent energy correction dDsC[\\[1]](#cite_note-steinmann:jcp:11-1)[\\[2]](#cite_note-steinmann:jctc:11-2) is very similar to that of the DFT\\-D2 method (see the equation for  {\\\\displaystyle E\\_{disp}}  for the DFT\\-D2 method). The important difference is, however, that the dispersion coefficients and damping function are charge\\-density dependent. The dDsC method is therefore able to take into account variations in the vdW contributions of atoms due to their local chemical environment. In this method, polarizability, dispersion coefficients, charge and charge\\-overlap of an atom in a molecule or solid are computed in the basis of a simplified exchange\\-hole dipole moment formalism[\\[1]](#cite_note-steinmann:jcp:11-1) pioneered by Becke and Johnson[\\[3]](#cite_note-becke:jcp:05-3). The dDsC dispersion energy is expressed as follows:  \\= \u2212  \u2211  i \\= 2  N  a t  \u2211  j \\= 1  i \u2212 1  \u2211  n \\= 3  n \\= 5  f  2 n  ( b  R  i j  )  C  2 n  i j  R  i j  2 n  \\= \u2212  \u2211  i \\= 2  N  a t  \u2211  j \\= 1  i \u2212 1  f  6  ( b  R  i j  )  C  6 , i j  R  i j  6 {\\\\displaystyle {{E}\\_{\\\\mathrm {disp} }}\\=\\-\\\\sum \\\\limits \\_{i\\=2}^{{N}\\_{\\\\mathrm {at} }}{\\\\sum \\\\limits \\_{j\\=1}^{i\\-1}\\\\sum \\\\limits \\_{n\\=3}^{n\\=5}{{{f}\\_{2n}}(b{{R}\\_{ij}}){\\\\frac {C\\_{2n}^{ij}}{R\\_{ij}^{2n}}}}}{{E}\\_{\\\\mathrm {disp} }}\\=\\-\\\\sum \\\\limits \\_{i\\=2}^{{N}\\_{\\\\mathrm {at} }}{\\\\sum \\\\limits \\_{j\\=1}^{i\\-1}{{{f}\\_{6}}(b{{R}\\_{ij}}){\\\\frac {C\\_{6,ij}}{R\\_{ij}^{6}}}}}} where   N  a t {\\\\displaystyle N\\_{\\\\mathrm {at} }}  is the number of atoms in the system and   b {\\\\displaystyle b}  is the Tang and Toennies (TT) damping factor. The damping function   f  6  ( b  R  i j  ) {\\\\displaystyle f\\_{6}(bR\\_{ij})}  is defined as follows:  f  6  ( x ) \\= 1 \u2212 exp \u2061 ( \u2212 x )  \u2211  k \\= 0  6  x  k  k ! {\\\\displaystyle f\\_{6}(x)\\=1\\-\\\\exp(\\-x)\\\\sum \\_{k\\=0}^{6}{\\\\frac {x^{k}}{k!}}} and its role is to attenuate the correction at short internuclear distances. A key component of the dDsC method is the damping factor   b {\\\\displaystyle b}  :  b ( x ) \\=  2  b  i j ,  a s y m  e  a  0  \u22c5 x  \\+ 1 {\\\\displaystyle b(x)\\={\\\\frac {2b\\_{ij,\\\\mathrm {asym} }}{{{e}^{{{a}\\_{0}}\\\\cdot x}}\\+1}}} where the fitted parameter   a  0 {\\\\displaystyle a\\_{0}}  controls the short\\-range behaviour and   x {\\\\displaystyle x}  is the damping argument for the TT\\-damping factor associated with two separated atoms (  b  i j ,  a s y m {\\\\displaystyle b\\_{ij,\\\\mathrm {asym} }}  ).The term   b  i j ,  a s y m {\\\\displaystyle b\\_{ij,\\\\mathrm {asym} }}  is computed according to the combination rule:  b  i j ,  a s y m  \\= 2  b  i i ,  a s y m  \u22c5  b  j j ,  a s y m  b  i i ,  a s y m  \\+  b  j j ,  a s y m {\\\\displaystyle b\\_{ij,\\\\mathrm {asym} }\\=2{\\\\frac {b\\_{ii,\\\\mathrm {asym} }\\\\cdot b\\_{jj,\\\\mathrm {asym} }}{b\\_{ii,\\\\mathrm {asym} }\\+b\\_{jj,\\\\mathrm {asym} }}}} with   b  i i ,  a s y m {\\\\displaystyle b\\_{ii,\\\\mathrm {asym} }}  being estimated from effective atomic polarizabilities:  b  i i ,  a s y m  \\=  b  0  \u22c5  1  \u03b1  i  3 {\\\\displaystyle {b}\\_{ii,\\\\mathrm {asym} }\\={b}\\_{0}\\\\cdot {\\\\sqrt\\[{3}]{\\\\frac {1}{\\\\alpha \\_{i}}}}} The effective atom\\-in\\-molecule polarizabilities   \u03b1  i {\\\\displaystyle \\\\alpha \\_{i}}  are computed from the tabulated free\\-atomic polarizabilities (available for the elements of the first six rows of the periodic table except of lanthanides) in the same way as in the Tkatchenko\\-Scheffler method and Tkatchenko\\-Scheffler method with iterative Hirshfeld partitioning, but the Hirshfeld\\-dominant instead of the conventional Hirshfeld partitioning is used.The last element of the correction is the damping argument   x {\\\\displaystyle x}  :  x \\=  (  2  q  i j  \\+  \\|  (  Z  i  \u2212  N  i  D  ) \u22c5 (  Z  j  \u2212  N  j  D  )  \\|  r  i j  )  N  i  D  \\+  N  j  D  N  i  D  \u22c5  N  j  D {\\\\displaystyle x\\=\\\\left(2{{q}\\_{ij}}\\+{\\\\frac {\\|({{Z}\\_{i}}\\-N\\_{i}^{D})\\\\cdot ({{Z}\\_{j}}\\-N\\_{j}^{D})\\|}{{r}\\_{ij}}}\\\\right){\\\\frac {N\\_{i}^{D}\\+N\\_{j}^{D}}{N\\_{i}^{D}\\\\cdot N\\_{j}^{D}}}} where   Z  i {\\\\displaystyle Z\\_{i}}  and  N  i  D {\\\\displaystyle N\\_{i}^{D}}  are the nuclear charge and Hirshfeld dominant population of atom   i {\\\\displaystyle i} , respectively.The term   2  q  i j  \\=  q  i j  \\+  q  j i {\\\\displaystyle 2q\\_{ij}\\=q\\_{ij}\\+q\\_{ji}}  is a covalent bond index based on the overlap of conventional Hirshfeld populations   q  i j  \\= \u222b  w  i  (  r  )  w  j  (  r  ) n (  r  ) d  r {\\\\displaystyle q\\_{ij}\\=\\\\int w\\_{i}({\\\\mathbf {r} })w\\_{j}({\\\\mathbf {r} })n({\\\\mathbf {r} })d{\\\\mathbf {r} }} , and the fractional term in the parentheses is a distance\\-dependent ionic bond index. The dDsC correction is invoked by setting IVDW\\=4\\. The default values for damping function parameters are available for the functionals PBE (GGA\\=*PE*}) and revPBE (GGA\\=*RE*). If another functional is used, the user has to define these parameters via corresponding tags in the INCAR file (parameters for common DFT functionals can be found in reference [\\[2]](#cite_note-steinmann:jctc:11-2). The following parameters can be optionally defined in the INCAR file (the given values are the default ones): * VDW\\_RADIUS\\=50\\.0\u00a0: cutoff radius (in   \u00c5 {\\\\displaystyle \\\\mathrm {\\\\AA} } ) for pair interactions* VDW\\_S6\\=13\\.96\u00a0: scaling factor   a  0 {\\\\displaystyle {a}\\_{0}} * VDW\\_SR\\=1\\.32\u00a0: scaling factor   b  0 {\\\\displaystyle {b}\\_{0}} The Performance of PBE\\-dDsC in the description of the adsorption of hydrocarbons on Pt(111\\) has been examined in reference [\\[4]](#cite_note-gautier:pccp:15-4).   | **Mind:*** The dDsC method has been implemented into VASP by Stephan N. Steinmann. * This method requires the use of POTCAR files from the PAW dataset version 52 or later. * The input reference polarizabilities for non\\-interacting atoms are available only for elements of the first six rows of periodic table except of the lanthanides. * It is essential that a sufficiently dense FFT grid (controlled via NGXF, NGYF and NGZF) is used when using dDsC, especially for accurate gradients. We strongly recommend to use PREC\\=*Accurate* for this type of calculations (in any case, avoid using PREC\\=*Low*). * The charge\\-density dependence of gradients is neglected. This approximation has been thoroughly investigated and validated in reference [\\[5]](#cite_note-bremond:jcp:14-5). || --- |"}
{"file_name": "LVDWEXPANSION.md", "content": "LVDWEXPANSION= .TRUE. \\| .FALSE.   Default: **LVDWEXPANSION** \\= .FALSE.nDescription: LVDWEXPANSION\u00a0 decides whether to write the two\\- to six\\- body contributions to MBD dispersion energy in the OUTCAR file.  ---"}
{"file_name": "ICAMM_Rennes_2019_HOWTO.md", "content": "Here is a brief tutorial on how to run a calculation and how to run post\\-treatment tools during the VASP training school in Rennes. * **First thing to do**: - launch terminal: go to **openSUSE** booklet (down left of the screen), select **Syst\u00e8me** and choose **Terminal** - in this terminal you run the following 5 commands (copy/paste):  ```export LC_NUMERIC=\"en_US.UTF-8\"export LIBGL_ALWAYS_SOFTWARE=1export vasp_std=\"mpirun -np 2 /usr/local/ICAMM_2019/bin_vasp/5.4/vasp_std\"export vasp_gam=\"mpirun -np 2 /usr/local/ICAMM_2019/bin_vasp/5.4/vasp_gam\"export vasp_ncl=\"mpirun -np 2 /usr/local/ICAMM_2019/bin_vasp/5.4/vasp_ncl\"  ``` **3 versions of the VASP code are available for vasp5\\.4**: - the so\\-called *standard* version which allows you to make *standard* calculation with several K\\-points To use it, enter the following command on a terminalIn sequential:`vasp5_std`- the so\\-called *non\\-colinear* version which allows you to make *non\\-colinear* calculation with several K\\-points To use it, enter the following command on a terminalIn sequential:`vasp5_ncl`- the so\\-called *gamma* version which allows you to make *gamma* calculation but with only 1 K\\-point To use it, enter the following command on a terminalIn sequential:`vasp5_gam` **3 versions of the VASP code are available for vasp6:** - the so\\-called *standard* version which allows you to make *standard* calculation with several K\\-points To use it, enter the following command on a terminalIn sequential:`vasp6_std`In parallel: `mpirun \u2013np 2 /usr/local/ICAMM_2019/bin_vasp/6/vasp_std`- the so\\-called *non\\-colinear* version which allows you to make *non\\-colinear* calculation with several K\\-points To use it, enter the following command on a terminalIn sequential:`vasp6_ncl`In parallel: `mpirun \u2013np 2 /usr/local/ICAMM_2019/bin_vasp/6/vasp_ncl`- the so\\-called *gamma* version which allows you to make *gamma* calculation but with only 1 K\\-point To use it, enter the following command on a terminalIn sequential:`vasp6_gam`In parallel: `mpirun \u2013np 2 /usr/local/ICAMM_2019/bin_vasp/6/vasp_gam`   **Please always keep in mind that our local workstation are quite limited so please avoid to run two VASP calculations simultaneously.*** **wannier90** To use wannier90, use the following command:`/usr/local/ICAMM_2019/wannier90-1.2/wannier90.x`* **phonopy** To use phonopy, use the following command:`phonopy`* **Gnuplot**: Gnuplot is a portable command\\-line driven graphing utility.To use it, enter the following command on a terminal`gnuplot`For more infos about gnuplot, visit the following website* **p4vasp**: To use the p4vasp visualization software, use the following command: `p4v`* **VESTA**: To use the VESTA visualization software, use the following command: `VESTA`* **VMD**: To use the vmd visualization software, use the following command: `VMD`"}
{"file_name": "Computational_setup.md", "content": "The **Vienna ab\\-initio simulation package** (VASP) is a computer program for atomic scale materials modeling from first principles. To get a license, please refer to the registration form on the VASP website. You will get access to the VASP source and compile it directly on your hardware to achieve optimal performance.  After the installation, VASP can be executed from the command line of a Terminal. Navigate to a working directory. In the working directory, VASP looks for input files that determine what calculation is performed. The most important input files are  * the POSCAR file: Defines the structure of the material, i.e., lattice vectors, ionic positions, etc.* the INCAR file: General selection of the algorithm, setting parameters, etc.* the POTCAR file: Contains the pseudopotentials and other information relevant for the PAW method* the KPOINTS file: Defines the Bloch vectors **k** in reciprocal space. The central way to control the calculation is by setting INCAR tags in the INCAR file. Depending on the VASP calculation, there are other input files to provide settings for the calculation, e.g., the ICONST file.  | **Tip:** To learn how to set up a calculation, we recommend following some of our tutorials. || --- | Finally, VASP will write output files to the working directory.  | **Tip:** For postprocessing, py4vasp is a convenient Python package to read and visualize the produced data. || --- | This category contains all pages and topics relevant to the **computational setup**. For instance, installation, files, performance, etc. Subcategories------------- This category has the following 9 subcategories, out of 9 total. ### C * Files* Performance### H * Howto### I * INCAR tag* Input files* Installation### O * Output files### P * POTCAR tag* Pseudopotentials Pages in category \"Calculation setup\"------------------------------------- The following 3 pages are in this category, out of 3 total. ### A * Available pseudopotentials### C * Command\\-line arguments### M * Minimal reproducible example"}
{"file_name": "ML_ICRITERIA.md", "content": "ML\\_ICRITERIA= \\[integer]n| Default: **ML\\_ICRITERIA** | \\= 3 | for ML\\_MODE \\= SELECT || --- | --- | --- ||  | \\= 1 | else |   Description: Decides whether (ML\\_ICRITERIA\\>0\\) or how the Bayesian error threshold (ML\\_CTIFOR) is updated within the machine learning force field method. ML\\_CTIFOR determines whether a first\\-principles calculation is performed.  --- The use of this tag in combination with the learning algorithms is described here: here. The following options are possible for ML\\_ICRITERIA: * ML\\_ICRITERIA \\= 0: The threshold ML\\_CTIFOR is not updated. This method is only recommended for refining an existing force field. For example, if you know that ML\\_CTIFOR has taken a value of 0\\.03 in previous runs, you can continue to collect training data by now setting the threshold to ML\\_CTIFOR\\=0\\.03 to capture all contours and areas of the potential energy surface where first\\-principles data are still missing. To achieve extremely robust force fields, it is recommended to run NSW\\=100000 steps in this mode to slightly above the highest temperature to be considered.* ML\\_ICRITERIA \\= 1: Set ML\\_CTIFOR to a value proportional to the average Bayesian errors of the ML\\_MHIS steps. ML\\_ICRITERIA \\= 1, the average is calculated only for errors after updating the force field. Such updates are quite rare, so updates of ML\\_CTIFOR are also quite rare in this mode. Furthermore, since the first principle calculations are only performed for configurations with large Bayesian errors (\"outliers\"), the force field is updated only after the outliers are taken into account. Therefore, the Bayes errors included in the averaging are typically larger than the average Bayes error in this mode. It is therefore recommended to set ML\\_CX to 0 (default) in this mode.* ML\\_ICRITERIA \\= 2: Update the criteria using the moving average of all previous Bayesian errors. This method gives the average of the errors of all previous predictions (i.e. all previously considered MD steps), while ML\\_ICRITERIA \\= 1 gives only the average of the predictions immediately following the retraining. The length of the history in this mode is currently hard\\-coded and set to 400 steps (or ML\\_MHIS x 50 in the newer version). This mode tends to continue sampling, and is therefore somewhat prone to oversampling: as Bayesian errors decrease, the threshold is steadily lowered and additional first\\-principles computations are initiated. The recommended values for ML\\_CX in this mode are approximately 0\\.1 to 0\\.3\\. \\= 0,2, a first\\-principles calculation is typically performed every 50 steps. This means that if the number of ionic steps is, say, NSW\\=50,000, then about 1,000 first\\-principles calculations should be performed. For many materials, this results in a reasonably good and robust ML database.* ML\\_ICRITERIA\\=3: This mode is the default for reselecting local reference configurations from an existing ML\\_AB file (ML\\_MODE \\= *SELECT*). The ML\\_AB file shall contain a ML\\_CTIFOR for each structure stored in the ML\\_AB file. These values are used by VASP as Bayesian error thresholds for structure selection. This also means that the tags ML\\_CTIFOR, ML\\_CX, ML\\_CSLOPE, ML\\_CSIG and ML\\_MHIS set in INCAR are ignored. This mode is only available when ML\\_MODE\\=*SELECT* is activated. It is important that the ML\\_AB file contains a ML\\_CTIFOR value for each structure included. Otherwise, VASP will throw an error and will also indicate to the user that some ML\\_CTIFOR values are missing from the ML\\_AB file. As mentioned above, the ML\\_CX tag can be used to fine\\-tune the update of ML\\_CTIFOR. The fact that the ML\\_ICRITERIA \\= 1 or ML\\_ICRITERIA \\= 2 is a matter of taste. Just remember that ML\\_CX must be set differently in both modes. While ML\\_ICRITERIA \\= 1, the ML\\_CX \\= 0\\.0, ML\\_ICRITERIA \\= 2, ML\\_CX \\= 0\\.2 is a good default. Most of our force fields use ML\\_ICRITERIA \\= 1, but this mode sometimes stagnates and stops the first principle calculations.On the other hand, and as already mentioned, using ML\\_ICRITERIA \\= 2 is prone to oversampling, i.e. it may perform too many first principle calculations."}
{"file_name": "NHC_NCHAINS.md", "content": "NHC\\_NCHAINS= \\[integer]   Default: **NHC\\_NCHAINS** \\= 0nDescription: Length of the Nos\u00e9\\-Hoover chain.   --- NHC\\_NCHAINS sets the length of the chain for the Nos\u00e9\\-Hoover\u2013chain (NHC) thermostat. Typically, this tag is set to a value between 1 and 5\\. The maximal allowed value is 20\\.  In case NHC\\_NCHAINS\\=0, the thermostat is switched off and the underlying dynamics generate a microcanonical (NVE) ensemble. NHC\\_NCHAINS\\=1 corresponds to the standard Nos\u00e9\\-Hoover thermostat."}
{"file_name": "KGAMMA.md", "content": "KGAMMA= \\[logical]   Default: **KGAMMA** \\= .TRUE.nDescription: Determines whether the k points (specified by the KSPACING tag ) include (KGAMMA\\=.TRUE.) the   \u0393 {\\\\displaystyle \\\\Gamma }  point.  --- | **Important:** If a KPOINTS file is present, VASP ignores the KGAMMA tag and the KSPACING tag. || --- |"}
{"file_name": "Practical_guide_to_GW_calculations.md", "content": "The GW approximation is an approximation to the self\\-energy. GW calculations are available as of VASP.5\\.X. For details on the implementation and use of the *GW* routines, we recommend the papers by Shishkin *et al.* [\\[1]](#cite_note-shishkin:prb:2006-1)[\\[2]](#cite_note-shishkin:prb:2007-2)[\\[3]](#cite_note-shishkin:prl:2007-3) and Fuchs *et al.*[\\[4]](#cite_note-fuchs:prb:2007-4) Single step procedure: GW in one go=================================== As of VASP.6\\.3 all GW approximations can be run in one single run by selecting the corresponding ALGO tag and omitting NBANDS), for instance like so   ```System\") = SiCALGO = EVGW0, QPGW0, EVGW, QPGW, GW0R or GWR # use an algorithgm described belowNELMGW = 1,2,.. # number of self-consistency cyclesISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesLOPTICS = .TRUE.  # for insulators, omit for metals  ``` Note, NBANDS must not be present in the INCAR to select this procedure. | **Important:** In older versions a two step procedure is required, where the first step is always a DFT calculation and the second step the actual GW calculation. || --- | The two\\-step procedure is described below. Caveats------- The single\\-step GW procedure performs a DFT step internally with an exact diagonalization of the Kohn\\-Sham Hamiltonian using the maximum available NBANDS supported for the chosen ENCUT value. Consequently, a large number of unoccupied bands is initialized with random plane\\-wave coefficients. In rare cases, this yields two linearly dependent column vectors in the Hamiltonian and results in LAPACK errors like \"ZPOTRF fails\". These errors can be prevented using the two\\-step GW procedure as described below. Furthermore, one can \"ramp up\" NBANDS to the maximum value by repeatedly restarting the DFT calculation from a pre\\-converged WAVECAR with fewer bands. First step: DFT calculation=========================== *GW* calculations always require a one\\-electron basis set. Usually this set is obtained from a standard DFT calculation and written into the WAVECAR file and can be calculated for instance the following INCAR file:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesLOPTICS = .TRUE.  ``` Note, that a significant number of empty bands is required for *GW* calculations, so that it might be better to perform the calculations in two steps: first a standard ground\\-state calculation with few unoccupied orbitals only,  ```System\") = SiC ground-state occupied orbitalsISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesEDIFF = 1E-8              \u00a0! required tight tolerance for ground-state orbitals  ``` and, second, a calculation of a large number of unoccupied orbitals  ```System\")  = SiC unoccupied orbitalsALGO = Exact              \u00a0! use exact diagonalization of the HamiltonianNELM = 1                  \u00a0! since we are already converged stop after one stepNBANDS = 512              \u00a0! maybe even larger                ISMEAR = 0\u00a0; SIGMA = 0.05 \u00a0! small sigma is required to avoid partial occupanciesLOPTICS = .TRUE.  ``` Furthermore, note that the flag LOPTICS\\=.TRUE. is required to write the file WAVEDER, which contains the derivative of the orbitals with respect to **k**. This derivative is used to construct the head and wings of the dielectric matrix employing **k**\u00b7**p** perturbation theory and is important to accelerate k\\-point convergence for insulators and semiconductors.  | **Warning:** For metals, in general, we recommend omitting the LOPTICS tag and removing the WAVEDER file from the directory. || --- | Optional: Use Hybrid functionals-------------------------------- Optionally, one can start a *GW* calculation from a hybrid functional, such as HSE. For hybrid functionals, the two step procedure will accordingly involve the following INCAR files. In the first step, converged HSE03 orbitals are determined (see here for a selection of available hybrid functionals):  ```System\")  = SiC ground-state occupied orbitalsISMEAR = 0\u00a0; SIGMA = 0.05ALGO = Damped\u00a0; TIME = 0.5 \u00a0! or ALGO = ConjugateLHFCALC = .TRUE.\u00a0; AEXX = 0.25\u00a0; HFSCREEN = 0.3 EDIFF = 1E-6     \u00a0! required tight tolerance for ground-state orbitals  ``` Secondly, determine the HSE03 orbitals for unoccupied states:  ```System\")  = SiC unoccupied orbitalsNBANDS = 512     \u00a0! maybe even largerALGO = ExactNELM = 1         \u00a0! since we are already converged stop after one stepISMEAR = 0\u00a0; SIGMA = 0.05LHFCALC = .TRUE.\u00a0; AEXX = 0.25\u00a0; HFSCREEN = 0.3 LOPTICS = .TRUE. # for insulators  ``` Second step: GW calculation=========================== The actual *GW* calculation is done in a second step. Here different *GW* flavors are possible and are selected with the ALGO tag.  Note that as of VASP.6 the GW ALGO tags have been renamed, see here for VASP.5\\.X tags. Single shot quasiparticle energies: G0W0---------------------------------------- This is the simplest *GW* calculation and computationally the most efficient one. A single\\-shot calculation is often referred to as G0W0 and calculates the quasiparticle energies from a single *GW* iteration by neglecting all off\\-diagonal matrix elements of the self\\-energy and employing a Taylor expansion of the self\\-energy around the DFT energies   E  n  q  ( 0 ) {\\\\displaystyle E\\_{n{\\\\bf {q}}}^{(0\\)}} . The corresponding equation becomes  E  n  q  \\=  E  n  q  ( 0 )  \\+  Z  n  q  \u27e8  \u03d5  n  q  ( 0 )  \\|  \u03a3 (  E  n  q  ( 0 )  ) \u2212  V  x c  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle E\\_{n{\\\\bf {q}}}\\=E\\_{n{\\\\bf {q}}}^{(0\\)}\\+Z\\_{n{\\\\bf {q}}}\\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|\\\\Sigma (E\\_{n{\\\\bf {q}}}^{(0\\)})\\-V\\_{xc}\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle } with the renormalization factor   Z  n  q  \\=  1  1 \u2212  R e  \u27e8  \u03d5  n  q  ( 0 )  \\|  \u03a3 \u2032  (  E  n  q  ( 0 )  )  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle Z\\_{n{\\\\bf {q}}}\\={\\\\frac {1}{1\\-{\\\\rm {Re}}\\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|\\\\Sigma '(E\\_{n{\\\\bf {q}}}^{(0\\)})\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle }}} In VASP, G0W0 calculations are selected using an INCAR file such as  ```System\")  = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05NELMGW = 1\u00a0! use NELM for VASP.6.2 and older ALGO = EVGW0\u00a0! use \"GW0\" for VASP.5.XNOMEGA = 50  ``` | **Mind:** Convergence with respect to the number of empty bands NBANDS and with respect to the number of frequencies NOMEGA must be checked carefully. || --- | To avoid complicated inter\\-nested tests, we recommend calculating all orbitals that the plane\\-wave basis set allows to calculate (except for simple tests). For further reading, please consult the section on ENCUTGW. After a successful G0W0 run, VASP will write the quasiparticle energies into the OUTCAR file for a set of NBANDSGW bands for every k\\-point in the Brillouin zone. Look for lines similar to   ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1for sc-GW calculations column KS-energies equals QP-energies in previous step and V_xc(KS)=  KS-energies - (<T + V_ion + V_H > + <T+V_H+V_ion>^1  + <V_x>^1) k-point   1\u00a0:       0.0000    0.0000    0.0000 band No.  KS-energies  QP-energies   sigma(KS)   V_xc(KS)     V^pw_x(r,r')   Z            occupation Imag(sigma)      1      -7.1627      -8.3040     -14.5626     -12.7276     -21.6682       0.6219       2.0000       1.2037     2      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914     3      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914     4      -2.0901      -3.4347     -15.7660     -14.2799     -21.7439       0.9048       2.0000       0.6914     5       0.4603      -0.4663     -13.7603     -12.5200     -18.1532       0.7471       2.0000       0.2167     6       0.4603      -0.4663     -13.7603     -12.5200     -18.1532       0.7471       2.0000       0.2167  ``` The first column is the band index and the third column denotes the quasiparticle energies   E  n  q {\\\\displaystyle E\\_{n{\\\\bf {q}}}} . Column two, four, five and seven refer to the DFT energies   E  n  q  ( 0 ) {\\\\displaystyle E\\_{n{\\\\bf {q}}}^{(0\\)}} , diagonal matrix elements of the self\\-energy   \u27e8  \u03d5  n  q  ( 0 )  \\|  \u03a3 ( \u03c9 \\=  E  n  q  ( 0 )  )  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle \\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|\\\\Sigma (\\\\omega \\=E\\_{n{\\\\bf {q}}}^{(0\\)})\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle } , the exchange\\-correlation potential   \u27e8  \u03d5  n  q  ( 0 )  \\|  V  x c  \\|  \u03d5  n  q  ( 0 )  \u27e9 {\\\\displaystyle \\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|V\\_{xc}\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle }  and the renormalization factor   Z  n  q {\\\\displaystyle Z\\_{n{\\\\bf {q}}}}  defined above, respectively. Partially self\\-consistent calculations: EVGW0---------------------------------------------- In most cases, the *best* results (*i.e.*, closest to experiment) are obtained by iterating only   G {\\\\displaystyle G}  via the spectral representation  G  ( i )  (  r  ,  r  \u2032  , \u03c9 ) \\=  \u2211  n  k  \u03d5  n  k  \u2217 ( 0 )  (  r  )  \u03d5  n  k  ( 0 )  (  r  \u2032  )  \u03c9 \u2212  E  n  k  ( i ) {\\\\displaystyle G^{(i)}({\\\\bf {r}},{\\\\bf {r}}',\\\\omega )\\=\\\\sum \\_{n{\\\\bf {k}}}{\\\\frac {\\\\phi \\_{n{\\\\bf {k}}}^{\\*(0\\)}({\\\\bf {r}})\\\\phi \\_{n{\\\\bf {k}}}^{(0\\)}({\\\\bf {r}}')}{\\\\omega \\-E\\_{n{\\\\bf {k}}}^{(i)}}}} but keeping   W {\\\\displaystyle W}  and the orbitals   \u03d5  n  q  ( 0 ) {\\\\displaystyle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}}  fixed to the initial DFT level. This method goes back to Hybertsen and Louie [\\[5]](#cite_note-hybertsen:prb:1986-5) and can be achieved in two ways.  If the spectral method is not selected (LSPECTRAL\\=.FALSE., requiring much more compute time), the quasiparticle (QP) shifts are iterated automatically four times, and one finds four sets of QP shifts in the OUTCAR file. The first one corresponds to the G0W0 case. The INCAR file is simply:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = EVGW0\u00a0! use \"GW0\" in VASP.5.XLSPECTRAL =.FALSE.  ``` | **Tip:** In self\\-consistent GW calculations, convergence with the number of updated bands NBANDSGW must be checked carefully. || --- | For technical reasons, it is not possible to iterate   G {\\\\displaystyle G}  in this manner if LSPECTRAL\\=.TRUE. is set in the INCAR file (this is the default). In this case, an iteration number must be supplied in the INCAR file using the NELMGW tag. Usually, three to four iterations are sufficient to obtain accurate QP shifts.  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = EVGW0\u00a0! use \"GW0\" in VASP.5.XNELMGW = 4\u00a0! use NELM in VASP.6.2 and older  ``` The results are found again in the OUTCAR file  ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 4 k-point   1\u00a0:       0.0000    0.0000    0.0000 band No. old QP-enery  QP-energies   sigma(KS)   T+V_ion+V_H  V^pw_x(r,r')   Z            occupation Imag(sigma)      1      -8.6924      -8.7107     -14.2871       5.5647     -21.6681       0.6076       2.0000       1.1648     2      -3.4692      -3.4806     -15.6742      12.1894     -21.7437       0.7304       2.0000       0.6351     3      -3.4692      -3.4806     -15.6742      12.1894     -21.7437       0.7304       2.0000       0.6351     4      -3.4692      -3.4806     -15.6742      12.1894     -21.7437       0.7304       2.0000       0.6351     5      -0.6957      -0.7006     -13.6827      12.9802     -18.1531       0.7264       2.0000       0.2769     6      -0.6957      -0.7006     -13.6827      12.9802     -18.1531       0.7264       2.0000       0.2769     7      -0.6957      -0.7006     -13.6827      12.9802     -18.1531       0.7264       2.0000       0.2769  ``` In contrast to single shot GW calculations, the second column represent now the QP\\-energies from the previous iteration.  Partially self\\-consistent quasiparticle calculations: QPGW0------------------------------------------------------------ If non diagonal components of the self\\-energy (in the orbital basis) should be included use ALGO\\=QPGW0\\. The following setting can be used:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = QPGW0\u00a0! or \"scGW0\" for VASP.5.2.11 and older LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.\u00a0! ommit this lines for metalsNELMGW = 4\u00a0! use NELM for VASP.6.2 and older  ``` In this case, the orbitals are updated as well by constructing a hermitian (energy independent) approximation to the self\\-energy [\\[3]](#cite_note-shishkin:prl:2007-3). The \"static\" COHSEX approximation can be selected by setting NOMEGA \\= 1 [\\[6]](#cite_note-bruneval:prb:06-6). To improve convergence to the ground\\-state, the charge density (and the charge density only) is mixed using a Kerker type mixing in VASP.5\\.3\\.2 and more recent versions (see IMIX). The mixing parameters AMIX, BMIX, AMIX\\_MAG, BMIX\\_MAG, AMIN can be adjusted, if convergence problems are encountered. We strongly urge the user to monitor convergence by inspecting the lines   ```charge density residual ``` in the OUTCAR files. Alternatively, the mixing may be switched off by setting IMIX\\=0 and controlling the step width for the orbitals using the parameter TIME (which defaults to 0\\.4\\). This selects a fairly sophisticated damped MD algorithm that is also used for DFT methods when ALGO\\=Damped. This method is generally more reliable for metals and materials with strong charge sloshing. After every iteration, VASP writes the following lines into the OUTCAR file  ```QP shifts <psi_nk| G(iteration)W_0 |psi_nk>: iteration 1    GWSYM:  cpu time   15.8978: real time   15.9528 k-point   1\u00a0:       0.0000    0.0000    0.0000 band No. DFT-energies  QP-energies  QP-e(diag)   sigma(DFT)    Z            occupation      1      -7.1626      -8.4217      -8.3038      -8.9978       0.6219       2.0000     2      -2.0899      -3.4394      -3.4347      -3.5765       0.9047       2.0000     3      -2.0899      -3.4394      -3.4347      -3.5765       0.9047       2.0000     4      -2.0899      -3.4394      -3.4347      -3.5765       0.9047       2.0000     5       0.4604      -0.4787      -0.4663      -0.7800       0.7471       2.0000     6       0.4604      -0.4787      -0.4663      -0.7800       0.7471       2.0000     7       0.4604      -0.4787      -0.4663      -0.7800       0.7471       2.0000     8       5.1013       4.1883       4.2149       3.9518       0.7711       2.0000  ``` For the first iteration, here, the fourth column should be identical to the third column of the G0W0 results discussed above. The third column reports the quasiparticle energies obtained from including the off\\-diagonal matrix elements in the eigenvalue equation.  ### Caveats The *QPGW0* (or *scGW0* in VASP.5\\.2\\.11 and older) must be used with great caution, particularly in combination with symmetry.Symmetry is handled in a rather sophisticated manner. Specifically, only the minimal number of required combinations of *q* and *k* points is considered. In this case, symmetry must be applied to restore the full star of *q*. This is done by determining degenerate eigenvalue/eigenvector pairs and restoring their symmetry according to their irreducible representation. Although the procedure is generally relatively reliable, it fails to work properly if the degenerate states do not possess eigenvalues that are sufficiently close due to insufficient convergence in the preceding DFT calculations. That is because states are treated as degenerate if, and only if, their eigenenergies are within 0\\.01 eV. For large supercells with low symmetry, we strongly recommend switching off symmetry. Self\\-consistent EVGW and QPGW calculations------------------------------------------- Self\\-consistent *QPGW* calculations are only supported in a QP picture. As for *QPGW*0, it is possible to update the eigenvalues only (ALGO\\=*EVGW* or *GW* for VASP.5\\.X), or the eigenvalues and one\\-electron orbitals (ALGO\\=*QPGW* or *scGW* in VASP.5\\.2\\.11 and older). In all cases, a QP picture is maintained, *i.e.*, satellite peaks (shake ups and shake downs) can not be accounted for in the self\\-consistency cycle. Self\\-consistent *QPGW* calculations can be performed by simply repeatedly calling VASP using:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = EVGW   \u00a0! \"GW\" in VASP.5.X, eigenvalues only  or alternativelyALGO = QPGW   \u00a0! \"scGW\" in VASP.5.2.11 and older, eigenvalues and one electron orbitals  ``` For QPGW0 or QPGW, nondiagonal terms in the Hamiltonian are accounted for, *e.g.* the linearized QP equation is diagonalized, and the one\\-electron orbitals are updated [\\[3]](#cite_note-shishkin:prl:2007-3).Alternatively (and preferably), the user can specify an electronic iteration counter using NELMGW (NELM in VASP.6\\.2 and older):  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05NELMGW = 3  \u00a0! use NELM in VASP.6.2 and olderALGO = EVGW \u00a0! \"GW\" in VASP.5.X # or  ALGO = QPGW \u00a0! \"scGW\" in VASP.5.2.11 and older  ``` In this case, the one\\-electron energies (\\=QP energies) are updated 3 times (starting from the DFT eigenvalues) in both G and W. For ALGO\\=*QPGW* (or ALGO\\=*scGW* in VASP.5\\.2\\.11 and older), the one electron energies and one electron orbitals are updated 3 times [\\[3]](#cite_note-shishkin:prl:2007-3). As for ALGO \\= *QPGW0* (or *scGW0* in vasp.5\\.2\\.11 and older), the \"static\" COHSEX approximation can be selected by setting NOMEGA\\=1 [\\[6]](#cite_note-bruneval:prb:06-6). To improve convergence to the ground\\-state, the charge density is mixed using a Kerker type mixing starting with VASP.5\\.3\\.2 (see IMIX). The mixing parameters AMIX, BMIX, AMIX\\_MAG, BMIX\\_MAG, AMIN can be adjusted, if convergence problems are encountered.Alternatively, the mixing may be switched off by setting IMIX\\=0 and controlling the step width for the orbitals using the parameter TIME (which defaults to 0\\.4\\). This selects a fairly sophisticated damped MD algorithm that is also used for DFT methods when ALGO\\=Damped. This method is generally more reliable for metals and materials with strong charge sloshing. Additional information about this method is found here. ### Caveats Fully self\\-consistent QPGW calculations with an update of the orbitals in   G {\\\\displaystyle G}  and  W {\\\\displaystyle W} [\\[3]](#cite_note-shishkin:prl:2007-3) require significant care and are prone to diverge (QPGW0 calculations are usually less critical). As discussed, above, one can select this mode using:  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = QPGW \u00a0! or \"scGW\" in VASP.5.2.11 and older, eigenvalues and one-electron orbitalsNELMGW = number of steps\u00a0! use NELM for VASP.6.2 and older  ``` However, one *caveat* applies to this case: when the orbitals are updated, the derivatives of the orbitals with respect to   k {\\\\displaystyle k}  (stored in the WAVEDER file) will become incompatible with the orbitals.This can cause severe problems and convergence to the incorrect solution.  | **Warning:** For metals, in general, we recommend omitting the LOPTICS tag and removing the WAVEDER file from the directory. || --- | For insulators, VASP (version 5\\.3\\.2 or higher) can update the WAVEDER file in each electronic iteration if the finite difference method is used to calculate the first derivative of the orbitals with respect to   k {\\\\displaystyle k}  :  ```System\") = SiCNBANDS = 512ISMEAR = 0\u00a0; SIGMA = 0.05ALGO = QPGW\u00a0! \"scGW\" in VASP.5.2.11 and older, eigenvalues and one-electron orbitalsNELMGW  = 10\u00a0! use NELM in VASP.6.2 and olderLOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.  ``` The combination LOPTICS\\=.TRUE.; LPEAD\\=.TRUE. is required since   \u03b4 H \u2212  \u03f5  n  k  S  \u03b4  k  i {\\\\displaystyle {\\\\frac {\\\\delta H\\-\\\\epsilon \\_{n{\\\\bf {k}}}S}{\\\\delta {k}\\_{i}}}}  is not available for *GW* like methods.LPEAD\\=.TRUE. circumvents this problem by calculating the derivatives of the orbitals using numerical differentiation on the finite k\\-point grid (this option is presently limited to insulators). Vertex corrections are presently not documented. This is a feature still under construction, and we recommend collaborating with the Vienna group if you desperately need that feature. Low scaling GW algorithms========================= The GW implementations in VASP described in the papers of Shishkin *et al.*[\\[1]](#cite_note-shishkin:prb:2006-1) [\\[2]](#cite_note-shishkin:prb:2007-2) avoids storage of the Green's function   G {\\\\displaystyle G}  as well as Fourier transformations between time and frequency domain entirely. That is, all calculations are performed solely on the real frequency axis using Kramers\\-Kronig transformations for convolutions in the equation of   \u03c7 {\\\\displaystyle \\\\chi }  and  \u03a3 {\\\\displaystyle \\\\Sigma }  in reciprocal space.  As of VASP.6 a new cubic scaling GW algorithm [\\[7]](#cite_note-liu:prb:2016-7) (called space\\-time implementation in the following) can be selected. This approach follows the idea of Rojas *et al.* [\\[8]](#cite_note-rojas:prl:1995-8) and performs the GW self\\-consistency cycle on imaginary time   t \u2192 i \u03c4 {\\\\displaystyle t\\\\to i\\\\tau }  and imaginary frequency axes   \u03c9 \u2192 i \u03c9 {\\\\displaystyle \\\\omega \\\\to i\\\\omega }  . | **Tip:** Using the low\\-scaling GW algorithm also calculates the total energy in the Random Phase approximation (RPA), which is described in a separate article. || --- | Low scaling, single shot GW calculations: G0W0R----------------------------------------------- The low\\-scaling analogue of G0W0 is selected with ALGO\\=G0W0R. In contrast to the single\\-shot GW calculations on the real\\-axes, here the self\\-energy   \u03a3 \\=  G  0  W  0 {\\\\displaystyle \\\\Sigma \\=G\\_{0}W\\_{0}}  is determined on the imaginary frequency axis. To this end, the overall scaling is reduced by one order of magnitude and is cubic with respect to the system size,because a small value for NOMEGA can be used (usually \\<20\\).  This algorithm evaluates: * Single\\-shot GW quasiparticle energies (from an analytical continuation of the self\\-energy to the real axis)[\\[7]](#cite_note-liu:prb:2016-7) * Natural orbitals from the first order change of the density matrix (i.e.   G  0  \u03a3  G  0 {\\\\displaystyle G\\_{0}\\\\Sigma G\\_{0}} ), see the NATURALO tag for more information [\\[9]](#cite_note-ramberger:jcp:2019-9). | **Mind:** This selection ignores NELMGW. || --- | Following INCAR file selects the low\\-scaling GW algorithm:  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.  ALGO = G0W0RNOMEGA = 12\u00a0! small number of frequencies necessary  ``` Search the OUTCAR file for the following lines  ```  QP shifts evaluated in KS or natural orbital/ Bruckner basis  k-point   1\u00a0:       0.0000    0.0000    0.0000  band No.  KS-energies   sigma(KS)    QP-e(linear)    Z         QP-e(zeros)     Z        occupation    Imag(E_QP)    QP_DIFF TAG        1      -7.1627      -8.6732      -8.2451       0.7166      -8.2346       0.7026       2.0000      -1.3101       0.0000   2       2      -2.0901      -3.4155      -3.0350       0.7129      -3.0272       0.7011       2.0000      -0.5582      -0.0000   2       3      -2.0901      -3.4155      -3.0350       0.7129      -3.0272       0.7011       2.0000      -0.5582       0.0000   2       4      -2.0901      -3.4155      -3.0350       0.7129      -3.0272       0.7011       2.0000      -0.5582      -0.0000   2       5       0.4603      -0.8219      -0.4904       0.7414      -0.4814       0.7273       2.0000      -0.1902       0.0000   2       6       0.4603      -0.8219      -0.4904       0.7414      -0.4814       0.7273       2.0000      -0.1902      -0.0000   2  ``` Here column four is obtained by a linearization of the self\\-energy around the Kohn\\-Sham energies (second column) and can be compared to the third column of single\\-shot GW calculations on the real axis.Column six represents another set of QP\\-energies that is obtained from the roots of the following equation  \u27e8  \u03d5  n  q  ( 0 )  \\|  T \\+  V  e x t  \\+  V  h  \\+ \u03a3 ( \u03c9 )  \\|  \u03d5  n  q  ( 0 )  \u27e9 \u2212 \u03c9 \\= 0 {\\\\displaystyle \\\\langle \\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\|T\\+V\\_{ext}\\+V\\_{h}\\+\\\\Sigma (\\\\omega )\\|\\\\phi \\_{n{\\\\bf {q}}}^{(0\\)}\\\\rangle \\-\\\\omega \\=0} These roots represent the poles of the Green's function in the spectral representation.  Optional: RPA Forces-------------------- Optionally, RPA forces can be calculated by adding following line to the INCAR:  ``` LRPAFORCE = .TRUE.   ``` After the QP\\-energies, VASP performs a linear\\-response calculation that is required for the RPA forces.[\\[10]](#cite_note-ramberger:prl:118-10)Following data block in the OUTCAR file can be found after a successful run:  ```POSITION                                       TOTAL RPA FORCE (eV/Angst)-----------------------------------------------------------------------------------     0.17542     -0.22348      0.17542        -0.292069      7.581315     -0.292069     1.12850      1.31044      1.12850         0.304683     -7.605527      0.304683-----------------------------------------------------------------------------------   total drift:                                0.012614     -0.024212      0.012614 SUGGESTED UPDATED POSCAR (direct coordinates)  step----------------------------------------------------------------------------------- -0.00958461  -0.00958461   0.13485779         0.04179056   0.04179056   0.00283088  0.25787833   0.25787833   0.22191754        -0.04337198  -0.04337198   0.00431513  ``` | **Warning:** Currently RPA forces for metallic systems are not supported. || --- | Low scaling, partially self\\-consistent GW calculations: EVGW0R--------------------------------------------------------------- | **Mind:** available as of vasp 6\\.4\\.0 || --- | The low\\-scaling analogue of EVGW0 is selected with ALGO\\=EVGW0R.Following INCAR file selects this algorithm:  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.  ALGO = EVGW0R NELMGW = 4 \u00a0! number of iterations in GNOMEGA = 12\u00a0! small number of frequencies necessary  ``` After each iteration, a similar block of data as for ALGO\\=G0W0R calculations is written to OUTCAR showing the NBANDSGW updated quasi\\-particle energies (poles) of the Green's function.  Partially self\\-consistent GW calculations: GW0R------------------------------------------------ The space\\-time implementation allows for true self\\-consistent GW calculations. That is, the solution of the Dyson equation for the Green's function can be obtained with a modest computational effort. The main procedure of a self\\-consistent GW calculation consists of four main steps * Obtain Green's function   G  G  G \u2032  ( j )  (  q  , i  \u03c9  n  ) \\=  \\[  \u03b4  G  G \u2032  \u2212  \u03a3  G  G \u2032  ( j \u2212 1 )  (  q  , i  \u03c9  n  )  G  G  G \u2032  ( j \u2212 1 )  (  q  , i  \u03c9  n  )  ]  \u2212 1  G  G  G \u2032  ( j \u2212 1 )  (  q  , i  \u03c9  n  ) {\\\\displaystyle G\\_{\\\\bf {GG'}}^{(j)}({\\\\bf {q}},i\\\\omega \\_{n})\\=\\\\left\\[\\\\delta \\_{\\\\bf {GG'}}\\-\\\\Sigma \\_{\\\\bf {GG'}}^{(j\\-1\\)}({\\\\bf {q}},i\\\\omega \\_{n})G\\_{\\\\bf {GG'}}^{(j\\-1\\)}({\\\\bf {q}},i\\\\omega \\_{n})\\\\right]^{\\-1}G\\_{\\\\bf {GG'}}^{(j\\-1\\)}({\\\\bf {q}},i\\\\omega \\_{n})} * Compute irreducible polarizability   \u03c7  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212  G  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  )  G  ( j )  (  r  \u2032  ,  r  , \u2212 i  \u03c4  m  ) {\\\\displaystyle \\\\chi ^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})G^{(j)}({\\\\bf {r}}',{\\\\bf {r}},\\-i\\\\tau \\_{m})} * Determine screened potential   W  G  G  \u2032  ( j )  (  q  ,  \u03c9  m  ) \\=  \\[  \u03b4  G  G  \u2032  \u2212  \u03c7  G  G  \u2032  ( j )  (  q  ,  \u03c9  m  )  V  G  G  \u2032  (  q  )  ]  \u2212 1  V  G  G  \u2032  (  q  ) {\\\\displaystyle W\\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(j)}({\\\\bf {q}},\\\\omega \\_{m})\\=\\\\left\\[\\\\delta \\_{{\\\\bf {G}}{\\\\bf {G}}'}\\-\\\\chi \\_{{\\\\bf {G}}{\\\\bf {G}}'}^{(j)}({\\\\bf {q}},\\\\omega \\_{m})V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})\\\\right]^{\\-1}V\\_{{\\\\bf {G}}{\\\\bf {G}}'}({\\\\bf {q}})} * Calculate GW self\\-energy   \u03a3  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  ) \\= \u2212  G  ( j )  (  r  ,  r  \u2032  , i  \u03c4  m  )  W  ( j )  (  r  \u2032  ,  r  , i  \u03c4  m  ) {\\\\displaystyle \\\\Sigma ^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})\\=\\-G^{(j)}({\\\\bf {r}},{\\\\bf {r}}',i\\\\tau \\_{m})W^{(j)}({\\\\bf {r}}',{\\\\bf {r}},i\\\\tau \\_{m})} This procedure can be selected with the following INCAR settings  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.  NELMGW = number of iterations wanted\u00a0! NELM in 6.2 and olderALGO = GW0R\u00a0! ALGO = scGW0R has the same effect here, that is self-consistency in G, no update in W  ``` The number of self\\-consistency steps can be set with the NELMGW tag. Due to efficiency, VASP performs each step in the Hartree\\-Fock basis. This is the reason why there are two sets of QP\\-energies found after the first iteration (one for the QP\\-energies in the KS\\-basis and one for the QP energies in the HF basis)After the second iteration, only the QP energies obtained in the HF basis are printed, and a similar output as follows is found in the OUTCAR file   ```QP shifts evaluated in HF basisk-point   1\u00a0:       0.0000    0.0000    0.0000band No.  KS-energies   sigma(KS)    QP-e(linear)    Z         QP-e(zeros)     Z        occupation    Imag(E_QP)    QP_DIFF TAG      1      -7.1626      -8.6510      -8.2275       0.7154      -8.2173       0.7017       2.0000      -1.3177       0.0000   2     2      -2.0899      -3.4157      -3.0348       0.7127      -3.0269       0.7008       2.0000      -0.5614       0.0000   2     3      -2.0899      -3.4157      -3.0348       0.7127      -3.0269       0.7008       2.0000      -0.5614      -0.0000   2     4      -2.0899      -3.4157      -3.0348       0.7127      -3.0269       0.7008       2.0000      -0.5614       0.0000   2     5       0.4604      -0.8170      -0.4857       0.7407      -0.4768       0.7266       2.0000      -0.1945       0.0000   2     6       0.4604      -0.8170      -0.4857       0.7407      -0.4768       0.7266       2.0000      -0.1945      -0.0000   2     7       0.4604      -0.8170      -0.4857       0.7407      -0.4768       0.7266       2.0000      -0.1945       0.0000   2     8       5.1013       4.0069       4.2594       0.7693       4.2645       0.7598       2.0000      -0.0602       0.0000   2  ``` Here the meaning of each column is the same as for the other low\\-scaling GW algorithms.  Fully self\\-consistent GW caluclations: GWR------------------------------------------- If the screened potential should be updated during the self\\-consistency circle [\\[11]](#cite_note-grumet:prb:2018-11) the following INCAR file can be used  ```System\") = SiCISMEAR = 0\u00a0; SIGMA = 0.05LOPTICS = .TRUE.\u00a0; LPEAD = .TRUE.  NELMGW = number of iterations wanted\u00a0! use NELM in VASP.6.2 and olderALGO = GWR\u00a0! ALGO = scGWR has the same effect here, that is self-consistency in G and W  ``` The output is similar to partially self\\-consistent GW calculations, with the difference that *KS\\-energies* are replaced by the QP energies from previous iteration.  ### Caveats Using this option, similar caveats can be expected as for ALGO\\=*EVGW* and *QPGW* calculations and we recommend to leave out the LOPTICS and LPEAD line for metals.  The cubic scaling space\\-time GW algorithm requires considerably more memory than the corresponding quartic\\-scaling implementations, two Green's functions   G (  r ,  r \u2032  , i  \u03c4  n  ) {\\\\displaystyle G({\\\\bf {r,r'}},i\\\\tau \\_{n})}  have to be stored in real\\-space. To reduce the memory overhead, VASP exploits Fast Fourier Transformations (FFT) to avoid storage of the matrices on the (larger) real space grid, on the one hand. The precision of the FFT can be selected with PRECFOCK, where usually the values *Fast* sufficient. On the other hand, the code avoids storage of redundant information, i.e., both the Green's function and polarizability matrices are distributed as well as the individual imaginary grid points. The distribution of the imaginary grid points can be set by hand with the NTAUPAR and NOMEGAPAR tags, which splits the imaginary grid points NOMEGA into NTAUPAR time and NOMEGAPAR groups. For this purpose both tags have to be divisors of NOMEGA.  The default values are usually reasonable choices provided the tag MAXMEM is set correctly and we strongly recommend to set MAXMEM instead of NTAUPAR.  | **Important:** As of version 6\\.2, MAXMEM is estimated automatically (if not set) from the \"MemAvailable\" entry of the Linux kernel in \"/proc/meminfo\". || --- | The required storage for a low\\-scaling RPA or GW calculation depends mostly on NTAUPAR, the number of MPI groups that share same imaginary time points. A rough estimate for the required bytes is given by   ```(NGX*NGY*NGZ)*(NGX_S*NGY_S*NGZ_S) / ( NCPU  / NTAUPAR ) * 16  ``` where \"NCPU\" is the number of MPI ranks used for the job,\"NGX,NGY,NGZ\" denotes the number of FFT grid points for the exact exchange and \"NGX\\_S,NGY\\_S,NGZ\\_S\" the number of FFT grid points for the supercell. Note, both grids are written to the OUTCAR file after the lines  ```FFT grid for exact exchange (Hartree Fock)FFT grid for supercell:  ``` The smaller NTAUPAR is set, the less memory per node the job requires to finish successfully.  The approximate memory requirement is calculated in advance and printed to screen and OUTCAR as follows:  ```min. memory requirement per mpi rank 1234 MB, per node 9872 MB  ```"}
{"file_name": "QPOINTS.md", "content": "The QPOINTS file specifies the (**q** points) used to sample the Brillouin zone.This file is used in the context of phonon dispersion calculations.The format is the same as the KPOINTS file."}
{"file_name": "STM_of_graphene.md", "content": "Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials Task---- Generation of an STM image of a graphene surface. Input----- ### POSCAR  ```C: Graphite Lattice 1.0 +2.4410462393  +0.0000000000  +0.0000000000  -1.2205231197  +2.1140080551  +0.0000000000  +0.0000000000  +0.0000000000 +10.0000000000  2Cartesian +0.0000000000  +0.0000000000  +0.0000000000  +0.0000000000  +1.4093387034  +0.0000000000   ``` ### INCAR  ```general:  SYSTEM = Graphite surface slap  ENMAX  = 400  ISMEAR =    2 \u00a0; SIGMA = 0.2  ALGO = Fast partial charge densities:  LPARD = .TRUE.  LSEPK = .FALSE.  LSEPB = .FALSE.  NBMOD = -3  EINT = -0.1 0.1 #DOS:  #ISTART = 0  #ICHARG = 2  #LORBIT = 11  ``` ### KPOINTS  ```K-Points 0Monkhorst-Pack9 9 10 0 0  ``` Calculation----------- * This example is carried out in complete analogy to the example STM of graphite. * The sample output for the graphite (left) and graphene (right) STM images should look like the following: [](File_Fig_graphene_STM_1.html) Download--------  Graphene\\_STM.tgz Overview> Ni 100 surface relaxation> Ni 100 surface DOS> Ni 100 surface bandstructure> Ni 111 surface relaxation> CO on Ni 111 surface> Ni 111 surface high precision> partial DOS of CO on Ni 111 surface> vibrational frequencies of CO on Ni 111 surface> STM of graphite> STM of graphene> collective jumps of a Pt adatom on fcc\\-Pt (001\\): Nudged Elastic Band Calculation__Nudged_Elastic_Band_Calculation.html \"Collective jumps of a Pt adatom on fcc-Pt (001): Nudged Elastic Band Calculation\") > List of tutorials"}
